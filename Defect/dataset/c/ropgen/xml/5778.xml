<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5778.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:16"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">find_headers_search_validate</name><parameter_list pos:start="1:40" pos:end="1:74">(<parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:61"><name pos:start="1:41" pos:end="1:56">FLACParseContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">fpc</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">offset</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="29:16">{<block_content pos:start="3:5" pos:end="29:16">
    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:17">FLACFrameInfo</name></type> <name pos:start="3:19" pos:end="3:20">fi</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:24"><decl pos:start="4:5" pos:end="4:23"><type pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:11">uint8_t</name> <modifier pos:start="4:13" pos:end="4:13">*</modifier></type><name pos:start="4:14" pos:end="4:23">header_buf</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name> <init pos:start="5:14" pos:end="5:16">= <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="9:68"><expr pos:start="6:5" pos:end="9:67"><name pos:start="6:5" pos:end="6:14">header_buf</name> <operator pos:start="6:16" pos:end="6:16">=</operator> <call pos:start="6:18" pos:end="9:67"><name pos:start="6:18" pos:end="6:36">flac_fifo_read_wrap</name><argument_list pos:start="6:37" pos:end="9:67">(<argument pos:start="6:38" pos:end="6:40"><expr pos:start="6:38" pos:end="6:40"><name pos:start="6:38" pos:end="6:40">fpc</name></expr></argument>, <argument pos:start="6:43" pos:end="6:48"><expr pos:start="6:43" pos:end="6:48"><name pos:start="6:43" pos:end="6:48">offset</name></expr></argument>,
                                     <argument pos:start="7:38" pos:end="7:58"><expr pos:start="7:38" pos:end="7:58"><name pos:start="7:38" pos:end="7:58">MAX_FRAME_HEADER_SIZE</name></expr></argument>,
                                     <argument pos:start="8:38" pos:end="8:51"><expr pos:start="8:38" pos:end="8:51"><operator pos:start="8:38" pos:end="8:38">&amp;</operator><name pos:start="8:39" pos:end="8:51"><name pos:start="8:39" pos:end="8:41">fpc</name><operator pos:start="8:42" pos:end="8:43">-&gt;</operator><name pos:start="8:44" pos:end="8:51">wrap_buf</name></name></expr></argument>,
                                     <argument pos:start="9:38" pos:end="9:66"><expr pos:start="9:38" pos:end="9:66"><operator pos:start="9:38" pos:end="9:38">&amp;</operator><name pos:start="9:39" pos:end="9:66"><name pos:start="9:39" pos:end="9:41">fpc</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:66">wrap_buf_allocated_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="29:16"><if pos:start="10:5" pos:end="29:16">if <condition pos:start="10:8" pos:end="10:59">(<expr pos:start="10:9" pos:end="10:58"><call pos:start="10:9" pos:end="10:58"><name pos:start="10:9" pos:end="10:29">frame_header_is_valid</name><argument_list pos:start="10:30" pos:end="10:58">(<argument pos:start="10:31" pos:end="10:40"><expr pos:start="10:31" pos:end="10:40"><name pos:start="10:31" pos:end="10:40"><name pos:start="10:31" pos:end="10:33">fpc</name><operator pos:start="10:34" pos:end="10:35">-&gt;</operator><name pos:start="10:36" pos:end="10:40">avctx</name></name></expr></argument>, <argument pos:start="10:43" pos:end="10:52"><expr pos:start="10:43" pos:end="10:52"><name pos:start="10:43" pos:end="10:52">header_buf</name></expr></argument>, <argument pos:start="10:55" pos:end="10:57"><expr pos:start="10:55" pos:end="10:57"><operator pos:start="10:55" pos:end="10:55">&amp;</operator><name pos:start="10:56" pos:end="10:57">fi</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="10:61" pos:end="29:16">{<block_content pos:start="11:9" pos:end="29:16">
        <decl_stmt pos:start="11:9" pos:end="11:54"><decl pos:start="11:9" pos:end="11:53"><type pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:24">FLACHeaderMarker</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:37">end_handle</name> <init pos:start="11:39" pos:end="11:53">= <expr pos:start="11:41" pos:end="11:53"><operator pos:start="11:41" pos:end="11:41">&amp;</operator><name pos:start="11:42" pos:end="11:53"><name pos:start="11:42" pos:end="11:44">fpc</name><operator pos:start="11:45" pos:end="11:46">-&gt;</operator><name pos:start="11:47" pos:end="11:53">headers</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="12:9" pos:end="12:14"><decl pos:start="12:9" pos:end="12:13"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">i</name></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:17"><expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</expr_stmt>
        <while pos:start="14:9" pos:end="29:16">while <condition pos:start="14:15" pos:end="14:27">(<expr pos:start="14:16" pos:end="14:26"><operator pos:start="14:16" pos:end="14:16">*</operator><name pos:start="14:17" pos:end="14:26">end_handle</name></expr>)</condition> <block pos:start="14:29" pos:end="29:16">{<block_content pos:start="15:13" pos:end="29:16">
            <expr_stmt pos:start="15:13" pos:end="15:46"><expr pos:start="15:13" pos:end="15:45"><name pos:start="15:13" pos:end="15:22">end_handle</name> <operator pos:start="15:24" pos:end="15:24">=</operator> <operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:45"><operator pos:start="15:27" pos:end="15:27">(</operator><operator pos:start="15:28" pos:end="15:28">*</operator><name pos:start="15:29" pos:end="15:38">end_handle</name><operator pos:start="15:39" pos:end="15:39">)</operator><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:45">next</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:19"><expr pos:start="16:13" pos:end="16:18"><name pos:start="16:13" pos:end="16:16">size</name><operator pos:start="16:17" pos:end="16:18">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:19">end_handle</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <call pos:start="17:23" pos:end="17:54"><name pos:start="17:23" pos:end="17:32">av_mallocz</name><argument_list pos:start="17:33" pos:end="17:54">(<argument pos:start="17:34" pos:end="17:53"><expr pos:start="17:34" pos:end="17:53"><sizeof pos:start="17:34" pos:end="17:53">sizeof<argument_list pos:start="17:40" pos:end="17:53">(<argument pos:start="17:41" pos:end="17:52"><expr pos:start="17:41" pos:end="17:52"><operator pos:start="17:41" pos:end="17:41">*</operator><operator pos:start="17:42" pos:end="17:42">*</operator><name pos:start="17:43" pos:end="17:52">end_handle</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="29:16"><if pos:start="18:9" pos:end="29:16">if <condition pos:start="18:12" pos:end="18:25">(<expr pos:start="18:13" pos:end="18:24"><operator pos:start="18:13" pos:end="18:13">!</operator><operator pos:start="18:14" pos:end="18:14">*</operator><name pos:start="18:15" pos:end="18:24">end_handle</name></expr>)</condition> <block pos:start="18:27" pos:end="29:16">{<block_content pos:start="19:13" pos:end="29:16">
            <expr_stmt pos:start="19:13" pos:end="20:59"><expr pos:start="19:13" pos:end="20:58"><call pos:start="19:13" pos:end="20:58"><name pos:start="19:13" pos:end="19:18">av_log</name><argument_list pos:start="19:19" pos:end="20:58">(<argument pos:start="19:20" pos:end="19:29"><expr pos:start="19:20" pos:end="19:29"><name pos:start="19:20" pos:end="19:29"><name pos:start="19:20" pos:end="19:22">fpc</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:29">avctx</name></name></expr></argument>, <argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:43">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="20:20" pos:end="20:57"><expr pos:start="20:20" pos:end="20:57"><literal type="string" pos:start="20:20" pos:end="20:57">"couldn't allocate FLACHeaderMarker\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:25"><operator pos:start="21:9" pos:end="21:9">(</operator><operator pos:start="21:10" pos:end="21:10">*</operator><name pos:start="21:11" pos:end="21:20">end_handle</name><operator pos:start="21:21" pos:end="21:21">)</operator><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:25">fi</name></name>           <operator pos:start="21:37" pos:end="21:37">=</operator> <name pos:start="21:39" pos:end="21:40">fi</name></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:45"><expr pos:start="22:9" pos:end="22:44"><name pos:start="22:9" pos:end="22:29"><operator pos:start="22:9" pos:end="22:9">(</operator><operator pos:start="22:10" pos:end="22:10">*</operator><name pos:start="22:11" pos:end="22:20">end_handle</name><operator pos:start="22:21" pos:end="22:21">)</operator><operator pos:start="22:22" pos:end="22:23">-&gt;</operator><name pos:start="22:24" pos:end="22:29">offset</name></name>       <operator pos:start="22:37" pos:end="22:37">=</operator> <name pos:start="22:39" pos:end="22:44">offset</name></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="24:73"><expr pos:start="23:9" pos:end="24:72"><name pos:start="23:9" pos:end="23:35"><operator pos:start="23:9" pos:end="23:9">(</operator><operator pos:start="23:10" pos:end="23:10">*</operator><name pos:start="23:11" pos:end="23:20">end_handle</name><operator pos:start="23:21" pos:end="23:21">)</operator><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:35">link_penalty</name></name> <operator pos:start="23:37" pos:end="23:37">=</operator> <call pos:start="23:39" pos:end="24:72"><name pos:start="23:39" pos:end="23:47">av_malloc</name><argument_list pos:start="23:48" pos:end="24:72">(<argument pos:start="23:49" pos:end="24:71"><expr pos:start="23:49" pos:end="24:71"><sizeof pos:start="23:49" pos:end="23:59">sizeof<argument_list pos:start="23:55" pos:end="23:59">(<argument pos:start="23:56" pos:end="23:58"><expr pos:start="23:56" pos:end="23:58"><name pos:start="23:56" pos:end="23:58">int</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:61" pos:end="23:61">*</operator>
                                            <name pos:start="24:45" pos:end="24:71">FLAC_MAX_SEQUENTIAL_HEADERS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="25:9" pos:end="26:75">for <control pos:start="25:13" pos:end="25:57">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:52"><expr pos:start="25:21" pos:end="25:51"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:51">FLAC_MAX_SEQUENTIAL_HEADERS</name></expr>;</condition> <incr pos:start="25:54" pos:end="25:56"><expr pos:start="25:54" pos:end="25:56"><name pos:start="25:54" pos:end="25:54">i</name><operator pos:start="25:55" pos:end="25:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="26:13" pos:end="26:75"><block_content pos:start="26:13" pos:end="26:75">
            <expr_stmt pos:start="26:13" pos:end="26:75"><expr pos:start="26:13" pos:end="26:74"><name pos:start="26:13" pos:end="26:39"><operator pos:start="26:13" pos:end="26:13">(</operator><operator pos:start="26:14" pos:end="26:14">*</operator><name pos:start="26:15" pos:end="26:24">end_handle</name><operator pos:start="26:25" pos:end="26:25">)</operator><operator pos:start="26:26" pos:end="26:27">-&gt;</operator><name pos:start="26:28" pos:end="26:39">link_penalty</name></name><index pos:start="26:40" pos:end="26:42">[<expr pos:start="26:41" pos:end="26:41"><name pos:start="26:41" pos:end="26:41">i</name></expr>]</index> <operator pos:start="26:44" pos:end="26:44">=</operator> <name pos:start="26:46" pos:end="26:74">FLAC_HEADER_NOT_PENALIZED_YET</name></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">fpc</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:29">nb_headers_found</name></name><operator pos:start="27:30" pos:end="27:31">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:15"><expr pos:start="28:9" pos:end="28:14"><name pos:start="28:9" pos:end="28:12">size</name><operator pos:start="28:13" pos:end="28:14">++</operator></expr>;</expr_stmt>
    <return pos:start="29:5" pos:end="29:16">return <expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">size</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></while></block_content></block></if></if_stmt></block_content></block></function></unit>
