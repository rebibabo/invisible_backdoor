<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16181.c" pos:tabs="8"><function pos:start="1:1" pos:end="52:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ptx_decode_frame</name><parameter_list pos:start="1:28" pos:end="2:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:77">data_size</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:43"><decl pos:start="2:29" pos:end="2:43"><type pos:start="2:29" pos:end="2:43"><name pos:start="2:29" pos:end="2:36">AVPacket</name> <modifier pos:start="2:38" pos:end="2:38">*</modifier></type><name pos:start="2:39" pos:end="2:43">avpkt</name></decl></parameter>)</parameter_list> <block pos:start="2:46" pos:end="52:1">{<block_content pos:start="3:5" pos:end="51:40">
    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:19"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:17">uint8_t</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:22">buf</name> <init pos:start="3:24" pos:end="3:36">= <expr pos:start="3:26" pos:end="3:36"><name pos:start="3:26" pos:end="3:36"><name pos:start="3:26" pos:end="3:30">avpkt</name><operator pos:start="3:31" pos:end="3:32">-&gt;</operator><name pos:start="3:33" pos:end="3:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:55"><decl pos:start="4:5" pos:end="4:54"><type pos:start="4:5" pos:end="4:19"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:17">uint8_t</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:26">buf_end</name> <init pos:start="4:28" pos:end="4:54">= <expr pos:start="4:30" pos:end="4:54"><name pos:start="4:30" pos:end="4:40"><name pos:start="4:30" pos:end="4:34">avpkt</name><operator pos:start="4:35" pos:end="4:36">-&gt;</operator><name pos:start="4:37" pos:end="4:40">data</name></name> <operator pos:start="4:42" pos:end="4:42">+</operator> <name pos:start="4:44" pos:end="4:54"><name pos:start="4:44" pos:end="4:48">avpkt</name><operator pos:start="4:49" pos:end="4:50">-&gt;</operator><name pos:start="4:51" pos:end="4:54">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:14">PTXContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier> <specifier pos:start="5:18" pos:end="5:22">const</specifier></type> <name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:28"><decl pos:start="6:5" pos:end="6:27"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:11">AVFrame</name> <modifier pos:start="6:13" pos:end="6:13">*</modifier></type><name pos:start="6:14" pos:end="6:20">picture</name> <init pos:start="6:22" pos:end="6:27">= <expr pos:start="6:24" pos:end="6:27"><name pos:start="6:24" pos:end="6:27">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier> <specifier pos:start="7:15" pos:end="7:19">const</specifier></type> <name pos:start="7:21" pos:end="7:21">p</name> <init pos:start="7:23" pos:end="7:35">= <expr pos:start="7:25" pos:end="7:35"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:35">picture</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:58"><decl pos:start="8:5" pos:end="8:23"><type pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:12">unsigned</name> <name pos:start="8:14" pos:end="8:16">int</name></type> <name pos:start="8:18" pos:end="8:23">offset</name></decl>, <decl pos:start="8:26" pos:end="8:26"><type ref="prev" pos:start="8:5" pos:end="8:16"/><name pos:start="8:26" pos:end="8:26">w</name></decl>, <decl pos:start="8:29" pos:end="8:29"><type ref="prev" pos:start="8:5" pos:end="8:16"/><name pos:start="8:29" pos:end="8:29">h</name></decl>, <decl pos:start="8:32" pos:end="8:32"><type ref="prev" pos:start="8:5" pos:end="8:16"/><name pos:start="8:32" pos:end="8:32">y</name></decl>, <decl pos:start="8:35" pos:end="8:40"><type ref="prev" pos:start="8:5" pos:end="8:16"/><name pos:start="8:35" pos:end="8:40">stride</name></decl>, <decl pos:start="8:43" pos:end="8:57"><type ref="prev" pos:start="8:5" pos:end="8:16"/><name pos:start="8:43" pos:end="8:57">bytes_per_pixel</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">ptr</name></decl>;</decl_stmt>
    <if_stmt pos:start="10:5" pos:end="11:35"><if pos:start="10:5" pos:end="11:35">if <condition pos:start="10:8" pos:end="10:27">(<expr pos:start="10:9" pos:end="10:26"><name pos:start="10:9" pos:end="10:15">buf_end</name> <operator pos:start="10:17" pos:end="10:17">-</operator> <name pos:start="10:19" pos:end="10:21">buf</name> <operator pos:start="10:23" pos:end="10:23">&lt;</operator> <literal type="number" pos:start="10:25" pos:end="10:26">14</literal></expr>)</condition><block type="pseudo" pos:start="11:5" pos:end="11:35"><block_content pos:start="11:5" pos:end="11:35">
    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:10">offset</name>          <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:29">AV_RL16</name><argument_list pos:start="11:30" pos:end="11:34">(<argument pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:33">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:37"><expr pos:start="12:5" pos:end="12:36"><name pos:start="12:5" pos:end="12:5">w</name>               <operator pos:start="12:21" pos:end="12:21">=</operator> <call pos:start="12:23" pos:end="12:36"><name pos:start="12:23" pos:end="12:29">AV_RL16</name><argument_list pos:start="12:30" pos:end="12:36">(<argument pos:start="12:31" pos:end="12:35"><expr pos:start="12:31" pos:end="12:35"><name pos:start="12:31" pos:end="12:33">buf</name><operator pos:start="12:34" pos:end="12:34">+</operator><literal type="number" pos:start="12:35" pos:end="12:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:5">h</name>               <operator pos:start="13:21" pos:end="13:21">=</operator> <call pos:start="13:23" pos:end="13:37"><name pos:start="13:23" pos:end="13:29">AV_RL16</name><argument_list pos:start="13:30" pos:end="13:37">(<argument pos:start="13:31" pos:end="13:36"><expr pos:start="13:31" pos:end="13:36"><name pos:start="13:31" pos:end="13:33">buf</name><operator pos:start="13:34" pos:end="13:34">+</operator><literal type="number" pos:start="13:35" pos:end="13:36">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:43"><expr pos:start="14:5" pos:end="14:42"><name pos:start="14:5" pos:end="14:19">bytes_per_pixel</name> <operator pos:start="14:21" pos:end="14:21">=</operator> <call pos:start="14:23" pos:end="14:37"><name pos:start="14:23" pos:end="14:29">AV_RL16</name><argument_list pos:start="14:30" pos:end="14:37">(<argument pos:start="14:31" pos:end="14:36"><expr pos:start="14:31" pos:end="14:36"><name pos:start="14:31" pos:end="14:33">buf</name><operator pos:start="14:34" pos:end="14:34">+</operator><literal type="number" pos:start="14:35" pos:end="14:36">12</literal></expr></argument>)</argument_list></call> <operator pos:start="14:39" pos:end="14:40">&gt;&gt;</operator> <literal type="number" pos:start="14:42" pos:end="14:42">3</literal></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="18:5"><if pos:start="15:5" pos:end="18:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:23">bytes_per_pixel</name> <operator pos:start="15:25" pos:end="15:26">!=</operator> <literal type="number" pos:start="15:28" pos:end="15:28">2</literal></expr>)</condition> <block pos:start="15:31" pos:end="18:5">{<block_content pos:start="16:9" pos:end="17:18">
        <expr_stmt pos:start="16:9" pos:end="16:69"><expr pos:start="16:9" pos:end="16:68"><call pos:start="16:9" pos:end="16:68"><name pos:start="16:9" pos:end="16:29">av_log_ask_for_sample</name><argument_list pos:start="16:30" pos:end="16:68">(<argument pos:start="16:31" pos:end="16:35"><expr pos:start="16:31" pos:end="16:35"><name pos:start="16:31" pos:end="16:35">avctx</name></expr></argument>, <argument pos:start="16:38" pos:end="16:67"><expr pos:start="16:38" pos:end="16:67"><literal type="string" pos:start="16:38" pos:end="16:67">"Image format is not RGB15.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:9">avctx</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:18">pix_fmt</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:35">PIX_FMT_RGB555</name></expr>;</expr_stmt>
    <if_stmt pos:start="20:5" pos:end="21:57"><if pos:start="20:5" pos:end="21:57">if <condition pos:start="20:8" pos:end="20:23">(<expr pos:start="20:9" pos:end="20:22"><name pos:start="20:9" pos:end="20:14">offset</name> <operator pos:start="20:16" pos:end="20:17">!=</operator> <literal type="number" pos:start="20:19" pos:end="20:22">0x2c</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:57"><block_content pos:start="21:9" pos:end="21:57">
        <expr_stmt pos:start="21:9" pos:end="21:57"><expr pos:start="21:9" pos:end="21:56"><call pos:start="21:9" pos:end="21:56"><name pos:start="21:9" pos:end="21:29">av_log_ask_for_sample</name><argument_list pos:start="21:30" pos:end="21:56">(<argument pos:start="21:31" pos:end="21:35"><expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:35">avctx</name></expr></argument>, <argument pos:start="21:38" pos:end="21:55"><expr pos:start="21:38" pos:end="21:55"><literal type="string" pos:start="21:38" pos:end="21:55">"offset != 0x2c\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:18"><expr pos:start="22:5" pos:end="22:17"><name pos:start="22:5" pos:end="22:7">buf</name> <operator pos:start="22:9" pos:end="22:10">+=</operator> <name pos:start="22:12" pos:end="22:17">offset</name></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="24:40"><if pos:start="23:5" pos:end="24:40">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">p</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">data</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="24:9" pos:end="24:40"><block_content pos:start="24:9" pos:end="24:40">
        <expr_stmt pos:start="24:9" pos:end="24:40"><expr pos:start="24:9" pos:end="24:39"><call pos:start="24:9" pos:end="24:39"><name pos:start="24:9" pos:end="24:29"><name pos:start="24:9" pos:end="24:13">avctx</name><operator pos:start="24:14" pos:end="24:15">-&gt;</operator><name pos:start="24:16" pos:end="24:29">release_buffer</name></name><argument_list pos:start="24:30" pos:end="24:39">(<argument pos:start="24:31" pos:end="24:35"><expr pos:start="24:31" pos:end="24:35"><name pos:start="24:31" pos:end="24:35">avctx</name></expr></argument>, <argument pos:start="24:38" pos:end="24:38"><expr pos:start="24:38" pos:end="24:38"><name pos:start="24:38" pos:end="24:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="25:5" pos:end="26:18"><if pos:start="25:5" pos:end="26:18">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><call pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:27">av_image_check_size</name><argument_list pos:start="25:28" pos:end="25:43">(<argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">w</name></expr></argument>, <argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">h</name></expr></argument>, <argument pos:start="25:35" pos:end="25:35"><expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:42">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="26:9" pos:end="26:18"><block_content pos:start="26:9" pos:end="26:18">
        <return pos:start="26:9" pos:end="26:18">return <expr pos:start="26:16" pos:end="26:17"><operator pos:start="26:16" pos:end="26:16">-</operator><literal type="number" pos:start="26:17" pos:end="26:17">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="27:5" pos:end="28:44"><if pos:start="27:5" pos:end="28:44">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:9">w</name> <operator pos:start="27:11" pos:end="27:12">!=</operator> <name pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:18">avctx</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:25">width</name></name> <operator pos:start="27:27" pos:end="27:28">||</operator> <name pos:start="27:30" pos:end="27:30">h</name> <operator pos:start="27:32" pos:end="27:33">!=</operator> <name pos:start="27:35" pos:end="27:47"><name pos:start="27:35" pos:end="27:39">avctx</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:47">height</name></name></expr>)</condition><block type="pseudo" pos:start="28:9" pos:end="28:44"><block_content pos:start="28:9" pos:end="28:44">
        <expr_stmt pos:start="28:9" pos:end="28:44"><expr pos:start="28:9" pos:end="28:43"><call pos:start="28:9" pos:end="28:43"><name pos:start="28:9" pos:end="28:30">avcodec_set_dimensions</name><argument_list pos:start="28:31" pos:end="28:43">(<argument pos:start="28:32" pos:end="28:36"><expr pos:start="28:32" pos:end="28:36"><name pos:start="28:32" pos:end="28:36">avctx</name></expr></argument>, <argument pos:start="28:39" pos:end="28:39"><expr pos:start="28:39" pos:end="28:39"><name pos:start="28:39" pos:end="28:39">w</name></expr></argument>, <argument pos:start="28:42" pos:end="28:42"><expr pos:start="28:42" pos:end="28:42"><name pos:start="28:42" pos:end="28:42">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="29:5" pos:end="32:5"><if pos:start="29:5" pos:end="32:5">if <condition pos:start="29:8" pos:end="29:40">(<expr pos:start="29:9" pos:end="29:39"><call pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">get_buffer</name></name><argument_list pos:start="29:26" pos:end="29:35">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31">avctx</name></expr></argument>, <argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">p</name></expr></argument>)</argument_list></call> <operator pos:start="29:37" pos:end="29:37">&lt;</operator> <literal type="number" pos:start="29:39" pos:end="29:39">0</literal></expr>)</condition> <block pos:start="29:42" pos:end="32:5">{<block_content pos:start="30:9" pos:end="31:18">
        <expr_stmt pos:start="30:9" pos:end="30:61"><expr pos:start="30:9" pos:end="30:60"><call pos:start="30:9" pos:end="30:60"><name pos:start="30:9" pos:end="30:14">av_log</name><argument_list pos:start="30:15" pos:end="30:60">(<argument pos:start="30:16" pos:end="30:20"><expr pos:start="30:16" pos:end="30:20"><name pos:start="30:16" pos:end="30:20">avctx</name></expr></argument>, <argument pos:start="30:23" pos:end="30:34"><expr pos:start="30:23" pos:end="30:34"><name pos:start="30:23" pos:end="30:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="30:37" pos:end="30:59"><expr pos:start="30:37" pos:end="30:59"><literal type="string" pos:start="30:37" pos:end="30:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:5">p</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:16">pict_type</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:36">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:24"><expr pos:start="34:5" pos:end="34:23"><name pos:start="34:5" pos:end="34:7">ptr</name>    <operator pos:start="34:12" pos:end="34:12">=</operator> <name pos:start="34:14" pos:end="34:23"><name pos:start="34:14" pos:end="34:14">p</name><operator pos:start="34:15" pos:end="34:16">-&gt;</operator><name pos:start="34:17" pos:end="34:20">data</name><index pos:start="34:21" pos:end="34:23">[<expr pos:start="34:22" pos:end="34:22"><literal type="number" pos:start="34:22" pos:end="34:22">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:10">stride</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:27"><name pos:start="35:14" pos:end="35:14">p</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:24">linesize</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <for pos:start="36:5" pos:end="48:5">for <control pos:start="36:9" pos:end="36:23">(<init pos:start="36:10" pos:end="36:13"><expr pos:start="36:10" pos:end="36:12"><name pos:start="36:10" pos:end="36:10">y</name><operator pos:start="36:11" pos:end="36:11">=</operator><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr>;</init> <condition pos:start="36:15" pos:end="36:18"><expr pos:start="36:15" pos:end="36:17"><name pos:start="36:15" pos:end="36:15">y</name><operator pos:start="36:16" pos:end="36:16">&lt;</operator><name pos:start="36:17" pos:end="36:17">h</name></expr>;</condition> <incr pos:start="36:20" pos:end="36:22"><expr pos:start="36:20" pos:end="36:22"><name pos:start="36:20" pos:end="36:20">y</name><operator pos:start="36:21" pos:end="36:22">++</operator></expr></incr>)</control> <block pos:start="36:25" pos:end="48:5">{<block_content pos:start="37:9" pos:end="47:33">
        <if_stmt pos:start="37:9" pos:end="40:0"><if pos:start="37:9" pos:end="40:0">if <condition pos:start="37:12" pos:end="37:48">(<expr pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:19">buf_end</name> <operator pos:start="37:21" pos:end="37:21">-</operator> <name pos:start="37:23" pos:end="37:25">buf</name> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <name pos:start="37:29" pos:end="37:29">w</name> <operator pos:start="37:31" pos:end="37:31">*</operator> <name pos:start="37:33" pos:end="37:47">bytes_per_pixel</name></expr>)</condition><block type="pseudo" pos:start="38:13" pos:end="40:0"><block_content pos:start="38:13" pos:end="40:0">
            <break pos:start="38:13" pos:end="40:0">break;</break></block_content></block></if></if_stmt>
<cpp:if pos:start="39:1" pos:end="39:18">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:18">HAVE_BIGENDIAN</name></expr></cpp:if>
        <decl_stmt pos:start="40:9" pos:end="40:23"><decl pos:start="40:9" pos:end="40:22"><type pos:start="40:9" pos:end="40:20"><name pos:start="40:9" pos:end="40:16">unsigned</name> <name pos:start="40:18" pos:end="40:20">int</name></type> <name pos:start="40:22" pos:end="40:22">x</name></decl>;</decl_stmt>
        <for pos:start="41:9" pos:end="44:0">for <control pos:start="41:13" pos:end="41:58">(<init pos:start="41:14" pos:end="41:17"><expr pos:start="41:14" pos:end="41:16"><name pos:start="41:14" pos:end="41:14">x</name><operator pos:start="41:15" pos:end="41:15">=</operator><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</init> <condition pos:start="41:19" pos:end="41:38"><expr pos:start="41:19" pos:end="41:37"><name pos:start="41:19" pos:end="41:19">x</name><operator pos:start="41:20" pos:end="41:20">&lt;</operator><name pos:start="41:21" pos:end="41:21">w</name><operator pos:start="41:22" pos:end="41:22">*</operator><name pos:start="41:23" pos:end="41:37">bytes_per_pixel</name></expr>;</condition> <incr pos:start="41:40" pos:end="41:57"><expr pos:start="41:40" pos:end="41:57"><name pos:start="41:40" pos:end="41:40">x</name><operator pos:start="41:41" pos:end="41:42">+=</operator><name pos:start="41:43" pos:end="41:57">bytes_per_pixel</name></expr></incr>)</control><block type="pseudo" pos:start="42:13" pos:end="44:0"><block_content pos:start="42:13" pos:end="44:0">
            <expr_stmt pos:start="42:13" pos:end="44:0"><expr pos:start="42:13" pos:end="42:42"><call pos:start="42:13" pos:end="42:42"><name pos:start="42:13" pos:end="42:19">AV_WN16</name><argument_list pos:start="42:20" pos:end="42:42">(<argument pos:start="42:21" pos:end="42:25"><expr pos:start="42:21" pos:end="42:25"><name pos:start="42:21" pos:end="42:23">ptr</name><operator pos:start="42:24" pos:end="42:24">+</operator><name pos:start="42:25" pos:end="42:25">x</name></expr></argument>, <argument pos:start="42:28" pos:end="42:41"><expr pos:start="42:28" pos:end="42:41"><call pos:start="42:28" pos:end="42:41"><name pos:start="42:28" pos:end="42:34">AV_RL16</name><argument_list pos:start="42:35" pos:end="42:41">(<argument pos:start="42:36" pos:end="42:40"><expr pos:start="42:36" pos:end="42:40"><name pos:start="42:36" pos:end="42:38">buf</name><operator pos:start="42:39" pos:end="42:39">+</operator><name pos:start="42:40" pos:end="42:40">x</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<cpp:else pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:5">else</cpp:directive></cpp:else>
        <expr_stmt pos:start="44:9" pos:end="46:0"><expr pos:start="44:9" pos:end="44:43"><call pos:start="44:9" pos:end="44:43"><name pos:start="44:9" pos:end="44:14">memcpy</name><argument_list pos:start="44:15" pos:end="44:43">(<argument pos:start="44:16" pos:end="44:18"><expr pos:start="44:16" pos:end="44:18"><name pos:start="44:16" pos:end="44:18">ptr</name></expr></argument>, <argument pos:start="44:21" pos:end="44:23"><expr pos:start="44:21" pos:end="44:23"><name pos:start="44:21" pos:end="44:23">buf</name></expr></argument>, <argument pos:start="44:26" pos:end="44:42"><expr pos:start="44:26" pos:end="44:42"><name pos:start="44:26" pos:end="44:26">w</name><operator pos:start="44:27" pos:end="44:27">*</operator><name pos:start="44:28" pos:end="44:42">bytes_per_pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>
        <expr_stmt pos:start="46:9" pos:end="46:22"><expr pos:start="46:9" pos:end="46:21"><name pos:start="46:9" pos:end="46:11">ptr</name> <operator pos:start="46:13" pos:end="46:14">+=</operator> <name pos:start="46:16" pos:end="46:21">stride</name></expr>;</expr_stmt>
        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:11">buf</name> <operator pos:start="47:13" pos:end="47:14">+=</operator> <name pos:start="47:16" pos:end="47:16">w</name><operator pos:start="47:17" pos:end="47:17">*</operator><name pos:start="47:18" pos:end="47:32">bytes_per_pixel</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><operator pos:start="49:5" pos:end="49:5">*</operator><name pos:start="49:6" pos:end="49:12">picture</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:25">picture</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:35"><expr pos:start="50:5" pos:end="50:34"><operator pos:start="50:5" pos:end="50:5">*</operator><name pos:start="50:6" pos:end="50:14">data_size</name> <operator pos:start="50:16" pos:end="50:16">=</operator> <sizeof pos:start="50:18" pos:end="50:34">sizeof<argument_list pos:start="50:24" pos:end="50:34">(<argument pos:start="50:25" pos:end="50:33"><expr pos:start="50:25" pos:end="50:33"><name pos:start="50:25" pos:end="50:33">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <return pos:start="51:5" pos:end="51:40">return <expr pos:start="51:12" pos:end="51:39"><name pos:start="51:12" pos:end="51:17">offset</name> <operator pos:start="51:19" pos:end="51:19">+</operator> <name pos:start="51:21" pos:end="51:21">w</name><operator pos:start="51:22" pos:end="51:22">*</operator><name pos:start="51:23" pos:end="51:23">h</name><operator pos:start="51:24" pos:end="51:24">*</operator><name pos:start="51:25" pos:end="51:39">bytes_per_pixel</name></expr>;</return>
</block_content>}</block></function></unit>
