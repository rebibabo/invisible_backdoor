<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13139.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mov_read_custom</name><parameter_list pos:start="1:27" pos:end="1:72">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">MOVContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:53">AVIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">end</name> <init pos:start="5:17" pos:end="5:43">= <expr pos:start="5:19" pos:end="5:43"><call pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:27">avio_tell</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="5:33" pos:end="5:33">+</operator> <name pos:start="5:35" pos:end="5:43"><name pos:start="5:35" pos:end="5:38">atom</name><operator pos:start="5:39" pos:end="5:39">.</operator><name pos:start="5:40" pos:end="5:43">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">key</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>, <decl pos:start="7:26" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:29">val</name> <init pos:start="7:31" pos:end="7:36">= <expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">NULL</name></expr></init></decl>, <decl pos:start="7:39" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:43">mean</name> <init pos:start="7:45" pos:end="7:50">= <expr pos:start="7:47" pos:end="7:50"><name pos:start="7:47" pos:end="7:50">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">MOVStreamContext</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">sc</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:30">(<expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fc</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">nb_streams</name></name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:44"><name pos:start="21:10" pos:end="21:10">c</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:14">fc</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">streams</name><index pos:start="21:24" pos:end="21:44">[<expr pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:25">c</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">fc</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:41">nb_streams</name></name><operator pos:start="21:42" pos:end="21:42">-</operator><literal type="number" pos:start="21:43" pos:end="21:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:6">sc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:22"><name pos:start="23:10" pos:end="23:11">st</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">priv_data</name></name></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="99:5">for <control pos:start="27:9" pos:end="27:27">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">3</literal></expr>;</condition> <incr pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:24">i</name><operator pos:start="27:25" pos:end="27:26">++</operator></expr></incr>)</control> <block pos:start="27:29" pos:end="99:5">{<block_content pos:start="29:9" pos:end="97:22">

        <decl_stmt pos:start="29:9" pos:end="29:20"><decl pos:start="29:9" pos:end="29:19"><type pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:15">uint8_t</name> <modifier pos:start="29:17" pos:end="29:17">*</modifier><modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:19">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:26"><decl pos:start="31:9" pos:end="31:20"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">uint32_t</name></type> <name pos:start="31:18" pos:end="31:20">len</name></decl>, <decl pos:start="31:23" pos:end="31:25"><type ref="prev" pos:start="31:9" pos:end="31:16"/><name pos:start="31:23" pos:end="31:25">tag</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:16"><decl pos:start="33:9" pos:end="33:15"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:15">ret</name></decl>;</decl_stmt>



        <if_stmt pos:start="37:9" pos:end="39:18"><if pos:start="37:9" pos:end="39:18">if <condition pos:start="37:12" pos:end="37:38">(<expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:15">end</name> <operator pos:start="37:17" pos:end="37:17">-</operator> <call pos:start="37:19" pos:end="37:31"><name pos:start="37:19" pos:end="37:27">avio_tell</name><argument_list pos:start="37:28" pos:end="37:31">(<argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><name pos:start="37:29" pos:end="37:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="37:33" pos:end="37:34">&lt;=</operator> <literal type="number" pos:start="37:36" pos:end="37:37">12</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:18"><block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:11">len</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:23">avio_rb32</name><argument_list pos:start="43:24" pos:end="43:27">(<argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:11">tag</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:27"><name pos:start="45:15" pos:end="45:23">avio_rl32</name><argument_list pos:start="45:24" pos:end="45:27">(<argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:25"><expr pos:start="47:9" pos:end="47:24"><call pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:17">avio_skip</name><argument_list pos:start="47:18" pos:end="47:24">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>, <argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><literal type="number" pos:start="47:23" pos:end="47:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="47:27" pos:end="47:34">// flags</comment>



        <if_stmt pos:start="51:9" pos:end="53:18"><if pos:start="51:9" pos:end="53:18">if <condition pos:start="51:12" pos:end="51:55">(<expr pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:15">len</name> <argument_list type="generic" pos:start="51:17" pos:end="51:34">&lt; <argument pos:start="51:19" pos:end="51:32"><expr pos:start="51:19" pos:end="51:32"><literal type="number" pos:start="51:19" pos:end="51:20">12</literal> <operator pos:start="51:22" pos:end="51:23">||</operator> <name pos:start="51:25" pos:end="51:27">len</name> <operator pos:start="51:29" pos:end="51:29">-</operator> <literal type="number" pos:start="51:31" pos:end="51:32">12</literal></expr></argument> &gt;</argument_list></name> <name pos:start="51:36" pos:end="51:38">end</name> <operator pos:start="51:40" pos:end="51:40">-</operator> <call pos:start="51:42" pos:end="51:54"><name pos:start="51:42" pos:end="51:50">avio_tell</name><argument_list pos:start="51:51" pos:end="51:54">(<argument pos:start="51:52" pos:end="51:53"><expr pos:start="51:52" pos:end="51:53"><name pos:start="51:52" pos:end="51:53">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:18"><block_content pos:start="53:13" pos:end="53:18">

            <break pos:start="53:13" pos:end="53:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:18"><expr pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">len</name> <operator pos:start="55:13" pos:end="55:14">-=</operator> <literal type="number" pos:start="55:16" pos:end="55:17">12</literal></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="77:18"><if pos:start="59:9" pos:end="61:22">if <condition pos:start="59:12" pos:end="59:45">(<expr pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:15">tag</name> <operator pos:start="59:17" pos:end="59:18">==</operator> <call pos:start="59:20" pos:end="59:44"><name pos:start="59:20" pos:end="59:24">MKTAG</name><argument_list pos:start="59:25" pos:end="59:44">(<argument pos:start="59:26" pos:end="59:28"><expr pos:start="59:26" pos:end="59:28"><literal type="char" pos:start="59:26" pos:end="59:28">'m'</literal></expr></argument>, <argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><literal type="char" pos:start="59:31" pos:end="59:33">'e'</literal></expr></argument>, <argument pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><literal type="char" pos:start="59:36" pos:end="59:38">'a'</literal></expr></argument>, <argument pos:start="59:41" pos:end="59:43"><expr pos:start="59:41" pos:end="59:43"><literal type="char" pos:start="59:41" pos:end="59:43">'n'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:22"><block_content pos:start="61:13" pos:end="61:22">

            <expr_stmt pos:start="61:13" pos:end="61:22"><expr pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:13">p</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <operator pos:start="61:17" pos:end="61:17">&amp;</operator><name pos:start="61:18" pos:end="61:21">mean</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="63:9" pos:end="65:21">else if <condition pos:start="63:17" pos:end="63:50">(<expr pos:start="63:18" pos:end="63:49"><name pos:start="63:18" pos:end="63:20">tag</name> <operator pos:start="63:22" pos:end="63:23">==</operator> <call pos:start="63:25" pos:end="63:49"><name pos:start="63:25" pos:end="63:29">MKTAG</name><argument_list pos:start="63:30" pos:end="63:49">(<argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><literal type="char" pos:start="63:31" pos:end="63:33">'n'</literal></expr></argument>, <argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><literal type="char" pos:start="63:36" pos:end="63:38">'a'</literal></expr></argument>, <argument pos:start="63:41" pos:end="63:43"><expr pos:start="63:41" pos:end="63:43"><literal type="char" pos:start="63:41" pos:end="63:43">'m'</literal></expr></argument>, <argument pos:start="63:46" pos:end="63:48"><expr pos:start="63:46" pos:end="63:48"><literal type="char" pos:start="63:46" pos:end="63:48">'e'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:21"><block_content pos:start="65:13" pos:end="65:21">

            <expr_stmt pos:start="65:13" pos:end="65:21"><expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:13">p</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <operator pos:start="65:17" pos:end="65:17">&amp;</operator><name pos:start="65:18" pos:end="65:20">key</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="67:9" pos:end="75:9">else if <condition pos:start="67:17" pos:end="67:61">(<expr pos:start="67:18" pos:end="67:60"><name pos:start="67:18" pos:end="67:20">tag</name> <operator pos:start="67:22" pos:end="67:23">==</operator> <call pos:start="67:25" pos:end="67:49"><name pos:start="67:25" pos:end="67:29">MKTAG</name><argument_list pos:start="67:30" pos:end="67:49">(<argument pos:start="67:31" pos:end="67:33"><expr pos:start="67:31" pos:end="67:33"><literal type="char" pos:start="67:31" pos:end="67:33">'d'</literal></expr></argument>, <argument pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><literal type="char" pos:start="67:36" pos:end="67:38">'a'</literal></expr></argument>, <argument pos:start="67:41" pos:end="67:43"><expr pos:start="67:41" pos:end="67:43"><literal type="char" pos:start="67:41" pos:end="67:43">'t'</literal></expr></argument>, <argument pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><literal type="char" pos:start="67:46" pos:end="67:48">'a'</literal></expr></argument>)</argument_list></call> <operator pos:start="67:51" pos:end="67:52">&amp;&amp;</operator> <name pos:start="67:54" pos:end="67:56">len</name> <operator pos:start="67:58" pos:end="67:58">&gt;</operator> <literal type="number" pos:start="67:60" pos:end="67:60">4</literal></expr>)</condition> <block pos:start="67:63" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:21">

            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><call pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:21">avio_skip</name><argument_list pos:start="69:22" pos:end="69:28">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">pb</name></expr></argument>, <argument pos:start="69:27" pos:end="69:27"><expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:21"><expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:15">len</name> <operator pos:start="71:17" pos:end="71:18">-=</operator> <literal type="number" pos:start="71:20" pos:end="71:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:21"><expr pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:13">p</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <operator pos:start="73:17" pos:end="73:17">&amp;</operator><name pos:start="73:18" pos:end="73:20">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="77:18">else<block type="pseudo" pos:start="77:13" pos:end="77:18"><block_content pos:start="77:13" pos:end="77:18">

            <break pos:start="77:13" pos:end="77:18">break;</break></block_content></block></else></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:10">p</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="81:31"><name pos:start="81:14" pos:end="81:22">av_malloc</name><argument_list pos:start="81:23" pos:end="81:31">(<argument pos:start="81:24" pos:end="81:30"><expr pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:26">len</name> <operator pos:start="81:28" pos:end="81:28">+</operator> <literal type="number" pos:start="81:30" pos:end="81:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:18"><if pos:start="83:9" pos:end="85:18">if <condition pos:start="83:12" pos:end="83:16">(<expr pos:start="83:13" pos:end="83:15"><operator pos:start="83:13" pos:end="83:13">!</operator><operator pos:start="83:14" pos:end="83:14">*</operator><name pos:start="83:15" pos:end="83:15">p</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:18"><block_content pos:start="85:13" pos:end="85:18">

            <break pos:start="85:13" pos:end="85:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:41"><name pos:start="87:15" pos:end="87:28">ffio_read_size</name><argument_list pos:start="87:29" pos:end="87:41">(<argument pos:start="87:30" pos:end="87:31"><expr pos:start="87:30" pos:end="87:31"><name pos:start="87:30" pos:end="87:31">pb</name></expr></argument>, <argument pos:start="87:34" pos:end="87:35"><expr pos:start="87:34" pos:end="87:35"><operator pos:start="87:34" pos:end="87:34">*</operator><name pos:start="87:35" pos:end="87:35">p</name></expr></argument>, <argument pos:start="87:38" pos:end="87:40"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:20">(<expr pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">&lt;</operator> <literal type="number" pos:start="89:19" pos:end="89:19">0</literal></expr>)</condition> <block pos:start="89:22" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:23">

            <expr_stmt pos:start="91:13" pos:end="91:24"><expr pos:start="91:13" pos:end="91:23"><call pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:20">av_freep</name><argument_list pos:start="91:21" pos:end="91:23">(<argument pos:start="91:22" pos:end="91:22"><expr pos:start="91:22" pos:end="91:22"><name pos:start="91:22" pos:end="91:22">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:23">return <expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:22"><expr pos:start="97:9" pos:end="97:21"><operator pos:start="97:9" pos:end="97:9">(</operator><operator pos:start="97:10" pos:end="97:10">*</operator><name pos:start="97:11" pos:end="97:11">p</name><operator pos:start="97:12" pos:end="97:12">)</operator><index pos:start="97:13" pos:end="97:17">[<expr pos:start="97:14" pos:end="97:16"><name pos:start="97:14" pos:end="97:16">len</name></expr>]</index> <operator pos:start="97:19" pos:end="97:19">=</operator> <literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="103:5" pos:end="135:5"><if pos:start="103:5" pos:end="129:5">if <condition pos:start="103:8" pos:end="103:27">(<expr pos:start="103:9" pos:end="103:26"><name pos:start="103:9" pos:end="103:12">mean</name> <operator pos:start="103:14" pos:end="103:15">&amp;&amp;</operator> <name pos:start="103:17" pos:end="103:19">key</name> <operator pos:start="103:21" pos:end="103:22">&amp;&amp;</operator> <name pos:start="103:24" pos:end="103:26">val</name></expr>)</condition> <block pos:start="103:29" pos:end="129:5">{<block_content pos:start="105:9" pos:end="127:9">

        <if_stmt pos:start="105:9" pos:end="117:9"><if pos:start="105:9" pos:end="117:9">if <condition pos:start="105:12" pos:end="105:41">(<expr pos:start="105:13" pos:end="105:40"><call pos:start="105:13" pos:end="105:35"><name pos:start="105:13" pos:end="105:18">strcmp</name><argument_list pos:start="105:19" pos:end="105:35">(<argument pos:start="105:20" pos:end="105:22"><expr pos:start="105:20" pos:end="105:22"><name pos:start="105:20" pos:end="105:22">key</name></expr></argument>, <argument pos:start="105:25" pos:end="105:34"><expr pos:start="105:25" pos:end="105:34"><literal type="string" pos:start="105:25" pos:end="105:34">"iTunSMPB"</literal></expr></argument>)</argument_list></call> <operator pos:start="105:37" pos:end="105:38">==</operator> <literal type="number" pos:start="105:40" pos:end="105:40">0</literal></expr>)</condition> <block pos:start="105:43" pos:end="117:9">{<block_content pos:start="107:13" pos:end="115:13">

            <decl_stmt pos:start="107:13" pos:end="107:44"><decl pos:start="107:13" pos:end="107:23"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:23">priming</name></decl>, <decl pos:start="107:26" pos:end="107:34"><type ref="prev" pos:start="107:13" pos:end="107:15"/><name pos:start="107:26" pos:end="107:34">remainder</name></decl>, <decl pos:start="107:37" pos:end="107:43"><type ref="prev" pos:start="107:13" pos:end="107:15"/><name pos:start="107:37" pos:end="107:43">samples</name></decl>;</decl_stmt>

            <if_stmt pos:start="109:13" pos:end="115:13"><if pos:start="109:13" pos:end="115:13">if<condition pos:start="109:15" pos:end="109:80">(<expr pos:start="109:16" pos:end="109:79"><call pos:start="109:16" pos:end="109:74"><name pos:start="109:16" pos:end="109:21">sscanf</name><argument_list pos:start="109:22" pos:end="109:74">(<argument pos:start="109:23" pos:end="109:25"><expr pos:start="109:23" pos:end="109:25"><name pos:start="109:23" pos:end="109:25">val</name></expr></argument>, <argument pos:start="109:28" pos:end="109:41"><expr pos:start="109:28" pos:end="109:41"><literal type="string" pos:start="109:28" pos:end="109:41">"%*X %X %X %X"</literal></expr></argument>, <argument pos:start="109:44" pos:end="109:51"><expr pos:start="109:44" pos:end="109:51"><operator pos:start="109:44" pos:end="109:44">&amp;</operator><name pos:start="109:45" pos:end="109:51">priming</name></expr></argument>, <argument pos:start="109:54" pos:end="109:63"><expr pos:start="109:54" pos:end="109:63"><operator pos:start="109:54" pos:end="109:54">&amp;</operator><name pos:start="109:55" pos:end="109:63">remainder</name></expr></argument>, <argument pos:start="109:66" pos:end="109:73"><expr pos:start="109:66" pos:end="109:73"><operator pos:start="109:66" pos:end="109:66">&amp;</operator><name pos:start="109:67" pos:end="109:73">samples</name></expr></argument>)</argument_list></call> <operator pos:start="109:76" pos:end="109:77">==</operator> <literal type="number" pos:start="109:79" pos:end="109:79">3</literal></expr>)</condition><block pos:start="109:81" pos:end="115:13">{<block_content pos:start="111:17" pos:end="113:44">

                <if_stmt pos:start="111:17" pos:end="113:44"><if pos:start="111:17" pos:end="113:44">if<condition pos:start="111:19" pos:end="111:46">(<expr pos:start="111:20" pos:end="111:45"><name pos:start="111:20" pos:end="111:26">priming</name><operator pos:start="111:27" pos:end="111:27">&gt;</operator><literal type="number" pos:start="111:28" pos:end="111:28">0</literal> <operator pos:start="111:30" pos:end="111:31">&amp;&amp;</operator> <name pos:start="111:33" pos:end="111:39">priming</name><operator pos:start="111:40" pos:end="111:40">&lt;</operator><literal type="number" pos:start="111:41" pos:end="111:45">16384</literal></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:44"><block_content pos:start="113:21" pos:end="113:44">

                    <expr_stmt pos:start="113:21" pos:end="113:44"><expr pos:start="113:21" pos:end="113:43"><name pos:start="113:21" pos:end="113:33"><name pos:start="113:21" pos:end="113:22">sc</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:33">start_pad</name></name> <operator pos:start="113:35" pos:end="113:35">=</operator> <name pos:start="113:37" pos:end="113:43">priming</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="119:9" pos:end="127:9"><if pos:start="119:9" pos:end="127:9">if <condition pos:start="119:12" pos:end="119:37">(<expr pos:start="119:13" pos:end="119:36"><call pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:18">strcmp</name><argument_list pos:start="119:19" pos:end="119:31">(<argument pos:start="119:20" pos:end="119:22"><expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">key</name></expr></argument>, <argument pos:start="119:25" pos:end="119:30"><expr pos:start="119:25" pos:end="119:30"><literal type="string" pos:start="119:25" pos:end="119:30">"cdec"</literal></expr></argument>)</argument_list></call> <operator pos:start="119:33" pos:end="119:34">!=</operator> <literal type="number" pos:start="119:36" pos:end="119:36">0</literal></expr>)</condition> <block pos:start="119:39" pos:end="127:9">{<block_content pos:start="121:13" pos:end="125:29">

            <expr_stmt pos:start="121:13" pos:end="123:75"><expr pos:start="121:13" pos:end="123:74"><call pos:start="121:13" pos:end="123:74"><name pos:start="121:13" pos:end="121:23">av_dict_set</name><argument_list pos:start="121:24" pos:end="123:74">(<argument pos:start="121:25" pos:end="121:40"><expr pos:start="121:25" pos:end="121:40"><operator pos:start="121:25" pos:end="121:25">&amp;</operator><name pos:start="121:26" pos:end="121:40"><name pos:start="121:26" pos:end="121:26">c</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:30">fc</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:40">metadata</name></name></expr></argument>, <argument pos:start="121:43" pos:end="121:45"><expr pos:start="121:43" pos:end="121:45"><name pos:start="121:43" pos:end="121:45">key</name></expr></argument>, <argument pos:start="121:48" pos:end="121:50"><expr pos:start="121:48" pos:end="121:50"><name pos:start="121:48" pos:end="121:50">val</name></expr></argument>,

                        <argument pos:start="123:25" pos:end="123:73"><expr pos:start="123:25" pos:end="123:73"><name pos:start="123:25" pos:end="123:47">AV_DICT_DONT_STRDUP_KEY</name> <operator pos:start="123:49" pos:end="123:49">|</operator> <name pos:start="123:51" pos:end="123:73">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:29"><expr pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:15">key</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:21">val</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:28">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="129:7" pos:end="135:5">else <block pos:start="129:12" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:88">

        <expr_stmt pos:start="131:9" pos:end="133:88"><expr pos:start="131:9" pos:end="133:87"><call pos:start="131:9" pos:end="133:87"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="133:87">(<argument pos:start="131:16" pos:end="131:20"><expr pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:16">c</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:20">fc</name></name></expr></argument>, <argument pos:start="131:23" pos:end="131:36"><expr pos:start="131:23" pos:end="131:36"><name pos:start="131:23" pos:end="131:36">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="133:16" pos:end="133:75"><expr pos:start="133:16" pos:end="133:75"><literal type="string" pos:start="133:16" pos:end="133:65">"Unhandled or malformed custom metadata of size %"</literal><name pos:start="133:66" pos:end="133:71">PRId64</name><literal type="string" pos:start="133:72" pos:end="133:75">"\n"</literal></expr></argument>, <argument pos:start="133:78" pos:end="133:86"><expr pos:start="133:78" pos:end="133:86"><name pos:start="133:78" pos:end="133:86"><name pos:start="133:78" pos:end="133:81">atom</name><operator pos:start="133:82" pos:end="133:82">.</operator><name pos:start="133:83" pos:end="133:86">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:33"><expr pos:start="139:5" pos:end="139:32"><call pos:start="139:5" pos:end="139:32"><name pos:start="139:5" pos:end="139:13">avio_seek</name><argument_list pos:start="139:14" pos:end="139:32">(<argument pos:start="139:15" pos:end="139:16"><expr pos:start="139:15" pos:end="139:16"><name pos:start="139:15" pos:end="139:16">pb</name></expr></argument>, <argument pos:start="139:19" pos:end="139:21"><expr pos:start="139:19" pos:end="139:21"><name pos:start="139:19" pos:end="139:21">end</name></expr></argument>, <argument pos:start="139:24" pos:end="139:31"><expr pos:start="139:24" pos:end="139:31"><name pos:start="139:24" pos:end="139:31">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:19"><expr pos:start="141:5" pos:end="141:18"><call pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:12">av_freep</name><argument_list pos:start="141:13" pos:end="141:18">(<argument pos:start="141:14" pos:end="141:17"><expr pos:start="141:14" pos:end="141:17"><operator pos:start="141:14" pos:end="141:14">&amp;</operator><name pos:start="141:15" pos:end="141:17">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:19"><expr pos:start="143:5" pos:end="143:18"><call pos:start="143:5" pos:end="143:18"><name pos:start="143:5" pos:end="143:12">av_freep</name><argument_list pos:start="143:13" pos:end="143:18">(<argument pos:start="143:14" pos:end="143:17"><expr pos:start="143:14" pos:end="143:17"><operator pos:start="143:14" pos:end="143:14">&amp;</operator><name pos:start="143:15" pos:end="143:17">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:20"><expr pos:start="145:5" pos:end="145:19"><call pos:start="145:5" pos:end="145:19"><name pos:start="145:5" pos:end="145:12">av_freep</name><argument_list pos:start="145:13" pos:end="145:19">(<argument pos:start="145:14" pos:end="145:18"><expr pos:start="145:14" pos:end="145:18"><operator pos:start="145:14" pos:end="145:14">&amp;</operator><name pos:start="145:15" pos:end="145:18">mean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
