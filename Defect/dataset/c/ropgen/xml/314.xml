<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/314.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">vnc_listen_read</name><parameter_list pos:start="1:28" pos:end="1:57">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:46">bool</name></type> <name pos:start="1:48" pos:end="1:56">websocket</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VncDisplay</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">vs</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">sockaddr_in</name></name></type> <name pos:start="7:24" pos:end="7:27">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">socklen_t</name></type> <name pos:start="9:15" pos:end="9:21">addrlen</name> <init pos:start="9:23" pos:end="9:36">= <expr pos:start="9:25" pos:end="9:36"><sizeof pos:start="9:25" pos:end="9:36">sizeof<argument_list pos:start="9:31" pos:end="9:36">(<argument pos:start="9:32" pos:end="9:35"><expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">addr</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">csock</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:18">/* Catch-up */</comment>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:21">graphic_hw_update</name><argument_list pos:start="17:22" pos:end="17:34">(<argument pos:start="17:23" pos:end="17:33"><expr pos:start="17:23" pos:end="17:33"><name pos:start="17:23" pos:end="17:33"><name pos:start="17:23" pos:end="17:24">vs</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:29">dcl</name><operator pos:start="17:30" pos:end="17:30">.</operator><name pos:start="17:31" pos:end="17:33">con</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="19:1" pos:end="19:20">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:20">CONFIG_VNC_WS</name></cpp:ifdef>

    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:17">websocket</name></expr>)</condition> <block pos:start="21:20" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:78">

        <expr_stmt pos:start="23:9" pos:end="23:78"><expr pos:start="23:9" pos:end="23:77"><name pos:start="23:9" pos:end="23:13">csock</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:77"><name pos:start="23:17" pos:end="23:27">qemu_accept</name><argument_list pos:start="23:28" pos:end="23:77">(<argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:30">vs</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:40">lwebsock</name></name></expr></argument>, <argument pos:start="23:43" pos:end="23:66"><expr pos:start="23:43" pos:end="23:66"><operator pos:start="23:43" pos:end="23:43">(</operator>struct <name pos:start="23:51" pos:end="23:58">sockaddr</name> <operator pos:start="23:60" pos:end="23:60">*</operator><operator pos:start="23:61" pos:end="23:61">)</operator><operator pos:start="23:62" pos:end="23:62">&amp;</operator><name pos:start="23:63" pos:end="23:66">addr</name></expr></argument>, <argument pos:start="23:69" pos:end="23:76"><expr pos:start="23:69" pos:end="23:76"><operator pos:start="23:69" pos:end="23:69">&amp;</operator><name pos:start="23:70" pos:end="23:76">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="33:5">else

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="27:8" pos:end="27:26">/* CONFIG_VNC_WS */</comment>

    <block pos:start="29:5" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:75">

        <expr_stmt pos:start="31:9" pos:end="31:75"><expr pos:start="31:9" pos:end="31:74"><name pos:start="31:9" pos:end="31:13">csock</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:74"><name pos:start="31:17" pos:end="31:27">qemu_accept</name><argument_list pos:start="31:28" pos:end="31:74">(<argument pos:start="31:29" pos:end="31:37"><expr pos:start="31:29" pos:end="31:37"><name pos:start="31:29" pos:end="31:37"><name pos:start="31:29" pos:end="31:30">vs</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:37">lsock</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:63"><expr pos:start="31:40" pos:end="31:63"><operator pos:start="31:40" pos:end="31:40">(</operator>struct <name pos:start="31:48" pos:end="31:55">sockaddr</name> <operator pos:start="31:57" pos:end="31:57">*</operator><operator pos:start="31:58" pos:end="31:58">)</operator><operator pos:start="31:59" pos:end="31:59">&amp;</operator><name pos:start="31:60" pos:end="31:63">addr</name></expr></argument>, <argument pos:start="31:66" pos:end="31:73"><expr pos:start="31:66" pos:end="31:73"><operator pos:start="31:66" pos:end="31:66">&amp;</operator><name pos:start="31:67" pos:end="31:73">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">csock</name> <operator pos:start="37:15" pos:end="37:16">!=</operator> <operator pos:start="37:18" pos:end="37:18">-</operator><literal type="number" pos:start="37:19" pos:end="37:19">1</literal></expr>)</condition> <block pos:start="37:22" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:49">

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><call pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:26">socket_set_nodelay</name><argument_list pos:start="39:27" pos:end="39:33">(<argument pos:start="39:28" pos:end="39:32"><expr pos:start="39:28" pos:end="39:32"><name pos:start="39:28" pos:end="39:32">csock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:19">vnc_connect</name><argument_list pos:start="41:20" pos:end="41:48">(<argument pos:start="41:21" pos:end="41:22"><expr pos:start="41:21" pos:end="41:22"><name pos:start="41:21" pos:end="41:22">vs</name></expr></argument>, <argument pos:start="41:25" pos:end="41:29"><expr pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:29">csock</name></expr></argument>, <argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">false</name></expr></argument>, <argument pos:start="41:39" pos:end="41:47"><expr pos:start="41:39" pos:end="41:47"><name pos:start="41:39" pos:end="41:47">websocket</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
