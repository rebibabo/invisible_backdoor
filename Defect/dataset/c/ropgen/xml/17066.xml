<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17066.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_visitor_in_list</name><parameter_list pos:start="1:33" pos:end="3:52">(<parameter pos:start="1:34" pos:end="1:59"><decl pos:start="1:34" pos:end="1:59"><type pos:start="1:34" pos:end="1:59"><name pos:start="1:34" pos:end="1:53">TestInputVisitorData</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:43">void</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:51">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:35">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">UserDefOneList</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">item</name></decl>, <decl pos:start="7:27" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:20"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:31">head</name> <init pos:start="7:33" pos:end="7:38">= <expr pos:start="7:35" pos:end="7:38"><name pos:start="7:35" pos:end="7:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:164"><expr pos:start="17:5" pos:end="17:163"><name pos:start="17:5" pos:end="17:5">v</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:163"><name pos:start="17:9" pos:end="17:31">visitor_input_test_init</name><argument_list pos:start="17:32" pos:end="17:163">(<argument pos:start="17:33" pos:end="17:36"><expr pos:start="17:33" pos:end="17:36"><name pos:start="17:33" pos:end="17:36">data</name></expr></argument>, <argument pos:start="17:39" pos:end="17:162"><expr pos:start="17:39" pos:end="17:162"><literal type="string" pos:start="17:39" pos:end="17:162">"[ { 'string': 'string0', 'integer': 42 }, { 'string': 'string1', 'integer': 43 }, { 'string': 'string2', 'integer': 44 } ]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><call pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:29">visit_type_UserDefOneList</name><argument_list pos:start="21:30" pos:end="21:51">(<argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><name pos:start="21:31" pos:end="21:31">v</name></expr></argument>, <argument pos:start="21:34" pos:end="21:38"><expr pos:start="21:34" pos:end="21:38"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:38">head</name></expr></argument>, <argument pos:start="21:41" pos:end="21:44"><expr pos:start="21:41" pos:end="21:44"><name pos:start="21:41" pos:end="21:44">NULL</name></expr></argument>, <argument pos:start="21:47" pos:end="21:50"><expr pos:start="21:47" pos:end="21:50"><operator pos:start="21:47" pos:end="21:47">&amp;</operator><name pos:start="21:48" pos:end="21:50">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><call pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:12">g_assert</name><argument_list pos:start="23:13" pos:end="23:18">(<argument pos:start="23:14" pos:end="23:17"><expr pos:start="23:14" pos:end="23:17"><operator pos:start="23:14" pos:end="23:14">!</operator><name pos:start="23:15" pos:end="23:17">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:26">(<argument pos:start="25:14" pos:end="25:25"><expr pos:start="25:14" pos:end="25:25"><name pos:start="25:14" pos:end="25:17">head</name> <operator pos:start="25:19" pos:end="25:20">!=</operator> <name pos:start="25:22" pos:end="25:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="41:5">for <control pos:start="29:9" pos:end="29:58">(<init pos:start="29:10" pos:end="29:28"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr><operator pos:start="29:15" pos:end="29:15">,</operator> <expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:20">item</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:27">head</name></expr>;</init> <condition pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">item</name></expr>;</condition> <incr pos:start="29:36" pos:end="29:57"><expr pos:start="29:36" pos:end="29:52"><name pos:start="29:36" pos:end="29:39">item</name> <operator pos:start="29:41" pos:end="29:41">=</operator> <name pos:start="29:43" pos:end="29:52"><name pos:start="29:43" pos:end="29:46">item</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:52">next</name></name></expr><operator pos:start="29:53" pos:end="29:53">,</operator> <expr pos:start="29:55" pos:end="29:57"><name pos:start="29:55" pos:end="29:55">i</name><operator pos:start="29:56" pos:end="29:57">++</operator></expr></incr>)</control> <block pos:start="29:60" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:64">

        <decl_stmt pos:start="31:9" pos:end="31:24"><decl pos:start="31:9" pos:end="31:23"><type pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:12">char</name></type> <name pos:start="31:14" pos:end="31:23"><name pos:start="31:14" pos:end="31:19">string</name><index pos:start="31:20" pos:end="31:23">[<expr pos:start="31:21" pos:end="31:22"><literal type="number" pos:start="31:21" pos:end="31:22">12</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:56"><expr pos:start="35:9" pos:end="35:55"><call pos:start="35:9" pos:end="35:55"><name pos:start="35:9" pos:end="35:16">snprintf</name><argument_list pos:start="35:17" pos:end="35:55">(<argument pos:start="35:18" pos:end="35:23"><expr pos:start="35:18" pos:end="35:23"><name pos:start="35:18" pos:end="35:23">string</name></expr></argument>, <argument pos:start="35:26" pos:end="35:39"><expr pos:start="35:26" pos:end="35:39"><sizeof pos:start="35:26" pos:end="35:39">sizeof<argument_list pos:start="35:32" pos:end="35:39">(<argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:38">string</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:42" pos:end="35:51"><expr pos:start="35:42" pos:end="35:51"><literal type="string" pos:start="35:42" pos:end="35:51">"string%d"</literal></expr></argument>, <argument pos:start="35:54" pos:end="35:54"><expr pos:start="35:54" pos:end="35:54"><name pos:start="35:54" pos:end="35:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:57"><expr pos:start="37:9" pos:end="37:56"><call pos:start="37:9" pos:end="37:56"><name pos:start="37:9" pos:end="37:23">g_assert_cmpstr</name><argument_list pos:start="37:24" pos:end="37:56">(<argument pos:start="37:25" pos:end="37:43"><expr pos:start="37:25" pos:end="37:43"><name pos:start="37:25" pos:end="37:43"><name pos:start="37:25" pos:end="37:28">item</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:35">value</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:43">string</name></name></expr></argument>, <argument pos:start="37:46" pos:end="37:47"><expr pos:start="37:46" pos:end="37:47"><operator pos:start="37:46" pos:end="37:47">==</operator></expr></argument>, <argument pos:start="37:50" pos:end="37:55"><expr pos:start="37:50" pos:end="37:55"><name pos:start="37:50" pos:end="37:55">string</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><call pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:23">g_assert_cmpint</name><argument_list pos:start="39:24" pos:end="39:63">(<argument pos:start="39:25" pos:end="39:50"><expr pos:start="39:25" pos:end="39:50"><name pos:start="39:25" pos:end="39:50"><name pos:start="39:25" pos:end="39:28">item</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:35">value</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:41">base</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:50">integer</name></name></expr></argument>, <argument pos:start="39:53" pos:end="39:54"><expr pos:start="39:53" pos:end="39:54"><operator pos:start="39:53" pos:end="39:54">==</operator></expr></argument>, <argument pos:start="39:57" pos:end="39:62"><expr pos:start="39:57" pos:end="39:62"><literal type="number" pos:start="39:57" pos:end="39:60">42</literal> <operator pos:start="39:60" pos:end="39:60">+</operator> <name pos:start="39:62" pos:end="39:62">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><call pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:28">qapi_free_UserDefOneList</name><argument_list pos:start="45:29" pos:end="45:34">(<argument pos:start="45:30" pos:end="45:33"><expr pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:33">head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
