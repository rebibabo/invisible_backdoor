<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25213.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">usb_host_set_config</name><parameter_list pos:start="1:32" pos:end="1:75">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:45">USBHostDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">config</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:71">USBPacket</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:74">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:26">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:59"><expr pos:start="9:5" pos:end="9:58"><call pos:start="9:5" pos:end="9:58"><name pos:start="9:5" pos:end="9:29">trace_usb_host_set_config</name><argument_list pos:start="9:30" pos:end="9:58">(<argument pos:start="9:31" pos:end="9:40"><expr pos:start="9:31" pos:end="9:40"><name pos:start="9:31" pos:end="9:40"><name pos:start="9:31" pos:end="9:31">s</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:40">bus_num</name></name></expr></argument>, <argument pos:start="9:43" pos:end="9:49"><expr pos:start="9:43" pos:end="9:49"><name pos:start="9:43" pos:end="9:49"><name pos:start="9:43" pos:end="9:43">s</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:49">addr</name></name></expr></argument>, <argument pos:start="9:52" pos:end="9:57"><expr pos:start="9:52" pos:end="9:57"><name pos:start="9:52" pos:end="9:57">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><call pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:31">usb_host_release_interfaces</name><argument_list pos:start="13:32" pos:end="13:34">(<argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><call pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:26">usb_host_detach_kernel</name><argument_list pos:start="15:27" pos:end="15:29">(<argument pos:start="15:28" pos:end="15:28"><expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:6">rc</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:48"><name pos:start="17:10" pos:end="17:33">libusb_set_configuration</name><argument_list pos:start="17:34" pos:end="17:48">(<argument pos:start="17:35" pos:end="17:39"><expr pos:start="17:35" pos:end="17:39"><name pos:start="17:35" pos:end="17:39"><name pos:start="17:35" pos:end="17:35">s</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:39">dh</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:47"><expr pos:start="17:42" pos:end="17:47"><name pos:start="17:42" pos:end="17:47">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="33:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">rc</name> <operator pos:start="19:12" pos:end="19:13">!=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:15">

        <expr_stmt pos:start="21:9" pos:end="21:62"><expr pos:start="21:9" pos:end="21:61"><call pos:start="21:9" pos:end="21:61"><name pos:start="21:9" pos:end="21:29">usb_host_libusb_error</name><argument_list pos:start="21:30" pos:end="21:61">(<argument pos:start="21:31" pos:end="21:56"><expr pos:start="21:31" pos:end="21:56"><literal type="string" pos:start="21:31" pos:end="21:56">"libusb_set_configuration"</literal></expr></argument>, <argument pos:start="21:59" pos:end="21:60"><expr pos:start="21:59" pos:end="21:60"><name pos:start="21:59" pos:end="21:60">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">p</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">status</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:33">USB_RET_STALL</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:41">(<expr pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:14">rc</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <name pos:start="25:19" pos:end="25:40">LIBUSB_ERROR_NO_DEVICE</name></expr>)</condition> <block pos:start="25:43" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:30">

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><call pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:26">usb_host_nodev</name><argument_list pos:start="27:27" pos:end="27:29">(<argument pos:start="27:28" pos:end="27:28"><expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:5">p</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:13">status</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:41">usb_host_claim_interfaces</name><argument_list pos:start="35:42" pos:end="35:52">(<argument pos:start="35:43" pos:end="35:43"><expr pos:start="35:43" pos:end="35:43"><name pos:start="35:43" pos:end="35:43">s</name></expr></argument>, <argument pos:start="35:46" pos:end="35:51"><expr pos:start="35:46" pos:end="35:51"><name pos:start="35:46" pos:end="35:51">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:37">(<expr pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:9">p</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:17">status</name></name> <operator pos:start="37:19" pos:end="37:20">!=</operator> <name pos:start="37:22" pos:end="37:36">USB_RET_SUCCESS</name></expr>)</condition> <block pos:start="37:39" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:15">

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><call pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:22">usb_host_ep_update</name><argument_list pos:start="43:23" pos:end="43:25">(<argument pos:start="43:24" pos:end="43:24"><expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
