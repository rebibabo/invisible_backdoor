<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3729.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:22">helper_mulldo</name><parameter_list pos:start="1:23" pos:end="1:70">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:34">CPUPPCState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">uint64_t</name></type> <name pos:start="1:51" pos:end="1:54">arg1</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">uint64_t</name></type> <name pos:start="1:66" pos:end="1:69">arg2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:23">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:14">th</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:15">tl</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><call pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:10">muls64</name><argument_list pos:start="11:11" pos:end="11:44">(<argument pos:start="11:12" pos:end="11:14"><expr pos:start="11:12" pos:end="11:14"><operator pos:start="11:12" pos:end="11:12">&amp;</operator><name pos:start="11:13" pos:end="11:14">tl</name></expr></argument>, <argument pos:start="11:17" pos:end="11:31"><expr pos:start="11:17" pos:end="11:31"><operator pos:start="11:17" pos:end="11:17">(</operator><name pos:start="11:18" pos:end="11:25">uint64_t</name> <operator pos:start="11:27" pos:end="11:27">*</operator><operator pos:start="11:28" pos:end="11:28">)</operator><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:31">th</name></expr></argument>, <argument pos:start="11:34" pos:end="11:37"><expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">arg1</name></expr></argument>, <argument pos:start="11:40" pos:end="11:43"><expr pos:start="11:40" pos:end="11:43"><name pos:start="11:40" pos:end="11:43">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:57">/* If th != 0 &amp;&amp; th != -1, then we had an overflow */</comment>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><call pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:14">likely</name><argument_list pos:start="15:15" pos:end="15:39">(<argument pos:start="15:16" pos:end="15:38"><expr pos:start="15:16" pos:end="15:38"><operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:24">uint64_t</name><operator pos:start="15:25" pos:end="15:25">)</operator><operator pos:start="15:26" pos:end="15:26">(</operator><name pos:start="15:27" pos:end="15:28">th</name> <operator pos:start="15:30" pos:end="15:30">+</operator> <literal type="number" pos:start="15:32" pos:end="15:32">1</literal><operator pos:start="15:33" pos:end="15:33">)</operator> <operator pos:start="15:35" pos:end="15:36">&lt;=</operator> <literal type="number" pos:start="15:38" pos:end="15:38">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:42" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">env</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:15">ov</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">env</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:15">so</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:21">env</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:25">ov</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <literal type="number" pos:start="21:29" pos:end="21:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="25:5" pos:end="25:23">return <expr pos:start="25:12" pos:end="25:22"><operator pos:start="25:12" pos:end="25:12">(</operator><name pos:start="25:13" pos:end="25:19">int64_t</name><operator pos:start="25:20" pos:end="25:20">)</operator><name pos:start="25:21" pos:end="25:22">tl</name></expr>;</return>

</block_content>}</block></function>
</unit>
