<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16321.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">v9fs_lock</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:18">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">int8_t</name></type> <name pos:start="5:12" pos:end="5:17">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">V9fsFlock</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">flock</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:15">stat</name></name></type> <name pos:start="11:17" pos:end="11:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">V9fsFidState</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:15">fid</name></decl>, <decl pos:start="15:18" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:18" pos:end="15:20">err</name> <init pos:start="15:22" pos:end="15:24">= <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">V9fsPDU</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">pdu</name> <init pos:start="17:18" pos:end="17:25">= <expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">V9fsState</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:16">s</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:22">pdu</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:9">flock</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:20">g_malloc</name><argument_list pos:start="23:21" pos:end="23:36">(<argument pos:start="23:22" pos:end="23:35"><expr pos:start="23:22" pos:end="23:35"><sizeof pos:start="23:22" pos:end="23:35">sizeof<argument_list pos:start="23:28" pos:end="23:35">(<argument pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:34"><operator pos:start="23:29" pos:end="23:29">*</operator><name pos:start="23:30" pos:end="23:34">flock</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="29:54"><expr pos:start="25:5" pos:end="29:53"><call pos:start="25:5" pos:end="29:53"><name pos:start="25:5" pos:end="25:17">pdu_unmarshal</name><argument_list pos:start="25:18" pos:end="29:53">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">pdu</name></expr></argument>, <argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">offset</name></expr></argument>, <argument pos:start="25:32" pos:end="25:40"><expr pos:start="25:32" pos:end="25:40"><literal type="string" pos:start="25:32" pos:end="25:40">"dbdqqds"</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:46"><expr pos:start="25:43" pos:end="25:46"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:46">fid</name></expr></argument>, <argument pos:start="25:49" pos:end="25:60"><expr pos:start="25:49" pos:end="25:60"><operator pos:start="25:49" pos:end="25:49">&amp;</operator><name pos:start="25:50" pos:end="25:60"><name pos:start="25:50" pos:end="25:54">flock</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:60">type</name></name></expr></argument>,

                  <argument pos:start="27:19" pos:end="27:31"><expr pos:start="27:19" pos:end="27:31"><operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:31"><name pos:start="27:20" pos:end="27:24">flock</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:31">flags</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:46"><expr pos:start="27:34" pos:end="27:46"><operator pos:start="27:34" pos:end="27:34">&amp;</operator><name pos:start="27:35" pos:end="27:46"><name pos:start="27:35" pos:end="27:39">flock</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:46">start</name></name></expr></argument>, <argument pos:start="27:49" pos:end="27:62"><expr pos:start="27:49" pos:end="27:62"><operator pos:start="27:49" pos:end="27:49">&amp;</operator><name pos:start="27:50" pos:end="27:62"><name pos:start="27:50" pos:end="27:54">flock</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:62">length</name></name></expr></argument>,

                  <argument pos:start="29:19" pos:end="29:33"><expr pos:start="29:19" pos:end="29:33"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:33"><name pos:start="29:20" pos:end="29:24">flock</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:33">proc_id</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:52"><expr pos:start="29:36" pos:end="29:52"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:52"><name pos:start="29:37" pos:end="29:41">flock</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:52">client_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:62"><expr pos:start="33:5" pos:end="35:61"><call pos:start="33:5" pos:end="35:61"><name pos:start="33:5" pos:end="33:19">trace_v9fs_lock</name><argument_list pos:start="33:20" pos:end="35:61">(<argument pos:start="33:21" pos:end="33:28"><expr pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:23">pdu</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:28">tag</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:37"><expr pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:33">pdu</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:37">id</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:42">fid</name></expr></argument>,

                    <argument pos:start="35:21" pos:end="35:31"><expr pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:25">flock</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:31">type</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:45"><expr pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:38">flock</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:45">start</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:60"><expr pos:start="35:48" pos:end="35:60"><name pos:start="35:48" pos:end="35:60"><name pos:start="35:48" pos:end="35:52">flock</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:60">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:10">status</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:26">P9_LOCK_ERROR</name></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:69">/* We support only block flag now (that too ignored currently) */</comment>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:44">(<expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:13">flock</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:20">flags</name></name> <operator pos:start="45:22" pos:end="45:22">&amp;</operator> <operator pos:start="45:24" pos:end="45:24">~</operator><name pos:start="45:25" pos:end="45:43">P9_LOCK_FLAGS_BLOCK</name></expr>)</condition> <block pos:start="45:46" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:23">

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:11">err</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">-</operator><name pos:start="47:16" pos:end="47:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:23">goto <name pos:start="49:14" pos:end="49:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:8">fidp</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:28"><name pos:start="53:12" pos:end="53:18">get_fid</name><argument_list pos:start="53:19" pos:end="53:28">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">pdu</name></expr></argument>, <argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:21">(<expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:12">fidp</name> <operator pos:start="55:14" pos:end="55:15">==</operator> <name pos:start="55:17" pos:end="55:20">NULL</name></expr>)</condition> <block pos:start="55:23" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:23">

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">-</operator><name pos:start="57:16" pos:end="57:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:23">goto <name pos:start="59:14" pos:end="59:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:43"><expr pos:start="63:5" pos:end="63:42"><name pos:start="63:5" pos:end="63:7">err</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:42"><name pos:start="63:11" pos:end="63:23">v9fs_co_fstat</name><argument_list pos:start="63:24" pos:end="63:42">(<argument pos:start="63:25" pos:end="63:27"><expr pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:27">pdu</name></expr></argument>, <argument pos:start="63:30" pos:end="63:33"><expr pos:start="63:30" pos:end="63:33"><name pos:start="63:30" pos:end="63:33">fidp</name></expr></argument>, <argument pos:start="63:36" pos:end="63:41"><expr pos:start="63:36" pos:end="63:41"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:41">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">err</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition> <block pos:start="65:18" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:17">

        <goto pos:start="67:9" pos:end="67:17">goto <name pos:start="67:14" pos:end="67:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:29"><expr pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:10">status</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:28">P9_LOCK_SUCCESS</name></expr>;</expr_stmt>

<label pos:start="73:1" pos:end="73:4"><name pos:start="73:1" pos:end="73:3">out</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><call pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:11">put_fid</name><argument_list pos:start="75:12" pos:end="75:22">(<argument pos:start="75:13" pos:end="75:15"><expr pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">pdu</name></expr></argument>, <argument pos:start="75:18" pos:end="75:21"><expr pos:start="75:18" pos:end="75:21"><name pos:start="75:18" pos:end="75:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="77:1" pos:end="77:10"><name pos:start="77:1" pos:end="77:9">out_nofid</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:17"><expr pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:7">err</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <name pos:start="79:11" pos:end="79:16">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:49"><expr pos:start="81:5" pos:end="81:48"><name pos:start="81:5" pos:end="81:7">err</name> <operator pos:start="81:9" pos:end="81:10">+=</operator> <call pos:start="81:12" pos:end="81:48"><name pos:start="81:12" pos:end="81:22">pdu_marshal</name><argument_list pos:start="81:23" pos:end="81:48">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">pdu</name></expr></argument>, <argument pos:start="81:29" pos:end="81:34"><expr pos:start="81:29" pos:end="81:34"><name pos:start="81:29" pos:end="81:34">offset</name></expr></argument>, <argument pos:start="81:37" pos:end="81:39"><expr pos:start="81:37" pos:end="81:39"><literal type="string" pos:start="81:37" pos:end="81:39">"b"</literal></expr></argument>, <argument pos:start="81:42" pos:end="81:47"><expr pos:start="81:42" pos:end="81:47"><name pos:start="81:42" pos:end="81:47">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><call pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:26">trace_v9fs_lock_return</name><argument_list pos:start="83:27" pos:end="83:53">(<argument pos:start="83:28" pos:end="83:35"><expr pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:30">pdu</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:35">tag</name></name></expr></argument>, <argument pos:start="83:38" pos:end="83:44"><expr pos:start="83:38" pos:end="83:44"><name pos:start="83:38" pos:end="83:44"><name pos:start="83:38" pos:end="83:40">pdu</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:44">id</name></name></expr></argument>, <argument pos:start="83:47" pos:end="83:52"><expr pos:start="83:47" pos:end="83:52"><name pos:start="83:47" pos:end="83:52">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><call pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:16">complete_pdu</name><argument_list pos:start="85:17" pos:end="85:29">(<argument pos:start="85:18" pos:end="85:18"><expr pos:start="85:18" pos:end="85:18"><name pos:start="85:18" pos:end="85:18">s</name></expr></argument>, <argument pos:start="85:21" pos:end="85:23"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">pdu</name></expr></argument>, <argument pos:start="85:26" pos:end="85:28"><expr pos:start="85:26" pos:end="85:28"><name pos:start="85:26" pos:end="85:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:40"><expr pos:start="87:5" pos:end="87:39"><call pos:start="87:5" pos:end="87:39"><name pos:start="87:5" pos:end="87:20">v9fs_string_free</name><argument_list pos:start="87:21" pos:end="87:39">(<argument pos:start="87:22" pos:end="87:38"><expr pos:start="87:22" pos:end="87:38"><operator pos:start="87:22" pos:end="87:22">&amp;</operator><name pos:start="87:23" pos:end="87:38"><name pos:start="87:23" pos:end="87:27">flock</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:38">client_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:18"><expr pos:start="89:5" pos:end="89:17"><call pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:10">g_free</name><argument_list pos:start="89:11" pos:end="89:17">(<argument pos:start="89:12" pos:end="89:16"><expr pos:start="89:12" pos:end="89:16"><name pos:start="89:12" pos:end="89:16">flock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
