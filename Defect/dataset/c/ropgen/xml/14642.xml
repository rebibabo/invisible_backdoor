<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14642.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">listener_add_address_space</name><parameter_list pos:start="1:39" pos:end="3:56">(<parameter pos:start="1:40" pos:end="1:63"><decl pos:start="1:40" pos:end="1:63"><type pos:start="1:40" pos:end="1:63"><name pos:start="1:40" pos:end="1:53">MemoryListener</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">listener</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:55"><decl pos:start="3:40" pos:end="3:55"><type pos:start="3:40" pos:end="3:55"><name pos:start="3:40" pos:end="3:51">AddressSpace</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:55">as</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:5">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">FlatRange</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">fr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:54">(<expr pos:start="11:9" pos:end="13:53"><name pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:16">listener</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:38">address_space_filter</name></name>

        <operator pos:start="13:9" pos:end="13:10">&amp;&amp;</operator> <name pos:start="13:12" pos:end="13:41"><name pos:start="13:12" pos:end="13:19">listener</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:41">address_space_filter</name></name> <operator pos:start="13:43" pos:end="13:44">!=</operator> <name pos:start="13:46" pos:end="13:53"><name pos:start="13:46" pos:end="13:47">as</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:53">root</name></name></expr>)</condition> <block pos:start="13:56" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:25">(<expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:24">global_dirty_log</name></expr>)</condition> <block pos:start="21:27" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:45">

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><call pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:16">listener</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:34">log_global_start</name></name><argument_list pos:start="23:35" pos:end="23:44">(<argument pos:start="23:36" pos:end="23:43"><expr pos:start="23:36" pos:end="23:43"><name pos:start="23:36" pos:end="23:43">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <macro pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:23">FOR_EACH_FLAT_RANGE</name><argument_list pos:start="27:24" pos:end="27:45">(<argument pos:start="27:25" pos:end="27:26">fr</argument>, <argument pos:start="27:29" pos:end="27:44">&amp;as-&gt;current_map</argument>)</argument_list></macro> <block pos:start="27:47" pos:end="47:5">{<block_content pos:start="29:9" pos:end="45:49">

        <decl_stmt pos:start="29:9" pos:end="43:10"><decl pos:start="29:9" pos:end="43:9"><type pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:27">MemoryRegionSection</name></type> <name pos:start="29:29" pos:end="29:35">section</name> <init pos:start="29:37" pos:end="43:9">= <expr pos:start="29:39" pos:end="43:9"><block pos:start="29:39" pos:end="43:9">{

            <expr pos:start="31:13" pos:end="31:24"><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:15">mr</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:24"><name pos:start="31:19" pos:end="31:20">fr</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:24">mr</name></name></expr>,

            <expr pos:start="33:13" pos:end="33:37"><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:26">address_space</name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:37"><name pos:start="33:30" pos:end="33:31">as</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:37">root</name></name></expr>,

            <expr pos:start="35:13" pos:end="35:56"><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:33">offset_within_region</name> <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:56"><name pos:start="35:37" pos:end="35:38">fr</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:56">offset_in_region</name></name></expr>,

            <expr pos:start="37:13" pos:end="37:47"><operator pos:start="37:13" pos:end="37:13">.</operator><name pos:start="37:14" pos:end="37:17">size</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:47"><name pos:start="37:21" pos:end="37:32">int128_get64</name><argument_list pos:start="37:33" pos:end="37:47">(<argument pos:start="37:34" pos:end="37:46"><expr pos:start="37:34" pos:end="37:46"><name pos:start="37:34" pos:end="37:46"><name pos:start="37:34" pos:end="37:35">fr</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">addr</name><operator pos:start="37:42" pos:end="37:42">.</operator><name pos:start="37:43" pos:end="37:46">size</name></name></expr></argument>)</argument_list></call></expr>,

            <expr pos:start="39:13" pos:end="39:71"><operator pos:start="39:13" pos:end="39:13">.</operator><name pos:start="39:14" pos:end="39:40">offset_within_address_space</name> <operator pos:start="39:42" pos:end="39:42">=</operator> <call pos:start="39:44" pos:end="39:71"><name pos:start="39:44" pos:end="39:55">int128_get64</name><argument_list pos:start="39:56" pos:end="39:71">(<argument pos:start="39:57" pos:end="39:70"><expr pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:58">fr</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:64">addr</name><operator pos:start="39:65" pos:end="39:65">.</operator><name pos:start="39:66" pos:end="39:70">start</name></name></expr></argument>)</argument_list></call></expr>,

            <expr pos:start="41:13" pos:end="41:36"><operator pos:start="41:13" pos:end="41:13">.</operator><name pos:start="41:14" pos:end="41:21">readonly</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:26">fr</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:36">readonly</name></name></expr>,

        }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><call pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:16">listener</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:28">region_add</name></name><argument_list pos:start="45:29" pos:end="45:48">(<argument pos:start="45:30" pos:end="45:37"><expr pos:start="45:30" pos:end="45:37"><name pos:start="45:30" pos:end="45:37">listener</name></expr></argument>, <argument pos:start="45:40" pos:end="45:47"><expr pos:start="45:40" pos:end="45:47"><operator pos:start="45:40" pos:end="45:40">&amp;</operator><name pos:start="45:41" pos:end="45:47">section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
