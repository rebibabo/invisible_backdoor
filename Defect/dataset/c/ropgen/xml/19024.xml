<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19024.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_stream_info</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">FDKAACDecContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name>   <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CStreamInfo</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">info</name>     <init pos:start="7:27" pos:end="7:63">= <expr pos:start="7:29" pos:end="7:63"><call pos:start="7:29" pos:end="7:63"><name pos:start="7:29" pos:end="7:52">aacDecoder_GetStreamInfo</name><argument_list pos:start="7:53" pos:end="7:63">(<argument pos:start="7:54" pos:end="7:62"><expr pos:start="7:54" pos:end="7:62"><name pos:start="7:54" pos:end="7:62"><name pos:start="7:54" pos:end="7:54">s</name><operator pos:start="7:55" pos:end="7:56">-&gt;</operator><name pos:start="7:57" pos:end="7:62">handle</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:22">channel_counts</name><index pos:start="9:23" pos:end="9:28">[<expr pos:start="9:24" pos:end="9:27"><literal type="number" pos:start="9:24" pos:end="9:27">0x24</literal></expr>]</index></name> <init pos:start="9:30" pos:end="9:36">= <expr pos:start="9:32" pos:end="9:36"><block pos:start="9:32" pos:end="9:36">{ <expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:19">ch_error</name>       <init pos:start="11:27" pos:end="11:29">= <expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:22">ch_layout</name>    <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:13">info</name></expr>)</condition> <block pos:start="17:16" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:31">

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><call pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:66">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:65"><expr pos:start="19:37" pos:end="19:65"><literal type="string" pos:start="19:37" pos:end="19:65">"Unable to get stream info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:30">AVERROR_UNKNOWN</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:12">info</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:24">sampleRate</name></name> <operator pos:start="27:26" pos:end="27:27">&lt;=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>)</condition> <block pos:start="27:32" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:31">

        <expr_stmt pos:start="29:9" pos:end="29:69"><expr pos:start="29:9" pos:end="29:68"><call pos:start="29:9" pos:end="29:68"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:68">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:67"><expr pos:start="29:37" pos:end="29:67"><literal type="string" pos:start="29:37" pos:end="29:67">"Stream info not initialized\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:30">AVERROR_UNKNOWN</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:9">avctx</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">sample_rate</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:41"><name pos:start="35:26" pos:end="35:29">info</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:41">sampleRate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:9">avctx</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:21">frame_size</name></name>  <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:40"><name pos:start="37:26" pos:end="37:29">info</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:40">frameSize</name></name></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="55:5">for <control pos:start="41:9" pos:end="41:43">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:38"><expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:37"><name pos:start="41:21" pos:end="41:24">info</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:37">numChannels</name></name></expr>;</condition> <incr pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:40">i</name><operator pos:start="41:41" pos:end="41:42">++</operator></expr></incr>)</control> <block pos:start="41:45" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:32">

        <decl_stmt pos:start="43:9" pos:end="43:57"><decl pos:start="43:9" pos:end="43:56"><type pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:26">AUDIO_CHANNEL_TYPE</name></type> <name pos:start="43:28" pos:end="43:32">ctype</name> <init pos:start="43:34" pos:end="43:56">= <expr pos:start="43:36" pos:end="43:56"><name pos:start="43:36" pos:end="43:56"><name pos:start="43:36" pos:end="43:39">info</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:53">pChannelType</name><index pos:start="43:54" pos:end="43:56">[<expr pos:start="43:55" pos:end="43:55"><name pos:start="43:55" pos:end="43:55">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:72">(<expr pos:start="45:13" pos:end="45:71"><name pos:start="45:13" pos:end="45:17">ctype</name> <operator pos:start="45:19" pos:end="45:20">&lt;=</operator> <name pos:start="45:22" pos:end="45:29">ACT_NONE</name> <operator pos:start="45:31" pos:end="45:32">||</operator> <name pos:start="45:34" pos:end="45:38">ctype</name> <operator pos:start="45:40" pos:end="45:40">&gt;</operator> <call pos:start="45:42" pos:end="45:71"><name pos:start="45:42" pos:end="45:55">FF_ARRAY_ELEMS</name><argument_list pos:start="45:56" pos:end="45:71">(<argument pos:start="45:57" pos:end="45:70"><expr pos:start="45:57" pos:end="45:70"><name pos:start="45:57" pos:end="45:70">channel_counts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:74" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:18">

            <expr_stmt pos:start="47:13" pos:end="47:68"><expr pos:start="47:13" pos:end="47:67"><call pos:start="47:13" pos:end="47:67"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:67">(<argument pos:start="47:20" pos:end="47:24"><expr pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:24">avctx</name></expr></argument>, <argument pos:start="47:27" pos:end="47:40"><expr pos:start="47:27" pos:end="47:40"><name pos:start="47:27" pos:end="47:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="47:43" pos:end="47:66"><expr pos:start="47:43" pos:end="47:66"><literal type="string" pos:start="47:43" pos:end="47:66">"unknown channel type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:22">channel_counts</name><index pos:start="53:23" pos:end="53:29">[<expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">ctype</name></expr>]</index></name><operator pos:start="53:30" pos:end="53:31">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="57:5" pos:end="69:68"><expr pos:start="57:5" pos:end="69:67"><call pos:start="57:5" pos:end="69:67"><name pos:start="57:5" pos:end="57:10">av_log</name><argument_list pos:start="57:11" pos:end="69:67">(<argument pos:start="57:12" pos:end="57:16"><expr pos:start="57:12" pos:end="57:16"><name pos:start="57:12" pos:end="57:16">avctx</name></expr></argument>, <argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">AV_LOG_DEBUG</name></expr></argument>,

           <argument pos:start="59:12" pos:end="59:67"><expr pos:start="59:12" pos:end="59:67"><literal type="string" pos:start="59:12" pos:end="59:67">"%d channels - front:%d side:%d back:%d lfe:%d top:%d\n"</literal></expr></argument>,

           <argument pos:start="61:12" pos:end="61:28"><expr pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:15">info</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:28">numChannels</name></name></expr></argument>,

           <argument pos:start="63:12" pos:end="63:36"><expr pos:start="63:12" pos:end="63:36"><name pos:start="63:12" pos:end="63:36"><name pos:start="63:12" pos:end="63:25">channel_counts</name><index pos:start="63:26" pos:end="63:36">[<expr pos:start="63:27" pos:end="63:35"><name pos:start="63:27" pos:end="63:35">ACT_FRONT</name></expr>]</index></name></expr></argument>, <argument pos:start="63:39" pos:end="63:62"><expr pos:start="63:39" pos:end="63:62"><name pos:start="63:39" pos:end="63:62"><name pos:start="63:39" pos:end="63:52">channel_counts</name><index pos:start="63:53" pos:end="63:62">[<expr pos:start="63:54" pos:end="63:61"><name pos:start="63:54" pos:end="63:61">ACT_SIDE</name></expr>]</index></name></expr></argument>,

           <argument pos:start="65:12" pos:end="65:35"><expr pos:start="65:12" pos:end="65:35"><name pos:start="65:12" pos:end="65:35"><name pos:start="65:12" pos:end="65:25">channel_counts</name><index pos:start="65:26" pos:end="65:35">[<expr pos:start="65:27" pos:end="65:34"><name pos:start="65:27" pos:end="65:34">ACT_BACK</name></expr>]</index></name></expr></argument>,  <argument pos:start="65:39" pos:end="65:61"><expr pos:start="65:39" pos:end="65:61"><name pos:start="65:39" pos:end="65:61"><name pos:start="65:39" pos:end="65:52">channel_counts</name><index pos:start="65:53" pos:end="65:61">[<expr pos:start="65:54" pos:end="65:60"><name pos:start="65:54" pos:end="65:60">ACT_LFE</name></expr>]</index></name></expr></argument>,

           <argument pos:start="67:12" pos:end="69:66"><expr pos:start="67:12" pos:end="69:66"><name pos:start="67:12" pos:end="67:40"><name pos:start="67:12" pos:end="67:25">channel_counts</name><index pos:start="67:26" pos:end="67:40">[<expr pos:start="67:27" pos:end="67:39"><name pos:start="67:27" pos:end="67:39">ACT_FRONT_TOP</name></expr>]</index></name> <operator pos:start="67:42" pos:end="67:42">+</operator> <name pos:start="67:44" pos:end="67:71"><name pos:start="67:44" pos:end="67:57">channel_counts</name><index pos:start="67:58" pos:end="67:71">[<expr pos:start="67:59" pos:end="67:70"><name pos:start="67:59" pos:end="67:70">ACT_SIDE_TOP</name></expr>]</index></name> <operator pos:start="67:73" pos:end="67:73">+</operator>

           <name pos:start="69:12" pos:end="69:39"><name pos:start="69:12" pos:end="69:25">channel_counts</name><index pos:start="69:26" pos:end="69:39">[<expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">ACT_BACK_TOP</name></expr>]</index></name>  <operator pos:start="69:42" pos:end="69:42">+</operator> <name pos:start="69:44" pos:end="69:66"><name pos:start="69:44" pos:end="69:57">channel_counts</name><index pos:start="69:58" pos:end="69:66">[<expr pos:start="69:59" pos:end="69:65"><name pos:start="69:59" pos:end="69:65">ACT_TOP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="73:5" pos:end="113:5">switch <condition pos:start="73:12" pos:end="73:38">(<expr pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:26">channel_counts</name><index pos:start="73:27" pos:end="73:37">[<expr pos:start="73:28" pos:end="73:36"><name pos:start="73:28" pos:end="73:36">ACT_FRONT</name></expr>]</index></name></expr>)</condition> <block pos:start="73:40" pos:end="113:5">{<block_content pos:start="75:5" pos:end="111:14">

    <case pos:start="75:5" pos:end="75:11">case <expr pos:start="75:10" pos:end="75:10"><literal type="number" pos:start="75:10" pos:end="75:10">4</literal></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="79:49"><expr pos:start="77:9" pos:end="79:48"><name pos:start="77:9" pos:end="77:17">ch_layout</name> <operator pos:start="77:19" pos:end="77:20">|=</operator> <name pos:start="77:22" pos:end="77:40">AV_CH_LAYOUT_STEREO</name> <operator pos:start="77:42" pos:end="77:42">|</operator> <name pos:start="77:44" pos:end="77:69">AV_CH_FRONT_LEFT_OF_CENTER</name> <operator pos:start="77:71" pos:end="77:71">|</operator>

                     <name pos:start="79:22" pos:end="79:48">AV_CH_FRONT_RIGHT_OF_CENTER</name></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:11">case <expr pos:start="83:10" pos:end="83:10"><literal type="number" pos:start="83:10" pos:end="83:10">3</literal></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:62"><expr pos:start="85:9" pos:end="85:61"><name pos:start="85:9" pos:end="85:17">ch_layout</name> <operator pos:start="85:19" pos:end="85:20">|=</operator> <name pos:start="85:22" pos:end="85:40">AV_CH_LAYOUT_STEREO</name> <operator pos:start="85:42" pos:end="85:42">|</operator> <name pos:start="85:44" pos:end="85:61">AV_CH_FRONT_CENTER</name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:11">case <expr pos:start="89:10" pos:end="89:10"><literal type="number" pos:start="89:10" pos:end="89:10">2</literal></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:17">ch_layout</name> <operator pos:start="91:19" pos:end="91:20">|=</operator> <name pos:start="91:22" pos:end="91:40">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">1</literal></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:17">ch_layout</name> <operator pos:start="97:19" pos:end="97:20">|=</operator> <name pos:start="97:22" pos:end="97:39">AV_CH_FRONT_CENTER</name></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <default pos:start="101:5" pos:end="101:12">default:</default>

        <expr_stmt pos:start="103:9" pos:end="107:42"><expr pos:start="103:9" pos:end="107:41"><call pos:start="103:9" pos:end="107:41"><name pos:start="103:9" pos:end="103:14">av_log</name><argument_list pos:start="103:15" pos:end="107:41">(<argument pos:start="103:16" pos:end="103:20"><expr pos:start="103:16" pos:end="103:20"><name pos:start="103:16" pos:end="103:20">avctx</name></expr></argument>, <argument pos:start="103:23" pos:end="103:36"><expr pos:start="103:23" pos:end="103:36"><name pos:start="103:23" pos:end="103:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="105:16" pos:end="105:59"><expr pos:start="105:16" pos:end="105:59"><literal type="string" pos:start="105:16" pos:end="105:59">"unsupported number of front channels: %d\n"</literal></expr></argument>,

               <argument pos:start="107:16" pos:end="107:40"><expr pos:start="107:16" pos:end="107:40"><name pos:start="107:16" pos:end="107:40"><name pos:start="107:16" pos:end="107:29">channel_counts</name><index pos:start="107:30" pos:end="107:40">[<expr pos:start="107:31" pos:end="107:39"><name pos:start="107:31" pos:end="107:39">ACT_FRONT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:21"><expr pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:16">ch_error</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <literal type="number" pos:start="109:20" pos:end="109:20">1</literal></expr>;</expr_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="115:5" pos:end="133:5"><if pos:start="115:5" pos:end="133:5">if <condition pos:start="115:8" pos:end="115:37">(<expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:32"><name pos:start="115:9" pos:end="115:22">channel_counts</name><index pos:start="115:23" pos:end="115:32">[<expr pos:start="115:24" pos:end="115:31"><name pos:start="115:24" pos:end="115:31">ACT_SIDE</name></expr>]</index></name> <operator pos:start="115:34" pos:end="115:34">&gt;</operator> <literal type="number" pos:start="115:36" pos:end="115:36">0</literal></expr>)</condition> <block pos:start="115:39" pos:end="133:5">{<block_content pos:start="117:9" pos:end="131:9">

        <if_stmt pos:start="117:9" pos:end="131:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:42">(<expr pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:36"><name pos:start="117:13" pos:end="117:26">channel_counts</name><index pos:start="117:27" pos:end="117:36">[<expr pos:start="117:28" pos:end="117:35"><name pos:start="117:28" pos:end="117:35">ACT_SIDE</name></expr>]</index></name> <operator pos:start="117:38" pos:end="117:39">==</operator> <literal type="number" pos:start="117:41" pos:end="117:41">2</literal></expr>)</condition> <block pos:start="117:44" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:60">

            <expr_stmt pos:start="119:13" pos:end="119:60"><expr pos:start="119:13" pos:end="119:59"><name pos:start="119:13" pos:end="119:21">ch_layout</name> <operator pos:start="119:23" pos:end="119:24">|=</operator> <name pos:start="119:26" pos:end="119:40">AV_CH_SIDE_LEFT</name> <operator pos:start="119:42" pos:end="119:42">|</operator> <name pos:start="119:44" pos:end="119:59">AV_CH_SIDE_RIGHT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="131:9">else <block pos:start="121:16" pos:end="131:9">{<block_content pos:start="123:13" pos:end="129:25">

            <expr_stmt pos:start="123:13" pos:end="127:45"><expr pos:start="123:13" pos:end="127:44"><call pos:start="123:13" pos:end="127:44"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="127:44">(<argument pos:start="123:20" pos:end="123:24"><expr pos:start="123:20" pos:end="123:24"><name pos:start="123:20" pos:end="123:24">avctx</name></expr></argument>, <argument pos:start="123:27" pos:end="123:40"><expr pos:start="123:27" pos:end="123:40"><name pos:start="123:27" pos:end="123:40">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="125:20" pos:end="125:62"><expr pos:start="125:20" pos:end="125:62"><literal type="string" pos:start="125:20" pos:end="125:62">"unsupported number of side channels: %d\n"</literal></expr></argument>,

                   <argument pos:start="127:20" pos:end="127:43"><expr pos:start="127:20" pos:end="127:43"><name pos:start="127:20" pos:end="127:43"><name pos:start="127:20" pos:end="127:33">channel_counts</name><index pos:start="127:34" pos:end="127:43">[<expr pos:start="127:35" pos:end="127:42"><name pos:start="127:35" pos:end="127:42">ACT_SIDE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:25"><expr pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:20">ch_error</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <literal type="number" pos:start="129:24" pos:end="129:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="135:5" pos:end="171:5"><if pos:start="135:5" pos:end="171:5">if <condition pos:start="135:8" pos:end="135:37">(<expr pos:start="135:9" pos:end="135:36"><name pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:22">channel_counts</name><index pos:start="135:23" pos:end="135:32">[<expr pos:start="135:24" pos:end="135:31"><name pos:start="135:24" pos:end="135:31">ACT_BACK</name></expr>]</index></name> <operator pos:start="135:34" pos:end="135:34">&gt;</operator> <literal type="number" pos:start="135:36" pos:end="135:36">0</literal></expr>)</condition> <block pos:start="135:39" pos:end="171:5">{<block_content pos:start="137:9" pos:end="169:9">

        <switch pos:start="137:9" pos:end="169:9">switch <condition pos:start="137:16" pos:end="137:41">(<expr pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:30">channel_counts</name><index pos:start="137:31" pos:end="137:40">[<expr pos:start="137:32" pos:end="137:39"><name pos:start="137:32" pos:end="137:39">ACT_BACK</name></expr>]</index></name></expr>)</condition> <block pos:start="137:43" pos:end="169:9">{<block_content pos:start="139:9" pos:end="167:18">

        <case pos:start="139:9" pos:end="139:15">case <expr pos:start="139:14" pos:end="139:14"><literal type="number" pos:start="139:14" pos:end="139:14">3</literal></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:80"><expr pos:start="141:13" pos:end="141:79"><name pos:start="141:13" pos:end="141:21">ch_layout</name> <operator pos:start="141:23" pos:end="141:24">|=</operator> <name pos:start="141:26" pos:end="141:40">AV_CH_BACK_LEFT</name> <operator pos:start="141:42" pos:end="141:42">|</operator> <name pos:start="141:44" pos:end="141:59">AV_CH_BACK_RIGHT</name> <operator pos:start="141:61" pos:end="141:61">|</operator> <name pos:start="141:63" pos:end="141:79">AV_CH_BACK_CENTER</name></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:15">case <expr pos:start="145:14" pos:end="145:14"><literal type="number" pos:start="145:14" pos:end="145:14">2</literal></expr>:</case>

            <expr_stmt pos:start="147:13" pos:end="147:60"><expr pos:start="147:13" pos:end="147:59"><name pos:start="147:13" pos:end="147:21">ch_layout</name> <operator pos:start="147:23" pos:end="147:24">|=</operator> <name pos:start="147:26" pos:end="147:40">AV_CH_BACK_LEFT</name> <operator pos:start="147:42" pos:end="147:42">|</operator> <name pos:start="147:44" pos:end="147:59">AV_CH_BACK_RIGHT</name></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:15">case <expr pos:start="151:14" pos:end="151:14"><literal type="number" pos:start="151:14" pos:end="151:14">1</literal></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:43"><expr pos:start="153:13" pos:end="153:42"><name pos:start="153:13" pos:end="153:21">ch_layout</name> <operator pos:start="153:23" pos:end="153:24">|=</operator> <name pos:start="153:26" pos:end="153:42">AV_CH_BACK_CENTER</name></expr>;</expr_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <default pos:start="157:9" pos:end="157:16">default:</default>

            <expr_stmt pos:start="159:13" pos:end="163:45"><expr pos:start="159:13" pos:end="163:44"><call pos:start="159:13" pos:end="163:44"><name pos:start="159:13" pos:end="159:18">av_log</name><argument_list pos:start="159:19" pos:end="163:44">(<argument pos:start="159:20" pos:end="159:24"><expr pos:start="159:20" pos:end="159:24"><name pos:start="159:20" pos:end="159:24">avctx</name></expr></argument>, <argument pos:start="159:27" pos:end="159:40"><expr pos:start="159:27" pos:end="159:40"><name pos:start="159:27" pos:end="159:40">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="161:20" pos:end="161:62"><expr pos:start="161:20" pos:end="161:62"><literal type="string" pos:start="161:20" pos:end="161:62">"unsupported number of back channels: %d\n"</literal></expr></argument>,

                   <argument pos:start="163:20" pos:end="163:43"><expr pos:start="163:20" pos:end="163:43"><name pos:start="163:20" pos:end="163:43"><name pos:start="163:20" pos:end="163:33">channel_counts</name><index pos:start="163:34" pos:end="163:43">[<expr pos:start="163:35" pos:end="163:42"><name pos:start="163:35" pos:end="163:42">ACT_BACK</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:25"><expr pos:start="165:13" pos:end="165:24"><name pos:start="165:13" pos:end="165:20">ch_error</name> <operator pos:start="165:22" pos:end="165:22">=</operator> <literal type="number" pos:start="165:24" pos:end="165:24">1</literal></expr>;</expr_stmt>

            <break pos:start="167:13" pos:end="167:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="173:5" pos:end="191:5"><if pos:start="173:5" pos:end="191:5">if <condition pos:start="173:8" pos:end="173:36">(<expr pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:31"><name pos:start="173:9" pos:end="173:22">channel_counts</name><index pos:start="173:23" pos:end="173:31">[<expr pos:start="173:24" pos:end="173:30"><name pos:start="173:24" pos:end="173:30">ACT_LFE</name></expr>]</index></name> <operator pos:start="173:33" pos:end="173:33">&gt;</operator> <literal type="number" pos:start="173:35" pos:end="173:35">0</literal></expr>)</condition> <block pos:start="173:38" pos:end="191:5">{<block_content pos:start="175:9" pos:end="189:9">

        <if_stmt pos:start="175:9" pos:end="189:9"><if pos:start="175:9" pos:end="179:9">if <condition pos:start="175:12" pos:end="175:41">(<expr pos:start="175:13" pos:end="175:40"><name pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:26">channel_counts</name><index pos:start="175:27" pos:end="175:35">[<expr pos:start="175:28" pos:end="175:34"><name pos:start="175:28" pos:end="175:34">ACT_LFE</name></expr>]</index></name> <operator pos:start="175:37" pos:end="175:38">==</operator> <literal type="number" pos:start="175:40" pos:end="175:40">1</literal></expr>)</condition> <block pos:start="175:43" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:45">

            <expr_stmt pos:start="177:13" pos:end="177:45"><expr pos:start="177:13" pos:end="177:44"><name pos:start="177:13" pos:end="177:21">ch_layout</name> <operator pos:start="177:23" pos:end="177:24">|=</operator> <name pos:start="177:26" pos:end="177:44">AV_CH_LOW_FREQUENCY</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="189:9">else <block pos:start="179:16" pos:end="189:9">{<block_content pos:start="181:13" pos:end="187:25">

            <expr_stmt pos:start="181:13" pos:end="185:44"><expr pos:start="181:13" pos:end="185:43"><call pos:start="181:13" pos:end="185:43"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="185:43">(<argument pos:start="181:20" pos:end="181:24"><expr pos:start="181:20" pos:end="181:24"><name pos:start="181:20" pos:end="181:24">avctx</name></expr></argument>, <argument pos:start="181:27" pos:end="181:40"><expr pos:start="181:27" pos:end="181:40"><name pos:start="181:27" pos:end="181:40">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="183:20" pos:end="183:61"><expr pos:start="183:20" pos:end="183:61"><literal type="string" pos:start="183:20" pos:end="183:61">"unsupported number of LFE channels: %d\n"</literal></expr></argument>,

                   <argument pos:start="185:20" pos:end="185:42"><expr pos:start="185:20" pos:end="185:42"><name pos:start="185:20" pos:end="185:42"><name pos:start="185:20" pos:end="185:33">channel_counts</name><index pos:start="185:34" pos:end="185:42">[<expr pos:start="185:35" pos:end="185:41"><name pos:start="185:35" pos:end="185:41">ACT_LFE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:25"><expr pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:20">ch_error</name> <operator pos:start="187:22" pos:end="187:22">=</operator> <literal type="number" pos:start="187:24" pos:end="187:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="193:5" pos:end="201:5"><if pos:start="193:5" pos:end="201:5">if <condition pos:start="193:8" pos:end="195:74">(<expr pos:start="193:9" pos:end="195:73"><operator pos:start="193:9" pos:end="193:9">!</operator><name pos:start="193:10" pos:end="193:17">ch_error</name> <operator pos:start="193:19" pos:end="193:20">&amp;&amp;</operator>

        <call pos:start="195:9" pos:end="195:52"><name pos:start="195:9" pos:end="195:41">av_get_channel_layout_nb_channels</name><argument_list pos:start="195:42" pos:end="195:52">(<argument pos:start="195:43" pos:end="195:51"><expr pos:start="195:43" pos:end="195:51"><name pos:start="195:43" pos:end="195:51">ch_layout</name></expr></argument>)</argument_list></call> <operator pos:start="195:54" pos:end="195:55">!=</operator> <name pos:start="195:57" pos:end="195:73"><name pos:start="195:57" pos:end="195:60">info</name><operator pos:start="195:61" pos:end="195:62">-&gt;</operator><name pos:start="195:63" pos:end="195:73">numChannels</name></name></expr>)</condition> <block pos:start="195:76" pos:end="201:5">{<block_content pos:start="197:9" pos:end="199:21">

        <expr_stmt pos:start="197:9" pos:end="197:77"><expr pos:start="197:9" pos:end="197:76"><call pos:start="197:9" pos:end="197:76"><name pos:start="197:9" pos:end="197:14">av_log</name><argument_list pos:start="197:15" pos:end="197:76">(<argument pos:start="197:16" pos:end="197:20"><expr pos:start="197:16" pos:end="197:20"><name pos:start="197:16" pos:end="197:20">avctx</name></expr></argument>, <argument pos:start="197:23" pos:end="197:36"><expr pos:start="197:23" pos:end="197:36"><name pos:start="197:23" pos:end="197:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="197:39" pos:end="197:75"><expr pos:start="197:39" pos:end="197:75"><literal type="string" pos:start="197:39" pos:end="197:75">"unsupported channel configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:21"><expr pos:start="199:9" pos:end="199:20"><name pos:start="199:9" pos:end="199:16">ch_error</name> <operator pos:start="199:18" pos:end="199:18">=</operator> <literal type="number" pos:start="199:20" pos:end="199:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="203:5" pos:end="209:42"><if pos:start="203:5" pos:end="205:34">if <condition pos:start="203:8" pos:end="203:17">(<expr pos:start="203:9" pos:end="203:16"><name pos:start="203:9" pos:end="203:16">ch_error</name></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:34"><block_content pos:start="205:9" pos:end="205:34">

        <expr_stmt pos:start="205:9" pos:end="205:34"><expr pos:start="205:9" pos:end="205:33"><name pos:start="205:9" pos:end="205:29"><name pos:start="205:9" pos:end="205:13">avctx</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:29">channel_layout</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <literal type="number" pos:start="205:33" pos:end="205:33">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="207:5" pos:end="209:42">else<block type="pseudo" pos:start="209:9" pos:end="209:42"><block_content pos:start="209:9" pos:end="209:42">

        <expr_stmt pos:start="209:9" pos:end="209:42"><expr pos:start="209:9" pos:end="209:41"><name pos:start="209:9" pos:end="209:29"><name pos:start="209:9" pos:end="209:13">avctx</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:29">channel_layout</name></name> <operator pos:start="209:31" pos:end="209:31">=</operator> <name pos:start="209:33" pos:end="209:41">ch_layout</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:40"><expr pos:start="213:5" pos:end="213:39"><name pos:start="213:5" pos:end="213:19"><name pos:start="213:5" pos:end="213:9">avctx</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:19">channels</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:39"><name pos:start="213:23" pos:end="213:26">info</name><operator pos:start="213:27" pos:end="213:28">-&gt;</operator><name pos:start="213:29" pos:end="213:39">numChannels</name></name></expr>;</expr_stmt>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
