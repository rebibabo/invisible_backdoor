<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20824.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">v9fs_wstat_post_chown</name><parameter_list pos:start="1:34" pos:end="1:76">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:43">V9fsState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:62">V9fsWstatState</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">vs</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:75"><decl pos:start="1:69" pos:end="1:75"><type pos:start="1:69" pos:end="1:75"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:75">err</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:18">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">V9fsFidState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">fidp</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:11">err</name> <operator pos:start="7:13" pos:end="7:13">&lt;</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>)</condition> <block pos:start="7:18" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:17">

        <goto pos:start="9:9" pos:end="9:17">goto <name pos:start="9:14" pos:end="9:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="109:5"><if pos:start="15:5" pos:end="109:5">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:10">vs</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:18">v9stat</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:23">name</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">size</name></name> <operator pos:start="15:30" pos:end="15:31">!=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>)</condition> <block pos:start="15:36" pos:end="109:5">{<block_content pos:start="17:9" pos:end="107:9">

        <decl_stmt pos:start="17:9" pos:end="17:34"><decl pos:start="17:9" pos:end="17:22"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">char</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:22">old_name</name></decl>, <decl pos:start="17:25" pos:end="17:33"><type ref="prev" pos:start="17:9" pos:end="17:14"><modifier pos:start="17:25" pos:end="17:25">*</modifier></type><name pos:start="17:26" pos:end="17:33">new_name</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:18"><decl pos:start="19:9" pos:end="19:17"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">char</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">end</name></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:16">old_name</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:38"><name pos:start="23:20" pos:end="23:21">vs</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:27">fidp</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">path</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:38">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:11">end</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:36"><name pos:start="25:15" pos:end="25:21">strrchr</name><argument_list pos:start="25:22" pos:end="25:36">(<argument pos:start="25:23" pos:end="25:30"><expr pos:start="25:23" pos:end="25:30"><name pos:start="25:23" pos:end="25:30">old_name</name></expr></argument>, <argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><literal type="char" pos:start="25:33" pos:end="25:35">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:16">(<expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">end</name></expr>)</condition> <block pos:start="27:18" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:18">

            <expr_stmt pos:start="29:13" pos:end="29:18"><expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:15">end</name><operator pos:start="29:16" pos:end="29:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:27">

            <expr_stmt pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:15">end</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:26">old_name</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:16">new_name</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:74"><name pos:start="39:20" pos:end="39:31">qemu_mallocz</name><argument_list pos:start="39:32" pos:end="39:74">(<argument pos:start="39:33" pos:end="39:73"><expr pos:start="39:33" pos:end="39:73"><name pos:start="39:33" pos:end="39:35">end</name> <operator pos:start="39:37" pos:end="39:37">-</operator> <name pos:start="39:39" pos:end="39:46">old_name</name> <operator pos:start="39:48" pos:end="39:48">+</operator> <name pos:start="39:50" pos:end="39:69"><name pos:start="39:50" pos:end="39:51">vs</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:59">v9stat</name><operator pos:start="39:60" pos:end="39:60">.</operator><name pos:start="39:61" pos:end="39:64">name</name><operator pos:start="39:65" pos:end="39:65">.</operator><name pos:start="39:66" pos:end="39:69">size</name></name> <operator pos:start="39:71" pos:end="39:71">+</operator> <literal type="number" pos:start="39:73" pos:end="39:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><call pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:14">memcpy</name><argument_list pos:start="43:15" pos:end="43:50">(<argument pos:start="43:16" pos:end="43:23"><expr pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:23">new_name</name></expr></argument>, <argument pos:start="43:26" pos:end="43:33"><expr pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:33">old_name</name></expr></argument>, <argument pos:start="43:36" pos:end="43:49"><expr pos:start="43:36" pos:end="43:49"><name pos:start="43:36" pos:end="43:38">end</name> <operator pos:start="43:40" pos:end="43:40">-</operator> <name pos:start="43:42" pos:end="43:49">old_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="47:38"><expr pos:start="45:9" pos:end="47:37"><call pos:start="45:9" pos:end="47:37"><name pos:start="45:9" pos:end="45:14">memcpy</name><argument_list pos:start="45:15" pos:end="47:37">(<argument pos:start="45:16" pos:end="45:42"><expr pos:start="45:16" pos:end="45:42"><name pos:start="45:16" pos:end="45:23">new_name</name> <operator pos:start="45:25" pos:end="45:25">+</operator> <operator pos:start="45:27" pos:end="45:27">(</operator><name pos:start="45:28" pos:end="45:30">end</name> <operator pos:start="45:32" pos:end="45:32">-</operator> <name pos:start="45:34" pos:end="45:41">old_name</name><operator pos:start="45:42" pos:end="45:42">)</operator></expr></argument>, <argument pos:start="45:45" pos:end="45:64"><expr pos:start="45:45" pos:end="45:64"><name pos:start="45:45" pos:end="45:64"><name pos:start="45:45" pos:end="45:46">vs</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:54">v9stat</name><operator pos:start="45:55" pos:end="45:55">.</operator><name pos:start="45:56" pos:end="45:59">name</name><operator pos:start="45:60" pos:end="45:60">.</operator><name pos:start="45:61" pos:end="45:64">data</name></name></expr></argument>,

                <argument pos:start="47:17" pos:end="47:36"><expr pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:18">vs</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:26">v9stat</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:31">name</name><operator pos:start="47:32" pos:end="47:32">.</operator><name pos:start="47:33" pos:end="47:36">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:10">vs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:17">nname</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:22">data</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:33">new_name</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:42"><expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:10">vs</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">nname</name><operator pos:start="51:18" pos:end="51:18">.</operator><name pos:start="51:19" pos:end="51:22">size</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:41"><name pos:start="51:26" pos:end="51:31">strlen</name><argument_list pos:start="51:32" pos:end="51:41">(<argument pos:start="51:33" pos:end="51:40"><expr pos:start="51:33" pos:end="51:40"><name pos:start="51:33" pos:end="51:40">new_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="55:9" pos:end="107:9"><if pos:start="55:9" pos:end="107:9">if <condition pos:start="55:12" pos:end="55:55">(<expr pos:start="55:13" pos:end="55:54"><call pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:18">strcmp</name><argument_list pos:start="55:19" pos:end="55:49">(<argument pos:start="55:20" pos:end="55:27"><expr pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:27">new_name</name></expr></argument>, <argument pos:start="55:30" pos:end="55:48"><expr pos:start="55:30" pos:end="55:48"><name pos:start="55:30" pos:end="55:48"><name pos:start="55:30" pos:end="55:31">vs</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:37">fidp</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:43">path</name><operator pos:start="55:44" pos:end="55:44">.</operator><name pos:start="55:45" pos:end="55:48">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:51" pos:end="55:52">!=</operator> <literal type="number" pos:start="55:54" pos:end="55:54">0</literal></expr>)</condition> <block pos:start="55:57" pos:end="107:9">{<block_content pos:start="57:13" pos:end="105:13">

            <if_stmt pos:start="57:13" pos:end="105:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:63">(<expr pos:start="57:17" pos:end="57:62"><call pos:start="57:17" pos:end="57:62"><name pos:start="57:17" pos:end="57:30">v9fs_do_rename</name><argument_list pos:start="57:31" pos:end="57:62">(<argument pos:start="57:32" pos:end="57:32"><expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">s</name></expr></argument>, <argument pos:start="57:35" pos:end="57:49"><expr pos:start="57:35" pos:end="57:49"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:49"><name pos:start="57:36" pos:end="57:37">vs</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:43">fidp</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:49">path</name></name></expr></argument>, <argument pos:start="57:52" pos:end="57:61"><expr pos:start="57:52" pos:end="57:61"><operator pos:start="57:52" pos:end="57:52">&amp;</operator><name pos:start="57:53" pos:end="57:61"><name pos:start="57:53" pos:end="57:54">vs</name><operator pos:start="57:55" pos:end="57:56">-&gt;</operator><name pos:start="57:57" pos:end="57:61">nname</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:65" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:29">

                <expr_stmt pos:start="59:17" pos:end="59:29"><expr pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:19">err</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <operator pos:start="59:23" pos:end="59:23">-</operator><name pos:start="59:24" pos:end="59:28">errno</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="105:13">else <block pos:start="61:20" pos:end="105:13">{<block_content pos:start="71:17" pos:end="103:62">

                <comment type="block" pos:start="63:17" pos:end="69:19">/*

                 * Fixup fid's pointing to the old name to

                 * start pointing to the new name

                 */</comment>

                <for pos:start="71:17" pos:end="101:17">for <control pos:start="71:21" pos:end="71:65">(<init pos:start="71:22" pos:end="71:40"><expr pos:start="71:22" pos:end="71:39"><name pos:start="71:22" pos:end="71:25">fidp</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:39"><name pos:start="71:29" pos:end="71:29">s</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:39">fid_list</name></name></expr>;</init> <condition pos:start="71:42" pos:end="71:46"><expr pos:start="71:42" pos:end="71:45"><name pos:start="71:42" pos:end="71:45">fidp</name></expr>;</condition> <incr pos:start="71:48" pos:end="71:64"><expr pos:start="71:48" pos:end="71:64"><name pos:start="71:48" pos:end="71:51">fidp</name> <operator pos:start="71:53" pos:end="71:53">=</operator> <name pos:start="71:55" pos:end="71:64"><name pos:start="71:55" pos:end="71:58">fidp</name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:64">next</name></name></expr></incr>)</control> <block pos:start="71:67" pos:end="101:17">{<block_content pos:start="75:21" pos:end="99:21">



                    <if_stmt pos:start="75:21" pos:end="87:21"><if pos:start="75:21" pos:end="87:21">if <condition pos:start="75:24" pos:end="75:41">(<expr pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:32"><name pos:start="75:25" pos:end="75:26">vs</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:32">fidp</name></name> <operator pos:start="75:34" pos:end="75:35">==</operator> <name pos:start="75:37" pos:end="75:40">fidp</name></expr>)</condition> <block pos:start="75:43" pos:end="87:21">{<block_content pos:start="85:25" pos:end="85:33">

                        <comment type="block" pos:start="77:25" pos:end="83:27">/*

                         * we replace name of this fid towards the end

                         * so that our below strcmp will work

                         */</comment>

                        <continue pos:start="85:25" pos:end="85:33">continue;</continue>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="89:21" pos:end="99:21"><if pos:start="89:21" pos:end="99:21">if <condition pos:start="89:24" pos:end="91:62">(<expr pos:start="89:25" pos:end="91:61"><operator pos:start="89:25" pos:end="89:25">!</operator><call pos:start="89:26" pos:end="91:61"><name pos:start="89:26" pos:end="89:32">strncmp</name><argument_list pos:start="89:33" pos:end="91:61">(<argument pos:start="89:34" pos:end="89:52"><expr pos:start="89:34" pos:end="89:52"><name pos:start="89:34" pos:end="89:52"><name pos:start="89:34" pos:end="89:35">vs</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:41">fidp</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:47">path</name><operator pos:start="89:48" pos:end="89:48">.</operator><name pos:start="89:49" pos:end="89:52">data</name></name></expr></argument>, <argument pos:start="89:55" pos:end="89:69"><expr pos:start="89:55" pos:end="89:69"><name pos:start="89:55" pos:end="89:69"><name pos:start="89:55" pos:end="89:58">fidp</name><operator pos:start="89:59" pos:end="89:60">-&gt;</operator><name pos:start="89:61" pos:end="89:64">path</name><operator pos:start="89:65" pos:end="89:65">.</operator><name pos:start="89:66" pos:end="89:69">data</name></name></expr></argument>,

                                 <argument pos:start="91:34" pos:end="91:60"><expr pos:start="91:34" pos:end="91:60"><call pos:start="91:34" pos:end="91:60"><name pos:start="91:34" pos:end="91:39">strlen</name><argument_list pos:start="91:40" pos:end="91:60">(<argument pos:start="91:41" pos:end="91:59"><expr pos:start="91:41" pos:end="91:59"><name pos:start="91:41" pos:end="91:59"><name pos:start="91:41" pos:end="91:42">vs</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:48">fidp</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:54">path</name><operator pos:start="91:55" pos:end="91:55">.</operator><name pos:start="91:56" pos:end="91:59">data</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:64" pos:end="99:21">{<block_content pos:start="95:25" pos:end="97:67">

                        <comment type="block" pos:start="93:25" pos:end="93:46">/* replace the name */</comment>

                        <expr_stmt pos:start="95:25" pos:end="97:67"><expr pos:start="95:25" pos:end="97:66"><call pos:start="95:25" pos:end="97:66"><name pos:start="95:25" pos:end="95:37">v9fs_fix_path</name><argument_list pos:start="95:38" pos:end="97:66">(<argument pos:start="95:39" pos:end="95:49"><expr pos:start="95:39" pos:end="95:49"><operator pos:start="95:39" pos:end="95:39">&amp;</operator><name pos:start="95:40" pos:end="95:49"><name pos:start="95:40" pos:end="95:43">fidp</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:49">path</name></name></expr></argument>, <argument pos:start="95:52" pos:end="95:61"><expr pos:start="95:52" pos:end="95:61"><operator pos:start="95:52" pos:end="95:52">&amp;</operator><name pos:start="95:53" pos:end="95:61"><name pos:start="95:53" pos:end="95:54">vs</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:61">nname</name></name></expr></argument>,

                                      <argument pos:start="97:39" pos:end="97:65"><expr pos:start="97:39" pos:end="97:65"><call pos:start="97:39" pos:end="97:65"><name pos:start="97:39" pos:end="97:44">strlen</name><argument_list pos:start="97:45" pos:end="97:65">(<argument pos:start="97:46" pos:end="97:64"><expr pos:start="97:46" pos:end="97:64"><name pos:start="97:46" pos:end="97:64"><name pos:start="97:46" pos:end="97:47">vs</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:53">fidp</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:59">path</name><operator pos:start="97:60" pos:end="97:60">.</operator><name pos:start="97:61" pos:end="97:64">data</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="103:17" pos:end="103:62"><expr pos:start="103:17" pos:end="103:61"><call pos:start="103:17" pos:end="103:61"><name pos:start="103:17" pos:end="103:32">v9fs_string_copy</name><argument_list pos:start="103:33" pos:end="103:61">(<argument pos:start="103:34" pos:end="103:48"><expr pos:start="103:34" pos:end="103:48"><operator pos:start="103:34" pos:end="103:34">&amp;</operator><name pos:start="103:35" pos:end="103:48"><name pos:start="103:35" pos:end="103:36">vs</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:42">fidp</name><operator pos:start="103:43" pos:end="103:44">-&gt;</operator><name pos:start="103:45" pos:end="103:48">path</name></name></expr></argument>, <argument pos:start="103:51" pos:end="103:60"><expr pos:start="103:51" pos:end="103:60"><operator pos:start="103:51" pos:end="103:51">&amp;</operator><name pos:start="103:52" pos:end="103:60"><name pos:start="103:52" pos:end="103:53">vs</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:60">nname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:39"><expr pos:start="111:5" pos:end="111:38"><call pos:start="111:5" pos:end="111:38"><name pos:start="111:5" pos:end="111:26">v9fs_wstat_post_rename</name><argument_list pos:start="111:27" pos:end="111:38">(<argument pos:start="111:28" pos:end="111:28"><expr pos:start="111:28" pos:end="111:28"><name pos:start="111:28" pos:end="111:28">s</name></expr></argument>, <argument pos:start="111:31" pos:end="111:32"><expr pos:start="111:31" pos:end="111:32"><name pos:start="111:31" pos:end="111:32">vs</name></expr></argument>, <argument pos:start="111:35" pos:end="111:37"><expr pos:start="111:35" pos:end="111:37"><name pos:start="111:35" pos:end="111:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:11">return;</return>



<label pos:start="117:1" pos:end="117:4"><name pos:start="117:1" pos:end="117:3">out</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:32"><expr pos:start="119:5" pos:end="119:31"><call pos:start="119:5" pos:end="119:31"><name pos:start="119:5" pos:end="119:18">v9fs_stat_free</name><argument_list pos:start="119:19" pos:end="119:31">(<argument pos:start="119:20" pos:end="119:30"><expr pos:start="119:20" pos:end="119:30"><operator pos:start="119:20" pos:end="119:20">&amp;</operator><name pos:start="119:21" pos:end="119:30"><name pos:start="119:21" pos:end="119:22">vs</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:30">v9stat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:34"><expr pos:start="121:5" pos:end="121:33"><call pos:start="121:5" pos:end="121:33"><name pos:start="121:5" pos:end="121:16">complete_pdu</name><argument_list pos:start="121:17" pos:end="121:33">(<argument pos:start="121:18" pos:end="121:18"><expr pos:start="121:18" pos:end="121:18"><name pos:start="121:18" pos:end="121:18">s</name></expr></argument>, <argument pos:start="121:21" pos:end="121:27"><expr pos:start="121:21" pos:end="121:27"><name pos:start="121:21" pos:end="121:27"><name pos:start="121:21" pos:end="121:22">vs</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:27">pdu</name></name></expr></argument>, <argument pos:start="121:30" pos:end="121:32"><expr pos:start="121:30" pos:end="121:32"><name pos:start="121:30" pos:end="121:32">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:18"><expr pos:start="123:5" pos:end="123:17"><call pos:start="123:5" pos:end="123:17"><name pos:start="123:5" pos:end="123:13">qemu_free</name><argument_list pos:start="123:14" pos:end="123:17">(<argument pos:start="123:15" pos:end="123:16"><expr pos:start="123:15" pos:end="123:16"><name pos:start="123:15" pos:end="123:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
