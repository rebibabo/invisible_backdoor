<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17005.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:31">event_notifier_poll</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:38"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:39">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">EventNotifier</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">e</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AioContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ctx</name> <init pos:start="7:21" pos:end="7:59">= <expr pos:start="7:23" pos:end="7:59"><call pos:start="7:23" pos:end="7:59"><name pos:start="7:23" pos:end="7:34">container_of</name><argument_list pos:start="7:35" pos:end="7:59">(<argument pos:start="7:36" pos:end="7:36"><expr pos:start="7:36" pos:end="7:36"><name pos:start="7:36" pos:end="7:36">e</name></expr></argument>, <argument pos:start="7:39" pos:end="7:48"><expr pos:start="7:39" pos:end="7:48"><name pos:start="7:39" pos:end="7:48">AioContext</name></expr></argument>, <argument pos:start="7:51" pos:end="7:58"><expr pos:start="7:51" pos:end="7:58"><name pos:start="7:51" pos:end="7:58">notifier</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <return pos:start="11:5" pos:end="11:39">return <expr pos:start="11:12" pos:end="11:38"><call pos:start="11:12" pos:end="11:38"><name pos:start="11:12" pos:end="11:22">atomic_read</name><argument_list pos:start="11:23" pos:end="11:38">(<argument pos:start="11:24" pos:end="11:37"><expr pos:start="11:24" pos:end="11:37"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:37"><name pos:start="11:25" pos:end="11:27">ctx</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:37">notified</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
