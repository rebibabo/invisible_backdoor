<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16827.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">test_io_channel_unix_fd_pass</name><parameter_list pos:start="1:41" pos:end="1:46">(<parameter pos:start="1:42" pos:end="1:45"><decl pos:start="1:42" pos:end="1:45"><type pos:start="1:42" pos:end="1:45"><name pos:start="1:42" pos:end="1:45">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:19">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SocketAddress</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:30">listen_addr</name> <init pos:start="5:32" pos:end="5:57">= <expr pos:start="5:34" pos:end="5:57"><call pos:start="5:34" pos:end="5:57"><name pos:start="5:34" pos:end="5:39">g_new0</name><argument_list pos:start="5:40" pos:end="5:57">(<argument pos:start="5:41" pos:end="5:53"><expr pos:start="5:41" pos:end="5:53"><name pos:start="5:41" pos:end="5:53">SocketAddress</name></expr></argument>, <argument pos:start="5:56" pos:end="5:56"><expr pos:start="5:56" pos:end="5:56"><literal type="number" pos:start="5:56" pos:end="5:56">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SocketAddress</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:31">connect_addr</name> <init pos:start="7:33" pos:end="7:58">= <expr pos:start="7:35" pos:end="7:58"><call pos:start="7:35" pos:end="7:58"><name pos:start="7:35" pos:end="7:40">g_new0</name><argument_list pos:start="7:41" pos:end="7:58">(<argument pos:start="7:42" pos:end="7:54"><expr pos:start="7:42" pos:end="7:54"><name pos:start="7:42" pos:end="7:54">SocketAddress</name></expr></argument>, <argument pos:start="7:57" pos:end="7:57"><expr pos:start="7:57" pos:end="7:57"><literal type="number" pos:start="7:57" pos:end="7:57">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">QIOChannel</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">src</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:16"><modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">testfd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:14">fdsend</name><index pos:start="13:15" pos:end="13:17">[<expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">int</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:15">fdrecv</name> <init pos:start="15:17" pos:end="15:22">= <expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:18">nfdrecv</name> <init pos:start="17:20" pos:end="17:22">= <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:13"><decl pos:start="19:5" pos:end="19:12"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">size_t</name></type> <name pos:start="19:12" pos:end="19:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">char</name></type> <name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:16">bufsend</name><index pos:start="21:17" pos:end="21:20">[<expr pos:start="21:18" pos:end="21:19"><literal type="number" pos:start="21:18" pos:end="21:19">12</literal></expr>]</index></name></decl>, <decl pos:start="21:23" pos:end="21:33"><type ref="prev" pos:start="21:5" pos:end="21:8"/><name pos:start="21:23" pos:end="21:33"><name pos:start="21:23" pos:end="21:29">bufrecv</name><index pos:start="21:30" pos:end="21:33">[<expr pos:start="21:31" pos:end="21:32"><literal type="number" pos:start="21:31" pos:end="21:32">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="30:0"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:16">iovec</name></name></type> <name pos:start="23:18" pos:end="23:26"><name pos:start="23:18" pos:end="23:23">iosend</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>]</index></name></decl>, <decl pos:start="23:29" pos:end="23:37"><type ref="prev" pos:start="23:5" pos:end="23:16"/><name pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:34">iorecv</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">1</literal></expr>]</index></name></decl>;</decl_stmt>



<cpp:define pos:start="27:1" pos:end="27:49">#<cpp:directive pos:start="27:2" pos:end="27:7">define</cpp:directive> <cpp:macro pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:19">TEST_SOCKET</name></cpp:macro> <cpp:value pos:start="27:21" pos:end="27:49">"test-io-channel-socket.sock"</cpp:value></cpp:define>

<cpp:define pos:start="29:1" pos:end="29:46">#<cpp:directive pos:start="29:2" pos:end="29:7">define</cpp:directive> <cpp:macro pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:17">TEST_FILE</name></cpp:macro> <cpp:value pos:start="29:19" pos:end="29:46">"test-io-channel-socket.txt"</cpp:value></cpp:define>



    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:10">testfd</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:58"><name pos:start="33:14" pos:end="33:17">open</name><argument_list pos:start="33:18" pos:end="33:58">(<argument pos:start="33:19" pos:end="33:27"><expr pos:start="33:19" pos:end="33:27"><name pos:start="33:19" pos:end="33:27">TEST_FILE</name></expr></argument>, <argument pos:start="33:30" pos:end="33:51"><expr pos:start="33:30" pos:end="33:51"><name pos:start="33:30" pos:end="33:35">O_RDWR</name><operator pos:start="33:36" pos:end="33:36">|</operator><name pos:start="33:37" pos:end="33:43">O_TRUNC</name><operator pos:start="33:44" pos:end="33:44">|</operator><name pos:start="33:45" pos:end="33:51">O_CREAT</name></expr></argument>, <argument pos:start="33:54" pos:end="33:57"><expr pos:start="33:54" pos:end="33:57"><literal type="number" pos:start="33:54" pos:end="33:57">0700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><call pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:12">g_assert</name><argument_list pos:start="35:13" pos:end="35:26">(<argument pos:start="35:14" pos:end="35:25"><expr pos:start="35:14" pos:end="35:25"><name pos:start="35:14" pos:end="35:19">testfd</name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <operator pos:start="35:24" pos:end="35:24">-</operator><literal type="number" pos:start="35:25" pos:end="35:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:10">fdsend</name><index pos:start="37:11" pos:end="37:13">[<expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>]</index></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:22">testfd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:10">fdsend</name><index pos:start="39:11" pos:end="39:13">[<expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">1</literal></expr>]</index></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:22">testfd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:10">fdsend</name><index pos:start="41:11" pos:end="41:13">[<expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">2</literal></expr>]</index></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:22">testfd</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:15">listen_addr</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:21">type</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:48">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:62"><expr pos:start="47:5" pos:end="47:61"><name pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:15">listen_addr</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:18">u</name><operator pos:start="47:19" pos:end="47:19">.</operator><name pos:start="47:20" pos:end="47:25">q_unix</name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:30">data</name></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <call pos:start="47:34" pos:end="47:61"><name pos:start="47:34" pos:end="47:39">g_new0</name><argument_list pos:start="47:40" pos:end="47:61">(<argument pos:start="47:41" pos:end="47:57"><expr pos:start="47:41" pos:end="47:57"><name pos:start="47:41" pos:end="47:57">UnixSocketAddress</name></expr></argument>, <argument pos:start="47:60" pos:end="47:60"><expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:61"><expr pos:start="49:5" pos:end="49:60"><name pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:15">listen_addr</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:18">u</name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:25">q_unix</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:30">data</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:36">path</name></name> <operator pos:start="49:38" pos:end="49:38">=</operator> <call pos:start="49:40" pos:end="49:60"><name pos:start="49:40" pos:end="49:47">g_strdup</name><argument_list pos:start="49:48" pos:end="49:60">(<argument pos:start="49:49" pos:end="49:59"><expr pos:start="49:49" pos:end="49:59"><name pos:start="49:49" pos:end="49:59">TEST_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:16">connect_addr</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:22">type</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:49">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:63"><expr pos:start="55:5" pos:end="55:62"><name pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:16">connect_addr</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:19">u</name><operator pos:start="55:20" pos:end="55:20">.</operator><name pos:start="55:21" pos:end="55:26">q_unix</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:31">data</name></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <call pos:start="55:35" pos:end="55:62"><name pos:start="55:35" pos:end="55:40">g_new0</name><argument_list pos:start="55:41" pos:end="55:62">(<argument pos:start="55:42" pos:end="55:58"><expr pos:start="55:42" pos:end="55:58"><name pos:start="55:42" pos:end="55:58">UnixSocketAddress</name></expr></argument>, <argument pos:start="55:61" pos:end="55:61"><expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:62"><expr pos:start="57:5" pos:end="57:61"><name pos:start="57:5" pos:end="57:37"><name pos:start="57:5" pos:end="57:16">connect_addr</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:19">u</name><operator pos:start="57:20" pos:end="57:20">.</operator><name pos:start="57:21" pos:end="57:26">q_unix</name><operator pos:start="57:27" pos:end="57:27">.</operator><name pos:start="57:28" pos:end="57:31">data</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:37">path</name></name> <operator pos:start="57:39" pos:end="57:39">=</operator> <call pos:start="57:41" pos:end="57:61"><name pos:start="57:41" pos:end="57:48">g_strdup</name><argument_list pos:start="57:49" pos:end="57:61">(<argument pos:start="57:50" pos:end="57:60"><expr pos:start="57:50" pos:end="57:60"><name pos:start="57:50" pos:end="57:60">TEST_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:70"><expr pos:start="61:5" pos:end="61:69"><call pos:start="61:5" pos:end="61:69"><name pos:start="61:5" pos:end="61:30">test_io_channel_setup_sync</name><argument_list pos:start="61:31" pos:end="61:69">(<argument pos:start="61:32" pos:end="61:42"><expr pos:start="61:32" pos:end="61:42"><name pos:start="61:32" pos:end="61:42">listen_addr</name></expr></argument>, <argument pos:start="61:45" pos:end="61:56"><expr pos:start="61:45" pos:end="61:56"><name pos:start="61:45" pos:end="61:56">connect_addr</name></expr></argument>, <argument pos:start="61:59" pos:end="61:62"><expr pos:start="61:59" pos:end="61:62"><operator pos:start="61:59" pos:end="61:59">&amp;</operator><name pos:start="61:60" pos:end="61:62">src</name></expr></argument>, <argument pos:start="61:65" pos:end="61:68"><expr pos:start="61:65" pos:end="61:68"><operator pos:start="61:65" pos:end="61:65">&amp;</operator><name pos:start="61:66" pos:end="61:68">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:58"><expr pos:start="65:5" pos:end="65:57"><call pos:start="65:5" pos:end="65:57"><name pos:start="65:5" pos:end="65:10">memcpy</name><argument_list pos:start="65:11" pos:end="65:57">(<argument pos:start="65:12" pos:end="65:18"><expr pos:start="65:12" pos:end="65:18"><name pos:start="65:12" pos:end="65:18">bufsend</name></expr></argument>, <argument pos:start="65:21" pos:end="65:33"><expr pos:start="65:21" pos:end="65:33"><literal type="string" pos:start="65:21" pos:end="65:33">"Hello World"</literal></expr></argument>, <argument pos:start="65:36" pos:end="65:56"><expr pos:start="65:36" pos:end="65:56"><call pos:start="65:36" pos:end="65:56"><name pos:start="65:36" pos:end="65:47">G_N_ELEMENTS</name><argument_list pos:start="65:48" pos:end="65:56">(<argument pos:start="65:49" pos:end="65:55"><expr pos:start="65:49" pos:end="65:55"><name pos:start="65:49" pos:end="65:55">bufsend</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:33"><expr pos:start="69:5" pos:end="69:32"><name pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:10">iosend</name><index pos:start="69:11" pos:end="69:13">[<expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>]</index></name><operator pos:start="69:14" pos:end="69:14">.</operator><name pos:start="69:15" pos:end="69:22">iov_base</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:32">bufsend</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:46"><expr pos:start="71:5" pos:end="71:45"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:10">iosend</name><index pos:start="71:11" pos:end="71:13">[<expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>]</index></name><operator pos:start="71:14" pos:end="71:14">.</operator><name pos:start="71:15" pos:end="71:21">iov_len</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:45"><name pos:start="71:25" pos:end="71:36">G_N_ELEMENTS</name><argument_list pos:start="71:37" pos:end="71:45">(<argument pos:start="71:38" pos:end="71:44"><expr pos:start="71:38" pos:end="71:44"><name pos:start="71:38" pos:end="71:44">bufsend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:33"><expr pos:start="75:5" pos:end="75:32"><name pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:10">iorecv</name><index pos:start="75:11" pos:end="75:13">[<expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>]</index></name><operator pos:start="75:14" pos:end="75:14">.</operator><name pos:start="75:15" pos:end="75:22">iov_base</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:32">bufrecv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:46"><expr pos:start="77:5" pos:end="77:45"><name pos:start="77:5" pos:end="77:13"><name pos:start="77:5" pos:end="77:10">iorecv</name><index pos:start="77:11" pos:end="77:13">[<expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>]</index></name><operator pos:start="77:14" pos:end="77:14">.</operator><name pos:start="77:15" pos:end="77:21">iov_len</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <call pos:start="77:25" pos:end="77:45"><name pos:start="77:25" pos:end="77:36">G_N_ELEMENTS</name><argument_list pos:start="77:37" pos:end="77:45">(<argument pos:start="77:38" pos:end="77:44"><expr pos:start="77:38" pos:end="77:44"><name pos:start="77:38" pos:end="77:44">bufrecv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:72"><expr pos:start="81:5" pos:end="81:71"><call pos:start="81:5" pos:end="81:71"><name pos:start="81:5" pos:end="81:12">g_assert</name><argument_list pos:start="81:13" pos:end="81:71">(<argument pos:start="81:14" pos:end="81:70"><expr pos:start="81:14" pos:end="81:70"><call pos:start="81:14" pos:end="81:70"><name pos:start="81:14" pos:end="81:36">qio_channel_has_feature</name><argument_list pos:start="81:37" pos:end="81:70">(<argument pos:start="81:38" pos:end="81:40"><expr pos:start="81:38" pos:end="81:40"><name pos:start="81:38" pos:end="81:40">src</name></expr></argument>, <argument pos:start="81:43" pos:end="81:69"><expr pos:start="81:43" pos:end="81:69"><name pos:start="81:43" pos:end="81:69">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:72"><expr pos:start="83:5" pos:end="83:71"><call pos:start="83:5" pos:end="83:71"><name pos:start="83:5" pos:end="83:12">g_assert</name><argument_list pos:start="83:13" pos:end="83:71">(<argument pos:start="83:14" pos:end="83:70"><expr pos:start="83:14" pos:end="83:70"><call pos:start="83:14" pos:end="83:70"><name pos:start="83:14" pos:end="83:36">qio_channel_has_feature</name><argument_list pos:start="83:37" pos:end="83:70">(<argument pos:start="83:38" pos:end="83:40"><expr pos:start="83:38" pos:end="83:40"><name pos:start="83:38" pos:end="83:40">dst</name></expr></argument>, <argument pos:start="83:43" pos:end="83:69"><expr pos:start="83:43" pos:end="83:69"><name pos:start="83:43" pos:end="83:69">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="97:42"><expr pos:start="87:5" pos:end="97:41"><call pos:start="87:5" pos:end="97:41"><name pos:start="87:5" pos:end="87:27">qio_channel_writev_full</name><argument_list pos:start="87:28" pos:end="97:41">(<argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">src</name></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:34"><expr pos:start="89:29" pos:end="89:34"><name pos:start="89:29" pos:end="89:34">iosend</name></expr></argument>,

                            <argument pos:start="91:29" pos:end="91:48"><expr pos:start="91:29" pos:end="91:48"><call pos:start="91:29" pos:end="91:48"><name pos:start="91:29" pos:end="91:40">G_N_ELEMENTS</name><argument_list pos:start="91:41" pos:end="91:48">(<argument pos:start="91:42" pos:end="91:47"><expr pos:start="91:42" pos:end="91:47"><name pos:start="91:42" pos:end="91:47">iosend</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="93:29" pos:end="93:34"><expr pos:start="93:29" pos:end="93:34"><name pos:start="93:29" pos:end="93:34">fdsend</name></expr></argument>,

                            <argument pos:start="95:29" pos:end="95:48"><expr pos:start="95:29" pos:end="95:48"><call pos:start="95:29" pos:end="95:48"><name pos:start="95:29" pos:end="95:40">G_N_ELEMENTS</name><argument_list pos:start="95:41" pos:end="95:48">(<argument pos:start="95:42" pos:end="95:47"><expr pos:start="95:42" pos:end="95:47"><name pos:start="95:42" pos:end="95:47">fdsend</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="97:29" pos:end="97:40"><expr pos:start="97:29" pos:end="97:40"><operator pos:start="97:29" pos:end="97:29">&amp;</operator><name pos:start="97:30" pos:end="97:40">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="111:41"><expr pos:start="101:5" pos:end="111:40"><call pos:start="101:5" pos:end="111:40"><name pos:start="101:5" pos:end="101:26">qio_channel_readv_full</name><argument_list pos:start="101:27" pos:end="111:40">(<argument pos:start="101:28" pos:end="101:30"><expr pos:start="101:28" pos:end="101:30"><name pos:start="101:28" pos:end="101:30">dst</name></expr></argument>,

                           <argument pos:start="103:28" pos:end="103:33"><expr pos:start="103:28" pos:end="103:33"><name pos:start="103:28" pos:end="103:33">iorecv</name></expr></argument>,

                           <argument pos:start="105:28" pos:end="105:47"><expr pos:start="105:28" pos:end="105:47"><call pos:start="105:28" pos:end="105:47"><name pos:start="105:28" pos:end="105:39">G_N_ELEMENTS</name><argument_list pos:start="105:40" pos:end="105:47">(<argument pos:start="105:41" pos:end="105:46"><expr pos:start="105:41" pos:end="105:46"><name pos:start="105:41" pos:end="105:46">iorecv</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="107:28" pos:end="107:34"><expr pos:start="107:28" pos:end="107:34"><operator pos:start="107:28" pos:end="107:28">&amp;</operator><name pos:start="107:29" pos:end="107:34">fdrecv</name></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:35"><expr pos:start="109:28" pos:end="109:35"><operator pos:start="109:28" pos:end="109:28">&amp;</operator><name pos:start="109:29" pos:end="109:35">nfdrecv</name></expr></argument>,

                           <argument pos:start="111:28" pos:end="111:39"><expr pos:start="111:28" pos:end="111:39"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:46"><expr pos:start="115:5" pos:end="115:45"><call pos:start="115:5" pos:end="115:45"><name pos:start="115:5" pos:end="115:12">g_assert</name><argument_list pos:start="115:13" pos:end="115:45">(<argument pos:start="115:14" pos:end="115:44"><expr pos:start="115:14" pos:end="115:44"><name pos:start="115:14" pos:end="115:20">nfdrecv</name> <operator pos:start="115:22" pos:end="115:23">==</operator> <call pos:start="115:25" pos:end="115:44"><name pos:start="115:25" pos:end="115:36">G_N_ELEMENTS</name><argument_list pos:start="115:37" pos:end="115:44">(<argument pos:start="115:38" pos:end="115:43"><expr pos:start="115:38" pos:end="115:43"><name pos:start="115:38" pos:end="115:43">fdsend</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="117:5" pos:end="117:56">/* Each recvd FD should be different from sent FD */</comment>

    <for pos:start="119:5" pos:end="123:5">for <control pos:start="119:9" pos:end="119:33">(<init pos:start="119:10" pos:end="119:15"><expr pos:start="119:10" pos:end="119:14"><name pos:start="119:10" pos:end="119:10">i</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</init> <condition pos:start="119:17" pos:end="119:28"><expr pos:start="119:17" pos:end="119:27"><name pos:start="119:17" pos:end="119:17">i</name> <operator pos:start="119:19" pos:end="119:19">&lt;</operator> <name pos:start="119:21" pos:end="119:27">nfdrecv</name></expr>;</condition> <incr pos:start="119:30" pos:end="119:32"><expr pos:start="119:30" pos:end="119:32"><name pos:start="119:30" pos:end="119:30">i</name><operator pos:start="119:31" pos:end="119:32">++</operator></expr></incr>)</control> <block pos:start="119:35" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:47">

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><call pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:23">g_assert_cmpint</name><argument_list pos:start="121:24" pos:end="121:46">(<argument pos:start="121:25" pos:end="121:33"><expr pos:start="121:25" pos:end="121:33"><name pos:start="121:25" pos:end="121:33"><name pos:start="121:25" pos:end="121:30">fdrecv</name><index pos:start="121:31" pos:end="121:33">[<expr pos:start="121:32" pos:end="121:32"><name pos:start="121:32" pos:end="121:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="121:36" pos:end="121:37"><expr pos:start="121:36" pos:end="121:37"><operator pos:start="121:36" pos:end="121:37">!=</operator></expr></argument>, <argument pos:start="121:40" pos:end="121:45"><expr pos:start="121:40" pos:end="121:45"><name pos:start="121:40" pos:end="121:45">testfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="125:5" pos:end="125:59">/* Each recvd FD should be different from each other */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:46"><expr pos:start="127:5" pos:end="127:45"><call pos:start="127:5" pos:end="127:45"><name pos:start="127:5" pos:end="127:19">g_assert_cmpint</name><argument_list pos:start="127:20" pos:end="127:45">(<argument pos:start="127:21" pos:end="127:29"><expr pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:26">fdrecv</name><index pos:start="127:27" pos:end="127:29">[<expr pos:start="127:28" pos:end="127:28"><literal type="number" pos:start="127:28" pos:end="127:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:32" pos:end="127:33"><expr pos:start="127:32" pos:end="127:33"><operator pos:start="127:32" pos:end="127:33">!=</operator></expr></argument>, <argument pos:start="127:36" pos:end="127:44"><expr pos:start="127:36" pos:end="127:44"><name pos:start="127:36" pos:end="127:44"><name pos:start="127:36" pos:end="127:41">fdrecv</name><index pos:start="127:42" pos:end="127:44">[<expr pos:start="127:43" pos:end="127:43"><literal type="number" pos:start="127:43" pos:end="127:43">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:46"><expr pos:start="129:5" pos:end="129:45"><call pos:start="129:5" pos:end="129:45"><name pos:start="129:5" pos:end="129:19">g_assert_cmpint</name><argument_list pos:start="129:20" pos:end="129:45">(<argument pos:start="129:21" pos:end="129:29"><expr pos:start="129:21" pos:end="129:29"><name pos:start="129:21" pos:end="129:29"><name pos:start="129:21" pos:end="129:26">fdrecv</name><index pos:start="129:27" pos:end="129:29">[<expr pos:start="129:28" pos:end="129:28"><literal type="number" pos:start="129:28" pos:end="129:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="129:32" pos:end="129:33"><expr pos:start="129:32" pos:end="129:33"><operator pos:start="129:32" pos:end="129:33">!=</operator></expr></argument>, <argument pos:start="129:36" pos:end="129:44"><expr pos:start="129:36" pos:end="129:44"><name pos:start="129:36" pos:end="129:44"><name pos:start="129:36" pos:end="129:41">fdrecv</name><index pos:start="129:42" pos:end="129:44">[<expr pos:start="129:43" pos:end="129:43"><literal type="number" pos:start="129:43" pos:end="129:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:46"><expr pos:start="131:5" pos:end="131:45"><call pos:start="131:5" pos:end="131:45"><name pos:start="131:5" pos:end="131:19">g_assert_cmpint</name><argument_list pos:start="131:20" pos:end="131:45">(<argument pos:start="131:21" pos:end="131:29"><expr pos:start="131:21" pos:end="131:29"><name pos:start="131:21" pos:end="131:29"><name pos:start="131:21" pos:end="131:26">fdrecv</name><index pos:start="131:27" pos:end="131:29">[<expr pos:start="131:28" pos:end="131:28"><literal type="number" pos:start="131:28" pos:end="131:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:32" pos:end="131:33"><expr pos:start="131:32" pos:end="131:33"><operator pos:start="131:32" pos:end="131:33">!=</operator></expr></argument>, <argument pos:start="131:36" pos:end="131:44"><expr pos:start="131:36" pos:end="131:44"><name pos:start="131:36" pos:end="131:44"><name pos:start="131:36" pos:end="131:41">fdrecv</name><index pos:start="131:42" pos:end="131:44">[<expr pos:start="131:43" pos:end="131:43"><literal type="number" pos:start="131:43" pos:end="131:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:60">/* Check the I/O buf we sent at the same time matches */</comment>

    <expr_stmt pos:start="137:5" pos:end="137:67"><expr pos:start="137:5" pos:end="137:66"><call pos:start="137:5" pos:end="137:66"><name pos:start="137:5" pos:end="137:12">g_assert</name><argument_list pos:start="137:13" pos:end="137:66">(<argument pos:start="137:14" pos:end="137:65"><expr pos:start="137:14" pos:end="137:65"><call pos:start="137:14" pos:end="137:60"><name pos:start="137:14" pos:end="137:19">memcmp</name><argument_list pos:start="137:20" pos:end="137:60">(<argument pos:start="137:21" pos:end="137:27"><expr pos:start="137:21" pos:end="137:27"><name pos:start="137:21" pos:end="137:27">bufsend</name></expr></argument>, <argument pos:start="137:30" pos:end="137:36"><expr pos:start="137:30" pos:end="137:36"><name pos:start="137:30" pos:end="137:36">bufrecv</name></expr></argument>, <argument pos:start="137:39" pos:end="137:59"><expr pos:start="137:39" pos:end="137:59"><call pos:start="137:39" pos:end="137:59"><name pos:start="137:39" pos:end="137:50">G_N_ELEMENTS</name><argument_list pos:start="137:51" pos:end="137:59">(<argument pos:start="137:52" pos:end="137:58"><expr pos:start="137:52" pos:end="137:58"><name pos:start="137:52" pos:end="137:58">bufsend</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="137:62" pos:end="137:63">==</operator> <literal type="number" pos:start="137:65" pos:end="137:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:49">/* Write some data into the FD we received */</comment>

    <expr_stmt pos:start="143:5" pos:end="145:36"><expr pos:start="143:5" pos:end="145:35"><call pos:start="143:5" pos:end="145:35"><name pos:start="143:5" pos:end="143:12">g_assert</name><argument_list pos:start="143:13" pos:end="145:35">(<argument pos:start="143:14" pos:end="145:34"><expr pos:start="143:14" pos:end="145:34"><call pos:start="143:14" pos:end="143:61"><name pos:start="143:14" pos:end="143:18">write</name><argument_list pos:start="143:19" pos:end="143:61">(<argument pos:start="143:20" pos:end="143:28"><expr pos:start="143:20" pos:end="143:28"><name pos:start="143:20" pos:end="143:28"><name pos:start="143:20" pos:end="143:25">fdrecv</name><index pos:start="143:26" pos:end="143:28">[<expr pos:start="143:27" pos:end="143:27"><literal type="number" pos:start="143:27" pos:end="143:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:31" pos:end="143:37"><expr pos:start="143:31" pos:end="143:37"><name pos:start="143:31" pos:end="143:37">bufsend</name></expr></argument>, <argument pos:start="143:40" pos:end="143:60"><expr pos:start="143:40" pos:end="143:60"><call pos:start="143:40" pos:end="143:60"><name pos:start="143:40" pos:end="143:51">G_N_ELEMENTS</name><argument_list pos:start="143:52" pos:end="143:60">(<argument pos:start="143:53" pos:end="143:59"><expr pos:start="143:53" pos:end="143:59"><name pos:start="143:53" pos:end="143:59">bufsend</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="143:63" pos:end="143:64">==</operator>

             <call pos:start="145:14" pos:end="145:34"><name pos:start="145:14" pos:end="145:25">G_N_ELEMENTS</name><argument_list pos:start="145:26" pos:end="145:34">(<argument pos:start="145:27" pos:end="145:33"><expr pos:start="145:27" pos:end="145:33"><name pos:start="145:27" pos:end="145:33">bufsend</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:65">/* Read data from the original FD and make sure it matches */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:46"><expr pos:start="151:5" pos:end="151:45"><call pos:start="151:5" pos:end="151:45"><name pos:start="151:5" pos:end="151:10">memset</name><argument_list pos:start="151:11" pos:end="151:45">(<argument pos:start="151:12" pos:end="151:18"><expr pos:start="151:12" pos:end="151:18"><name pos:start="151:12" pos:end="151:18">bufrecv</name></expr></argument>, <argument pos:start="151:21" pos:end="151:21"><expr pos:start="151:21" pos:end="151:21"><literal type="number" pos:start="151:21" pos:end="151:21">0</literal></expr></argument>, <argument pos:start="151:24" pos:end="151:44"><expr pos:start="151:24" pos:end="151:44"><call pos:start="151:24" pos:end="151:44"><name pos:start="151:24" pos:end="151:35">G_N_ELEMENTS</name><argument_list pos:start="151:36" pos:end="151:44">(<argument pos:start="151:37" pos:end="151:43"><expr pos:start="151:37" pos:end="151:43"><name pos:start="151:37" pos:end="151:43">bufrecv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:46"><expr pos:start="153:5" pos:end="153:45"><call pos:start="153:5" pos:end="153:45"><name pos:start="153:5" pos:end="153:12">g_assert</name><argument_list pos:start="153:13" pos:end="153:45">(<argument pos:start="153:14" pos:end="153:44"><expr pos:start="153:14" pos:end="153:44"><call pos:start="153:14" pos:end="153:39"><name pos:start="153:14" pos:end="153:18">lseek</name><argument_list pos:start="153:19" pos:end="153:39">(<argument pos:start="153:20" pos:end="153:25"><expr pos:start="153:20" pos:end="153:25"><name pos:start="153:20" pos:end="153:25">testfd</name></expr></argument>, <argument pos:start="153:28" pos:end="153:28"><expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">0</literal></expr></argument>, <argument pos:start="153:31" pos:end="153:38"><expr pos:start="153:31" pos:end="153:38"><name pos:start="153:31" pos:end="153:38">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="153:41" pos:end="153:42">==</operator> <literal type="number" pos:start="153:44" pos:end="153:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="157:36"><expr pos:start="155:5" pos:end="157:35"><call pos:start="155:5" pos:end="157:35"><name pos:start="155:5" pos:end="155:12">g_assert</name><argument_list pos:start="155:13" pos:end="157:35">(<argument pos:start="155:14" pos:end="157:34"><expr pos:start="155:14" pos:end="157:34"><call pos:start="155:14" pos:end="155:57"><name pos:start="155:14" pos:end="155:17">read</name><argument_list pos:start="155:18" pos:end="155:57">(<argument pos:start="155:19" pos:end="155:24"><expr pos:start="155:19" pos:end="155:24"><name pos:start="155:19" pos:end="155:24">testfd</name></expr></argument>, <argument pos:start="155:27" pos:end="155:33"><expr pos:start="155:27" pos:end="155:33"><name pos:start="155:27" pos:end="155:33">bufrecv</name></expr></argument>, <argument pos:start="155:36" pos:end="155:56"><expr pos:start="155:36" pos:end="155:56"><call pos:start="155:36" pos:end="155:56"><name pos:start="155:36" pos:end="155:47">G_N_ELEMENTS</name><argument_list pos:start="155:48" pos:end="155:56">(<argument pos:start="155:49" pos:end="155:55"><expr pos:start="155:49" pos:end="155:55"><name pos:start="155:49" pos:end="155:55">bufrecv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="155:59" pos:end="155:60">==</operator>

             <call pos:start="157:14" pos:end="157:34"><name pos:start="157:14" pos:end="157:25">G_N_ELEMENTS</name><argument_list pos:start="157:26" pos:end="157:34">(<argument pos:start="157:27" pos:end="157:33"><expr pos:start="157:27" pos:end="157:33"><name pos:start="157:27" pos:end="157:33">bufrecv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:67"><expr pos:start="159:5" pos:end="159:66"><call pos:start="159:5" pos:end="159:66"><name pos:start="159:5" pos:end="159:12">g_assert</name><argument_list pos:start="159:13" pos:end="159:66">(<argument pos:start="159:14" pos:end="159:65"><expr pos:start="159:14" pos:end="159:65"><call pos:start="159:14" pos:end="159:60"><name pos:start="159:14" pos:end="159:19">memcmp</name><argument_list pos:start="159:20" pos:end="159:60">(<argument pos:start="159:21" pos:end="159:27"><expr pos:start="159:21" pos:end="159:27"><name pos:start="159:21" pos:end="159:27">bufsend</name></expr></argument>, <argument pos:start="159:30" pos:end="159:36"><expr pos:start="159:30" pos:end="159:36"><name pos:start="159:30" pos:end="159:36">bufrecv</name></expr></argument>, <argument pos:start="159:39" pos:end="159:59"><expr pos:start="159:39" pos:end="159:59"><call pos:start="159:39" pos:end="159:59"><name pos:start="159:39" pos:end="159:50">G_N_ELEMENTS</name><argument_list pos:start="159:51" pos:end="159:59">(<argument pos:start="159:52" pos:end="159:58"><expr pos:start="159:52" pos:end="159:58"><name pos:start="159:52" pos:end="159:58">bufsend</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="159:62" pos:end="159:63">==</operator> <literal type="number" pos:start="159:65" pos:end="159:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:30"><expr pos:start="163:5" pos:end="163:29"><call pos:start="163:5" pos:end="163:29"><name pos:start="163:5" pos:end="163:16">object_unref</name><argument_list pos:start="163:17" pos:end="163:29">(<argument pos:start="163:18" pos:end="163:28"><expr pos:start="163:18" pos:end="163:28"><call pos:start="163:18" pos:end="163:28"><name pos:start="163:18" pos:end="163:23">OBJECT</name><argument_list pos:start="163:24" pos:end="163:28">(<argument pos:start="163:25" pos:end="163:27"><expr pos:start="163:25" pos:end="163:27"><name pos:start="163:25" pos:end="163:27">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:30"><expr pos:start="165:5" pos:end="165:29"><call pos:start="165:5" pos:end="165:29"><name pos:start="165:5" pos:end="165:16">object_unref</name><argument_list pos:start="165:17" pos:end="165:29">(<argument pos:start="165:18" pos:end="165:28"><expr pos:start="165:18" pos:end="165:28"><call pos:start="165:18" pos:end="165:28"><name pos:start="165:18" pos:end="165:23">OBJECT</name><argument_list pos:start="165:24" pos:end="165:28">(<argument pos:start="165:25" pos:end="165:27"><expr pos:start="165:25" pos:end="165:27"><name pos:start="165:25" pos:end="165:27">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:41"><expr pos:start="167:5" pos:end="167:40"><call pos:start="167:5" pos:end="167:40"><name pos:start="167:5" pos:end="167:27">qapi_free_SocketAddress</name><argument_list pos:start="167:28" pos:end="167:40">(<argument pos:start="167:29" pos:end="167:39"><expr pos:start="167:29" pos:end="167:39"><name pos:start="167:29" pos:end="167:39">listen_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:42"><expr pos:start="169:5" pos:end="169:41"><call pos:start="169:5" pos:end="169:41"><name pos:start="169:5" pos:end="169:27">qapi_free_SocketAddress</name><argument_list pos:start="169:28" pos:end="169:41">(<argument pos:start="169:29" pos:end="169:40"><expr pos:start="169:29" pos:end="169:40"><name pos:start="169:29" pos:end="169:40">connect_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:24"><expr pos:start="171:5" pos:end="171:23"><call pos:start="171:5" pos:end="171:23"><name pos:start="171:5" pos:end="171:10">unlink</name><argument_list pos:start="171:11" pos:end="171:23">(<argument pos:start="171:12" pos:end="171:22"><expr pos:start="171:12" pos:end="171:22"><name pos:start="171:12" pos:end="171:22">TEST_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:22"><expr pos:start="173:5" pos:end="173:21"><call pos:start="173:5" pos:end="173:21"><name pos:start="173:5" pos:end="173:10">unlink</name><argument_list pos:start="173:11" pos:end="173:21">(<argument pos:start="173:12" pos:end="173:20"><expr pos:start="173:12" pos:end="173:20"><name pos:start="173:12" pos:end="173:20">TEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:18"><expr pos:start="175:5" pos:end="175:17"><call pos:start="175:5" pos:end="175:17"><name pos:start="175:5" pos:end="175:9">close</name><argument_list pos:start="175:10" pos:end="175:17">(<argument pos:start="175:11" pos:end="175:16"><expr pos:start="175:11" pos:end="175:16"><name pos:start="175:11" pos:end="175:16">testfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="177:5" pos:end="181:5">for <control pos:start="177:9" pos:end="177:33">(<init pos:start="177:10" pos:end="177:15"><expr pos:start="177:10" pos:end="177:14"><name pos:start="177:10" pos:end="177:10">i</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <literal type="number" pos:start="177:14" pos:end="177:14">0</literal></expr>;</init> <condition pos:start="177:17" pos:end="177:28"><expr pos:start="177:17" pos:end="177:27"><name pos:start="177:17" pos:end="177:17">i</name> <operator pos:start="177:19" pos:end="177:19">&lt;</operator> <name pos:start="177:21" pos:end="177:27">nfdrecv</name></expr>;</condition> <incr pos:start="177:30" pos:end="177:32"><expr pos:start="177:30" pos:end="177:32"><name pos:start="177:30" pos:end="177:30">i</name><operator pos:start="177:31" pos:end="177:32">++</operator></expr></incr>)</control> <block pos:start="177:35" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:25">

        <expr_stmt pos:start="179:9" pos:end="179:25"><expr pos:start="179:9" pos:end="179:24"><call pos:start="179:9" pos:end="179:24"><name pos:start="179:9" pos:end="179:13">close</name><argument_list pos:start="179:14" pos:end="179:24">(<argument pos:start="179:15" pos:end="179:23"><expr pos:start="179:15" pos:end="179:23"><name pos:start="179:15" pos:end="179:23"><name pos:start="179:15" pos:end="179:20">fdrecv</name><index pos:start="179:21" pos:end="179:23">[<expr pos:start="179:22" pos:end="179:22"><name pos:start="179:22" pos:end="179:22">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="183:5" pos:end="183:19"><expr pos:start="183:5" pos:end="183:18"><call pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:10">g_free</name><argument_list pos:start="183:11" pos:end="183:18">(<argument pos:start="183:12" pos:end="183:17"><expr pos:start="183:12" pos:end="183:17"><name pos:start="183:12" pos:end="183:17">fdrecv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
