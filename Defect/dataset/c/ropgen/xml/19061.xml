<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19061.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:46">usbredir_handle_interrupt_out_data</name><parameter_list pos:start="1:47" pos:end="3:72">(<parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:61">USBRedirDevice</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">dev</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:56">USBPacket</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:59">p</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:71"><decl pos:start="3:62" pos:end="3:71"><type pos:start="3:62" pos:end="3:71"><name pos:start="3:62" pos:end="3:68">uint8_t</name></type> <name pos:start="3:70" pos:end="3:71">ep</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:30">

    <comment type="block" pos:start="7:5" pos:end="7:59">/* Output interrupt endpoint, normal async operation */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:44"><name pos:start="9:5" pos:end="9:44"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:44">usb_redir_interrupt_packet_header</name></name></type> <name pos:start="9:46" pos:end="9:61">interrupt_packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:28"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:28">[<expr pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:17">p</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:22">iov</name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:27">size</name></name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:32"><expr pos:start="15:5" pos:end="17:31"><call pos:start="15:5" pos:end="17:31"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="17:31">(<argument pos:start="15:13" pos:end="15:58"><expr pos:start="15:13" pos:end="15:58"><literal type="string" pos:start="15:13" pos:end="15:48">"interrupt-out ep %02X len %zd id %"</literal><name pos:start="15:49" pos:end="15:54">PRIu64</name><literal type="string" pos:start="15:55" pos:end="15:58">"\n"</literal></expr></argument>, <argument pos:start="15:61" pos:end="15:62"><expr pos:start="15:61" pos:end="15:62"><name pos:start="15:61" pos:end="15:62">ep</name></expr></argument>,

            <argument pos:start="17:13" pos:end="17:23"><expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:13">p</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">iov</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:23">size</name></name></expr></argument>, <argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:26">p</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:30">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:47">(<expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:34">usbredir_already_in_flight</name><argument_list pos:start="21:35" pos:end="21:46">(<argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">dev</name></expr></argument>, <argument pos:start="21:41" pos:end="21:45"><expr pos:start="21:41" pos:end="21:45"><name pos:start="21:41" pos:end="21:45"><name pos:start="21:41" pos:end="21:41">p</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:45">id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:49" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">p</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">status</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:33">USB_RET_ASYNC</name></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:20">interrupt_packet</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:29">endpoint</name></name>  <operator pos:start="31:32" pos:end="31:32">=</operator> <name pos:start="31:34" pos:end="31:35">ep</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:20">interrupt_packet</name><operator pos:start="33:21" pos:end="33:21">.</operator><name pos:start="33:22" pos:end="33:27">length</name></name>    <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:44"><name pos:start="33:34" pos:end="33:34">p</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:39">iov</name><operator pos:start="33:40" pos:end="33:40">.</operator><name pos:start="33:41" pos:end="33:44">size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:19">usb_packet_copy</name><argument_list pos:start="37:20" pos:end="37:40">(<argument pos:start="37:21" pos:end="37:21"><expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">p</name></expr></argument>, <argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">buf</name></expr></argument>, <argument pos:start="37:29" pos:end="37:39"><expr pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:29">p</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:34">iov</name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:39">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:68"><expr pos:start="39:5" pos:end="39:67"><call pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:21">usbredir_log_data</name><argument_list pos:start="39:22" pos:end="39:67">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:25">dev</name></expr></argument>, <argument pos:start="39:28" pos:end="39:48"><expr pos:start="39:28" pos:end="39:48"><literal type="string" pos:start="39:28" pos:end="39:48">"interrupt data out:"</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:53"><expr pos:start="39:51" pos:end="39:53"><name pos:start="39:51" pos:end="39:53">buf</name></expr></argument>, <argument pos:start="39:56" pos:end="39:66"><expr pos:start="39:56" pos:end="39:66"><name pos:start="39:56" pos:end="39:66"><name pos:start="39:56" pos:end="39:56">p</name><operator pos:start="39:57" pos:end="39:58">-&gt;</operator><name pos:start="39:59" pos:end="39:61">iov</name><operator pos:start="39:62" pos:end="39:62">.</operator><name pos:start="39:63" pos:end="39:66">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:73"><expr pos:start="41:5" pos:end="43:72"><call pos:start="41:5" pos:end="43:72"><name pos:start="41:5" pos:end="41:40">usbredirparser_send_interrupt_packet</name><argument_list pos:start="41:41" pos:end="43:72">(<argument pos:start="41:42" pos:end="41:52"><expr pos:start="41:42" pos:end="41:52"><name pos:start="41:42" pos:end="41:52"><name pos:start="41:42" pos:end="41:44">dev</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:52">parser</name></name></expr></argument>, <argument pos:start="41:55" pos:end="41:59"><expr pos:start="41:55" pos:end="41:59"><name pos:start="41:55" pos:end="41:59"><name pos:start="41:55" pos:end="41:55">p</name><operator pos:start="41:56" pos:end="41:57">-&gt;</operator><name pos:start="41:58" pos:end="41:59">id</name></name></expr></argument>,

                                    <argument pos:start="43:37" pos:end="43:53"><expr pos:start="43:37" pos:end="43:53"><operator pos:start="43:37" pos:end="43:37">&amp;</operator><name pos:start="43:38" pos:end="43:53">interrupt_packet</name></expr></argument>, <argument pos:start="43:56" pos:end="43:58"><expr pos:start="43:56" pos:end="43:58"><name pos:start="43:56" pos:end="43:58">buf</name></expr></argument>, <argument pos:start="43:61" pos:end="43:71"><expr pos:start="43:61" pos:end="43:71"><name pos:start="43:61" pos:end="43:71"><name pos:start="43:61" pos:end="43:61">p</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:66">iov</name><operator pos:start="43:67" pos:end="43:67">.</operator><name pos:start="43:68" pos:end="43:71">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:27">usbredirparser_do_write</name><argument_list pos:start="45:28" pos:end="45:40">(<argument pos:start="45:29" pos:end="45:39"><expr pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:31">dev</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:39">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:30"><expr pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:5">p</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:13">status</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:29">USB_RET_ASYNC</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
