<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16845.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">gen_or</name><parameter_list pos:start="1:19" pos:end="1:37">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:33"><name pos:start="1:20" pos:end="1:31">DisasContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rs</name></decl>, <decl pos:start="5:13" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:14">ra</name></decl>, <decl pos:start="5:17" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:18">rb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:6">rs</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:11">rS</name><argument_list pos:start="9:12" pos:end="9:24">(<argument pos:start="9:13" pos:end="9:23"><expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:15">ctx</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:23">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:6">ra</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:24"><name pos:start="11:10" pos:end="11:11">rA</name><argument_list pos:start="11:12" pos:end="11:24">(<argument pos:start="11:13" pos:end="11:23"><expr pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:15">ctx</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:23">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:6">rb</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:11">rB</name><argument_list pos:start="13:12" pos:end="13:24">(<argument pos:start="13:13" pos:end="13:23"><expr pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:15">ctx</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:23">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:38">/* Optimisation for mr. ri case */</comment>

    <if_stmt pos:start="17:5" pos:end="147:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:10">rs</name> <operator pos:start="17:12" pos:end="17:13">!=</operator> <name pos:start="17:15" pos:end="17:16">ra</name> <operator pos:start="17:18" pos:end="17:19">||</operator> <name pos:start="17:21" pos:end="17:22">rs</name> <operator pos:start="17:24" pos:end="17:25">!=</operator> <name pos:start="17:27" pos:end="17:28">rb</name></expr>)</condition> <block pos:start="17:31" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:42">

        <if_stmt pos:start="19:9" pos:end="25:53"><if pos:start="19:9" pos:end="21:65">if <condition pos:start="19:12" pos:end="19:21">(<expr pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:14">rs</name> <operator pos:start="19:16" pos:end="19:17">!=</operator> <name pos:start="19:19" pos:end="19:20">rb</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:65"><block_content pos:start="21:13" pos:end="21:65">

            <expr_stmt pos:start="21:13" pos:end="21:65"><expr pos:start="21:13" pos:end="21:64"><call pos:start="21:13" pos:end="21:64"><name pos:start="21:13" pos:end="21:25">tcg_gen_or_tl</name><argument_list pos:start="21:26" pos:end="21:64">(<argument pos:start="21:27" pos:end="21:37"><expr pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:33">cpu_gpr</name><index pos:start="21:34" pos:end="21:37">[<expr pos:start="21:35" pos:end="21:36"><name pos:start="21:35" pos:end="21:36">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="21:40" pos:end="21:50"><expr pos:start="21:40" pos:end="21:50"><name pos:start="21:40" pos:end="21:50"><name pos:start="21:40" pos:end="21:46">cpu_gpr</name><index pos:start="21:47" pos:end="21:50">[<expr pos:start="21:48" pos:end="21:49"><name pos:start="21:48" pos:end="21:49">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="21:53" pos:end="21:63"><expr pos:start="21:53" pos:end="21:63"><name pos:start="21:53" pos:end="21:63"><name pos:start="21:53" pos:end="21:59">cpu_gpr</name><index pos:start="21:60" pos:end="21:63">[<expr pos:start="21:61" pos:end="21:62"><name pos:start="21:61" pos:end="21:62">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="23:9" pos:end="25:53">else<block type="pseudo" pos:start="25:13" pos:end="25:53"><block_content pos:start="25:13" pos:end="25:53">

            <expr_stmt pos:start="25:13" pos:end="25:53"><expr pos:start="25:13" pos:end="25:52"><call pos:start="25:13" pos:end="25:52"><name pos:start="25:13" pos:end="25:26">tcg_gen_mov_tl</name><argument_list pos:start="25:27" pos:end="25:52">(<argument pos:start="25:28" pos:end="25:38"><expr pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:34">cpu_gpr</name><index pos:start="25:35" pos:end="25:38">[<expr pos:start="25:36" pos:end="25:37"><name pos:start="25:36" pos:end="25:37">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="25:41" pos:end="25:51"><expr pos:start="25:41" pos:end="25:51"><name pos:start="25:41" pos:end="25:51"><name pos:start="25:41" pos:end="25:47">cpu_gpr</name><index pos:start="25:48" pos:end="25:51">[<expr pos:start="25:49" pos:end="25:50"><name pos:start="25:49" pos:end="25:50">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="27:9" pos:end="29:42"><if pos:start="27:9" pos:end="29:42">if <condition pos:start="27:12" pos:end="27:43">(<expr pos:start="27:13" pos:end="27:42"><call pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:20">unlikely</name><argument_list pos:start="27:21" pos:end="27:42">(<argument pos:start="27:22" pos:end="27:41"><expr pos:start="27:22" pos:end="27:41"><call pos:start="27:22" pos:end="27:36"><name pos:start="27:22" pos:end="27:23">Rc</name><argument_list pos:start="27:24" pos:end="27:36">(<argument pos:start="27:25" pos:end="27:35"><expr pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:27">ctx</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:35">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:38" pos:end="27:39">!=</operator> <literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:42"><block_content pos:start="29:13" pos:end="29:42">

            <expr_stmt pos:start="29:13" pos:end="29:42"><expr pos:start="29:13" pos:end="29:41"><call pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:23">gen_set_Rc0</name><argument_list pos:start="29:24" pos:end="29:41">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">ctx</name></expr></argument>, <argument pos:start="29:30" pos:end="29:40"><expr pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:36">cpu_gpr</name><index pos:start="29:37" pos:end="29:40">[<expr pos:start="29:38" pos:end="29:39"><name pos:start="29:38" pos:end="29:39">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="37:5">else if <condition pos:start="31:15" pos:end="31:46">(<expr pos:start="31:16" pos:end="31:45"><call pos:start="31:16" pos:end="31:45"><name pos:start="31:16" pos:end="31:23">unlikely</name><argument_list pos:start="31:24" pos:end="31:45">(<argument pos:start="31:25" pos:end="31:44"><expr pos:start="31:25" pos:end="31:44"><call pos:start="31:25" pos:end="31:39"><name pos:start="31:25" pos:end="31:26">Rc</name><argument_list pos:start="31:27" pos:end="31:39">(<argument pos:start="31:28" pos:end="31:38"><expr pos:start="31:28" pos:end="31:38"><name pos:start="31:28" pos:end="31:38"><name pos:start="31:28" pos:end="31:30">ctx</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:38">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:41" pos:end="31:42">!=</operator> <literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:48" pos:end="37:5">{<block_content pos:start="33:9" pos:end="36:0">

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:37"><call pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:19">gen_set_Rc0</name><argument_list pos:start="33:20" pos:end="33:37">(<argument pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:23">ctx</name></expr></argument>, <argument pos:start="33:26" pos:end="33:36"><expr pos:start="33:26" pos:end="33:36"><name pos:start="33:26" pos:end="33:36"><name pos:start="33:26" pos:end="33:32">cpu_gpr</name><index pos:start="33:33" pos:end="33:36">[<expr pos:start="33:34" pos:end="33:35"><name pos:start="33:34" pos:end="33:35">rs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="35:1" pos:end="35:25">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:11">defined</name><argument_list pos:start="35:12" pos:end="35:25">(<argument pos:start="35:13" pos:end="35:24"><expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="147:5">else <block pos:start="37:12" pos:end="147:5">{<block_content pos:start="39:9" pos:end="146:0">

        <decl_stmt pos:start="39:9" pos:end="39:21"><decl pos:start="39:9" pos:end="39:20"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:16">prio</name> <init pos:start="39:18" pos:end="39:20">= <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr></init></decl>;</decl_stmt>



        <switch pos:start="43:9" pos:end="127:9">switch <condition pos:start="43:16" pos:end="43:19">(<expr pos:start="43:17" pos:end="43:18"><name pos:start="43:17" pos:end="43:18">rs</name></expr>)</condition> <block pos:start="43:21" pos:end="127:9">{<block_content pos:start="45:9" pos:end="125:18">

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">1</literal></expr>:</case>

            <comment type="block" pos:start="47:13" pos:end="47:45">/* Set process priority to low */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:21"><expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:16">prio</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">2</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:15">case <expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">6</literal></expr>:</case>

            <comment type="block" pos:start="55:13" pos:end="55:52">/* Set process priority to medium-low */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:21"><expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:16">prio</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <literal type="number" pos:start="57:20" pos:end="57:20">3</literal></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:15">case <expr pos:start="61:14" pos:end="61:14"><literal type="number" pos:start="61:14" pos:end="61:14">2</literal></expr>:</case>

            <comment type="block" pos:start="63:13" pos:end="63:48">/* Set process priority to normal */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:21"><expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:16">prio</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <literal type="number" pos:start="65:20" pos:end="65:20">4</literal></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="70:0">break;</break>

<cpp:if pos:start="69:1" pos:end="69:30">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:30"><operator pos:start="69:5" pos:end="69:5">!</operator><call pos:start="69:6" pos:end="69:30"><name pos:start="69:6" pos:end="69:12">defined</name><argument_list pos:start="69:13" pos:end="69:30">(<argument pos:start="69:14" pos:end="69:29"><expr pos:start="69:14" pos:end="69:29"><name pos:start="69:14" pos:end="69:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="71:9" pos:end="71:16">case <expr pos:start="71:14" pos:end="71:15"><literal type="number" pos:start="71:14" pos:end="71:15">31</literal></expr>:</case>

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:25">(<expr pos:start="73:17" pos:end="73:24"><operator pos:start="73:17" pos:end="73:17">!</operator><name pos:start="73:18" pos:end="73:24"><name pos:start="73:18" pos:end="73:20">ctx</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:24">pr</name></name></expr>)</condition> <block pos:start="73:27" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:25">

                <comment type="block" pos:start="75:17" pos:end="75:54">/* Set process priority to very low */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:25"><expr pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:20">prio</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="number" pos:start="77:24" pos:end="77:24">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:15">case <expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">5</literal></expr>:</case>

            <if_stmt pos:start="85:13" pos:end="91:13"><if pos:start="85:13" pos:end="91:13">if <condition pos:start="85:16" pos:end="85:25">(<expr pos:start="85:17" pos:end="85:24"><operator pos:start="85:17" pos:end="85:17">!</operator><name pos:start="85:18" pos:end="85:24"><name pos:start="85:18" pos:end="85:20">ctx</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:24">pr</name></name></expr>)</condition> <block pos:start="85:27" pos:end="91:13">{<block_content pos:start="89:17" pos:end="89:25">

                <comment type="block" pos:start="87:17" pos:end="87:58">/* Set process priority to medium-hight */</comment>

                <expr_stmt pos:start="89:17" pos:end="89:25"><expr pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:20">prio</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <literal type="number" pos:start="89:24" pos:end="89:24">5</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:15">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">3</literal></expr>:</case>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:25">(<expr pos:start="97:17" pos:end="97:24"><operator pos:start="97:17" pos:end="97:17">!</operator><name pos:start="97:18" pos:end="97:24"><name pos:start="97:18" pos:end="97:20">ctx</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:24">pr</name></name></expr>)</condition> <block pos:start="97:27" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:25">

                <comment type="block" pos:start="99:17" pos:end="99:50">/* Set process priority to high */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:25"><expr pos:start="101:17" pos:end="101:24"><name pos:start="101:17" pos:end="101:20">prio</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <literal type="number" pos:start="101:24" pos:end="101:24">6</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:15">case <expr pos:start="107:14" pos:end="107:14"><literal type="number" pos:start="107:14" pos:end="107:14">7</literal></expr>:</case>

            <if_stmt pos:start="109:13" pos:end="115:13"><if pos:start="109:13" pos:end="115:13">if <condition pos:start="109:16" pos:end="109:24">(<expr pos:start="109:17" pos:end="109:23"><name pos:start="109:17" pos:end="109:23"><name pos:start="109:17" pos:end="109:19">ctx</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:23">hv</name></name></expr>)</condition> <block pos:start="109:26" pos:end="115:13">{<block_content pos:start="113:17" pos:end="113:25">

                <comment type="block" pos:start="111:17" pos:end="111:55">/* Set process priority to very high */</comment>

                <expr_stmt pos:start="113:17" pos:end="113:25"><expr pos:start="113:17" pos:end="113:24"><name pos:start="113:17" pos:end="113:20">prio</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <literal type="number" pos:start="113:24" pos:end="113:24">7</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="117:13" pos:end="120:0">break;</break>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

        <default pos:start="121:9" pos:end="121:16">default:</default>

            <comment type="block" pos:start="123:13" pos:end="123:21">/* nop */</comment>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="129:9" pos:end="146:0"><if pos:start="129:9" pos:end="146:0">if <condition pos:start="129:12" pos:end="129:17">(<expr pos:start="129:13" pos:end="129:16"><name pos:start="129:13" pos:end="129:16">prio</name></expr>)</condition> <block pos:start="129:19" pos:end="146:0">{<block_content pos:start="131:13" pos:end="141:30">

            <decl_stmt pos:start="131:13" pos:end="131:37"><decl pos:start="131:13" pos:end="131:36"><type pos:start="131:13" pos:end="131:16"><name pos:start="131:13" pos:end="131:16">TCGv</name></type> <name pos:start="131:18" pos:end="131:19">t0</name> <init pos:start="131:21" pos:end="131:36">= <expr pos:start="131:23" pos:end="131:36"><call pos:start="131:23" pos:end="131:36"><name pos:start="131:23" pos:end="131:34">tcg_temp_new</name><argument_list pos:start="131:35" pos:end="131:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:38"><expr pos:start="133:13" pos:end="133:37"><call pos:start="133:13" pos:end="133:37"><name pos:start="133:13" pos:end="133:24">gen_load_spr</name><argument_list pos:start="133:25" pos:end="133:37">(<argument pos:start="133:26" pos:end="133:27"><expr pos:start="133:26" pos:end="133:27"><name pos:start="133:26" pos:end="133:27">t0</name></expr></argument>, <argument pos:start="133:30" pos:end="133:36"><expr pos:start="133:30" pos:end="133:36"><name pos:start="133:30" pos:end="133:36">SPR_PPR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:60"><expr pos:start="135:13" pos:end="135:59"><call pos:start="135:13" pos:end="135:59"><name pos:start="135:13" pos:end="135:27">tcg_gen_andi_tl</name><argument_list pos:start="135:28" pos:end="135:59">(<argument pos:start="135:29" pos:end="135:30"><expr pos:start="135:29" pos:end="135:30"><name pos:start="135:29" pos:end="135:30">t0</name></expr></argument>, <argument pos:start="135:33" pos:end="135:34"><expr pos:start="135:33" pos:end="135:34"><name pos:start="135:33" pos:end="135:34">t0</name></expr></argument>, <argument pos:start="135:37" pos:end="135:58"><expr pos:start="135:37" pos:end="135:58"><operator pos:start="135:37" pos:end="135:37">~</operator><literal type="number" pos:start="135:38" pos:end="135:58">0x001C000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:59"><expr pos:start="137:13" pos:end="137:58"><call pos:start="137:13" pos:end="137:58"><name pos:start="137:13" pos:end="137:26">tcg_gen_ori_tl</name><argument_list pos:start="137:27" pos:end="137:58">(<argument pos:start="137:28" pos:end="137:29"><expr pos:start="137:28" pos:end="137:29"><name pos:start="137:28" pos:end="137:29">t0</name></expr></argument>, <argument pos:start="137:32" pos:end="137:33"><expr pos:start="137:32" pos:end="137:33"><name pos:start="137:32" pos:end="137:33">t0</name></expr></argument>, <argument pos:start="137:36" pos:end="137:57"><expr pos:start="137:36" pos:end="137:57"><operator pos:start="137:36" pos:end="137:36">(</operator><operator pos:start="137:37" pos:end="137:37">(</operator><name pos:start="137:38" pos:end="137:45">uint64_t</name><operator pos:start="137:46" pos:end="137:46">)</operator><name pos:start="137:47" pos:end="137:50">prio</name><operator pos:start="137:51" pos:end="137:51">)</operator> <operator pos:start="137:53" pos:end="137:54">&lt;&lt;</operator> <literal type="number" pos:start="137:56" pos:end="137:57">50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:39"><expr pos:start="139:13" pos:end="139:38"><call pos:start="139:13" pos:end="139:38"><name pos:start="139:13" pos:end="139:25">gen_store_spr</name><argument_list pos:start="139:26" pos:end="139:38">(<argument pos:start="139:27" pos:end="139:33"><expr pos:start="139:27" pos:end="139:33"><name pos:start="139:27" pos:end="139:33">SPR_PPR</name></expr></argument>, <argument pos:start="139:36" pos:end="139:37"><expr pos:start="139:36" pos:end="139:37"><name pos:start="139:36" pos:end="139:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:30"><expr pos:start="141:13" pos:end="141:29"><call pos:start="141:13" pos:end="141:29"><name pos:start="141:13" pos:end="141:25">tcg_temp_free</name><argument_list pos:start="141:26" pos:end="141:29">(<argument pos:start="141:27" pos:end="141:28"><expr pos:start="141:27" pos:end="141:28"><name pos:start="141:27" pos:end="141:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="145:1" pos:end="145:6">#<cpp:directive pos:start="145:2" pos:end="145:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
