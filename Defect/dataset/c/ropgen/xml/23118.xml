<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23118.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">vmdk_is_allocated</name><parameter_list pos:start="1:29" pos:end="3:55">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><name pos:start="1:52" pos:end="1:58">int64_t</name></type> <name pos:start="1:60" pos:end="1:69">sector_num</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:43">nb_sectors</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:54"><decl pos:start="3:46" pos:end="3:54"><type pos:start="3:46" pos:end="3:54"><name pos:start="3:46" pos:end="3:48">int</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVVmdkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:28">index_in_cluster</name></decl>, <decl pos:start="9:31" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:31" pos:end="9:31">n</name></decl>, <decl pos:start="9:34" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:34" pos:end="9:36">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">VmdkExtent</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">extent</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:10">extent</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:45"><name pos:start="17:14" pos:end="17:24">find_extent</name><argument_list pos:start="17:25" pos:end="17:45">(<argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><name pos:start="17:26" pos:end="17:26">s</name></expr></argument>, <argument pos:start="17:29" pos:end="17:38"><expr pos:start="17:29" pos:end="17:38"><name pos:start="17:29" pos:end="17:38">sector_num</name></expr></argument>, <argument pos:start="17:41" pos:end="17:44"><expr pos:start="17:41" pos:end="17:44"><name pos:start="17:41" pos:end="17:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:15">extent</name></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:58"><expr pos:start="25:5" pos:end="27:57"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="27:57"><name pos:start="25:11" pos:end="25:28">get_cluster_offset</name><argument_list pos:start="25:29" pos:end="27:57">(<argument pos:start="25:30" pos:end="25:31"><expr pos:start="25:30" pos:end="25:31"><name pos:start="25:30" pos:end="25:31">bs</name></expr></argument>, <argument pos:start="25:34" pos:end="25:39"><expr pos:start="25:34" pos:end="25:39"><name pos:start="25:34" pos:end="25:39">extent</name></expr></argument>, <argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><name pos:start="25:42" pos:end="25:45">NULL</name></expr></argument>,

                            <argument pos:start="27:29" pos:end="27:44"><expr pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:38">sector_num</name> <operator pos:start="27:40" pos:end="27:40">*</operator> <literal type="number" pos:start="27:42" pos:end="27:44">512</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><literal type="number" pos:start="27:47" pos:end="27:47">0</literal></expr></argument>, <argument pos:start="27:50" pos:end="27:56"><expr pos:start="27:50" pos:end="27:56"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:56">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:54">/* get_cluster_offset returning 0 means success */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <operator pos:start="31:11" pos:end="31:11">!</operator><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:60"><expr pos:start="35:5" pos:end="35:59"><name pos:start="35:5" pos:end="35:20">index_in_cluster</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:33">sector_num</name> <operator pos:start="35:35" pos:end="35:35">%</operator> <name pos:start="35:37" pos:end="35:59"><name pos:start="35:37" pos:end="35:42">extent</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:59">cluster_sectors</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:5">n</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <name pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:14">extent</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:31">cluster_sectors</name></name> <operator pos:start="37:33" pos:end="37:33">-</operator> <name pos:start="37:35" pos:end="37:50">index_in_cluster</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:9">n</name> <operator pos:start="39:11" pos:end="39:11">&gt;</operator> <name pos:start="39:13" pos:end="39:22">nb_sectors</name></expr>)</condition> <block pos:start="39:25" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:23">

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">n</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:22">nb_sectors</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:14"><expr pos:start="45:5" pos:end="45:13"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:9">pnum</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <name pos:start="45:13" pos:end="45:13">n</name></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
