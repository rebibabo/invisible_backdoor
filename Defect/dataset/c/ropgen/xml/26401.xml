<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26401.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_audio_out</name><parameter_list pos:start="1:25" pos:end="3:40">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:57">OutputStream</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">ost</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:32">AVFrame</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">frame</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:5">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">enc</name> <init pos:start="7:25" pos:end="7:40">= <expr pos:start="7:27" pos:end="7:40"><name pos:start="7:27" pos:end="7:40"><name pos:start="7:27" pos:end="7:29">ost</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:33">st</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:40">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">AVPacket</name></type> <name pos:start="9:14" pos:end="9:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">got_packet</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><call pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:18">av_init_packet</name><argument_list pos:start="15:19" pos:end="15:24">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><operator pos:start="15:20" pos:end="15:20">&amp;</operator><name pos:start="15:21" pos:end="15:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">pkt</name><operator pos:start="17:8" pos:end="17:8">.</operator><name pos:start="17:9" pos:end="17:12">data</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="28:0"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">pkt</name><operator pos:start="19:8" pos:end="19:8">.</operator><name pos:start="19:9" pos:end="19:12">size</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</expr_stmt>

<cpp:if pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:5"><literal type="number" pos:start="21:5" pos:end="21:5">0</literal></expr></cpp:if>

    if (!check_recording_time(ost))

        return;

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="29:5" pos:end="31:36"><if pos:start="29:5" pos:end="31:36">if <condition pos:start="29:8" pos:end="29:62">(<expr pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:13">frame</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:18">pts</name></name> <operator pos:start="29:20" pos:end="29:21">==</operator> <name pos:start="29:23" pos:end="29:36">AV_NOPTS_VALUE</name> <operator pos:start="29:38" pos:end="29:39">||</operator> <name pos:start="29:41" pos:end="29:57">audio_sync_method</name> <operator pos:start="29:59" pos:end="29:59">&lt;</operator> <literal type="number" pos:start="29:61" pos:end="29:61">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:36"><block_content pos:start="31:9" pos:end="31:36">

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:13">frame</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:18">pts</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:24">ost</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:35">sync_opts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">ost</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:18">sync_opts</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:31"><name pos:start="33:22" pos:end="33:26">frame</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">pts</name></name> <operator pos:start="33:33" pos:end="33:33">+</operator> <name pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:39">frame</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:51">nb_samples</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><call pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:14">av_assert0</name><argument_list pos:start="37:15" pos:end="37:37">(<argument pos:start="37:16" pos:end="37:36"><expr pos:start="37:16" pos:end="37:36"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:18">pkt</name><operator pos:start="37:19" pos:end="37:19">.</operator><name pos:start="37:20" pos:end="37:23">size</name></name> <operator pos:start="37:25" pos:end="37:26">||</operator> <operator pos:start="37:28" pos:end="37:28">!</operator><name pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:31">pkt</name><operator pos:start="37:32" pos:end="37:32">.</operator><name pos:start="37:33" pos:end="37:36">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:20">update_benchmark</name><argument_list pos:start="39:21" pos:end="39:26">(<argument pos:start="39:22" pos:end="39:25"><expr pos:start="39:22" pos:end="39:25"><name pos:start="39:22" pos:end="39:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:65">(<expr pos:start="41:9" pos:end="41:64"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:29">avcodec_encode_audio2</name><argument_list pos:start="41:30" pos:end="41:60">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">enc</name></expr></argument>, <argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:39">pkt</name></expr></argument>, <argument pos:start="41:42" pos:end="41:46"><expr pos:start="41:42" pos:end="41:46"><name pos:start="41:42" pos:end="41:46">frame</name></expr></argument>, <argument pos:start="41:49" pos:end="41:59"><expr pos:start="41:49" pos:end="41:59"><operator pos:start="41:49" pos:end="41:49">&amp;</operator><name pos:start="41:50" pos:end="41:59">got_packet</name></expr></argument>)</argument_list></call> <operator pos:start="41:62" pos:end="41:62">&lt;</operator> <literal type="number" pos:start="41:64" pos:end="41:64">0</literal></expr>)</condition> <block pos:start="41:67" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:24">

        <expr_stmt pos:start="43:9" pos:end="43:86"><expr pos:start="43:9" pos:end="43:85"><call pos:start="43:9" pos:end="43:85"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:85">(<argument pos:start="43:16" pos:end="43:19"><expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">NULL</name></expr></argument>, <argument pos:start="43:22" pos:end="43:33"><expr pos:start="43:22" pos:end="43:33"><name pos:start="43:22" pos:end="43:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="43:36" pos:end="43:84"><expr pos:start="43:36" pos:end="43:84"><literal type="string" pos:start="43:36" pos:end="43:84">"Audio encoding failed (avcodec_encode_audio2)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><call pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:20">exit_program</name><argument_list pos:start="45:21" pos:end="45:23">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:72"><expr pos:start="49:5" pos:end="49:71"><call pos:start="49:5" pos:end="49:71"><name pos:start="49:5" pos:end="49:20">update_benchmark</name><argument_list pos:start="49:21" pos:end="49:71">(<argument pos:start="49:22" pos:end="49:41"><expr pos:start="49:22" pos:end="49:41"><literal type="string" pos:start="49:22" pos:end="49:41">"encode_audio %d.%d"</literal></expr></argument>, <argument pos:start="49:44" pos:end="49:58"><expr pos:start="49:44" pos:end="49:58"><name pos:start="49:44" pos:end="49:58"><name pos:start="49:44" pos:end="49:46">ost</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:58">file_index</name></name></expr></argument>, <argument pos:start="49:61" pos:end="49:70"><expr pos:start="49:61" pos:end="49:70"><name pos:start="49:61" pos:end="49:70"><name pos:start="49:61" pos:end="49:63">ost</name><operator pos:start="49:64" pos:end="49:65">-&gt;</operator><name pos:start="49:66" pos:end="49:70">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="91:5"><if pos:start="53:5" pos:end="91:5">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:18">got_packet</name></expr>)</condition> <block pos:start="53:21" pos:end="91:5">{<block_content pos:start="55:9" pos:end="89:29">

        <if_stmt pos:start="55:9" pos:end="57:90"><if pos:start="55:9" pos:end="57:90">if <condition pos:start="55:12" pos:end="55:38">(<expr pos:start="55:13" pos:end="55:37"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">pkt</name><operator pos:start="55:16" pos:end="55:16">.</operator><name pos:start="55:17" pos:end="55:19">pts</name></name> <operator pos:start="55:21" pos:end="55:22">!=</operator> <name pos:start="55:24" pos:end="55:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:90"><block_content pos:start="57:13" pos:end="57:90">

            <expr_stmt pos:start="57:13" pos:end="57:90"><expr pos:start="57:13" pos:end="57:89"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">pkt</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:19">pts</name></name>      <operator pos:start="57:26" pos:end="57:26">=</operator> <call pos:start="57:28" pos:end="57:89"><name pos:start="57:28" pos:end="57:39">av_rescale_q</name><argument_list pos:start="57:40" pos:end="57:89">(<argument pos:start="57:41" pos:end="57:47"><expr pos:start="57:41" pos:end="57:47"><name pos:start="57:41" pos:end="57:47"><name pos:start="57:41" pos:end="57:43">pkt</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:47">pts</name></name></expr></argument>,      <argument pos:start="57:55" pos:end="57:68"><expr pos:start="57:55" pos:end="57:68"><name pos:start="57:55" pos:end="57:68"><name pos:start="57:55" pos:end="57:57">enc</name><operator pos:start="57:58" pos:end="57:59">-&gt;</operator><name pos:start="57:60" pos:end="57:68">time_base</name></name></expr></argument>, <argument pos:start="57:71" pos:end="57:88"><expr pos:start="57:71" pos:end="57:88"><name pos:start="57:71" pos:end="57:88"><name pos:start="57:71" pos:end="57:73">ost</name><operator pos:start="57:74" pos:end="57:75">-&gt;</operator><name pos:start="57:76" pos:end="57:77">st</name><operator pos:start="57:78" pos:end="57:79">-&gt;</operator><name pos:start="57:80" pos:end="57:88">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="61:90"><if pos:start="59:9" pos:end="61:90">if <condition pos:start="59:12" pos:end="59:38">(<expr pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">pkt</name><operator pos:start="59:16" pos:end="59:16">.</operator><name pos:start="59:17" pos:end="59:19">dts</name></name> <operator pos:start="59:21" pos:end="59:22">!=</operator> <name pos:start="59:24" pos:end="59:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:90"><block_content pos:start="61:13" pos:end="61:90">

            <expr_stmt pos:start="61:13" pos:end="61:90"><expr pos:start="61:13" pos:end="61:89"><name pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">pkt</name><operator pos:start="61:16" pos:end="61:16">.</operator><name pos:start="61:17" pos:end="61:19">dts</name></name>      <operator pos:start="61:26" pos:end="61:26">=</operator> <call pos:start="61:28" pos:end="61:89"><name pos:start="61:28" pos:end="61:39">av_rescale_q</name><argument_list pos:start="61:40" pos:end="61:89">(<argument pos:start="61:41" pos:end="61:47"><expr pos:start="61:41" pos:end="61:47"><name pos:start="61:41" pos:end="61:47"><name pos:start="61:41" pos:end="61:43">pkt</name><operator pos:start="61:44" pos:end="61:44">.</operator><name pos:start="61:45" pos:end="61:47">dts</name></name></expr></argument>,      <argument pos:start="61:55" pos:end="61:68"><expr pos:start="61:55" pos:end="61:68"><name pos:start="61:55" pos:end="61:68"><name pos:start="61:55" pos:end="61:57">enc</name><operator pos:start="61:58" pos:end="61:59">-&gt;</operator><name pos:start="61:60" pos:end="61:68">time_base</name></name></expr></argument>, <argument pos:start="61:71" pos:end="61:88"><expr pos:start="61:71" pos:end="61:88"><name pos:start="61:71" pos:end="61:88"><name pos:start="61:71" pos:end="61:73">ost</name><operator pos:start="61:74" pos:end="61:75">-&gt;</operator><name pos:start="61:76" pos:end="61:77">st</name><operator pos:start="61:78" pos:end="61:79">-&gt;</operator><name pos:start="61:80" pos:end="61:88">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="65:90"><if pos:start="63:9" pos:end="65:90">if <condition pos:start="63:12" pos:end="63:29">(<expr pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:15">pkt</name><operator pos:start="63:16" pos:end="63:16">.</operator><name pos:start="63:17" pos:end="63:24">duration</name></name> <operator pos:start="63:26" pos:end="63:26">&gt;</operator> <literal type="number" pos:start="63:28" pos:end="63:28">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:90"><block_content pos:start="65:13" pos:end="65:90">

            <expr_stmt pos:start="65:13" pos:end="65:90"><expr pos:start="65:13" pos:end="65:89"><name pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:15">pkt</name><operator pos:start="65:16" pos:end="65:16">.</operator><name pos:start="65:17" pos:end="65:24">duration</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <call pos:start="65:28" pos:end="65:89"><name pos:start="65:28" pos:end="65:39">av_rescale_q</name><argument_list pos:start="65:40" pos:end="65:89">(<argument pos:start="65:41" pos:end="65:52"><expr pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:43">pkt</name><operator pos:start="65:44" pos:end="65:44">.</operator><name pos:start="65:45" pos:end="65:52">duration</name></name></expr></argument>, <argument pos:start="65:55" pos:end="65:68"><expr pos:start="65:55" pos:end="65:68"><name pos:start="65:55" pos:end="65:68"><name pos:start="65:55" pos:end="65:57">enc</name><operator pos:start="65:58" pos:end="65:59">-&gt;</operator><name pos:start="65:60" pos:end="65:68">time_base</name></name></expr></argument>, <argument pos:start="65:71" pos:end="65:88"><expr pos:start="65:71" pos:end="65:88"><name pos:start="65:71" pos:end="65:88"><name pos:start="65:71" pos:end="65:73">ost</name><operator pos:start="65:74" pos:end="65:75">-&gt;</operator><name pos:start="65:76" pos:end="65:77">st</name><operator pos:start="65:78" pos:end="65:79">-&gt;</operator><name pos:start="65:80" pos:end="65:88">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="79:9">if <condition pos:start="69:12" pos:end="69:21">(<expr pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:20">debug_ts</name></expr>)</condition> <block pos:start="69:23" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:84">

            <expr_stmt pos:start="71:13" pos:end="77:84"><expr pos:start="71:13" pos:end="77:83"><call pos:start="71:13" pos:end="77:83"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="77:83">(<argument pos:start="71:20" pos:end="71:23"><expr pos:start="71:20" pos:end="71:23"><name pos:start="71:20" pos:end="71:23">NULL</name></expr></argument>, <argument pos:start="71:26" pos:end="71:36"><expr pos:start="71:26" pos:end="71:36"><name pos:start="71:26" pos:end="71:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="71:39" pos:end="73:76"><expr pos:start="71:39" pos:end="73:76"><literal type="string" pos:start="71:39" pos:end="71:62">"encoder -&gt; type:audio "</literal>

                   <literal type="string" pos:start="73:20" pos:end="73:76">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n"</literal></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:37"><expr pos:start="75:20" pos:end="75:37"><call pos:start="75:20" pos:end="75:37"><name pos:start="75:20" pos:end="75:28">av_ts2str</name><argument_list pos:start="75:29" pos:end="75:37">(<argument pos:start="75:30" pos:end="75:36"><expr pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:32">pkt</name><operator pos:start="75:33" pos:end="75:33">.</operator><name pos:start="75:34" pos:end="75:36">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:40" pos:end="75:82"><expr pos:start="75:40" pos:end="75:82"><call pos:start="75:40" pos:end="75:82"><name pos:start="75:40" pos:end="75:52">av_ts2timestr</name><argument_list pos:start="75:53" pos:end="75:82">(<argument pos:start="75:54" pos:end="75:60"><expr pos:start="75:54" pos:end="75:60"><name pos:start="75:54" pos:end="75:60"><name pos:start="75:54" pos:end="75:56">pkt</name><operator pos:start="75:57" pos:end="75:57">.</operator><name pos:start="75:58" pos:end="75:60">pts</name></name></expr></argument>, <argument pos:start="75:63" pos:end="75:81"><expr pos:start="75:63" pos:end="75:81"><operator pos:start="75:63" pos:end="75:63">&amp;</operator><name pos:start="75:64" pos:end="75:81"><name pos:start="75:64" pos:end="75:66">ost</name><operator pos:start="75:67" pos:end="75:68">-&gt;</operator><name pos:start="75:69" pos:end="75:70">st</name><operator pos:start="75:71" pos:end="75:72">-&gt;</operator><name pos:start="75:73" pos:end="75:81">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="77:20" pos:end="77:37"><expr pos:start="77:20" pos:end="77:37"><call pos:start="77:20" pos:end="77:37"><name pos:start="77:20" pos:end="77:28">av_ts2str</name><argument_list pos:start="77:29" pos:end="77:37">(<argument pos:start="77:30" pos:end="77:36"><expr pos:start="77:30" pos:end="77:36"><name pos:start="77:30" pos:end="77:36"><name pos:start="77:30" pos:end="77:32">pkt</name><operator pos:start="77:33" pos:end="77:33">.</operator><name pos:start="77:34" pos:end="77:36">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:40" pos:end="77:82"><expr pos:start="77:40" pos:end="77:82"><call pos:start="77:40" pos:end="77:82"><name pos:start="77:40" pos:end="77:52">av_ts2timestr</name><argument_list pos:start="77:53" pos:end="77:82">(<argument pos:start="77:54" pos:end="77:60"><expr pos:start="77:54" pos:end="77:60"><name pos:start="77:54" pos:end="77:60"><name pos:start="77:54" pos:end="77:56">pkt</name><operator pos:start="77:57" pos:end="77:57">.</operator><name pos:start="77:58" pos:end="77:60">dts</name></name></expr></argument>, <argument pos:start="77:63" pos:end="77:81"><expr pos:start="77:63" pos:end="77:81"><operator pos:start="77:63" pos:end="77:63">&amp;</operator><name pos:start="77:64" pos:end="77:81"><name pos:start="77:64" pos:end="77:66">ost</name><operator pos:start="77:67" pos:end="77:68">-&gt;</operator><name pos:start="77:69" pos:end="77:70">st</name><operator pos:start="77:71" pos:end="77:72">-&gt;</operator><name pos:start="77:73" pos:end="77:81">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:34"><expr pos:start="83:9" pos:end="83:33"><call pos:start="83:9" pos:end="83:33"><name pos:start="83:9" pos:end="83:19">write_frame</name><argument_list pos:start="83:20" pos:end="83:33">(<argument pos:start="83:21" pos:end="83:21"><expr pos:start="83:21" pos:end="83:21"><name pos:start="83:21" pos:end="83:21">s</name></expr></argument>, <argument pos:start="83:24" pos:end="83:27"><expr pos:start="83:24" pos:end="83:27"><operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:27">pkt</name></expr></argument>, <argument pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><name pos:start="83:30" pos:end="83:32">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:31"><expr pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:18">audio_size</name> <operator pos:start="87:20" pos:end="87:21">+=</operator> <name pos:start="87:23" pos:end="87:30"><name pos:start="87:23" pos:end="87:25">pkt</name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:30">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:22">av_free_packet</name><argument_list pos:start="89:23" pos:end="89:28">(<argument pos:start="89:24" pos:end="89:27"><expr pos:start="89:24" pos:end="89:27"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
