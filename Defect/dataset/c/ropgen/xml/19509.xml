<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19509.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">cpu_load_old</name><parameter_list pos:start="1:24" pos:end="1:66">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:32">QEMUFile</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">f</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:65">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PowerPCCPU</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">cpu</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:21">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:21">sdr1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">fpscr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:20">xer</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="24:0">for <control pos:start="19:9" pos:end="19:28">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:23"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:22">32</literal></expr>;</condition> <incr pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:25">i</name><operator pos:start="19:26" pos:end="19:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="24:0"><block_content pos:start="21:9" pos:end="24:0">

        <expr_stmt pos:start="21:9" pos:end="24:0"><expr pos:start="21:9" pos:end="21:39"><call pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:22">qemu_get_betls</name><argument_list pos:start="21:23" pos:end="21:39">(<argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">f</name></expr></argument>, <argument pos:start="21:27" pos:end="21:38"><expr pos:start="21:27" pos:end="21:38"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:30">env</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:35">gpr</name><index pos:start="21:36" pos:end="21:38">[<expr pos:start="21:37" pos:end="21:37"><name pos:start="21:37" pos:end="21:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:if pos:start="23:1" pos:end="23:26">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:26"><operator pos:start="23:5" pos:end="23:5">!</operator><call pos:start="23:6" pos:end="23:26"><name pos:start="23:6" pos:end="23:12">defined</name><argument_list pos:start="23:13" pos:end="23:26">(<argument pos:start="23:14" pos:end="23:25"><expr pos:start="23:14" pos:end="23:25"><name pos:start="23:14" pos:end="23:25">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <for pos:start="25:5" pos:end="30:0">for <control pos:start="25:9" pos:end="25:28">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:22">32</literal></expr>;</condition> <incr pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:25">i</name><operator pos:start="25:26" pos:end="25:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="30:0"><block_content pos:start="27:9" pos:end="30:0">

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:22">qemu_get_betls</name><argument_list pos:start="27:23" pos:end="27:40">(<argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">f</name></expr></argument>, <argument pos:start="27:27" pos:end="27:39"><expr pos:start="27:27" pos:end="27:39"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:39"><name pos:start="27:28" pos:end="27:30">env</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:36">gprh</name><index pos:start="27:37" pos:end="27:39">[<expr pos:start="27:38" pos:end="27:38"><name pos:start="27:38" pos:end="27:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><call pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:18">qemu_get_betls</name><argument_list pos:start="31:19" pos:end="31:31">(<argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">f</name></expr></argument>, <argument pos:start="31:23" pos:end="31:30"><expr pos:start="31:23" pos:end="31:30"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:30"><name pos:start="31:24" pos:end="31:26">env</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:30">lr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:18">qemu_get_betls</name><argument_list pos:start="33:19" pos:end="33:32">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">f</name></expr></argument>, <argument pos:start="33:23" pos:end="33:31"><expr pos:start="33:23" pos:end="33:31"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:31"><name pos:start="33:24" pos:end="33:26">env</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">ctr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="37:40">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">8</literal></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="37:40"><block_content pos:start="37:9" pos:end="37:40">

        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><call pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:22">qemu_get_be32s</name><argument_list pos:start="37:23" pos:end="37:39">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">f</name></expr></argument>, <argument pos:start="37:27" pos:end="37:38"><expr pos:start="37:27" pos:end="37:38"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:38"><name pos:start="37:28" pos:end="37:30">env</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:35">crf</name><index pos:start="37:36" pos:end="37:38">[<expr pos:start="37:37" pos:end="37:37"><name pos:start="37:37" pos:end="37:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><call pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:18">qemu_get_betls</name><argument_list pos:start="39:19" pos:end="39:27">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">f</name></expr></argument>, <argument pos:start="39:23" pos:end="39:26"><expr pos:start="39:23" pos:end="39:26"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:26">xer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><call pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:17">cpu_write_xer</name><argument_list pos:start="41:18" pos:end="41:27">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">env</name></expr></argument>, <argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">xer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><call pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:18">qemu_get_betls</name><argument_list pos:start="43:19" pos:end="43:41">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">f</name></expr></argument>, <argument pos:start="43:23" pos:end="43:40"><expr pos:start="43:23" pos:end="43:40"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:26">env</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:40">reserve_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><call pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:18">qemu_get_betls</name><argument_list pos:start="45:19" pos:end="45:32">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">f</name></expr></argument>, <argument pos:start="45:23" pos:end="45:31"><expr pos:start="45:23" pos:end="45:31"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:31"><name pos:start="45:24" pos:end="45:26">env</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:31">msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="49:41">for <control pos:start="47:9" pos:end="47:27">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <literal type="number" pos:start="47:21" pos:end="47:21">4</literal></expr>;</condition> <incr pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:24">i</name><operator pos:start="47:25" pos:end="47:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:9" pos:end="49:41"><block_content pos:start="49:9" pos:end="49:41">

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><call pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:22">qemu_get_betls</name><argument_list pos:start="49:23" pos:end="49:40">(<argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">f</name></expr></argument>, <argument pos:start="49:27" pos:end="49:39"><expr pos:start="49:27" pos:end="49:39"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:39"><name pos:start="49:28" pos:end="49:30">env</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:36">tgpr</name><index pos:start="49:37" pos:end="49:39">[<expr pos:start="49:38" pos:end="49:38"><name pos:start="49:38" pos:end="49:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="51:5" pos:end="65:5">for <control pos:start="51:9" pos:end="51:28">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:23"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <literal type="number" pos:start="51:21" pos:end="51:22">32</literal></expr>;</condition> <incr pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:25">i</name><operator pos:start="51:26" pos:end="51:27">++</operator></expr></incr>)</control> <block pos:start="51:30" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:26">

        <union pos:start="53:9" pos:end="59:12">union <block pos:start="53:15" pos:end="59:9">{

            <decl_stmt pos:start="55:13" pos:end="55:22"><decl pos:start="55:13" pos:end="55:21"><type pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:19">float64</name></type> <name pos:start="55:21" pos:end="55:21">d</name></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:23"><decl pos:start="57:13" pos:end="57:22"><type pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:20">uint64_t</name></type> <name pos:start="57:22" pos:end="57:22">l</name></decl>;</decl_stmt>

        }</block> <decl pos:start="59:11" pos:end="59:11"><name pos:start="59:11" pos:end="59:11">u</name></decl>;</union>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:9">u</name><operator pos:start="61:10" pos:end="61:10">.</operator><name pos:start="61:11" pos:end="61:11">l</name></name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:30"><name pos:start="61:15" pos:end="61:27">qemu_get_be64</name><argument_list pos:start="61:28" pos:end="61:30">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:11">env</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">fpr</name><index pos:start="63:17" pos:end="63:19">[<expr pos:start="63:18" pos:end="63:18"><name pos:start="63:18" pos:end="63:18">i</name></expr>]</index></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:25"><name pos:start="63:23" pos:end="63:23">u</name><operator pos:start="63:24" pos:end="63:24">.</operator><name pos:start="63:25" pos:end="63:25">d</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:18">qemu_get_be32s</name><argument_list pos:start="67:19" pos:end="67:29">(<argument pos:start="67:20" pos:end="67:20"><expr pos:start="67:20" pos:end="67:20"><name pos:start="67:20" pos:end="67:20">f</name></expr></argument>, <argument pos:start="67:23" pos:end="67:28"><expr pos:start="67:23" pos:end="67:28"><operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:28">fpscr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:23"><expr pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">fpscr</name></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <name pos:start="69:18" pos:end="69:22">fpscr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="74:0"><expr pos:start="71:5" pos:end="71:41"><call pos:start="71:5" pos:end="71:41"><name pos:start="71:5" pos:end="71:19">qemu_get_sbe32s</name><argument_list pos:start="71:20" pos:end="71:41">(<argument pos:start="71:21" pos:end="71:21"><expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">f</name></expr></argument>, <argument pos:start="71:24" pos:end="71:40"><expr pos:start="71:24" pos:end="71:40"><operator pos:start="71:24" pos:end="71:24">&amp;</operator><name pos:start="71:25" pos:end="71:40"><name pos:start="71:25" pos:end="71:27">env</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:40">access_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="73:1" pos:end="73:25">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:25"><call pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:11">defined</name><argument_list pos:start="73:12" pos:end="73:25">(<argument pos:start="73:13" pos:end="73:24"><expr pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="75:5" pos:end="75:42"><expr pos:start="75:5" pos:end="75:41"><call pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:18">qemu_get_betls</name><argument_list pos:start="75:19" pos:end="75:41">(<argument pos:start="75:20" pos:end="75:20"><expr pos:start="75:20" pos:end="75:20"><name pos:start="75:20" pos:end="75:20">f</name></expr></argument>, <argument pos:start="75:23" pos:end="75:40"><expr pos:start="75:23" pos:end="75:40"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:40"><name pos:start="75:24" pos:end="75:26">env</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:31">spr</name><index pos:start="75:32" pos:end="75:40">[<expr pos:start="75:33" pos:end="75:39"><name pos:start="75:33" pos:end="75:39">SPR_ASR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="80:0"><expr pos:start="77:5" pos:end="77:36"><call pos:start="77:5" pos:end="77:36"><name pos:start="77:5" pos:end="77:19">qemu_get_sbe32s</name><argument_list pos:start="77:20" pos:end="77:36">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">f</name></expr></argument>, <argument pos:start="77:24" pos:end="77:35"><expr pos:start="77:24" pos:end="77:35"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:35"><name pos:start="77:25" pos:end="77:27">env</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:35">slb_nr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><call pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:18">qemu_get_betls</name><argument_list pos:start="81:19" pos:end="81:28">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">f</name></expr></argument>, <argument pos:start="81:23" pos:end="81:27"><expr pos:start="81:23" pos:end="81:27"><operator pos:start="81:23" pos:end="81:23">&amp;</operator><name pos:start="81:24" pos:end="81:27">sdr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="83:5" pos:end="85:39">for <control pos:start="83:9" pos:end="83:28">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:23"><expr pos:start="83:17" pos:end="83:22"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <literal type="number" pos:start="83:21" pos:end="83:22">32</literal></expr>;</condition> <incr pos:start="83:25" pos:end="83:27"><expr pos:start="83:25" pos:end="83:27"><name pos:start="83:25" pos:end="83:25">i</name><operator pos:start="83:26" pos:end="83:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="85:9" pos:end="85:39"><block_content pos:start="85:9" pos:end="85:39">

        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><call pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:22">qemu_get_betls</name><argument_list pos:start="85:23" pos:end="85:38">(<argument pos:start="85:24" pos:end="85:24"><expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">f</name></expr></argument>, <argument pos:start="85:27" pos:end="85:37"><expr pos:start="85:27" pos:end="85:37"><operator pos:start="85:27" pos:end="85:27">&amp;</operator><name pos:start="85:28" pos:end="85:37"><name pos:start="85:28" pos:end="85:30">env</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:34">sr</name><index pos:start="85:35" pos:end="85:37">[<expr pos:start="85:36" pos:end="85:36"><name pos:start="85:36" pos:end="85:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="87:5" pos:end="91:48">for <control pos:start="87:9" pos:end="87:27">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:21"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <literal type="number" pos:start="87:21" pos:end="87:21">2</literal></expr>;</condition> <incr pos:start="87:24" pos:end="87:26"><expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:24">i</name><operator pos:start="87:25" pos:end="87:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:9" pos:end="91:48"><block_content pos:start="89:9" pos:end="91:48">

        <for pos:start="89:9" pos:end="91:48">for <control pos:start="89:13" pos:end="89:31">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">j</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:26"><expr pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:21">j</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <literal type="number" pos:start="89:25" pos:end="89:25">8</literal></expr>;</condition> <incr pos:start="89:28" pos:end="89:30"><expr pos:start="89:28" pos:end="89:30"><name pos:start="89:28" pos:end="89:28">j</name><operator pos:start="89:29" pos:end="89:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:13" pos:end="91:48"><block_content pos:start="91:13" pos:end="91:48">

            <expr_stmt pos:start="91:13" pos:end="91:48"><expr pos:start="91:13" pos:end="91:47"><call pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:26">qemu_get_betls</name><argument_list pos:start="91:27" pos:end="91:47">(<argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">f</name></expr></argument>, <argument pos:start="91:31" pos:end="91:46"><expr pos:start="91:31" pos:end="91:46"><operator pos:start="91:31" pos:end="91:31">&amp;</operator><name pos:start="91:32" pos:end="91:46"><name pos:start="91:32" pos:end="91:34">env</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:40">DBAT</name><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><name pos:start="91:42" pos:end="91:42">i</name></expr>]</index><index pos:start="91:44" pos:end="91:46">[<expr pos:start="91:45" pos:end="91:45"><name pos:start="91:45" pos:end="91:45">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    <for pos:start="93:5" pos:end="97:48">for <control pos:start="93:9" pos:end="93:27">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:22"><expr pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <literal type="number" pos:start="93:21" pos:end="93:21">2</literal></expr>;</condition> <incr pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:24">i</name><operator pos:start="93:25" pos:end="93:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:9" pos:end="97:48"><block_content pos:start="95:9" pos:end="97:48">

        <for pos:start="95:9" pos:end="97:48">for <control pos:start="95:13" pos:end="95:31">(<init pos:start="95:14" pos:end="95:19"><expr pos:start="95:14" pos:end="95:18"><name pos:start="95:14" pos:end="95:14">j</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <literal type="number" pos:start="95:18" pos:end="95:18">0</literal></expr>;</init> <condition pos:start="95:21" pos:end="95:26"><expr pos:start="95:21" pos:end="95:25"><name pos:start="95:21" pos:end="95:21">j</name> <operator pos:start="95:23" pos:end="95:23">&lt;</operator> <literal type="number" pos:start="95:25" pos:end="95:25">8</literal></expr>;</condition> <incr pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><name pos:start="95:28" pos:end="95:28">j</name><operator pos:start="95:29" pos:end="95:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:13" pos:end="97:48"><block_content pos:start="97:13" pos:end="97:48">

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><call pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:26">qemu_get_betls</name><argument_list pos:start="97:27" pos:end="97:47">(<argument pos:start="97:28" pos:end="97:28"><expr pos:start="97:28" pos:end="97:28"><name pos:start="97:28" pos:end="97:28">f</name></expr></argument>, <argument pos:start="97:31" pos:end="97:46"><expr pos:start="97:31" pos:end="97:46"><operator pos:start="97:31" pos:end="97:31">&amp;</operator><name pos:start="97:32" pos:end="97:46"><name pos:start="97:32" pos:end="97:34">env</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:40">IBAT</name><index pos:start="97:41" pos:end="97:43">[<expr pos:start="97:42" pos:end="97:42"><name pos:start="97:42" pos:end="97:42">i</name></expr>]</index><index pos:start="97:44" pos:end="97:46">[<expr pos:start="97:45" pos:end="97:45"><name pos:start="97:45" pos:end="97:45">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    <expr_stmt pos:start="99:5" pos:end="99:37"><expr pos:start="99:5" pos:end="99:36"><call pos:start="99:5" pos:end="99:36"><name pos:start="99:5" pos:end="99:19">qemu_get_sbe32s</name><argument_list pos:start="99:20" pos:end="99:36">(<argument pos:start="99:21" pos:end="99:21"><expr pos:start="99:21" pos:end="99:21"><name pos:start="99:21" pos:end="99:21">f</name></expr></argument>, <argument pos:start="99:24" pos:end="99:35"><expr pos:start="99:24" pos:end="99:35"><operator pos:start="99:24" pos:end="99:24">&amp;</operator><name pos:start="99:25" pos:end="99:35"><name pos:start="99:25" pos:end="99:27">env</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:35">nb_tlb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:42"><expr pos:start="101:5" pos:end="101:41"><call pos:start="101:5" pos:end="101:41"><name pos:start="101:5" pos:end="101:19">qemu_get_sbe32s</name><argument_list pos:start="101:20" pos:end="101:41">(<argument pos:start="101:21" pos:end="101:21"><expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">f</name></expr></argument>, <argument pos:start="101:24" pos:end="101:40"><expr pos:start="101:24" pos:end="101:40"><operator pos:start="101:24" pos:end="101:24">&amp;</operator><name pos:start="101:25" pos:end="101:40"><name pos:start="101:25" pos:end="101:27">env</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:40">tlb_per_way</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:38"><expr pos:start="103:5" pos:end="103:37"><call pos:start="103:5" pos:end="103:37"><name pos:start="103:5" pos:end="103:19">qemu_get_sbe32s</name><argument_list pos:start="103:20" pos:end="103:37">(<argument pos:start="103:21" pos:end="103:21"><expr pos:start="103:21" pos:end="103:21"><name pos:start="103:21" pos:end="103:21">f</name></expr></argument>, <argument pos:start="103:24" pos:end="103:36"><expr pos:start="103:24" pos:end="103:36"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:36"><name pos:start="103:25" pos:end="103:27">env</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:36">nb_ways</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:39"><expr pos:start="105:5" pos:end="105:38"><call pos:start="105:5" pos:end="105:38"><name pos:start="105:5" pos:end="105:19">qemu_get_sbe32s</name><argument_list pos:start="105:20" pos:end="105:38">(<argument pos:start="105:21" pos:end="105:21"><expr pos:start="105:21" pos:end="105:21"><name pos:start="105:21" pos:end="105:21">f</name></expr></argument>, <argument pos:start="105:24" pos:end="105:37"><expr pos:start="105:24" pos:end="105:37"><operator pos:start="105:24" pos:end="105:24">&amp;</operator><name pos:start="105:25" pos:end="105:37"><name pos:start="105:25" pos:end="105:27">env</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:37">last_way</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:38"><expr pos:start="107:5" pos:end="107:37"><call pos:start="107:5" pos:end="107:37"><name pos:start="107:5" pos:end="107:19">qemu_get_sbe32s</name><argument_list pos:start="107:20" pos:end="107:37">(<argument pos:start="107:21" pos:end="107:21"><expr pos:start="107:21" pos:end="107:21"><name pos:start="107:21" pos:end="107:21">f</name></expr></argument>, <argument pos:start="107:24" pos:end="107:36"><expr pos:start="107:24" pos:end="107:36"><operator pos:start="107:24" pos:end="107:24">&amp;</operator><name pos:start="107:25" pos:end="107:36"><name pos:start="107:25" pos:end="107:27">env</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:36">id_tlbs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:38"><expr pos:start="109:5" pos:end="109:37"><call pos:start="109:5" pos:end="109:37"><name pos:start="109:5" pos:end="109:19">qemu_get_sbe32s</name><argument_list pos:start="109:20" pos:end="109:37">(<argument pos:start="109:21" pos:end="109:21"><expr pos:start="109:21" pos:end="109:21"><name pos:start="109:21" pos:end="109:21">f</name></expr></argument>, <argument pos:start="109:24" pos:end="109:36"><expr pos:start="109:24" pos:end="109:36"><operator pos:start="109:24" pos:end="109:24">&amp;</operator><name pos:start="109:25" pos:end="109:36"><name pos:start="109:25" pos:end="109:27">env</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:36">nb_pids</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="125:5"><if pos:start="111:5" pos:end="125:5">if <condition pos:start="111:8" pos:end="111:22">(<expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:16">tlb</name><operator pos:start="111:17" pos:end="111:17">.</operator><name pos:start="111:18" pos:end="111:21">tlb6</name></name></expr>)</condition> <block pos:start="111:24" pos:end="125:5">{<block_content pos:start="115:9" pos:end="123:9">

        <comment type="line" pos:start="113:9" pos:end="113:26">// XXX assumes 6xx</comment>

        <for pos:start="115:9" pos:end="123:9">for <control pos:start="115:13" pos:end="115:41">(<init pos:start="115:14" pos:end="115:19"><expr pos:start="115:14" pos:end="115:18"><name pos:start="115:14" pos:end="115:14">i</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:18">0</literal></expr>;</init> <condition pos:start="115:21" pos:end="115:36"><expr pos:start="115:21" pos:end="115:35"><name pos:start="115:21" pos:end="115:21">i</name> <operator pos:start="115:23" pos:end="115:23">&lt;</operator> <name pos:start="115:25" pos:end="115:35"><name pos:start="115:25" pos:end="115:27">env</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:35">nb_tlb</name></name></expr>;</condition> <incr pos:start="115:38" pos:end="115:40"><expr pos:start="115:38" pos:end="115:40"><name pos:start="115:38" pos:end="115:38">i</name><operator pos:start="115:39" pos:end="115:40">++</operator></expr></incr>)</control> <block pos:start="115:43" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:53">

            <expr_stmt pos:start="117:13" pos:end="117:54"><expr pos:start="117:13" pos:end="117:53"><call pos:start="117:13" pos:end="117:53"><name pos:start="117:13" pos:end="117:26">qemu_get_betls</name><argument_list pos:start="117:27" pos:end="117:53">(<argument pos:start="117:28" pos:end="117:28"><expr pos:start="117:28" pos:end="117:28"><name pos:start="117:28" pos:end="117:28">f</name></expr></argument>, <argument pos:start="117:31" pos:end="117:52"><expr pos:start="117:31" pos:end="117:52"><operator pos:start="117:31" pos:end="117:31">&amp;</operator><name pos:start="117:32" pos:end="117:47"><name pos:start="117:32" pos:end="117:34">env</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:39">tlb</name><operator pos:start="117:40" pos:end="117:40">.</operator><name pos:start="117:41" pos:end="117:44">tlb6</name><index pos:start="117:45" pos:end="117:47">[<expr pos:start="117:46" pos:end="117:46"><name pos:start="117:46" pos:end="117:46">i</name></expr>]</index></name><operator pos:start="117:48" pos:end="117:48">.</operator><name pos:start="117:49" pos:end="117:52">pte0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:54"><expr pos:start="119:13" pos:end="119:53"><call pos:start="119:13" pos:end="119:53"><name pos:start="119:13" pos:end="119:26">qemu_get_betls</name><argument_list pos:start="119:27" pos:end="119:53">(<argument pos:start="119:28" pos:end="119:28"><expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">f</name></expr></argument>, <argument pos:start="119:31" pos:end="119:52"><expr pos:start="119:31" pos:end="119:52"><operator pos:start="119:31" pos:end="119:31">&amp;</operator><name pos:start="119:32" pos:end="119:47"><name pos:start="119:32" pos:end="119:34">env</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:39">tlb</name><operator pos:start="119:40" pos:end="119:40">.</operator><name pos:start="119:41" pos:end="119:44">tlb6</name><index pos:start="119:45" pos:end="119:47">[<expr pos:start="119:46" pos:end="119:46"><name pos:start="119:46" pos:end="119:46">i</name></expr>]</index></name><operator pos:start="119:48" pos:end="119:48">.</operator><name pos:start="119:49" pos:end="119:52">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:53"><expr pos:start="121:13" pos:end="121:52"><call pos:start="121:13" pos:end="121:52"><name pos:start="121:13" pos:end="121:26">qemu_get_betls</name><argument_list pos:start="121:27" pos:end="121:52">(<argument pos:start="121:28" pos:end="121:28"><expr pos:start="121:28" pos:end="121:28"><name pos:start="121:28" pos:end="121:28">f</name></expr></argument>, <argument pos:start="121:31" pos:end="121:51"><expr pos:start="121:31" pos:end="121:51"><operator pos:start="121:31" pos:end="121:31">&amp;</operator><name pos:start="121:32" pos:end="121:47"><name pos:start="121:32" pos:end="121:34">env</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:39">tlb</name><operator pos:start="121:40" pos:end="121:40">.</operator><name pos:start="121:41" pos:end="121:44">tlb6</name><index pos:start="121:45" pos:end="121:47">[<expr pos:start="121:46" pos:end="121:46"><name pos:start="121:46" pos:end="121:46">i</name></expr>]</index></name><operator pos:start="121:48" pos:end="121:48">.</operator><name pos:start="121:49" pos:end="121:51">EPN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <for pos:start="127:5" pos:end="129:39">for <control pos:start="127:9" pos:end="127:27">(<init pos:start="127:10" pos:end="127:15"><expr pos:start="127:10" pos:end="127:14"><name pos:start="127:10" pos:end="127:10">i</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <literal type="number" pos:start="127:14" pos:end="127:14">0</literal></expr>;</init> <condition pos:start="127:17" pos:end="127:22"><expr pos:start="127:17" pos:end="127:21"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:19">&lt;</operator> <literal type="number" pos:start="127:21" pos:end="127:21">4</literal></expr>;</condition> <incr pos:start="127:24" pos:end="127:26"><expr pos:start="127:24" pos:end="127:26"><name pos:start="127:24" pos:end="127:24">i</name><operator pos:start="127:25" pos:end="127:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:9" pos:end="129:39"><block_content pos:start="129:9" pos:end="129:39">

        <expr_stmt pos:start="129:9" pos:end="129:39"><expr pos:start="129:9" pos:end="129:38"><call pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:22">qemu_get_betls</name><argument_list pos:start="129:23" pos:end="129:38">(<argument pos:start="129:24" pos:end="129:24"><expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">f</name></expr></argument>, <argument pos:start="129:27" pos:end="129:37"><expr pos:start="129:27" pos:end="129:37"><operator pos:start="129:27" pos:end="129:27">&amp;</operator><name pos:start="129:28" pos:end="129:37"><name pos:start="129:28" pos:end="129:30">env</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:34">pb</name><index pos:start="129:35" pos:end="129:37">[<expr pos:start="129:36" pos:end="129:36"><name pos:start="129:36" pos:end="129:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="131:5" pos:end="133:40">for <control pos:start="131:9" pos:end="131:30">(<init pos:start="131:10" pos:end="131:15"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">i</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">0</literal></expr>;</init> <condition pos:start="131:17" pos:end="131:25"><expr pos:start="131:17" pos:end="131:24"><name pos:start="131:17" pos:end="131:17">i</name> <operator pos:start="131:19" pos:end="131:19">&lt;</operator> <literal type="number" pos:start="131:21" pos:end="131:24">1024</literal></expr>;</condition> <incr pos:start="131:27" pos:end="131:29"><expr pos:start="131:27" pos:end="131:29"><name pos:start="131:27" pos:end="131:27">i</name><operator pos:start="131:28" pos:end="131:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:9" pos:end="133:40"><block_content pos:start="133:9" pos:end="133:40">

        <expr_stmt pos:start="133:9" pos:end="133:40"><expr pos:start="133:9" pos:end="133:39"><call pos:start="133:9" pos:end="133:39"><name pos:start="133:9" pos:end="133:22">qemu_get_betls</name><argument_list pos:start="133:23" pos:end="133:39">(<argument pos:start="133:24" pos:end="133:24"><expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">f</name></expr></argument>, <argument pos:start="133:27" pos:end="133:38"><expr pos:start="133:27" pos:end="133:38"><operator pos:start="133:27" pos:end="133:27">&amp;</operator><name pos:start="133:28" pos:end="133:38"><name pos:start="133:28" pos:end="133:30">env</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:35">spr</name><index pos:start="133:36" pos:end="133:38">[<expr pos:start="133:37" pos:end="133:37"><name pos:start="133:37" pos:end="133:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="135:5" pos:end="139:5"><if pos:start="135:5" pos:end="139:5">if <condition pos:start="135:8" pos:end="135:28">(<expr pos:start="135:9" pos:end="135:27"><operator pos:start="135:9" pos:end="135:9">!</operator><name pos:start="135:10" pos:end="135:27"><name pos:start="135:10" pos:end="135:12">env</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:27">external_htab</name></name></expr>)</condition> <block pos:start="135:30" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:34">

        <expr_stmt pos:start="137:9" pos:end="137:34"><expr pos:start="137:9" pos:end="137:33"><call pos:start="137:9" pos:end="137:33"><name pos:start="137:9" pos:end="137:22">ppc_store_sdr1</name><argument_list pos:start="137:23" pos:end="137:33">(<argument pos:start="137:24" pos:end="137:26"><expr pos:start="137:24" pos:end="137:26"><name pos:start="137:24" pos:end="137:26">env</name></expr></argument>, <argument pos:start="137:29" pos:end="137:32"><expr pos:start="137:29" pos:end="137:32"><name pos:start="137:29" pos:end="137:32">sdr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:34"><expr pos:start="141:5" pos:end="141:33"><call pos:start="141:5" pos:end="141:33"><name pos:start="141:5" pos:end="141:18">qemu_get_be32s</name><argument_list pos:start="141:19" pos:end="141:33">(<argument pos:start="141:20" pos:end="141:20"><expr pos:start="141:20" pos:end="141:20"><name pos:start="141:20" pos:end="141:20">f</name></expr></argument>, <argument pos:start="141:23" pos:end="141:32"><expr pos:start="141:23" pos:end="141:32"><operator pos:start="141:23" pos:end="141:23">&amp;</operator><name pos:start="141:24" pos:end="141:32"><name pos:start="141:24" pos:end="141:26">env</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:32">vscr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:37"><expr pos:start="143:5" pos:end="143:36"><call pos:start="143:5" pos:end="143:36"><name pos:start="143:5" pos:end="143:18">qemu_get_be64s</name><argument_list pos:start="143:19" pos:end="143:36">(<argument pos:start="143:20" pos:end="143:20"><expr pos:start="143:20" pos:end="143:20"><name pos:start="143:20" pos:end="143:20">f</name></expr></argument>, <argument pos:start="143:23" pos:end="143:35"><expr pos:start="143:23" pos:end="143:35"><operator pos:start="143:23" pos:end="143:23">&amp;</operator><name pos:start="143:24" pos:end="143:35"><name pos:start="143:24" pos:end="143:26">env</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:35">spe_acc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:38"><expr pos:start="145:5" pos:end="145:37"><call pos:start="145:5" pos:end="145:37"><name pos:start="145:5" pos:end="145:18">qemu_get_be32s</name><argument_list pos:start="145:19" pos:end="145:37">(<argument pos:start="145:20" pos:end="145:20"><expr pos:start="145:20" pos:end="145:20"><name pos:start="145:20" pos:end="145:20">f</name></expr></argument>, <argument pos:start="145:23" pos:end="145:36"><expr pos:start="145:23" pos:end="145:36"><operator pos:start="145:23" pos:end="145:23">&amp;</operator><name pos:start="145:24" pos:end="145:36"><name pos:start="145:24" pos:end="145:26">env</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:36">spe_fscr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:38"><expr pos:start="147:5" pos:end="147:37"><call pos:start="147:5" pos:end="147:37"><name pos:start="147:5" pos:end="147:18">qemu_get_betls</name><argument_list pos:start="147:19" pos:end="147:37">(<argument pos:start="147:20" pos:end="147:20"><expr pos:start="147:20" pos:end="147:20"><name pos:start="147:20" pos:end="147:20">f</name></expr></argument>, <argument pos:start="147:23" pos:end="147:36"><expr pos:start="147:23" pos:end="147:36"><operator pos:start="147:23" pos:end="147:23">&amp;</operator><name pos:start="147:24" pos:end="147:36"><name pos:start="147:24" pos:end="147:26">env</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:36">msr_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:35"><expr pos:start="149:5" pos:end="149:34"><call pos:start="149:5" pos:end="149:34"><name pos:start="149:5" pos:end="149:18">qemu_get_be32s</name><argument_list pos:start="149:19" pos:end="149:34">(<argument pos:start="149:20" pos:end="149:20"><expr pos:start="149:20" pos:end="149:20"><name pos:start="149:20" pos:end="149:20">f</name></expr></argument>, <argument pos:start="149:23" pos:end="149:33"><expr pos:start="149:23" pos:end="149:33"><operator pos:start="149:23" pos:end="149:23">&amp;</operator><name pos:start="149:24" pos:end="149:33"><name pos:start="149:24" pos:end="149:26">env</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:33">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:41"><expr pos:start="151:5" pos:end="151:40"><call pos:start="151:5" pos:end="151:40"><name pos:start="151:5" pos:end="151:19">qemu_get_sbe32s</name><argument_list pos:start="151:20" pos:end="151:40">(<argument pos:start="151:21" pos:end="151:21"><expr pos:start="151:21" pos:end="151:21"><name pos:start="151:21" pos:end="151:21">f</name></expr></argument>, <argument pos:start="151:24" pos:end="151:39"><expr pos:start="151:24" pos:end="151:39"><operator pos:start="151:24" pos:end="151:24">&amp;</operator><name pos:start="151:25" pos:end="151:39"><name pos:start="151:25" pos:end="151:27">env</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:39">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:48"><expr pos:start="153:5" pos:end="153:47"><call pos:start="153:5" pos:end="153:47"><name pos:start="153:5" pos:end="153:18">qemu_get_be32s</name><argument_list pos:start="153:19" pos:end="153:47">(<argument pos:start="153:20" pos:end="153:20"><expr pos:start="153:20" pos:end="153:20"><name pos:start="153:20" pos:end="153:20">f</name></expr></argument>, <argument pos:start="153:23" pos:end="153:46"><expr pos:start="153:23" pos:end="153:46"><operator pos:start="153:23" pos:end="153:23">&amp;</operator><name pos:start="153:24" pos:end="153:46"><name pos:start="153:24" pos:end="153:26">env</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:46">pending_interrupts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:45"><expr pos:start="155:5" pos:end="155:44"><call pos:start="155:5" pos:end="155:44"><name pos:start="155:5" pos:end="155:18">qemu_get_be32s</name><argument_list pos:start="155:19" pos:end="155:44">(<argument pos:start="155:20" pos:end="155:20"><expr pos:start="155:20" pos:end="155:20"><name pos:start="155:20" pos:end="155:20">f</name></expr></argument>, <argument pos:start="155:23" pos:end="155:43"><expr pos:start="155:23" pos:end="155:43"><operator pos:start="155:23" pos:end="155:23">&amp;</operator><name pos:start="155:24" pos:end="155:43"><name pos:start="155:24" pos:end="155:26">env</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:43">irq_input_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="157:5" pos:end="159:49">for <control pos:start="157:9" pos:end="157:41">(<init pos:start="157:10" pos:end="157:15"><expr pos:start="157:10" pos:end="157:14"><name pos:start="157:10" pos:end="157:10">i</name> <operator pos:start="157:12" pos:end="157:12">=</operator> <literal type="number" pos:start="157:14" pos:end="157:14">0</literal></expr>;</init> <condition pos:start="157:17" pos:end="157:36"><expr pos:start="157:17" pos:end="157:35"><name pos:start="157:17" pos:end="157:17">i</name> <operator pos:start="157:19" pos:end="157:19">&lt;</operator> <name pos:start="157:21" pos:end="157:35">POWERPC_EXCP_NB</name></expr>;</condition> <incr pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><name pos:start="157:38" pos:end="157:38">i</name><operator pos:start="157:39" pos:end="157:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="159:9" pos:end="159:49"><block_content pos:start="159:9" pos:end="159:49">

        <expr_stmt pos:start="159:9" pos:end="159:49"><expr pos:start="159:9" pos:end="159:48"><call pos:start="159:9" pos:end="159:48"><name pos:start="159:9" pos:end="159:22">qemu_get_betls</name><argument_list pos:start="159:23" pos:end="159:48">(<argument pos:start="159:24" pos:end="159:24"><expr pos:start="159:24" pos:end="159:24"><name pos:start="159:24" pos:end="159:24">f</name></expr></argument>, <argument pos:start="159:27" pos:end="159:47"><expr pos:start="159:27" pos:end="159:47"><operator pos:start="159:27" pos:end="159:27">&amp;</operator><name pos:start="159:28" pos:end="159:47"><name pos:start="159:28" pos:end="159:30">env</name><operator pos:start="159:31" pos:end="159:32">-&gt;</operator><name pos:start="159:33" pos:end="159:44">excp_vectors</name><index pos:start="159:45" pos:end="159:47">[<expr pos:start="159:46" pos:end="159:46"><name pos:start="159:46" pos:end="159:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="161:5" pos:end="161:41"><expr pos:start="161:5" pos:end="161:40"><call pos:start="161:5" pos:end="161:40"><name pos:start="161:5" pos:end="161:18">qemu_get_betls</name><argument_list pos:start="161:19" pos:end="161:40">(<argument pos:start="161:20" pos:end="161:20"><expr pos:start="161:20" pos:end="161:20"><name pos:start="161:20" pos:end="161:20">f</name></expr></argument>, <argument pos:start="161:23" pos:end="161:39"><expr pos:start="161:23" pos:end="161:39"><operator pos:start="161:23" pos:end="161:23">&amp;</operator><name pos:start="161:24" pos:end="161:39"><name pos:start="161:24" pos:end="161:26">env</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:39">excp_prefix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:39"><expr pos:start="163:5" pos:end="163:38"><call pos:start="163:5" pos:end="163:38"><name pos:start="163:5" pos:end="163:18">qemu_get_betls</name><argument_list pos:start="163:19" pos:end="163:38">(<argument pos:start="163:20" pos:end="163:20"><expr pos:start="163:20" pos:end="163:20"><name pos:start="163:20" pos:end="163:20">f</name></expr></argument>, <argument pos:start="163:23" pos:end="163:37"><expr pos:start="163:23" pos:end="163:37"><operator pos:start="163:23" pos:end="163:23">&amp;</operator><name pos:start="163:24" pos:end="163:37"><name pos:start="163:24" pos:end="163:26">env</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:37">ivor_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:39"><expr pos:start="165:5" pos:end="165:38"><call pos:start="165:5" pos:end="165:38"><name pos:start="165:5" pos:end="165:18">qemu_get_betls</name><argument_list pos:start="165:19" pos:end="165:38">(<argument pos:start="165:20" pos:end="165:20"><expr pos:start="165:20" pos:end="165:20"><name pos:start="165:20" pos:end="165:20">f</name></expr></argument>, <argument pos:start="165:23" pos:end="165:37"><expr pos:start="165:23" pos:end="165:37"><operator pos:start="165:23" pos:end="165:23">&amp;</operator><name pos:start="165:24" pos:end="165:37"><name pos:start="165:24" pos:end="165:26">env</name><operator pos:start="165:27" pos:end="165:28">-&gt;</operator><name pos:start="165:29" pos:end="165:37">ivpr_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:43"><expr pos:start="167:5" pos:end="167:42"><call pos:start="167:5" pos:end="167:42"><name pos:start="167:5" pos:end="167:18">qemu_get_betls</name><argument_list pos:start="167:19" pos:end="167:42">(<argument pos:start="167:20" pos:end="167:20"><expr pos:start="167:20" pos:end="167:20"><name pos:start="167:20" pos:end="167:20">f</name></expr></argument>, <argument pos:start="167:23" pos:end="167:41"><expr pos:start="167:23" pos:end="167:41"><operator pos:start="167:23" pos:end="167:23">&amp;</operator><name pos:start="167:24" pos:end="167:41"><name pos:start="167:24" pos:end="167:26">env</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:41">hreset_vector</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:33"><expr pos:start="169:5" pos:end="169:32"><call pos:start="169:5" pos:end="169:32"><name pos:start="169:5" pos:end="169:18">qemu_get_betls</name><argument_list pos:start="169:19" pos:end="169:32">(<argument pos:start="169:20" pos:end="169:20"><expr pos:start="169:20" pos:end="169:20"><name pos:start="169:20" pos:end="169:20">f</name></expr></argument>, <argument pos:start="169:23" pos:end="169:31"><expr pos:start="169:23" pos:end="169:31"><operator pos:start="169:23" pos:end="169:23">&amp;</operator><name pos:start="169:24" pos:end="169:31"><name pos:start="169:24" pos:end="169:26">env</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:31">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:36"><expr pos:start="171:5" pos:end="171:35"><call pos:start="171:5" pos:end="171:35"><name pos:start="171:5" pos:end="171:18">qemu_get_betls</name><argument_list pos:start="171:19" pos:end="171:35">(<argument pos:start="171:20" pos:end="171:20"><expr pos:start="171:20" pos:end="171:20"><name pos:start="171:20" pos:end="171:20">f</name></expr></argument>, <argument pos:start="171:23" pos:end="171:34"><expr pos:start="171:23" pos:end="171:34"><operator pos:start="171:23" pos:end="171:23">&amp;</operator><name pos:start="171:24" pos:end="171:34"><name pos:start="171:24" pos:end="171:26">env</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:34">hflags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:41"><expr pos:start="173:5" pos:end="173:40"><call pos:start="173:5" pos:end="173:40"><name pos:start="173:5" pos:end="173:18">qemu_get_betls</name><argument_list pos:start="173:19" pos:end="173:40">(<argument pos:start="173:20" pos:end="173:20"><expr pos:start="173:20" pos:end="173:20"><name pos:start="173:20" pos:end="173:20">f</name></expr></argument>, <argument pos:start="173:23" pos:end="173:39"><expr pos:start="173:23" pos:end="173:39"><operator pos:start="173:23" pos:end="173:23">&amp;</operator><name pos:start="173:24" pos:end="173:39"><name pos:start="173:24" pos:end="173:26">env</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:39">hflags_nmsr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:22"><expr pos:start="175:5" pos:end="175:21"><call pos:start="175:5" pos:end="175:21"><name pos:start="175:5" pos:end="175:18">qemu_get_sbe32</name><argument_list pos:start="175:19" pos:end="175:21">(<argument pos:start="175:20" pos:end="175:20"><expr pos:start="175:20" pos:end="175:20"><name pos:start="175:20" pos:end="175:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:24" pos:end="175:51">/* Discard unused mmu_idx */</comment>

    <expr_stmt pos:start="177:5" pos:end="177:22"><expr pos:start="177:5" pos:end="177:21"><call pos:start="177:5" pos:end="177:21"><name pos:start="177:5" pos:end="177:18">qemu_get_sbe32</name><argument_list pos:start="177:19" pos:end="177:21">(<argument pos:start="177:20" pos:end="177:20"><expr pos:start="177:20" pos:end="177:20"><name pos:start="177:20" pos:end="177:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="177:24" pos:end="177:54">/* Discard unused power_mode */</comment>



    <comment type="block" pos:start="181:5" pos:end="181:31">/* Recompute mmu indices */</comment>

    <expr_stmt pos:start="183:5" pos:end="183:30"><expr pos:start="183:5" pos:end="183:29"><call pos:start="183:5" pos:end="183:29"><name pos:start="183:5" pos:end="183:24">hreg_compute_mem_idx</name><argument_list pos:start="183:25" pos:end="183:29">(<argument pos:start="183:26" pos:end="183:28"><expr pos:start="183:26" pos:end="183:28"><name pos:start="183:26" pos:end="183:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="187:5" pos:end="187:13">return <expr pos:start="187:12" pos:end="187:12"><literal type="number" pos:start="187:12" pos:end="187:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
