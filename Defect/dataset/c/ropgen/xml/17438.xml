<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17438.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">doTest</name><parameter_list pos:start="1:18" pos:end="3:68">(<parameter pos:start="1:19" pos:end="1:33"><decl pos:start="1:19" pos:end="1:33"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:25">uint8_t</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:30">ref</name><index pos:start="1:31" pos:end="1:33">[<expr pos:start="1:32" pos:end="1:32"><literal type="number" pos:start="1:32" pos:end="1:32">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:48">refStride</name><index pos:start="1:49" pos:end="1:51">[<expr pos:start="1:50" pos:end="1:50"><literal type="number" pos:start="1:50" pos:end="1:50">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:80"><decl pos:start="1:68" pos:end="1:80"><type pos:start="1:68" pos:end="1:80"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:80">srcFormat</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:95"><decl pos:start="1:83" pos:end="1:95"><type pos:start="1:83" pos:end="1:95"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:95">dstFormat</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:26"><decl pos:start="3:19" pos:end="3:26"><type pos:start="3:19" pos:end="3:26"><name pos:start="3:19" pos:end="3:21">int</name></type> <name pos:start="3:23" pos:end="3:26">srcW</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:36"><decl pos:start="3:29" pos:end="3:36"><type pos:start="3:29" pos:end="3:36"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:36">srcH</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:46"><decl pos:start="3:39" pos:end="3:46"><type pos:start="3:39" pos:end="3:46"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:46">dstW</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:56"><decl pos:start="3:49" pos:end="3:56"><type pos:start="3:49" pos:end="3:56"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:56">dstH</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:67"><decl pos:start="3:59" pos:end="3:67"><type pos:start="3:59" pos:end="3:67"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:67">flags</name></decl></parameter>)</parameter_list><block pos:start="3:69" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:19"><name pos:start="5:14" pos:end="5:16">src</name><index pos:start="5:17" pos:end="5:19">[<expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">4</literal></expr>]</index></name> <init pos:start="5:21" pos:end="5:25">= <expr pos:start="5:23" pos:end="5:25"><block pos:start="5:23" pos:end="5:25">{<expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:19"><name pos:start="7:14" pos:end="7:16">dst</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">4</literal></expr>]</index></name> <init pos:start="7:21" pos:end="7:25">= <expr pos:start="7:23" pos:end="7:25"><block pos:start="7:23" pos:end="7:25">{<expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19"><name pos:start="9:14" pos:end="9:16">out</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">4</literal></expr>]</index></name> <init pos:start="9:21" pos:end="9:25">= <expr pos:start="9:23" pos:end="9:25"><block pos:start="9:23" pos:end="9:25">{<expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:17">srcStride</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">4</literal></expr>]</index></name></decl>, <decl pos:start="11:23" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:31">dstStride</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:17">ssdY</name></decl>, <decl pos:start="15:20" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:20" pos:end="15:23">ssdU</name></decl>, <decl pos:start="15:26" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:26" pos:end="15:29">ssdV</name></decl>, <decl pos:start="15:32" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:32" pos:end="15:35">ssdA</name><init pos:start="15:36" pos:end="15:37">=<expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="19:41"><decl pos:start="17:5" pos:end="17:40"><type pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:21">SwsContext</name></name> <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:33">srcContext</name> <init pos:start="17:35" pos:end="17:40">= <expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">NULL</name></expr></init></decl>, <decl pos:start="17:43" pos:end="17:60"><type ref="prev" pos:start="17:5" pos:end="17:23"><modifier pos:start="17:43" pos:end="17:43">*</modifier></type><name pos:start="17:44" pos:end="17:53">dstContext</name> <init pos:start="17:55" pos:end="17:60">= <expr pos:start="17:57" pos:end="17:60"><name pos:start="17:57" pos:end="17:60">NULL</name></expr></init></decl>,

                      <decl pos:start="19:23" pos:end="19:40"><type ref="prev" pos:start="17:5" pos:end="17:23"><modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:33">outContext</name> <init pos:start="19:35" pos:end="19:40">= <expr pos:start="19:37" pos:end="19:40"><name pos:start="19:37" pos:end="19:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:12"><expr pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:7">res</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <literal type="number" pos:start="25:11" pos:end="25:11">0</literal></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="77:5">for <control pos:start="27:9" pos:end="27:23">(<init pos:start="27:10" pos:end="27:13"><expr pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:10">i</name><operator pos:start="27:11" pos:end="27:11">=</operator><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</init> <condition pos:start="27:15" pos:end="27:18"><expr pos:start="27:15" pos:end="27:17"><name pos:start="27:15" pos:end="27:15">i</name><operator pos:start="27:16" pos:end="27:16">&lt;</operator><literal type="number" pos:start="27:17" pos:end="27:17">4</literal></expr>;</condition> <incr pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:20">i</name><operator pos:start="27:21" pos:end="27:22">++</operator></expr></incr>)</control><block pos:start="27:24" pos:end="77:5">{<block_content pos:start="31:9" pos:end="75:9">

        <comment type="line" pos:start="29:9" pos:end="29:34">// avoid stride % bpp != 0</comment>

        <if_stmt pos:start="31:9" pos:end="41:33"><if pos:start="31:9" pos:end="33:33">if <condition pos:start="31:12" pos:end="31:65">(<expr pos:start="31:13" pos:end="31:64"><name pos:start="31:13" pos:end="31:21">srcFormat</name><operator pos:start="31:22" pos:end="31:23">==</operator><name pos:start="31:24" pos:end="31:36">PIX_FMT_RGB24</name> <operator pos:start="31:38" pos:end="31:39">||</operator> <name pos:start="31:41" pos:end="31:49">srcFormat</name><operator pos:start="31:50" pos:end="31:51">==</operator><name pos:start="31:52" pos:end="31:64">PIX_FMT_BGR24</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:33"><block_content pos:start="33:13" pos:end="33:33">

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:21">srcStride</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">i</name></expr>]</index></name><operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:30">srcW</name><operator pos:start="33:31" pos:end="33:31">*</operator><literal type="number" pos:start="33:32" pos:end="33:32">3</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="35:9" pos:end="37:33">else if <condition pos:start="35:17" pos:end="35:74">(<expr pos:start="35:18" pos:end="35:73"><name pos:start="35:18" pos:end="35:26">srcFormat</name><operator pos:start="35:27" pos:end="35:28">==</operator><name pos:start="35:29" pos:end="35:43">PIX_FMT_RGB48BE</name> <operator pos:start="35:45" pos:end="35:46">||</operator> <name pos:start="35:48" pos:end="35:56">srcFormat</name><operator pos:start="35:57" pos:end="35:58">==</operator><name pos:start="35:59" pos:end="35:73">PIX_FMT_RGB48LE</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:33"><block_content pos:start="37:13" pos:end="37:33">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:21">srcStride</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">i</name></expr>]</index></name><operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:30">srcW</name><operator pos:start="37:31" pos:end="37:31">*</operator><literal type="number" pos:start="37:32" pos:end="37:32">6</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="39:9" pos:end="41:33">else<block type="pseudo" pos:start="41:13" pos:end="41:33"><block_content pos:start="41:13" pos:end="41:33">

            <expr_stmt pos:start="41:13" pos:end="41:33"><expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:21">srcStride</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">i</name></expr>]</index></name><operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:30">srcW</name><operator pos:start="41:31" pos:end="41:31">*</operator><literal type="number" pos:start="41:32" pos:end="41:32">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="45:9" pos:end="55:33"><if pos:start="45:9" pos:end="47:33">if <condition pos:start="45:12" pos:end="45:65">(<expr pos:start="45:13" pos:end="45:64"><name pos:start="45:13" pos:end="45:21">dstFormat</name><operator pos:start="45:22" pos:end="45:23">==</operator><name pos:start="45:24" pos:end="45:36">PIX_FMT_RGB24</name> <operator pos:start="45:38" pos:end="45:39">||</operator> <name pos:start="45:41" pos:end="45:49">dstFormat</name><operator pos:start="45:50" pos:end="45:51">==</operator><name pos:start="45:52" pos:end="45:64">PIX_FMT_BGR24</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:33"><block_content pos:start="47:13" pos:end="47:33">

            <expr_stmt pos:start="47:13" pos:end="47:33"><expr pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:21">dstStride</name><index pos:start="47:22" pos:end="47:24">[<expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">i</name></expr>]</index></name><operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:30">dstW</name><operator pos:start="47:31" pos:end="47:31">*</operator><literal type="number" pos:start="47:32" pos:end="47:32">3</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="49:9" pos:end="51:33">else if <condition pos:start="49:17" pos:end="49:74">(<expr pos:start="49:18" pos:end="49:73"><name pos:start="49:18" pos:end="49:26">dstFormat</name><operator pos:start="49:27" pos:end="49:28">==</operator><name pos:start="49:29" pos:end="49:43">PIX_FMT_RGB48BE</name> <operator pos:start="49:45" pos:end="49:46">||</operator> <name pos:start="49:48" pos:end="49:56">dstFormat</name><operator pos:start="49:57" pos:end="49:58">==</operator><name pos:start="49:59" pos:end="49:73">PIX_FMT_RGB48LE</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:33"><block_content pos:start="51:13" pos:end="51:33">

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:21">dstStride</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">i</name></expr>]</index></name><operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:30">dstW</name><operator pos:start="51:31" pos:end="51:31">*</operator><literal type="number" pos:start="51:32" pos:end="51:32">6</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="53:9" pos:end="55:33">else<block type="pseudo" pos:start="55:13" pos:end="55:33"><block_content pos:start="55:13" pos:end="55:33">

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:21">dstStride</name><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">i</name></expr>]</index></name><operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:30">dstW</name><operator pos:start="55:31" pos:end="55:31">*</operator><literal type="number" pos:start="55:32" pos:end="55:32">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:53"><expr pos:start="59:9" pos:end="59:52"><name pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:11">src</name><index pos:start="59:12" pos:end="59:14">[<expr pos:start="59:13" pos:end="59:13"><name pos:start="59:13" pos:end="59:13">i</name></expr>]</index></name><operator pos:start="59:15" pos:end="59:15">=</operator> <operator pos:start="59:17" pos:end="59:17">(</operator><name pos:start="59:18" pos:end="59:24">uint8_t</name><operator pos:start="59:25" pos:end="59:25">*</operator><operator pos:start="59:26" pos:end="59:26">)</operator> <call pos:start="59:28" pos:end="59:52"><name pos:start="59:28" pos:end="59:33">malloc</name><argument_list pos:start="59:34" pos:end="59:52">(<argument pos:start="59:35" pos:end="59:51"><expr pos:start="59:35" pos:end="59:51"><name pos:start="59:35" pos:end="59:46"><name pos:start="59:35" pos:end="59:43">srcStride</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr>]</index></name><operator pos:start="59:47" pos:end="59:47">*</operator><name pos:start="59:48" pos:end="59:51">srcH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:11">dst</name><index pos:start="61:12" pos:end="61:14">[<expr pos:start="61:13" pos:end="61:13"><name pos:start="61:13" pos:end="61:13">i</name></expr>]</index></name><operator pos:start="61:15" pos:end="61:15">=</operator> <operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:24">uint8_t</name><operator pos:start="61:25" pos:end="61:25">*</operator><operator pos:start="61:26" pos:end="61:26">)</operator> <call pos:start="61:28" pos:end="61:52"><name pos:start="61:28" pos:end="61:33">malloc</name><argument_list pos:start="61:34" pos:end="61:52">(<argument pos:start="61:35" pos:end="61:51"><expr pos:start="61:35" pos:end="61:51"><name pos:start="61:35" pos:end="61:46"><name pos:start="61:35" pos:end="61:43">dstStride</name><index pos:start="61:44" pos:end="61:46">[<expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">i</name></expr>]</index></name><operator pos:start="61:47" pos:end="61:47">*</operator><name pos:start="61:48" pos:end="61:51">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:11">out</name><index pos:start="63:12" pos:end="63:14">[<expr pos:start="63:13" pos:end="63:13"><name pos:start="63:13" pos:end="63:13">i</name></expr>]</index></name><operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:24">uint8_t</name><operator pos:start="63:25" pos:end="63:25">*</operator><operator pos:start="63:26" pos:end="63:26">)</operator> <call pos:start="63:28" pos:end="63:49"><name pos:start="63:28" pos:end="63:33">malloc</name><argument_list pos:start="63:34" pos:end="63:49">(<argument pos:start="63:35" pos:end="63:48"><expr pos:start="63:35" pos:end="63:48"><name pos:start="63:35" pos:end="63:46"><name pos:start="63:35" pos:end="63:43">refStride</name><index pos:start="63:44" pos:end="63:46">[<expr pos:start="63:45" pos:end="63:45"><name pos:start="63:45" pos:end="63:45">i</name></expr>]</index></name><operator pos:start="63:47" pos:end="63:47">*</operator><name pos:start="63:48" pos:end="63:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="75:9"><if pos:start="65:9" pos:end="75:9">if <condition pos:start="65:12" pos:end="65:42">(<expr pos:start="65:13" pos:end="65:41"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:19"><name pos:start="65:14" pos:end="65:16">src</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><name pos:start="65:18" pos:end="65:18">i</name></expr>]</index></name> <operator pos:start="65:21" pos:end="65:22">||</operator> <operator pos:start="65:24" pos:end="65:24">!</operator><name pos:start="65:25" pos:end="65:30"><name pos:start="65:25" pos:end="65:27">dst</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">i</name></expr>]</index></name> <operator pos:start="65:32" pos:end="65:33">||</operator> <operator pos:start="65:35" pos:end="65:35">!</operator><name pos:start="65:36" pos:end="65:41"><name pos:start="65:36" pos:end="65:38">out</name><index pos:start="65:39" pos:end="65:41">[<expr pos:start="65:40" pos:end="65:40"><name pos:start="65:40" pos:end="65:40">i</name></expr>]</index></name></expr>)</condition> <block pos:start="65:44" pos:end="75:9">{<block_content pos:start="67:13" pos:end="73:21">

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><call pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:18">perror</name><argument_list pos:start="67:19" pos:end="67:28">(<argument pos:start="67:20" pos:end="67:27"><expr pos:start="67:20" pos:end="67:27"><literal type="string" pos:start="67:20" pos:end="67:27">"Malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:21"><expr pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:15">res</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <operator pos:start="69:19" pos:end="69:19">-</operator><literal type="number" pos:start="69:20" pos:end="69:20">1</literal></expr>;</expr_stmt>



            <goto pos:start="73:13" pos:end="73:21">goto <name pos:start="73:18" pos:end="73:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="81:5" pos:end="81:103"><expr pos:start="81:5" pos:end="81:102"><name pos:start="81:5" pos:end="81:14">srcContext</name><operator pos:start="81:15" pos:end="81:15">=</operator> <call pos:start="81:17" pos:end="81:102"><name pos:start="81:17" pos:end="81:30">sws_getContext</name><argument_list pos:start="81:31" pos:end="81:102">(<argument pos:start="81:32" pos:end="81:32"><expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">w</name></expr></argument>, <argument pos:start="81:35" pos:end="81:35"><expr pos:start="81:35" pos:end="81:35"><name pos:start="81:35" pos:end="81:35">h</name></expr></argument>, <argument pos:start="81:38" pos:end="81:53"><expr pos:start="81:38" pos:end="81:53"><name pos:start="81:38" pos:end="81:53">PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="81:56" pos:end="81:59"><expr pos:start="81:56" pos:end="81:59"><name pos:start="81:56" pos:end="81:59">srcW</name></expr></argument>, <argument pos:start="81:62" pos:end="81:65"><expr pos:start="81:62" pos:end="81:65"><name pos:start="81:62" pos:end="81:65">srcH</name></expr></argument>, <argument pos:start="81:68" pos:end="81:76"><expr pos:start="81:68" pos:end="81:76"><name pos:start="81:68" pos:end="81:76">srcFormat</name></expr></argument>, <argument pos:start="81:79" pos:end="81:83"><expr pos:start="81:79" pos:end="81:83"><name pos:start="81:79" pos:end="81:83">flags</name></expr></argument>, <argument pos:start="81:86" pos:end="81:89"><expr pos:start="81:86" pos:end="81:89"><name pos:start="81:86" pos:end="81:89">NULL</name></expr></argument>, <argument pos:start="81:92" pos:end="81:95"><expr pos:start="81:92" pos:end="81:95"><name pos:start="81:92" pos:end="81:95">NULL</name></expr></argument>, <argument pos:start="81:98" pos:end="81:101"><expr pos:start="81:98" pos:end="81:101"><name pos:start="81:98" pos:end="81:101">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="97:5"><if pos:start="83:5" pos:end="97:5">if <condition pos:start="83:8" pos:end="83:20">(<expr pos:start="83:9" pos:end="83:19"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:19">srcContext</name></expr>)</condition> <block pos:start="83:22" pos:end="97:5">{<block_content pos:start="85:9" pos:end="95:17">

        <expr_stmt pos:start="85:9" pos:end="89:44"><expr pos:start="85:9" pos:end="89:43"><call pos:start="85:9" pos:end="89:43"><name pos:start="85:9" pos:end="85:15">fprintf</name><argument_list pos:start="85:16" pos:end="89:43">(<argument pos:start="85:17" pos:end="85:22"><expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:22">stderr</name></expr></argument>, <argument pos:start="85:25" pos:end="85:52"><expr pos:start="85:25" pos:end="85:52"><literal type="string" pos:start="85:25" pos:end="85:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="87:17" pos:end="87:49"><expr pos:start="87:17" pos:end="87:49"><call pos:start="87:17" pos:end="87:49"><name pos:start="87:17" pos:end="87:31">sws_format_name</name><argument_list pos:start="87:32" pos:end="87:49">(<argument pos:start="87:33" pos:end="87:48"><expr pos:start="87:33" pos:end="87:48"><name pos:start="87:33" pos:end="87:48">PIX_FMT_YUVA420P</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="89:17" pos:end="89:42"><expr pos:start="89:17" pos:end="89:42"><call pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:31">sws_format_name</name><argument_list pos:start="89:32" pos:end="89:42">(<argument pos:start="89:33" pos:end="89:41"><expr pos:start="89:33" pos:end="89:41"><name pos:start="89:33" pos:end="89:41">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:17"><expr pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:11">res</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <operator pos:start="91:15" pos:end="91:15">-</operator><literal type="number" pos:start="91:16" pos:end="91:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="95:9" pos:end="95:17">goto <name pos:start="95:14" pos:end="95:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:102"><expr pos:start="99:5" pos:end="99:101"><name pos:start="99:5" pos:end="99:14">dstContext</name><operator pos:start="99:15" pos:end="99:15">=</operator> <call pos:start="99:17" pos:end="99:101"><name pos:start="99:17" pos:end="99:30">sws_getContext</name><argument_list pos:start="99:31" pos:end="99:101">(<argument pos:start="99:32" pos:end="99:35"><expr pos:start="99:32" pos:end="99:35"><name pos:start="99:32" pos:end="99:35">srcW</name></expr></argument>, <argument pos:start="99:38" pos:end="99:41"><expr pos:start="99:38" pos:end="99:41"><name pos:start="99:38" pos:end="99:41">srcH</name></expr></argument>, <argument pos:start="99:44" pos:end="99:52"><expr pos:start="99:44" pos:end="99:52"><name pos:start="99:44" pos:end="99:52">srcFormat</name></expr></argument>, <argument pos:start="99:55" pos:end="99:58"><expr pos:start="99:55" pos:end="99:58"><name pos:start="99:55" pos:end="99:58">dstW</name></expr></argument>, <argument pos:start="99:61" pos:end="99:64"><expr pos:start="99:61" pos:end="99:64"><name pos:start="99:61" pos:end="99:64">dstH</name></expr></argument>, <argument pos:start="99:67" pos:end="99:75"><expr pos:start="99:67" pos:end="99:75"><name pos:start="99:67" pos:end="99:75">dstFormat</name></expr></argument>, <argument pos:start="99:78" pos:end="99:82"><expr pos:start="99:78" pos:end="99:82"><name pos:start="99:78" pos:end="99:82">flags</name></expr></argument>, <argument pos:start="99:85" pos:end="99:88"><expr pos:start="99:85" pos:end="99:88"><name pos:start="99:85" pos:end="99:88">NULL</name></expr></argument>, <argument pos:start="99:91" pos:end="99:94"><expr pos:start="99:91" pos:end="99:94"><name pos:start="99:91" pos:end="99:94">NULL</name></expr></argument>, <argument pos:start="99:97" pos:end="99:100"><expr pos:start="99:97" pos:end="99:100"><name pos:start="99:97" pos:end="99:100">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="115:5"><if pos:start="101:5" pos:end="115:5">if <condition pos:start="101:8" pos:end="101:20">(<expr pos:start="101:9" pos:end="101:19"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:19">dstContext</name></expr>)</condition> <block pos:start="101:22" pos:end="115:5">{<block_content pos:start="103:9" pos:end="113:17">

        <expr_stmt pos:start="103:9" pos:end="107:44"><expr pos:start="103:9" pos:end="107:43"><call pos:start="103:9" pos:end="107:43"><name pos:start="103:9" pos:end="103:15">fprintf</name><argument_list pos:start="103:16" pos:end="107:43">(<argument pos:start="103:17" pos:end="103:22"><expr pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:22">stderr</name></expr></argument>, <argument pos:start="103:25" pos:end="103:52"><expr pos:start="103:25" pos:end="103:52"><literal type="string" pos:start="103:25" pos:end="103:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="105:17" pos:end="105:42"><expr pos:start="105:17" pos:end="105:42"><call pos:start="105:17" pos:end="105:42"><name pos:start="105:17" pos:end="105:31">sws_format_name</name><argument_list pos:start="105:32" pos:end="105:42">(<argument pos:start="105:33" pos:end="105:41"><expr pos:start="105:33" pos:end="105:41"><name pos:start="105:33" pos:end="105:41">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="107:17" pos:end="107:42"><expr pos:start="107:17" pos:end="107:42"><call pos:start="107:17" pos:end="107:42"><name pos:start="107:17" pos:end="107:31">sws_format_name</name><argument_list pos:start="107:32" pos:end="107:42">(<argument pos:start="107:33" pos:end="107:41"><expr pos:start="107:33" pos:end="107:41"><name pos:start="107:33" pos:end="107:41">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:17"><expr pos:start="109:9" pos:end="109:16"><name pos:start="109:9" pos:end="109:11">res</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <operator pos:start="109:15" pos:end="109:15">-</operator><literal type="number" pos:start="109:16" pos:end="109:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="113:9" pos:end="113:17">goto <name pos:start="113:14" pos:end="113:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:103"><expr pos:start="117:5" pos:end="117:102"><name pos:start="117:5" pos:end="117:14">outContext</name><operator pos:start="117:15" pos:end="117:15">=</operator> <call pos:start="117:17" pos:end="117:102"><name pos:start="117:17" pos:end="117:30">sws_getContext</name><argument_list pos:start="117:31" pos:end="117:102">(<argument pos:start="117:32" pos:end="117:35"><expr pos:start="117:32" pos:end="117:35"><name pos:start="117:32" pos:end="117:35">dstW</name></expr></argument>, <argument pos:start="117:38" pos:end="117:41"><expr pos:start="117:38" pos:end="117:41"><name pos:start="117:38" pos:end="117:41">dstH</name></expr></argument>, <argument pos:start="117:44" pos:end="117:52"><expr pos:start="117:44" pos:end="117:52"><name pos:start="117:44" pos:end="117:52">dstFormat</name></expr></argument>, <argument pos:start="117:55" pos:end="117:55"><expr pos:start="117:55" pos:end="117:55"><name pos:start="117:55" pos:end="117:55">w</name></expr></argument>, <argument pos:start="117:58" pos:end="117:58"><expr pos:start="117:58" pos:end="117:58"><name pos:start="117:58" pos:end="117:58">h</name></expr></argument>, <argument pos:start="117:61" pos:end="117:76"><expr pos:start="117:61" pos:end="117:76"><name pos:start="117:61" pos:end="117:76">PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="117:79" pos:end="117:83"><expr pos:start="117:79" pos:end="117:83"><name pos:start="117:79" pos:end="117:83">flags</name></expr></argument>, <argument pos:start="117:86" pos:end="117:89"><expr pos:start="117:86" pos:end="117:89"><name pos:start="117:86" pos:end="117:89">NULL</name></expr></argument>, <argument pos:start="117:92" pos:end="117:95"><expr pos:start="117:92" pos:end="117:95"><name pos:start="117:92" pos:end="117:95">NULL</name></expr></argument>, <argument pos:start="117:98" pos:end="117:101"><expr pos:start="117:98" pos:end="117:101"><name pos:start="117:98" pos:end="117:101">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="133:5"><if pos:start="119:5" pos:end="133:5">if <condition pos:start="119:8" pos:end="119:20">(<expr pos:start="119:9" pos:end="119:19"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:19">outContext</name></expr>)</condition> <block pos:start="119:22" pos:end="133:5">{<block_content pos:start="121:9" pos:end="131:17">

        <expr_stmt pos:start="121:9" pos:end="125:51"><expr pos:start="121:9" pos:end="125:50"><call pos:start="121:9" pos:end="125:50"><name pos:start="121:9" pos:end="121:15">fprintf</name><argument_list pos:start="121:16" pos:end="125:50">(<argument pos:start="121:17" pos:end="121:22"><expr pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:22">stderr</name></expr></argument>, <argument pos:start="121:25" pos:end="121:52"><expr pos:start="121:25" pos:end="121:52"><literal type="string" pos:start="121:25" pos:end="121:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="123:17" pos:end="123:42"><expr pos:start="123:17" pos:end="123:42"><call pos:start="123:17" pos:end="123:42"><name pos:start="123:17" pos:end="123:31">sws_format_name</name><argument_list pos:start="123:32" pos:end="123:42">(<argument pos:start="123:33" pos:end="123:41"><expr pos:start="123:33" pos:end="123:41"><name pos:start="123:33" pos:end="123:41">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="125:17" pos:end="125:49"><expr pos:start="125:17" pos:end="125:49"><call pos:start="125:17" pos:end="125:49"><name pos:start="125:17" pos:end="125:31">sws_format_name</name><argument_list pos:start="125:32" pos:end="125:49">(<argument pos:start="125:33" pos:end="125:48"><expr pos:start="125:33" pos:end="125:48"><name pos:start="125:33" pos:end="125:48">PIX_FMT_YUVA420P</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:17"><expr pos:start="127:9" pos:end="127:16"><name pos:start="127:9" pos:end="127:11">res</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <operator pos:start="127:15" pos:end="127:15">-</operator><literal type="number" pos:start="127:16" pos:end="127:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="131:9" pos:end="131:17">goto <name pos:start="131:14" pos:end="131:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="135:1" pos:end="135:82">//    printf("test %X %X %X -&gt; %X %X %X\n", (int)ref[0], (int)ref[1], (int)ref[2],</comment>

<comment type="line" pos:start="137:1" pos:end="137:49">//        (int)src[0], (int)src[1], (int)src[2]);</comment>



    <expr_stmt pos:start="141:5" pos:end="141:67"><expr pos:start="141:5" pos:end="141:66"><call pos:start="141:5" pos:end="141:66"><name pos:start="141:5" pos:end="141:13">sws_scale</name><argument_list pos:start="141:14" pos:end="141:66">(<argument pos:start="141:15" pos:end="141:24"><expr pos:start="141:15" pos:end="141:24"><name pos:start="141:15" pos:end="141:24">srcContext</name></expr></argument>, <argument pos:start="141:27" pos:end="141:29"><expr pos:start="141:27" pos:end="141:29"><name pos:start="141:27" pos:end="141:29">ref</name></expr></argument>, <argument pos:start="141:32" pos:end="141:40"><expr pos:start="141:32" pos:end="141:40"><name pos:start="141:32" pos:end="141:40">refStride</name></expr></argument>, <argument pos:start="141:43" pos:end="141:43"><expr pos:start="141:43" pos:end="141:43"><literal type="number" pos:start="141:43" pos:end="141:43">0</literal></expr></argument>, <argument pos:start="141:46" pos:end="141:46"><expr pos:start="141:46" pos:end="141:46"><name pos:start="141:46" pos:end="141:46">h</name></expr></argument>   , <argument pos:start="141:52" pos:end="141:54"><expr pos:start="141:52" pos:end="141:54"><name pos:start="141:52" pos:end="141:54">src</name></expr></argument>, <argument pos:start="141:57" pos:end="141:65"><expr pos:start="141:57" pos:end="141:65"><name pos:start="141:57" pos:end="141:65">srcStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:67"><expr pos:start="143:5" pos:end="143:66"><call pos:start="143:5" pos:end="143:66"><name pos:start="143:5" pos:end="143:13">sws_scale</name><argument_list pos:start="143:14" pos:end="143:66">(<argument pos:start="143:15" pos:end="143:24"><expr pos:start="143:15" pos:end="143:24"><name pos:start="143:15" pos:end="143:24">dstContext</name></expr></argument>, <argument pos:start="143:27" pos:end="143:29"><expr pos:start="143:27" pos:end="143:29"><name pos:start="143:27" pos:end="143:29">src</name></expr></argument>, <argument pos:start="143:32" pos:end="143:40"><expr pos:start="143:32" pos:end="143:40"><name pos:start="143:32" pos:end="143:40">srcStride</name></expr></argument>, <argument pos:start="143:43" pos:end="143:43"><expr pos:start="143:43" pos:end="143:43"><literal type="number" pos:start="143:43" pos:end="143:43">0</literal></expr></argument>, <argument pos:start="143:46" pos:end="143:49"><expr pos:start="143:46" pos:end="143:49"><name pos:start="143:46" pos:end="143:49">srcH</name></expr></argument>, <argument pos:start="143:52" pos:end="143:54"><expr pos:start="143:52" pos:end="143:54"><name pos:start="143:52" pos:end="143:54">dst</name></expr></argument>, <argument pos:start="143:57" pos:end="143:65"><expr pos:start="143:57" pos:end="143:65"><name pos:start="143:57" pos:end="143:65">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:67"><expr pos:start="145:5" pos:end="145:66"><call pos:start="145:5" pos:end="145:66"><name pos:start="145:5" pos:end="145:13">sws_scale</name><argument_list pos:start="145:14" pos:end="145:66">(<argument pos:start="145:15" pos:end="145:24"><expr pos:start="145:15" pos:end="145:24"><name pos:start="145:15" pos:end="145:24">outContext</name></expr></argument>, <argument pos:start="145:27" pos:end="145:29"><expr pos:start="145:27" pos:end="145:29"><name pos:start="145:27" pos:end="145:29">dst</name></expr></argument>, <argument pos:start="145:32" pos:end="145:40"><expr pos:start="145:32" pos:end="145:40"><name pos:start="145:32" pos:end="145:40">dstStride</name></expr></argument>, <argument pos:start="145:43" pos:end="145:43"><expr pos:start="145:43" pos:end="145:43"><literal type="number" pos:start="145:43" pos:end="145:43">0</literal></expr></argument>, <argument pos:start="145:46" pos:end="145:49"><expr pos:start="145:46" pos:end="145:49"><name pos:start="145:46" pos:end="145:49">dstH</name></expr></argument>, <argument pos:start="145:52" pos:end="145:54"><expr pos:start="145:52" pos:end="145:54"><name pos:start="145:52" pos:end="145:54">out</name></expr></argument>, <argument pos:start="145:57" pos:end="145:65"><expr pos:start="145:57" pos:end="145:65"><name pos:start="145:57" pos:end="145:65">refStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:67"><expr pos:start="149:5" pos:end="149:66"><name pos:start="149:5" pos:end="149:8">ssdY</name><operator pos:start="149:9" pos:end="149:9">=</operator> <call pos:start="149:11" pos:end="149:66"><name pos:start="149:11" pos:end="149:16">getSSD</name><argument_list pos:start="149:17" pos:end="149:66">(<argument pos:start="149:18" pos:end="149:23"><expr pos:start="149:18" pos:end="149:23"><name pos:start="149:18" pos:end="149:23"><name pos:start="149:18" pos:end="149:20">ref</name><index pos:start="149:21" pos:end="149:23">[<expr pos:start="149:22" pos:end="149:22"><literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:26" pos:end="149:31"><expr pos:start="149:26" pos:end="149:31"><name pos:start="149:26" pos:end="149:31"><name pos:start="149:26" pos:end="149:28">out</name><index pos:start="149:29" pos:end="149:31">[<expr pos:start="149:30" pos:end="149:30"><literal type="number" pos:start="149:30" pos:end="149:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:34" pos:end="149:45"><expr pos:start="149:34" pos:end="149:45"><name pos:start="149:34" pos:end="149:45"><name pos:start="149:34" pos:end="149:42">refStride</name><index pos:start="149:43" pos:end="149:45">[<expr pos:start="149:44" pos:end="149:44"><literal type="number" pos:start="149:44" pos:end="149:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:48" pos:end="149:59"><expr pos:start="149:48" pos:end="149:59"><name pos:start="149:48" pos:end="149:59"><name pos:start="149:48" pos:end="149:56">refStride</name><index pos:start="149:57" pos:end="149:59">[<expr pos:start="149:58" pos:end="149:58"><literal type="number" pos:start="149:58" pos:end="149:58">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:62" pos:end="149:62"><expr pos:start="149:62" pos:end="149:62"><name pos:start="149:62" pos:end="149:62">w</name></expr></argument>, <argument pos:start="149:65" pos:end="149:65"><expr pos:start="149:65" pos:end="149:65"><name pos:start="149:65" pos:end="149:65">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:81"><expr pos:start="151:5" pos:end="151:80"><name pos:start="151:5" pos:end="151:8">ssdU</name><operator pos:start="151:9" pos:end="151:9">=</operator> <call pos:start="151:11" pos:end="151:80"><name pos:start="151:11" pos:end="151:16">getSSD</name><argument_list pos:start="151:17" pos:end="151:80">(<argument pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:23"><name pos:start="151:18" pos:end="151:23"><name pos:start="151:18" pos:end="151:20">ref</name><index pos:start="151:21" pos:end="151:23">[<expr pos:start="151:22" pos:end="151:22"><literal type="number" pos:start="151:22" pos:end="151:22">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:26" pos:end="151:31"><expr pos:start="151:26" pos:end="151:31"><name pos:start="151:26" pos:end="151:31"><name pos:start="151:26" pos:end="151:28">out</name><index pos:start="151:29" pos:end="151:31">[<expr pos:start="151:30" pos:end="151:30"><literal type="number" pos:start="151:30" pos:end="151:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:34" pos:end="151:45"><expr pos:start="151:34" pos:end="151:45"><name pos:start="151:34" pos:end="151:45"><name pos:start="151:34" pos:end="151:42">refStride</name><index pos:start="151:43" pos:end="151:45">[<expr pos:start="151:44" pos:end="151:44"><literal type="number" pos:start="151:44" pos:end="151:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:48" pos:end="151:59"><expr pos:start="151:48" pos:end="151:59"><name pos:start="151:48" pos:end="151:59"><name pos:start="151:48" pos:end="151:56">refStride</name><index pos:start="151:57" pos:end="151:59">[<expr pos:start="151:58" pos:end="151:58"><literal type="number" pos:start="151:58" pos:end="151:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:62" pos:end="151:69"><expr pos:start="151:62" pos:end="151:69"><operator pos:start="151:62" pos:end="151:62">(</operator><name pos:start="151:63" pos:end="151:63">w</name><operator pos:start="151:64" pos:end="151:64">+</operator><literal type="number" pos:start="151:65" pos:end="151:65">1</literal><operator pos:start="151:66" pos:end="151:66">)</operator><operator pos:start="151:67" pos:end="151:68">&gt;&gt;</operator><literal type="number" pos:start="151:69" pos:end="151:69">1</literal></expr></argument>, <argument pos:start="151:72" pos:end="151:79"><expr pos:start="151:72" pos:end="151:79"><operator pos:start="151:72" pos:end="151:72">(</operator><name pos:start="151:73" pos:end="151:73">h</name><operator pos:start="151:74" pos:end="151:74">+</operator><literal type="number" pos:start="151:75" pos:end="151:75">1</literal><operator pos:start="151:76" pos:end="151:76">)</operator><operator pos:start="151:77" pos:end="151:78">&gt;&gt;</operator><literal type="number" pos:start="151:79" pos:end="151:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:81"><expr pos:start="153:5" pos:end="153:80"><name pos:start="153:5" pos:end="153:8">ssdV</name><operator pos:start="153:9" pos:end="153:9">=</operator> <call pos:start="153:11" pos:end="153:80"><name pos:start="153:11" pos:end="153:16">getSSD</name><argument_list pos:start="153:17" pos:end="153:80">(<argument pos:start="153:18" pos:end="153:23"><expr pos:start="153:18" pos:end="153:23"><name pos:start="153:18" pos:end="153:23"><name pos:start="153:18" pos:end="153:20">ref</name><index pos:start="153:21" pos:end="153:23">[<expr pos:start="153:22" pos:end="153:22"><literal type="number" pos:start="153:22" pos:end="153:22">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:26" pos:end="153:31"><expr pos:start="153:26" pos:end="153:31"><name pos:start="153:26" pos:end="153:31"><name pos:start="153:26" pos:end="153:28">out</name><index pos:start="153:29" pos:end="153:31">[<expr pos:start="153:30" pos:end="153:30"><literal type="number" pos:start="153:30" pos:end="153:30">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:34" pos:end="153:45"><expr pos:start="153:34" pos:end="153:45"><name pos:start="153:34" pos:end="153:45"><name pos:start="153:34" pos:end="153:42">refStride</name><index pos:start="153:43" pos:end="153:45">[<expr pos:start="153:44" pos:end="153:44"><literal type="number" pos:start="153:44" pos:end="153:44">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:48" pos:end="153:59"><expr pos:start="153:48" pos:end="153:59"><name pos:start="153:48" pos:end="153:59"><name pos:start="153:48" pos:end="153:56">refStride</name><index pos:start="153:57" pos:end="153:59">[<expr pos:start="153:58" pos:end="153:58"><literal type="number" pos:start="153:58" pos:end="153:58">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:62" pos:end="153:69"><expr pos:start="153:62" pos:end="153:69"><operator pos:start="153:62" pos:end="153:62">(</operator><name pos:start="153:63" pos:end="153:63">w</name><operator pos:start="153:64" pos:end="153:64">+</operator><literal type="number" pos:start="153:65" pos:end="153:65">1</literal><operator pos:start="153:66" pos:end="153:66">)</operator><operator pos:start="153:67" pos:end="153:68">&gt;&gt;</operator><literal type="number" pos:start="153:69" pos:end="153:69">1</literal></expr></argument>, <argument pos:start="153:72" pos:end="153:79"><expr pos:start="153:72" pos:end="153:79"><operator pos:start="153:72" pos:end="153:72">(</operator><name pos:start="153:73" pos:end="153:73">h</name><operator pos:start="153:74" pos:end="153:74">+</operator><literal type="number" pos:start="153:75" pos:end="153:75">1</literal><operator pos:start="153:76" pos:end="153:76">)</operator><operator pos:start="153:77" pos:end="153:78">&gt;&gt;</operator><literal type="number" pos:start="153:79" pos:end="153:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="157:71"><if pos:start="155:5" pos:end="157:71">if <condition pos:start="155:8" pos:end="155:49">(<expr pos:start="155:9" pos:end="155:48"><call pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:15">isALPHA</name><argument_list pos:start="155:16" pos:end="155:26">(<argument pos:start="155:17" pos:end="155:25"><expr pos:start="155:17" pos:end="155:25"><name pos:start="155:17" pos:end="155:25">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="155:28" pos:end="155:29">&amp;&amp;</operator> <call pos:start="155:31" pos:end="155:48"><name pos:start="155:31" pos:end="155:37">isALPHA</name><argument_list pos:start="155:38" pos:end="155:48">(<argument pos:start="155:39" pos:end="155:47"><expr pos:start="155:39" pos:end="155:47"><name pos:start="155:39" pos:end="155:47">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:71"><block_content pos:start="157:9" pos:end="157:71">

        <expr_stmt pos:start="157:9" pos:end="157:71"><expr pos:start="157:9" pos:end="157:70"><name pos:start="157:9" pos:end="157:12">ssdA</name><operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:70"><name pos:start="157:15" pos:end="157:20">getSSD</name><argument_list pos:start="157:21" pos:end="157:70">(<argument pos:start="157:22" pos:end="157:27"><expr pos:start="157:22" pos:end="157:27"><name pos:start="157:22" pos:end="157:27"><name pos:start="157:22" pos:end="157:24">ref</name><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><literal type="number" pos:start="157:26" pos:end="157:26">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:30" pos:end="157:35"><expr pos:start="157:30" pos:end="157:35"><name pos:start="157:30" pos:end="157:35"><name pos:start="157:30" pos:end="157:32">out</name><index pos:start="157:33" pos:end="157:35">[<expr pos:start="157:34" pos:end="157:34"><literal type="number" pos:start="157:34" pos:end="157:34">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:38" pos:end="157:49"><expr pos:start="157:38" pos:end="157:49"><name pos:start="157:38" pos:end="157:49"><name pos:start="157:38" pos:end="157:46">refStride</name><index pos:start="157:47" pos:end="157:49">[<expr pos:start="157:48" pos:end="157:48"><literal type="number" pos:start="157:48" pos:end="157:48">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:52" pos:end="157:63"><expr pos:start="157:52" pos:end="157:63"><name pos:start="157:52" pos:end="157:63"><name pos:start="157:52" pos:end="157:60">refStride</name><index pos:start="157:61" pos:end="157:63">[<expr pos:start="157:62" pos:end="157:62"><literal type="number" pos:start="157:62" pos:end="157:62">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:66" pos:end="157:66"><expr pos:start="157:66" pos:end="157:66"><name pos:start="157:66" pos:end="157:66">w</name></expr></argument>, <argument pos:start="157:69" pos:end="157:69"><expr pos:start="157:69" pos:end="157:69"><name pos:start="157:69" pos:end="157:69">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="161:76"><if pos:start="161:5" pos:end="161:76">if <condition pos:start="161:8" pos:end="161:63">(<expr pos:start="161:9" pos:end="161:62"><name pos:start="161:9" pos:end="161:17">srcFormat</name> <operator pos:start="161:19" pos:end="161:20">==</operator> <name pos:start="161:22" pos:end="161:34">PIX_FMT_GRAY8</name> <operator pos:start="161:36" pos:end="161:37">||</operator> <name pos:start="161:39" pos:end="161:47">dstFormat</name><operator pos:start="161:48" pos:end="161:49">==</operator><name pos:start="161:50" pos:end="161:62">PIX_FMT_GRAY8</name></expr>)</condition><block type="pseudo" pos:start="161:65" pos:end="161:76"><block_content pos:start="161:65" pos:end="161:76"> <expr_stmt pos:start="161:65" pos:end="161:76"><expr pos:start="161:65" pos:end="161:75"><name pos:start="161:65" pos:end="161:68">ssdU</name><operator pos:start="161:69" pos:end="161:69">=</operator><name pos:start="161:70" pos:end="161:73">ssdV</name><operator pos:start="161:74" pos:end="161:74">=</operator><literal type="number" pos:start="161:75" pos:end="161:75">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="161:78" pos:end="161:117">//FIXME check that output is really gray</comment>



    <expr_stmt pos:start="165:5" pos:end="165:15"><expr pos:start="165:5" pos:end="165:14"><name pos:start="165:5" pos:end="165:8">ssdY</name><operator pos:start="165:9" pos:end="165:10">/=</operator> <name pos:start="165:12" pos:end="165:12">w</name><operator pos:start="165:13" pos:end="165:13">*</operator><name pos:start="165:14" pos:end="165:14">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:17"><expr pos:start="167:5" pos:end="167:16"><name pos:start="167:5" pos:end="167:8">ssdU</name><operator pos:start="167:9" pos:end="167:10">/=</operator> <name pos:start="167:12" pos:end="167:12">w</name><operator pos:start="167:13" pos:end="167:13">*</operator><name pos:start="167:14" pos:end="167:14">h</name><operator pos:start="167:15" pos:end="167:15">/</operator><literal type="number" pos:start="167:16" pos:end="167:16">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:17"><expr pos:start="169:5" pos:end="169:16"><name pos:start="169:5" pos:end="169:8">ssdV</name><operator pos:start="169:9" pos:end="169:10">/=</operator> <name pos:start="169:12" pos:end="169:12">w</name><operator pos:start="169:13" pos:end="169:13">*</operator><name pos:start="169:14" pos:end="169:14">h</name><operator pos:start="169:15" pos:end="169:15">/</operator><literal type="number" pos:start="169:16" pos:end="169:16">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:15"><expr pos:start="171:5" pos:end="171:14"><name pos:start="171:5" pos:end="171:8">ssdA</name><operator pos:start="171:9" pos:end="171:10">/=</operator> <name pos:start="171:12" pos:end="171:12">w</name><operator pos:start="171:13" pos:end="171:13">*</operator><name pos:start="171:14" pos:end="171:14">h</name></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="181:42"><expr pos:start="175:5" pos:end="181:41"><call pos:start="175:5" pos:end="181:41"><name pos:start="175:5" pos:end="175:10">printf</name><argument_list pos:start="175:11" pos:end="181:41">(<argument pos:start="175:12" pos:end="175:96"><expr pos:start="175:12" pos:end="175:96"><literal type="string" pos:start="175:12" pos:end="175:53">" %s %dx%d -&gt; %s %4dx%4d flags=%2d SSD=%5"</literal><name pos:start="175:54" pos:end="175:59">PRId64</name><literal type="string" pos:start="175:60" pos:end="175:64">",%5"</literal><name pos:start="175:65" pos:end="175:70">PRId64</name><literal type="string" pos:start="175:71" pos:end="175:75">",%5"</literal><name pos:start="175:76" pos:end="175:81">PRId64</name><literal type="string" pos:start="175:82" pos:end="175:86">",%5"</literal><name pos:start="175:87" pos:end="175:92">PRId64</name><literal type="string" pos:start="175:93" pos:end="175:96">"\n"</literal></expr></argument>,

           <argument pos:start="177:12" pos:end="177:37"><expr pos:start="177:12" pos:end="177:37"><call pos:start="177:12" pos:end="177:37"><name pos:start="177:12" pos:end="177:26">sws_format_name</name><argument_list pos:start="177:27" pos:end="177:37">(<argument pos:start="177:28" pos:end="177:36"><expr pos:start="177:28" pos:end="177:36"><name pos:start="177:28" pos:end="177:36">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:40" pos:end="177:43"><expr pos:start="177:40" pos:end="177:43"><name pos:start="177:40" pos:end="177:43">srcW</name></expr></argument>, <argument pos:start="177:46" pos:end="177:49"><expr pos:start="177:46" pos:end="177:49"><name pos:start="177:46" pos:end="177:49">srcH</name></expr></argument>,

           <argument pos:start="179:12" pos:end="179:37"><expr pos:start="179:12" pos:end="179:37"><call pos:start="179:12" pos:end="179:37"><name pos:start="179:12" pos:end="179:26">sws_format_name</name><argument_list pos:start="179:27" pos:end="179:37">(<argument pos:start="179:28" pos:end="179:36"><expr pos:start="179:28" pos:end="179:36"><name pos:start="179:28" pos:end="179:36">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:40" pos:end="179:43"><expr pos:start="179:40" pos:end="179:43"><name pos:start="179:40" pos:end="179:43">dstW</name></expr></argument>, <argument pos:start="179:46" pos:end="179:49"><expr pos:start="179:46" pos:end="179:49"><name pos:start="179:46" pos:end="179:49">dstH</name></expr></argument>,

           <argument pos:start="181:12" pos:end="181:16"><expr pos:start="181:12" pos:end="181:16"><name pos:start="181:12" pos:end="181:16">flags</name></expr></argument>, <argument pos:start="181:19" pos:end="181:22"><expr pos:start="181:19" pos:end="181:22"><name pos:start="181:19" pos:end="181:22">ssdY</name></expr></argument>, <argument pos:start="181:25" pos:end="181:28"><expr pos:start="181:25" pos:end="181:28"><name pos:start="181:25" pos:end="181:28">ssdU</name></expr></argument>, <argument pos:start="181:31" pos:end="181:34"><expr pos:start="181:31" pos:end="181:34"><name pos:start="181:31" pos:end="181:34">ssdV</name></expr></argument>, <argument pos:start="181:37" pos:end="181:40"><expr pos:start="181:37" pos:end="181:40"><name pos:start="181:37" pos:end="181:40">ssdA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:19"><expr pos:start="183:5" pos:end="183:18"><call pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:10">fflush</name><argument_list pos:start="183:11" pos:end="183:18">(<argument pos:start="183:12" pos:end="183:17"><expr pos:start="183:12" pos:end="183:17"><name pos:start="183:12" pos:end="183:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <label pos:start="187:5" pos:end="187:8"><name pos:start="187:5" pos:end="187:7">end</name>:</label>



    <expr_stmt pos:start="191:5" pos:end="191:32"><expr pos:start="191:5" pos:end="191:31"><call pos:start="191:5" pos:end="191:31"><name pos:start="191:5" pos:end="191:19">sws_freeContext</name><argument_list pos:start="191:20" pos:end="191:31">(<argument pos:start="191:21" pos:end="191:30"><expr pos:start="191:21" pos:end="191:30"><name pos:start="191:21" pos:end="191:30">srcContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:32"><expr pos:start="193:5" pos:end="193:31"><call pos:start="193:5" pos:end="193:31"><name pos:start="193:5" pos:end="193:19">sws_freeContext</name><argument_list pos:start="193:20" pos:end="193:31">(<argument pos:start="193:21" pos:end="193:30"><expr pos:start="193:21" pos:end="193:30"><name pos:start="193:21" pos:end="193:30">dstContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:32"><expr pos:start="195:5" pos:end="195:31"><call pos:start="195:5" pos:end="195:31"><name pos:start="195:5" pos:end="195:19">sws_freeContext</name><argument_list pos:start="195:20" pos:end="195:31">(<argument pos:start="195:21" pos:end="195:30"><expr pos:start="195:21" pos:end="195:30"><name pos:start="195:21" pos:end="195:30">outContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="199:5" pos:end="207:5">for <control pos:start="199:9" pos:end="199:23">(<init pos:start="199:10" pos:end="199:13"><expr pos:start="199:10" pos:end="199:12"><name pos:start="199:10" pos:end="199:10">i</name><operator pos:start="199:11" pos:end="199:11">=</operator><literal type="number" pos:start="199:12" pos:end="199:12">0</literal></expr>;</init> <condition pos:start="199:15" pos:end="199:18"><expr pos:start="199:15" pos:end="199:17"><name pos:start="199:15" pos:end="199:15">i</name><operator pos:start="199:16" pos:end="199:16">&lt;</operator><literal type="number" pos:start="199:17" pos:end="199:17">4</literal></expr>;</condition> <incr pos:start="199:20" pos:end="199:22"><expr pos:start="199:20" pos:end="199:22"><name pos:start="199:20" pos:end="199:20">i</name><operator pos:start="199:21" pos:end="199:22">++</operator></expr></incr>)</control><block pos:start="199:24" pos:end="207:5">{<block_content pos:start="201:9" pos:end="205:21">

        <expr_stmt pos:start="201:9" pos:end="201:21"><expr pos:start="201:9" pos:end="201:20"><call pos:start="201:9" pos:end="201:20"><name pos:start="201:9" pos:end="201:12">free</name><argument_list pos:start="201:13" pos:end="201:20">(<argument pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:19"><name pos:start="201:14" pos:end="201:19"><name pos:start="201:14" pos:end="201:16">src</name><index pos:start="201:17" pos:end="201:19">[<expr pos:start="201:18" pos:end="201:18"><name pos:start="201:18" pos:end="201:18">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:21"><expr pos:start="203:9" pos:end="203:20"><call pos:start="203:9" pos:end="203:20"><name pos:start="203:9" pos:end="203:12">free</name><argument_list pos:start="203:13" pos:end="203:20">(<argument pos:start="203:14" pos:end="203:19"><expr pos:start="203:14" pos:end="203:19"><name pos:start="203:14" pos:end="203:19"><name pos:start="203:14" pos:end="203:16">dst</name><index pos:start="203:17" pos:end="203:19">[<expr pos:start="203:18" pos:end="203:18"><name pos:start="203:18" pos:end="203:18">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:21"><expr pos:start="205:9" pos:end="205:20"><call pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:12">free</name><argument_list pos:start="205:13" pos:end="205:20">(<argument pos:start="205:14" pos:end="205:19"><expr pos:start="205:14" pos:end="205:19"><name pos:start="205:14" pos:end="205:19"><name pos:start="205:14" pos:end="205:16">out</name><index pos:start="205:17" pos:end="205:19">[<expr pos:start="205:18" pos:end="205:18"><name pos:start="205:18" pos:end="205:18">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="211:5" pos:end="211:15">return <expr pos:start="211:12" pos:end="211:14"><name pos:start="211:12" pos:end="211:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
