<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21233.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">unpack_parse_unit</name><parameter_list pos:start="1:29" pos:end="3:40">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:43">DiracParseUnit</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">pu</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:70"><decl pos:start="1:50" pos:end="1:70"><type pos:start="1:50" pos:end="1:70"><name pos:start="1:50" pos:end="1:66">DiracParseContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">pc</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:39">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:13">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">int8_t</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:17">start</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:46">(<expr pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:14">offset</name> <operator pos:start="11:16" pos:end="11:16">&lt;</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal> <operator pos:start="11:20" pos:end="11:21">||</operator> <name pos:start="11:23" pos:end="11:31"><name pos:start="11:23" pos:end="11:24">pc</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:31">index</name></name> <operator pos:start="11:33" pos:end="11:33">-</operator> <literal type="number" pos:start="11:35" pos:end="11:36">13</literal> <operator pos:start="11:38" pos:end="11:38">&lt;</operator> <name pos:start="11:40" pos:end="11:45">offset</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:9">start</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:14">pc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:22">buffer</name></name> <operator pos:start="17:24" pos:end="17:24">+</operator> <name pos:start="17:26" pos:end="17:31">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:6">pu</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:15">pu_type</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:26"><name pos:start="19:19" pos:end="19:23">start</name><index pos:start="19:24" pos:end="19:26">[<expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">4</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:6">pu</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:22">next_pu_offset</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <call pos:start="23:26" pos:end="23:43"><name pos:start="23:26" pos:end="23:32">AV_RB32</name><argument_list pos:start="23:33" pos:end="23:43">(<argument pos:start="23:34" pos:end="23:42"><expr pos:start="23:34" pos:end="23:42"><name pos:start="23:34" pos:end="23:38">start</name> <operator pos:start="23:40" pos:end="23:40">+</operator> <literal type="number" pos:start="23:42" pos:end="23:42">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:6">pu</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:22">prev_pu_offset</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:43"><name pos:start="25:26" pos:end="25:32">AV_RB32</name><argument_list pos:start="25:33" pos:end="25:43">(<argument pos:start="25:34" pos:end="25:42"><expr pos:start="25:34" pos:end="25:42"><name pos:start="25:34" pos:end="25:38">start</name> <operator pos:start="25:40" pos:end="25:40">+</operator> <literal type="number" pos:start="25:42" pos:end="25:42">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:32"><if pos:start="29:5" pos:end="31:32">if <condition pos:start="29:8" pos:end="29:55">(<expr pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:10">pu</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:19">pu_type</name></name> <operator pos:start="29:21" pos:end="29:22">==</operator> <literal type="number" pos:start="29:24" pos:end="29:27">0x10</literal> <operator pos:start="29:29" pos:end="29:30">&amp;&amp;</operator> <name pos:start="29:32" pos:end="29:49"><name pos:start="29:32" pos:end="29:33">pu</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:49">next_pu_offset</name></name> <operator pos:start="29:51" pos:end="29:52">==</operator> <literal type="number" pos:start="29:54" pos:end="29:54">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:32"><block_content pos:start="31:9" pos:end="31:32">

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:10">pu</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:26">next_pu_offset</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <literal type="number" pos:start="31:30" pos:end="31:31">13</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:54">(<expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:10">pu</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:26">next_pu_offset</name></name> <operator pos:start="35:28" pos:end="35:29">&amp;&amp;</operator> <name pos:start="35:31" pos:end="35:48"><name pos:start="35:31" pos:end="35:32">pu</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:48">next_pu_offset</name></name> <operator pos:start="35:50" pos:end="35:50">&lt;</operator> <literal type="number" pos:start="35:52" pos:end="35:53">13</literal></expr>)</condition> <block pos:start="35:56" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:17">

        <expr_stmt pos:start="37:9" pos:end="37:89"><expr pos:start="37:9" pos:end="37:88"><call pos:start="37:9" pos:end="37:88"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:88">(<argument pos:start="37:16" pos:end="37:19"><expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">NULL</name></expr></argument>, <argument pos:start="37:22" pos:end="37:33"><expr pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:36" pos:end="37:67"><expr pos:start="37:36" pos:end="37:67"><literal type="string" pos:start="37:36" pos:end="37:67">"next_pu_offset %d is invalid\n"</literal></expr></argument>, <argument pos:start="37:70" pos:end="37:87"><expr pos:start="37:70" pos:end="37:87"><name pos:start="37:70" pos:end="37:87"><name pos:start="37:70" pos:end="37:71">pu</name><operator pos:start="37:72" pos:end="37:73">-&gt;</operator><name pos:start="37:74" pos:end="37:87">next_pu_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:54">(<expr pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:10">pu</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:26">prev_pu_offset</name></name> <operator pos:start="43:28" pos:end="43:29">&amp;&amp;</operator> <name pos:start="43:31" pos:end="43:48"><name pos:start="43:31" pos:end="43:32">pu</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:48">prev_pu_offset</name></name> <operator pos:start="43:50" pos:end="43:50">&lt;</operator> <literal type="number" pos:start="43:52" pos:end="43:53">13</literal></expr>)</condition> <block pos:start="43:56" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:17">

        <expr_stmt pos:start="45:9" pos:end="45:89"><expr pos:start="45:9" pos:end="45:88"><call pos:start="45:9" pos:end="45:88"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:88">(<argument pos:start="45:16" pos:end="45:19"><expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">NULL</name></expr></argument>, <argument pos:start="45:22" pos:end="45:33"><expr pos:start="45:22" pos:end="45:33"><name pos:start="45:22" pos:end="45:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:36" pos:end="45:67"><expr pos:start="45:36" pos:end="45:67"><literal type="string" pos:start="45:36" pos:end="45:67">"prev_pu_offset %d is invalid\n"</literal></expr></argument>, <argument pos:start="45:70" pos:end="45:87"><expr pos:start="45:70" pos:end="45:87"><name pos:start="45:70" pos:end="45:87"><name pos:start="45:70" pos:end="45:71">pu</name><operator pos:start="45:72" pos:end="45:73">-&gt;</operator><name pos:start="45:74" pos:end="45:87">prev_pu_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
