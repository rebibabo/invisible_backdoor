<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4353.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">j2kenc_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26">Jpeg2000EncoderContext</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:29">s</name> <init pos:start="7:31" pos:end="7:48">= <expr pos:start="7:33" pos:end="7:48"><name pos:start="7:33" pos:end="7:48"><name pos:start="7:33" pos:end="7:37">avctx</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">Jpeg2000CodingStyle</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:31">codsty</name> <init pos:start="9:33" pos:end="9:44">= <expr pos:start="9:35" pos:end="9:44"><operator pos:start="9:35" pos:end="9:35">&amp;</operator><name pos:start="9:36" pos:end="9:44"><name pos:start="9:36" pos:end="9:36">s</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:44">codsty</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:22">Jpeg2000QuantStyle</name>  <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:31">qntsty</name> <init pos:start="11:33" pos:end="11:44">= <expr pos:start="11:35" pos:end="11:44"><operator pos:start="11:35" pos:end="11:35">&amp;</operator><name pos:start="11:36" pos:end="11:44"><name pos:start="11:36" pos:end="11:36">s</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:44">qntsty</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">avctx</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:10">av_log</name><argument_list pos:start="17:11" pos:end="17:44">(<argument pos:start="17:12" pos:end="17:19"><expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:19">avctx</name></name></expr></argument>, <argument pos:start="17:22" pos:end="17:33"><expr pos:start="17:22" pos:end="17:33"><name pos:start="17:22" pos:end="17:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="17:36" pos:end="17:43"><expr pos:start="17:36" pos:end="17:43"><literal type="string" pos:start="17:36" pos:end="17:43">"init\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:16">// defaults:</comment>

    <comment type="line" pos:start="23:5" pos:end="23:57">// TODO: implement setting non-standard precinct size</comment>

    <expr_stmt pos:start="25:5" pos:end="25:77"><expr pos:start="25:5" pos:end="25:76"><call pos:start="25:5" pos:end="25:76"><name pos:start="25:5" pos:end="25:10">memset</name><argument_list pos:start="25:11" pos:end="25:76">(<argument pos:start="25:12" pos:end="25:35"><expr pos:start="25:12" pos:end="25:35"><name pos:start="25:12" pos:end="25:35"><name pos:start="25:12" pos:end="25:17">codsty</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:35">log2_prec_widths</name></name></expr></argument> , <argument pos:start="25:39" pos:end="25:40"><expr pos:start="25:39" pos:end="25:40"><literal type="number" pos:start="25:39" pos:end="25:40">15</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:75"><expr pos:start="25:43" pos:end="25:75"><sizeof pos:start="25:43" pos:end="25:75">sizeof<argument_list pos:start="25:49" pos:end="25:75">(<argument pos:start="25:50" pos:end="25:73"><expr pos:start="25:50" pos:end="25:73"><name pos:start="25:50" pos:end="25:73"><name pos:start="25:50" pos:end="25:55">codsty</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:73">log2_prec_widths</name></name></expr></argument> )</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:77"><expr pos:start="27:5" pos:end="27:76"><call pos:start="27:5" pos:end="27:76"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:76">(<argument pos:start="27:12" pos:end="27:36"><expr pos:start="27:12" pos:end="27:36"><name pos:start="27:12" pos:end="27:36"><name pos:start="27:12" pos:end="27:17">codsty</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:36">log2_prec_heights</name></name></expr></argument>, <argument pos:start="27:39" pos:end="27:40"><expr pos:start="27:39" pos:end="27:40"><literal type="number" pos:start="27:39" pos:end="27:40">15</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:75"><expr pos:start="27:43" pos:end="27:75"><sizeof pos:start="27:43" pos:end="27:75">sizeof<argument_list pos:start="27:49" pos:end="27:75">(<argument pos:start="27:50" pos:end="27:74"><expr pos:start="27:50" pos:end="27:74"><name pos:start="27:50" pos:end="27:74"><name pos:start="27:50" pos:end="27:55">codsty</name><operator pos:start="27:56" pos:end="27:57">-&gt;</operator><name pos:start="27:58" pos:end="27:74">log2_prec_heights</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:33"><expr pos:start="29:5" pos:end="31:32"><name pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:10">codsty</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:29">nreslevels2decode</name></name><operator pos:start="29:30" pos:end="29:30">=</operator>

    <name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:10">codsty</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:22">nreslevels</name></name>       <operator pos:start="31:30" pos:end="31:30">=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:10">codsty</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:27">log2_cblk_width</name></name>  <operator pos:start="33:30" pos:end="33:30">=</operator> <literal type="number" pos:start="33:32" pos:end="33:32">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:10">codsty</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:28">log2_cblk_height</name></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <literal type="number" pos:start="35:32" pos:end="35:32">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:82"><expr pos:start="37:5" pos:end="37:81"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:10">codsty</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:21">transform</name></name>        <operator pos:start="37:30" pos:end="37:30">=</operator> <ternary pos:start="37:32" pos:end="37:81"><condition pos:start="37:32" pos:end="37:57"><expr pos:start="37:32" pos:end="37:55"><name pos:start="37:32" pos:end="37:55"><name pos:start="37:32" pos:end="37:36">avctx</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:55">prediction_method</name></name></expr> ?</condition><then pos:start="37:59" pos:end="37:66"> <expr pos:start="37:59" pos:end="37:66"><name pos:start="37:59" pos:end="37:66">FF_DWT53</name></expr> </then><else pos:start="37:68" pos:end="37:81">: <expr pos:start="37:70" pos:end="37:81"><name pos:start="37:70" pos:end="37:81">FF_DWT97_INT</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:10">qntsty</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:22">nguardbits</name></name>       <operator pos:start="41:30" pos:end="41:30">=</operator> <literal type="number" pos:start="41:32" pos:end="41:32">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:17">tile_width</name></name>            <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:34">256</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:18">tile_height</name></name>           <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:34">256</literal></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="57:44"><if pos:start="51:5" pos:end="53:46">if <condition pos:start="51:8" pos:end="51:38">(<expr pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:14">codsty</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:25">transform</name></name> <operator pos:start="51:27" pos:end="51:28">==</operator> <name pos:start="51:30" pos:end="51:37">FF_DWT53</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:46"><block_content pos:start="53:9" pos:end="53:46">

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:14">qntsty</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:24">quantsty</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:45">JPEG2000_QSTY_NONE</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="57:44">else<block type="pseudo" pos:start="57:9" pos:end="57:44"><block_content pos:start="57:9" pos:end="57:44">

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:14">qntsty</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:24">quantsty</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:43">JPEG2000_QSTY_SE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:28"><expr pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:12"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:12">width</name></name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:27"><name pos:start="61:16" pos:end="61:20">avctx</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:13">height</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:21">avctx</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:29">height</name></name></expr>;</expr_stmt>



    <for pos:start="67:5" pos:end="69:23">for <control pos:start="67:9" pos:end="67:27">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:22"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <literal type="number" pos:start="67:21" pos:end="67:21">3</literal></expr>;</condition> <incr pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:24">i</name><operator pos:start="67:25" pos:end="67:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:9" pos:end="69:23"><block_content pos:start="69:9" pos:end="69:23">

        <expr_stmt pos:start="69:9" pos:end="69:23"><expr pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">cbps</name><index pos:start="69:16" pos:end="69:18">[<expr pos:start="69:17" pos:end="69:17"><name pos:start="69:17" pos:end="69:17">i</name></expr>]</index></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">8</literal></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="73:5" pos:end="91:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:43">(<expr pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:13">avctx</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:22">pix_fmt</name></name> <operator pos:start="73:24" pos:end="73:25">==</operator> <name pos:start="73:27" pos:end="73:42">AV_PIX_FMT_RGB24</name></expr>)</condition><block pos:start="73:44" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:27">

        <expr_stmt pos:start="75:9" pos:end="75:27"><expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:22">ncomponents</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="81:5">else if <condition pos:start="77:15" pos:end="77:50">(<expr pos:start="77:16" pos:end="77:49"><name pos:start="77:16" pos:end="77:29"><name pos:start="77:16" pos:end="77:20">avctx</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:29">pix_fmt</name></name> <operator pos:start="77:31" pos:end="77:32">==</operator> <name pos:start="77:34" pos:end="77:49">AV_PIX_FMT_GRAY8</name></expr>)</condition><block pos:start="77:51" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:27">

        <expr_stmt pos:start="79:9" pos:end="79:27"><expr pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:22">ncomponents</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <literal type="number" pos:start="79:26" pos:end="79:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="91:5">else<block pos:start="81:11" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:54"> <comment type="line" pos:start="81:13" pos:end="81:25">// planar YUV</comment>

        <expr_stmt pos:start="83:9" pos:end="83:22"><expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:17">planar</name></name> <operator pos:start="83:19" pos:end="83:19">=</operator> <literal type="number" pos:start="83:21" pos:end="83:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:22">ncomponents</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="89:54"><expr pos:start="87:9" pos:end="89:53"><call pos:start="87:9" pos:end="89:53"><name pos:start="87:9" pos:end="87:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="87:38" pos:end="89:53">(<argument pos:start="87:39" pos:end="87:52"><expr pos:start="87:39" pos:end="87:52"><name pos:start="87:39" pos:end="87:52"><name pos:start="87:39" pos:end="87:43">avctx</name><operator pos:start="87:44" pos:end="87:45">-&gt;</operator><name pos:start="87:46" pos:end="87:52">pix_fmt</name></name></expr></argument>,

                <argument pos:start="89:17" pos:end="89:31"><expr pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:31">chroma_shift</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:52"><expr pos:start="89:34" pos:end="89:52"><name pos:start="89:34" pos:end="89:48"><name pos:start="89:34" pos:end="89:34">s</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:48">chroma_shift</name></name> <operator pos:start="89:50" pos:end="89:50">+</operator> <literal type="number" pos:start="89:52" pos:end="89:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:34"><expr pos:start="95:5" pos:end="95:33"><call pos:start="95:5" pos:end="95:33"><name pos:start="95:5" pos:end="95:31">ff_jpeg2000_init_tier1_luts</name><argument_list pos:start="95:32" pos:end="95:33">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:16"><expr pos:start="99:5" pos:end="99:15"><call pos:start="99:5" pos:end="99:15"><name pos:start="99:5" pos:end="99:13">init_luts</name><argument_list pos:start="99:14" pos:end="99:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:25"><expr pos:start="103:5" pos:end="103:24"><call pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:21">init_quantization</name><argument_list pos:start="103:22" pos:end="103:24">(<argument pos:start="103:23" pos:end="103:23"><expr pos:start="103:23" pos:end="103:23"><name pos:start="103:23" pos:end="103:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="107:19"><if pos:start="105:5" pos:end="107:19">if <condition pos:start="105:8" pos:end="105:26">(<expr pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:11">ret</name><operator pos:start="105:12" pos:end="105:12">=</operator><call pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:22">init_tiles</name><argument_list pos:start="105:23" pos:end="105:25">(<argument pos:start="105:24" pos:end="105:24"><expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:19"><block_content pos:start="107:9" pos:end="107:19">

        <return pos:start="107:9" pos:end="107:19">return <expr pos:start="107:16" pos:end="107:18"><name pos:start="107:16" pos:end="107:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:51"><expr pos:start="111:5" pos:end="111:50"><call pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:10">av_log</name><argument_list pos:start="111:11" pos:end="111:50">(<argument pos:start="111:12" pos:end="111:19"><expr pos:start="111:12" pos:end="111:19"><name pos:start="111:12" pos:end="111:19"><name pos:start="111:12" pos:end="111:12">s</name><operator pos:start="111:13" pos:end="111:14">-&gt;</operator><name pos:start="111:15" pos:end="111:19">avctx</name></name></expr></argument>, <argument pos:start="111:22" pos:end="111:33"><expr pos:start="111:22" pos:end="111:33"><name pos:start="111:22" pos:end="111:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="111:36" pos:end="111:49"><expr pos:start="111:36" pos:end="111:49"><literal type="string" pos:start="111:36" pos:end="111:49">"after init\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
