<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1974.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">check_update_timer</name><parameter_list pos:start="1:31" pos:end="1:43">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">RTCState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:29">next_update_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">guest_nsec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">next_alarm_sec</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="21:7">/* From the data sheet: "Holding the dividers in reset prevents

     * interrupts from operating, while setting the SET bit allows"

     * them to occur.  However, it will prevent an alarm interrupt

     * from occurring, because the time of day is not updated.

     */</comment>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:49">(<expr pos:start="23:9" pos:end="23:48"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:32"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:21">cmos_data</name><index pos:start="23:22" pos:end="23:32">[<expr pos:start="23:23" pos:end="23:31"><name pos:start="23:23" pos:end="23:31">RTC_REG_A</name></expr>]</index></name> <operator pos:start="23:34" pos:end="23:34">&amp;</operator> <literal type="number" pos:start="23:36" pos:end="23:39">0x60</literal><operator pos:start="23:40" pos:end="23:40">)</operator> <operator pos:start="23:42" pos:end="23:43">==</operator> <literal type="number" pos:start="23:45" pos:end="23:48">0x60</literal></expr>)</condition> <block pos:start="23:51" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:17">timer_del</name><argument_list pos:start="25:18" pos:end="25:34">(<argument pos:start="25:19" pos:end="25:33"><expr pos:start="25:19" pos:end="25:33"><name pos:start="25:19" pos:end="25:33"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:33">update_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="33:46">(<expr pos:start="31:9" pos:end="33:45"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:32"><name pos:start="31:10" pos:end="31:10">s</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:21">cmos_data</name><index pos:start="31:22" pos:end="31:32">[<expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">RTC_REG_C</name></expr>]</index></name> <operator pos:start="31:34" pos:end="31:34">&amp;</operator> <name pos:start="31:36" pos:end="31:43">REG_C_UF</name><operator pos:start="31:44" pos:end="31:44">)</operator> <operator pos:start="31:46" pos:end="31:47">&amp;&amp;</operator>

        <operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:32"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:21">cmos_data</name><index pos:start="33:22" pos:end="33:32">[<expr pos:start="33:23" pos:end="33:31"><name pos:start="33:23" pos:end="33:31">RTC_REG_B</name></expr>]</index></name> <operator pos:start="33:34" pos:end="33:34">&amp;</operator> <name pos:start="33:36" pos:end="33:44">REG_B_SET</name><operator pos:start="33:45" pos:end="33:45">)</operator></expr>)</condition> <block pos:start="33:48" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:17">timer_del</name><argument_list pos:start="35:18" pos:end="35:34">(<argument pos:start="35:19" pos:end="35:33"><expr pos:start="35:19" pos:end="35:33"><name pos:start="35:19" pos:end="35:33"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:33">update_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="43:45">(<expr pos:start="41:9" pos:end="43:44"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:32"><name pos:start="41:10" pos:end="41:10">s</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:21">cmos_data</name><index pos:start="41:22" pos:end="41:32">[<expr pos:start="41:23" pos:end="41:31"><name pos:start="41:23" pos:end="41:31">RTC_REG_C</name></expr>]</index></name> <operator pos:start="41:34" pos:end="41:34">&amp;</operator> <name pos:start="41:36" pos:end="41:43">REG_C_UF</name><operator pos:start="41:44" pos:end="41:44">)</operator> <operator pos:start="41:46" pos:end="41:47">&amp;&amp;</operator>

        <operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:32"><name pos:start="43:10" pos:end="43:10">s</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:21">cmos_data</name><index pos:start="43:22" pos:end="43:32">[<expr pos:start="43:23" pos:end="43:31"><name pos:start="43:23" pos:end="43:31">RTC_REG_C</name></expr>]</index></name> <operator pos:start="43:34" pos:end="43:34">&amp;</operator> <name pos:start="43:36" pos:end="43:43">REG_C_AF</name><operator pos:start="43:44" pos:end="43:44">)</operator></expr>)</condition> <block pos:start="43:47" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:15">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><call pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:17">timer_del</name><argument_list pos:start="45:18" pos:end="45:34">(<argument pos:start="45:19" pos:end="45:33"><expr pos:start="45:19" pos:end="45:33"><name pos:start="45:19" pos:end="45:33"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:33">update_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:62"><expr pos:start="53:5" pos:end="53:61"><name pos:start="53:5" pos:end="53:14">guest_nsec</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:36"><name pos:start="53:18" pos:end="53:33">get_guest_rtc_ns</name><argument_list pos:start="53:34" pos:end="53:36">(<argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">s</name></expr></argument>)</argument_list></call> <operator pos:start="53:38" pos:end="53:38">%</operator> <name pos:start="53:40" pos:end="53:61">NANOSECONDS_PER_SECOND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:50">/* if UF is clear, reprogram to next second */</comment>

    <expr_stmt pos:start="57:5" pos:end="59:46"><expr pos:start="57:5" pos:end="59:45"><name pos:start="57:5" pos:end="57:20">next_update_time</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:51"><name pos:start="57:24" pos:end="57:40">qemu_clock_get_ns</name><argument_list pos:start="57:41" pos:end="57:51">(<argument pos:start="57:42" pos:end="57:50"><expr pos:start="57:42" pos:end="57:50"><name pos:start="57:42" pos:end="57:50">rtc_clock</name></expr></argument>)</argument_list></call>

        <operator pos:start="59:9" pos:end="59:9">+</operator> <name pos:start="59:11" pos:end="59:32">NANOSECONDS_PER_SECOND</name> <operator pos:start="59:34" pos:end="59:34">-</operator> <name pos:start="59:36" pos:end="59:45">guest_nsec</name></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="67:7">/* Compute time of next alarm.  One second is already accounted

     * for in next_update_time.

     */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:18">next_alarm_sec</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:38"><name pos:start="69:22" pos:end="69:35">get_next_alarm</name><argument_list pos:start="69:36" pos:end="69:38">(<argument pos:start="69:37" pos:end="69:37"><expr pos:start="69:37" pos:end="69:37"><name pos:start="69:37" pos:end="69:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:71"><expr pos:start="71:5" pos:end="73:70"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:22">next_alarm_time</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:41">next_update_time</name> <operator pos:start="71:43" pos:end="71:43">+</operator>

                         <operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:40">next_alarm_sec</name> <operator pos:start="73:42" pos:end="73:42">-</operator> <literal type="number" pos:start="73:44" pos:end="73:44">1</literal><operator pos:start="73:45" pos:end="73:45">)</operator> <operator pos:start="73:47" pos:end="73:47">*</operator> <name pos:start="73:49" pos:end="73:70">NANOSECONDS_PER_SECOND</name></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:43">(<expr pos:start="77:9" pos:end="77:42"><name pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">cmos_data</name><index pos:start="77:21" pos:end="77:31">[<expr pos:start="77:22" pos:end="77:30"><name pos:start="77:22" pos:end="77:30">RTC_REG_C</name></expr>]</index></name> <operator pos:start="77:33" pos:end="77:33">&amp;</operator> <name pos:start="77:35" pos:end="77:42">REG_C_UF</name></expr>)</condition> <block pos:start="77:45" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:46">

        <comment type="block" pos:start="79:9" pos:end="81:30">/* UF is set, but AF is clear.  Program the timer to target

         * the alarm time.  */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:24">next_update_time</name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:45"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:45">next_alarm_time</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:66">(<expr pos:start="87:9" pos:end="87:65"><name pos:start="87:9" pos:end="87:24">next_update_time</name> <operator pos:start="87:26" pos:end="87:27">!=</operator> <call pos:start="87:29" pos:end="87:65"><name pos:start="87:29" pos:end="87:48">timer_expire_time_ns</name><argument_list pos:start="87:49" pos:end="87:65">(<argument pos:start="87:50" pos:end="87:64"><expr pos:start="87:50" pos:end="87:64"><name pos:start="87:50" pos:end="87:64"><name pos:start="87:50" pos:end="87:50">s</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:64">update_timer</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:68" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:53">

        <expr_stmt pos:start="89:9" pos:end="89:53"><expr pos:start="89:9" pos:end="89:52"><call pos:start="89:9" pos:end="89:52"><name pos:start="89:9" pos:end="89:17">timer_mod</name><argument_list pos:start="89:18" pos:end="89:52">(<argument pos:start="89:19" pos:end="89:33"><expr pos:start="89:19" pos:end="89:33"><name pos:start="89:19" pos:end="89:33"><name pos:start="89:19" pos:end="89:19">s</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:33">update_timer</name></name></expr></argument>, <argument pos:start="89:36" pos:end="89:51"><expr pos:start="89:36" pos:end="89:51"><name pos:start="89:36" pos:end="89:51">next_update_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
