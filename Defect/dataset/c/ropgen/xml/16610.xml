<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16610.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">test_validate_fail_list</name><parameter_list pos:start="1:36" pos:end="3:56">(<parameter pos:start="1:37" pos:end="1:62"><decl pos:start="1:37" pos:end="1:62"><type pos:start="1:37" pos:end="1:62"><name pos:start="1:37" pos:end="1:56">TestInputVisitorData</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:55"><decl pos:start="3:38" pos:end="3:55"><type pos:start="3:38" pos:end="3:55"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:47">void</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:55">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:20">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">UserDefOneList</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">head</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:175"><expr pos:start="15:5" pos:end="15:174"><name pos:start="15:5" pos:end="15:5">v</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:174"><name pos:start="15:9" pos:end="15:26">validate_test_init</name><argument_list pos:start="15:27" pos:end="15:174">(<argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">data</name></expr></argument>, <argument pos:start="15:34" pos:end="15:173"><expr pos:start="15:34" pos:end="15:173"><literal type="string" pos:start="15:34" pos:end="15:173">"[ { 'string': 'string0', 'integer': 42 }, { 'string': 'string1', 'integer': 43 }, { 'string': 'string2', 'integer': 44, 'extra': 'ggg' } ]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><call pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:29">visit_type_UserDefOneList</name><argument_list pos:start="19:30" pos:end="19:51">(<argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">v</name></expr></argument>, <argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">NULL</name></expr></argument>, <argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><operator pos:start="19:40" pos:end="19:40">&amp;</operator><name pos:start="19:41" pos:end="19:44">head</name></expr></argument>, <argument pos:start="19:47" pos:end="19:50"><expr pos:start="19:47" pos:end="19:50"><operator pos:start="19:47" pos:end="19:47">&amp;</operator><name pos:start="19:48" pos:end="19:50">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><call pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:23">error_free_or_abort</name><argument_list pos:start="21:24" pos:end="21:29">(<argument pos:start="21:25" pos:end="21:28"><expr pos:start="21:25" pos:end="21:28"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><call pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:12">g_assert</name><argument_list pos:start="23:13" pos:end="23:19">(<argument pos:start="23:14" pos:end="23:18"><expr pos:start="23:14" pos:end="23:18"><operator pos:start="23:14" pos:end="23:14">!</operator><name pos:start="23:15" pos:end="23:18">head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
