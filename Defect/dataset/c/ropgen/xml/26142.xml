<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26142.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:54">hl_decode_mb_predict_luma</name><parameter_list pos:start="1:55" pos:end="3:128">(<parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:66">H264Context</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:69">h</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:82"><decl pos:start="1:72" pos:end="1:82"><type pos:start="1:72" pos:end="1:82"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:82">mb_type</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:95"><decl pos:start="1:85" pos:end="1:95"><type pos:start="1:85" pos:end="1:95"><name pos:start="1:85" pos:end="1:87">int</name></type> <name pos:start="1:89" pos:end="1:95">is_h264</name></decl></parameter>, <parameter pos:start="1:98" pos:end="1:107"><decl pos:start="1:98" pos:end="1:107"><type pos:start="1:98" pos:end="1:107"><name pos:start="1:98" pos:end="1:100">int</name></type> <name pos:start="1:102" pos:end="1:107">simple</name></decl></parameter>, <parameter pos:start="1:110" pos:end="1:129"><decl pos:start="1:110" pos:end="1:129"><type pos:start="1:110" pos:end="1:129"><name pos:start="1:110" pos:end="1:112">int</name></type> <name pos:start="1:114" pos:end="1:129">transform_bypass</name></decl></parameter>,

                                                       <parameter pos:start="3:56" pos:end="3:70"><decl pos:start="3:56" pos:end="3:70"><type pos:start="3:56" pos:end="3:70"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:70">pixel_shift</name></decl></parameter>, <parameter pos:start="3:73" pos:end="3:89"><decl pos:start="3:73" pos:end="3:89"><type pos:start="3:73" pos:end="3:89"><name pos:start="3:73" pos:end="3:75">int</name> <modifier pos:start="3:77" pos:end="3:77">*</modifier></type><name pos:start="3:78" pos:end="3:89">block_offset</name></decl></parameter>, <parameter pos:start="3:92" pos:end="3:103"><decl pos:start="3:92" pos:end="3:103"><type pos:start="3:92" pos:end="3:103"><name pos:start="3:92" pos:end="3:94">int</name></type> <name pos:start="3:96" pos:end="3:103">linesize</name></decl></parameter>, <parameter pos:start="3:106" pos:end="3:120"><decl pos:start="3:106" pos:end="3:120"><type pos:start="3:106" pos:end="3:120"><name pos:start="3:106" pos:end="3:112">uint8_t</name> <modifier pos:start="3:114" pos:end="3:114">*</modifier></type><name pos:start="3:115" pos:end="3:120">dest_y</name></decl></parameter>, <parameter pos:start="3:123" pos:end="3:127"><decl pos:start="3:123" pos:end="3:127"><type pos:start="3:123" pos:end="3:127"><name pos:start="3:123" pos:end="3:125">int</name></type> <name pos:start="3:127" pos:end="3:127">p</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="203:1">{<block_content pos:start="7:5" pos:end="201:5">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier> <specifier pos:start="7:22" pos:end="7:26">const</specifier></type> <name pos:start="7:28" pos:end="7:28">s</name> <init pos:start="7:30" pos:end="7:36">= <expr pos:start="7:32" pos:end="7:36"><operator pos:start="7:32" pos:end="7:32">&amp;</operator><name pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:33">h</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:36">s</name></name></expr></init></decl>;</decl_stmt>

    <function_decl pos:start="9:5" pos:end="9:63"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">void</name></type> (<modifier pos:start="9:11" pos:end="9:11">*</modifier><name pos:start="9:12" pos:end="9:19">idct_add</name>)<parameter_list pos:start="9:21" pos:end="9:62">(<parameter pos:start="9:22" pos:end="9:33"><decl pos:start="9:22" pos:end="9:33"><type pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:28">uint8_t</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:33">dst</name></decl></parameter>, <parameter pos:start="9:36" pos:end="9:49"><decl pos:start="9:36" pos:end="9:49"><type pos:start="9:36" pos:end="9:49"><name pos:start="9:36" pos:end="9:42">DCTELEM</name> <modifier pos:start="9:44" pos:end="9:44">*</modifier></type><name pos:start="9:45" pos:end="9:49">block</name></decl></parameter>, <parameter pos:start="9:52" pos:end="9:61"><decl pos:start="9:52" pos:end="9:61"><type pos:start="9:52" pos:end="9:61"><name pos:start="9:52" pos:end="9:54">int</name></type> <name pos:start="9:56" pos:end="9:61">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <function_decl pos:start="11:5" pos:end="11:66"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">void</name></type> (<modifier pos:start="11:11" pos:end="11:11">*</modifier><name pos:start="11:12" pos:end="11:22">idct_dc_add</name>)<parameter_list pos:start="11:24" pos:end="11:65">(<parameter pos:start="11:25" pos:end="11:36"><decl pos:start="11:25" pos:end="11:36"><type pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:31">uint8_t</name> <modifier pos:start="11:33" pos:end="11:33">*</modifier></type><name pos:start="11:34" pos:end="11:36">dst</name></decl></parameter>, <parameter pos:start="11:39" pos:end="11:52"><decl pos:start="11:39" pos:end="11:52"><type pos:start="11:39" pos:end="11:52"><name pos:start="11:39" pos:end="11:45">DCTELEM</name> <modifier pos:start="11:47" pos:end="11:47">*</modifier></type><name pos:start="11:48" pos:end="11:52">block</name></decl></parameter>, <parameter pos:start="11:55" pos:end="11:64"><decl pos:start="11:55" pos:end="11:64"><type pos:start="11:55" pos:end="11:64"><name pos:start="11:55" pos:end="11:57">int</name></type> <name pos:start="11:59" pos:end="11:64">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:56"><decl pos:start="15:5" pos:end="15:55"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">qscale</name> <init pos:start="15:16" pos:end="15:55">= <expr pos:start="15:18" pos:end="15:55"><ternary pos:start="15:18" pos:end="15:55"><condition pos:start="15:18" pos:end="15:25"><expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:18">p</name> <operator pos:start="15:20" pos:end="15:21">==</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr> ?</condition><then pos:start="15:27" pos:end="15:35"> <expr pos:start="15:27" pos:end="15:35"><name pos:start="15:27" pos:end="15:35"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:35">qscale</name></name></expr> </then><else pos:start="15:37" pos:end="15:55">: <expr pos:start="15:39" pos:end="15:55"><name pos:start="15:39" pos:end="15:55"><name pos:start="15:39" pos:end="15:39">h</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:50">chroma_qp</name><index pos:start="15:51" pos:end="15:55">[<expr pos:start="15:52" pos:end="15:54"><name pos:start="15:52" pos:end="15:52">p</name><operator pos:start="15:53" pos:end="15:53">-</operator><literal type="number" pos:start="15:54" pos:end="15:54">1</literal></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:16">block_offset</name> <operator pos:start="17:18" pos:end="17:19">+=</operator> <literal type="number" pos:start="17:21" pos:end="17:22">16</literal><operator pos:start="17:23" pos:end="17:23">*</operator><name pos:start="17:24" pos:end="17:24">p</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="201:5"><if pos:start="19:5" pos:end="171:5">if<condition pos:start="19:7" pos:end="19:28">(<expr pos:start="19:8" pos:end="19:27"><call pos:start="19:8" pos:end="19:27"><name pos:start="19:8" pos:end="19:18">IS_INTRA4x4</name><argument_list pos:start="19:19" pos:end="19:27">(<argument pos:start="19:20" pos:end="19:26"><expr pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:26">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="19:29" pos:end="171:5">{<block_content pos:start="21:9" pos:end="169:9">

        <if_stmt pos:start="21:9" pos:end="169:9"><if pos:start="21:9" pos:end="169:9">if<condition pos:start="21:11" pos:end="21:34">(<expr pos:start="21:12" pos:end="21:33"><name pos:start="21:12" pos:end="21:17">simple</name> <operator pos:start="21:19" pos:end="21:20">||</operator> <operator pos:start="21:22" pos:end="21:22">!</operator><name pos:start="21:23" pos:end="21:33"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:33">encoding</name></name></expr>)</condition><block pos:start="21:35" pos:end="169:9">{<block_content pos:start="23:13" pos:end="167:13">

            <if_stmt pos:start="23:13" pos:end="167:13"><if pos:start="23:13" pos:end="73:13">if<condition pos:start="23:15" pos:end="23:34">(<expr pos:start="23:16" pos:end="23:33"><call pos:start="23:16" pos:end="23:33"><name pos:start="23:16" pos:end="23:24">IS_8x8DCT</name><argument_list pos:start="23:25" pos:end="23:33">(<argument pos:start="23:26" pos:end="23:32"><expr pos:start="23:26" pos:end="23:32"><name pos:start="23:26" pos:end="23:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="23:35" pos:end="73:13">{<block_content pos:start="25:17" pos:end="71:17">

                <if_stmt pos:start="25:17" pos:end="37:17"><if pos:start="25:17" pos:end="31:17">if<condition pos:start="25:19" pos:end="25:36">(<expr pos:start="25:20" pos:end="25:35"><name pos:start="25:20" pos:end="25:35">transform_bypass</name></expr>)</condition><block pos:start="25:37" pos:end="31:17">{<block_content pos:start="27:21" pos:end="29:53">

                    <expr_stmt pos:start="27:21" pos:end="29:53"><expr pos:start="27:21" pos:end="29:52"><name pos:start="27:21" pos:end="27:31">idct_dc_add</name> <operator pos:start="27:33" pos:end="27:33">=</operator>

                    <name pos:start="29:21" pos:end="29:28">idct_add</name>    <operator pos:start="29:33" pos:end="29:33">=</operator> <name pos:start="29:35" pos:end="29:52"><name pos:start="29:35" pos:end="29:35">s</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:40">dsp</name><operator pos:start="29:41" pos:end="29:41">.</operator><name pos:start="29:42" pos:end="29:52">add_pixels8</name></name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="31:18" pos:end="37:17">else<block pos:start="31:22" pos:end="37:17">{<block_content pos:start="33:21" pos:end="35:60">

                    <expr_stmt pos:start="33:21" pos:end="33:63"><expr pos:start="33:21" pos:end="33:62"><name pos:start="33:21" pos:end="33:31">idct_dc_add</name> <operator pos:start="33:33" pos:end="33:33">=</operator> <name pos:start="33:35" pos:end="33:62"><name pos:start="33:35" pos:end="33:35">h</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:44">h264dsp</name><operator pos:start="33:45" pos:end="33:45">.</operator><name pos:start="33:46" pos:end="33:62">h264_idct8_dc_add</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:60"><expr pos:start="35:21" pos:end="35:59"><name pos:start="35:21" pos:end="35:28">idct_add</name>    <operator pos:start="35:33" pos:end="35:33">=</operator> <name pos:start="35:35" pos:end="35:59"><name pos:start="35:35" pos:end="35:35">h</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:44">h264dsp</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:59">h264_idct8_add</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <for pos:start="39:17" pos:end="71:17">for<control pos:start="39:20" pos:end="39:36">(<init pos:start="39:21" pos:end="39:24"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:21">i</name><operator pos:start="39:22" pos:end="39:22">=</operator><literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>;</init> <condition pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:29"><name pos:start="39:26" pos:end="39:26">i</name><operator pos:start="39:27" pos:end="39:27">&lt;</operator><literal type="number" pos:start="39:28" pos:end="39:29">16</literal></expr>;</condition> <incr pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:32">i</name><operator pos:start="39:33" pos:end="39:34">+=</operator><literal type="number" pos:start="39:35" pos:end="39:35">4</literal></expr></incr>)</control><block pos:start="39:37" pos:end="71:17">{<block_content pos:start="41:21" pos:end="69:21">

                    <decl_stmt pos:start="41:21" pos:end="41:66"><decl pos:start="41:21" pos:end="41:65"><type pos:start="41:21" pos:end="41:35"><name pos:start="41:21" pos:end="41:27">uint8_t</name> <modifier pos:start="41:29" pos:end="41:29">*</modifier> <specifier pos:start="41:31" pos:end="41:35">const</specifier></type> <name pos:start="41:37" pos:end="41:39">ptr</name><init pos:start="41:40" pos:end="41:65">= <expr pos:start="41:42" pos:end="41:65"><name pos:start="41:42" pos:end="41:47">dest_y</name> <operator pos:start="41:49" pos:end="41:49">+</operator> <name pos:start="41:51" pos:end="41:65"><name pos:start="41:51" pos:end="41:62">block_offset</name><index pos:start="41:63" pos:end="41:65">[<expr pos:start="41:64" pos:end="41:64"><name pos:start="41:64" pos:end="41:64">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="43:21" pos:end="43:75"><decl pos:start="43:21" pos:end="43:74"><type pos:start="43:21" pos:end="43:29"><specifier pos:start="43:21" pos:end="43:25">const</specifier> <name pos:start="43:27" pos:end="43:29">int</name></type> <name pos:start="43:31" pos:end="43:33">dir</name><init pos:start="43:34" pos:end="43:74">= <expr pos:start="43:36" pos:end="43:74"><name pos:start="43:36" pos:end="43:74"><name pos:start="43:36" pos:end="43:36">h</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:62">intra4x4_pred_mode_cache</name><index pos:start="43:63" pos:end="43:74">[ <expr pos:start="43:65" pos:end="43:72"><name pos:start="43:65" pos:end="43:72"><name pos:start="43:65" pos:end="43:69">scan8</name><index pos:start="43:70" pos:end="43:72">[<expr pos:start="43:71" pos:end="43:71"><name pos:start="43:71" pos:end="43:71">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="45:21" pos:end="69:21"><if pos:start="45:21" pos:end="49:21">if<condition pos:start="45:23" pos:end="45:77">(<expr pos:start="45:24" pos:end="45:76"><name pos:start="45:24" pos:end="45:39">transform_bypass</name> <operator pos:start="45:41" pos:end="45:42">&amp;&amp;</operator> <name pos:start="45:44" pos:end="45:61"><name pos:start="45:44" pos:end="45:44">h</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:49">sps</name><operator pos:start="45:50" pos:end="45:50">.</operator><name pos:start="45:51" pos:end="45:61">profile_idc</name></name><operator pos:start="45:62" pos:end="45:63">==</operator><literal type="number" pos:start="45:64" pos:end="45:66">244</literal> <operator pos:start="45:68" pos:end="45:69">&amp;&amp;</operator> <name pos:start="45:71" pos:end="45:73">dir</name><operator pos:start="45:74" pos:end="45:75">&lt;=</operator><literal type="number" pos:start="45:76" pos:end="45:76">1</literal></expr>)</condition><block pos:start="45:78" pos:end="49:21">{<block_content pos:start="47:25" pos:end="47:101">

                        <expr_stmt pos:start="47:25" pos:end="47:101"><expr pos:start="47:25" pos:end="47:100"><name pos:start="47:25" pos:end="47:48"><name pos:start="47:25" pos:end="47:25">h</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:30">hpc</name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:43">pred8x8l_add</name><index pos:start="47:44" pos:end="47:48">[<expr pos:start="47:45" pos:end="47:47"><name pos:start="47:45" pos:end="47:47">dir</name></expr>]</index></name><operator pos:start="47:49" pos:end="47:49">(</operator><name pos:start="47:50" pos:end="47:52">ptr</name><operator pos:start="47:53" pos:end="47:53">,</operator> <name pos:start="47:55" pos:end="47:59"><name pos:start="47:55" pos:end="47:55">h</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:59">mb</name></name> <operator pos:start="47:61" pos:end="47:61">+</operator> <operator pos:start="47:63" pos:end="47:63">(</operator><name pos:start="47:64" pos:end="47:64">i</name><operator pos:start="47:65" pos:end="47:65">*</operator><literal type="number" pos:start="47:66" pos:end="47:68">16</literal><operator pos:start="47:68" pos:end="47:68">+</operator><name pos:start="47:69" pos:end="47:69">p</name><operator pos:start="47:70" pos:end="47:70">*</operator><literal type="number" pos:start="47:71" pos:end="47:73">256</literal> <operator pos:start="47:75" pos:end="47:76">&lt;&lt;</operator> <name pos:start="47:78" pos:end="47:88">pixel_shift</name><operator pos:start="47:89" pos:end="47:89">)</operator><operator pos:start="47:90" pos:end="47:90">,</operator> <name pos:start="47:92" pos:end="47:99">linesize</name><operator pos:start="47:100" pos:end="47:100">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="49:22" pos:end="69:21">else<block pos:start="49:26" pos:end="69:21">{<block_content pos:start="51:25" pos:end="67:25">

                        <decl_stmt pos:start="51:25" pos:end="51:81"><decl pos:start="51:25" pos:end="51:80"><type pos:start="51:25" pos:end="51:33"><specifier pos:start="51:25" pos:end="51:29">const</specifier> <name pos:start="51:31" pos:end="51:33">int</name></type> <name pos:start="51:35" pos:end="51:37">nnz</name> <init pos:start="51:39" pos:end="51:80">= <expr pos:start="51:41" pos:end="51:80"><name pos:start="51:41" pos:end="51:80"><name pos:start="51:41" pos:end="51:41">h</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:63">non_zero_count_cache</name><index pos:start="51:64" pos:end="51:80">[ <expr pos:start="51:66" pos:end="51:78"><name pos:start="51:66" pos:end="51:78"><name pos:start="51:66" pos:end="51:70">scan8</name><index pos:start="51:71" pos:end="51:78">[<expr pos:start="51:72" pos:end="51:77"><name pos:start="51:72" pos:end="51:72">i</name><operator pos:start="51:73" pos:end="51:73">+</operator><name pos:start="51:74" pos:end="51:74">p</name><operator pos:start="51:75" pos:end="51:75">*</operator><literal type="number" pos:start="51:76" pos:end="51:77">16</literal></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="53:25" pos:end="55:105"><expr pos:start="53:25" pos:end="55:104"><name pos:start="53:25" pos:end="53:46"><name pos:start="53:25" pos:end="53:25">h</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:30">hpc</name><operator pos:start="53:31" pos:end="53:31">.</operator><name pos:start="53:32" pos:end="53:39">pred8x8l</name><index pos:start="53:40" pos:end="53:46">[ <expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:44">dir</name></expr> ]</index></name><operator pos:start="53:47" pos:end="53:47">(</operator><name pos:start="53:48" pos:end="53:50">ptr</name><operator pos:start="53:51" pos:end="53:51">,</operator> <operator pos:start="53:53" pos:end="53:53">(</operator><name pos:start="53:54" pos:end="53:81"><name pos:start="53:54" pos:end="53:54">h</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:81">topleft_samples_available</name></name><operator pos:start="53:82" pos:end="53:83">&lt;&lt;</operator><name pos:start="53:84" pos:end="53:84">i</name><operator pos:start="53:85" pos:end="53:85">)</operator><operator pos:start="53:86" pos:end="53:86">&amp;</operator><literal type="number" pos:start="53:87" pos:end="53:92">0x8000</literal><operator pos:start="53:93" pos:end="53:93">,</operator>

                                                    <operator pos:start="55:53" pos:end="55:53">(</operator><name pos:start="55:54" pos:end="55:82"><name pos:start="55:54" pos:end="55:54">h</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:82">topright_samples_available</name></name><operator pos:start="55:83" pos:end="55:84">&lt;&lt;</operator><name pos:start="55:85" pos:end="55:85">i</name><operator pos:start="55:86" pos:end="55:86">)</operator><operator pos:start="55:87" pos:end="55:87">&amp;</operator><literal type="number" pos:start="55:88" pos:end="55:93">0x4000</literal><operator pos:start="55:94" pos:end="55:94">,</operator> <name pos:start="55:96" pos:end="55:103">linesize</name><operator pos:start="55:104" pos:end="55:104">)</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="57:25" pos:end="67:25"><if pos:start="57:25" pos:end="67:25">if<condition pos:start="57:27" pos:end="57:31">(<expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:30">nnz</name></expr>)</condition><block pos:start="57:32" pos:end="67:25">{<block_content pos:start="59:29" pos:end="65:96">

                            <if_stmt pos:start="59:29" pos:end="65:96"><if pos:start="59:29" pos:end="61:96">if<condition pos:start="59:31" pos:end="59:87">(<expr pos:start="59:32" pos:end="59:86"><name pos:start="59:32" pos:end="59:34">nnz</name> <operator pos:start="59:36" pos:end="59:37">==</operator> <literal type="number" pos:start="59:39" pos:end="59:39">1</literal> <operator pos:start="59:41" pos:end="59:42">&amp;&amp;</operator> <call pos:start="59:44" pos:end="59:86"><name pos:start="59:44" pos:end="59:54">dctcoef_get</name><argument_list pos:start="59:55" pos:end="59:86">(<argument pos:start="59:56" pos:end="59:60"><expr pos:start="59:56" pos:end="59:60"><name pos:start="59:56" pos:end="59:60"><name pos:start="59:56" pos:end="59:56">h</name><operator pos:start="59:57" pos:end="59:58">-&gt;</operator><name pos:start="59:59" pos:end="59:60">mb</name></name></expr></argument>, <argument pos:start="59:63" pos:end="59:73"><expr pos:start="59:63" pos:end="59:73"><name pos:start="59:63" pos:end="59:73">pixel_shift</name></expr></argument>, <argument pos:start="59:76" pos:end="59:85"><expr pos:start="59:76" pos:end="59:85"><name pos:start="59:76" pos:end="59:76">i</name><operator pos:start="59:77" pos:end="59:77">*</operator><literal type="number" pos:start="59:78" pos:end="59:80">16</literal><operator pos:start="59:80" pos:end="59:80">+</operator><name pos:start="59:81" pos:end="59:81">p</name><operator pos:start="59:82" pos:end="59:82">*</operator><literal type="number" pos:start="59:83" pos:end="59:85">256</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:33" pos:end="61:96"><block_content pos:start="61:33" pos:end="61:96">

                                <expr_stmt pos:start="61:33" pos:end="61:96"><expr pos:start="61:33" pos:end="61:95"><call pos:start="61:33" pos:end="61:95"><name pos:start="61:33" pos:end="61:43">idct_dc_add</name><argument_list pos:start="61:44" pos:end="61:95">(<argument pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><name pos:start="61:45" pos:end="61:47">ptr</name></expr></argument>, <argument pos:start="61:50" pos:end="61:84"><expr pos:start="61:50" pos:end="61:84"><name pos:start="61:50" pos:end="61:54"><name pos:start="61:50" pos:end="61:50">h</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:54">mb</name></name> <operator pos:start="61:56" pos:end="61:56">+</operator> <operator pos:start="61:58" pos:end="61:58">(</operator><name pos:start="61:59" pos:end="61:59">i</name><operator pos:start="61:60" pos:end="61:60">*</operator><literal type="number" pos:start="61:61" pos:end="61:63">16</literal><operator pos:start="61:63" pos:end="61:63">+</operator><name pos:start="61:64" pos:end="61:64">p</name><operator pos:start="61:65" pos:end="61:65">*</operator><literal type="number" pos:start="61:66" pos:end="61:68">256</literal> <operator pos:start="61:70" pos:end="61:71">&lt;&lt;</operator> <name pos:start="61:73" pos:end="61:83">pixel_shift</name><operator pos:start="61:84" pos:end="61:84">)</operator></expr></argument>, <argument pos:start="61:87" pos:end="61:94"><expr pos:start="61:87" pos:end="61:94"><name pos:start="61:87" pos:end="61:94">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="63:29" pos:end="65:96">else<block type="pseudo" pos:start="65:33" pos:end="65:96"><block_content pos:start="65:33" pos:end="65:96">

                                <expr_stmt pos:start="65:33" pos:end="65:96"><expr pos:start="65:33" pos:end="65:95"><call pos:start="65:33" pos:end="65:95"><name pos:start="65:33" pos:end="65:40">idct_add</name>   <argument_list pos:start="65:44" pos:end="65:95">(<argument pos:start="65:45" pos:end="65:47"><expr pos:start="65:45" pos:end="65:47"><name pos:start="65:45" pos:end="65:47">ptr</name></expr></argument>, <argument pos:start="65:50" pos:end="65:84"><expr pos:start="65:50" pos:end="65:84"><name pos:start="65:50" pos:end="65:54"><name pos:start="65:50" pos:end="65:50">h</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:54">mb</name></name> <operator pos:start="65:56" pos:end="65:56">+</operator> <operator pos:start="65:58" pos:end="65:58">(</operator><name pos:start="65:59" pos:end="65:59">i</name><operator pos:start="65:60" pos:end="65:60">*</operator><literal type="number" pos:start="65:61" pos:end="65:63">16</literal><operator pos:start="65:63" pos:end="65:63">+</operator><name pos:start="65:64" pos:end="65:64">p</name><operator pos:start="65:65" pos:end="65:65">*</operator><literal type="number" pos:start="65:66" pos:end="65:68">256</literal> <operator pos:start="65:70" pos:end="65:71">&lt;&lt;</operator> <name pos:start="65:73" pos:end="65:83">pixel_shift</name><operator pos:start="65:84" pos:end="65:84">)</operator></expr></argument>, <argument pos:start="65:87" pos:end="65:94"><expr pos:start="65:87" pos:end="65:94"><name pos:start="65:87" pos:end="65:94">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if><else pos:start="73:14" pos:end="167:13">else<block pos:start="73:18" pos:end="167:13">{<block_content pos:start="75:17" pos:end="165:17">

                <if_stmt pos:start="75:17" pos:end="87:17"><if pos:start="75:17" pos:end="81:17">if<condition pos:start="75:19" pos:end="75:36">(<expr pos:start="75:20" pos:end="75:35"><name pos:start="75:20" pos:end="75:35">transform_bypass</name></expr>)</condition><block pos:start="75:37" pos:end="81:17">{<block_content pos:start="77:21" pos:end="79:53">

                    <expr_stmt pos:start="77:21" pos:end="79:53"><expr pos:start="77:21" pos:end="79:52"><name pos:start="77:21" pos:end="77:31">idct_dc_add</name> <operator pos:start="77:33" pos:end="77:33">=</operator>

                    <name pos:start="79:21" pos:end="79:28">idct_add</name>    <operator pos:start="79:33" pos:end="79:33">=</operator> <name pos:start="79:35" pos:end="79:52"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:40">dsp</name><operator pos:start="79:41" pos:end="79:41">.</operator><name pos:start="79:42" pos:end="79:52">add_pixels4</name></name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="81:18" pos:end="87:17">else<block pos:start="81:22" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:59">

                    <expr_stmt pos:start="83:21" pos:end="83:62"><expr pos:start="83:21" pos:end="83:61"><name pos:start="83:21" pos:end="83:31">idct_dc_add</name> <operator pos:start="83:33" pos:end="83:33">=</operator> <name pos:start="83:35" pos:end="83:61"><name pos:start="83:35" pos:end="83:35">h</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:44">h264dsp</name><operator pos:start="83:45" pos:end="83:45">.</operator><name pos:start="83:46" pos:end="83:61">h264_idct_dc_add</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:59"><expr pos:start="85:21" pos:end="85:58"><name pos:start="85:21" pos:end="85:28">idct_add</name>    <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:58"><name pos:start="85:35" pos:end="85:35">h</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:44">h264dsp</name><operator pos:start="85:45" pos:end="85:45">.</operator><name pos:start="85:46" pos:end="85:58">h264_idct_add</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <for pos:start="89:17" pos:end="165:17">for<control pos:start="89:20" pos:end="89:35">(<init pos:start="89:21" pos:end="89:24"><expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:21">i</name><operator pos:start="89:22" pos:end="89:22">=</operator><literal type="number" pos:start="89:23" pos:end="89:23">0</literal></expr>;</init> <condition pos:start="89:26" pos:end="89:30"><expr pos:start="89:26" pos:end="89:29"><name pos:start="89:26" pos:end="89:26">i</name><operator pos:start="89:27" pos:end="89:27">&lt;</operator><literal type="number" pos:start="89:28" pos:end="89:29">16</literal></expr>;</condition> <incr pos:start="89:32" pos:end="89:34"><expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:32">i</name><operator pos:start="89:33" pos:end="89:34">++</operator></expr></incr>)</control><block pos:start="89:36" pos:end="165:17">{<block_content pos:start="91:21" pos:end="163:21">

                    <decl_stmt pos:start="91:21" pos:end="91:66"><decl pos:start="91:21" pos:end="91:65"><type pos:start="91:21" pos:end="91:35"><name pos:start="91:21" pos:end="91:27">uint8_t</name> <modifier pos:start="91:29" pos:end="91:29">*</modifier> <specifier pos:start="91:31" pos:end="91:35">const</specifier></type> <name pos:start="91:37" pos:end="91:39">ptr</name><init pos:start="91:40" pos:end="91:65">= <expr pos:start="91:42" pos:end="91:65"><name pos:start="91:42" pos:end="91:47">dest_y</name> <operator pos:start="91:49" pos:end="91:49">+</operator> <name pos:start="91:51" pos:end="91:65"><name pos:start="91:51" pos:end="91:62">block_offset</name><index pos:start="91:63" pos:end="91:65">[<expr pos:start="91:64" pos:end="91:64"><name pos:start="91:64" pos:end="91:64">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="93:21" pos:end="93:75"><decl pos:start="93:21" pos:end="93:74"><type pos:start="93:21" pos:end="93:29"><specifier pos:start="93:21" pos:end="93:25">const</specifier> <name pos:start="93:27" pos:end="93:29">int</name></type> <name pos:start="93:31" pos:end="93:33">dir</name><init pos:start="93:34" pos:end="93:74">= <expr pos:start="93:36" pos:end="93:74"><name pos:start="93:36" pos:end="93:74"><name pos:start="93:36" pos:end="93:36">h</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:62">intra4x4_pred_mode_cache</name><index pos:start="93:63" pos:end="93:74">[ <expr pos:start="93:65" pos:end="93:72"><name pos:start="93:65" pos:end="93:72"><name pos:start="93:65" pos:end="93:69">scan8</name><index pos:start="93:70" pos:end="93:72">[<expr pos:start="93:71" pos:end="93:71"><name pos:start="93:71" pos:end="93:71">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="97:21" pos:end="163:21"><if pos:start="97:21" pos:end="101:21">if<condition pos:start="97:23" pos:end="97:77">(<expr pos:start="97:24" pos:end="97:76"><name pos:start="97:24" pos:end="97:39">transform_bypass</name> <operator pos:start="97:41" pos:end="97:42">&amp;&amp;</operator> <name pos:start="97:44" pos:end="97:61"><name pos:start="97:44" pos:end="97:44">h</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:49">sps</name><operator pos:start="97:50" pos:end="97:50">.</operator><name pos:start="97:51" pos:end="97:61">profile_idc</name></name><operator pos:start="97:62" pos:end="97:63">==</operator><literal type="number" pos:start="97:64" pos:end="97:66">244</literal> <operator pos:start="97:68" pos:end="97:69">&amp;&amp;</operator> <name pos:start="97:71" pos:end="97:73">dir</name><operator pos:start="97:74" pos:end="97:75">&lt;=</operator><literal type="number" pos:start="97:76" pos:end="97:76">1</literal></expr>)</condition><block pos:start="97:78" pos:end="101:21">{<block_content pos:start="99:25" pos:end="99:100">

                        <expr_stmt pos:start="99:25" pos:end="99:100"><expr pos:start="99:25" pos:end="99:99"><name pos:start="99:25" pos:end="99:47"><name pos:start="99:25" pos:end="99:25">h</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:30">hpc</name><operator pos:start="99:31" pos:end="99:31">.</operator><name pos:start="99:32" pos:end="99:42">pred4x4_add</name><index pos:start="99:43" pos:end="99:47">[<expr pos:start="99:44" pos:end="99:46"><name pos:start="99:44" pos:end="99:46">dir</name></expr>]</index></name><operator pos:start="99:48" pos:end="99:48">(</operator><name pos:start="99:49" pos:end="99:51">ptr</name><operator pos:start="99:52" pos:end="99:52">,</operator> <name pos:start="99:54" pos:end="99:58"><name pos:start="99:54" pos:end="99:54">h</name><operator pos:start="99:55" pos:end="99:56">-&gt;</operator><name pos:start="99:57" pos:end="99:58">mb</name></name> <operator pos:start="99:60" pos:end="99:60">+</operator> <operator pos:start="99:62" pos:end="99:62">(</operator><name pos:start="99:63" pos:end="99:63">i</name><operator pos:start="99:64" pos:end="99:64">*</operator><literal type="number" pos:start="99:65" pos:end="99:67">16</literal><operator pos:start="99:67" pos:end="99:67">+</operator><name pos:start="99:68" pos:end="99:68">p</name><operator pos:start="99:69" pos:end="99:69">*</operator><literal type="number" pos:start="99:70" pos:end="99:72">256</literal> <operator pos:start="99:74" pos:end="99:75">&lt;&lt;</operator> <name pos:start="99:77" pos:end="99:87">pixel_shift</name><operator pos:start="99:88" pos:end="99:88">)</operator><operator pos:start="99:89" pos:end="99:89">,</operator> <name pos:start="99:91" pos:end="99:98">linesize</name><operator pos:start="99:99" pos:end="99:99">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="101:22" pos:end="163:21">else<block pos:start="101:26" pos:end="163:21">{<block_content pos:start="103:25" pos:end="161:25">

                        <decl_stmt pos:start="103:25" pos:end="103:42"><decl pos:start="103:25" pos:end="103:41"><type pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:31">uint8_t</name> <modifier pos:start="103:33" pos:end="103:33">*</modifier></type><name pos:start="103:34" pos:end="103:41">topright</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="105:25" pos:end="105:36"><decl pos:start="105:25" pos:end="105:31"><type pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:27">int</name></type> <name pos:start="105:29" pos:end="105:31">nnz</name></decl>, <decl pos:start="105:34" pos:end="105:35"><type ref="prev" pos:start="105:25" pos:end="105:27"/><name pos:start="105:34" pos:end="105:35">tr</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="107:25" pos:end="107:41"><decl pos:start="107:25" pos:end="107:40"><type pos:start="107:25" pos:end="107:32"><name pos:start="107:25" pos:end="107:32">uint64_t</name></type> <name pos:start="107:34" pos:end="107:40">tr_high</name></decl>;</decl_stmt>

                        <if_stmt pos:start="109:25" pos:end="137:43"><if pos:start="109:25" pos:end="135:25">if<condition pos:start="109:27" pos:end="109:79">(<expr pos:start="109:28" pos:end="109:78"><name pos:start="109:28" pos:end="109:30">dir</name> <operator pos:start="109:32" pos:end="109:33">==</operator> <name pos:start="109:35" pos:end="109:53">DIAG_DOWN_LEFT_PRED</name> <operator pos:start="109:55" pos:end="109:56">||</operator> <name pos:start="109:58" pos:end="109:60">dir</name> <operator pos:start="109:62" pos:end="109:63">==</operator> <name pos:start="109:65" pos:end="109:78">VERT_LEFT_PRED</name></expr>)</condition><block pos:start="109:80" pos:end="135:25">{<block_content pos:start="111:29" pos:end="133:78">

                            <decl_stmt pos:start="111:29" pos:end="111:96"><decl pos:start="111:29" pos:end="111:95"><type pos:start="111:29" pos:end="111:37"><specifier pos:start="111:29" pos:end="111:33">const</specifier> <name pos:start="111:35" pos:end="111:37">int</name></type> <name pos:start="111:39" pos:end="111:52">topright_avail</name><init pos:start="111:53" pos:end="111:95">= <expr pos:start="111:55" pos:end="111:95"><operator pos:start="111:55" pos:end="111:55">(</operator><name pos:start="111:56" pos:end="111:84"><name pos:start="111:56" pos:end="111:56">h</name><operator pos:start="111:57" pos:end="111:58">-&gt;</operator><name pos:start="111:59" pos:end="111:84">topright_samples_available</name></name><operator pos:start="111:85" pos:end="111:86">&lt;&lt;</operator><name pos:start="111:87" pos:end="111:87">i</name><operator pos:start="111:88" pos:end="111:88">)</operator><operator pos:start="111:89" pos:end="111:89">&amp;</operator><literal type="number" pos:start="111:90" pos:end="111:95">0x8000</literal></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="113:29" pos:end="113:75"><expr pos:start="113:29" pos:end="113:74"><call pos:start="113:29" pos:end="113:74"><name pos:start="113:29" pos:end="113:34">assert</name><argument_list pos:start="113:35" pos:end="113:74">(<argument pos:start="113:36" pos:end="113:73"><expr pos:start="113:36" pos:end="113:73"><name pos:start="113:36" pos:end="113:42"><name pos:start="113:36" pos:end="113:36">s</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:42">mb_y</name></name> <operator pos:start="113:44" pos:end="113:45">||</operator> <name pos:start="113:47" pos:end="113:54">linesize</name> <operator pos:start="113:56" pos:end="113:57">&lt;=</operator> <name pos:start="113:59" pos:end="113:73"><name pos:start="113:59" pos:end="113:70">block_offset</name><index pos:start="113:71" pos:end="113:73">[<expr pos:start="113:72" pos:end="113:72"><name pos:start="113:72" pos:end="113:72">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="115:29" pos:end="133:78"><if pos:start="115:29" pos:end="131:29">if<condition pos:start="115:31" pos:end="115:47">(<expr pos:start="115:32" pos:end="115:46"><operator pos:start="115:32" pos:end="115:32">!</operator><name pos:start="115:33" pos:end="115:46">topright_avail</name></expr>)</condition><block pos:start="115:48" pos:end="131:29">{<block_content pos:start="117:33" pos:end="129:33">

                                <if_stmt pos:start="117:33" pos:end="129:33"><if pos:start="117:33" pos:end="123:33">if <condition pos:start="117:36" pos:end="117:48">(<expr pos:start="117:37" pos:end="117:47"><name pos:start="117:37" pos:end="117:47">pixel_shift</name></expr>)</condition> <block pos:start="117:50" pos:end="123:33">{<block_content pos:start="119:37" pos:end="121:66">

                                    <expr_stmt pos:start="119:37" pos:end="119:100"><expr pos:start="119:37" pos:end="119:99"><name pos:start="119:37" pos:end="119:43">tr_high</name><operator pos:start="119:44" pos:end="119:44">=</operator> <operator pos:start="119:46" pos:end="119:46">(</operator><operator pos:start="119:47" pos:end="119:47">(</operator><name pos:start="119:48" pos:end="119:55">uint16_t</name><operator pos:start="119:56" pos:end="119:56">*</operator><operator pos:start="119:57" pos:end="119:57">)</operator><name pos:start="119:58" pos:end="119:60">ptr</name><operator pos:start="119:61" pos:end="119:61">)</operator><index pos:start="119:62" pos:end="119:77">[<expr pos:start="119:63" pos:end="119:76"><literal type="number" pos:start="119:63" pos:end="119:65">3</literal> <operator pos:start="119:65" pos:end="119:65">-</operator> <name pos:start="119:67" pos:end="119:74">linesize</name><operator pos:start="119:75" pos:end="119:75">/</operator><literal type="number" pos:start="119:76" pos:end="119:76">2</literal></expr>]</index><operator pos:start="119:78" pos:end="119:78">*</operator><literal type="number" pos:start="119:79" pos:end="119:99">0x0001000100010001ULL</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="121:37" pos:end="121:66"><expr pos:start="121:37" pos:end="121:65"><name pos:start="121:37" pos:end="121:44">topright</name><operator pos:start="121:45" pos:end="121:45">=</operator> <operator pos:start="121:47" pos:end="121:47">(</operator><name pos:start="121:48" pos:end="121:54">uint8_t</name><operator pos:start="121:55" pos:end="121:55">*</operator><operator pos:start="121:56" pos:end="121:56">)</operator> <operator pos:start="121:58" pos:end="121:58">&amp;</operator><name pos:start="121:59" pos:end="121:65">tr_high</name></expr>;</expr_stmt>

                                </block_content>}</block></if> <else pos:start="123:35" pos:end="129:33">else <block pos:start="123:40" pos:end="129:33">{<block_content pos:start="125:37" pos:end="127:61">

                                    <expr_stmt pos:start="125:37" pos:end="125:69"><expr pos:start="125:37" pos:end="125:68"><name pos:start="125:37" pos:end="125:38">tr</name><operator pos:start="125:39" pos:end="125:39">=</operator> <name pos:start="125:41" pos:end="125:57"><name pos:start="125:41" pos:end="125:43">ptr</name><index pos:start="125:44" pos:end="125:57">[<expr pos:start="125:45" pos:end="125:56"><literal type="number" pos:start="125:45" pos:end="125:47">3</literal> <operator pos:start="125:47" pos:end="125:47">-</operator> <name pos:start="125:49" pos:end="125:56">linesize</name></expr>]</index></name><operator pos:start="125:58" pos:end="125:58">*</operator><literal type="number" pos:start="125:59" pos:end="125:68">0x01010101</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="127:37" pos:end="127:61"><expr pos:start="127:37" pos:end="127:60"><name pos:start="127:37" pos:end="127:44">topright</name><operator pos:start="127:45" pos:end="127:45">=</operator> <operator pos:start="127:47" pos:end="127:47">(</operator><name pos:start="127:48" pos:end="127:54">uint8_t</name><operator pos:start="127:55" pos:end="127:55">*</operator><operator pos:start="127:56" pos:end="127:56">)</operator> <operator pos:start="127:58" pos:end="127:58">&amp;</operator><name pos:start="127:59" pos:end="127:60">tr</name></expr>;</expr_stmt>

                                </block_content>}</block></else></if_stmt>

                            </block_content>}</block></if><else pos:start="131:30" pos:end="133:78">else<block type="pseudo" pos:start="133:33" pos:end="133:78"><block_content pos:start="133:33" pos:end="133:78">

                                <expr_stmt pos:start="133:33" pos:end="133:78"><expr pos:start="133:33" pos:end="133:77"><name pos:start="133:33" pos:end="133:40">topright</name><operator pos:start="133:41" pos:end="133:41">=</operator> <name pos:start="133:43" pos:end="133:45">ptr</name> <operator pos:start="133:47" pos:end="133:47">+</operator> <operator pos:start="133:49" pos:end="133:49">(</operator><literal type="number" pos:start="133:50" pos:end="133:50">4</literal> <operator pos:start="133:52" pos:end="133:53">&lt;&lt;</operator> <name pos:start="133:55" pos:end="133:65">pixel_shift</name><operator pos:start="133:66" pos:end="133:66">)</operator> <operator pos:start="133:68" pos:end="133:68">-</operator> <name pos:start="133:70" pos:end="133:77">linesize</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if><else pos:start="135:26" pos:end="137:43">else<block type="pseudo" pos:start="137:29" pos:end="137:43"><block_content pos:start="137:29" pos:end="137:43">

                            <expr_stmt pos:start="137:29" pos:end="137:43"><expr pos:start="137:29" pos:end="137:42"><name pos:start="137:29" pos:end="137:36">topright</name><operator pos:start="137:37" pos:end="137:37">=</operator> <name pos:start="137:39" pos:end="137:42">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                        <expr_stmt pos:start="141:25" pos:end="141:71"><expr pos:start="141:25" pos:end="141:70"><name pos:start="141:25" pos:end="141:45"><name pos:start="141:25" pos:end="141:25">h</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:30">hpc</name><operator pos:start="141:31" pos:end="141:31">.</operator><name pos:start="141:32" pos:end="141:38">pred4x4</name><index pos:start="141:39" pos:end="141:45">[ <expr pos:start="141:41" pos:end="141:43"><name pos:start="141:41" pos:end="141:43">dir</name></expr> ]</index></name><operator pos:start="141:46" pos:end="141:46">(</operator><name pos:start="141:47" pos:end="141:49">ptr</name><operator pos:start="141:50" pos:end="141:50">,</operator> <name pos:start="141:52" pos:end="141:59">topright</name><operator pos:start="141:60" pos:end="141:60">,</operator> <name pos:start="141:62" pos:end="141:69">linesize</name><operator pos:start="141:70" pos:end="141:70">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:71"><expr pos:start="143:25" pos:end="143:70"><name pos:start="143:25" pos:end="143:27">nnz</name> <operator pos:start="143:29" pos:end="143:29">=</operator> <name pos:start="143:31" pos:end="143:70"><name pos:start="143:31" pos:end="143:31">h</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:53">non_zero_count_cache</name><index pos:start="143:54" pos:end="143:70">[ <expr pos:start="143:56" pos:end="143:68"><name pos:start="143:56" pos:end="143:68"><name pos:start="143:56" pos:end="143:60">scan8</name><index pos:start="143:61" pos:end="143:68">[<expr pos:start="143:62" pos:end="143:67"><name pos:start="143:62" pos:end="143:62">i</name><operator pos:start="143:63" pos:end="143:63">+</operator><name pos:start="143:64" pos:end="143:64">p</name><operator pos:start="143:65" pos:end="143:65">*</operator><literal type="number" pos:start="143:66" pos:end="143:67">16</literal></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="145:25" pos:end="161:25"><if pos:start="145:25" pos:end="161:25">if<condition pos:start="145:27" pos:end="145:31">(<expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:30">nnz</name></expr>)</condition><block pos:start="145:32" pos:end="161:25">{<block_content pos:start="147:29" pos:end="159:97">

                            <if_stmt pos:start="147:29" pos:end="159:97"><if pos:start="147:29" pos:end="157:29">if<condition pos:start="147:31" pos:end="147:39">(<expr pos:start="147:32" pos:end="147:38"><name pos:start="147:32" pos:end="147:38">is_h264</name></expr>)</condition><block pos:start="147:40" pos:end="157:29">{<block_content pos:start="149:33" pos:end="155:100">

                                <if_stmt pos:start="149:33" pos:end="155:100"><if pos:start="149:33" pos:end="151:100">if<condition pos:start="149:35" pos:end="149:91">(<expr pos:start="149:36" pos:end="149:90"><name pos:start="149:36" pos:end="149:38">nnz</name> <operator pos:start="149:40" pos:end="149:41">==</operator> <literal type="number" pos:start="149:43" pos:end="149:43">1</literal> <operator pos:start="149:45" pos:end="149:46">&amp;&amp;</operator> <call pos:start="149:48" pos:end="149:90"><name pos:start="149:48" pos:end="149:58">dctcoef_get</name><argument_list pos:start="149:59" pos:end="149:90">(<argument pos:start="149:60" pos:end="149:64"><expr pos:start="149:60" pos:end="149:64"><name pos:start="149:60" pos:end="149:64"><name pos:start="149:60" pos:end="149:60">h</name><operator pos:start="149:61" pos:end="149:62">-&gt;</operator><name pos:start="149:63" pos:end="149:64">mb</name></name></expr></argument>, <argument pos:start="149:67" pos:end="149:77"><expr pos:start="149:67" pos:end="149:77"><name pos:start="149:67" pos:end="149:77">pixel_shift</name></expr></argument>, <argument pos:start="149:80" pos:end="149:89"><expr pos:start="149:80" pos:end="149:89"><name pos:start="149:80" pos:end="149:80">i</name><operator pos:start="149:81" pos:end="149:81">*</operator><literal type="number" pos:start="149:82" pos:end="149:84">16</literal><operator pos:start="149:84" pos:end="149:84">+</operator><name pos:start="149:85" pos:end="149:85">p</name><operator pos:start="149:86" pos:end="149:86">*</operator><literal type="number" pos:start="149:87" pos:end="149:89">256</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="151:37" pos:end="151:100"><block_content pos:start="151:37" pos:end="151:100">

                                    <expr_stmt pos:start="151:37" pos:end="151:100"><expr pos:start="151:37" pos:end="151:99"><call pos:start="151:37" pos:end="151:99"><name pos:start="151:37" pos:end="151:47">idct_dc_add</name><argument_list pos:start="151:48" pos:end="151:99">(<argument pos:start="151:49" pos:end="151:51"><expr pos:start="151:49" pos:end="151:51"><name pos:start="151:49" pos:end="151:51">ptr</name></expr></argument>, <argument pos:start="151:54" pos:end="151:88"><expr pos:start="151:54" pos:end="151:88"><name pos:start="151:54" pos:end="151:58"><name pos:start="151:54" pos:end="151:54">h</name><operator pos:start="151:55" pos:end="151:56">-&gt;</operator><name pos:start="151:57" pos:end="151:58">mb</name></name> <operator pos:start="151:60" pos:end="151:60">+</operator> <operator pos:start="151:62" pos:end="151:62">(</operator><name pos:start="151:63" pos:end="151:63">i</name><operator pos:start="151:64" pos:end="151:64">*</operator><literal type="number" pos:start="151:65" pos:end="151:67">16</literal><operator pos:start="151:67" pos:end="151:67">+</operator><name pos:start="151:68" pos:end="151:68">p</name><operator pos:start="151:69" pos:end="151:69">*</operator><literal type="number" pos:start="151:70" pos:end="151:72">256</literal> <operator pos:start="151:74" pos:end="151:75">&lt;&lt;</operator> <name pos:start="151:77" pos:end="151:87">pixel_shift</name><operator pos:start="151:88" pos:end="151:88">)</operator></expr></argument>, <argument pos:start="151:91" pos:end="151:98"><expr pos:start="151:91" pos:end="151:98"><name pos:start="151:91" pos:end="151:98">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                                <else pos:start="153:33" pos:end="155:100">else<block type="pseudo" pos:start="155:37" pos:end="155:100"><block_content pos:start="155:37" pos:end="155:100">

                                    <expr_stmt pos:start="155:37" pos:end="155:100"><expr pos:start="155:37" pos:end="155:99"><call pos:start="155:37" pos:end="155:99"><name pos:start="155:37" pos:end="155:44">idct_add</name>   <argument_list pos:start="155:48" pos:end="155:99">(<argument pos:start="155:49" pos:end="155:51"><expr pos:start="155:49" pos:end="155:51"><name pos:start="155:49" pos:end="155:51">ptr</name></expr></argument>, <argument pos:start="155:54" pos:end="155:88"><expr pos:start="155:54" pos:end="155:88"><name pos:start="155:54" pos:end="155:58"><name pos:start="155:54" pos:end="155:54">h</name><operator pos:start="155:55" pos:end="155:56">-&gt;</operator><name pos:start="155:57" pos:end="155:58">mb</name></name> <operator pos:start="155:60" pos:end="155:60">+</operator> <operator pos:start="155:62" pos:end="155:62">(</operator><name pos:start="155:63" pos:end="155:63">i</name><operator pos:start="155:64" pos:end="155:64">*</operator><literal type="number" pos:start="155:65" pos:end="155:67">16</literal><operator pos:start="155:67" pos:end="155:67">+</operator><name pos:start="155:68" pos:end="155:68">p</name><operator pos:start="155:69" pos:end="155:69">*</operator><literal type="number" pos:start="155:70" pos:end="155:72">256</literal> <operator pos:start="155:74" pos:end="155:75">&lt;&lt;</operator> <name pos:start="155:77" pos:end="155:87">pixel_shift</name><operator pos:start="155:88" pos:end="155:88">)</operator></expr></argument>, <argument pos:start="155:91" pos:end="155:98"><expr pos:start="155:91" pos:end="155:98"><name pos:start="155:91" pos:end="155:98">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            </block_content>}</block></if><else pos:start="157:30" pos:end="159:97">else<block type="pseudo" pos:start="159:33" pos:end="159:97"><block_content pos:start="159:33" pos:end="159:97">

                                <expr_stmt pos:start="159:33" pos:end="159:97"><expr pos:start="159:33" pos:end="159:96"><call pos:start="159:33" pos:end="159:96"><name pos:start="159:33" pos:end="159:50">ff_svq3_add_idct_c</name><argument_list pos:start="159:51" pos:end="159:96">(<argument pos:start="159:52" pos:end="159:54"><expr pos:start="159:52" pos:end="159:54"><name pos:start="159:52" pos:end="159:54">ptr</name></expr></argument>, <argument pos:start="159:57" pos:end="159:74"><expr pos:start="159:57" pos:end="159:74"><name pos:start="159:57" pos:end="159:61"><name pos:start="159:57" pos:end="159:57">h</name><operator pos:start="159:58" pos:end="159:59">-&gt;</operator><name pos:start="159:60" pos:end="159:61">mb</name></name> <operator pos:start="159:63" pos:end="159:63">+</operator> <name pos:start="159:65" pos:end="159:65">i</name><operator pos:start="159:66" pos:end="159:66">*</operator><literal type="number" pos:start="159:67" pos:end="159:69">16</literal><operator pos:start="159:69" pos:end="159:69">+</operator><name pos:start="159:70" pos:end="159:70">p</name><operator pos:start="159:71" pos:end="159:71">*</operator><literal type="number" pos:start="159:72" pos:end="159:74">256</literal></expr></argument>, <argument pos:start="159:77" pos:end="159:84"><expr pos:start="159:77" pos:end="159:84"><name pos:start="159:77" pos:end="159:84">linesize</name></expr></argument>, <argument pos:start="159:87" pos:end="159:92"><expr pos:start="159:87" pos:end="159:92"><name pos:start="159:87" pos:end="159:92">qscale</name></expr></argument>, <argument pos:start="159:95" pos:end="159:95"><expr pos:start="159:95" pos:end="159:95"><literal type="number" pos:start="159:95" pos:end="159:95">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="171:6" pos:end="201:5">else<block pos:start="171:10" pos:end="201:5">{<block_content pos:start="173:9" pos:end="199:82">

        <expr_stmt pos:start="173:9" pos:end="173:71"><expr pos:start="173:9" pos:end="173:70"><name pos:start="173:9" pos:end="173:51"><name pos:start="173:9" pos:end="173:9">h</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:14">hpc</name><operator pos:start="173:15" pos:end="173:15">.</operator><name pos:start="173:16" pos:end="173:24">pred16x16</name><index pos:start="173:25" pos:end="173:51">[ <expr pos:start="173:27" pos:end="173:49"><name pos:start="173:27" pos:end="173:49"><name pos:start="173:27" pos:end="173:27">h</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:49">intra16x16_pred_mode</name></name></expr> ]</index></name><operator pos:start="173:52" pos:end="173:52">(</operator><name pos:start="173:53" pos:end="173:58">dest_y</name> <operator pos:start="173:60" pos:end="173:60">,</operator> <name pos:start="173:62" pos:end="173:69">linesize</name><operator pos:start="173:70" pos:end="173:70">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="199:82"><if pos:start="175:9" pos:end="197:9">if<condition pos:start="175:11" pos:end="175:19">(<expr pos:start="175:12" pos:end="175:18"><name pos:start="175:12" pos:end="175:18">is_h264</name></expr>)</condition><block pos:start="175:20" pos:end="197:9">{<block_content pos:start="177:13" pos:end="195:13">

            <if_stmt pos:start="177:13" pos:end="195:13"><if pos:start="177:13" pos:end="195:13">if<condition pos:start="177:15" pos:end="177:71">(<expr pos:start="177:16" pos:end="177:70"><name pos:start="177:16" pos:end="177:70"><name pos:start="177:16" pos:end="177:16">h</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:38">non_zero_count_cache</name><index pos:start="177:39" pos:end="177:70">[ <expr pos:start="177:41" pos:end="177:68"><name pos:start="177:41" pos:end="177:68"><name pos:start="177:41" pos:end="177:45">scan8</name><index pos:start="177:46" pos:end="177:68">[<expr pos:start="177:47" pos:end="177:67"><name pos:start="177:47" pos:end="177:65">LUMA_DC_BLOCK_INDEX</name><operator pos:start="177:66" pos:end="177:66">+</operator><name pos:start="177:67" pos:end="177:67">p</name></expr>]</index></name></expr> ]</index></name></expr>)</condition><block pos:start="177:72" pos:end="195:13">{<block_content pos:start="179:17" pos:end="193:17">

                <if_stmt pos:start="179:17" pos:end="193:17"><if pos:start="179:17" pos:end="181:138">if<condition pos:start="179:19" pos:end="179:37">(<expr pos:start="179:20" pos:end="179:36"><operator pos:start="179:20" pos:end="179:20">!</operator><name pos:start="179:21" pos:end="179:36">transform_bypass</name></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:138"><block_content pos:start="181:21" pos:end="181:138">

                    <expr_stmt pos:start="181:21" pos:end="181:138"><expr pos:start="181:21" pos:end="181:137"><call pos:start="181:21" pos:end="181:137"><name pos:start="181:21" pos:end="181:56"><name pos:start="181:21" pos:end="181:21">h</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:30">h264dsp</name><operator pos:start="181:31" pos:end="181:31">.</operator><name pos:start="181:32" pos:end="181:56">h264_luma_dc_dequant_idct</name></name><argument_list pos:start="181:57" pos:end="181:137">(<argument pos:start="181:58" pos:end="181:85"><expr pos:start="181:58" pos:end="181:85"><name pos:start="181:58" pos:end="181:62"><name pos:start="181:58" pos:end="181:58">h</name><operator pos:start="181:59" pos:end="181:60">-&gt;</operator><name pos:start="181:61" pos:end="181:62">mb</name></name><operator pos:start="181:63" pos:end="181:63">+</operator><operator pos:start="181:64" pos:end="181:64">(</operator><name pos:start="181:65" pos:end="181:65">p</name><operator pos:start="181:66" pos:end="181:66">*</operator><literal type="number" pos:start="181:67" pos:end="181:69">256</literal> <operator pos:start="181:71" pos:end="181:72">&lt;&lt;</operator> <name pos:start="181:74" pos:end="181:84">pixel_shift</name><operator pos:start="181:85" pos:end="181:85">)</operator></expr></argument>, <argument pos:start="181:88" pos:end="181:103"><expr pos:start="181:88" pos:end="181:103"><name pos:start="181:88" pos:end="181:103"><name pos:start="181:88" pos:end="181:88">h</name><operator pos:start="181:89" pos:end="181:90">-&gt;</operator><name pos:start="181:91" pos:end="181:100">mb_luma_dc</name><index pos:start="181:101" pos:end="181:103">[<expr pos:start="181:102" pos:end="181:102"><name pos:start="181:102" pos:end="181:102">p</name></expr>]</index></name></expr></argument>, <argument pos:start="181:106" pos:end="181:136"><expr pos:start="181:106" pos:end="181:136"><name pos:start="181:106" pos:end="181:136"><name pos:start="181:106" pos:end="181:106">h</name><operator pos:start="181:107" pos:end="181:108">-&gt;</operator><name pos:start="181:109" pos:end="181:122">dequant4_coeff</name><index pos:start="181:123" pos:end="181:125">[<expr pos:start="181:124" pos:end="181:124"><name pos:start="181:124" pos:end="181:124">p</name></expr>]</index><index pos:start="181:126" pos:end="181:133">[<expr pos:start="181:127" pos:end="181:132"><name pos:start="181:127" pos:end="181:132">qscale</name></expr>]</index><index pos:start="181:134" pos:end="181:136">[<expr pos:start="181:135" pos:end="181:135"><literal type="number" pos:start="181:135" pos:end="181:135">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="183:17" pos:end="193:17">else<block pos:start="183:21" pos:end="193:17">{<block_content pos:start="185:21" pos:end="191:124">

                    <decl_stmt pos:start="185:21" pos:end="187:108"><decl pos:start="185:21" pos:end="187:107"><type pos:start="185:21" pos:end="185:40"><specifier pos:start="185:21" pos:end="185:26">static</specifier> <specifier pos:start="185:28" pos:end="185:32">const</specifier> <name pos:start="185:34" pos:end="185:40">uint8_t</name></type> <name pos:start="185:42" pos:end="185:55"><name pos:start="185:42" pos:end="185:51">dc_mapping</name><index pos:start="185:52" pos:end="185:55">[<expr pos:start="185:53" pos:end="185:54"><literal type="number" pos:start="185:53" pos:end="185:54">16</literal></expr>]</index></name> <init pos:start="185:57" pos:end="187:107">= <expr pos:start="185:59" pos:end="187:107"><block pos:start="185:59" pos:end="187:107">{ <expr pos:start="185:61" pos:end="185:64"><literal type="number" pos:start="185:61" pos:end="185:61">0</literal><operator pos:start="185:62" pos:end="185:62">*</operator><literal type="number" pos:start="185:63" pos:end="185:64">16</literal></expr>, <expr pos:start="185:67" pos:end="185:70"><literal type="number" pos:start="185:67" pos:end="185:67">1</literal><operator pos:start="185:68" pos:end="185:68">*</operator><literal type="number" pos:start="185:69" pos:end="185:70">16</literal></expr>, <expr pos:start="185:73" pos:end="185:76"><literal type="number" pos:start="185:73" pos:end="185:73">4</literal><operator pos:start="185:74" pos:end="185:74">*</operator><literal type="number" pos:start="185:75" pos:end="185:76">16</literal></expr>, <expr pos:start="185:79" pos:end="185:82"><literal type="number" pos:start="185:79" pos:end="185:79">5</literal><operator pos:start="185:80" pos:end="185:80">*</operator><literal type="number" pos:start="185:81" pos:end="185:82">16</literal></expr>, <expr pos:start="185:85" pos:end="185:88"><literal type="number" pos:start="185:85" pos:end="185:85">2</literal><operator pos:start="185:86" pos:end="185:86">*</operator><literal type="number" pos:start="185:87" pos:end="185:88">16</literal></expr>, <expr pos:start="185:91" pos:end="185:94"><literal type="number" pos:start="185:91" pos:end="185:91">3</literal><operator pos:start="185:92" pos:end="185:92">*</operator><literal type="number" pos:start="185:93" pos:end="185:94">16</literal></expr>, <expr pos:start="185:97" pos:end="185:100"><literal type="number" pos:start="185:97" pos:end="185:97">6</literal><operator pos:start="185:98" pos:end="185:98">*</operator><literal type="number" pos:start="185:99" pos:end="185:100">16</literal></expr>, <expr pos:start="185:103" pos:end="185:106"><literal type="number" pos:start="185:103" pos:end="185:103">7</literal><operator pos:start="185:104" pos:end="185:104">*</operator><literal type="number" pos:start="185:105" pos:end="185:106">16</literal></expr>,

                                                            <expr pos:start="187:61" pos:end="187:64"><literal type="number" pos:start="187:61" pos:end="187:61">8</literal><operator pos:start="187:62" pos:end="187:62">*</operator><literal type="number" pos:start="187:63" pos:end="187:64">16</literal></expr>, <expr pos:start="187:67" pos:end="187:70"><literal type="number" pos:start="187:67" pos:end="187:67">9</literal><operator pos:start="187:68" pos:end="187:68">*</operator><literal type="number" pos:start="187:69" pos:end="187:70">16</literal></expr>,<expr pos:start="187:72" pos:end="187:76"><literal type="number" pos:start="187:72" pos:end="187:73">12</literal><operator pos:start="187:74" pos:end="187:74">*</operator><literal type="number" pos:start="187:75" pos:end="187:76">16</literal></expr>,<expr pos:start="187:78" pos:end="187:82"><literal type="number" pos:start="187:78" pos:end="187:79">13</literal><operator pos:start="187:80" pos:end="187:80">*</operator><literal type="number" pos:start="187:81" pos:end="187:82">16</literal></expr>,<expr pos:start="187:84" pos:end="187:88"><literal type="number" pos:start="187:84" pos:end="187:85">10</literal><operator pos:start="187:86" pos:end="187:86">*</operator><literal type="number" pos:start="187:87" pos:end="187:88">16</literal></expr>,<expr pos:start="187:90" pos:end="187:94"><literal type="number" pos:start="187:90" pos:end="187:91">11</literal><operator pos:start="187:92" pos:end="187:92">*</operator><literal type="number" pos:start="187:93" pos:end="187:94">16</literal></expr>,<expr pos:start="187:96" pos:end="187:100"><literal type="number" pos:start="187:96" pos:end="187:97">14</literal><operator pos:start="187:98" pos:end="187:98">*</operator><literal type="number" pos:start="187:99" pos:end="187:100">16</literal></expr>,<expr pos:start="187:102" pos:end="187:106"><literal type="number" pos:start="187:102" pos:end="187:103">15</literal><operator pos:start="187:104" pos:end="187:104">*</operator><literal type="number" pos:start="187:105" pos:end="187:106">16</literal></expr>}</block></expr></init></decl>;</decl_stmt>

                    <for pos:start="189:21" pos:end="191:124">for<control pos:start="189:24" pos:end="189:43">(<init pos:start="189:25" pos:end="189:30"><expr pos:start="189:25" pos:end="189:29"><name pos:start="189:25" pos:end="189:25">i</name> <operator pos:start="189:27" pos:end="189:27">=</operator> <literal type="number" pos:start="189:29" pos:end="189:29">0</literal></expr>;</init> <condition pos:start="189:32" pos:end="189:38"><expr pos:start="189:32" pos:end="189:37"><name pos:start="189:32" pos:end="189:32">i</name> <operator pos:start="189:34" pos:end="189:34">&lt;</operator> <literal type="number" pos:start="189:36" pos:end="189:37">16</literal></expr>;</condition> <incr pos:start="189:40" pos:end="189:42"><expr pos:start="189:40" pos:end="189:42"><name pos:start="189:40" pos:end="189:40">i</name><operator pos:start="189:41" pos:end="189:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="191:25" pos:end="191:124"><block_content pos:start="191:25" pos:end="191:124">

                        <expr_stmt pos:start="191:25" pos:end="191:124"><expr pos:start="191:25" pos:end="191:123"><call pos:start="191:25" pos:end="191:123"><name pos:start="191:25" pos:end="191:35">dctcoef_set</name><argument_list pos:start="191:36" pos:end="191:123">(<argument pos:start="191:37" pos:end="191:47"><expr pos:start="191:37" pos:end="191:47"><name pos:start="191:37" pos:end="191:41"><name pos:start="191:37" pos:end="191:37">h</name><operator pos:start="191:38" pos:end="191:39">-&gt;</operator><name pos:start="191:40" pos:end="191:41">mb</name></name><operator pos:start="191:42" pos:end="191:42">+</operator><name pos:start="191:43" pos:end="191:43">p</name><operator pos:start="191:44" pos:end="191:44">*</operator><literal type="number" pos:start="191:45" pos:end="191:47">256</literal></expr></argument>, <argument pos:start="191:50" pos:end="191:60"><expr pos:start="191:50" pos:end="191:60"><name pos:start="191:50" pos:end="191:60">pixel_shift</name></expr></argument>, <argument pos:start="191:63" pos:end="191:75"><expr pos:start="191:63" pos:end="191:75"><name pos:start="191:63" pos:end="191:75"><name pos:start="191:63" pos:end="191:72">dc_mapping</name><index pos:start="191:73" pos:end="191:75">[<expr pos:start="191:74" pos:end="191:74"><name pos:start="191:74" pos:end="191:74">i</name></expr>]</index></name></expr></argument>, <argument pos:start="191:78" pos:end="191:122"><expr pos:start="191:78" pos:end="191:122"><call pos:start="191:78" pos:end="191:122"><name pos:start="191:78" pos:end="191:88">dctcoef_get</name><argument_list pos:start="191:89" pos:end="191:122">(<argument pos:start="191:90" pos:end="191:105"><expr pos:start="191:90" pos:end="191:105"><name pos:start="191:90" pos:end="191:105"><name pos:start="191:90" pos:end="191:90">h</name><operator pos:start="191:91" pos:end="191:92">-&gt;</operator><name pos:start="191:93" pos:end="191:102">mb_luma_dc</name><index pos:start="191:103" pos:end="191:105">[<expr pos:start="191:104" pos:end="191:104"><name pos:start="191:104" pos:end="191:104">p</name></expr>]</index></name></expr></argument>, <argument pos:start="191:108" pos:end="191:118"><expr pos:start="191:108" pos:end="191:118"><name pos:start="191:108" pos:end="191:118">pixel_shift</name></expr></argument>, <argument pos:start="191:121" pos:end="191:121"><expr pos:start="191:121" pos:end="191:121"><name pos:start="191:121" pos:end="191:121">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="197:10" pos:end="199:82">else<block type="pseudo" pos:start="199:13" pos:end="199:82"><block_content pos:start="199:13" pos:end="199:82">

            <expr_stmt pos:start="199:13" pos:end="199:82"><expr pos:start="199:13" pos:end="199:81"><call pos:start="199:13" pos:end="199:81"><name pos:start="199:13" pos:end="199:42">ff_svq3_luma_dc_dequant_idct_c</name><argument_list pos:start="199:43" pos:end="199:81">(<argument pos:start="199:44" pos:end="199:54"><expr pos:start="199:44" pos:end="199:54"><name pos:start="199:44" pos:end="199:48"><name pos:start="199:44" pos:end="199:44">h</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:48">mb</name></name><operator pos:start="199:49" pos:end="199:49">+</operator><name pos:start="199:50" pos:end="199:50">p</name><operator pos:start="199:51" pos:end="199:51">*</operator><literal type="number" pos:start="199:52" pos:end="199:54">256</literal></expr></argument>, <argument pos:start="199:57" pos:end="199:72"><expr pos:start="199:57" pos:end="199:72"><name pos:start="199:57" pos:end="199:72"><name pos:start="199:57" pos:end="199:57">h</name><operator pos:start="199:58" pos:end="199:59">-&gt;</operator><name pos:start="199:60" pos:end="199:69">mb_luma_dc</name><index pos:start="199:70" pos:end="199:72">[<expr pos:start="199:71" pos:end="199:71"><name pos:start="199:71" pos:end="199:71">p</name></expr>]</index></name></expr></argument>, <argument pos:start="199:75" pos:end="199:80"><expr pos:start="199:75" pos:end="199:80"><name pos:start="199:75" pos:end="199:80">qscale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
