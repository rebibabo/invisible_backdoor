<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24738.c" pos:tabs="8"><function pos:start="1:1" pos:end="1039:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:27">MPV_encode_init</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1039:1">{<block_content pos:start="5:5" pos:end="1037:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">chroma_h_shift</name></decl>, <decl pos:start="9:25" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:38">chroma_v_shift</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:23">MPV_encode_defaults</name><argument_list pos:start="13:24" pos:end="13:26">(<argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="17:5" pos:end="69:5">switch <condition pos:start="17:12" pos:end="17:28">(<expr pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:17">avctx</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">codec_id</name></name></expr>)</condition> <block pos:start="17:30" pos:end="69:5">{<block_content pos:start="19:5" pos:end="67:9">

    <case pos:start="19:5" pos:end="19:29">case <expr pos:start="19:10" pos:end="19:28"><name pos:start="19:10" pos:end="19:28">CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if<condition pos:start="21:11" pos:end="21:82">(<expr pos:start="21:12" pos:end="21:81"><name pos:start="21:12" pos:end="21:25"><name pos:start="21:12" pos:end="21:16">avctx</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:25">pix_fmt</name></name> <operator pos:start="21:27" pos:end="21:28">!=</operator> <name pos:start="21:30" pos:end="21:44">PIX_FMT_YUV420P</name> <operator pos:start="21:46" pos:end="21:47">&amp;&amp;</operator> <name pos:start="21:49" pos:end="21:62"><name pos:start="21:49" pos:end="21:53">avctx</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:62">pix_fmt</name></name> <operator pos:start="21:64" pos:end="21:65">!=</operator> <name pos:start="21:67" pos:end="21:81">PIX_FMT_YUV422P</name></expr>)</condition><block pos:start="21:83" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:22">

            <expr_stmt pos:start="23:13" pos:end="23:82"><expr pos:start="23:13" pos:end="23:81"><call pos:start="23:13" pos:end="23:81"><name pos:start="23:13" pos:end="23:18">av_log</name><argument_list pos:start="23:19" pos:end="23:81">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:24">avctx</name></expr></argument>, <argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:41" pos:end="23:80"><expr pos:start="23:41" pos:end="23:80"><literal type="string" pos:start="23:41" pos:end="23:80">"only YUV420 and YUV422 are supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:22">return <expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:24">case <expr pos:start="31:10" pos:end="31:23"><name pos:start="31:10" pos:end="31:23">CODEC_ID_LJPEG</name></expr>:</case>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if<condition pos:start="33:11" pos:end="35:180">(<expr pos:start="33:12" pos:end="35:179"><name pos:start="33:12" pos:end="33:25"><name pos:start="33:12" pos:end="33:16">avctx</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:25">pix_fmt</name></name> <operator pos:start="33:27" pos:end="33:28">!=</operator> <name pos:start="33:30" pos:end="33:45">PIX_FMT_YUVJ420P</name> <operator pos:start="33:47" pos:end="33:48">&amp;&amp;</operator> <name pos:start="33:50" pos:end="33:63"><name pos:start="33:50" pos:end="33:54">avctx</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:63">pix_fmt</name></name> <operator pos:start="33:65" pos:end="33:66">!=</operator> <name pos:start="33:68" pos:end="33:83">PIX_FMT_YUVJ422P</name> <operator pos:start="33:85" pos:end="33:86">&amp;&amp;</operator> <name pos:start="33:88" pos:end="33:101"><name pos:start="33:88" pos:end="33:92">avctx</name><operator pos:start="33:93" pos:end="33:94">-&gt;</operator><name pos:start="33:95" pos:end="33:101">pix_fmt</name></name> <operator pos:start="33:103" pos:end="33:104">!=</operator> <name pos:start="33:106" pos:end="33:121">PIX_FMT_YUVJ444P</name> <operator pos:start="33:123" pos:end="33:124">&amp;&amp;</operator> <name pos:start="33:126" pos:end="33:139"><name pos:start="33:126" pos:end="33:130">avctx</name><operator pos:start="33:131" pos:end="33:132">-&gt;</operator><name pos:start="33:133" pos:end="33:139">pix_fmt</name></name> <operator pos:start="33:141" pos:end="33:142">!=</operator> <name pos:start="33:144" pos:end="33:156">PIX_FMT_RGB32</name> <operator pos:start="33:158" pos:end="33:159">&amp;&amp;</operator>

           <operator pos:start="35:12" pos:end="35:12">(</operator><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:27"><name pos:start="35:14" pos:end="35:18">avctx</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:27">pix_fmt</name></name> <operator pos:start="35:29" pos:end="35:30">!=</operator> <name pos:start="35:32" pos:end="35:46">PIX_FMT_YUV420P</name> <operator pos:start="35:48" pos:end="35:49">&amp;&amp;</operator> <name pos:start="35:51" pos:end="35:64"><name pos:start="35:51" pos:end="35:55">avctx</name><operator pos:start="35:56" pos:end="35:57">-&gt;</operator><name pos:start="35:58" pos:end="35:64">pix_fmt</name></name> <operator pos:start="35:66" pos:end="35:67">!=</operator> <name pos:start="35:69" pos:end="35:83">PIX_FMT_YUV422P</name> <operator pos:start="35:85" pos:end="35:86">&amp;&amp;</operator> <name pos:start="35:88" pos:end="35:101"><name pos:start="35:88" pos:end="35:92">avctx</name><operator pos:start="35:93" pos:end="35:94">-&gt;</operator><name pos:start="35:95" pos:end="35:101">pix_fmt</name></name> <operator pos:start="35:103" pos:end="35:104">!=</operator> <name pos:start="35:106" pos:end="35:120">PIX_FMT_YUV444P</name><operator pos:start="35:121" pos:end="35:121">)</operator> <operator pos:start="35:123" pos:end="35:124">||</operator> <name pos:start="35:126" pos:end="35:153"><name pos:start="35:126" pos:end="35:130">avctx</name><operator pos:start="35:131" pos:end="35:132">-&gt;</operator><name pos:start="35:133" pos:end="35:153">strict_std_compliance</name></name><operator pos:start="35:154" pos:end="35:154">&gt;</operator><name pos:start="35:155" pos:end="35:178">FF_COMPLIANCE_UNOFFICIAL</name><operator pos:start="35:179" pos:end="35:179">)</operator></expr>)</condition><block pos:start="35:181" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:22">

            <expr_stmt pos:start="37:13" pos:end="37:79"><expr pos:start="37:13" pos:end="37:78"><call pos:start="37:13" pos:end="37:78"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:78">(<argument pos:start="37:20" pos:end="37:24"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24">avctx</name></expr></argument>, <argument pos:start="37:27" pos:end="37:38"><expr pos:start="37:27" pos:end="37:38"><name pos:start="37:27" pos:end="37:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:41" pos:end="37:77"><expr pos:start="37:41" pos:end="37:77"><literal type="string" pos:start="37:41" pos:end="37:77">"colorspace not supported in LJPEG\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:24">case <expr pos:start="45:10" pos:end="45:23"><name pos:start="45:10" pos:end="45:23">CODEC_ID_MJPEG</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if<condition pos:start="47:11" pos:end="49:143">(<expr pos:start="47:12" pos:end="49:142"><name pos:start="47:12" pos:end="47:25"><name pos:start="47:12" pos:end="47:16">avctx</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:25">pix_fmt</name></name> <operator pos:start="47:27" pos:end="47:28">!=</operator> <name pos:start="47:30" pos:end="47:45">PIX_FMT_YUVJ420P</name> <operator pos:start="47:47" pos:end="47:48">&amp;&amp;</operator> <name pos:start="47:50" pos:end="47:63"><name pos:start="47:50" pos:end="47:54">avctx</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:63">pix_fmt</name></name> <operator pos:start="47:65" pos:end="47:66">!=</operator> <name pos:start="47:68" pos:end="47:83">PIX_FMT_YUVJ422P</name> <operator pos:start="47:85" pos:end="47:86">&amp;&amp;</operator>

           <operator pos:start="49:12" pos:end="49:12">(</operator><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:18">avctx</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:27">pix_fmt</name></name> <operator pos:start="49:29" pos:end="49:30">!=</operator> <name pos:start="49:32" pos:end="49:46">PIX_FMT_YUV420P</name> <operator pos:start="49:48" pos:end="49:49">&amp;&amp;</operator> <name pos:start="49:51" pos:end="49:64"><name pos:start="49:51" pos:end="49:55">avctx</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:64">pix_fmt</name></name> <operator pos:start="49:66" pos:end="49:67">!=</operator> <name pos:start="49:69" pos:end="49:83">PIX_FMT_YUV422P</name><operator pos:start="49:84" pos:end="49:84">)</operator> <operator pos:start="49:86" pos:end="49:87">||</operator> <name pos:start="49:89" pos:end="49:116"><name pos:start="49:89" pos:end="49:93">avctx</name><operator pos:start="49:94" pos:end="49:95">-&gt;</operator><name pos:start="49:96" pos:end="49:116">strict_std_compliance</name></name><operator pos:start="49:117" pos:end="49:117">&gt;</operator><name pos:start="49:118" pos:end="49:141">FF_COMPLIANCE_UNOFFICIAL</name><operator pos:start="49:142" pos:end="49:142">)</operator></expr>)</condition><block pos:start="49:144" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:22">

            <expr_stmt pos:start="51:13" pos:end="51:78"><expr pos:start="51:13" pos:end="51:77"><call pos:start="51:13" pos:end="51:77"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:77">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:41" pos:end="51:76"><expr pos:start="51:41" pos:end="51:76"><literal type="string" pos:start="51:41" pos:end="51:76">"colorspace not supported in jpeg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:22">return <expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if<condition pos:start="61:11" pos:end="61:45">(<expr pos:start="61:12" pos:end="61:44"><name pos:start="61:12" pos:end="61:25"><name pos:start="61:12" pos:end="61:16">avctx</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:25">pix_fmt</name></name> <operator pos:start="61:27" pos:end="61:28">!=</operator> <name pos:start="61:30" pos:end="61:44">PIX_FMT_YUV420P</name></expr>)</condition><block pos:start="61:46" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:70"><expr pos:start="63:13" pos:end="63:69"><call pos:start="63:13" pos:end="63:69"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="63:69">(<argument pos:start="63:20" pos:end="63:24"><expr pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:24">avctx</name></expr></argument>, <argument pos:start="63:27" pos:end="63:38"><expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:41" pos:end="63:68"><expr pos:start="63:41" pos:end="63:68"><literal type="string" pos:start="63:41" pos:end="63:68">"only YUV420 is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></switch>



    <switch pos:start="73:5" pos:end="93:5">switch <condition pos:start="73:12" pos:end="73:27">(<expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:17">avctx</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:26">pix_fmt</name></name></expr>)</condition> <block pos:start="73:29" pos:end="93:5">{<block_content pos:start="75:5" pos:end="91:14">

    <case pos:start="75:5" pos:end="75:26">case <expr pos:start="75:10" pos:end="75:25"><name pos:start="75:10" pos:end="75:25">PIX_FMT_YUVJ422P</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:25">case <expr pos:start="77:10" pos:end="77:24"><name pos:start="77:10" pos:end="77:24">PIX_FMT_YUV422P</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:24">chroma_format</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:37">CHROMA_422</name></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:26">case <expr pos:start="83:10" pos:end="83:25"><name pos:start="83:10" pos:end="83:25">PIX_FMT_YUVJ420P</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:25">case <expr pos:start="85:10" pos:end="85:24"><name pos:start="85:10" pos:end="85:24">PIX_FMT_YUV420P</name></expr>:</case>

    <default pos:start="87:5" pos:end="87:12">default:</default>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:24">chroma_format</name></name> <operator pos:start="89:26" pos:end="89:26">=</operator> <name pos:start="89:28" pos:end="89:37">CHROMA_420</name></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="97:5" pos:end="97:34"><expr pos:start="97:5" pos:end="97:33"><name pos:start="97:5" pos:end="97:15"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:15">bit_rate</name></name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:33"><name pos:start="97:19" pos:end="97:23">avctx</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:28"><expr pos:start="99:5" pos:end="99:27"><name pos:start="99:5" pos:end="99:12"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:12">width</name></name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:27"><name pos:start="99:16" pos:end="99:20">avctx</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:30"><expr pos:start="101:5" pos:end="101:29"><name pos:start="101:5" pos:end="101:13"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:13">height</name></name> <operator pos:start="101:15" pos:end="101:15">=</operator> <name pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:21">avctx</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:29">height</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if<condition pos:start="103:7" pos:end="103:88">(<expr pos:start="103:8" pos:end="103:87"><name pos:start="103:8" pos:end="103:22"><name pos:start="103:8" pos:end="103:12">avctx</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:22">gop_size</name></name> <operator pos:start="103:24" pos:end="103:24">&gt;</operator> <literal type="number" pos:start="103:26" pos:end="103:28">600</literal> <operator pos:start="103:30" pos:end="103:31">&amp;&amp;</operator> <name pos:start="103:33" pos:end="103:60"><name pos:start="103:33" pos:end="103:37">avctx</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:60">strict_std_compliance</name></name><operator pos:start="103:61" pos:end="103:61">&gt;</operator><name pos:start="103:62" pos:end="103:87">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition><block pos:start="103:89" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:28">

        <expr_stmt pos:start="105:9" pos:end="105:94"><expr pos:start="105:9" pos:end="105:93"><call pos:start="105:9" pos:end="105:93"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:93">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:37" pos:end="105:92"><expr pos:start="105:37" pos:end="105:92"><literal type="string" pos:start="105:37" pos:end="105:92">"Warning keyframe interval too large! reducing it ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:28"><expr pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:13">avctx</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:23">gop_size</name></name><operator pos:start="107:24" pos:end="107:24">=</operator><literal type="number" pos:start="107:25" pos:end="107:27">600</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:34"><expr pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:15">gop_size</name></name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:33"><name pos:start="111:19" pos:end="111:23">avctx</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:33">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:21"><expr pos:start="113:5" pos:end="113:20"><name pos:start="113:5" pos:end="113:12"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:12">avctx</name></name> <operator pos:start="113:14" pos:end="113:14">=</operator> <name pos:start="113:16" pos:end="113:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:27"><expr pos:start="115:5" pos:end="115:26"><name pos:start="115:5" pos:end="115:12"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:12">flags</name></name><operator pos:start="115:13" pos:end="115:13">=</operator> <name pos:start="115:15" pos:end="115:26"><name pos:start="115:15" pos:end="115:19">avctx</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:26">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:29"><expr pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:13"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:13">flags2</name></name><operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:28"><name pos:start="117:16" pos:end="117:20">avctx</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:28">flags2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:41"><expr pos:start="119:5" pos:end="119:40"><name pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:19">max_b_frames</name></name><operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:40"><name pos:start="119:22" pos:end="119:26">avctx</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:40">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:34"><expr pos:start="121:5" pos:end="121:33"><name pos:start="121:5" pos:end="121:15"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:15">codec_id</name></name><operator pos:start="121:16" pos:end="121:16">=</operator> <name pos:start="121:18" pos:end="121:33"><name pos:start="121:18" pos:end="121:22">avctx</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:29">codec</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:33">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:57"><expr pos:start="123:5" pos:end="123:56"><name pos:start="123:5" pos:end="123:26"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:26">luma_elim_threshold</name></name>  <operator pos:start="123:29" pos:end="123:29">=</operator> <name pos:start="123:31" pos:end="123:56"><name pos:start="123:31" pos:end="123:35">avctx</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:56">luma_elim_threshold</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:59"><expr pos:start="125:5" pos:end="125:58"><name pos:start="125:5" pos:end="125:28"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:28">chroma_elim_threshold</name></name><operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:58"><name pos:start="125:31" pos:end="125:35">avctx</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:58">chroma_elim_threshold</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:59"><expr pos:start="127:5" pos:end="127:58"><name pos:start="127:5" pos:end="127:28"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:28">strict_std_compliance</name></name><operator pos:start="127:29" pos:end="127:29">=</operator> <name pos:start="127:31" pos:end="127:58"><name pos:start="127:31" pos:end="127:35">avctx</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:58">strict_std_compliance</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:57"><expr pos:start="129:5" pos:end="129:56"><name pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:24">data_partitioning</name></name><operator pos:start="129:25" pos:end="129:25">=</operator> <name pos:start="129:27" pos:end="129:38"><name pos:start="129:27" pos:end="129:31">avctx</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:38">flags</name></name> <operator pos:start="129:40" pos:end="129:40">&amp;</operator> <name pos:start="129:42" pos:end="129:56">CODEC_FLAG_PART</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:59"><expr pos:start="131:5" pos:end="131:58"><name pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:21">quarter_sample</name></name><operator pos:start="131:22" pos:end="131:22">=</operator> <operator pos:start="131:24" pos:end="131:24">(</operator><name pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:29">avctx</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:36">flags</name></name> <operator pos:start="131:38" pos:end="131:38">&amp;</operator> <name pos:start="131:40" pos:end="131:54">CODEC_FLAG_QPEL</name><operator pos:start="131:55" pos:end="131:55">)</operator><operator pos:start="131:56" pos:end="131:57">!=</operator><literal type="number" pos:start="131:58" pos:end="131:58">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:37"><expr pos:start="133:5" pos:end="133:36"><name pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:17">mpeg_quant</name></name><operator pos:start="133:18" pos:end="133:18">=</operator> <name pos:start="133:20" pos:end="133:36"><name pos:start="133:20" pos:end="133:24">avctx</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:36">mpeg_quant</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:43"><expr pos:start="135:5" pos:end="135:42"><name pos:start="135:5" pos:end="135:15"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:15">rtp_mode</name></name><operator pos:start="135:16" pos:end="135:16">=</operator> <operator pos:start="135:18" pos:end="135:18">!</operator><operator pos:start="135:19" pos:end="135:19">!</operator><name pos:start="135:20" pos:end="135:42"><name pos:start="135:20" pos:end="135:24">avctx</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:42">rtp_payload_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:53"><expr pos:start="137:5" pos:end="137:52"><name pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:25">intra_dc_precision</name></name><operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:52"><name pos:start="137:28" pos:end="137:32">avctx</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:52">intra_dc_precision</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:43"><expr pos:start="139:5" pos:end="139:42"><name pos:start="139:5" pos:end="139:25"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:25">user_specified_pts</name></name> <operator pos:start="139:27" pos:end="139:27">=</operator> <name pos:start="139:29" pos:end="139:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="153:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:25">(<expr pos:start="143:9" pos:end="143:24"><name pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:19">gop_size</name></name> <operator pos:start="143:21" pos:end="143:22">&lt;=</operator> <literal type="number" pos:start="143:24" pos:end="143:24">1</literal></expr>)</condition> <block pos:start="143:27" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:25">

        <expr_stmt pos:start="145:9" pos:end="145:26"><expr pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:21">intra_only</name></name> <operator pos:start="145:23" pos:end="145:23">=</operator> <literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:25"><expr pos:start="147:9" pos:end="147:24"><name pos:start="147:9" pos:end="147:19"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:19">gop_size</name></name> <operator pos:start="147:21" pos:end="147:21">=</operator> <literal type="number" pos:start="147:23" pos:end="147:24">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="153:5">else <block pos:start="149:12" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:26">

        <expr_stmt pos:start="151:9" pos:end="151:26"><expr pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:21">intra_only</name></name> <operator pos:start="151:23" pos:end="151:23">=</operator> <literal type="number" pos:start="151:25" pos:end="151:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:36"><expr pos:start="157:5" pos:end="157:35"><name pos:start="157:5" pos:end="157:16"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:16">me_method</name></name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:35"><name pos:start="157:20" pos:end="157:24">avctx</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:35">me_method</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:22">/* Fixed QSCALE */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:59"><expr pos:start="163:5" pos:end="163:58"><name pos:start="163:5" pos:end="163:19"><name pos:start="163:5" pos:end="163:5">s</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:19">fixed_qscale</name></name> <operator pos:start="163:21" pos:end="163:21">=</operator> <operator pos:start="163:23" pos:end="163:23">!</operator><operator pos:start="163:24" pos:end="163:24">!</operator><operator pos:start="163:25" pos:end="163:25">(</operator><name pos:start="163:26" pos:end="163:37"><name pos:start="163:26" pos:end="163:30">avctx</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:37">flags</name></name> <operator pos:start="163:39" pos:end="163:39">&amp;</operator> <name pos:start="163:41" pos:end="163:57">CODEC_FLAG_QSCALE</name><operator pos:start="163:58" pos:end="163:58">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="181:43"><expr pos:start="167:5" pos:end="181:42"><name pos:start="167:5" pos:end="167:21"><name pos:start="167:5" pos:end="167:5">s</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:21">adaptive_quant</name></name><operator pos:start="167:22" pos:end="167:22">=</operator> <operator pos:start="167:24" pos:end="167:24">(</operator>   <name pos:start="167:28" pos:end="167:49"><name pos:start="167:28" pos:end="167:28">s</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:35">avctx</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:49">lumi_masking</name></name>

                        <operator pos:start="169:25" pos:end="169:26">||</operator> <name pos:start="169:28" pos:end="169:49"><name pos:start="169:28" pos:end="169:28">s</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:35">avctx</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:49">dark_masking</name></name>

                        <operator pos:start="171:25" pos:end="171:26">||</operator> <name pos:start="171:28" pos:end="171:58"><name pos:start="171:28" pos:end="171:28">s</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:35">avctx</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:58">temporal_cplx_masking</name></name>

                        <operator pos:start="173:25" pos:end="173:26">||</operator> <name pos:start="173:28" pos:end="173:57"><name pos:start="173:28" pos:end="173:28">s</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:35">avctx</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:57">spatial_cplx_masking</name></name>

                        <operator pos:start="175:25" pos:end="175:26">||</operator> <name pos:start="175:28" pos:end="175:46"><name pos:start="175:28" pos:end="175:28">s</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:35">avctx</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:46">p_masking</name></name>

                        <operator pos:start="177:25" pos:end="177:26">||</operator> <name pos:start="177:28" pos:end="177:51"><name pos:start="177:28" pos:end="177:28">s</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:35">avctx</name><operator pos:start="177:36" pos:end="177:37">-&gt;</operator><name pos:start="177:38" pos:end="177:51">border_masking</name></name>

                        <operator pos:start="179:25" pos:end="179:26">||</operator> <operator pos:start="179:28" pos:end="179:28">(</operator><name pos:start="179:29" pos:end="179:36"><name pos:start="179:29" pos:end="179:29">s</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:36">flags</name></name><operator pos:start="179:37" pos:end="179:37">&amp;</operator><name pos:start="179:38" pos:end="179:53">CODEC_FLAG_QP_RD</name><operator pos:start="179:54" pos:end="179:54">)</operator><operator pos:start="179:55" pos:end="179:55">)</operator>

                       <operator pos:start="181:24" pos:end="181:25">&amp;&amp;</operator> <operator pos:start="181:27" pos:end="181:27">!</operator><name pos:start="181:28" pos:end="181:42"><name pos:start="181:28" pos:end="181:28">s</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:42">fixed_qscale</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:44"><expr pos:start="185:5" pos:end="185:43"><name pos:start="185:5" pos:end="185:11"><name pos:start="185:5" pos:end="185:5">s</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:11">obmc</name></name><operator pos:start="185:12" pos:end="185:12">=</operator> <operator pos:start="185:14" pos:end="185:14">!</operator><operator pos:start="185:15" pos:end="185:15">!</operator><operator pos:start="185:16" pos:end="185:16">(</operator><name pos:start="185:17" pos:end="185:24"><name pos:start="185:17" pos:end="185:17">s</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:24">flags</name></name> <operator pos:start="185:26" pos:end="185:26">&amp;</operator> <name pos:start="185:28" pos:end="185:42">CODEC_FLAG_OBMC</name><operator pos:start="185:43" pos:end="185:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:58"><expr pos:start="187:5" pos:end="187:57"><name pos:start="187:5" pos:end="187:18"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:18">loop_filter</name></name><operator pos:start="187:19" pos:end="187:19">=</operator> <operator pos:start="187:21" pos:end="187:21">!</operator><operator pos:start="187:22" pos:end="187:22">!</operator><operator pos:start="187:23" pos:end="187:23">(</operator><name pos:start="187:24" pos:end="187:31"><name pos:start="187:24" pos:end="187:24">s</name><operator pos:start="187:25" pos:end="187:26">-&gt;</operator><name pos:start="187:27" pos:end="187:31">flags</name></name> <operator pos:start="187:33" pos:end="187:33">&amp;</operator> <name pos:start="187:35" pos:end="187:56">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="187:57" pos:end="187:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:58"><expr pos:start="189:5" pos:end="189:57"><name pos:start="189:5" pos:end="189:21"><name pos:start="189:5" pos:end="189:5">s</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:21">alternate_scan</name></name><operator pos:start="189:22" pos:end="189:22">=</operator> <operator pos:start="189:24" pos:end="189:24">!</operator><operator pos:start="189:25" pos:end="189:25">!</operator><operator pos:start="189:26" pos:end="189:26">(</operator><name pos:start="189:27" pos:end="189:34"><name pos:start="189:27" pos:end="189:27">s</name><operator pos:start="189:28" pos:end="189:29">-&gt;</operator><name pos:start="189:30" pos:end="189:34">flags</name></name> <operator pos:start="189:36" pos:end="189:36">&amp;</operator> <name pos:start="189:38" pos:end="189:56">CODEC_FLAG_ALT_SCAN</name><operator pos:start="189:57" pos:end="189:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:63"><expr pos:start="191:5" pos:end="191:62"><name pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:5">s</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:23">intra_vlc_format</name></name><operator pos:start="191:24" pos:end="191:24">=</operator> <operator pos:start="191:26" pos:end="191:26">!</operator><operator pos:start="191:27" pos:end="191:27">!</operator><operator pos:start="191:28" pos:end="191:28">(</operator><name pos:start="191:29" pos:end="191:37"><name pos:start="191:29" pos:end="191:29">s</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:37">flags2</name></name> <operator pos:start="191:39" pos:end="191:39">&amp;</operator> <name pos:start="191:41" pos:end="191:61">CODEC_FLAG2_INTRA_VLC</name><operator pos:start="191:62" pos:end="191:62">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:66"><expr pos:start="193:5" pos:end="193:65"><name pos:start="193:5" pos:end="193:19"><name pos:start="193:5" pos:end="193:5">s</name><operator pos:start="193:6" pos:end="193:7">-&gt;</operator><name pos:start="193:8" pos:end="193:19">q_scale_type</name></name><operator pos:start="193:20" pos:end="193:20">=</operator> <operator pos:start="193:22" pos:end="193:22">!</operator><operator pos:start="193:23" pos:end="193:23">!</operator><operator pos:start="193:24" pos:end="193:24">(</operator><name pos:start="193:25" pos:end="193:33"><name pos:start="193:25" pos:end="193:25">s</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:33">flags2</name></name> <operator pos:start="193:35" pos:end="193:35">&amp;</operator> <name pos:start="193:37" pos:end="193:64">CODEC_FLAG2_NON_LINEAR_QUANT</name><operator pos:start="193:65" pos:end="193:65">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if<condition pos:start="197:7" pos:end="197:52">(<expr pos:start="197:8" pos:end="197:51"><name pos:start="197:8" pos:end="197:25"><name pos:start="197:8" pos:end="197:12">avctx</name><operator pos:start="197:13" pos:end="197:14">-&gt;</operator><name pos:start="197:15" pos:end="197:25">rc_max_rate</name></name> <operator pos:start="197:27" pos:end="197:28">&amp;&amp;</operator> <operator pos:start="197:30" pos:end="197:30">!</operator><name pos:start="197:31" pos:end="197:51"><name pos:start="197:31" pos:end="197:35">avctx</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:51">rc_buffer_size</name></name></expr>)</condition><block pos:start="197:53" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:18">

        <expr_stmt pos:start="199:9" pos:end="199:106"><expr pos:start="199:9" pos:end="199:105"><call pos:start="199:9" pos:end="199:105"><name pos:start="199:9" pos:end="199:14">av_log</name><argument_list pos:start="199:15" pos:end="199:105">(<argument pos:start="199:16" pos:end="199:20"><expr pos:start="199:16" pos:end="199:20"><name pos:start="199:16" pos:end="199:20">avctx</name></expr></argument>, <argument pos:start="199:23" pos:end="199:34"><expr pos:start="199:23" pos:end="199:34"><name pos:start="199:23" pos:end="199:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="199:37" pos:end="199:104"><expr pos:start="199:37" pos:end="199:104"><literal type="string" pos:start="199:37" pos:end="199:104">"a vbv buffer size is needed, for encoding with a maximum bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="201:9" pos:end="201:18">return <expr pos:start="201:16" pos:end="201:17"><operator pos:start="201:16" pos:end="201:16">-</operator><literal type="number" pos:start="201:17" pos:end="201:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="207:5" pos:end="211:5"><if pos:start="207:5" pos:end="211:5">if<condition pos:start="207:7" pos:end="207:70">(<expr pos:start="207:8" pos:end="207:69"><name pos:start="207:8" pos:end="207:25"><name pos:start="207:8" pos:end="207:12">avctx</name><operator pos:start="207:13" pos:end="207:14">-&gt;</operator><name pos:start="207:15" pos:end="207:25">rc_min_rate</name></name> <operator pos:start="207:27" pos:end="207:28">&amp;&amp;</operator> <name pos:start="207:30" pos:end="207:47"><name pos:start="207:30" pos:end="207:34">avctx</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:47">rc_max_rate</name></name> <operator pos:start="207:49" pos:end="207:50">!=</operator> <name pos:start="207:52" pos:end="207:69"><name pos:start="207:52" pos:end="207:56">avctx</name><operator pos:start="207:57" pos:end="207:58">-&gt;</operator><name pos:start="207:59" pos:end="207:69">rc_min_rate</name></name></expr>)</condition><block pos:start="207:71" pos:end="211:5">{<block_content pos:start="209:9" pos:end="209:105">

        <expr_stmt pos:start="209:9" pos:end="209:105"><expr pos:start="209:9" pos:end="209:104"><call pos:start="209:9" pos:end="209:104"><name pos:start="209:9" pos:end="209:14">av_log</name><argument_list pos:start="209:15" pos:end="209:104">(<argument pos:start="209:16" pos:end="209:20"><expr pos:start="209:16" pos:end="209:20"><name pos:start="209:16" pos:end="209:20">avctx</name></expr></argument>, <argument pos:start="209:23" pos:end="209:33"><expr pos:start="209:23" pos:end="209:33"><name pos:start="209:23" pos:end="209:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="209:36" pos:end="209:103"><expr pos:start="209:36" pos:end="209:103"><literal type="string" pos:start="209:36" pos:end="209:103">"Warning min_rate &gt; 0 but min_rate != max_rate isn't recommended!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="215:5" pos:end="221:5"><if pos:start="215:5" pos:end="221:5">if<condition pos:start="215:7" pos:end="215:66">(<expr pos:start="215:8" pos:end="215:65"><name pos:start="215:8" pos:end="215:25"><name pos:start="215:8" pos:end="215:12">avctx</name><operator pos:start="215:13" pos:end="215:14">-&gt;</operator><name pos:start="215:15" pos:end="215:25">rc_min_rate</name></name> <operator pos:start="215:27" pos:end="215:28">&amp;&amp;</operator> <name pos:start="215:30" pos:end="215:47"><name pos:start="215:30" pos:end="215:34">avctx</name><operator pos:start="215:35" pos:end="215:36">-&gt;</operator><name pos:start="215:37" pos:end="215:47">rc_min_rate</name></name> <operator pos:start="215:49" pos:end="215:49">&gt;</operator> <name pos:start="215:51" pos:end="215:65"><name pos:start="215:51" pos:end="215:55">avctx</name><operator pos:start="215:56" pos:end="215:57">-&gt;</operator><name pos:start="215:58" pos:end="215:65">bit_rate</name></name></expr>)</condition><block pos:start="215:67" pos:end="221:5">{<block_content pos:start="217:9" pos:end="219:18">

        <expr_stmt pos:start="217:9" pos:end="217:67"><expr pos:start="217:9" pos:end="217:66"><call pos:start="217:9" pos:end="217:66"><name pos:start="217:9" pos:end="217:14">av_log</name><argument_list pos:start="217:15" pos:end="217:66">(<argument pos:start="217:16" pos:end="217:20"><expr pos:start="217:16" pos:end="217:20"><name pos:start="217:16" pos:end="217:20">avctx</name></expr></argument>, <argument pos:start="217:23" pos:end="217:34"><expr pos:start="217:23" pos:end="217:34"><name pos:start="217:23" pos:end="217:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:37" pos:end="217:65"><expr pos:start="217:37" pos:end="217:65"><literal type="string" pos:start="217:37" pos:end="217:65">"bitrate below min bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="219:9" pos:end="219:18">return <expr pos:start="219:16" pos:end="219:17"><operator pos:start="219:16" pos:end="219:16">-</operator><literal type="number" pos:start="219:17" pos:end="219:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="225:5" pos:end="231:5"><if pos:start="225:5" pos:end="231:5">if<condition pos:start="225:7" pos:end="225:66">(<expr pos:start="225:8" pos:end="225:65"><name pos:start="225:8" pos:end="225:25"><name pos:start="225:8" pos:end="225:12">avctx</name><operator pos:start="225:13" pos:end="225:14">-&gt;</operator><name pos:start="225:15" pos:end="225:25">rc_max_rate</name></name> <operator pos:start="225:27" pos:end="225:28">&amp;&amp;</operator> <name pos:start="225:30" pos:end="225:47"><name pos:start="225:30" pos:end="225:34">avctx</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:47">rc_max_rate</name></name> <operator pos:start="225:49" pos:end="225:49">&lt;</operator> <name pos:start="225:51" pos:end="225:65"><name pos:start="225:51" pos:end="225:55">avctx</name><operator pos:start="225:56" pos:end="225:57">-&gt;</operator><name pos:start="225:58" pos:end="225:65">bit_rate</name></name></expr>)</condition><block pos:start="225:67" pos:end="231:5">{<block_content pos:start="227:9" pos:end="229:18">

        <expr_stmt pos:start="227:9" pos:end="227:66"><expr pos:start="227:9" pos:end="227:65"><call pos:start="227:9" pos:end="227:65"><name pos:start="227:9" pos:end="227:14">av_log</name><argument_list pos:start="227:15" pos:end="227:65">(<argument pos:start="227:16" pos:end="227:20"><expr pos:start="227:16" pos:end="227:20"><name pos:start="227:16" pos:end="227:20">avctx</name></expr></argument>, <argument pos:start="227:23" pos:end="227:33"><expr pos:start="227:23" pos:end="227:33"><name pos:start="227:23" pos:end="227:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="227:36" pos:end="227:64"><expr pos:start="227:36" pos:end="227:64"><literal type="string" pos:start="227:36" pos:end="227:64">"bitrate above max bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="229:9" pos:end="229:18">return <expr pos:start="229:16" pos:end="229:17"><operator pos:start="229:16" pos:end="229:16">-</operator><literal type="number" pos:start="229:17" pos:end="229:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="239:5"><if pos:start="235:5" pos:end="239:5">if<condition pos:start="235:7" pos:end="235:111">(<expr pos:start="235:8" pos:end="235:110"><name pos:start="235:8" pos:end="235:25"><name pos:start="235:8" pos:end="235:12">avctx</name><operator pos:start="235:13" pos:end="235:14">-&gt;</operator><name pos:start="235:15" pos:end="235:25">rc_max_rate</name></name> <operator pos:start="235:27" pos:end="235:28">&amp;&amp;</operator> <name pos:start="235:30" pos:end="235:47"><name pos:start="235:30" pos:end="235:34">avctx</name><operator pos:start="235:35" pos:end="235:36">-&gt;</operator><name pos:start="235:37" pos:end="235:47">rc_max_rate</name></name> <operator pos:start="235:49" pos:end="235:50">==</operator> <name pos:start="235:52" pos:end="235:66"><name pos:start="235:52" pos:end="235:56">avctx</name><operator pos:start="235:57" pos:end="235:58">-&gt;</operator><name pos:start="235:59" pos:end="235:66">bit_rate</name></name> <operator pos:start="235:68" pos:end="235:69">&amp;&amp;</operator> <name pos:start="235:71" pos:end="235:88"><name pos:start="235:71" pos:end="235:75">avctx</name><operator pos:start="235:76" pos:end="235:77">-&gt;</operator><name pos:start="235:78" pos:end="235:88">rc_max_rate</name></name> <operator pos:start="235:90" pos:end="235:91">!=</operator> <name pos:start="235:93" pos:end="235:110"><name pos:start="235:93" pos:end="235:97">avctx</name><operator pos:start="235:98" pos:end="235:99">-&gt;</operator><name pos:start="235:100" pos:end="235:110">rc_min_rate</name></name></expr>)</condition><block pos:start="235:112" pos:end="239:5">{<block_content pos:start="237:9" pos:end="237:87">

        <expr_stmt pos:start="237:9" pos:end="237:87"><expr pos:start="237:9" pos:end="237:86"><call pos:start="237:9" pos:end="237:86"><name pos:start="237:9" pos:end="237:14">av_log</name><argument_list pos:start="237:15" pos:end="237:86">(<argument pos:start="237:16" pos:end="237:20"><expr pos:start="237:16" pos:end="237:20"><name pos:start="237:16" pos:end="237:20">avctx</name></expr></argument>, <argument pos:start="237:23" pos:end="237:33"><expr pos:start="237:23" pos:end="237:33"><name pos:start="237:23" pos:end="237:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="237:36" pos:end="237:85"><expr pos:start="237:36" pos:end="237:85"><literal type="string" pos:start="237:36" pos:end="237:85">"impossible bitrate constraints, this will fail\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="243:5" pos:end="249:5"><if pos:start="243:5" pos:end="249:5">if<condition pos:start="243:7" pos:end="243:134">(<expr pos:start="243:8" pos:end="243:133"><name pos:start="243:8" pos:end="243:28"><name pos:start="243:8" pos:end="243:12">avctx</name><operator pos:start="243:13" pos:end="243:14">-&gt;</operator><name pos:start="243:15" pos:end="243:28">rc_buffer_size</name></name> <operator pos:start="243:30" pos:end="243:31">&amp;&amp;</operator> <name pos:start="243:33" pos:end="243:47"><name pos:start="243:33" pos:end="243:37">avctx</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:47">bit_rate</name></name><operator pos:start="243:48" pos:end="243:48">*</operator><operator pos:start="243:49" pos:end="243:49">(</operator><name pos:start="243:50" pos:end="243:56">int64_t</name><operator pos:start="243:57" pos:end="243:57">)</operator><name pos:start="243:58" pos:end="243:77"><name pos:start="243:58" pos:end="243:62">avctx</name><operator pos:start="243:63" pos:end="243:64">-&gt;</operator><name pos:start="243:65" pos:end="243:73">time_base</name><operator pos:start="243:74" pos:end="243:74">.</operator><name pos:start="243:75" pos:end="243:77">num</name></name> <operator pos:start="243:79" pos:end="243:79">&gt;</operator> <name pos:start="243:81" pos:end="243:101"><name pos:start="243:81" pos:end="243:85">avctx</name><operator pos:start="243:86" pos:end="243:87">-&gt;</operator><name pos:start="243:88" pos:end="243:101">rc_buffer_size</name></name> <operator pos:start="243:103" pos:end="243:103">*</operator> <operator pos:start="243:105" pos:end="243:105">(</operator><name pos:start="243:106" pos:end="243:112">int64_t</name><operator pos:start="243:113" pos:end="243:113">)</operator><name pos:start="243:114" pos:end="243:133"><name pos:start="243:114" pos:end="243:118">avctx</name><operator pos:start="243:119" pos:end="243:120">-&gt;</operator><name pos:start="243:121" pos:end="243:129">time_base</name><operator pos:start="243:130" pos:end="243:130">.</operator><name pos:start="243:131" pos:end="243:133">den</name></name></expr>)</condition><block pos:start="243:135" pos:end="249:5">{<block_content pos:start="245:9" pos:end="247:18">

        <expr_stmt pos:start="245:9" pos:end="245:74"><expr pos:start="245:9" pos:end="245:73"><call pos:start="245:9" pos:end="245:73"><name pos:start="245:9" pos:end="245:14">av_log</name><argument_list pos:start="245:15" pos:end="245:73">(<argument pos:start="245:16" pos:end="245:20"><expr pos:start="245:16" pos:end="245:20"><name pos:start="245:16" pos:end="245:20">avctx</name></expr></argument>, <argument pos:start="245:23" pos:end="245:34"><expr pos:start="245:23" pos:end="245:34"><name pos:start="245:23" pos:end="245:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="245:37" pos:end="245:72"><expr pos:start="245:37" pos:end="245:72"><literal type="string" pos:start="245:37" pos:end="245:72">"VBV buffer too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="247:9" pos:end="247:18">return <expr pos:start="247:16" pos:end="247:17"><operator pos:start="247:16" pos:end="247:16">-</operator><literal type="number" pos:start="247:17" pos:end="247:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="253:5" pos:end="259:5"><if pos:start="253:5" pos:end="259:5">if<condition pos:start="253:7" pos:end="253:96">(<expr pos:start="253:8" pos:end="253:95"><operator pos:start="253:8" pos:end="253:8">!</operator><name pos:start="253:9" pos:end="253:23"><name pos:start="253:9" pos:end="253:9">s</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:23">fixed_qscale</name></name> <operator pos:start="253:25" pos:end="253:26">&amp;&amp;</operator> <name pos:start="253:28" pos:end="253:42"><name pos:start="253:28" pos:end="253:32">avctx</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:42">bit_rate</name></name><operator pos:start="253:43" pos:end="253:43">*</operator><call pos:start="253:44" pos:end="253:67"><name pos:start="253:44" pos:end="253:49">av_q2d</name><argument_list pos:start="253:50" pos:end="253:67">(<argument pos:start="253:51" pos:end="253:66"><expr pos:start="253:51" pos:end="253:66"><name pos:start="253:51" pos:end="253:66"><name pos:start="253:51" pos:end="253:55">avctx</name><operator pos:start="253:56" pos:end="253:57">-&gt;</operator><name pos:start="253:58" pos:end="253:66">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="253:69" pos:end="253:69">&gt;</operator> <name pos:start="253:71" pos:end="253:95"><name pos:start="253:71" pos:end="253:75">avctx</name><operator pos:start="253:76" pos:end="253:77">-&gt;</operator><name pos:start="253:78" pos:end="253:95">bit_rate_tolerance</name></name></expr>)</condition><block pos:start="253:97" pos:end="259:5">{<block_content pos:start="255:9" pos:end="257:18">

        <expr_stmt pos:start="255:9" pos:end="255:81"><expr pos:start="255:9" pos:end="255:80"><call pos:start="255:9" pos:end="255:80"><name pos:start="255:9" pos:end="255:14">av_log</name><argument_list pos:start="255:15" pos:end="255:80">(<argument pos:start="255:16" pos:end="255:20"><expr pos:start="255:16" pos:end="255:20"><name pos:start="255:16" pos:end="255:20">avctx</name></expr></argument>, <argument pos:start="255:23" pos:end="255:34"><expr pos:start="255:23" pos:end="255:34"><name pos:start="255:23" pos:end="255:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="255:37" pos:end="255:79"><expr pos:start="255:37" pos:end="255:79"><literal type="string" pos:start="255:37" pos:end="255:79">"bitrate tolerance too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="257:9" pos:end="257:18">return <expr pos:start="257:16" pos:end="257:17"><operator pos:start="257:16" pos:end="257:16">-</operator><literal type="number" pos:start="257:17" pos:end="257:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="263:5" pos:end="273:5"><if pos:start="263:5" pos:end="273:5">if<condition pos:start="263:7" pos:end="267:79">(   <expr pos:start="263:11" pos:end="267:78"><name pos:start="263:11" pos:end="263:31"><name pos:start="263:11" pos:end="263:11">s</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:18">avctx</name><operator pos:start="263:19" pos:end="263:20">-&gt;</operator><name pos:start="263:21" pos:end="263:31">rc_max_rate</name></name> <operator pos:start="263:33" pos:end="263:34">&amp;&amp;</operator> <name pos:start="263:36" pos:end="263:56"><name pos:start="263:36" pos:end="263:36">s</name><operator pos:start="263:37" pos:end="263:38">-&gt;</operator><name pos:start="263:39" pos:end="263:43">avctx</name><operator pos:start="263:44" pos:end="263:45">-&gt;</operator><name pos:start="263:46" pos:end="263:56">rc_min_rate</name></name> <operator pos:start="263:58" pos:end="263:59">==</operator> <name pos:start="263:61" pos:end="263:81"><name pos:start="263:61" pos:end="263:61">s</name><operator pos:start="263:62" pos:end="263:63">-&gt;</operator><name pos:start="263:64" pos:end="263:68">avctx</name><operator pos:start="263:69" pos:end="263:70">-&gt;</operator><name pos:start="263:71" pos:end="263:81">rc_max_rate</name></name>

       <operator pos:start="265:8" pos:end="265:9">&amp;&amp;</operator> <operator pos:start="265:11" pos:end="265:11">(</operator><name pos:start="265:12" pos:end="265:22"><name pos:start="265:12" pos:end="265:12">s</name><operator pos:start="265:13" pos:end="265:14">-&gt;</operator><name pos:start="265:15" pos:end="265:22">codec_id</name></name> <operator pos:start="265:24" pos:end="265:25">==</operator> <name pos:start="265:27" pos:end="265:45">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="265:47" pos:end="265:48">||</operator> <name pos:start="265:50" pos:end="265:60"><name pos:start="265:50" pos:end="265:50">s</name><operator pos:start="265:51" pos:end="265:52">-&gt;</operator><name pos:start="265:53" pos:end="265:60">codec_id</name></name> <operator pos:start="265:62" pos:end="265:63">==</operator> <name pos:start="265:65" pos:end="265:83">CODEC_ID_MPEG2VIDEO</name><operator pos:start="265:84" pos:end="265:84">)</operator>

       <operator pos:start="267:8" pos:end="267:9">&amp;&amp;</operator> <literal type="number" pos:start="267:11" pos:end="267:17">90000LL</literal> <operator pos:start="267:19" pos:end="267:19">*</operator> <operator pos:start="267:21" pos:end="267:21">(</operator><name pos:start="267:22" pos:end="267:42"><name pos:start="267:22" pos:end="267:26">avctx</name><operator pos:start="267:27" pos:end="267:28">-&gt;</operator><name pos:start="267:29" pos:end="267:42">rc_buffer_size</name></name><operator pos:start="267:43" pos:end="267:43">-</operator><literal type="number" pos:start="267:44" pos:end="267:44">1</literal><operator pos:start="267:45" pos:end="267:45">)</operator> <operator pos:start="267:47" pos:end="267:47">&gt;</operator> <name pos:start="267:49" pos:end="267:69"><name pos:start="267:49" pos:end="267:49">s</name><operator pos:start="267:50" pos:end="267:51">-&gt;</operator><name pos:start="267:52" pos:end="267:56">avctx</name><operator pos:start="267:57" pos:end="267:58">-&gt;</operator><name pos:start="267:59" pos:end="267:69">rc_max_rate</name></name><operator pos:start="267:70" pos:end="267:70">*</operator><literal type="number" pos:start="267:71" pos:end="267:78">0xFFFFLL</literal></expr>)</condition><block pos:start="267:80" pos:end="273:5">{<block_content pos:start="271:9" pos:end="271:151">



        <expr_stmt pos:start="271:9" pos:end="271:151"><expr pos:start="271:9" pos:end="271:150"><call pos:start="271:9" pos:end="271:150"><name pos:start="271:9" pos:end="271:14">av_log</name><argument_list pos:start="271:15" pos:end="271:150">(<argument pos:start="271:16" pos:end="271:20"><expr pos:start="271:16" pos:end="271:20"><name pos:start="271:16" pos:end="271:20">avctx</name></expr></argument>, <argument pos:start="271:23" pos:end="271:33"><expr pos:start="271:23" pos:end="271:33"><name pos:start="271:23" pos:end="271:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="271:36" pos:end="271:149"><expr pos:start="271:36" pos:end="271:149"><literal type="string" pos:start="271:36" pos:end="271:149">"Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="285:5"><if pos:start="277:5" pos:end="285:5">if<condition pos:start="277:7" pos:end="279:104">(<expr pos:start="277:8" pos:end="279:103"><operator pos:start="277:8" pos:end="277:8">(</operator><name pos:start="277:9" pos:end="277:16"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:16">flags</name></name> <operator pos:start="277:18" pos:end="277:18">&amp;</operator> <name pos:start="277:20" pos:end="277:33">CODEC_FLAG_4MV</name><operator pos:start="277:34" pos:end="277:34">)</operator> <operator pos:start="277:36" pos:end="277:37">&amp;&amp;</operator> <name pos:start="277:39" pos:end="277:49"><name pos:start="277:39" pos:end="277:39">s</name><operator pos:start="277:40" pos:end="277:41">-&gt;</operator><name pos:start="277:42" pos:end="277:49">codec_id</name></name> <operator pos:start="277:51" pos:end="277:52">!=</operator> <name pos:start="277:54" pos:end="277:67">CODEC_ID_MPEG4</name>

       <operator pos:start="279:8" pos:end="279:9">&amp;&amp;</operator> <name pos:start="279:11" pos:end="279:21"><name pos:start="279:11" pos:end="279:11">s</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:21">codec_id</name></name> <operator pos:start="279:23" pos:end="279:24">!=</operator> <name pos:start="279:26" pos:end="279:38">CODEC_ID_H263</name> <operator pos:start="279:40" pos:end="279:41">&amp;&amp;</operator> <name pos:start="279:43" pos:end="279:53"><name pos:start="279:43" pos:end="279:43">s</name><operator pos:start="279:44" pos:end="279:45">-&gt;</operator><name pos:start="279:46" pos:end="279:53">codec_id</name></name> <operator pos:start="279:55" pos:end="279:56">!=</operator> <name pos:start="279:58" pos:end="279:71">CODEC_ID_H263P</name> <operator pos:start="279:73" pos:end="279:74">&amp;&amp;</operator> <name pos:start="279:76" pos:end="279:86"><name pos:start="279:76" pos:end="279:76">s</name><operator pos:start="279:77" pos:end="279:78">-&gt;</operator><name pos:start="279:79" pos:end="279:86">codec_id</name></name> <operator pos:start="279:88" pos:end="279:89">!=</operator> <name pos:start="279:91" pos:end="279:103">CODEC_ID_FLV1</name></expr>)</condition><block pos:start="279:105" pos:end="285:5">{<block_content pos:start="281:9" pos:end="283:18">

        <expr_stmt pos:start="281:9" pos:end="281:68"><expr pos:start="281:9" pos:end="281:67"><call pos:start="281:9" pos:end="281:67"><name pos:start="281:9" pos:end="281:14">av_log</name><argument_list pos:start="281:15" pos:end="281:67">(<argument pos:start="281:16" pos:end="281:20"><expr pos:start="281:16" pos:end="281:20"><name pos:start="281:16" pos:end="281:20">avctx</name></expr></argument>, <argument pos:start="281:23" pos:end="281:34"><expr pos:start="281:23" pos:end="281:34"><name pos:start="281:23" pos:end="281:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="281:37" pos:end="281:66"><expr pos:start="281:37" pos:end="281:66"><literal type="string" pos:start="281:37" pos:end="281:66">"4MV not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="283:9" pos:end="283:18">return <expr pos:start="283:16" pos:end="283:17"><operator pos:start="283:16" pos:end="283:16">-</operator><literal type="number" pos:start="283:17" pos:end="283:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="289:5" pos:end="295:5"><if pos:start="289:5" pos:end="295:5">if<condition pos:start="289:7" pos:end="289:65">(<expr pos:start="289:8" pos:end="289:64"><name pos:start="289:8" pos:end="289:14"><name pos:start="289:8" pos:end="289:8">s</name><operator pos:start="289:9" pos:end="289:10">-&gt;</operator><name pos:start="289:11" pos:end="289:14">obmc</name></name> <operator pos:start="289:16" pos:end="289:17">&amp;&amp;</operator> <name pos:start="289:19" pos:end="289:39"><name pos:start="289:19" pos:end="289:19">s</name><operator pos:start="289:20" pos:end="289:21">-&gt;</operator><name pos:start="289:22" pos:end="289:26">avctx</name><operator pos:start="289:27" pos:end="289:28">-&gt;</operator><name pos:start="289:29" pos:end="289:39">mb_decision</name></name> <operator pos:start="289:41" pos:end="289:42">!=</operator> <name pos:start="289:44" pos:end="289:64">FF_MB_DECISION_SIMPLE</name></expr>)</condition><block pos:start="289:66" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:18">

        <expr_stmt pos:start="291:9" pos:end="291:88"><expr pos:start="291:9" pos:end="291:87"><call pos:start="291:9" pos:end="291:87"><name pos:start="291:9" pos:end="291:14">av_log</name><argument_list pos:start="291:15" pos:end="291:87">(<argument pos:start="291:16" pos:end="291:20"><expr pos:start="291:16" pos:end="291:20"><name pos:start="291:16" pos:end="291:20">avctx</name></expr></argument>, <argument pos:start="291:23" pos:end="291:34"><expr pos:start="291:23" pos:end="291:34"><name pos:start="291:23" pos:end="291:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="291:37" pos:end="291:86"><expr pos:start="291:37" pos:end="291:86"><literal type="string" pos:start="291:37" pos:end="291:86">"OBMC is only supported with simple mb decision\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="293:9" pos:end="293:18">return <expr pos:start="293:16" pos:end="293:17"><operator pos:start="293:16" pos:end="293:16">-</operator><literal type="number" pos:start="293:17" pos:end="293:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="305:5"><if pos:start="299:5" pos:end="305:5">if<condition pos:start="299:7" pos:end="299:80">(<expr pos:start="299:8" pos:end="299:79"><name pos:start="299:8" pos:end="299:14"><name pos:start="299:8" pos:end="299:8">s</name><operator pos:start="299:9" pos:end="299:10">-&gt;</operator><name pos:start="299:11" pos:end="299:14">obmc</name></name> <operator pos:start="299:16" pos:end="299:17">&amp;&amp;</operator> <name pos:start="299:19" pos:end="299:29"><name pos:start="299:19" pos:end="299:19">s</name><operator pos:start="299:20" pos:end="299:21">-&gt;</operator><name pos:start="299:22" pos:end="299:29">codec_id</name></name> <operator pos:start="299:31" pos:end="299:32">!=</operator> <name pos:start="299:34" pos:end="299:46">CODEC_ID_H263</name> <operator pos:start="299:48" pos:end="299:49">&amp;&amp;</operator> <name pos:start="299:51" pos:end="299:61"><name pos:start="299:51" pos:end="299:51">s</name><operator pos:start="299:52" pos:end="299:53">-&gt;</operator><name pos:start="299:54" pos:end="299:61">codec_id</name></name> <operator pos:start="299:63" pos:end="299:64">!=</operator> <name pos:start="299:66" pos:end="299:79">CODEC_ID_H263P</name></expr>)</condition><block pos:start="299:81" pos:end="305:5">{<block_content pos:start="301:9" pos:end="303:18">

        <expr_stmt pos:start="301:9" pos:end="301:77"><expr pos:start="301:9" pos:end="301:76"><call pos:start="301:9" pos:end="301:76"><name pos:start="301:9" pos:end="301:14">av_log</name><argument_list pos:start="301:15" pos:end="301:76">(<argument pos:start="301:16" pos:end="301:20"><expr pos:start="301:16" pos:end="301:20"><name pos:start="301:16" pos:end="301:20">avctx</name></expr></argument>, <argument pos:start="301:23" pos:end="301:34"><expr pos:start="301:23" pos:end="301:34"><name pos:start="301:23" pos:end="301:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:37" pos:end="301:75"><expr pos:start="301:37" pos:end="301:75"><literal type="string" pos:start="301:37" pos:end="301:75">"OBMC is only supported with H263(+)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="303:9" pos:end="303:18">return <expr pos:start="303:16" pos:end="303:17"><operator pos:start="303:16" pos:end="303:16">-</operator><literal type="number" pos:start="303:17" pos:end="303:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="309:5" pos:end="315:5"><if pos:start="309:5" pos:end="315:5">if<condition pos:start="309:7" pos:end="309:58">(<expr pos:start="309:8" pos:end="309:57"><name pos:start="309:8" pos:end="309:24"><name pos:start="309:8" pos:end="309:8">s</name><operator pos:start="309:9" pos:end="309:10">-&gt;</operator><name pos:start="309:11" pos:end="309:24">quarter_sample</name></name> <operator pos:start="309:26" pos:end="309:27">&amp;&amp;</operator> <name pos:start="309:29" pos:end="309:39"><name pos:start="309:29" pos:end="309:29">s</name><operator pos:start="309:30" pos:end="309:31">-&gt;</operator><name pos:start="309:32" pos:end="309:39">codec_id</name></name> <operator pos:start="309:41" pos:end="309:42">!=</operator> <name pos:start="309:44" pos:end="309:57">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="309:59" pos:end="315:5">{<block_content pos:start="311:9" pos:end="313:18">

        <expr_stmt pos:start="311:9" pos:end="311:69"><expr pos:start="311:9" pos:end="311:68"><call pos:start="311:9" pos:end="311:68"><name pos:start="311:9" pos:end="311:14">av_log</name><argument_list pos:start="311:15" pos:end="311:68">(<argument pos:start="311:16" pos:end="311:20"><expr pos:start="311:16" pos:end="311:20"><name pos:start="311:16" pos:end="311:20">avctx</name></expr></argument>, <argument pos:start="311:23" pos:end="311:34"><expr pos:start="311:23" pos:end="311:34"><name pos:start="311:23" pos:end="311:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="311:37" pos:end="311:67"><expr pos:start="311:37" pos:end="311:67"><literal type="string" pos:start="311:37" pos:end="311:67">"qpel not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="313:9" pos:end="313:18">return <expr pos:start="313:16" pos:end="313:17"><operator pos:start="313:16" pos:end="313:16">-</operator><literal type="number" pos:start="313:17" pos:end="313:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="319:5" pos:end="325:5"><if pos:start="319:5" pos:end="325:5">if<condition pos:start="319:7" pos:end="319:61">(<expr pos:start="319:8" pos:end="319:60"><name pos:start="319:8" pos:end="319:27"><name pos:start="319:8" pos:end="319:8">s</name><operator pos:start="319:9" pos:end="319:10">-&gt;</operator><name pos:start="319:11" pos:end="319:27">data_partitioning</name></name> <operator pos:start="319:29" pos:end="319:30">&amp;&amp;</operator> <name pos:start="319:32" pos:end="319:42"><name pos:start="319:32" pos:end="319:32">s</name><operator pos:start="319:33" pos:end="319:34">-&gt;</operator><name pos:start="319:35" pos:end="319:42">codec_id</name></name> <operator pos:start="319:44" pos:end="319:45">!=</operator> <name pos:start="319:47" pos:end="319:60">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="319:62" pos:end="325:5">{<block_content pos:start="321:9" pos:end="323:18">

        <expr_stmt pos:start="321:9" pos:end="321:82"><expr pos:start="321:9" pos:end="321:81"><call pos:start="321:9" pos:end="321:81"><name pos:start="321:9" pos:end="321:14">av_log</name><argument_list pos:start="321:15" pos:end="321:81">(<argument pos:start="321:16" pos:end="321:20"><expr pos:start="321:16" pos:end="321:20"><name pos:start="321:16" pos:end="321:20">avctx</name></expr></argument>, <argument pos:start="321:23" pos:end="321:34"><expr pos:start="321:23" pos:end="321:34"><name pos:start="321:23" pos:end="321:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="321:37" pos:end="321:80"><expr pos:start="321:37" pos:end="321:80"><literal type="string" pos:start="321:37" pos:end="321:80">"data partitioning not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="323:9" pos:end="323:18">return <expr pos:start="323:16" pos:end="323:17"><operator pos:start="323:16" pos:end="323:16">-</operator><literal type="number" pos:start="323:17" pos:end="323:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="329:5" pos:end="335:5"><if pos:start="329:5" pos:end="335:5">if<condition pos:start="329:7" pos:end="329:132">(<expr pos:start="329:8" pos:end="329:131"><name pos:start="329:8" pos:end="329:22"><name pos:start="329:8" pos:end="329:8">s</name><operator pos:start="329:9" pos:end="329:10">-&gt;</operator><name pos:start="329:11" pos:end="329:22">max_b_frames</name></name> <operator pos:start="329:24" pos:end="329:25">&amp;&amp;</operator> <name pos:start="329:27" pos:end="329:37"><name pos:start="329:27" pos:end="329:27">s</name><operator pos:start="329:28" pos:end="329:29">-&gt;</operator><name pos:start="329:30" pos:end="329:37">codec_id</name></name> <operator pos:start="329:39" pos:end="329:40">!=</operator> <name pos:start="329:42" pos:end="329:55">CODEC_ID_MPEG4</name> <operator pos:start="329:57" pos:end="329:58">&amp;&amp;</operator> <name pos:start="329:60" pos:end="329:70"><name pos:start="329:60" pos:end="329:60">s</name><operator pos:start="329:61" pos:end="329:62">-&gt;</operator><name pos:start="329:63" pos:end="329:70">codec_id</name></name> <operator pos:start="329:72" pos:end="329:73">!=</operator> <name pos:start="329:75" pos:end="329:93">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="329:95" pos:end="329:96">&amp;&amp;</operator> <name pos:start="329:98" pos:end="329:108"><name pos:start="329:98" pos:end="329:98">s</name><operator pos:start="329:99" pos:end="329:100">-&gt;</operator><name pos:start="329:101" pos:end="329:108">codec_id</name></name> <operator pos:start="329:110" pos:end="329:111">!=</operator> <name pos:start="329:113" pos:end="329:131">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="329:133" pos:end="335:5">{<block_content pos:start="331:9" pos:end="333:18">

        <expr_stmt pos:start="331:9" pos:end="331:73"><expr pos:start="331:9" pos:end="331:72"><call pos:start="331:9" pos:end="331:72"><name pos:start="331:9" pos:end="331:14">av_log</name><argument_list pos:start="331:15" pos:end="331:72">(<argument pos:start="331:16" pos:end="331:20"><expr pos:start="331:16" pos:end="331:20"><name pos:start="331:16" pos:end="331:20">avctx</name></expr></argument>, <argument pos:start="331:23" pos:end="331:34"><expr pos:start="331:23" pos:end="331:34"><name pos:start="331:23" pos:end="331:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="331:37" pos:end="331:71"><expr pos:start="331:37" pos:end="331:71"><literal type="string" pos:start="331:37" pos:end="331:71">"b frames not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="333:9" pos:end="333:18">return <expr pos:start="333:16" pos:end="333:17"><operator pos:start="333:16" pos:end="333:16">-</operator><literal type="number" pos:start="333:17" pos:end="333:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="339:5" pos:end="351:5"><if pos:start="339:5" pos:end="351:5">if <condition pos:start="339:8" pos:end="343:87">(<expr pos:start="339:9" pos:end="343:86"><operator pos:start="339:9" pos:end="339:9">(</operator><name pos:start="339:10" pos:end="339:20"><name pos:start="339:10" pos:end="339:10">s</name><operator pos:start="339:11" pos:end="339:12">-&gt;</operator><name pos:start="339:13" pos:end="339:20">codec_id</name></name> <operator pos:start="339:22" pos:end="339:23">==</operator> <name pos:start="339:25" pos:end="339:38">CODEC_ID_MPEG4</name> <operator pos:start="339:40" pos:end="339:41">||</operator> <name pos:start="339:43" pos:end="339:53"><name pos:start="339:43" pos:end="339:43">s</name><operator pos:start="339:44" pos:end="339:45">-&gt;</operator><name pos:start="339:46" pos:end="339:53">codec_id</name></name> <operator pos:start="339:55" pos:end="339:56">==</operator> <name pos:start="339:58" pos:end="339:70">CODEC_ID_H263</name> <operator pos:start="339:72" pos:end="339:73">||</operator>

         <name pos:start="341:10" pos:end="341:20"><name pos:start="341:10" pos:end="341:10">s</name><operator pos:start="341:11" pos:end="341:12">-&gt;</operator><name pos:start="341:13" pos:end="341:20">codec_id</name></name> <operator pos:start="341:22" pos:end="341:23">==</operator> <name pos:start="341:25" pos:end="341:38">CODEC_ID_H263P</name><operator pos:start="341:39" pos:end="341:39">)</operator> <operator pos:start="341:41" pos:end="341:42">&amp;&amp;</operator>

        <operator pos:start="343:9" pos:end="343:9">(</operator><name pos:start="343:10" pos:end="343:39"><name pos:start="343:10" pos:end="343:14">avctx</name><operator pos:start="343:15" pos:end="343:16">-&gt;</operator><name pos:start="343:17" pos:end="343:35">sample_aspect_ratio</name><operator pos:start="343:36" pos:end="343:36">.</operator><name pos:start="343:37" pos:end="343:39">num</name></name> <operator pos:start="343:41" pos:end="343:41">&gt;</operator> <literal type="number" pos:start="343:43" pos:end="343:45">255</literal> <operator pos:start="343:47" pos:end="343:48">||</operator> <name pos:start="343:50" pos:end="343:79"><name pos:start="343:50" pos:end="343:54">avctx</name><operator pos:start="343:55" pos:end="343:56">-&gt;</operator><name pos:start="343:57" pos:end="343:75">sample_aspect_ratio</name><operator pos:start="343:76" pos:end="343:76">.</operator><name pos:start="343:77" pos:end="343:79">den</name></name> <operator pos:start="343:81" pos:end="343:81">&gt;</operator> <literal type="number" pos:start="343:83" pos:end="343:85">255</literal><operator pos:start="343:86" pos:end="343:86">)</operator></expr>)</condition> <block pos:start="343:89" pos:end="351:5">{<block_content pos:start="345:9" pos:end="349:18">

        <expr_stmt pos:start="345:9" pos:end="347:79"><expr pos:start="345:9" pos:end="347:78"><call pos:start="345:9" pos:end="347:78"><name pos:start="345:9" pos:end="345:14">av_log</name><argument_list pos:start="345:15" pos:end="347:78">(<argument pos:start="345:16" pos:end="345:20"><expr pos:start="345:16" pos:end="345:20"><name pos:start="345:16" pos:end="345:20">avctx</name></expr></argument>, <argument pos:start="345:23" pos:end="345:34"><expr pos:start="345:23" pos:end="345:34"><name pos:start="345:23" pos:end="345:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="345:37" pos:end="345:90"><expr pos:start="345:37" pos:end="345:90"><literal type="string" pos:start="345:37" pos:end="345:90">"Invalid pixel aspect ratio %i/%i, limit is 255/255\n"</literal></expr></argument>,

               <argument pos:start="347:16" pos:end="347:45"><expr pos:start="347:16" pos:end="347:45"><name pos:start="347:16" pos:end="347:45"><name pos:start="347:16" pos:end="347:20">avctx</name><operator pos:start="347:21" pos:end="347:22">-&gt;</operator><name pos:start="347:23" pos:end="347:41">sample_aspect_ratio</name><operator pos:start="347:42" pos:end="347:42">.</operator><name pos:start="347:43" pos:end="347:45">num</name></name></expr></argument>, <argument pos:start="347:48" pos:end="347:77"><expr pos:start="347:48" pos:end="347:77"><name pos:start="347:48" pos:end="347:77"><name pos:start="347:48" pos:end="347:52">avctx</name><operator pos:start="347:53" pos:end="347:54">-&gt;</operator><name pos:start="347:55" pos:end="347:73">sample_aspect_ratio</name><operator pos:start="347:74" pos:end="347:74">.</operator><name pos:start="347:75" pos:end="347:77">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="349:9" pos:end="349:18">return <expr pos:start="349:16" pos:end="349:17"><operator pos:start="349:16" pos:end="349:16">-</operator><literal type="number" pos:start="349:17" pos:end="349:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="355:5" pos:end="363:5"><if pos:start="355:5" pos:end="363:5">if<condition pos:start="355:7" pos:end="357:78">(<expr pos:start="355:8" pos:end="357:77"><operator pos:start="355:8" pos:end="355:8">(</operator><name pos:start="355:9" pos:end="355:16"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:16">flags</name></name> <operator pos:start="355:18" pos:end="355:18">&amp;</operator> <operator pos:start="355:20" pos:end="355:20">(</operator><name pos:start="355:21" pos:end="355:45">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="355:46" pos:end="355:46">|</operator><name pos:start="355:47" pos:end="355:70">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="355:71" pos:end="355:71">|</operator><name pos:start="355:72" pos:end="355:90">CODEC_FLAG_ALT_SCAN</name><operator pos:start="355:91" pos:end="355:91">)</operator><operator pos:start="355:92" pos:end="355:92">)</operator>

       <operator pos:start="357:8" pos:end="357:9">&amp;&amp;</operator> <name pos:start="357:11" pos:end="357:21"><name pos:start="357:11" pos:end="357:11">s</name><operator pos:start="357:12" pos:end="357:13">-&gt;</operator><name pos:start="357:14" pos:end="357:21">codec_id</name></name> <operator pos:start="357:23" pos:end="357:24">!=</operator> <name pos:start="357:26" pos:end="357:39">CODEC_ID_MPEG4</name> <operator pos:start="357:41" pos:end="357:42">&amp;&amp;</operator> <name pos:start="357:44" pos:end="357:54"><name pos:start="357:44" pos:end="357:44">s</name><operator pos:start="357:45" pos:end="357:46">-&gt;</operator><name pos:start="357:47" pos:end="357:54">codec_id</name></name> <operator pos:start="357:56" pos:end="357:57">!=</operator> <name pos:start="357:59" pos:end="357:77">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="357:79" pos:end="363:5">{<block_content pos:start="359:9" pos:end="361:18">

        <expr_stmt pos:start="359:9" pos:end="359:76"><expr pos:start="359:9" pos:end="359:75"><call pos:start="359:9" pos:end="359:75"><name pos:start="359:9" pos:end="359:14">av_log</name><argument_list pos:start="359:15" pos:end="359:75">(<argument pos:start="359:16" pos:end="359:20"><expr pos:start="359:16" pos:end="359:20"><name pos:start="359:16" pos:end="359:20">avctx</name></expr></argument>, <argument pos:start="359:23" pos:end="359:34"><expr pos:start="359:23" pos:end="359:34"><name pos:start="359:23" pos:end="359:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="359:37" pos:end="359:74"><expr pos:start="359:37" pos:end="359:74"><literal type="string" pos:start="359:37" pos:end="359:74">"interlacing not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="361:9" pos:end="361:18">return <expr pos:start="361:16" pos:end="361:17"><operator pos:start="361:16" pos:end="361:16">-</operator><literal type="number" pos:start="361:17" pos:end="361:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="367:5" pos:end="373:5"><if pos:start="367:5" pos:end="373:5">if<condition pos:start="367:7" pos:end="367:54">(<expr pos:start="367:8" pos:end="367:53"><name pos:start="367:8" pos:end="367:20"><name pos:start="367:8" pos:end="367:8">s</name><operator pos:start="367:9" pos:end="367:10">-&gt;</operator><name pos:start="367:11" pos:end="367:20">mpeg_quant</name></name> <operator pos:start="367:22" pos:end="367:23">&amp;&amp;</operator> <name pos:start="367:25" pos:end="367:35"><name pos:start="367:25" pos:end="367:25">s</name><operator pos:start="367:26" pos:end="367:27">-&gt;</operator><name pos:start="367:28" pos:end="367:35">codec_id</name></name> <operator pos:start="367:37" pos:end="367:38">!=</operator> <name pos:start="367:40" pos:end="367:53">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="367:55" pos:end="373:5">{<block_content pos:start="369:9" pos:end="371:18"> <comment type="line" pos:start="367:57" pos:end="367:83">//FIXME mpeg2 uses that too</comment>

        <expr_stmt pos:start="369:9" pos:end="369:89"><expr pos:start="369:9" pos:end="369:88"><call pos:start="369:9" pos:end="369:88"><name pos:start="369:9" pos:end="369:14">av_log</name><argument_list pos:start="369:15" pos:end="369:88">(<argument pos:start="369:16" pos:end="369:20"><expr pos:start="369:16" pos:end="369:20"><name pos:start="369:16" pos:end="369:20">avctx</name></expr></argument>, <argument pos:start="369:23" pos:end="369:34"><expr pos:start="369:23" pos:end="369:34"><name pos:start="369:23" pos:end="369:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="369:37" pos:end="369:87"><expr pos:start="369:37" pos:end="369:87"><literal type="string" pos:start="369:37" pos:end="369:87">"mpeg2 style quantization not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="371:9" pos:end="371:18">return <expr pos:start="371:16" pos:end="371:17"><operator pos:start="371:16" pos:end="371:16">-</operator><literal type="number" pos:start="371:17" pos:end="371:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="377:5" pos:end="383:5"><if pos:start="377:5" pos:end="383:5">if<condition pos:start="377:7" pos:end="377:57">(<expr pos:start="377:8" pos:end="377:56"><operator pos:start="377:8" pos:end="377:8">(</operator><name pos:start="377:9" pos:end="377:16"><name pos:start="377:9" pos:end="377:9">s</name><operator pos:start="377:10" pos:end="377:11">-&gt;</operator><name pos:start="377:12" pos:end="377:16">flags</name></name> <operator pos:start="377:18" pos:end="377:18">&amp;</operator> <name pos:start="377:20" pos:end="377:36">CODEC_FLAG_CBP_RD</name><operator pos:start="377:37" pos:end="377:37">)</operator> <operator pos:start="377:39" pos:end="377:40">&amp;&amp;</operator> <operator pos:start="377:42" pos:end="377:42">!</operator><name pos:start="377:43" pos:end="377:56"><name pos:start="377:43" pos:end="377:47">avctx</name><operator pos:start="377:48" pos:end="377:49">-&gt;</operator><name pos:start="377:50" pos:end="377:56">trellis</name></name></expr>)</condition><block pos:start="377:58" pos:end="383:5">{<block_content pos:start="379:9" pos:end="381:18">

        <expr_stmt pos:start="379:9" pos:end="379:68"><expr pos:start="379:9" pos:end="379:67"><call pos:start="379:9" pos:end="379:67"><name pos:start="379:9" pos:end="379:14">av_log</name><argument_list pos:start="379:15" pos:end="379:67">(<argument pos:start="379:16" pos:end="379:20"><expr pos:start="379:16" pos:end="379:20"><name pos:start="379:16" pos:end="379:20">avctx</name></expr></argument>, <argument pos:start="379:23" pos:end="379:34"><expr pos:start="379:23" pos:end="379:34"><name pos:start="379:23" pos:end="379:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="379:37" pos:end="379:66"><expr pos:start="379:37" pos:end="379:66"><literal type="string" pos:start="379:37" pos:end="379:66">"CBP RD needs trellis quant\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="381:9" pos:end="381:18">return <expr pos:start="381:16" pos:end="381:17"><operator pos:start="381:16" pos:end="381:16">-</operator><literal type="number" pos:start="381:17" pos:end="381:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="387:5" pos:end="393:5"><if pos:start="387:5" pos:end="393:5">if<condition pos:start="387:7" pos:end="387:83">(<expr pos:start="387:8" pos:end="387:82"><operator pos:start="387:8" pos:end="387:8">(</operator><name pos:start="387:9" pos:end="387:16"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:16">flags</name></name> <operator pos:start="387:18" pos:end="387:18">&amp;</operator> <name pos:start="387:20" pos:end="387:35">CODEC_FLAG_QP_RD</name><operator pos:start="387:36" pos:end="387:36">)</operator> <operator pos:start="387:38" pos:end="387:39">&amp;&amp;</operator> <name pos:start="387:41" pos:end="387:61"><name pos:start="387:41" pos:end="387:41">s</name><operator pos:start="387:42" pos:end="387:43">-&gt;</operator><name pos:start="387:44" pos:end="387:48">avctx</name><operator pos:start="387:49" pos:end="387:50">-&gt;</operator><name pos:start="387:51" pos:end="387:61">mb_decision</name></name> <operator pos:start="387:63" pos:end="387:64">!=</operator> <name pos:start="387:66" pos:end="387:82">FF_MB_DECISION_RD</name></expr>)</condition><block pos:start="387:84" pos:end="393:5">{<block_content pos:start="389:9" pos:end="391:18">

        <expr_stmt pos:start="389:9" pos:end="389:59"><expr pos:start="389:9" pos:end="389:58"><call pos:start="389:9" pos:end="389:58"><name pos:start="389:9" pos:end="389:14">av_log</name><argument_list pos:start="389:15" pos:end="389:58">(<argument pos:start="389:16" pos:end="389:20"><expr pos:start="389:16" pos:end="389:20"><name pos:start="389:16" pos:end="389:20">avctx</name></expr></argument>, <argument pos:start="389:23" pos:end="389:34"><expr pos:start="389:23" pos:end="389:34"><name pos:start="389:23" pos:end="389:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="389:37" pos:end="389:57"><expr pos:start="389:37" pos:end="389:57"><literal type="string" pos:start="389:37" pos:end="389:57">"QP RD needs mbd=2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="391:9" pos:end="391:18">return <expr pos:start="391:16" pos:end="391:17"><operator pos:start="391:16" pos:end="391:16">-</operator><literal type="number" pos:start="391:17" pos:end="391:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="397:5" pos:end="403:5"><if pos:start="397:5" pos:end="403:5">if<condition pos:start="397:7" pos:end="397:90">(<expr pos:start="397:8" pos:end="397:89"><name pos:start="397:8" pos:end="397:38"><name pos:start="397:8" pos:end="397:8">s</name><operator pos:start="397:9" pos:end="397:10">-&gt;</operator><name pos:start="397:11" pos:end="397:15">avctx</name><operator pos:start="397:16" pos:end="397:17">-&gt;</operator><name pos:start="397:18" pos:end="397:38">scenechange_threshold</name></name> <operator pos:start="397:40" pos:end="397:40">&lt;</operator> <literal type="number" pos:start="397:42" pos:end="397:51">1000000000</literal> <operator pos:start="397:53" pos:end="397:54">&amp;&amp;</operator> <operator pos:start="397:56" pos:end="397:56">(</operator><name pos:start="397:57" pos:end="397:64"><name pos:start="397:57" pos:end="397:57">s</name><operator pos:start="397:58" pos:end="397:59">-&gt;</operator><name pos:start="397:60" pos:end="397:64">flags</name></name> <operator pos:start="397:66" pos:end="397:66">&amp;</operator> <name pos:start="397:68" pos:end="397:88">CODEC_FLAG_CLOSED_GOP</name><operator pos:start="397:89" pos:end="397:89">)</operator></expr>)</condition><block pos:start="397:91" pos:end="403:5">{<block_content pos:start="399:9" pos:end="401:18">

        <expr_stmt pos:start="399:9" pos:end="399:131"><expr pos:start="399:9" pos:end="399:130"><call pos:start="399:9" pos:end="399:130"><name pos:start="399:9" pos:end="399:14">av_log</name><argument_list pos:start="399:15" pos:end="399:130">(<argument pos:start="399:16" pos:end="399:20"><expr pos:start="399:16" pos:end="399:20"><name pos:start="399:16" pos:end="399:20">avctx</name></expr></argument>, <argument pos:start="399:23" pos:end="399:34"><expr pos:start="399:23" pos:end="399:34"><name pos:start="399:23" pos:end="399:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="399:37" pos:end="399:129"><expr pos:start="399:37" pos:end="399:129"><literal type="string" pos:start="399:37" pos:end="399:129">"closed gop with scene change detection are not supported yet, set threshold to 1000000000\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="401:9" pos:end="401:18">return <expr pos:start="401:16" pos:end="401:17"><operator pos:start="401:16" pos:end="401:16">-</operator><literal type="number" pos:start="401:17" pos:end="401:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="407:5" pos:end="413:5"><if pos:start="407:5" pos:end="413:5">if<condition pos:start="407:7" pos:end="407:81">(<expr pos:start="407:8" pos:end="407:80"><operator pos:start="407:8" pos:end="407:8">(</operator><name pos:start="407:9" pos:end="407:17"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:17">flags2</name></name> <operator pos:start="407:19" pos:end="407:19">&amp;</operator> <name pos:start="407:21" pos:end="407:41">CODEC_FLAG2_INTRA_VLC</name><operator pos:start="407:42" pos:end="407:42">)</operator> <operator pos:start="407:44" pos:end="407:45">&amp;&amp;</operator> <name pos:start="407:47" pos:end="407:57"><name pos:start="407:47" pos:end="407:47">s</name><operator pos:start="407:48" pos:end="407:49">-&gt;</operator><name pos:start="407:50" pos:end="407:57">codec_id</name></name> <operator pos:start="407:59" pos:end="407:60">!=</operator> <name pos:start="407:62" pos:end="407:80">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="407:82" pos:end="413:5">{<block_content pos:start="409:9" pos:end="411:18">

        <expr_stmt pos:start="409:9" pos:end="409:80"><expr pos:start="409:9" pos:end="409:79"><call pos:start="409:9" pos:end="409:79"><name pos:start="409:9" pos:end="409:14">av_log</name><argument_list pos:start="409:15" pos:end="409:79">(<argument pos:start="409:16" pos:end="409:20"><expr pos:start="409:16" pos:end="409:20"><name pos:start="409:16" pos:end="409:20">avctx</name></expr></argument>, <argument pos:start="409:23" pos:end="409:34"><expr pos:start="409:23" pos:end="409:34"><name pos:start="409:23" pos:end="409:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="409:37" pos:end="409:78"><expr pos:start="409:37" pos:end="409:78"><literal type="string" pos:start="409:37" pos:end="409:78">"intra vlc table not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="411:9" pos:end="411:18">return <expr pos:start="411:16" pos:end="411:17"><operator pos:start="411:16" pos:end="411:16">-</operator><literal type="number" pos:start="411:17" pos:end="411:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="417:5" pos:end="435:5"><if pos:start="417:5" pos:end="435:5">if<condition pos:start="417:7" pos:end="417:39">(<expr pos:start="417:8" pos:end="417:38"><name pos:start="417:8" pos:end="417:15"><name pos:start="417:8" pos:end="417:8">s</name><operator pos:start="417:9" pos:end="417:10">-&gt;</operator><name pos:start="417:11" pos:end="417:15">flags</name></name> <operator pos:start="417:17" pos:end="417:17">&amp;</operator> <name pos:start="417:19" pos:end="417:38">CODEC_FLAG_LOW_DELAY</name></expr>)</condition><block pos:start="417:40" pos:end="435:5">{<block_content pos:start="419:9" pos:end="433:9">

        <if_stmt pos:start="419:9" pos:end="425:9"><if pos:start="419:9" pos:end="425:9">if <condition pos:start="419:12" pos:end="419:47">(<expr pos:start="419:13" pos:end="419:46"><name pos:start="419:13" pos:end="419:23"><name pos:start="419:13" pos:end="419:13">s</name><operator pos:start="419:14" pos:end="419:15">-&gt;</operator><name pos:start="419:16" pos:end="419:23">codec_id</name></name> <operator pos:start="419:25" pos:end="419:26">!=</operator> <name pos:start="419:28" pos:end="419:46">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="419:48" pos:end="425:9">{<block_content pos:start="421:13" pos:end="423:22">

            <expr_stmt pos:start="421:13" pos:end="421:91"><expr pos:start="421:13" pos:end="421:90"><call pos:start="421:13" pos:end="421:90"><name pos:start="421:13" pos:end="421:18">av_log</name><argument_list pos:start="421:19" pos:end="421:90">(<argument pos:start="421:20" pos:end="421:24"><expr pos:start="421:20" pos:end="421:24"><name pos:start="421:20" pos:end="421:24">avctx</name></expr></argument>, <argument pos:start="421:27" pos:end="421:38"><expr pos:start="421:27" pos:end="421:38"><name pos:start="421:27" pos:end="421:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="421:41" pos:end="421:89"><expr pos:start="421:41" pos:end="421:89"><literal type="string" pos:start="421:41" pos:end="421:89">"low delay forcing is only available for mpeg2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="423:13" pos:end="423:22">return <expr pos:start="423:20" pos:end="423:21"><operator pos:start="423:20" pos:end="423:20">-</operator><literal type="number" pos:start="423:21" pos:end="423:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="427:9" pos:end="433:9"><if pos:start="427:9" pos:end="433:9">if <condition pos:start="427:12" pos:end="427:33">(<expr pos:start="427:13" pos:end="427:32"><name pos:start="427:13" pos:end="427:27"><name pos:start="427:13" pos:end="427:13">s</name><operator pos:start="427:14" pos:end="427:15">-&gt;</operator><name pos:start="427:16" pos:end="427:27">max_b_frames</name></name> <operator pos:start="427:29" pos:end="427:30">!=</operator> <literal type="number" pos:start="427:32" pos:end="427:32">0</literal></expr>)</condition><block pos:start="427:34" pos:end="433:9">{<block_content pos:start="429:13" pos:end="431:22">

            <expr_stmt pos:start="429:13" pos:end="429:84"><expr pos:start="429:13" pos:end="429:83"><call pos:start="429:13" pos:end="429:83"><name pos:start="429:13" pos:end="429:18">av_log</name><argument_list pos:start="429:19" pos:end="429:83">(<argument pos:start="429:20" pos:end="429:24"><expr pos:start="429:20" pos:end="429:24"><name pos:start="429:20" pos:end="429:24">avctx</name></expr></argument>, <argument pos:start="429:27" pos:end="429:38"><expr pos:start="429:27" pos:end="429:38"><name pos:start="429:27" pos:end="429:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="429:41" pos:end="429:82"><expr pos:start="429:41" pos:end="429:82"><literal type="string" pos:start="429:41" pos:end="429:82">"b frames cannot be used with low delay\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="431:13" pos:end="431:22">return <expr pos:start="431:20" pos:end="431:21"><operator pos:start="431:20" pos:end="431:20">-</operator><literal type="number" pos:start="431:21" pos:end="431:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="439:5" pos:end="457:5"><if pos:start="439:5" pos:end="457:5">if<condition pos:start="439:7" pos:end="439:28">(<expr pos:start="439:8" pos:end="439:27"><name pos:start="439:8" pos:end="439:22"><name pos:start="439:8" pos:end="439:8">s</name><operator pos:start="439:9" pos:end="439:10">-&gt;</operator><name pos:start="439:11" pos:end="439:22">q_scale_type</name></name> <operator pos:start="439:24" pos:end="439:25">==</operator> <literal type="number" pos:start="439:27" pos:end="439:27">1</literal></expr>)</condition><block pos:start="439:29" pos:end="457:5">{<block_content pos:start="441:9" pos:end="455:9">

        <if_stmt pos:start="441:9" pos:end="447:9"><if pos:start="441:9" pos:end="447:9">if<condition pos:start="441:11" pos:end="441:46">(<expr pos:start="441:12" pos:end="441:45"><name pos:start="441:12" pos:end="441:22"><name pos:start="441:12" pos:end="441:12">s</name><operator pos:start="441:13" pos:end="441:14">-&gt;</operator><name pos:start="441:15" pos:end="441:22">codec_id</name></name> <operator pos:start="441:24" pos:end="441:25">!=</operator> <name pos:start="441:27" pos:end="441:45">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="441:47" pos:end="447:9">{<block_content pos:start="443:13" pos:end="445:22">

            <expr_stmt pos:start="443:13" pos:end="443:90"><expr pos:start="443:13" pos:end="443:89"><call pos:start="443:13" pos:end="443:89"><name pos:start="443:13" pos:end="443:18">av_log</name><argument_list pos:start="443:19" pos:end="443:89">(<argument pos:start="443:20" pos:end="443:24"><expr pos:start="443:20" pos:end="443:24"><name pos:start="443:20" pos:end="443:24">avctx</name></expr></argument>, <argument pos:start="443:27" pos:end="443:38"><expr pos:start="443:27" pos:end="443:38"><name pos:start="443:27" pos:end="443:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="443:41" pos:end="443:88"><expr pos:start="443:41" pos:end="443:88"><literal type="string" pos:start="443:41" pos:end="443:88">"non linear quant is only available for mpeg2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="445:13" pos:end="445:22">return <expr pos:start="445:20" pos:end="445:21"><operator pos:start="445:20" pos:end="445:20">-</operator><literal type="number" pos:start="445:21" pos:end="445:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="449:9" pos:end="455:9"><if pos:start="449:9" pos:end="455:9">if<condition pos:start="449:11" pos:end="449:28">(<expr pos:start="449:12" pos:end="449:27"><name pos:start="449:12" pos:end="449:22"><name pos:start="449:12" pos:end="449:16">avctx</name><operator pos:start="449:17" pos:end="449:18">-&gt;</operator><name pos:start="449:19" pos:end="449:22">qmax</name></name> <operator pos:start="449:24" pos:end="449:24">&gt;</operator> <literal type="number" pos:start="449:26" pos:end="449:27">12</literal></expr>)</condition><block pos:start="449:29" pos:end="455:9">{<block_content pos:start="451:13" pos:end="453:22">

            <expr_stmt pos:start="451:13" pos:end="451:97"><expr pos:start="451:13" pos:end="451:96"><call pos:start="451:13" pos:end="451:96"><name pos:start="451:13" pos:end="451:18">av_log</name><argument_list pos:start="451:19" pos:end="451:96">(<argument pos:start="451:20" pos:end="451:24"><expr pos:start="451:20" pos:end="451:24"><name pos:start="451:20" pos:end="451:24">avctx</name></expr></argument>, <argument pos:start="451:27" pos:end="451:38"><expr pos:start="451:27" pos:end="451:38"><name pos:start="451:27" pos:end="451:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="451:41" pos:end="451:95"><expr pos:start="451:41" pos:end="451:95"><literal type="string" pos:start="451:41" pos:end="451:95">"non linear quant only supports qmax &lt;= 12 currently\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="453:13" pos:end="453:22">return <expr pos:start="453:20" pos:end="453:21"><operator pos:start="453:20" pos:end="453:20">-</operator><literal type="number" pos:start="453:21" pos:end="453:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="461:5" pos:end="471:5"><if pos:start="461:5" pos:end="471:5">if<condition pos:start="461:7" pos:end="465:89">(<expr pos:start="461:8" pos:end="465:88"><name pos:start="461:8" pos:end="461:29"><name pos:start="461:8" pos:end="461:8">s</name><operator pos:start="461:9" pos:end="461:10">-&gt;</operator><name pos:start="461:11" pos:end="461:15">avctx</name><operator pos:start="461:16" pos:end="461:17">-&gt;</operator><name pos:start="461:18" pos:end="461:29">thread_count</name></name> <operator pos:start="461:31" pos:end="461:31">&gt;</operator> <literal type="number" pos:start="461:33" pos:end="461:33">1</literal> <operator pos:start="461:35" pos:end="461:36">&amp;&amp;</operator> <name pos:start="461:38" pos:end="461:48"><name pos:start="461:38" pos:end="461:38">s</name><operator pos:start="461:39" pos:end="461:40">-&gt;</operator><name pos:start="461:41" pos:end="461:48">codec_id</name></name> <operator pos:start="461:50" pos:end="461:51">!=</operator> <name pos:start="461:53" pos:end="461:66">CODEC_ID_MPEG4</name>

       <operator pos:start="463:8" pos:end="463:9">&amp;&amp;</operator> <name pos:start="463:11" pos:end="463:21"><name pos:start="463:11" pos:end="463:11">s</name><operator pos:start="463:12" pos:end="463:13">-&gt;</operator><name pos:start="463:14" pos:end="463:21">codec_id</name></name> <operator pos:start="463:23" pos:end="463:24">!=</operator> <name pos:start="463:26" pos:end="463:44">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="463:46" pos:end="463:47">&amp;&amp;</operator> <name pos:start="463:49" pos:end="463:59"><name pos:start="463:49" pos:end="463:49">s</name><operator pos:start="463:50" pos:end="463:51">-&gt;</operator><name pos:start="463:52" pos:end="463:59">codec_id</name></name> <operator pos:start="463:61" pos:end="463:62">!=</operator> <name pos:start="463:64" pos:end="463:82">CODEC_ID_MPEG2VIDEO</name>

       <operator pos:start="465:8" pos:end="465:9">&amp;&amp;</operator> <operator pos:start="465:11" pos:end="465:11">(</operator><name pos:start="465:12" pos:end="465:22"><name pos:start="465:12" pos:end="465:12">s</name><operator pos:start="465:13" pos:end="465:14">-&gt;</operator><name pos:start="465:15" pos:end="465:22">codec_id</name></name> <operator pos:start="465:24" pos:end="465:25">!=</operator> <name pos:start="465:27" pos:end="465:40">CODEC_ID_H263P</name> <operator pos:start="465:42" pos:end="465:43">||</operator> <operator pos:start="465:45" pos:end="465:45">!</operator><operator pos:start="465:46" pos:end="465:46">(</operator><name pos:start="465:47" pos:end="465:54"><name pos:start="465:47" pos:end="465:47">s</name><operator pos:start="465:48" pos:end="465:49">-&gt;</operator><name pos:start="465:50" pos:end="465:54">flags</name></name> <operator pos:start="465:56" pos:end="465:56">&amp;</operator> <name pos:start="465:58" pos:end="465:86">CODEC_FLAG_H263P_SLICE_STRUCT</name><operator pos:start="465:87" pos:end="465:87">)</operator><operator pos:start="465:88" pos:end="465:88">)</operator></expr>)</condition><block pos:start="465:90" pos:end="471:5">{<block_content pos:start="467:9" pos:end="469:18">

        <expr_stmt pos:start="467:9" pos:end="467:88"><expr pos:start="467:9" pos:end="467:87"><call pos:start="467:9" pos:end="467:87"><name pos:start="467:9" pos:end="467:14">av_log</name><argument_list pos:start="467:15" pos:end="467:87">(<argument pos:start="467:16" pos:end="467:20"><expr pos:start="467:16" pos:end="467:20"><name pos:start="467:16" pos:end="467:20">avctx</name></expr></argument>, <argument pos:start="467:23" pos:end="467:34"><expr pos:start="467:23" pos:end="467:34"><name pos:start="467:23" pos:end="467:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="467:37" pos:end="467:86"><expr pos:start="467:37" pos:end="467:86"><literal type="string" pos:start="467:37" pos:end="467:86">"multi threaded encoding not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="469:9" pos:end="469:18">return <expr pos:start="469:16" pos:end="469:17"><operator pos:start="469:16" pos:end="469:16">-</operator><literal type="number" pos:start="469:17" pos:end="469:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="475:5" pos:end="481:5"><if pos:start="475:5" pos:end="481:5">if<condition pos:start="475:7" pos:end="475:34">(<expr pos:start="475:8" pos:end="475:33"><name pos:start="475:8" pos:end="475:29"><name pos:start="475:8" pos:end="475:8">s</name><operator pos:start="475:9" pos:end="475:10">-&gt;</operator><name pos:start="475:11" pos:end="475:15">avctx</name><operator pos:start="475:16" pos:end="475:17">-&gt;</operator><name pos:start="475:18" pos:end="475:29">thread_count</name></name> <operator pos:start="475:31" pos:end="475:31">&lt;</operator> <literal type="number" pos:start="475:33" pos:end="475:33">1</literal></expr>)</condition><block pos:start="475:35" pos:end="481:5">{<block_content pos:start="477:9" pos:end="479:18">

        <expr_stmt pos:start="477:9" pos:end="477:113"><expr pos:start="477:9" pos:end="477:112"><call pos:start="477:9" pos:end="477:112"><name pos:start="477:9" pos:end="477:14">av_log</name><argument_list pos:start="477:15" pos:end="477:112">(<argument pos:start="477:16" pos:end="477:20"><expr pos:start="477:16" pos:end="477:20"><name pos:start="477:16" pos:end="477:20">avctx</name></expr></argument>, <argument pos:start="477:23" pos:end="477:34"><expr pos:start="477:23" pos:end="477:34"><name pos:start="477:23" pos:end="477:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="477:37" pos:end="477:111"><expr pos:start="477:37" pos:end="477:111"><literal type="string" pos:start="477:37" pos:end="477:111">"automatic thread number detection not supported by codec, patch welcome\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="479:9" pos:end="479:18">return <expr pos:start="479:16" pos:end="479:17"><operator pos:start="479:16" pos:end="479:16">-</operator><literal type="number" pos:start="479:17" pos:end="479:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="485:5" pos:end="487:23"><if pos:start="485:5" pos:end="487:23">if<condition pos:start="485:7" pos:end="485:34">(<expr pos:start="485:8" pos:end="485:33"><name pos:start="485:8" pos:end="485:29"><name pos:start="485:8" pos:end="485:8">s</name><operator pos:start="485:9" pos:end="485:10">-&gt;</operator><name pos:start="485:11" pos:end="485:15">avctx</name><operator pos:start="485:16" pos:end="485:17">-&gt;</operator><name pos:start="485:18" pos:end="485:29">thread_count</name></name> <operator pos:start="485:31" pos:end="485:31">&gt;</operator> <literal type="number" pos:start="485:33" pos:end="485:33">1</literal></expr>)</condition><block type="pseudo" pos:start="487:9" pos:end="487:23"><block_content pos:start="487:9" pos:end="487:23">

        <expr_stmt pos:start="487:9" pos:end="487:23"><expr pos:start="487:9" pos:end="487:22"><name pos:start="487:9" pos:end="487:19"><name pos:start="487:9" pos:end="487:9">s</name><operator pos:start="487:10" pos:end="487:11">-&gt;</operator><name pos:start="487:12" pos:end="487:19">rtp_mode</name></name><operator pos:start="487:20" pos:end="487:20">=</operator> <literal type="number" pos:start="487:22" pos:end="487:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="491:5" pos:end="497:5"><if pos:start="491:5" pos:end="497:5">if<condition pos:start="491:7" pos:end="491:54">(<expr pos:start="491:8" pos:end="491:53"><operator pos:start="491:8" pos:end="491:8">!</operator><name pos:start="491:9" pos:end="491:28"><name pos:start="491:9" pos:end="491:13">avctx</name><operator pos:start="491:14" pos:end="491:15">-&gt;</operator><name pos:start="491:16" pos:end="491:24">time_base</name><operator pos:start="491:25" pos:end="491:25">.</operator><name pos:start="491:26" pos:end="491:28">den</name></name> <operator pos:start="491:30" pos:end="491:31">||</operator> <operator pos:start="491:33" pos:end="491:33">!</operator><name pos:start="491:34" pos:end="491:53"><name pos:start="491:34" pos:end="491:38">avctx</name><operator pos:start="491:39" pos:end="491:40">-&gt;</operator><name pos:start="491:41" pos:end="491:49">time_base</name><operator pos:start="491:50" pos:end="491:50">.</operator><name pos:start="491:51" pos:end="491:53">num</name></name></expr>)</condition><block pos:start="491:55" pos:end="497:5">{<block_content pos:start="493:9" pos:end="495:18">

        <expr_stmt pos:start="493:9" pos:end="493:59"><expr pos:start="493:9" pos:end="493:58"><call pos:start="493:9" pos:end="493:58"><name pos:start="493:9" pos:end="493:14">av_log</name><argument_list pos:start="493:15" pos:end="493:58">(<argument pos:start="493:16" pos:end="493:20"><expr pos:start="493:16" pos:end="493:20"><name pos:start="493:16" pos:end="493:20">avctx</name></expr></argument>, <argument pos:start="493:23" pos:end="493:34"><expr pos:start="493:23" pos:end="493:34"><name pos:start="493:23" pos:end="493:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="493:37" pos:end="493:57"><expr pos:start="493:37" pos:end="493:57"><literal type="string" pos:start="493:37" pos:end="493:57">"framerate not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="495:9" pos:end="495:18">return <expr pos:start="495:16" pos:end="495:17"><operator pos:start="495:16" pos:end="495:16">-</operator><literal type="number" pos:start="495:17" pos:end="495:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="501:5" pos:end="501:26"><expr pos:start="501:5" pos:end="501:25"><name pos:start="501:5" pos:end="501:5">i</name><operator pos:start="501:6" pos:end="501:6">=</operator> <operator pos:start="501:8" pos:end="501:8">(</operator><name pos:start="501:9" pos:end="501:15">INT_MAX</name><operator pos:start="501:16" pos:end="501:16">/</operator><literal type="number" pos:start="501:17" pos:end="501:18">2</literal><operator pos:start="501:18" pos:end="501:18">+</operator><literal type="number" pos:start="501:19" pos:end="501:21">128</literal><operator pos:start="501:22" pos:end="501:22">)</operator><operator pos:start="501:23" pos:end="501:24">&gt;&gt;</operator><literal type="number" pos:start="501:25" pos:end="501:25">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="503:5" pos:end="509:5"><if pos:start="503:5" pos:end="509:5">if<condition pos:start="503:7" pos:end="503:32">(<expr pos:start="503:8" pos:end="503:31"><name pos:start="503:8" pos:end="503:26"><name pos:start="503:8" pos:end="503:12">avctx</name><operator pos:start="503:13" pos:end="503:14">-&gt;</operator><name pos:start="503:15" pos:end="503:26">me_threshold</name></name> <operator pos:start="503:28" pos:end="503:29">&gt;=</operator> <name pos:start="503:31" pos:end="503:31">i</name></expr>)</condition><block pos:start="503:33" pos:end="509:5">{<block_content pos:start="505:9" pos:end="507:18">

        <expr_stmt pos:start="505:9" pos:end="505:82"><expr pos:start="505:9" pos:end="505:81"><call pos:start="505:9" pos:end="505:81"><name pos:start="505:9" pos:end="505:14">av_log</name><argument_list pos:start="505:15" pos:end="505:81">(<argument pos:start="505:16" pos:end="505:20"><expr pos:start="505:16" pos:end="505:20"><name pos:start="505:16" pos:end="505:20">avctx</name></expr></argument>, <argument pos:start="505:23" pos:end="505:34"><expr pos:start="505:23" pos:end="505:34"><name pos:start="505:23" pos:end="505:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="505:37" pos:end="505:73"><expr pos:start="505:37" pos:end="505:73"><literal type="string" pos:start="505:37" pos:end="505:73">"me_threshold too large, max is %d\n"</literal></expr></argument>, <argument pos:start="505:76" pos:end="505:80"><expr pos:start="505:76" pos:end="505:80"><name pos:start="505:76" pos:end="505:76">i</name> <operator pos:start="505:78" pos:end="505:78">-</operator> <literal type="number" pos:start="505:80" pos:end="505:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="507:9" pos:end="507:18">return <expr pos:start="507:16" pos:end="507:17"><operator pos:start="507:16" pos:end="507:16">-</operator><literal type="number" pos:start="507:17" pos:end="507:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="511:5" pos:end="517:5"><if pos:start="511:5" pos:end="517:5">if<condition pos:start="511:7" pos:end="511:32">(<expr pos:start="511:8" pos:end="511:31"><name pos:start="511:8" pos:end="511:26"><name pos:start="511:8" pos:end="511:12">avctx</name><operator pos:start="511:13" pos:end="511:14">-&gt;</operator><name pos:start="511:15" pos:end="511:26">mb_threshold</name></name> <operator pos:start="511:28" pos:end="511:29">&gt;=</operator> <name pos:start="511:31" pos:end="511:31">i</name></expr>)</condition><block pos:start="511:33" pos:end="517:5">{<block_content pos:start="513:9" pos:end="515:18">

        <expr_stmt pos:start="513:9" pos:end="513:82"><expr pos:start="513:9" pos:end="513:81"><call pos:start="513:9" pos:end="513:81"><name pos:start="513:9" pos:end="513:14">av_log</name><argument_list pos:start="513:15" pos:end="513:81">(<argument pos:start="513:16" pos:end="513:20"><expr pos:start="513:16" pos:end="513:20"><name pos:start="513:16" pos:end="513:20">avctx</name></expr></argument>, <argument pos:start="513:23" pos:end="513:34"><expr pos:start="513:23" pos:end="513:34"><name pos:start="513:23" pos:end="513:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="513:37" pos:end="513:73"><expr pos:start="513:37" pos:end="513:73"><literal type="string" pos:start="513:37" pos:end="513:73">"mb_threshold too large, max is %d\n"</literal></expr></argument>, <argument pos:start="513:76" pos:end="513:80"><expr pos:start="513:76" pos:end="513:80"><name pos:start="513:76" pos:end="513:76">i</name> <operator pos:start="513:78" pos:end="513:78">-</operator> <literal type="number" pos:start="513:80" pos:end="513:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="515:9" pos:end="515:18">return <expr pos:start="515:16" pos:end="515:17"><operator pos:start="515:16" pos:end="515:16">-</operator><literal type="number" pos:start="515:17" pos:end="515:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="521:5" pos:end="527:5"><if pos:start="521:5" pos:end="527:5">if<condition pos:start="521:7" pos:end="521:66">(<expr pos:start="521:8" pos:end="521:65"><name pos:start="521:8" pos:end="521:30"><name pos:start="521:8" pos:end="521:12">avctx</name><operator pos:start="521:13" pos:end="521:14">-&gt;</operator><name pos:start="521:15" pos:end="521:30">b_frame_strategy</name></name> <operator pos:start="521:32" pos:end="521:33">&amp;&amp;</operator> <operator pos:start="521:35" pos:end="521:35">(</operator><name pos:start="521:36" pos:end="521:47"><name pos:start="521:36" pos:end="521:40">avctx</name><operator pos:start="521:41" pos:end="521:42">-&gt;</operator><name pos:start="521:43" pos:end="521:47">flags</name></name><operator pos:start="521:48" pos:end="521:48">&amp;</operator><name pos:start="521:49" pos:end="521:64">CODEC_FLAG_PASS2</name><operator pos:start="521:65" pos:end="521:65">)</operator></expr>)</condition><block pos:start="521:67" pos:end="527:5">{<block_content pos:start="523:9" pos:end="525:36">

        <expr_stmt pos:start="523:9" pos:end="523:93"><expr pos:start="523:9" pos:end="523:92"><call pos:start="523:9" pos:end="523:92"><name pos:start="523:9" pos:end="523:14">av_log</name><argument_list pos:start="523:15" pos:end="523:92">(<argument pos:start="523:16" pos:end="523:20"><expr pos:start="523:16" pos:end="523:20"><name pos:start="523:16" pos:end="523:20">avctx</name></expr></argument>, <argument pos:start="523:23" pos:end="523:33"><expr pos:start="523:23" pos:end="523:33"><name pos:start="523:23" pos:end="523:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="523:36" pos:end="523:91"><expr pos:start="523:36" pos:end="523:91"><literal type="string" pos:start="523:36" pos:end="523:91">"notice: b_frame_strategy only affects the first pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="525:9" pos:end="525:36"><expr pos:start="525:9" pos:end="525:35"><name pos:start="525:9" pos:end="525:31"><name pos:start="525:9" pos:end="525:13">avctx</name><operator pos:start="525:14" pos:end="525:15">-&gt;</operator><name pos:start="525:16" pos:end="525:31">b_frame_strategy</name></name> <operator pos:start="525:33" pos:end="525:33">=</operator> <literal type="number" pos:start="525:35" pos:end="525:35">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="531:5" pos:end="531:58"><expr pos:start="531:5" pos:end="531:57"><name pos:start="531:5" pos:end="531:5">i</name><operator pos:start="531:6" pos:end="531:6">=</operator> <call pos:start="531:8" pos:end="531:57"><name pos:start="531:8" pos:end="531:13">av_gcd</name><argument_list pos:start="531:14" pos:end="531:57">(<argument pos:start="531:15" pos:end="531:34"><expr pos:start="531:15" pos:end="531:34"><name pos:start="531:15" pos:end="531:34"><name pos:start="531:15" pos:end="531:19">avctx</name><operator pos:start="531:20" pos:end="531:21">-&gt;</operator><name pos:start="531:22" pos:end="531:30">time_base</name><operator pos:start="531:31" pos:end="531:31">.</operator><name pos:start="531:32" pos:end="531:34">den</name></name></expr></argument>, <argument pos:start="531:37" pos:end="531:56"><expr pos:start="531:37" pos:end="531:56"><name pos:start="531:37" pos:end="531:56"><name pos:start="531:37" pos:end="531:41">avctx</name><operator pos:start="531:42" pos:end="531:43">-&gt;</operator><name pos:start="531:44" pos:end="531:52">time_base</name><operator pos:start="531:53" pos:end="531:53">.</operator><name pos:start="531:54" pos:end="531:56">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="533:5" pos:end="543:5"><if pos:start="533:5" pos:end="543:5">if<condition pos:start="533:7" pos:end="533:13">(<expr pos:start="533:8" pos:end="533:12"><name pos:start="533:8" pos:end="533:8">i</name> <operator pos:start="533:10" pos:end="533:10">&gt;</operator> <literal type="number" pos:start="533:12" pos:end="533:12">1</literal></expr>)</condition><block pos:start="533:14" pos:end="543:5">{<block_content pos:start="535:9" pos:end="539:34">

        <expr_stmt pos:start="535:9" pos:end="535:79"><expr pos:start="535:9" pos:end="535:78"><call pos:start="535:9" pos:end="535:78"><name pos:start="535:9" pos:end="535:14">av_log</name><argument_list pos:start="535:15" pos:end="535:78">(<argument pos:start="535:16" pos:end="535:20"><expr pos:start="535:16" pos:end="535:20"><name pos:start="535:16" pos:end="535:20">avctx</name></expr></argument>, <argument pos:start="535:23" pos:end="535:33"><expr pos:start="535:23" pos:end="535:33"><name pos:start="535:23" pos:end="535:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="535:36" pos:end="535:77"><expr pos:start="535:36" pos:end="535:77"><literal type="string" pos:start="535:36" pos:end="535:77">"removing common factors from framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="537:9" pos:end="537:34"><expr pos:start="537:9" pos:end="537:33"><name pos:start="537:9" pos:end="537:28"><name pos:start="537:9" pos:end="537:13">avctx</name><operator pos:start="537:14" pos:end="537:15">-&gt;</operator><name pos:start="537:16" pos:end="537:24">time_base</name><operator pos:start="537:25" pos:end="537:25">.</operator><name pos:start="537:26" pos:end="537:28">den</name></name> <operator pos:start="537:30" pos:end="537:31">/=</operator> <name pos:start="537:33" pos:end="537:33">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:34"><expr pos:start="539:9" pos:end="539:33"><name pos:start="539:9" pos:end="539:28"><name pos:start="539:9" pos:end="539:13">avctx</name><operator pos:start="539:14" pos:end="539:15">-&gt;</operator><name pos:start="539:16" pos:end="539:24">time_base</name><operator pos:start="539:25" pos:end="539:25">.</operator><name pos:start="539:26" pos:end="539:28">num</name></name> <operator pos:start="539:30" pos:end="539:31">/=</operator> <name pos:start="539:33" pos:end="539:33">i</name></expr>;</expr_stmt>

<comment type="line" pos:start="541:1" pos:end="541:20">//        return -1;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="547:5" pos:end="559:5"><if pos:start="547:5" pos:end="553:5">if<condition pos:start="547:7" pos:end="547:124">(<expr pos:start="547:8" pos:end="547:123"><name pos:start="547:8" pos:end="547:20"><name pos:start="547:8" pos:end="547:8">s</name><operator pos:start="547:9" pos:end="547:10">-&gt;</operator><name pos:start="547:11" pos:end="547:20">mpeg_quant</name></name> <operator pos:start="547:22" pos:end="547:23">||</operator> <name pos:start="547:25" pos:end="547:35"><name pos:start="547:25" pos:end="547:25">s</name><operator pos:start="547:26" pos:end="547:27">-&gt;</operator><name pos:start="547:28" pos:end="547:35">codec_id</name></name><operator pos:start="547:36" pos:end="547:37">==</operator><name pos:start="547:38" pos:end="547:56">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="547:58" pos:end="547:59">||</operator> <name pos:start="547:61" pos:end="547:71"><name pos:start="547:61" pos:end="547:61">s</name><operator pos:start="547:62" pos:end="547:63">-&gt;</operator><name pos:start="547:64" pos:end="547:71">codec_id</name></name><operator pos:start="547:72" pos:end="547:73">==</operator><name pos:start="547:74" pos:end="547:92">CODEC_ID_MPEG2VIDEO</name> <operator pos:start="547:94" pos:end="547:95">||</operator> <name pos:start="547:97" pos:end="547:107"><name pos:start="547:97" pos:end="547:97">s</name><operator pos:start="547:98" pos:end="547:99">-&gt;</operator><name pos:start="547:100" pos:end="547:107">codec_id</name></name><operator pos:start="547:108" pos:end="547:109">==</operator><name pos:start="547:110" pos:end="547:123">CODEC_ID_MJPEG</name></expr>)</condition><block pos:start="547:125" pos:end="553:5">{<block_content pos:start="549:9" pos:end="551:31">

        <expr_stmt pos:start="549:9" pos:end="549:53"><expr pos:start="549:9" pos:end="549:52"><name pos:start="549:9" pos:end="549:27"><name pos:start="549:9" pos:end="549:9">s</name><operator pos:start="549:10" pos:end="549:11">-&gt;</operator><name pos:start="549:12" pos:end="549:27">intra_quant_bias</name></name><operator pos:start="549:28" pos:end="549:28">=</operator> <literal type="number" pos:start="549:30" pos:end="549:30">3</literal><operator pos:start="549:31" pos:end="549:32">&lt;&lt;</operator><operator pos:start="549:33" pos:end="549:33">(</operator><name pos:start="549:34" pos:end="549:49">QUANT_BIAS_SHIFT</name><operator pos:start="549:50" pos:end="549:50">-</operator><literal type="number" pos:start="549:51" pos:end="549:51">3</literal><operator pos:start="549:52" pos:end="549:52">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="549:55" pos:end="549:69">//(a + x*3/8)/x</comment>

        <expr_stmt pos:start="551:9" pos:end="551:31"><expr pos:start="551:9" pos:end="551:30"><name pos:start="551:9" pos:end="551:27"><name pos:start="551:9" pos:end="551:9">s</name><operator pos:start="551:10" pos:end="551:11">-&gt;</operator><name pos:start="551:12" pos:end="551:27">inter_quant_bias</name></name><operator pos:start="551:28" pos:end="551:28">=</operator> <literal type="number" pos:start="551:30" pos:end="551:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="553:6" pos:end="559:5">else<block pos:start="553:10" pos:end="559:5">{<block_content pos:start="555:9" pos:end="557:55">

        <expr_stmt pos:start="555:9" pos:end="555:30"><expr pos:start="555:9" pos:end="555:29"><name pos:start="555:9" pos:end="555:27"><name pos:start="555:9" pos:end="555:9">s</name><operator pos:start="555:10" pos:end="555:11">-&gt;</operator><name pos:start="555:12" pos:end="555:27">intra_quant_bias</name></name><operator pos:start="555:28" pos:end="555:28">=</operator><literal type="number" pos:start="555:29" pos:end="555:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="557:9" pos:end="557:55"><expr pos:start="557:9" pos:end="557:54"><name pos:start="557:9" pos:end="557:27"><name pos:start="557:9" pos:end="557:9">s</name><operator pos:start="557:10" pos:end="557:11">-&gt;</operator><name pos:start="557:12" pos:end="557:27">inter_quant_bias</name></name><operator pos:start="557:28" pos:end="557:28">=</operator><operator pos:start="557:29" pos:end="557:29">-</operator><operator pos:start="557:30" pos:end="557:30">(</operator><literal type="number" pos:start="557:31" pos:end="557:31">1</literal><operator pos:start="557:32" pos:end="557:33">&lt;&lt;</operator><operator pos:start="557:34" pos:end="557:34">(</operator><name pos:start="557:35" pos:end="557:50">QUANT_BIAS_SHIFT</name><operator pos:start="557:51" pos:end="557:51">-</operator><literal type="number" pos:start="557:52" pos:end="557:52">2</literal><operator pos:start="557:53" pos:end="557:53">)</operator><operator pos:start="557:54" pos:end="557:54">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="557:57" pos:end="557:69">//(a - x/4)/x</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="563:5" pos:end="565:53"><if pos:start="563:5" pos:end="565:53">if<condition pos:start="563:7" pos:end="563:56">(<expr pos:start="563:8" pos:end="563:55"><name pos:start="563:8" pos:end="563:30"><name pos:start="563:8" pos:end="563:12">avctx</name><operator pos:start="563:13" pos:end="563:14">-&gt;</operator><name pos:start="563:15" pos:end="563:30">intra_quant_bias</name></name> <operator pos:start="563:32" pos:end="563:33">!=</operator> <name pos:start="563:35" pos:end="563:55">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="565:9" pos:end="565:53"><block_content pos:start="565:9" pos:end="565:53">

        <expr_stmt pos:start="565:9" pos:end="565:53"><expr pos:start="565:9" pos:end="565:52"><name pos:start="565:9" pos:end="565:27"><name pos:start="565:9" pos:end="565:9">s</name><operator pos:start="565:10" pos:end="565:11">-&gt;</operator><name pos:start="565:12" pos:end="565:27">intra_quant_bias</name></name><operator pos:start="565:28" pos:end="565:28">=</operator> <name pos:start="565:30" pos:end="565:52"><name pos:start="565:30" pos:end="565:34">avctx</name><operator pos:start="565:35" pos:end="565:36">-&gt;</operator><name pos:start="565:37" pos:end="565:52">intra_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="567:5" pos:end="569:53"><if pos:start="567:5" pos:end="569:53">if<condition pos:start="567:7" pos:end="567:56">(<expr pos:start="567:8" pos:end="567:55"><name pos:start="567:8" pos:end="567:30"><name pos:start="567:8" pos:end="567:12">avctx</name><operator pos:start="567:13" pos:end="567:14">-&gt;</operator><name pos:start="567:15" pos:end="567:30">inter_quant_bias</name></name> <operator pos:start="567:32" pos:end="567:33">!=</operator> <name pos:start="567:35" pos:end="567:55">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="569:9" pos:end="569:53"><block_content pos:start="569:9" pos:end="569:53">

        <expr_stmt pos:start="569:9" pos:end="569:53"><expr pos:start="569:9" pos:end="569:52"><name pos:start="569:9" pos:end="569:27"><name pos:start="569:9" pos:end="569:9">s</name><operator pos:start="569:10" pos:end="569:11">-&gt;</operator><name pos:start="569:12" pos:end="569:27">inter_quant_bias</name></name><operator pos:start="569:28" pos:end="569:28">=</operator> <name pos:start="569:30" pos:end="569:52"><name pos:start="569:30" pos:end="569:34">avctx</name><operator pos:start="569:35" pos:end="569:36">-&gt;</operator><name pos:start="569:37" pos:end="569:52">inter_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="573:5" pos:end="573:84"><expr pos:start="573:5" pos:end="573:83"><call pos:start="573:5" pos:end="573:83"><name pos:start="573:5" pos:end="573:33">avcodec_get_chroma_sub_sample</name><argument_list pos:start="573:34" pos:end="573:83">(<argument pos:start="573:35" pos:end="573:48"><expr pos:start="573:35" pos:end="573:48"><name pos:start="573:35" pos:end="573:48"><name pos:start="573:35" pos:end="573:39">avctx</name><operator pos:start="573:40" pos:end="573:41">-&gt;</operator><name pos:start="573:42" pos:end="573:48">pix_fmt</name></name></expr></argument>, <argument pos:start="573:51" pos:end="573:65"><expr pos:start="573:51" pos:end="573:65"><operator pos:start="573:51" pos:end="573:51">&amp;</operator><name pos:start="573:52" pos:end="573:65">chroma_h_shift</name></expr></argument>, <argument pos:start="573:68" pos:end="573:82"><expr pos:start="573:68" pos:end="573:82"><operator pos:start="573:68" pos:end="573:68">&amp;</operator><name pos:start="573:69" pos:end="573:82">chroma_v_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="577:5" pos:end="583:5"><if pos:start="577:5" pos:end="583:5">if<condition pos:start="577:7" pos:end="577:80">(<expr pos:start="577:8" pos:end="577:79"><name pos:start="577:8" pos:end="577:22"><name pos:start="577:8" pos:end="577:12">avctx</name><operator pos:start="577:13" pos:end="577:14">-&gt;</operator><name pos:start="577:15" pos:end="577:22">codec_id</name></name> <operator pos:start="577:24" pos:end="577:25">==</operator> <name pos:start="577:27" pos:end="577:40">CODEC_ID_MPEG4</name> <operator pos:start="577:42" pos:end="577:43">&amp;&amp;</operator> <name pos:start="577:45" pos:end="577:67"><name pos:start="577:45" pos:end="577:45">s</name><operator pos:start="577:46" pos:end="577:47">-&gt;</operator><name pos:start="577:48" pos:end="577:52">avctx</name><operator pos:start="577:53" pos:end="577:54">-&gt;</operator><name pos:start="577:55" pos:end="577:63">time_base</name><operator pos:start="577:64" pos:end="577:64">.</operator><name pos:start="577:65" pos:end="577:67">den</name></name> <operator pos:start="577:69" pos:end="577:69">&gt;</operator> <operator pos:start="577:71" pos:end="577:71">(</operator><literal type="number" pos:start="577:72" pos:end="577:72">1</literal><operator pos:start="577:73" pos:end="577:74">&lt;&lt;</operator><literal type="number" pos:start="577:75" pos:end="577:76">16</literal><operator pos:start="577:77" pos:end="577:77">)</operator><operator pos:start="577:78" pos:end="577:78">-</operator><literal type="number" pos:start="577:79" pos:end="577:79">1</literal></expr>)</condition><block pos:start="577:81" pos:end="583:5">{<block_content pos:start="579:9" pos:end="581:18">

        <expr_stmt pos:start="579:9" pos:end="579:83"><expr pos:start="579:9" pos:end="579:82"><call pos:start="579:9" pos:end="579:82"><name pos:start="579:9" pos:end="579:14">av_log</name><argument_list pos:start="579:15" pos:end="579:82">(<argument pos:start="579:16" pos:end="579:20"><expr pos:start="579:16" pos:end="579:20"><name pos:start="579:16" pos:end="579:20">avctx</name></expr></argument>, <argument pos:start="579:23" pos:end="579:34"><expr pos:start="579:23" pos:end="579:34"><name pos:start="579:23" pos:end="579:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="579:37" pos:end="579:81"><expr pos:start="579:37" pos:end="579:81"><literal type="string" pos:start="579:37" pos:end="579:81">"timebase not supported by mpeg 4 standard\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="581:9" pos:end="581:18">return <expr pos:start="581:16" pos:end="581:17"><operator pos:start="581:16" pos:end="581:16">-</operator><literal type="number" pos:start="581:17" pos:end="581:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="585:5" pos:end="585:70"><expr pos:start="585:5" pos:end="585:69"><name pos:start="585:5" pos:end="585:26"><name pos:start="585:5" pos:end="585:5">s</name><operator pos:start="585:6" pos:end="585:7">-&gt;</operator><name pos:start="585:8" pos:end="585:26">time_increment_bits</name></name> <operator pos:start="585:28" pos:end="585:28">=</operator> <call pos:start="585:30" pos:end="585:65"><name pos:start="585:30" pos:end="585:36">av_log2</name><argument_list pos:start="585:37" pos:end="585:65">(<argument pos:start="585:38" pos:end="585:64"><expr pos:start="585:38" pos:end="585:64"><name pos:start="585:38" pos:end="585:60"><name pos:start="585:38" pos:end="585:38">s</name><operator pos:start="585:39" pos:end="585:40">-&gt;</operator><name pos:start="585:41" pos:end="585:45">avctx</name><operator pos:start="585:46" pos:end="585:47">-&gt;</operator><name pos:start="585:48" pos:end="585:56">time_base</name><operator pos:start="585:57" pos:end="585:57">.</operator><name pos:start="585:58" pos:end="585:60">den</name></name> <operator pos:start="585:62" pos:end="585:62">-</operator> <literal type="number" pos:start="585:64" pos:end="585:64">1</literal></expr></argument>)</argument_list></call> <operator pos:start="585:67" pos:end="585:67">+</operator> <literal type="number" pos:start="585:69" pos:end="585:69">1</literal></expr>;</expr_stmt>



    <switch pos:start="589:5" pos:end="895:5">switch<condition pos:start="589:11" pos:end="589:28">(<expr pos:start="589:12" pos:end="589:27"><name pos:start="589:12" pos:end="589:27"><name pos:start="589:12" pos:end="589:16">avctx</name><operator pos:start="589:17" pos:end="589:18">-&gt;</operator><name pos:start="589:19" pos:end="589:23">codec</name><operator pos:start="589:24" pos:end="589:25">-&gt;</operator><name pos:start="589:26" pos:end="589:27">id</name></name></expr>)</condition> <block pos:start="589:30" pos:end="895:5">{<block_content pos:start="591:5" pos:end="893:18">

    <case pos:start="591:5" pos:end="591:29">case <expr pos:start="591:10" pos:end="591:28"><name pos:start="591:10" pos:end="591:28">CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <expr_stmt pos:start="593:9" pos:end="593:34"><expr pos:start="593:9" pos:end="593:33"><name pos:start="593:9" pos:end="593:21"><name pos:start="593:9" pos:end="593:9">s</name><operator pos:start="593:10" pos:end="593:11">-&gt;</operator><name pos:start="593:12" pos:end="593:21">out_format</name></name> <operator pos:start="593:23" pos:end="593:23">=</operator> <name pos:start="593:25" pos:end="593:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="595:9" pos:end="595:58"><expr pos:start="595:9" pos:end="595:57"><name pos:start="595:9" pos:end="595:20"><name pos:start="595:9" pos:end="595:9">s</name><operator pos:start="595:10" pos:end="595:11">-&gt;</operator><name pos:start="595:12" pos:end="595:20">low_delay</name></name><operator pos:start="595:21" pos:end="595:21">=</operator> <operator pos:start="595:23" pos:end="595:23">!</operator><operator pos:start="595:24" pos:end="595:24">!</operator><operator pos:start="595:25" pos:end="595:25">(</operator><name pos:start="595:26" pos:end="595:33"><name pos:start="595:26" pos:end="595:26">s</name><operator pos:start="595:27" pos:end="595:28">-&gt;</operator><name pos:start="595:29" pos:end="595:33">flags</name></name> <operator pos:start="595:35" pos:end="595:35">&amp;</operator> <name pos:start="595:37" pos:end="595:56">CODEC_FLAG_LOW_DELAY</name><operator pos:start="595:57" pos:end="595:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="597:9" pos:end="597:63"><expr pos:start="597:9" pos:end="597:62"><name pos:start="597:9" pos:end="597:20"><name pos:start="597:9" pos:end="597:13">avctx</name><operator pos:start="597:14" pos:end="597:15">-&gt;</operator><name pos:start="597:16" pos:end="597:20">delay</name></name><operator pos:start="597:21" pos:end="597:21">=</operator> <ternary pos:start="597:23" pos:end="597:62"><condition pos:start="597:23" pos:end="597:36"><expr pos:start="597:23" pos:end="597:34"><name pos:start="597:23" pos:end="597:34"><name pos:start="597:23" pos:end="597:23">s</name><operator pos:start="597:24" pos:end="597:25">-&gt;</operator><name pos:start="597:26" pos:end="597:34">low_delay</name></name></expr> ?</condition><then pos:start="597:38" pos:end="597:38"> <expr pos:start="597:38" pos:end="597:38"><literal type="number" pos:start="597:38" pos:end="597:38">0</literal></expr> </then><else pos:start="597:40" pos:end="597:62">: <expr pos:start="597:42" pos:end="597:62"><operator pos:start="597:42" pos:end="597:42">(</operator><name pos:start="597:43" pos:end="597:57"><name pos:start="597:43" pos:end="597:43">s</name><operator pos:start="597:44" pos:end="597:45">-&gt;</operator><name pos:start="597:46" pos:end="597:57">max_b_frames</name></name> <operator pos:start="597:59" pos:end="597:59">+</operator> <literal type="number" pos:start="597:61" pos:end="597:61">1</literal><operator pos:start="597:62" pos:end="597:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="599:9" pos:end="599:14">break;</break>

    <case pos:start="601:5" pos:end="601:29">case <expr pos:start="601:10" pos:end="601:28"><name pos:start="601:10" pos:end="601:28">CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <expr_stmt pos:start="603:9" pos:end="603:34"><expr pos:start="603:9" pos:end="603:33"><name pos:start="603:9" pos:end="603:21"><name pos:start="603:9" pos:end="603:9">s</name><operator pos:start="603:10" pos:end="603:11">-&gt;</operator><name pos:start="603:12" pos:end="603:21">out_format</name></name> <operator pos:start="603:23" pos:end="603:23">=</operator> <name pos:start="603:25" pos:end="603:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="605:9" pos:end="605:58"><expr pos:start="605:9" pos:end="605:57"><name pos:start="605:9" pos:end="605:20"><name pos:start="605:9" pos:end="605:9">s</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:20">low_delay</name></name><operator pos:start="605:21" pos:end="605:21">=</operator> <operator pos:start="605:23" pos:end="605:23">!</operator><operator pos:start="605:24" pos:end="605:24">!</operator><operator pos:start="605:25" pos:end="605:25">(</operator><name pos:start="605:26" pos:end="605:33"><name pos:start="605:26" pos:end="605:26">s</name><operator pos:start="605:27" pos:end="605:28">-&gt;</operator><name pos:start="605:29" pos:end="605:33">flags</name></name> <operator pos:start="605:35" pos:end="605:35">&amp;</operator> <name pos:start="605:37" pos:end="605:56">CODEC_FLAG_LOW_DELAY</name><operator pos:start="605:57" pos:end="605:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="607:9" pos:end="607:63"><expr pos:start="607:9" pos:end="607:62"><name pos:start="607:9" pos:end="607:20"><name pos:start="607:9" pos:end="607:13">avctx</name><operator pos:start="607:14" pos:end="607:15">-&gt;</operator><name pos:start="607:16" pos:end="607:20">delay</name></name><operator pos:start="607:21" pos:end="607:21">=</operator> <ternary pos:start="607:23" pos:end="607:62"><condition pos:start="607:23" pos:end="607:36"><expr pos:start="607:23" pos:end="607:34"><name pos:start="607:23" pos:end="607:34"><name pos:start="607:23" pos:end="607:23">s</name><operator pos:start="607:24" pos:end="607:25">-&gt;</operator><name pos:start="607:26" pos:end="607:34">low_delay</name></name></expr> ?</condition><then pos:start="607:38" pos:end="607:38"> <expr pos:start="607:38" pos:end="607:38"><literal type="number" pos:start="607:38" pos:end="607:38">0</literal></expr> </then><else pos:start="607:40" pos:end="607:62">: <expr pos:start="607:42" pos:end="607:62"><operator pos:start="607:42" pos:end="607:42">(</operator><name pos:start="607:43" pos:end="607:57"><name pos:start="607:43" pos:end="607:43">s</name><operator pos:start="607:44" pos:end="607:45">-&gt;</operator><name pos:start="607:46" pos:end="607:57">max_b_frames</name></name> <operator pos:start="607:59" pos:end="607:59">+</operator> <literal type="number" pos:start="607:61" pos:end="607:61">1</literal><operator pos:start="607:62" pos:end="607:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="609:9" pos:end="609:23"><expr pos:start="609:9" pos:end="609:22"><name pos:start="609:9" pos:end="609:19"><name pos:start="609:9" pos:end="609:9">s</name><operator pos:start="609:10" pos:end="609:11">-&gt;</operator><name pos:start="609:12" pos:end="609:19">rtp_mode</name></name><operator pos:start="609:20" pos:end="609:20">=</operator> <literal type="number" pos:start="609:22" pos:end="609:22">1</literal></expr>;</expr_stmt>

        <break pos:start="611:9" pos:end="611:14">break;</break>

    <case pos:start="613:5" pos:end="613:24">case <expr pos:start="613:10" pos:end="613:23"><name pos:start="613:10" pos:end="613:23">CODEC_ID_LJPEG</name></expr>:</case>

    <case pos:start="615:5" pos:end="615:24">case <expr pos:start="615:10" pos:end="615:23"><name pos:start="615:10" pos:end="615:23">CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="617:9" pos:end="617:34"><expr pos:start="617:9" pos:end="617:33"><name pos:start="617:9" pos:end="617:21"><name pos:start="617:9" pos:end="617:9">s</name><operator pos:start="617:10" pos:end="617:11">-&gt;</operator><name pos:start="617:12" pos:end="617:21">out_format</name></name> <operator pos:start="617:23" pos:end="617:23">=</operator> <name pos:start="617:25" pos:end="617:33">FMT_MJPEG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="619:9" pos:end="619:26"><expr pos:start="619:9" pos:end="619:25"><name pos:start="619:9" pos:end="619:21"><name pos:start="619:9" pos:end="619:9">s</name><operator pos:start="619:10" pos:end="619:11">-&gt;</operator><name pos:start="619:12" pos:end="619:21">intra_only</name></name> <operator pos:start="619:23" pos:end="619:23">=</operator> <literal type="number" pos:start="619:25" pos:end="619:25">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="619:28" pos:end="619:58">/* force intra only for jpeg */</comment>

        <if_stmt pos:start="621:9" pos:end="643:9"><if pos:start="621:9" pos:end="629:9">if<condition pos:start="621:11" pos:end="621:80">(<expr pos:start="621:12" pos:end="621:79"><name pos:start="621:12" pos:end="621:27"><name pos:start="621:12" pos:end="621:16">avctx</name><operator pos:start="621:17" pos:end="621:18">-&gt;</operator><name pos:start="621:19" pos:end="621:23">codec</name><operator pos:start="621:24" pos:end="621:25">-&gt;</operator><name pos:start="621:26" pos:end="621:27">id</name></name> <operator pos:start="621:29" pos:end="621:30">==</operator> <name pos:start="621:32" pos:end="621:45">CODEC_ID_LJPEG</name> <operator pos:start="621:47" pos:end="621:48">&amp;&amp;</operator> <name pos:start="621:50" pos:end="621:63"><name pos:start="621:50" pos:end="621:54">avctx</name><operator pos:start="621:55" pos:end="621:56">-&gt;</operator><name pos:start="621:57" pos:end="621:63">pix_fmt</name></name> <operator pos:start="621:65" pos:end="621:66">==</operator> <name pos:start="621:68" pos:end="621:79">PIX_FMT_BGRA</name></expr>)</condition><block pos:start="621:81" pos:end="629:9">{<block_content pos:start="623:13" pos:end="627:58">

            <expr_stmt pos:start="623:13" pos:end="627:58"><expr pos:start="623:13" pos:end="627:57"><name pos:start="623:13" pos:end="623:31"><name pos:start="623:13" pos:end="623:13">s</name><operator pos:start="623:14" pos:end="623:15">-&gt;</operator><name pos:start="623:16" pos:end="623:28">mjpeg_vsample</name><index pos:start="623:29" pos:end="623:31">[<expr pos:start="623:30" pos:end="623:30"><literal type="number" pos:start="623:30" pos:end="623:30">0</literal></expr>]</index></name> <operator pos:start="623:33" pos:end="623:33">=</operator> <name pos:start="623:35" pos:end="623:53"><name pos:start="623:35" pos:end="623:35">s</name><operator pos:start="623:36" pos:end="623:37">-&gt;</operator><name pos:start="623:38" pos:end="623:50">mjpeg_hsample</name><index pos:start="623:51" pos:end="623:53">[<expr pos:start="623:52" pos:end="623:52"><literal type="number" pos:start="623:52" pos:end="623:52">0</literal></expr>]</index></name> <operator pos:start="623:55" pos:end="623:55">=</operator>

            <name pos:start="625:13" pos:end="625:31"><name pos:start="625:13" pos:end="625:13">s</name><operator pos:start="625:14" pos:end="625:15">-&gt;</operator><name pos:start="625:16" pos:end="625:28">mjpeg_vsample</name><index pos:start="625:29" pos:end="625:31">[<expr pos:start="625:30" pos:end="625:30"><literal type="number" pos:start="625:30" pos:end="625:30">1</literal></expr>]</index></name> <operator pos:start="625:33" pos:end="625:33">=</operator> <name pos:start="625:35" pos:end="625:53"><name pos:start="625:35" pos:end="625:35">s</name><operator pos:start="625:36" pos:end="625:37">-&gt;</operator><name pos:start="625:38" pos:end="625:50">mjpeg_hsample</name><index pos:start="625:51" pos:end="625:53">[<expr pos:start="625:52" pos:end="625:52"><literal type="number" pos:start="625:52" pos:end="625:52">1</literal></expr>]</index></name> <operator pos:start="625:55" pos:end="625:55">=</operator>

            <name pos:start="627:13" pos:end="627:31"><name pos:start="627:13" pos:end="627:13">s</name><operator pos:start="627:14" pos:end="627:15">-&gt;</operator><name pos:start="627:16" pos:end="627:28">mjpeg_vsample</name><index pos:start="627:29" pos:end="627:31">[<expr pos:start="627:30" pos:end="627:30"><literal type="number" pos:start="627:30" pos:end="627:30">2</literal></expr>]</index></name> <operator pos:start="627:33" pos:end="627:33">=</operator> <name pos:start="627:35" pos:end="627:53"><name pos:start="627:35" pos:end="627:35">s</name><operator pos:start="627:36" pos:end="627:37">-&gt;</operator><name pos:start="627:38" pos:end="627:50">mjpeg_hsample</name><index pos:start="627:51" pos:end="627:53">[<expr pos:start="627:52" pos:end="627:52"><literal type="number" pos:start="627:52" pos:end="627:52">2</literal></expr>]</index></name> <operator pos:start="627:55" pos:end="627:55">=</operator> <literal type="number" pos:start="627:57" pos:end="627:57">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="629:10" pos:end="643:9">else<block pos:start="629:14" pos:end="643:9">{<block_content pos:start="631:13" pos:end="641:52">

            <expr_stmt pos:start="631:13" pos:end="631:36"><expr pos:start="631:13" pos:end="631:35"><name pos:start="631:13" pos:end="631:31"><name pos:start="631:13" pos:end="631:13">s</name><operator pos:start="631:14" pos:end="631:15">-&gt;</operator><name pos:start="631:16" pos:end="631:28">mjpeg_vsample</name><index pos:start="631:29" pos:end="631:31">[<expr pos:start="631:30" pos:end="631:30"><literal type="number" pos:start="631:30" pos:end="631:30">0</literal></expr>]</index></name> <operator pos:start="631:33" pos:end="631:33">=</operator> <literal type="number" pos:start="631:35" pos:end="631:35">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="633:13" pos:end="633:52"><expr pos:start="633:13" pos:end="633:51"><name pos:start="633:13" pos:end="633:31"><name pos:start="633:13" pos:end="633:13">s</name><operator pos:start="633:14" pos:end="633:15">-&gt;</operator><name pos:start="633:16" pos:end="633:28">mjpeg_vsample</name><index pos:start="633:29" pos:end="633:31">[<expr pos:start="633:30" pos:end="633:30"><literal type="number" pos:start="633:30" pos:end="633:30">1</literal></expr>]</index></name> <operator pos:start="633:33" pos:end="633:33">=</operator> <literal type="number" pos:start="633:35" pos:end="633:35">2</literal><operator pos:start="633:36" pos:end="633:37">&gt;&gt;</operator><name pos:start="633:38" pos:end="633:51">chroma_v_shift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:52"><expr pos:start="635:13" pos:end="635:51"><name pos:start="635:13" pos:end="635:31"><name pos:start="635:13" pos:end="635:13">s</name><operator pos:start="635:14" pos:end="635:15">-&gt;</operator><name pos:start="635:16" pos:end="635:28">mjpeg_vsample</name><index pos:start="635:29" pos:end="635:31">[<expr pos:start="635:30" pos:end="635:30"><literal type="number" pos:start="635:30" pos:end="635:30">2</literal></expr>]</index></name> <operator pos:start="635:33" pos:end="635:33">=</operator> <literal type="number" pos:start="635:35" pos:end="635:35">2</literal><operator pos:start="635:36" pos:end="635:37">&gt;&gt;</operator><name pos:start="635:38" pos:end="635:51">chroma_v_shift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:36"><expr pos:start="637:13" pos:end="637:35"><name pos:start="637:13" pos:end="637:31"><name pos:start="637:13" pos:end="637:13">s</name><operator pos:start="637:14" pos:end="637:15">-&gt;</operator><name pos:start="637:16" pos:end="637:28">mjpeg_hsample</name><index pos:start="637:29" pos:end="637:31">[<expr pos:start="637:30" pos:end="637:30"><literal type="number" pos:start="637:30" pos:end="637:30">0</literal></expr>]</index></name> <operator pos:start="637:33" pos:end="637:33">=</operator> <literal type="number" pos:start="637:35" pos:end="637:35">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:52"><expr pos:start="639:13" pos:end="639:51"><name pos:start="639:13" pos:end="639:31"><name pos:start="639:13" pos:end="639:13">s</name><operator pos:start="639:14" pos:end="639:15">-&gt;</operator><name pos:start="639:16" pos:end="639:28">mjpeg_hsample</name><index pos:start="639:29" pos:end="639:31">[<expr pos:start="639:30" pos:end="639:30"><literal type="number" pos:start="639:30" pos:end="639:30">1</literal></expr>]</index></name> <operator pos:start="639:33" pos:end="639:33">=</operator> <literal type="number" pos:start="639:35" pos:end="639:35">2</literal><operator pos:start="639:36" pos:end="639:37">&gt;&gt;</operator><name pos:start="639:38" pos:end="639:51">chroma_h_shift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="641:13" pos:end="641:52"><expr pos:start="641:13" pos:end="641:51"><name pos:start="641:13" pos:end="641:31"><name pos:start="641:13" pos:end="641:13">s</name><operator pos:start="641:14" pos:end="641:15">-&gt;</operator><name pos:start="641:16" pos:end="641:28">mjpeg_hsample</name><index pos:start="641:29" pos:end="641:31">[<expr pos:start="641:30" pos:end="641:30"><literal type="number" pos:start="641:30" pos:end="641:30">2</literal></expr>]</index></name> <operator pos:start="641:33" pos:end="641:33">=</operator> <literal type="number" pos:start="641:35" pos:end="641:35">2</literal><operator pos:start="641:36" pos:end="641:37">&gt;&gt;</operator><name pos:start="641:38" pos:end="641:51">chroma_h_shift</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="645:9" pos:end="649:22"><if pos:start="645:9" pos:end="649:22">if <condition pos:start="645:12" pos:end="647:43">(<expr pos:start="645:13" pos:end="647:42"><operator pos:start="645:13" pos:end="645:13">!</operator><operator pos:start="645:14" pos:end="645:14">(</operator><name pos:start="645:15" pos:end="645:34">CONFIG_MJPEG_ENCODER</name> <operator pos:start="645:36" pos:end="645:37">||</operator> <name pos:start="645:39" pos:end="645:58">CONFIG_LJPEG_ENCODER</name><operator pos:start="645:59" pos:end="645:59">)</operator>

            <operator pos:start="647:13" pos:end="647:14">||</operator> <call pos:start="647:16" pos:end="647:38"><name pos:start="647:16" pos:end="647:35">ff_mjpeg_encode_init</name><argument_list pos:start="647:36" pos:end="647:38">(<argument pos:start="647:37" pos:end="647:37"><expr pos:start="647:37" pos:end="647:37"><name pos:start="647:37" pos:end="647:37">s</name></expr></argument>)</argument_list></call> <operator pos:start="647:40" pos:end="647:40">&lt;</operator> <literal type="number" pos:start="647:42" pos:end="647:42">0</literal></expr>)</condition><block type="pseudo" pos:start="649:13" pos:end="649:22"><block_content pos:start="649:13" pos:end="649:22">

            <return pos:start="649:13" pos:end="649:22">return <expr pos:start="649:20" pos:end="649:21"><operator pos:start="649:20" pos:end="649:20">-</operator><literal type="number" pos:start="649:21" pos:end="649:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="651:9" pos:end="651:23"><expr pos:start="651:9" pos:end="651:22"><name pos:start="651:9" pos:end="651:20"><name pos:start="651:9" pos:end="651:13">avctx</name><operator pos:start="651:14" pos:end="651:15">-&gt;</operator><name pos:start="651:16" pos:end="651:20">delay</name></name><operator pos:start="651:21" pos:end="651:21">=</operator><literal type="number" pos:start="651:22" pos:end="651:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:23"><expr pos:start="653:9" pos:end="653:22"><name pos:start="653:9" pos:end="653:20"><name pos:start="653:9" pos:end="653:9">s</name><operator pos:start="653:10" pos:end="653:11">-&gt;</operator><name pos:start="653:12" pos:end="653:20">low_delay</name></name><operator pos:start="653:21" pos:end="653:21">=</operator><literal type="number" pos:start="653:22" pos:end="653:22">1</literal></expr>;</expr_stmt>

        <break pos:start="655:9" pos:end="655:14">break;</break>

    <case pos:start="657:5" pos:end="657:23">case <expr pos:start="657:10" pos:end="657:22"><name pos:start="657:10" pos:end="657:22">CODEC_ID_H261</name></expr>:</case>

        <if_stmt pos:start="659:9" pos:end="659:45"><if pos:start="659:9" pos:end="659:45">if <condition pos:start="659:12" pos:end="659:33">(<expr pos:start="659:13" pos:end="659:32"><operator pos:start="659:13" pos:end="659:13">!</operator><name pos:start="659:14" pos:end="659:32">CONFIG_H261_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="659:36" pos:end="659:45"><block_content pos:start="659:36" pos:end="659:45">  <return pos:start="659:36" pos:end="659:45">return <expr pos:start="659:43" pos:end="659:44"><operator pos:start="659:43" pos:end="659:43">-</operator><literal type="number" pos:start="659:44" pos:end="659:44">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="661:9" pos:end="667:9"><if pos:start="661:9" pos:end="667:9">if <condition pos:start="661:12" pos:end="661:64">(<expr pos:start="661:13" pos:end="661:63"><call pos:start="661:13" pos:end="661:59"><name pos:start="661:13" pos:end="661:38">ff_h261_get_picture_format</name><argument_list pos:start="661:39" pos:end="661:59">(<argument pos:start="661:40" pos:end="661:47"><expr pos:start="661:40" pos:end="661:47"><name pos:start="661:40" pos:end="661:47"><name pos:start="661:40" pos:end="661:40">s</name><operator pos:start="661:41" pos:end="661:42">-&gt;</operator><name pos:start="661:43" pos:end="661:47">width</name></name></expr></argument>, <argument pos:start="661:50" pos:end="661:58"><expr pos:start="661:50" pos:end="661:58"><name pos:start="661:50" pos:end="661:58"><name pos:start="661:50" pos:end="661:50">s</name><operator pos:start="661:51" pos:end="661:52">-&gt;</operator><name pos:start="661:53" pos:end="661:58">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="661:61" pos:end="661:61">&lt;</operator> <literal type="number" pos:start="661:63" pos:end="661:63">0</literal></expr>)</condition> <block pos:start="661:66" pos:end="667:9">{<block_content pos:start="663:13" pos:end="665:22">

            <expr_stmt pos:start="663:13" pos:end="663:170"><expr pos:start="663:13" pos:end="663:169"><call pos:start="663:13" pos:end="663:169"><name pos:start="663:13" pos:end="663:18">av_log</name><argument_list pos:start="663:19" pos:end="663:169">(<argument pos:start="663:20" pos:end="663:24"><expr pos:start="663:20" pos:end="663:24"><name pos:start="663:20" pos:end="663:24">avctx</name></expr></argument>, <argument pos:start="663:27" pos:end="663:38"><expr pos:start="663:27" pos:end="663:38"><name pos:start="663:27" pos:end="663:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="663:41" pos:end="663:147"><expr pos:start="663:41" pos:end="663:147"><literal type="string" pos:start="663:41" pos:end="663:147">"The specified picture size of %dx%d is not valid for the H.261 codec.\nValid sizes are 176x144, 352x288\n"</literal></expr></argument>, <argument pos:start="663:150" pos:end="663:157"><expr pos:start="663:150" pos:end="663:157"><name pos:start="663:150" pos:end="663:157"><name pos:start="663:150" pos:end="663:150">s</name><operator pos:start="663:151" pos:end="663:152">-&gt;</operator><name pos:start="663:153" pos:end="663:157">width</name></name></expr></argument>, <argument pos:start="663:160" pos:end="663:168"><expr pos:start="663:160" pos:end="663:168"><name pos:start="663:160" pos:end="663:168"><name pos:start="663:160" pos:end="663:160">s</name><operator pos:start="663:161" pos:end="663:162">-&gt;</operator><name pos:start="663:163" pos:end="663:168">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="665:13" pos:end="665:22">return <expr pos:start="665:20" pos:end="665:21"><operator pos:start="665:20" pos:end="665:20">-</operator><literal type="number" pos:start="665:21" pos:end="665:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="669:9" pos:end="669:33"><expr pos:start="669:9" pos:end="669:32"><name pos:start="669:9" pos:end="669:21"><name pos:start="669:9" pos:end="669:9">s</name><operator pos:start="669:10" pos:end="669:11">-&gt;</operator><name pos:start="669:12" pos:end="669:21">out_format</name></name> <operator pos:start="669:23" pos:end="669:23">=</operator> <name pos:start="669:25" pos:end="669:32">FMT_H261</name></expr>;</expr_stmt>

        <expr_stmt pos:start="671:9" pos:end="671:23"><expr pos:start="671:9" pos:end="671:22"><name pos:start="671:9" pos:end="671:20"><name pos:start="671:9" pos:end="671:13">avctx</name><operator pos:start="671:14" pos:end="671:15">-&gt;</operator><name pos:start="671:16" pos:end="671:20">delay</name></name><operator pos:start="671:21" pos:end="671:21">=</operator><literal type="number" pos:start="671:22" pos:end="671:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:23"><expr pos:start="673:9" pos:end="673:22"><name pos:start="673:9" pos:end="673:20"><name pos:start="673:9" pos:end="673:9">s</name><operator pos:start="673:10" pos:end="673:11">-&gt;</operator><name pos:start="673:12" pos:end="673:20">low_delay</name></name><operator pos:start="673:21" pos:end="673:21">=</operator><literal type="number" pos:start="673:22" pos:end="673:22">1</literal></expr>;</expr_stmt>

        <break pos:start="675:9" pos:end="675:14">break;</break>

    <case pos:start="677:5" pos:end="677:23">case <expr pos:start="677:10" pos:end="677:22"><name pos:start="677:10" pos:end="677:22">CODEC_ID_H263</name></expr>:</case>

        <if_stmt pos:start="679:9" pos:end="679:45"><if pos:start="679:9" pos:end="679:45">if <condition pos:start="679:12" pos:end="679:33">(<expr pos:start="679:13" pos:end="679:32"><operator pos:start="679:13" pos:end="679:13">!</operator><name pos:start="679:14" pos:end="679:32">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="679:36" pos:end="679:45"><block_content pos:start="679:36" pos:end="679:45">  <return pos:start="679:36" pos:end="679:45">return <expr pos:start="679:43" pos:end="679:44"><operator pos:start="679:43" pos:end="679:43">-</operator><literal type="number" pos:start="679:44" pos:end="679:44">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="681:9" pos:end="687:9"><if pos:start="681:9" pos:end="687:9">if <condition pos:start="681:12" pos:end="681:97">(<expr pos:start="681:13" pos:end="681:96"><call pos:start="681:13" pos:end="681:91"><name pos:start="681:13" pos:end="681:28">ff_match_2uint16</name><argument_list pos:start="681:29" pos:end="681:91">(<argument pos:start="681:30" pos:end="681:40"><expr pos:start="681:30" pos:end="681:40"><name pos:start="681:30" pos:end="681:40">h263_format</name></expr></argument>, <argument pos:start="681:43" pos:end="681:69"><expr pos:start="681:43" pos:end="681:69"><call pos:start="681:43" pos:end="681:69"><name pos:start="681:43" pos:end="681:56">FF_ARRAY_ELEMS</name><argument_list pos:start="681:57" pos:end="681:69">(<argument pos:start="681:58" pos:end="681:68"><expr pos:start="681:58" pos:end="681:68"><name pos:start="681:58" pos:end="681:68">h263_format</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="681:72" pos:end="681:79"><expr pos:start="681:72" pos:end="681:79"><name pos:start="681:72" pos:end="681:79"><name pos:start="681:72" pos:end="681:72">s</name><operator pos:start="681:73" pos:end="681:74">-&gt;</operator><name pos:start="681:75" pos:end="681:79">width</name></name></expr></argument>, <argument pos:start="681:82" pos:end="681:90"><expr pos:start="681:82" pos:end="681:90"><name pos:start="681:82" pos:end="681:90"><name pos:start="681:82" pos:end="681:82">s</name><operator pos:start="681:83" pos:end="681:84">-&gt;</operator><name pos:start="681:85" pos:end="681:90">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="681:93" pos:end="681:94">==</operator> <literal type="number" pos:start="681:96" pos:end="681:96">8</literal></expr>)</condition> <block pos:start="681:99" pos:end="687:9">{<block_content pos:start="683:13" pos:end="685:22">

            <expr_stmt pos:start="683:13" pos:end="683:214"><expr pos:start="683:13" pos:end="683:213"><call pos:start="683:13" pos:end="683:213"><name pos:start="683:13" pos:end="683:18">av_log</name><argument_list pos:start="683:19" pos:end="683:213">(<argument pos:start="683:20" pos:end="683:24"><expr pos:start="683:20" pos:end="683:24"><name pos:start="683:20" pos:end="683:24">avctx</name></expr></argument>, <argument pos:start="683:27" pos:end="683:37"><expr pos:start="683:27" pos:end="683:37"><name pos:start="683:27" pos:end="683:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="683:40" pos:end="683:191"><expr pos:start="683:40" pos:end="683:191"><literal type="string" pos:start="683:40" pos:end="683:191">"The specified picture size of %dx%d is not valid for the H.263 codec.\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\n"</literal></expr></argument>, <argument pos:start="683:194" pos:end="683:201"><expr pos:start="683:194" pos:end="683:201"><name pos:start="683:194" pos:end="683:201"><name pos:start="683:194" pos:end="683:194">s</name><operator pos:start="683:195" pos:end="683:196">-&gt;</operator><name pos:start="683:197" pos:end="683:201">width</name></name></expr></argument>, <argument pos:start="683:204" pos:end="683:212"><expr pos:start="683:204" pos:end="683:212"><name pos:start="683:204" pos:end="683:212"><name pos:start="683:204" pos:end="683:204">s</name><operator pos:start="683:205" pos:end="683:206">-&gt;</operator><name pos:start="683:207" pos:end="683:212">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="685:13" pos:end="685:22">return <expr pos:start="685:20" pos:end="685:21"><operator pos:start="685:20" pos:end="685:20">-</operator><literal type="number" pos:start="685:21" pos:end="685:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:33"><expr pos:start="689:9" pos:end="689:32"><name pos:start="689:9" pos:end="689:21"><name pos:start="689:9" pos:end="689:9">s</name><operator pos:start="689:10" pos:end="689:11">-&gt;</operator><name pos:start="689:12" pos:end="689:21">out_format</name></name> <operator pos:start="689:23" pos:end="689:23">=</operator> <name pos:start="689:25" pos:end="689:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="691:9" pos:end="691:56"><expr pos:start="691:9" pos:end="691:55"><name pos:start="691:9" pos:end="691:15"><name pos:start="691:9" pos:end="691:9">s</name><operator pos:start="691:10" pos:end="691:11">-&gt;</operator><name pos:start="691:12" pos:end="691:15">obmc</name></name><operator pos:start="691:16" pos:end="691:16">=</operator> <ternary pos:start="691:18" pos:end="691:55"><condition pos:start="691:18" pos:end="691:51"><expr pos:start="691:18" pos:end="691:49"><operator pos:start="691:18" pos:end="691:18">(</operator><name pos:start="691:19" pos:end="691:30"><name pos:start="691:19" pos:end="691:23">avctx</name><operator pos:start="691:24" pos:end="691:25">-&gt;</operator><name pos:start="691:26" pos:end="691:30">flags</name></name> <operator pos:start="691:32" pos:end="691:32">&amp;</operator> <name pos:start="691:34" pos:end="691:48">CODEC_FLAG_OBMC</name><operator pos:start="691:49" pos:end="691:49">)</operator></expr> ?</condition><then pos:start="691:53" pos:end="691:53"> <expr pos:start="691:53" pos:end="691:53"><literal type="number" pos:start="691:53" pos:end="691:53">1</literal></expr></then><else pos:start="691:54" pos:end="691:55">:<expr pos:start="691:55" pos:end="691:55"><literal type="number" pos:start="691:55" pos:end="691:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="693:9" pos:end="693:23"><expr pos:start="693:9" pos:end="693:22"><name pos:start="693:9" pos:end="693:20"><name pos:start="693:9" pos:end="693:13">avctx</name><operator pos:start="693:14" pos:end="693:15">-&gt;</operator><name pos:start="693:16" pos:end="693:20">delay</name></name><operator pos:start="693:21" pos:end="693:21">=</operator><literal type="number" pos:start="693:22" pos:end="693:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="695:9" pos:end="695:23"><expr pos:start="695:9" pos:end="695:22"><name pos:start="695:9" pos:end="695:20"><name pos:start="695:9" pos:end="695:9">s</name><operator pos:start="695:10" pos:end="695:11">-&gt;</operator><name pos:start="695:12" pos:end="695:20">low_delay</name></name><operator pos:start="695:21" pos:end="695:21">=</operator><literal type="number" pos:start="695:22" pos:end="695:22">1</literal></expr>;</expr_stmt>

        <break pos:start="697:9" pos:end="697:14">break;</break>

    <case pos:start="699:5" pos:end="699:24">case <expr pos:start="699:10" pos:end="699:23"><name pos:start="699:10" pos:end="699:23">CODEC_ID_H263P</name></expr>:</case>

        <expr_stmt pos:start="701:9" pos:end="701:33"><expr pos:start="701:9" pos:end="701:32"><name pos:start="701:9" pos:end="701:21"><name pos:start="701:9" pos:end="701:9">s</name><operator pos:start="701:10" pos:end="701:11">-&gt;</operator><name pos:start="701:12" pos:end="701:21">out_format</name></name> <operator pos:start="701:23" pos:end="701:23">=</operator> <name pos:start="701:25" pos:end="701:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="703:9" pos:end="703:25"><expr pos:start="703:9" pos:end="703:24"><name pos:start="703:9" pos:end="703:20"><name pos:start="703:9" pos:end="703:9">s</name><operator pos:start="703:10" pos:end="703:11">-&gt;</operator><name pos:start="703:12" pos:end="703:20">h263_plus</name></name> <operator pos:start="703:22" pos:end="703:22">=</operator> <literal type="number" pos:start="703:24" pos:end="703:24">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="705:9" pos:end="705:16">/* Fx */</comment>

        <expr_stmt pos:start="707:9" pos:end="707:65"><expr pos:start="707:9" pos:end="707:64"><name pos:start="707:9" pos:end="707:18"><name pos:start="707:9" pos:end="707:9">s</name><operator pos:start="707:10" pos:end="707:11">-&gt;</operator><name pos:start="707:12" pos:end="707:18">umvplus</name></name> <operator pos:start="707:20" pos:end="707:20">=</operator> <ternary pos:start="707:22" pos:end="707:64"><condition pos:start="707:22" pos:end="707:60"><expr pos:start="707:22" pos:end="707:58"><operator pos:start="707:22" pos:end="707:22">(</operator><name pos:start="707:23" pos:end="707:34"><name pos:start="707:23" pos:end="707:27">avctx</name><operator pos:start="707:28" pos:end="707:29">-&gt;</operator><name pos:start="707:30" pos:end="707:34">flags</name></name> <operator pos:start="707:36" pos:end="707:36">&amp;</operator> <name pos:start="707:38" pos:end="707:57">CODEC_FLAG_H263P_UMV</name><operator pos:start="707:58" pos:end="707:58">)</operator></expr> ?</condition><then pos:start="707:62" pos:end="707:62"> <expr pos:start="707:62" pos:end="707:62"><literal type="number" pos:start="707:62" pos:end="707:62">1</literal></expr></then><else pos:start="707:63" pos:end="707:64">:<expr pos:start="707:64" pos:end="707:64"><literal type="number" pos:start="707:64" pos:end="707:64">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="709:9" pos:end="709:63"><expr pos:start="709:9" pos:end="709:62"><name pos:start="709:9" pos:end="709:19"><name pos:start="709:9" pos:end="709:9">s</name><operator pos:start="709:10" pos:end="709:11">-&gt;</operator><name pos:start="709:12" pos:end="709:19">h263_aic</name></name><operator pos:start="709:20" pos:end="709:20">=</operator> <ternary pos:start="709:22" pos:end="709:62"><condition pos:start="709:22" pos:end="709:58"><expr pos:start="709:22" pos:end="709:56"><operator pos:start="709:22" pos:end="709:22">(</operator><name pos:start="709:23" pos:end="709:34"><name pos:start="709:23" pos:end="709:27">avctx</name><operator pos:start="709:28" pos:end="709:29">-&gt;</operator><name pos:start="709:30" pos:end="709:34">flags</name></name> <operator pos:start="709:36" pos:end="709:36">&amp;</operator> <name pos:start="709:38" pos:end="709:55">CODEC_FLAG_AC_PRED</name><operator pos:start="709:56" pos:end="709:56">)</operator></expr> ?</condition><then pos:start="709:60" pos:end="709:60"> <expr pos:start="709:60" pos:end="709:60"><literal type="number" pos:start="709:60" pos:end="709:60">1</literal></expr></then><else pos:start="709:61" pos:end="709:62">:<expr pos:start="709:62" pos:end="709:62"><literal type="number" pos:start="709:62" pos:end="709:62">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="711:9" pos:end="711:39"><expr pos:start="711:9" pos:end="711:38"><name pos:start="711:9" pos:end="711:25"><name pos:start="711:9" pos:end="711:9">s</name><operator pos:start="711:10" pos:end="711:11">-&gt;</operator><name pos:start="711:12" pos:end="711:25">modified_quant</name></name><operator pos:start="711:26" pos:end="711:26">=</operator> <name pos:start="711:28" pos:end="711:38"><name pos:start="711:28" pos:end="711:28">s</name><operator pos:start="711:29" pos:end="711:30">-&gt;</operator><name pos:start="711:31" pos:end="711:38">h263_aic</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="713:9" pos:end="713:70"><expr pos:start="713:9" pos:end="713:69"><name pos:start="713:9" pos:end="713:24"><name pos:start="713:9" pos:end="713:9">s</name><operator pos:start="713:10" pos:end="713:11">-&gt;</operator><name pos:start="713:12" pos:end="713:24">alt_inter_vlc</name></name><operator pos:start="713:25" pos:end="713:25">=</operator> <ternary pos:start="713:27" pos:end="713:69"><condition pos:start="713:27" pos:end="713:65"><expr pos:start="713:27" pos:end="713:63"><operator pos:start="713:27" pos:end="713:27">(</operator><name pos:start="713:28" pos:end="713:39"><name pos:start="713:28" pos:end="713:32">avctx</name><operator pos:start="713:33" pos:end="713:34">-&gt;</operator><name pos:start="713:35" pos:end="713:39">flags</name></name> <operator pos:start="713:41" pos:end="713:41">&amp;</operator> <name pos:start="713:43" pos:end="713:62">CODEC_FLAG_H263P_AIV</name><operator pos:start="713:63" pos:end="713:63">)</operator></expr> ?</condition><then pos:start="713:67" pos:end="713:67"> <expr pos:start="713:67" pos:end="713:67"><literal type="number" pos:start="713:67" pos:end="713:67">1</literal></expr></then><else pos:start="713:68" pos:end="713:69">:<expr pos:start="713:69" pos:end="713:69"><literal type="number" pos:start="713:69" pos:end="713:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="715:9" pos:end="715:56"><expr pos:start="715:9" pos:end="715:55"><name pos:start="715:9" pos:end="715:15"><name pos:start="715:9" pos:end="715:9">s</name><operator pos:start="715:10" pos:end="715:11">-&gt;</operator><name pos:start="715:12" pos:end="715:15">obmc</name></name><operator pos:start="715:16" pos:end="715:16">=</operator> <ternary pos:start="715:18" pos:end="715:55"><condition pos:start="715:18" pos:end="715:51"><expr pos:start="715:18" pos:end="715:49"><operator pos:start="715:18" pos:end="715:18">(</operator><name pos:start="715:19" pos:end="715:30"><name pos:start="715:19" pos:end="715:23">avctx</name><operator pos:start="715:24" pos:end="715:25">-&gt;</operator><name pos:start="715:26" pos:end="715:30">flags</name></name> <operator pos:start="715:32" pos:end="715:32">&amp;</operator> <name pos:start="715:34" pos:end="715:48">CODEC_FLAG_OBMC</name><operator pos:start="715:49" pos:end="715:49">)</operator></expr> ?</condition><then pos:start="715:53" pos:end="715:53"> <expr pos:start="715:53" pos:end="715:53"><literal type="number" pos:start="715:53" pos:end="715:53">1</literal></expr></then><else pos:start="715:54" pos:end="715:55">:<expr pos:start="715:55" pos:end="715:55"><literal type="number" pos:start="715:55" pos:end="715:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="717:9" pos:end="717:70"><expr pos:start="717:9" pos:end="717:69"><name pos:start="717:9" pos:end="717:22"><name pos:start="717:9" pos:end="717:9">s</name><operator pos:start="717:10" pos:end="717:11">-&gt;</operator><name pos:start="717:12" pos:end="717:22">loop_filter</name></name><operator pos:start="717:23" pos:end="717:23">=</operator> <ternary pos:start="717:25" pos:end="717:69"><condition pos:start="717:25" pos:end="717:65"><expr pos:start="717:25" pos:end="717:63"><operator pos:start="717:25" pos:end="717:25">(</operator><name pos:start="717:26" pos:end="717:37"><name pos:start="717:26" pos:end="717:30">avctx</name><operator pos:start="717:31" pos:end="717:32">-&gt;</operator><name pos:start="717:33" pos:end="717:37">flags</name></name> <operator pos:start="717:39" pos:end="717:39">&amp;</operator> <name pos:start="717:41" pos:end="717:62">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="717:63" pos:end="717:63">)</operator></expr> ?</condition><then pos:start="717:67" pos:end="717:67"> <expr pos:start="717:67" pos:end="717:67"><literal type="number" pos:start="717:67" pos:end="717:67">1</literal></expr></then><else pos:start="717:68" pos:end="717:69">:<expr pos:start="717:69" pos:end="717:69"><literal type="number" pos:start="717:69" pos:end="717:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="719:9" pos:end="719:68"><expr pos:start="719:9" pos:end="719:67"><name pos:start="719:9" pos:end="719:26"><name pos:start="719:9" pos:end="719:9">s</name><operator pos:start="719:10" pos:end="719:11">-&gt;</operator><name pos:start="719:12" pos:end="719:26">unrestricted_mv</name></name><operator pos:start="719:27" pos:end="719:27">=</operator> <name pos:start="719:29" pos:end="719:35"><name pos:start="719:29" pos:end="719:29">s</name><operator pos:start="719:30" pos:end="719:31">-&gt;</operator><name pos:start="719:32" pos:end="719:35">obmc</name></name> <operator pos:start="719:37" pos:end="719:38">||</operator> <name pos:start="719:40" pos:end="719:53"><name pos:start="719:40" pos:end="719:40">s</name><operator pos:start="719:41" pos:end="719:42">-&gt;</operator><name pos:start="719:43" pos:end="719:53">loop_filter</name></name> <operator pos:start="719:55" pos:end="719:56">||</operator> <name pos:start="719:58" pos:end="719:67"><name pos:start="719:58" pos:end="719:58">s</name><operator pos:start="719:59" pos:end="719:60">-&gt;</operator><name pos:start="719:61" pos:end="719:67">umvplus</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:83"><expr pos:start="721:9" pos:end="721:82"><name pos:start="721:9" pos:end="721:32"><name pos:start="721:9" pos:end="721:9">s</name><operator pos:start="721:10" pos:end="721:11">-&gt;</operator><name pos:start="721:12" pos:end="721:32">h263_slice_structured</name></name><operator pos:start="721:33" pos:end="721:33">=</operator> <ternary pos:start="721:35" pos:end="721:82"><condition pos:start="721:35" pos:end="721:78"><expr pos:start="721:35" pos:end="721:76"><operator pos:start="721:35" pos:end="721:35">(</operator><name pos:start="721:36" pos:end="721:43"><name pos:start="721:36" pos:end="721:36">s</name><operator pos:start="721:37" pos:end="721:38">-&gt;</operator><name pos:start="721:39" pos:end="721:43">flags</name></name> <operator pos:start="721:45" pos:end="721:45">&amp;</operator> <name pos:start="721:47" pos:end="721:75">CODEC_FLAG_H263P_SLICE_STRUCT</name><operator pos:start="721:76" pos:end="721:76">)</operator></expr> ?</condition><then pos:start="721:80" pos:end="721:80"> <expr pos:start="721:80" pos:end="721:80"><literal type="number" pos:start="721:80" pos:end="721:80">1</literal></expr></then><else pos:start="721:81" pos:end="721:82">:<expr pos:start="721:82" pos:end="721:82"><literal type="number" pos:start="721:82" pos:end="721:82">0</literal></expr></else></ternary></expr>;</expr_stmt>



        <comment type="block" pos:start="725:9" pos:end="725:17">/* /Fx */</comment>

        <comment type="block" pos:start="727:9" pos:end="727:39">/* These are just to be sure */</comment>

        <expr_stmt pos:start="729:9" pos:end="729:23"><expr pos:start="729:9" pos:end="729:22"><name pos:start="729:9" pos:end="729:20"><name pos:start="729:9" pos:end="729:13">avctx</name><operator pos:start="729:14" pos:end="729:15">-&gt;</operator><name pos:start="729:16" pos:end="729:20">delay</name></name><operator pos:start="729:21" pos:end="729:21">=</operator><literal type="number" pos:start="729:22" pos:end="729:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="731:9" pos:end="731:23"><expr pos:start="731:9" pos:end="731:22"><name pos:start="731:9" pos:end="731:20"><name pos:start="731:9" pos:end="731:9">s</name><operator pos:start="731:10" pos:end="731:11">-&gt;</operator><name pos:start="731:12" pos:end="731:20">low_delay</name></name><operator pos:start="731:21" pos:end="731:21">=</operator><literal type="number" pos:start="731:22" pos:end="731:22">1</literal></expr>;</expr_stmt>

        <break pos:start="733:9" pos:end="733:14">break;</break>

    <case pos:start="735:5" pos:end="735:23">case <expr pos:start="735:10" pos:end="735:22"><name pos:start="735:10" pos:end="735:22">CODEC_ID_FLV1</name></expr>:</case>

        <expr_stmt pos:start="737:9" pos:end="737:33"><expr pos:start="737:9" pos:end="737:32"><name pos:start="737:9" pos:end="737:21"><name pos:start="737:9" pos:end="737:9">s</name><operator pos:start="737:10" pos:end="737:11">-&gt;</operator><name pos:start="737:12" pos:end="737:21">out_format</name></name> <operator pos:start="737:23" pos:end="737:23">=</operator> <name pos:start="737:25" pos:end="737:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="739:9" pos:end="739:24"><expr pos:start="739:9" pos:end="739:23"><name pos:start="739:9" pos:end="739:19"><name pos:start="739:9" pos:end="739:9">s</name><operator pos:start="739:10" pos:end="739:11">-&gt;</operator><name pos:start="739:12" pos:end="739:19">h263_flv</name></name> <operator pos:start="739:21" pos:end="739:21">=</operator> <literal type="number" pos:start="739:23" pos:end="739:23">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="739:26" pos:end="739:55">/* format = 1; 11-bit codes */</comment>

        <expr_stmt pos:start="741:9" pos:end="741:31"><expr pos:start="741:9" pos:end="741:30"><name pos:start="741:9" pos:end="741:26"><name pos:start="741:9" pos:end="741:9">s</name><operator pos:start="741:10" pos:end="741:11">-&gt;</operator><name pos:start="741:12" pos:end="741:26">unrestricted_mv</name></name> <operator pos:start="741:28" pos:end="741:28">=</operator> <literal type="number" pos:start="741:30" pos:end="741:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="743:9" pos:end="743:22"><expr pos:start="743:9" pos:end="743:21"><name pos:start="743:9" pos:end="743:19"><name pos:start="743:9" pos:end="743:9">s</name><operator pos:start="743:10" pos:end="743:11">-&gt;</operator><name pos:start="743:12" pos:end="743:19">rtp_mode</name></name><operator pos:start="743:20" pos:end="743:20">=</operator><literal type="number" pos:start="743:21" pos:end="743:21">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="743:24" pos:end="743:44">/* don't allow GOB */</comment>

        <expr_stmt pos:start="745:9" pos:end="745:23"><expr pos:start="745:9" pos:end="745:22"><name pos:start="745:9" pos:end="745:20"><name pos:start="745:9" pos:end="745:13">avctx</name><operator pos:start="745:14" pos:end="745:15">-&gt;</operator><name pos:start="745:16" pos:end="745:20">delay</name></name><operator pos:start="745:21" pos:end="745:21">=</operator><literal type="number" pos:start="745:22" pos:end="745:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="747:9" pos:end="747:23"><expr pos:start="747:9" pos:end="747:22"><name pos:start="747:9" pos:end="747:20"><name pos:start="747:9" pos:end="747:9">s</name><operator pos:start="747:10" pos:end="747:11">-&gt;</operator><name pos:start="747:12" pos:end="747:20">low_delay</name></name><operator pos:start="747:21" pos:end="747:21">=</operator><literal type="number" pos:start="747:22" pos:end="747:22">1</literal></expr>;</expr_stmt>

        <break pos:start="749:9" pos:end="749:14">break;</break>

    <case pos:start="751:5" pos:end="751:23">case <expr pos:start="751:10" pos:end="751:22"><name pos:start="751:10" pos:end="751:22">CODEC_ID_RV10</name></expr>:</case>

        <expr_stmt pos:start="753:9" pos:end="753:33"><expr pos:start="753:9" pos:end="753:32"><name pos:start="753:9" pos:end="753:21"><name pos:start="753:9" pos:end="753:9">s</name><operator pos:start="753:10" pos:end="753:11">-&gt;</operator><name pos:start="753:12" pos:end="753:21">out_format</name></name> <operator pos:start="753:23" pos:end="753:23">=</operator> <name pos:start="753:25" pos:end="753:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="755:9" pos:end="755:23"><expr pos:start="755:9" pos:end="755:22"><name pos:start="755:9" pos:end="755:20"><name pos:start="755:9" pos:end="755:13">avctx</name><operator pos:start="755:14" pos:end="755:15">-&gt;</operator><name pos:start="755:16" pos:end="755:20">delay</name></name><operator pos:start="755:21" pos:end="755:21">=</operator><literal type="number" pos:start="755:22" pos:end="755:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="757:9" pos:end="757:23"><expr pos:start="757:9" pos:end="757:22"><name pos:start="757:9" pos:end="757:20"><name pos:start="757:9" pos:end="757:9">s</name><operator pos:start="757:10" pos:end="757:11">-&gt;</operator><name pos:start="757:12" pos:end="757:20">low_delay</name></name><operator pos:start="757:21" pos:end="757:21">=</operator><literal type="number" pos:start="757:22" pos:end="757:22">1</literal></expr>;</expr_stmt>

        <break pos:start="759:9" pos:end="759:14">break;</break>

    <case pos:start="761:5" pos:end="761:23">case <expr pos:start="761:10" pos:end="761:22"><name pos:start="761:10" pos:end="761:22">CODEC_ID_RV20</name></expr>:</case>

        <expr_stmt pos:start="763:9" pos:end="763:33"><expr pos:start="763:9" pos:end="763:32"><name pos:start="763:9" pos:end="763:21"><name pos:start="763:9" pos:end="763:9">s</name><operator pos:start="763:10" pos:end="763:11">-&gt;</operator><name pos:start="763:12" pos:end="763:21">out_format</name></name> <operator pos:start="763:23" pos:end="763:23">=</operator> <name pos:start="763:25" pos:end="763:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="765:9" pos:end="765:23"><expr pos:start="765:9" pos:end="765:22"><name pos:start="765:9" pos:end="765:20"><name pos:start="765:9" pos:end="765:13">avctx</name><operator pos:start="765:14" pos:end="765:15">-&gt;</operator><name pos:start="765:16" pos:end="765:20">delay</name></name><operator pos:start="765:21" pos:end="765:21">=</operator><literal type="number" pos:start="765:22" pos:end="765:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="767:9" pos:end="767:23"><expr pos:start="767:9" pos:end="767:22"><name pos:start="767:9" pos:end="767:20"><name pos:start="767:9" pos:end="767:9">s</name><operator pos:start="767:10" pos:end="767:11">-&gt;</operator><name pos:start="767:12" pos:end="767:20">low_delay</name></name><operator pos:start="767:21" pos:end="767:21">=</operator><literal type="number" pos:start="767:22" pos:end="767:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="769:9" pos:end="769:28"><expr pos:start="769:9" pos:end="769:27"><name pos:start="769:9" pos:end="769:25"><name pos:start="769:9" pos:end="769:9">s</name><operator pos:start="769:10" pos:end="769:11">-&gt;</operator><name pos:start="769:12" pos:end="769:25">modified_quant</name></name><operator pos:start="769:26" pos:end="769:26">=</operator><literal type="number" pos:start="769:27" pos:end="769:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="771:9" pos:end="771:22"><expr pos:start="771:9" pos:end="771:21"><name pos:start="771:9" pos:end="771:19"><name pos:start="771:9" pos:end="771:9">s</name><operator pos:start="771:10" pos:end="771:11">-&gt;</operator><name pos:start="771:12" pos:end="771:19">h263_aic</name></name><operator pos:start="771:20" pos:end="771:20">=</operator><literal type="number" pos:start="771:21" pos:end="771:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="773:9" pos:end="773:23"><expr pos:start="773:9" pos:end="773:22"><name pos:start="773:9" pos:end="773:20"><name pos:start="773:9" pos:end="773:9">s</name><operator pos:start="773:10" pos:end="773:11">-&gt;</operator><name pos:start="773:12" pos:end="773:20">h263_plus</name></name><operator pos:start="773:21" pos:end="773:21">=</operator><literal type="number" pos:start="773:22" pos:end="773:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="775:9" pos:end="775:25"><expr pos:start="775:9" pos:end="775:24"><name pos:start="775:9" pos:end="775:22"><name pos:start="775:9" pos:end="775:9">s</name><operator pos:start="775:10" pos:end="775:11">-&gt;</operator><name pos:start="775:12" pos:end="775:22">loop_filter</name></name><operator pos:start="775:23" pos:end="775:23">=</operator><literal type="number" pos:start="775:24" pos:end="775:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="777:9" pos:end="777:30"><expr pos:start="777:9" pos:end="777:29"><name pos:start="777:9" pos:end="777:26"><name pos:start="777:9" pos:end="777:9">s</name><operator pos:start="777:10" pos:end="777:11">-&gt;</operator><name pos:start="777:12" pos:end="777:26">unrestricted_mv</name></name><operator pos:start="777:27" pos:end="777:27">=</operator> <literal type="number" pos:start="777:29" pos:end="777:29">0</literal></expr>;</expr_stmt>

        <break pos:start="779:9" pos:end="779:14">break;</break>

    <case pos:start="781:5" pos:end="781:24">case <expr pos:start="781:10" pos:end="781:23"><name pos:start="781:10" pos:end="781:23">CODEC_ID_MPEG4</name></expr>:</case>

        <expr_stmt pos:start="783:9" pos:end="783:33"><expr pos:start="783:9" pos:end="783:32"><name pos:start="783:9" pos:end="783:21"><name pos:start="783:9" pos:end="783:9">s</name><operator pos:start="783:10" pos:end="783:11">-&gt;</operator><name pos:start="783:12" pos:end="783:21">out_format</name></name> <operator pos:start="783:23" pos:end="783:23">=</operator> <name pos:start="783:25" pos:end="783:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="785:9" pos:end="785:25"><expr pos:start="785:9" pos:end="785:24"><name pos:start="785:9" pos:end="785:20"><name pos:start="785:9" pos:end="785:9">s</name><operator pos:start="785:10" pos:end="785:11">-&gt;</operator><name pos:start="785:12" pos:end="785:20">h263_pred</name></name> <operator pos:start="785:22" pos:end="785:22">=</operator> <literal type="number" pos:start="785:24" pos:end="785:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="787:9" pos:end="787:31"><expr pos:start="787:9" pos:end="787:30"><name pos:start="787:9" pos:end="787:26"><name pos:start="787:9" pos:end="787:9">s</name><operator pos:start="787:10" pos:end="787:11">-&gt;</operator><name pos:start="787:12" pos:end="787:26">unrestricted_mv</name></name> <operator pos:start="787:28" pos:end="787:28">=</operator> <literal type="number" pos:start="787:30" pos:end="787:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="789:9" pos:end="789:46"><expr pos:start="789:9" pos:end="789:45"><name pos:start="789:9" pos:end="789:20"><name pos:start="789:9" pos:end="789:9">s</name><operator pos:start="789:10" pos:end="789:11">-&gt;</operator><name pos:start="789:12" pos:end="789:20">low_delay</name></name><operator pos:start="789:21" pos:end="789:21">=</operator> <ternary pos:start="789:23" pos:end="789:45"><condition pos:start="789:23" pos:end="789:39"><expr pos:start="789:23" pos:end="789:37"><name pos:start="789:23" pos:end="789:37"><name pos:start="789:23" pos:end="789:23">s</name><operator pos:start="789:24" pos:end="789:25">-&gt;</operator><name pos:start="789:26" pos:end="789:37">max_b_frames</name></name></expr> ?</condition><then pos:start="789:41" pos:end="789:41"> <expr pos:start="789:41" pos:end="789:41"><literal type="number" pos:start="789:41" pos:end="789:41">0</literal></expr> </then><else pos:start="789:43" pos:end="789:45">: <expr pos:start="789:45" pos:end="789:45"><literal type="number" pos:start="789:45" pos:end="789:45">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="791:9" pos:end="791:63"><expr pos:start="791:9" pos:end="791:62"><name pos:start="791:9" pos:end="791:20"><name pos:start="791:9" pos:end="791:13">avctx</name><operator pos:start="791:14" pos:end="791:15">-&gt;</operator><name pos:start="791:16" pos:end="791:20">delay</name></name><operator pos:start="791:21" pos:end="791:21">=</operator> <ternary pos:start="791:23" pos:end="791:62"><condition pos:start="791:23" pos:end="791:36"><expr pos:start="791:23" pos:end="791:34"><name pos:start="791:23" pos:end="791:34"><name pos:start="791:23" pos:end="791:23">s</name><operator pos:start="791:24" pos:end="791:25">-&gt;</operator><name pos:start="791:26" pos:end="791:34">low_delay</name></name></expr> ?</condition><then pos:start="791:38" pos:end="791:38"> <expr pos:start="791:38" pos:end="791:38"><literal type="number" pos:start="791:38" pos:end="791:38">0</literal></expr> </then><else pos:start="791:40" pos:end="791:62">: <expr pos:start="791:42" pos:end="791:62"><operator pos:start="791:42" pos:end="791:42">(</operator><name pos:start="791:43" pos:end="791:57"><name pos:start="791:43" pos:end="791:43">s</name><operator pos:start="791:44" pos:end="791:45">-&gt;</operator><name pos:start="791:46" pos:end="791:57">max_b_frames</name></name> <operator pos:start="791:59" pos:end="791:59">+</operator> <literal type="number" pos:start="791:61" pos:end="791:61">1</literal><operator pos:start="791:62" pos:end="791:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="793:9" pos:end="793:14">break;</break>

    <case pos:start="795:5" pos:end="795:28">case <expr pos:start="795:10" pos:end="795:27"><name pos:start="795:10" pos:end="795:27">CODEC_ID_MSMPEG4V1</name></expr>:</case>

        <expr_stmt pos:start="797:9" pos:end="797:33"><expr pos:start="797:9" pos:end="797:32"><name pos:start="797:9" pos:end="797:21"><name pos:start="797:9" pos:end="797:9">s</name><operator pos:start="797:10" pos:end="797:11">-&gt;</operator><name pos:start="797:12" pos:end="797:21">out_format</name></name> <operator pos:start="797:23" pos:end="797:23">=</operator> <name pos:start="797:25" pos:end="797:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="799:9" pos:end="799:28"><expr pos:start="799:9" pos:end="799:27"><name pos:start="799:9" pos:end="799:23"><name pos:start="799:9" pos:end="799:9">s</name><operator pos:start="799:10" pos:end="799:11">-&gt;</operator><name pos:start="799:12" pos:end="799:23">h263_msmpeg4</name></name> <operator pos:start="799:25" pos:end="799:25">=</operator> <literal type="number" pos:start="799:27" pos:end="799:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="801:9" pos:end="801:25"><expr pos:start="801:9" pos:end="801:24"><name pos:start="801:9" pos:end="801:20"><name pos:start="801:9" pos:end="801:9">s</name><operator pos:start="801:10" pos:end="801:11">-&gt;</operator><name pos:start="801:12" pos:end="801:20">h263_pred</name></name> <operator pos:start="801:22" pos:end="801:22">=</operator> <literal type="number" pos:start="801:24" pos:end="801:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="803:9" pos:end="803:31"><expr pos:start="803:9" pos:end="803:30"><name pos:start="803:9" pos:end="803:26"><name pos:start="803:9" pos:end="803:9">s</name><operator pos:start="803:10" pos:end="803:11">-&gt;</operator><name pos:start="803:12" pos:end="803:26">unrestricted_mv</name></name> <operator pos:start="803:28" pos:end="803:28">=</operator> <literal type="number" pos:start="803:30" pos:end="803:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="805:9" pos:end="805:30"><expr pos:start="805:9" pos:end="805:29"><name pos:start="805:9" pos:end="805:26"><name pos:start="805:9" pos:end="805:9">s</name><operator pos:start="805:10" pos:end="805:11">-&gt;</operator><name pos:start="805:12" pos:end="805:26">msmpeg4_version</name></name><operator pos:start="805:27" pos:end="805:27">=</operator> <literal type="number" pos:start="805:29" pos:end="805:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="807:9" pos:end="807:23"><expr pos:start="807:9" pos:end="807:22"><name pos:start="807:9" pos:end="807:20"><name pos:start="807:9" pos:end="807:13">avctx</name><operator pos:start="807:14" pos:end="807:15">-&gt;</operator><name pos:start="807:16" pos:end="807:20">delay</name></name><operator pos:start="807:21" pos:end="807:21">=</operator><literal type="number" pos:start="807:22" pos:end="807:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="809:9" pos:end="809:23"><expr pos:start="809:9" pos:end="809:22"><name pos:start="809:9" pos:end="809:20"><name pos:start="809:9" pos:end="809:9">s</name><operator pos:start="809:10" pos:end="809:11">-&gt;</operator><name pos:start="809:12" pos:end="809:20">low_delay</name></name><operator pos:start="809:21" pos:end="809:21">=</operator><literal type="number" pos:start="809:22" pos:end="809:22">1</literal></expr>;</expr_stmt>

        <break pos:start="811:9" pos:end="811:14">break;</break>

    <case pos:start="813:5" pos:end="813:28">case <expr pos:start="813:10" pos:end="813:27"><name pos:start="813:10" pos:end="813:27">CODEC_ID_MSMPEG4V2</name></expr>:</case>

        <expr_stmt pos:start="815:9" pos:end="815:33"><expr pos:start="815:9" pos:end="815:32"><name pos:start="815:9" pos:end="815:21"><name pos:start="815:9" pos:end="815:9">s</name><operator pos:start="815:10" pos:end="815:11">-&gt;</operator><name pos:start="815:12" pos:end="815:21">out_format</name></name> <operator pos:start="815:23" pos:end="815:23">=</operator> <name pos:start="815:25" pos:end="815:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="817:9" pos:end="817:28"><expr pos:start="817:9" pos:end="817:27"><name pos:start="817:9" pos:end="817:23"><name pos:start="817:9" pos:end="817:9">s</name><operator pos:start="817:10" pos:end="817:11">-&gt;</operator><name pos:start="817:12" pos:end="817:23">h263_msmpeg4</name></name> <operator pos:start="817:25" pos:end="817:25">=</operator> <literal type="number" pos:start="817:27" pos:end="817:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="819:9" pos:end="819:25"><expr pos:start="819:9" pos:end="819:24"><name pos:start="819:9" pos:end="819:20"><name pos:start="819:9" pos:end="819:9">s</name><operator pos:start="819:10" pos:end="819:11">-&gt;</operator><name pos:start="819:12" pos:end="819:20">h263_pred</name></name> <operator pos:start="819:22" pos:end="819:22">=</operator> <literal type="number" pos:start="819:24" pos:end="819:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="821:9" pos:end="821:31"><expr pos:start="821:9" pos:end="821:30"><name pos:start="821:9" pos:end="821:26"><name pos:start="821:9" pos:end="821:9">s</name><operator pos:start="821:10" pos:end="821:11">-&gt;</operator><name pos:start="821:12" pos:end="821:26">unrestricted_mv</name></name> <operator pos:start="821:28" pos:end="821:28">=</operator> <literal type="number" pos:start="821:30" pos:end="821:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="823:9" pos:end="823:30"><expr pos:start="823:9" pos:end="823:29"><name pos:start="823:9" pos:end="823:26"><name pos:start="823:9" pos:end="823:9">s</name><operator pos:start="823:10" pos:end="823:11">-&gt;</operator><name pos:start="823:12" pos:end="823:26">msmpeg4_version</name></name><operator pos:start="823:27" pos:end="823:27">=</operator> <literal type="number" pos:start="823:29" pos:end="823:29">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="825:9" pos:end="825:23"><expr pos:start="825:9" pos:end="825:22"><name pos:start="825:9" pos:end="825:20"><name pos:start="825:9" pos:end="825:13">avctx</name><operator pos:start="825:14" pos:end="825:15">-&gt;</operator><name pos:start="825:16" pos:end="825:20">delay</name></name><operator pos:start="825:21" pos:end="825:21">=</operator><literal type="number" pos:start="825:22" pos:end="825:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="827:9" pos:end="827:23"><expr pos:start="827:9" pos:end="827:22"><name pos:start="827:9" pos:end="827:20"><name pos:start="827:9" pos:end="827:9">s</name><operator pos:start="827:10" pos:end="827:11">-&gt;</operator><name pos:start="827:12" pos:end="827:20">low_delay</name></name><operator pos:start="827:21" pos:end="827:21">=</operator><literal type="number" pos:start="827:22" pos:end="827:22">1</literal></expr>;</expr_stmt>

        <break pos:start="829:9" pos:end="829:14">break;</break>

    <case pos:start="831:5" pos:end="831:28">case <expr pos:start="831:10" pos:end="831:27"><name pos:start="831:10" pos:end="831:27">CODEC_ID_MSMPEG4V3</name></expr>:</case>

        <expr_stmt pos:start="833:9" pos:end="833:33"><expr pos:start="833:9" pos:end="833:32"><name pos:start="833:9" pos:end="833:21"><name pos:start="833:9" pos:end="833:9">s</name><operator pos:start="833:10" pos:end="833:11">-&gt;</operator><name pos:start="833:12" pos:end="833:21">out_format</name></name> <operator pos:start="833:23" pos:end="833:23">=</operator> <name pos:start="833:25" pos:end="833:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="835:9" pos:end="835:28"><expr pos:start="835:9" pos:end="835:27"><name pos:start="835:9" pos:end="835:23"><name pos:start="835:9" pos:end="835:9">s</name><operator pos:start="835:10" pos:end="835:11">-&gt;</operator><name pos:start="835:12" pos:end="835:23">h263_msmpeg4</name></name> <operator pos:start="835:25" pos:end="835:25">=</operator> <literal type="number" pos:start="835:27" pos:end="835:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="837:9" pos:end="837:25"><expr pos:start="837:9" pos:end="837:24"><name pos:start="837:9" pos:end="837:20"><name pos:start="837:9" pos:end="837:9">s</name><operator pos:start="837:10" pos:end="837:11">-&gt;</operator><name pos:start="837:12" pos:end="837:20">h263_pred</name></name> <operator pos:start="837:22" pos:end="837:22">=</operator> <literal type="number" pos:start="837:24" pos:end="837:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="839:9" pos:end="839:31"><expr pos:start="839:9" pos:end="839:30"><name pos:start="839:9" pos:end="839:26"><name pos:start="839:9" pos:end="839:9">s</name><operator pos:start="839:10" pos:end="839:11">-&gt;</operator><name pos:start="839:12" pos:end="839:26">unrestricted_mv</name></name> <operator pos:start="839:28" pos:end="839:28">=</operator> <literal type="number" pos:start="839:30" pos:end="839:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:30"><expr pos:start="841:9" pos:end="841:29"><name pos:start="841:9" pos:end="841:26"><name pos:start="841:9" pos:end="841:9">s</name><operator pos:start="841:10" pos:end="841:11">-&gt;</operator><name pos:start="841:12" pos:end="841:26">msmpeg4_version</name></name><operator pos:start="841:27" pos:end="841:27">=</operator> <literal type="number" pos:start="841:29" pos:end="841:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="843:9" pos:end="843:31"><expr pos:start="843:9" pos:end="843:30"><name pos:start="843:9" pos:end="843:28"><name pos:start="843:9" pos:end="843:9">s</name><operator pos:start="843:10" pos:end="843:11">-&gt;</operator><name pos:start="843:12" pos:end="843:28">flipflop_rounding</name></name><operator pos:start="843:29" pos:end="843:29">=</operator><literal type="number" pos:start="843:30" pos:end="843:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="845:9" pos:end="845:23"><expr pos:start="845:9" pos:end="845:22"><name pos:start="845:9" pos:end="845:20"><name pos:start="845:9" pos:end="845:13">avctx</name><operator pos:start="845:14" pos:end="845:15">-&gt;</operator><name pos:start="845:16" pos:end="845:20">delay</name></name><operator pos:start="845:21" pos:end="845:21">=</operator><literal type="number" pos:start="845:22" pos:end="845:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="847:9" pos:end="847:23"><expr pos:start="847:9" pos:end="847:22"><name pos:start="847:9" pos:end="847:20"><name pos:start="847:9" pos:end="847:9">s</name><operator pos:start="847:10" pos:end="847:11">-&gt;</operator><name pos:start="847:12" pos:end="847:20">low_delay</name></name><operator pos:start="847:21" pos:end="847:21">=</operator><literal type="number" pos:start="847:22" pos:end="847:22">1</literal></expr>;</expr_stmt>

        <break pos:start="849:9" pos:end="849:14">break;</break>

    <case pos:start="851:5" pos:end="851:23">case <expr pos:start="851:10" pos:end="851:22"><name pos:start="851:10" pos:end="851:22">CODEC_ID_WMV1</name></expr>:</case>

        <expr_stmt pos:start="853:9" pos:end="853:33"><expr pos:start="853:9" pos:end="853:32"><name pos:start="853:9" pos:end="853:21"><name pos:start="853:9" pos:end="853:9">s</name><operator pos:start="853:10" pos:end="853:11">-&gt;</operator><name pos:start="853:12" pos:end="853:21">out_format</name></name> <operator pos:start="853:23" pos:end="853:23">=</operator> <name pos:start="853:25" pos:end="853:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="855:9" pos:end="855:28"><expr pos:start="855:9" pos:end="855:27"><name pos:start="855:9" pos:end="855:23"><name pos:start="855:9" pos:end="855:9">s</name><operator pos:start="855:10" pos:end="855:11">-&gt;</operator><name pos:start="855:12" pos:end="855:23">h263_msmpeg4</name></name> <operator pos:start="855:25" pos:end="855:25">=</operator> <literal type="number" pos:start="855:27" pos:end="855:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="857:9" pos:end="857:25"><expr pos:start="857:9" pos:end="857:24"><name pos:start="857:9" pos:end="857:20"><name pos:start="857:9" pos:end="857:9">s</name><operator pos:start="857:10" pos:end="857:11">-&gt;</operator><name pos:start="857:12" pos:end="857:20">h263_pred</name></name> <operator pos:start="857:22" pos:end="857:22">=</operator> <literal type="number" pos:start="857:24" pos:end="857:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="859:9" pos:end="859:31"><expr pos:start="859:9" pos:end="859:30"><name pos:start="859:9" pos:end="859:26"><name pos:start="859:9" pos:end="859:9">s</name><operator pos:start="859:10" pos:end="859:11">-&gt;</operator><name pos:start="859:12" pos:end="859:26">unrestricted_mv</name></name> <operator pos:start="859:28" pos:end="859:28">=</operator> <literal type="number" pos:start="859:30" pos:end="859:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="861:9" pos:end="861:30"><expr pos:start="861:9" pos:end="861:29"><name pos:start="861:9" pos:end="861:26"><name pos:start="861:9" pos:end="861:9">s</name><operator pos:start="861:10" pos:end="861:11">-&gt;</operator><name pos:start="861:12" pos:end="861:26">msmpeg4_version</name></name><operator pos:start="861:27" pos:end="861:27">=</operator> <literal type="number" pos:start="861:29" pos:end="861:29">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="863:9" pos:end="863:31"><expr pos:start="863:9" pos:end="863:30"><name pos:start="863:9" pos:end="863:28"><name pos:start="863:9" pos:end="863:9">s</name><operator pos:start="863:10" pos:end="863:11">-&gt;</operator><name pos:start="863:12" pos:end="863:28">flipflop_rounding</name></name><operator pos:start="863:29" pos:end="863:29">=</operator><literal type="number" pos:start="863:30" pos:end="863:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="865:9" pos:end="865:23"><expr pos:start="865:9" pos:end="865:22"><name pos:start="865:9" pos:end="865:20"><name pos:start="865:9" pos:end="865:13">avctx</name><operator pos:start="865:14" pos:end="865:15">-&gt;</operator><name pos:start="865:16" pos:end="865:20">delay</name></name><operator pos:start="865:21" pos:end="865:21">=</operator><literal type="number" pos:start="865:22" pos:end="865:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="867:9" pos:end="867:23"><expr pos:start="867:9" pos:end="867:22"><name pos:start="867:9" pos:end="867:20"><name pos:start="867:9" pos:end="867:9">s</name><operator pos:start="867:10" pos:end="867:11">-&gt;</operator><name pos:start="867:12" pos:end="867:20">low_delay</name></name><operator pos:start="867:21" pos:end="867:21">=</operator><literal type="number" pos:start="867:22" pos:end="867:22">1</literal></expr>;</expr_stmt>

        <break pos:start="869:9" pos:end="869:14">break;</break>

    <case pos:start="871:5" pos:end="871:23">case <expr pos:start="871:10" pos:end="871:22"><name pos:start="871:10" pos:end="871:22">CODEC_ID_WMV2</name></expr>:</case>

        <expr_stmt pos:start="873:9" pos:end="873:33"><expr pos:start="873:9" pos:end="873:32"><name pos:start="873:9" pos:end="873:21"><name pos:start="873:9" pos:end="873:9">s</name><operator pos:start="873:10" pos:end="873:11">-&gt;</operator><name pos:start="873:12" pos:end="873:21">out_format</name></name> <operator pos:start="873:23" pos:end="873:23">=</operator> <name pos:start="873:25" pos:end="873:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="875:9" pos:end="875:28"><expr pos:start="875:9" pos:end="875:27"><name pos:start="875:9" pos:end="875:23"><name pos:start="875:9" pos:end="875:9">s</name><operator pos:start="875:10" pos:end="875:11">-&gt;</operator><name pos:start="875:12" pos:end="875:23">h263_msmpeg4</name></name> <operator pos:start="875:25" pos:end="875:25">=</operator> <literal type="number" pos:start="875:27" pos:end="875:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="877:9" pos:end="877:25"><expr pos:start="877:9" pos:end="877:24"><name pos:start="877:9" pos:end="877:20"><name pos:start="877:9" pos:end="877:9">s</name><operator pos:start="877:10" pos:end="877:11">-&gt;</operator><name pos:start="877:12" pos:end="877:20">h263_pred</name></name> <operator pos:start="877:22" pos:end="877:22">=</operator> <literal type="number" pos:start="877:24" pos:end="877:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="879:9" pos:end="879:31"><expr pos:start="879:9" pos:end="879:30"><name pos:start="879:9" pos:end="879:26"><name pos:start="879:9" pos:end="879:9">s</name><operator pos:start="879:10" pos:end="879:11">-&gt;</operator><name pos:start="879:12" pos:end="879:26">unrestricted_mv</name></name> <operator pos:start="879:28" pos:end="879:28">=</operator> <literal type="number" pos:start="879:30" pos:end="879:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="881:9" pos:end="881:30"><expr pos:start="881:9" pos:end="881:29"><name pos:start="881:9" pos:end="881:26"><name pos:start="881:9" pos:end="881:9">s</name><operator pos:start="881:10" pos:end="881:11">-&gt;</operator><name pos:start="881:12" pos:end="881:26">msmpeg4_version</name></name><operator pos:start="881:27" pos:end="881:27">=</operator> <literal type="number" pos:start="881:29" pos:end="881:29">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="883:9" pos:end="883:31"><expr pos:start="883:9" pos:end="883:30"><name pos:start="883:9" pos:end="883:28"><name pos:start="883:9" pos:end="883:9">s</name><operator pos:start="883:10" pos:end="883:11">-&gt;</operator><name pos:start="883:12" pos:end="883:28">flipflop_rounding</name></name><operator pos:start="883:29" pos:end="883:29">=</operator><literal type="number" pos:start="883:30" pos:end="883:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:23"><expr pos:start="885:9" pos:end="885:22"><name pos:start="885:9" pos:end="885:20"><name pos:start="885:9" pos:end="885:13">avctx</name><operator pos:start="885:14" pos:end="885:15">-&gt;</operator><name pos:start="885:16" pos:end="885:20">delay</name></name><operator pos:start="885:21" pos:end="885:21">=</operator><literal type="number" pos:start="885:22" pos:end="885:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="887:9" pos:end="887:23"><expr pos:start="887:9" pos:end="887:22"><name pos:start="887:9" pos:end="887:20"><name pos:start="887:9" pos:end="887:9">s</name><operator pos:start="887:10" pos:end="887:11">-&gt;</operator><name pos:start="887:12" pos:end="887:20">low_delay</name></name><operator pos:start="887:21" pos:end="887:21">=</operator><literal type="number" pos:start="887:22" pos:end="887:22">1</literal></expr>;</expr_stmt>

        <break pos:start="889:9" pos:end="889:14">break;</break>

    <default pos:start="891:5" pos:end="891:12">default:</default>

        <return pos:start="893:9" pos:end="893:18">return <expr pos:start="893:16" pos:end="893:17"><operator pos:start="893:16" pos:end="893:16">-</operator><literal type="number" pos:start="893:17" pos:end="893:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="899:5" pos:end="899:39"><expr pos:start="899:5" pos:end="899:38"><name pos:start="899:5" pos:end="899:23"><name pos:start="899:5" pos:end="899:9">avctx</name><operator pos:start="899:10" pos:end="899:11">-&gt;</operator><name pos:start="899:12" pos:end="899:23">has_b_frames</name></name><operator pos:start="899:24" pos:end="899:24">=</operator> <operator pos:start="899:26" pos:end="899:26">!</operator><name pos:start="899:27" pos:end="899:38"><name pos:start="899:27" pos:end="899:27">s</name><operator pos:start="899:28" pos:end="899:29">-&gt;</operator><name pos:start="899:30" pos:end="899:38">low_delay</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="903:5" pos:end="903:20"><expr pos:start="903:5" pos:end="903:19"><name pos:start="903:5" pos:end="903:15"><name pos:start="903:5" pos:end="903:5">s</name><operator pos:start="903:6" pos:end="903:7">-&gt;</operator><name pos:start="903:8" pos:end="903:15">encoding</name></name> <operator pos:start="903:17" pos:end="903:17">=</operator> <literal type="number" pos:start="903:19" pos:end="903:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="907:5" pos:end="909:120"><expr pos:start="907:5" pos:end="909:119"><name pos:start="907:5" pos:end="907:24"><name pos:start="907:5" pos:end="907:5">s</name><operator pos:start="907:6" pos:end="907:7">-&gt;</operator><name pos:start="907:8" pos:end="907:24">progressive_frame</name></name><operator pos:start="907:25" pos:end="907:25">=</operator>

    <name pos:start="909:5" pos:end="909:27"><name pos:start="909:5" pos:end="909:5">s</name><operator pos:start="909:6" pos:end="909:7">-&gt;</operator><name pos:start="909:8" pos:end="909:27">progressive_sequence</name></name><operator pos:start="909:28" pos:end="909:28">=</operator> <operator pos:start="909:30" pos:end="909:30">!</operator><operator pos:start="909:31" pos:end="909:31">(</operator><name pos:start="909:32" pos:end="909:43"><name pos:start="909:32" pos:end="909:36">avctx</name><operator pos:start="909:37" pos:end="909:38">-&gt;</operator><name pos:start="909:39" pos:end="909:43">flags</name></name> <operator pos:start="909:45" pos:end="909:45">&amp;</operator> <operator pos:start="909:47" pos:end="909:47">(</operator><name pos:start="909:48" pos:end="909:72">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="909:73" pos:end="909:73">|</operator><name pos:start="909:74" pos:end="909:97">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="909:98" pos:end="909:98">|</operator><name pos:start="909:99" pos:end="909:117">CODEC_FLAG_ALT_SCAN</name><operator pos:start="909:118" pos:end="909:118">)</operator><operator pos:start="909:119" pos:end="909:119">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="913:5" pos:end="913:14">/* init */</comment>

    <if_stmt pos:start="915:5" pos:end="917:18"><if pos:start="915:5" pos:end="917:18">if <condition pos:start="915:8" pos:end="915:31">(<expr pos:start="915:9" pos:end="915:30"><call pos:start="915:9" pos:end="915:26"><name pos:start="915:9" pos:end="915:23">MPV_common_init</name><argument_list pos:start="915:24" pos:end="915:26">(<argument pos:start="915:25" pos:end="915:25"><expr pos:start="915:25" pos:end="915:25"><name pos:start="915:25" pos:end="915:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="915:28" pos:end="915:28">&lt;</operator> <literal type="number" pos:start="915:30" pos:end="915:30">0</literal></expr>)</condition><block type="pseudo" pos:start="917:9" pos:end="917:18"><block_content pos:start="917:9" pos:end="917:18">

        <return pos:start="917:9" pos:end="917:18">return <expr pos:start="917:16" pos:end="917:17"><operator pos:start="917:16" pos:end="917:16">-</operator><literal type="number" pos:start="917:17" pos:end="917:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="921:5" pos:end="923:41"><if pos:start="921:5" pos:end="923:41">if<condition pos:start="921:7" pos:end="921:24">(<expr pos:start="921:8" pos:end="921:23"><operator pos:start="921:8" pos:end="921:8">!</operator><name pos:start="921:9" pos:end="921:23"><name pos:start="921:9" pos:end="921:9">s</name><operator pos:start="921:10" pos:end="921:11">-&gt;</operator><name pos:start="921:12" pos:end="921:23">dct_quantize</name></name></expr>)</condition><block type="pseudo" pos:start="923:9" pos:end="923:41"><block_content pos:start="923:9" pos:end="923:41">

        <expr_stmt pos:start="923:9" pos:end="923:41"><expr pos:start="923:9" pos:end="923:40"><name pos:start="923:9" pos:end="923:23"><name pos:start="923:9" pos:end="923:9">s</name><operator pos:start="923:10" pos:end="923:11">-&gt;</operator><name pos:start="923:12" pos:end="923:23">dct_quantize</name></name> <operator pos:start="923:25" pos:end="923:25">=</operator> <name pos:start="923:27" pos:end="923:40">dct_quantize_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="925:5" pos:end="927:39"><if pos:start="925:5" pos:end="927:39">if<condition pos:start="925:7" pos:end="925:23">(<expr pos:start="925:8" pos:end="925:22"><operator pos:start="925:8" pos:end="925:8">!</operator><name pos:start="925:9" pos:end="925:22"><name pos:start="925:9" pos:end="925:9">s</name><operator pos:start="925:10" pos:end="925:11">-&gt;</operator><name pos:start="925:12" pos:end="925:22">denoise_dct</name></name></expr>)</condition><block type="pseudo" pos:start="927:9" pos:end="927:39"><block_content pos:start="927:9" pos:end="927:39">

        <expr_stmt pos:start="927:9" pos:end="927:39"><expr pos:start="927:9" pos:end="927:38"><name pos:start="927:9" pos:end="927:22"><name pos:start="927:9" pos:end="927:9">s</name><operator pos:start="927:10" pos:end="927:11">-&gt;</operator><name pos:start="927:12" pos:end="927:22">denoise_dct</name></name> <operator pos:start="927:24" pos:end="927:24">=</operator> <name pos:start="927:26" pos:end="927:38">denoise_dct_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="929:5" pos:end="929:43"><expr pos:start="929:5" pos:end="929:42"><name pos:start="929:5" pos:end="929:24"><name pos:start="929:5" pos:end="929:5">s</name><operator pos:start="929:6" pos:end="929:7">-&gt;</operator><name pos:start="929:8" pos:end="929:24">fast_dct_quantize</name></name> <operator pos:start="929:26" pos:end="929:26">=</operator> <name pos:start="929:28" pos:end="929:42"><name pos:start="929:28" pos:end="929:28">s</name><operator pos:start="929:29" pos:end="929:30">-&gt;</operator><name pos:start="929:31" pos:end="929:42">dct_quantize</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="931:5" pos:end="933:49"><if pos:start="931:5" pos:end="933:49">if<condition pos:start="931:7" pos:end="931:22">(<expr pos:start="931:8" pos:end="931:21"><name pos:start="931:8" pos:end="931:21"><name pos:start="931:8" pos:end="931:12">avctx</name><operator pos:start="931:13" pos:end="931:14">-&gt;</operator><name pos:start="931:15" pos:end="931:21">trellis</name></name></expr>)</condition><block type="pseudo" pos:start="933:9" pos:end="933:49"><block_content pos:start="933:9" pos:end="933:49">

        <expr_stmt pos:start="933:9" pos:end="933:49"><expr pos:start="933:9" pos:end="933:48"><name pos:start="933:9" pos:end="933:23"><name pos:start="933:9" pos:end="933:9">s</name><operator pos:start="933:10" pos:end="933:11">-&gt;</operator><name pos:start="933:12" pos:end="933:23">dct_quantize</name></name> <operator pos:start="933:25" pos:end="933:25">=</operator> <name pos:start="933:27" pos:end="933:48">dct_quantize_trellis_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="937:5" pos:end="939:60"><if pos:start="937:5" pos:end="939:60">if<condition pos:start="937:7" pos:end="937:74">(<expr pos:start="937:8" pos:end="937:73"><operator pos:start="937:8" pos:end="937:8">(</operator><name pos:start="937:9" pos:end="937:28">CONFIG_H263P_ENCODER</name> <operator pos:start="937:30" pos:end="937:31">||</operator> <name pos:start="937:33" pos:end="937:51">CONFIG_RV20_ENCODER</name><operator pos:start="937:52" pos:end="937:52">)</operator> <operator pos:start="937:54" pos:end="937:55">&amp;&amp;</operator> <name pos:start="937:57" pos:end="937:73"><name pos:start="937:57" pos:end="937:57">s</name><operator pos:start="937:58" pos:end="937:59">-&gt;</operator><name pos:start="937:60" pos:end="937:73">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="939:9" pos:end="939:60"><block_content pos:start="939:9" pos:end="939:60">

        <expr_stmt pos:start="939:9" pos:end="939:60"><expr pos:start="939:9" pos:end="939:59"><name pos:start="939:9" pos:end="939:30"><name pos:start="939:9" pos:end="939:9">s</name><operator pos:start="939:10" pos:end="939:11">-&gt;</operator><name pos:start="939:12" pos:end="939:30">chroma_qscale_table</name></name><operator pos:start="939:31" pos:end="939:31">=</operator> <name pos:start="939:33" pos:end="939:59">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="943:5" pos:end="943:25"><expr pos:start="943:5" pos:end="943:24"><name pos:start="943:5" pos:end="943:22"><name pos:start="943:5" pos:end="943:5">s</name><operator pos:start="943:6" pos:end="943:7">-&gt;</operator><name pos:start="943:8" pos:end="943:22">quant_precision</name></name><operator pos:start="943:23" pos:end="943:23">=</operator><literal type="number" pos:start="943:24" pos:end="943:24">5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="947:5" pos:end="947:63"><expr pos:start="947:5" pos:end="947:62"><call pos:start="947:5" pos:end="947:62"><name pos:start="947:5" pos:end="947:14">ff_set_cmp</name><argument_list pos:start="947:15" pos:end="947:62">(<argument pos:start="947:16" pos:end="947:22"><expr pos:start="947:16" pos:end="947:22"><operator pos:start="947:16" pos:end="947:16">&amp;</operator><name pos:start="947:17" pos:end="947:22"><name pos:start="947:17" pos:end="947:17">s</name><operator pos:start="947:18" pos:end="947:19">-&gt;</operator><name pos:start="947:20" pos:end="947:22">dsp</name></name></expr></argument>, <argument pos:start="947:25" pos:end="947:40"><expr pos:start="947:25" pos:end="947:40"><name pos:start="947:25" pos:end="947:40"><name pos:start="947:25" pos:end="947:25">s</name><operator pos:start="947:26" pos:end="947:27">-&gt;</operator><name pos:start="947:28" pos:end="947:30">dsp</name><operator pos:start="947:31" pos:end="947:31">.</operator><name pos:start="947:32" pos:end="947:40">ildct_cmp</name></name></expr></argument>, <argument pos:start="947:43" pos:end="947:61"><expr pos:start="947:43" pos:end="947:61"><name pos:start="947:43" pos:end="947:61"><name pos:start="947:43" pos:end="947:43">s</name><operator pos:start="947:44" pos:end="947:45">-&gt;</operator><name pos:start="947:46" pos:end="947:50">avctx</name><operator pos:start="947:51" pos:end="947:52">-&gt;</operator><name pos:start="947:53" pos:end="947:61">ildct_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="949:5" pos:end="949:73"><expr pos:start="949:5" pos:end="949:72"><call pos:start="949:5" pos:end="949:72"><name pos:start="949:5" pos:end="949:14">ff_set_cmp</name><argument_list pos:start="949:15" pos:end="949:72">(<argument pos:start="949:16" pos:end="949:22"><expr pos:start="949:16" pos:end="949:22"><operator pos:start="949:16" pos:end="949:16">&amp;</operator><name pos:start="949:17" pos:end="949:22"><name pos:start="949:17" pos:end="949:17">s</name><operator pos:start="949:18" pos:end="949:19">-&gt;</operator><name pos:start="949:20" pos:end="949:22">dsp</name></name></expr></argument>, <argument pos:start="949:25" pos:end="949:45"><expr pos:start="949:25" pos:end="949:45"><name pos:start="949:25" pos:end="949:45"><name pos:start="949:25" pos:end="949:25">s</name><operator pos:start="949:26" pos:end="949:27">-&gt;</operator><name pos:start="949:28" pos:end="949:30">dsp</name><operator pos:start="949:31" pos:end="949:31">.</operator><name pos:start="949:32" pos:end="949:45">frame_skip_cmp</name></name></expr></argument>, <argument pos:start="949:48" pos:end="949:71"><expr pos:start="949:48" pos:end="949:71"><name pos:start="949:48" pos:end="949:71"><name pos:start="949:48" pos:end="949:48">s</name><operator pos:start="949:49" pos:end="949:50">-&gt;</operator><name pos:start="949:51" pos:end="949:55">avctx</name><operator pos:start="949:56" pos:end="949:57">-&gt;</operator><name pos:start="949:58" pos:end="949:71">frame_skip_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="953:5" pos:end="955:31"><if pos:start="953:5" pos:end="955:31">if <condition pos:start="953:8" pos:end="953:57">(<expr pos:start="953:9" pos:end="953:56"><name pos:start="953:9" pos:end="953:27">CONFIG_H261_ENCODER</name> <operator pos:start="953:29" pos:end="953:30">&amp;&amp;</operator> <name pos:start="953:32" pos:end="953:44"><name pos:start="953:32" pos:end="953:32">s</name><operator pos:start="953:33" pos:end="953:34">-&gt;</operator><name pos:start="953:35" pos:end="953:44">out_format</name></name> <operator pos:start="953:46" pos:end="953:47">==</operator> <name pos:start="953:49" pos:end="953:56">FMT_H261</name></expr>)</condition><block type="pseudo" pos:start="955:9" pos:end="955:31"><block_content pos:start="955:9" pos:end="955:31">

        <expr_stmt pos:start="955:9" pos:end="955:31"><expr pos:start="955:9" pos:end="955:30"><call pos:start="955:9" pos:end="955:30"><name pos:start="955:9" pos:end="955:27">ff_h261_encode_init</name><argument_list pos:start="955:28" pos:end="955:30">(<argument pos:start="955:29" pos:end="955:29"><expr pos:start="955:29" pos:end="955:29"><name pos:start="955:29" pos:end="955:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="957:5" pos:end="959:28"><if pos:start="957:5" pos:end="959:28">if <condition pos:start="957:8" pos:end="957:57">(<expr pos:start="957:9" pos:end="957:56"><name pos:start="957:9" pos:end="957:27">CONFIG_H263_ENCODER</name> <operator pos:start="957:29" pos:end="957:30">&amp;&amp;</operator> <name pos:start="957:32" pos:end="957:44"><name pos:start="957:32" pos:end="957:32">s</name><operator pos:start="957:33" pos:end="957:34">-&gt;</operator><name pos:start="957:35" pos:end="957:44">out_format</name></name> <operator pos:start="957:46" pos:end="957:47">==</operator> <name pos:start="957:49" pos:end="957:56">FMT_H263</name></expr>)</condition><block type="pseudo" pos:start="959:9" pos:end="959:28"><block_content pos:start="959:9" pos:end="959:28">

        <expr_stmt pos:start="959:9" pos:end="959:28"><expr pos:start="959:9" pos:end="959:27"><call pos:start="959:9" pos:end="959:27"><name pos:start="959:9" pos:end="959:24">h263_encode_init</name><argument_list pos:start="959:25" pos:end="959:27">(<argument pos:start="959:26" pos:end="959:26"><expr pos:start="959:26" pos:end="959:26"><name pos:start="959:26" pos:end="959:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="961:5" pos:end="963:34"><if pos:start="961:5" pos:end="963:34">if <condition pos:start="961:8" pos:end="961:53">(<expr pos:start="961:9" pos:end="961:52"><name pos:start="961:9" pos:end="961:30">CONFIG_MSMPEG4_ENCODER</name> <operator pos:start="961:32" pos:end="961:33">&amp;&amp;</operator> <name pos:start="961:35" pos:end="961:52"><name pos:start="961:35" pos:end="961:35">s</name><operator pos:start="961:36" pos:end="961:37">-&gt;</operator><name pos:start="961:38" pos:end="961:52">msmpeg4_version</name></name></expr>)</condition><block type="pseudo" pos:start="963:9" pos:end="963:34"><block_content pos:start="963:9" pos:end="963:34">

        <expr_stmt pos:start="963:9" pos:end="963:34"><expr pos:start="963:9" pos:end="963:33"><call pos:start="963:9" pos:end="963:33"><name pos:start="963:9" pos:end="963:30">ff_msmpeg4_encode_init</name><argument_list pos:start="963:31" pos:end="963:33">(<argument pos:start="963:32" pos:end="963:32"><expr pos:start="963:32" pos:end="963:32"><name pos:start="963:32" pos:end="963:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="965:5" pos:end="969:32"><if pos:start="965:5" pos:end="969:32">if <condition pos:start="965:8" pos:end="967:38">(<expr pos:start="965:9" pos:end="967:37"><operator pos:start="965:9" pos:end="965:9">(</operator><name pos:start="965:10" pos:end="965:34">CONFIG_MPEG1VIDEO_ENCODER</name> <operator pos:start="965:36" pos:end="965:37">||</operator> <name pos:start="965:39" pos:end="965:63">CONFIG_MPEG2VIDEO_ENCODER</name><operator pos:start="965:64" pos:end="965:64">)</operator>

        <operator pos:start="967:9" pos:end="967:10">&amp;&amp;</operator> <name pos:start="967:12" pos:end="967:24"><name pos:start="967:12" pos:end="967:12">s</name><operator pos:start="967:13" pos:end="967:14">-&gt;</operator><name pos:start="967:15" pos:end="967:24">out_format</name></name> <operator pos:start="967:26" pos:end="967:27">==</operator> <name pos:start="967:29" pos:end="967:37">FMT_MPEG1</name></expr>)</condition><block type="pseudo" pos:start="969:9" pos:end="969:32"><block_content pos:start="969:9" pos:end="969:32">

        <expr_stmt pos:start="969:9" pos:end="969:32"><expr pos:start="969:9" pos:end="969:31"><call pos:start="969:9" pos:end="969:31"><name pos:start="969:9" pos:end="969:28">ff_mpeg1_encode_init</name><argument_list pos:start="969:29" pos:end="969:31">(<argument pos:start="969:30" pos:end="969:30"><expr pos:start="969:30" pos:end="969:30"><name pos:start="969:30" pos:end="969:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="973:5" pos:end="973:23">/* init q matrix */</comment>

    <for pos:start="975:5" pos:end="1009:5">for<control pos:start="975:8" pos:end="975:21">(<init pos:start="975:9" pos:end="975:12"><expr pos:start="975:9" pos:end="975:11"><name pos:start="975:9" pos:end="975:9">i</name><operator pos:start="975:10" pos:end="975:10">=</operator><literal type="number" pos:start="975:11" pos:end="975:11">0</literal></expr>;</init><condition pos:start="975:13" pos:end="975:17"><expr pos:start="975:13" pos:end="975:16"><name pos:start="975:13" pos:end="975:13">i</name><operator pos:start="975:14" pos:end="975:14">&lt;</operator><literal type="number" pos:start="975:15" pos:end="975:16">64</literal></expr>;</condition><incr pos:start="975:18" pos:end="975:20"><expr pos:start="975:18" pos:end="975:20"><name pos:start="975:18" pos:end="975:18">i</name><operator pos:start="975:19" pos:end="975:20">++</operator></expr></incr>)</control> <block pos:start="975:23" pos:end="1009:5">{<block_content pos:start="977:9" pos:end="1007:59">

        <decl_stmt pos:start="977:9" pos:end="977:42"><decl pos:start="977:9" pos:end="977:41"><type pos:start="977:9" pos:end="977:11"><name pos:start="977:9" pos:end="977:11">int</name></type> <name pos:start="977:13" pos:end="977:13">j</name><init pos:start="977:14" pos:end="977:41">= <expr pos:start="977:16" pos:end="977:41"><name pos:start="977:16" pos:end="977:41"><name pos:start="977:16" pos:end="977:16">s</name><operator pos:start="977:17" pos:end="977:18">-&gt;</operator><name pos:start="977:19" pos:end="977:21">dsp</name><operator pos:start="977:22" pos:end="977:22">.</operator><name pos:start="977:23" pos:end="977:38">idct_permutation</name><index pos:start="977:39" pos:end="977:41">[<expr pos:start="977:40" pos:end="977:40"><name pos:start="977:40" pos:end="977:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="979:9" pos:end="999:9"><if pos:start="979:9" pos:end="985:9">if<condition pos:start="979:11" pos:end="979:80">(<expr pos:start="979:12" pos:end="979:79"><name pos:start="979:12" pos:end="979:31">CONFIG_MPEG4_ENCODER</name> <operator pos:start="979:33" pos:end="979:34">&amp;&amp;</operator> <name pos:start="979:36" pos:end="979:46"><name pos:start="979:36" pos:end="979:36">s</name><operator pos:start="979:37" pos:end="979:38">-&gt;</operator><name pos:start="979:39" pos:end="979:46">codec_id</name></name><operator pos:start="979:47" pos:end="979:48">==</operator><name pos:start="979:49" pos:end="979:62">CODEC_ID_MPEG4</name> <operator pos:start="979:64" pos:end="979:65">&amp;&amp;</operator> <name pos:start="979:67" pos:end="979:79"><name pos:start="979:67" pos:end="979:67">s</name><operator pos:start="979:68" pos:end="979:69">-&gt;</operator><name pos:start="979:70" pos:end="979:79">mpeg_quant</name></name></expr>)</condition><block pos:start="979:81" pos:end="985:9">{<block_content pos:start="981:13" pos:end="983:70">

            <expr_stmt pos:start="981:13" pos:end="981:66"><expr pos:start="981:13" pos:end="981:65"><name pos:start="981:13" pos:end="981:30"><name pos:start="981:13" pos:end="981:13">s</name><operator pos:start="981:14" pos:end="981:15">-&gt;</operator><name pos:start="981:16" pos:end="981:27">intra_matrix</name><index pos:start="981:28" pos:end="981:30">[<expr pos:start="981:29" pos:end="981:29"><name pos:start="981:29" pos:end="981:29">j</name></expr>]</index></name> <operator pos:start="981:32" pos:end="981:32">=</operator> <name pos:start="981:34" pos:end="981:65"><name pos:start="981:34" pos:end="981:62">ff_mpeg4_default_intra_matrix</name><index pos:start="981:63" pos:end="981:65">[<expr pos:start="981:64" pos:end="981:64"><name pos:start="981:64" pos:end="981:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="983:13" pos:end="983:70"><expr pos:start="983:13" pos:end="983:69"><name pos:start="983:13" pos:end="983:30"><name pos:start="983:13" pos:end="983:13">s</name><operator pos:start="983:14" pos:end="983:15">-&gt;</operator><name pos:start="983:16" pos:end="983:27">inter_matrix</name><index pos:start="983:28" pos:end="983:30">[<expr pos:start="983:29" pos:end="983:29"><name pos:start="983:29" pos:end="983:29">j</name></expr>]</index></name> <operator pos:start="983:32" pos:end="983:32">=</operator> <name pos:start="983:34" pos:end="983:69"><name pos:start="983:34" pos:end="983:66">ff_mpeg4_default_non_intra_matrix</name><index pos:start="983:67" pos:end="983:69">[<expr pos:start="983:68" pos:end="983:68"><name pos:start="983:68" pos:end="983:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="985:10" pos:end="991:9">else if<condition pos:start="985:17" pos:end="985:72">(<expr pos:start="985:18" pos:end="985:71"><name pos:start="985:18" pos:end="985:30"><name pos:start="985:18" pos:end="985:18">s</name><operator pos:start="985:19" pos:end="985:20">-&gt;</operator><name pos:start="985:21" pos:end="985:30">out_format</name></name> <operator pos:start="985:32" pos:end="985:33">==</operator> <name pos:start="985:35" pos:end="985:42">FMT_H263</name> <operator pos:start="985:44" pos:end="985:45">||</operator> <name pos:start="985:47" pos:end="985:59"><name pos:start="985:47" pos:end="985:47">s</name><operator pos:start="985:48" pos:end="985:49">-&gt;</operator><name pos:start="985:50" pos:end="985:59">out_format</name></name> <operator pos:start="985:61" pos:end="985:62">==</operator> <name pos:start="985:64" pos:end="985:71">FMT_H261</name></expr>)</condition><block pos:start="985:73" pos:end="991:9">{<block_content pos:start="987:13" pos:end="989:70">

            <expr_stmt pos:start="987:13" pos:end="989:70"><expr pos:start="987:13" pos:end="989:69"><name pos:start="987:13" pos:end="987:30"><name pos:start="987:13" pos:end="987:13">s</name><operator pos:start="987:14" pos:end="987:15">-&gt;</operator><name pos:start="987:16" pos:end="987:27">intra_matrix</name><index pos:start="987:28" pos:end="987:30">[<expr pos:start="987:29" pos:end="987:29"><name pos:start="987:29" pos:end="987:29">j</name></expr>]</index></name> <operator pos:start="987:32" pos:end="987:32">=</operator>

            <name pos:start="989:13" pos:end="989:30"><name pos:start="989:13" pos:end="989:13">s</name><operator pos:start="989:14" pos:end="989:15">-&gt;</operator><name pos:start="989:16" pos:end="989:27">inter_matrix</name><index pos:start="989:28" pos:end="989:30">[<expr pos:start="989:29" pos:end="989:29"><name pos:start="989:29" pos:end="989:29">j</name></expr>]</index></name> <operator pos:start="989:32" pos:end="989:32">=</operator> <name pos:start="989:34" pos:end="989:69"><name pos:start="989:34" pos:end="989:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="989:67" pos:end="989:69">[<expr pos:start="989:68" pos:end="989:68"><name pos:start="989:68" pos:end="989:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="991:10" pos:end="999:9">else

        <block pos:start="993:9" pos:end="999:9">{<block_content pos:start="995:13" pos:end="997:70"> <comment type="block" pos:start="993:11" pos:end="993:23">/* mpeg1/2 */</comment>

            <expr_stmt pos:start="995:13" pos:end="995:66"><expr pos:start="995:13" pos:end="995:65"><name pos:start="995:13" pos:end="995:30"><name pos:start="995:13" pos:end="995:13">s</name><operator pos:start="995:14" pos:end="995:15">-&gt;</operator><name pos:start="995:16" pos:end="995:27">intra_matrix</name><index pos:start="995:28" pos:end="995:30">[<expr pos:start="995:29" pos:end="995:29"><name pos:start="995:29" pos:end="995:29">j</name></expr>]</index></name> <operator pos:start="995:32" pos:end="995:32">=</operator> <name pos:start="995:34" pos:end="995:65"><name pos:start="995:34" pos:end="995:62">ff_mpeg1_default_intra_matrix</name><index pos:start="995:63" pos:end="995:65">[<expr pos:start="995:64" pos:end="995:64"><name pos:start="995:64" pos:end="995:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="997:13" pos:end="997:70"><expr pos:start="997:13" pos:end="997:69"><name pos:start="997:13" pos:end="997:30"><name pos:start="997:13" pos:end="997:13">s</name><operator pos:start="997:14" pos:end="997:15">-&gt;</operator><name pos:start="997:16" pos:end="997:27">inter_matrix</name><index pos:start="997:28" pos:end="997:30">[<expr pos:start="997:29" pos:end="997:29"><name pos:start="997:29" pos:end="997:29">j</name></expr>]</index></name> <operator pos:start="997:32" pos:end="997:32">=</operator> <name pos:start="997:34" pos:end="997:69"><name pos:start="997:34" pos:end="997:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="997:67" pos:end="997:69">[<expr pos:start="997:68" pos:end="997:68"><name pos:start="997:68" pos:end="997:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="1001:9" pos:end="1003:59"><if pos:start="1001:9" pos:end="1003:59">if<condition pos:start="1001:11" pos:end="1001:34">(<expr pos:start="1001:12" pos:end="1001:33"><name pos:start="1001:12" pos:end="1001:33"><name pos:start="1001:12" pos:end="1001:12">s</name><operator pos:start="1001:13" pos:end="1001:14">-&gt;</operator><name pos:start="1001:15" pos:end="1001:19">avctx</name><operator pos:start="1001:20" pos:end="1001:21">-&gt;</operator><name pos:start="1001:22" pos:end="1001:33">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1003:13" pos:end="1003:59"><block_content pos:start="1003:13" pos:end="1003:59">

            <expr_stmt pos:start="1003:13" pos:end="1003:59"><expr pos:start="1003:13" pos:end="1003:58"><name pos:start="1003:13" pos:end="1003:30"><name pos:start="1003:13" pos:end="1003:13">s</name><operator pos:start="1003:14" pos:end="1003:15">-&gt;</operator><name pos:start="1003:16" pos:end="1003:27">intra_matrix</name><index pos:start="1003:28" pos:end="1003:30">[<expr pos:start="1003:29" pos:end="1003:29"><name pos:start="1003:29" pos:end="1003:29">j</name></expr>]</index></name> <operator pos:start="1003:32" pos:end="1003:32">=</operator> <name pos:start="1003:34" pos:end="1003:58"><name pos:start="1003:34" pos:end="1003:34">s</name><operator pos:start="1003:35" pos:end="1003:36">-&gt;</operator><name pos:start="1003:37" pos:end="1003:41">avctx</name><operator pos:start="1003:42" pos:end="1003:43">-&gt;</operator><name pos:start="1003:44" pos:end="1003:55">intra_matrix</name><index pos:start="1003:56" pos:end="1003:58">[<expr pos:start="1003:57" pos:end="1003:57"><name pos:start="1003:57" pos:end="1003:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1005:9" pos:end="1007:59"><if pos:start="1005:9" pos:end="1007:59">if<condition pos:start="1005:11" pos:end="1005:34">(<expr pos:start="1005:12" pos:end="1005:33"><name pos:start="1005:12" pos:end="1005:33"><name pos:start="1005:12" pos:end="1005:12">s</name><operator pos:start="1005:13" pos:end="1005:14">-&gt;</operator><name pos:start="1005:15" pos:end="1005:19">avctx</name><operator pos:start="1005:20" pos:end="1005:21">-&gt;</operator><name pos:start="1005:22" pos:end="1005:33">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1007:13" pos:end="1007:59"><block_content pos:start="1007:13" pos:end="1007:59">

            <expr_stmt pos:start="1007:13" pos:end="1007:59"><expr pos:start="1007:13" pos:end="1007:58"><name pos:start="1007:13" pos:end="1007:30"><name pos:start="1007:13" pos:end="1007:13">s</name><operator pos:start="1007:14" pos:end="1007:15">-&gt;</operator><name pos:start="1007:16" pos:end="1007:27">inter_matrix</name><index pos:start="1007:28" pos:end="1007:30">[<expr pos:start="1007:29" pos:end="1007:29"><name pos:start="1007:29" pos:end="1007:29">j</name></expr>]</index></name> <operator pos:start="1007:32" pos:end="1007:32">=</operator> <name pos:start="1007:34" pos:end="1007:58"><name pos:start="1007:34" pos:end="1007:34">s</name><operator pos:start="1007:35" pos:end="1007:36">-&gt;</operator><name pos:start="1007:37" pos:end="1007:41">avctx</name><operator pos:start="1007:42" pos:end="1007:43">-&gt;</operator><name pos:start="1007:44" pos:end="1007:55">inter_matrix</name><index pos:start="1007:56" pos:end="1007:58">[<expr pos:start="1007:57" pos:end="1007:57"><name pos:start="1007:57" pos:end="1007:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1013:5" pos:end="1013:27">/* precompute matrix */</comment>

    <comment type="block" pos:start="1015:5" pos:end="1015:55">/* for mjpeg, we do include qscale in the matrix */</comment>

    <if_stmt pos:start="1017:5" pos:end="1027:5"><if pos:start="1017:5" pos:end="1027:5">if <condition pos:start="1017:8" pos:end="1017:35">(<expr pos:start="1017:9" pos:end="1017:34"><name pos:start="1017:9" pos:end="1017:21"><name pos:start="1017:9" pos:end="1017:9">s</name><operator pos:start="1017:10" pos:end="1017:11">-&gt;</operator><name pos:start="1017:12" pos:end="1017:21">out_format</name></name> <operator pos:start="1017:23" pos:end="1017:24">!=</operator> <name pos:start="1017:26" pos:end="1017:34">FMT_MJPEG</name></expr>)</condition> <block pos:start="1017:37" pos:end="1027:5">{<block_content pos:start="1019:9" pos:end="1025:81">

        <expr_stmt pos:start="1019:9" pos:end="1021:81"><expr pos:start="1019:9" pos:end="1021:80"><call pos:start="1019:9" pos:end="1021:80"><name pos:start="1019:9" pos:end="1019:25">ff_convert_matrix</name><argument_list pos:start="1019:26" pos:end="1021:80">(<argument pos:start="1019:27" pos:end="1019:33"><expr pos:start="1019:27" pos:end="1019:33"><operator pos:start="1019:27" pos:end="1019:27">&amp;</operator><name pos:start="1019:28" pos:end="1019:33"><name pos:start="1019:28" pos:end="1019:28">s</name><operator pos:start="1019:29" pos:end="1019:30">-&gt;</operator><name pos:start="1019:31" pos:end="1019:33">dsp</name></name></expr></argument>, <argument pos:start="1019:36" pos:end="1019:52"><expr pos:start="1019:36" pos:end="1019:52"><name pos:start="1019:36" pos:end="1019:52"><name pos:start="1019:36" pos:end="1019:36">s</name><operator pos:start="1019:37" pos:end="1019:38">-&gt;</operator><name pos:start="1019:39" pos:end="1019:52">q_intra_matrix</name></name></expr></argument>, <argument pos:start="1019:55" pos:end="1019:73"><expr pos:start="1019:55" pos:end="1019:73"><name pos:start="1019:55" pos:end="1019:73"><name pos:start="1019:55" pos:end="1019:55">s</name><operator pos:start="1019:56" pos:end="1019:57">-&gt;</operator><name pos:start="1019:58" pos:end="1019:73">q_intra_matrix16</name></name></expr></argument>,

                       <argument pos:start="1021:24" pos:end="1021:38"><expr pos:start="1021:24" pos:end="1021:38"><name pos:start="1021:24" pos:end="1021:38"><name pos:start="1021:24" pos:end="1021:24">s</name><operator pos:start="1021:25" pos:end="1021:26">-&gt;</operator><name pos:start="1021:27" pos:end="1021:38">intra_matrix</name></name></expr></argument>, <argument pos:start="1021:41" pos:end="1021:59"><expr pos:start="1021:41" pos:end="1021:59"><name pos:start="1021:41" pos:end="1021:59"><name pos:start="1021:41" pos:end="1021:41">s</name><operator pos:start="1021:42" pos:end="1021:43">-&gt;</operator><name pos:start="1021:44" pos:end="1021:59">intra_quant_bias</name></name></expr></argument>, <argument pos:start="1021:62" pos:end="1021:72"><expr pos:start="1021:62" pos:end="1021:72"><name pos:start="1021:62" pos:end="1021:72"><name pos:start="1021:62" pos:end="1021:66">avctx</name><operator pos:start="1021:67" pos:end="1021:68">-&gt;</operator><name pos:start="1021:69" pos:end="1021:72">qmin</name></name></expr></argument>, <argument pos:start="1021:75" pos:end="1021:76"><expr pos:start="1021:75" pos:end="1021:76"><literal type="number" pos:start="1021:75" pos:end="1021:76">31</literal></expr></argument>, <argument pos:start="1021:79" pos:end="1021:79"><expr pos:start="1021:79" pos:end="1021:79"><literal type="number" pos:start="1021:79" pos:end="1021:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1023:9" pos:end="1025:81"><expr pos:start="1023:9" pos:end="1025:80"><call pos:start="1023:9" pos:end="1025:80"><name pos:start="1023:9" pos:end="1023:25">ff_convert_matrix</name><argument_list pos:start="1023:26" pos:end="1025:80">(<argument pos:start="1023:27" pos:end="1023:33"><expr pos:start="1023:27" pos:end="1023:33"><operator pos:start="1023:27" pos:end="1023:27">&amp;</operator><name pos:start="1023:28" pos:end="1023:33"><name pos:start="1023:28" pos:end="1023:28">s</name><operator pos:start="1023:29" pos:end="1023:30">-&gt;</operator><name pos:start="1023:31" pos:end="1023:33">dsp</name></name></expr></argument>, <argument pos:start="1023:36" pos:end="1023:52"><expr pos:start="1023:36" pos:end="1023:52"><name pos:start="1023:36" pos:end="1023:52"><name pos:start="1023:36" pos:end="1023:36">s</name><operator pos:start="1023:37" pos:end="1023:38">-&gt;</operator><name pos:start="1023:39" pos:end="1023:52">q_inter_matrix</name></name></expr></argument>, <argument pos:start="1023:55" pos:end="1023:73"><expr pos:start="1023:55" pos:end="1023:73"><name pos:start="1023:55" pos:end="1023:73"><name pos:start="1023:55" pos:end="1023:55">s</name><operator pos:start="1023:56" pos:end="1023:57">-&gt;</operator><name pos:start="1023:58" pos:end="1023:73">q_inter_matrix16</name></name></expr></argument>,

                       <argument pos:start="1025:24" pos:end="1025:38"><expr pos:start="1025:24" pos:end="1025:38"><name pos:start="1025:24" pos:end="1025:38"><name pos:start="1025:24" pos:end="1025:24">s</name><operator pos:start="1025:25" pos:end="1025:26">-&gt;</operator><name pos:start="1025:27" pos:end="1025:38">inter_matrix</name></name></expr></argument>, <argument pos:start="1025:41" pos:end="1025:59"><expr pos:start="1025:41" pos:end="1025:59"><name pos:start="1025:41" pos:end="1025:59"><name pos:start="1025:41" pos:end="1025:41">s</name><operator pos:start="1025:42" pos:end="1025:43">-&gt;</operator><name pos:start="1025:44" pos:end="1025:59">inter_quant_bias</name></name></expr></argument>, <argument pos:start="1025:62" pos:end="1025:72"><expr pos:start="1025:62" pos:end="1025:72"><name pos:start="1025:62" pos:end="1025:72"><name pos:start="1025:62" pos:end="1025:66">avctx</name><operator pos:start="1025:67" pos:end="1025:68">-&gt;</operator><name pos:start="1025:69" pos:end="1025:72">qmin</name></name></expr></argument>, <argument pos:start="1025:75" pos:end="1025:76"><expr pos:start="1025:75" pos:end="1025:76"><literal type="number" pos:start="1025:75" pos:end="1025:76">31</literal></expr></argument>, <argument pos:start="1025:79" pos:end="1025:79"><expr pos:start="1025:79" pos:end="1025:79"><literal type="number" pos:start="1025:79" pos:end="1025:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1031:5" pos:end="1033:18"><if pos:start="1031:5" pos:end="1033:18">if<condition pos:start="1031:7" pos:end="1031:35">(<expr pos:start="1031:8" pos:end="1031:34"><call pos:start="1031:8" pos:end="1031:30"><name pos:start="1031:8" pos:end="1031:27">ff_rate_control_init</name><argument_list pos:start="1031:28" pos:end="1031:30">(<argument pos:start="1031:29" pos:end="1031:29"><expr pos:start="1031:29" pos:end="1031:29"><name pos:start="1031:29" pos:end="1031:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="1031:32" pos:end="1031:32">&lt;</operator> <literal type="number" pos:start="1031:34" pos:end="1031:34">0</literal></expr>)</condition><block type="pseudo" pos:start="1033:9" pos:end="1033:18"><block_content pos:start="1033:9" pos:end="1033:18">

        <return pos:start="1033:9" pos:end="1033:18">return <expr pos:start="1033:16" pos:end="1033:17"><operator pos:start="1033:16" pos:end="1033:16">-</operator><literal type="number" pos:start="1033:17" pos:end="1033:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="1037:5" pos:end="1037:13">return <expr pos:start="1037:12" pos:end="1037:12"><literal type="number" pos:start="1037:12" pos:end="1037:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
