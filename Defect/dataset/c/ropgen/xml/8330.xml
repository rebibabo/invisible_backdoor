<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8330.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">compute_antialias_integer</name><parameter_list pos:start="1:38" pos:end="3:44">(<parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:54">MPADecodeContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:40">GranuleDef</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:43">g</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:5">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">int32_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">ptr</name></decl>, <decl pos:start="7:19" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">csa</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:40">/* we antialias only "long" bands */</comment>

    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:9">g</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:21">block_type</name></name> <operator pos:start="15:23" pos:end="15:24">==</operator> <literal type="number" pos:start="15:26" pos:end="15:26">2</literal></expr>)</condition> <block pos:start="15:29" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:14">

        <if_stmt pos:start="17:9" pos:end="19:19"><if pos:start="17:9" pos:end="19:19">if <condition pos:start="17:12" pos:end="17:29">(<expr pos:start="17:13" pos:end="17:28"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:28"><name pos:start="17:14" pos:end="17:14">g</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:28">switch_point</name></name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:19"><block_content pos:start="19:13" pos:end="19:19">

            <return pos:start="19:13" pos:end="19:19">return;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="21:9" pos:end="21:45">/* XXX: check this for 8000Hz case */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">n</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:24">

        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:9">n</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:19">SBLIMIT</name> <operator pos:start="27:21" pos:end="27:21">-</operator> <literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:7">ptr</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:22"><name pos:start="33:11" pos:end="33:11">g</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:22">sb_hybrid</name></name> <operator pos:start="33:24" pos:end="33:24">+</operator> <literal type="number" pos:start="33:26" pos:end="33:27">18</literal></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="75:5">for<control pos:start="35:8" pos:end="35:24">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:13">n</name></expr>;</init><condition pos:start="35:15" pos:end="35:20"><expr pos:start="35:15" pos:end="35:19"><name pos:start="35:15" pos:end="35:15">i</name> <operator pos:start="35:17" pos:end="35:17">&gt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>;</condition><incr pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:21">i</name><operator pos:start="35:22" pos:end="35:23">--</operator></expr></incr>)</control> <block pos:start="35:26" pos:end="75:5">{<block_content pos:start="37:9" pos:end="73:18">

        <decl_stmt pos:start="37:9" pos:end="37:29"><decl pos:start="37:9" pos:end="37:16"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:16">tmp0</name></decl>, <decl pos:start="37:19" pos:end="37:22"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:19" pos:end="37:22">tmp1</name></decl>, <decl pos:start="37:25" pos:end="37:28"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:25" pos:end="37:28">tmp2</name></decl>;</decl_stmt>

        <expr_stmt pos:start="39:9" pos:end="52:0"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:11">csa</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <operator pos:start="39:15" pos:end="39:15">&amp;</operator><name pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:24">csa_table</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>]</index><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:define pos:start="41:1" pos:end="51:54">#<cpp:directive pos:start="41:2" pos:end="41:7">define</cpp:directive> <cpp:macro pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:14">INT_AA</name><parameter_list pos:start="41:15" pos:end="41:17">(<parameter pos:start="41:16" pos:end="41:16"><type pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">j</name></type></parameter>)</parameter_list></cpp:macro> \

            <cpp:value pos:start="43:13" pos:end="51:54">tmp0 = 4*(ptr[-1-j]);\

            tmp1 = 4*(ptr[   j]);\

            tmp2= MULH(tmp0 + tmp1, csa[0+4*j]);\

            ptr[-1-j] = tmp2 - MULH(tmp1, csa[2+4*j]);\

            ptr[   j] = tmp2 + MULH(tmp0, csa[3+4*j]);</cpp:value></cpp:define>



        <macro pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:14">INT_AA</name><argument_list pos:start="55:15" pos:end="55:17">(<argument pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></argument>)</argument_list></macro>

        <macro pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:14">INT_AA</name><argument_list pos:start="57:15" pos:end="57:17">(<argument pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">1</literal></argument>)</argument_list></macro>

        <macro pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:14">INT_AA</name><argument_list pos:start="59:15" pos:end="59:17">(<argument pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">2</literal></argument>)</argument_list></macro>

        <macro pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:14">INT_AA</name><argument_list pos:start="61:15" pos:end="61:17">(<argument pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">3</literal></argument>)</argument_list></macro>

        <macro pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:14">INT_AA</name><argument_list pos:start="63:15" pos:end="63:17">(<argument pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">4</literal></argument>)</argument_list></macro>

        <macro pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:14">INT_AA</name><argument_list pos:start="65:15" pos:end="65:17">(<argument pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">5</literal></argument>)</argument_list></macro>

        <macro pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:14">INT_AA</name><argument_list pos:start="67:15" pos:end="67:17">(<argument pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">6</literal></argument>)</argument_list></macro>

        <macro pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:14">INT_AA</name><argument_list pos:start="69:15" pos:end="69:17">(<argument pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">7</literal></argument>)</argument_list></macro>

            

        <expr_stmt pos:start="73:9" pos:end="73:18"><expr pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:11">ptr</name> <operator pos:start="73:13" pos:end="73:14">+=</operator> <literal type="number" pos:start="73:16" pos:end="73:17">18</literal></expr>;</expr_stmt>       

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
