<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12580.c" pos:tabs="8"><function pos:start="1:1" pos:end="387:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mpeg_mux_init</name><parameter_list pos:start="1:25" pos:end="1:46">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="387:1">{<block_content pos:start="5:5" pos:end="385:27">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegMuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">bitrate</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">i</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:26">mpa_id</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:34">mpv_id</name></decl>, <decl pos:start="7:37" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:42">mps_id</name></decl>, <decl pos:start="7:45" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:50">ac3_id</name></decl>, <decl pos:start="7:53" pos:end="7:58"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:58">dts_id</name></decl>, <decl pos:start="7:61" pos:end="7:67"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:61" pos:end="7:67">lpcm_id</name></decl>, <decl pos:start="7:70" pos:end="7:70"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:70" pos:end="7:70">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">StreamInfo</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:21">audio_bitrate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:21">video_bitrate</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:20">packet_number</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:79"><expr pos:start="21:5" pos:end="21:78"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:13">is_vcd</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator>    <operator pos:start="21:20" pos:end="21:20">(</operator><name pos:start="21:21" pos:end="21:41">CONFIG_MPEG1VCD_MUXER</name>  <operator pos:start="21:44" pos:end="21:45">&amp;&amp;</operator> <name pos:start="21:47" pos:end="21:58"><name pos:start="21:47" pos:end="21:49">ctx</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:58">oformat</name></name> <operator pos:start="21:60" pos:end="21:61">==</operator> <operator pos:start="21:63" pos:end="21:63">&amp;</operator><name pos:start="21:64" pos:end="21:77">mpeg1vcd_muxer</name><operator pos:start="21:78" pos:end="21:78">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:80"><expr pos:start="23:5" pos:end="23:79"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">is_svcd</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator>   <operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:42">CONFIG_MPEG2SVCD_MUXER</name> <operator pos:start="23:44" pos:end="23:45">&amp;&amp;</operator> <name pos:start="23:47" pos:end="23:58"><name pos:start="23:47" pos:end="23:49">ctx</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:58">oformat</name></name> <operator pos:start="23:60" pos:end="23:61">==</operator> <operator pos:start="23:63" pos:end="23:63">&amp;</operator><name pos:start="23:64" pos:end="23:78">mpeg2svcd_muxer</name><operator pos:start="23:79" pos:end="23:79">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="29:81"><expr pos:start="25:5" pos:end="29:80"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">is_mpeg2</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <operator pos:start="25:19" pos:end="25:19">(</operator><operator pos:start="25:20" pos:end="25:20">(</operator><name pos:start="25:21" pos:end="25:41">CONFIG_MPEG2VOB_MUXER</name>  <operator pos:start="25:44" pos:end="25:45">&amp;&amp;</operator> <name pos:start="25:47" pos:end="25:58"><name pos:start="25:47" pos:end="25:49">ctx</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:58">oformat</name></name> <operator pos:start="25:60" pos:end="25:61">==</operator> <operator pos:start="25:63" pos:end="25:63">&amp;</operator><name pos:start="25:64" pos:end="25:77">mpeg2vob_muxer</name><operator pos:start="25:78" pos:end="25:78">)</operator> <operator pos:start="25:80" pos:end="25:81">||</operator>

                   <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:41">CONFIG_MPEG2DVD_MUXER</name>  <operator pos:start="27:44" pos:end="27:45">&amp;&amp;</operator> <name pos:start="27:47" pos:end="27:58"><name pos:start="27:47" pos:end="27:49">ctx</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:58">oformat</name></name> <operator pos:start="27:60" pos:end="27:61">==</operator> <operator pos:start="27:63" pos:end="27:63">&amp;</operator><name pos:start="27:64" pos:end="27:77">mpeg2dvd_muxer</name><operator pos:start="27:78" pos:end="27:78">)</operator> <operator pos:start="27:80" pos:end="27:81">||</operator>

                   <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:42">CONFIG_MPEG2SVCD_MUXER</name> <operator pos:start="29:44" pos:end="29:45">&amp;&amp;</operator> <name pos:start="29:47" pos:end="29:58"><name pos:start="29:47" pos:end="29:49">ctx</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:58">oformat</name></name> <operator pos:start="29:60" pos:end="29:61">==</operator> <operator pos:start="29:63" pos:end="29:63">&amp;</operator><name pos:start="29:64" pos:end="29:78">mpeg2svcd_muxer</name><operator pos:start="29:79" pos:end="29:79">)</operator><operator pos:start="29:80" pos:end="29:80">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:79"><expr pos:start="31:5" pos:end="31:78"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">is_dvd</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator>    <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:41">CONFIG_MPEG2DVD_MUXER</name>  <operator pos:start="31:44" pos:end="31:45">&amp;&amp;</operator> <name pos:start="31:47" pos:end="31:58"><name pos:start="31:47" pos:end="31:49">ctx</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:58">oformat</name></name> <operator pos:start="31:60" pos:end="31:61">==</operator> <operator pos:start="31:63" pos:end="31:63">&amp;</operator><name pos:start="31:64" pos:end="31:77">mpeg2dvd_muxer</name><operator pos:start="31:78" pos:end="31:78">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:30"><if pos:start="35:5" pos:end="37:42">if<condition pos:start="35:7" pos:end="35:24">(<expr pos:start="35:8" pos:end="35:23"><name pos:start="35:8" pos:end="35:23"><name pos:start="35:8" pos:end="35:10">ctx</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:23">packet_size</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:42"><block_content pos:start="37:9" pos:end="37:42">

        <expr_stmt pos:start="37:9" pos:end="37:42"><expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:22">packet_size</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:41"><name pos:start="37:26" pos:end="37:28">ctx</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:41">packet_size</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:30">else<block type="pseudo" pos:start="41:9" pos:end="41:30"><block_content pos:start="41:9" pos:end="41:30">

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:22">packet_size</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:29">2048</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:32">vcd_padding_bytes_written</name></name> <operator pos:start="45:34" pos:end="45:34">=</operator> <literal type="number" pos:start="45:36" pos:end="45:36">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:26">vcd_padding_bitrate</name></name><operator pos:start="47:27" pos:end="47:27">=</operator><literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:23"><expr pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:18">audio_bound</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:18">video_bound</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:10">mpa_id</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:21">AUDIO_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:10">ac3_id</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:19">AC3_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:10">dts_id</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:19">DTS_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:10">mpv_id</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:21">VIDEO_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:20"><expr pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:10">mps_id</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:19">SUB_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:11">lpcm_id</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:21">LPCM_ID</name></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="191:5">for<control pos:start="67:8" pos:end="67:34">(<init pos:start="67:9" pos:end="67:12"><expr pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:9">i</name><operator pos:start="67:10" pos:end="67:10">=</operator><literal type="number" pos:start="67:11" pos:end="67:11">0</literal></expr>;</init><condition pos:start="67:13" pos:end="67:30"><expr pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:13">i</name><operator pos:start="67:14" pos:end="67:14">&lt;</operator><name pos:start="67:15" pos:end="67:29"><name pos:start="67:15" pos:end="67:17">ctx</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:29">nb_streams</name></name></expr>;</condition><incr pos:start="67:31" pos:end="67:33"><expr pos:start="67:31" pos:end="67:33"><name pos:start="67:31" pos:end="67:31">i</name><operator pos:start="67:32" pos:end="67:33">++</operator></expr></incr>)</control> <block pos:start="67:36" pos:end="191:5">{<block_content pos:start="69:9" pos:end="189:40">

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:10">st</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:28"><name pos:start="69:14" pos:end="69:16">ctx</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:25">streams</name><index pos:start="69:26" pos:end="69:28">[<expr pos:start="69:27" pos:end="69:27"><name pos:start="69:27" pos:end="69:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:14">stream</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:47"><name pos:start="71:18" pos:end="71:27">av_mallocz</name><argument_list pos:start="71:28" pos:end="71:47">(<argument pos:start="71:29" pos:end="71:46"><expr pos:start="71:29" pos:end="71:46"><sizeof pos:start="71:29" pos:end="71:46">sizeof<argument_list pos:start="71:35" pos:end="71:46">(<argument pos:start="71:36" pos:end="71:45"><expr pos:start="71:36" pos:end="71:45"><name pos:start="71:36" pos:end="71:45">StreamInfo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:22"><if pos:start="73:9" pos:end="75:22">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:19">stream</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:22"><block_content pos:start="75:13" pos:end="75:22">

            <goto pos:start="75:13" pos:end="75:22">goto <name pos:start="75:18" pos:end="75:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:31"><expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:21">priv_data</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:30">stream</name></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><call pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:23">av_set_pts_info</name><argument_list pos:start="81:24" pos:end="81:41">(<argument pos:start="81:25" pos:end="81:26"><expr pos:start="81:25" pos:end="81:26"><name pos:start="81:25" pos:end="81:26">st</name></expr></argument>, <argument pos:start="81:29" pos:end="81:30"><expr pos:start="81:29" pos:end="81:30"><literal type="number" pos:start="81:29" pos:end="81:30">64</literal></expr></argument>, <argument pos:start="81:33" pos:end="81:33"><expr pos:start="81:33" pos:end="81:33"><literal type="number" pos:start="81:33" pos:end="81:33">1</literal></expr></argument>, <argument pos:start="81:36" pos:end="81:40"><expr pos:start="81:36" pos:end="81:40"><literal type="number" pos:start="81:36" pos:end="81:40">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="85:9" pos:end="187:9">switch<condition pos:start="85:15" pos:end="85:37">(<expr pos:start="85:16" pos:end="85:36"><name pos:start="85:16" pos:end="85:36"><name pos:start="85:16" pos:end="85:17">st</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:24">codec</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:36">codec_type</name></name></expr>)</condition> <block pos:start="85:39" pos:end="187:9">{<block_content pos:start="87:9" pos:end="185:22">

        <case pos:start="87:9" pos:end="87:30">case <expr pos:start="87:14" pos:end="87:29"><name pos:start="87:14" pos:end="87:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <if_stmt pos:start="89:13" pos:end="129:13"><if pos:start="89:13" pos:end="93:13">if        <condition pos:start="89:23" pos:end="89:59">(<expr pos:start="89:24" pos:end="89:58"><name pos:start="89:24" pos:end="89:42"><name pos:start="89:24" pos:end="89:25">st</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:32">codec</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:42">codec_id</name></name> <operator pos:start="89:44" pos:end="89:45">==</operator> <name pos:start="89:47" pos:end="89:58">CODEC_ID_AC3</name></expr>)</condition> <block pos:start="89:61" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:38">

                <expr_stmt pos:start="91:17" pos:end="91:38"><expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:22">stream</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:26">id</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:35">ac3_id</name><operator pos:start="91:36" pos:end="91:37">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="93:15" pos:end="97:13">else if <condition pos:start="93:23" pos:end="93:59">(<expr pos:start="93:24" pos:end="93:58"><name pos:start="93:24" pos:end="93:42"><name pos:start="93:24" pos:end="93:25">st</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:32">codec</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:42">codec_id</name></name> <operator pos:start="93:44" pos:end="93:45">==</operator> <name pos:start="93:47" pos:end="93:58">CODEC_ID_DTS</name></expr>)</condition> <block pos:start="93:61" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:38">

                <expr_stmt pos:start="95:17" pos:end="95:38"><expr pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:22">stream</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:26">id</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:35">dts_id</name><operator pos:start="95:36" pos:end="95:37">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="97:15" pos:end="125:13">else if <condition pos:start="97:23" pos:end="97:65">(<expr pos:start="97:24" pos:end="97:64"><name pos:start="97:24" pos:end="97:42"><name pos:start="97:24" pos:end="97:25">st</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:32">codec</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:42">codec_id</name></name> <operator pos:start="97:44" pos:end="97:45">==</operator> <name pos:start="97:47" pos:end="97:64">CODEC_ID_PCM_S16BE</name></expr>)</condition> <block pos:start="97:67" pos:end="125:13">{<block_content pos:start="99:17" pos:end="123:61">

                <expr_stmt pos:start="99:17" pos:end="99:39"><expr pos:start="99:17" pos:end="99:38"><name pos:start="99:17" pos:end="99:26"><name pos:start="99:17" pos:end="99:22">stream</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:26">id</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:36">lpcm_id</name><operator pos:start="99:37" pos:end="99:38">++</operator></expr>;</expr_stmt>

                <for pos:start="101:17" pos:end="107:17">for<control pos:start="101:20" pos:end="101:38">(<init pos:start="101:21" pos:end="101:26"><expr pos:start="101:21" pos:end="101:25"><name pos:start="101:21" pos:end="101:21">j</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <literal type="number" pos:start="101:25" pos:end="101:25">0</literal></expr>;</init> <condition pos:start="101:28" pos:end="101:33"><expr pos:start="101:28" pos:end="101:32"><name pos:start="101:28" pos:end="101:28">j</name> <operator pos:start="101:30" pos:end="101:30">&lt;</operator> <literal type="number" pos:start="101:32" pos:end="101:32">4</literal></expr>;</condition> <incr pos:start="101:35" pos:end="101:37"><expr pos:start="101:35" pos:end="101:37"><name pos:start="101:35" pos:end="101:35">j</name><operator pos:start="101:36" pos:end="101:37">++</operator></expr></incr>)</control> <block pos:start="101:40" pos:end="107:17">{<block_content pos:start="103:21" pos:end="105:30">

                    <if_stmt pos:start="103:21" pos:end="105:30"><if pos:start="103:21" pos:end="105:30">if <condition pos:start="103:24" pos:end="103:67">(<expr pos:start="103:25" pos:end="103:66"><name pos:start="103:25" pos:end="103:40"><name pos:start="103:25" pos:end="103:37">lpcm_freq_tab</name><index pos:start="103:38" pos:end="103:40">[<expr pos:start="103:39" pos:end="103:39"><name pos:start="103:39" pos:end="103:39">j</name></expr>]</index></name> <operator pos:start="103:42" pos:end="103:43">==</operator> <name pos:start="103:45" pos:end="103:66"><name pos:start="103:45" pos:end="103:46">st</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:53">codec</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:66">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="105:25" pos:end="105:30"><block_content pos:start="105:25" pos:end="105:30">

                        <break pos:start="105:25" pos:end="105:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="109:17" pos:end="111:30"><if pos:start="109:17" pos:end="111:30">if <condition pos:start="109:20" pos:end="109:27">(<expr pos:start="109:21" pos:end="109:26"><name pos:start="109:21" pos:end="109:21">j</name> <operator pos:start="109:23" pos:end="109:24">==</operator> <literal type="number" pos:start="109:26" pos:end="109:26">4</literal></expr>)</condition><block type="pseudo" pos:start="111:21" pos:end="111:30"><block_content pos:start="111:21" pos:end="111:30">

                    <goto pos:start="111:21" pos:end="111:30">goto <name pos:start="111:26" pos:end="111:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="113:17" pos:end="115:30"><if pos:start="113:17" pos:end="115:30">if <condition pos:start="113:20" pos:end="113:44">(<expr pos:start="113:21" pos:end="113:43"><name pos:start="113:21" pos:end="113:39"><name pos:start="113:21" pos:end="113:22">st</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:29">codec</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:39">channels</name></name> <operator pos:start="113:41" pos:end="113:41">&gt;</operator> <literal type="number" pos:start="113:43" pos:end="113:43">8</literal></expr>)</condition><block type="pseudo" pos:start="115:21" pos:end="115:30"><block_content pos:start="115:21" pos:end="115:30">

                    <return pos:start="115:21" pos:end="115:30">return <expr pos:start="115:28" pos:end="115:29"><operator pos:start="115:28" pos:end="115:28">-</operator><literal type="number" pos:start="115:29" pos:end="115:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:46"><expr pos:start="117:17" pos:end="117:45"><name pos:start="117:17" pos:end="117:38"><name pos:start="117:17" pos:end="117:22">stream</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:35">lpcm_header</name><index pos:start="117:36" pos:end="117:38">[<expr pos:start="117:37" pos:end="117:37"><literal type="number" pos:start="117:37" pos:end="117:37">0</literal></expr>]</index></name> <operator pos:start="117:40" pos:end="117:40">=</operator> <literal type="number" pos:start="117:42" pos:end="117:45">0x0c</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:78"><expr pos:start="119:17" pos:end="119:77"><name pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:22">stream</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:35">lpcm_header</name><index pos:start="119:36" pos:end="119:38">[<expr pos:start="119:37" pos:end="119:37"><literal type="number" pos:start="119:37" pos:end="119:37">1</literal></expr>]</index></name> <operator pos:start="119:40" pos:end="119:40">=</operator> <operator pos:start="119:42" pos:end="119:42">(</operator><name pos:start="119:43" pos:end="119:61"><name pos:start="119:43" pos:end="119:44">st</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:51">codec</name><operator pos:start="119:52" pos:end="119:53">-&gt;</operator><name pos:start="119:54" pos:end="119:61">channels</name></name> <operator pos:start="119:63" pos:end="119:63">-</operator> <literal type="number" pos:start="119:65" pos:end="119:65">1</literal><operator pos:start="119:66" pos:end="119:66">)</operator> <operator pos:start="119:68" pos:end="119:68">|</operator> <operator pos:start="119:70" pos:end="119:70">(</operator><name pos:start="119:71" pos:end="119:71">j</name> <operator pos:start="119:73" pos:end="119:74">&lt;&lt;</operator> <literal type="number" pos:start="119:76" pos:end="119:76">4</literal><operator pos:start="119:77" pos:end="119:77">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:46"><expr pos:start="121:17" pos:end="121:45"><name pos:start="121:17" pos:end="121:38"><name pos:start="121:17" pos:end="121:22">stream</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:35">lpcm_header</name><index pos:start="121:36" pos:end="121:38">[<expr pos:start="121:37" pos:end="121:37"><literal type="number" pos:start="121:37" pos:end="121:37">2</literal></expr>]</index></name> <operator pos:start="121:40" pos:end="121:40">=</operator> <literal type="number" pos:start="121:42" pos:end="121:45">0x80</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:61"><expr pos:start="123:17" pos:end="123:60"><name pos:start="123:17" pos:end="123:34"><name pos:start="123:17" pos:end="123:22">stream</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:34">lpcm_align</name></name> <operator pos:start="123:36" pos:end="123:36">=</operator> <name pos:start="123:38" pos:end="123:56"><name pos:start="123:38" pos:end="123:39">st</name><operator pos:start="123:40" pos:end="123:41">-&gt;</operator><name pos:start="123:42" pos:end="123:46">codec</name><operator pos:start="123:47" pos:end="123:48">-&gt;</operator><name pos:start="123:49" pos:end="123:56">channels</name></name> <operator pos:start="123:58" pos:end="123:58">*</operator> <literal type="number" pos:start="123:60" pos:end="123:60">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="125:15" pos:end="129:13">else <block pos:start="125:20" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:38">

                <expr_stmt pos:start="127:17" pos:end="127:38"><expr pos:start="127:17" pos:end="127:37"><name pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:22">stream</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:26">id</name></name> <operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:35">mpa_id</name><operator pos:start="127:36" pos:end="127:37">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="133:13" pos:end="135:63">/* This value HAS to be used for VCD (see VCD standard, p. IV-7).

               Right now it is also used for everything else.*/</comment>

            <expr_stmt pos:start="137:13" pos:end="137:47"><expr pos:start="137:13" pos:end="137:46"><name pos:start="137:13" pos:end="137:35"><name pos:start="137:13" pos:end="137:18">stream</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:35">max_buffer_size</name></name> <operator pos:start="137:37" pos:end="137:37">=</operator> <literal type="number" pos:start="137:39" pos:end="137:39">4</literal> <operator pos:start="137:41" pos:end="137:41">*</operator> <literal type="number" pos:start="137:43" pos:end="137:46">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:29"><expr pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:26">audio_bound</name></name><operator pos:start="139:27" pos:end="139:28">++</operator></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:30">case <expr pos:start="143:14" pos:end="143:29"><name pos:start="143:14" pos:end="143:29">CODEC_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:34"><expr pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:18">stream</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:22">id</name></name> <operator pos:start="145:24" pos:end="145:24">=</operator> <name pos:start="145:26" pos:end="145:31">mpv_id</name><operator pos:start="145:32" pos:end="145:33">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="147:13" pos:end="170:0"><if pos:start="147:13" pos:end="149:79">if <condition pos:start="147:16" pos:end="147:42">(<expr pos:start="147:17" pos:end="147:41"><name pos:start="147:17" pos:end="147:41"><name pos:start="147:17" pos:end="147:18">st</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:25">codec</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:41">rc_buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:79"><block_content pos:start="149:17" pos:end="149:79">

                <expr_stmt pos:start="149:17" pos:end="149:79"><expr pos:start="149:17" pos:end="149:78"><name pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:22">stream</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:39">max_buffer_size</name></name> <operator pos:start="149:41" pos:end="149:41">=</operator> <literal type="number" pos:start="149:43" pos:end="149:43">6</literal><operator pos:start="149:44" pos:end="149:44">*</operator><literal type="number" pos:start="149:45" pos:end="149:50">1024</literal> <operator pos:start="149:50" pos:end="149:50">+</operator> <name pos:start="149:52" pos:end="149:76"><name pos:start="149:52" pos:end="149:53">st</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:60">codec</name><operator pos:start="149:61" pos:end="149:62">-&gt;</operator><name pos:start="149:63" pos:end="149:76">rc_buffer_size</name></name><operator pos:start="149:77" pos:end="149:77">/</operator><literal type="number" pos:start="149:78" pos:end="149:78">8</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="151:13" pos:end="170:0">else<block type="pseudo" pos:start="153:17" pos:end="170:0"><block_content pos:start="153:17" pos:end="170:0">

                <expr_stmt pos:start="153:17" pos:end="170:0"><expr pos:start="153:17" pos:end="153:50"><name pos:start="153:17" pos:end="153:39"><name pos:start="153:17" pos:end="153:22">stream</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:39">max_buffer_size</name></name> <operator pos:start="153:41" pos:end="153:41">=</operator> <literal type="number" pos:start="153:43" pos:end="153:45">230</literal><operator pos:start="153:46" pos:end="153:46">*</operator><literal type="number" pos:start="153:47" pos:end="153:50">1024</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="153:53" pos:end="153:97">//FIXME this is probably too small as default</comment>

<cpp:if pos:start="155:1" pos:end="155:5">#<cpp:directive pos:start="155:2" pos:end="155:3">if</cpp:directive> <expr pos:start="155:5" pos:end="155:5"><literal type="number" pos:start="155:5" pos:end="155:5">0</literal></expr></cpp:if>

                <comment type="block" pos:start="157:17" pos:end="157:46">/* see VCD standard, p. IV-7*/</comment>

                stream-&gt;max_buffer_size = 46 * 1024;

            else

                <comment type="block" pos:start="163:17" pos:end="165:67">/* This value HAS to be used for SVCD (see SVCD standard, p. 26 V.2.3.2).

                   Right now it is also used for everything else.*/</comment>

                stream-&gt;max_buffer_size = 230 * 1024;

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="171:13" pos:end="171:29"><expr pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:26">video_bound</name></name><operator pos:start="171:27" pos:end="171:28">++</operator></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:33">case <expr pos:start="175:14" pos:end="175:32"><name pos:start="175:14" pos:end="175:32">CODEC_TYPE_SUBTITLE</name></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:34"><expr pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:22"><name pos:start="177:13" pos:end="177:18">stream</name><operator pos:start="177:19" pos:end="177:20">-&gt;</operator><name pos:start="177:21" pos:end="177:22">id</name></name> <operator pos:start="177:24" pos:end="177:24">=</operator> <name pos:start="177:26" pos:end="177:31">mps_id</name><operator pos:start="177:32" pos:end="177:33">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:48"><expr pos:start="179:13" pos:end="179:47"><name pos:start="179:13" pos:end="179:35"><name pos:start="179:13" pos:end="179:18">stream</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:35">max_buffer_size</name></name> <operator pos:start="179:37" pos:end="179:37">=</operator> <literal type="number" pos:start="179:39" pos:end="179:40">16</literal> <operator pos:start="179:42" pos:end="179:42">*</operator> <literal type="number" pos:start="179:44" pos:end="179:47">1024</literal></expr>;</expr_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <default pos:start="183:9" pos:end="183:16">default:</default>

            <return pos:start="185:13" pos:end="185:22">return <expr pos:start="185:20" pos:end="185:21"><operator pos:start="185:20" pos:end="185:20">-</operator><literal type="number" pos:start="185:21" pos:end="185:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="189:9" pos:end="189:40"><expr pos:start="189:9" pos:end="189:39"><name pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:14">stream</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:20">fifo</name></name><operator pos:start="189:21" pos:end="189:21">=</operator> <call pos:start="189:23" pos:end="189:39"><name pos:start="189:23" pos:end="189:35">av_fifo_alloc</name><argument_list pos:start="189:36" pos:end="189:39">(<argument pos:start="189:37" pos:end="189:38"><expr pos:start="189:37" pos:end="189:38"><literal type="number" pos:start="189:37" pos:end="189:38">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="193:5" pos:end="193:16"><expr pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:11">bitrate</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <literal type="number" pos:start="193:15" pos:end="193:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:22"><expr pos:start="195:5" pos:end="195:21"><name pos:start="195:5" pos:end="195:17">audio_bitrate</name> <operator pos:start="195:19" pos:end="195:19">=</operator> <literal type="number" pos:start="195:21" pos:end="195:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:22"><expr pos:start="197:5" pos:end="197:21"><name pos:start="197:5" pos:end="197:17">video_bitrate</name> <operator pos:start="197:19" pos:end="197:19">=</operator> <literal type="number" pos:start="197:21" pos:end="197:21">0</literal></expr>;</expr_stmt>

    <for pos:start="199:5" pos:end="237:5">for<control pos:start="199:8" pos:end="199:34">(<init pos:start="199:9" pos:end="199:12"><expr pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:9">i</name><operator pos:start="199:10" pos:end="199:10">=</operator><literal type="number" pos:start="199:11" pos:end="199:11">0</literal></expr>;</init><condition pos:start="199:13" pos:end="199:30"><expr pos:start="199:13" pos:end="199:29"><name pos:start="199:13" pos:end="199:13">i</name><operator pos:start="199:14" pos:end="199:14">&lt;</operator><name pos:start="199:15" pos:end="199:29"><name pos:start="199:15" pos:end="199:17">ctx</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:29">nb_streams</name></name></expr>;</condition><incr pos:start="199:31" pos:end="199:33"><expr pos:start="199:31" pos:end="199:33"><name pos:start="199:31" pos:end="199:31">i</name><operator pos:start="199:32" pos:end="199:33">++</operator></expr></incr>)</control> <block pos:start="199:36" pos:end="237:5">{<block_content pos:start="201:9" pos:end="235:40">

        <decl_stmt pos:start="201:9" pos:end="201:23"><decl pos:start="201:9" pos:end="201:22"><type pos:start="201:9" pos:end="201:11"><name pos:start="201:9" pos:end="201:11">int</name></type> <name pos:start="201:13" pos:end="201:22">codec_rate</name></decl>;</decl_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:29"><expr pos:start="203:9" pos:end="203:28"><name pos:start="203:9" pos:end="203:10">st</name> <operator pos:start="203:12" pos:end="203:12">=</operator> <name pos:start="203:14" pos:end="203:28"><name pos:start="203:14" pos:end="203:16">ctx</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:25">streams</name><index pos:start="203:26" pos:end="203:28">[<expr pos:start="203:27" pos:end="203:27"><name pos:start="203:27" pos:end="203:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:45"><expr pos:start="205:9" pos:end="205:44"><name pos:start="205:9" pos:end="205:14">stream</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <operator pos:start="205:18" pos:end="205:18">(</operator><name pos:start="205:19" pos:end="205:28">StreamInfo</name><operator pos:start="205:29" pos:end="205:29">*</operator><operator pos:start="205:30" pos:end="205:30">)</operator> <name pos:start="205:32" pos:end="205:44"><name pos:start="205:32" pos:end="205:33">st</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:44">priv_data</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="209:9" pos:end="215:44"><if pos:start="209:9" pos:end="211:47">if<condition pos:start="209:11" pos:end="209:58">(<expr pos:start="209:12" pos:end="209:57"><name pos:start="209:12" pos:end="209:33"><name pos:start="209:12" pos:end="209:13">st</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">codec</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:33">rc_max_rate</name></name> <operator pos:start="209:35" pos:end="209:36">||</operator> <name pos:start="209:38" pos:end="209:47"><name pos:start="209:38" pos:end="209:43">stream</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:47">id</name></name><operator pos:start="209:48" pos:end="209:49">==</operator><name pos:start="209:50" pos:end="209:57">VIDEO_ID</name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:47"><block_content pos:start="211:13" pos:end="211:47">

            <expr_stmt pos:start="211:13" pos:end="211:47"><expr pos:start="211:13" pos:end="211:46"><name pos:start="211:13" pos:end="211:22">codec_rate</name><operator pos:start="211:23" pos:end="211:23">=</operator> <name pos:start="211:25" pos:end="211:46"><name pos:start="211:25" pos:end="211:26">st</name><operator pos:start="211:27" pos:end="211:28">-&gt;</operator><name pos:start="211:29" pos:end="211:33">codec</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:46">rc_max_rate</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="213:9" pos:end="215:44">else<block type="pseudo" pos:start="215:13" pos:end="215:44"><block_content pos:start="215:13" pos:end="215:44">

            <expr_stmt pos:start="215:13" pos:end="215:44"><expr pos:start="215:13" pos:end="215:43"><name pos:start="215:13" pos:end="215:22">codec_rate</name><operator pos:start="215:23" pos:end="215:23">=</operator> <name pos:start="215:25" pos:end="215:43"><name pos:start="215:25" pos:end="215:26">st</name><operator pos:start="215:27" pos:end="215:28">-&gt;</operator><name pos:start="215:29" pos:end="215:33">codec</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:43">bit_rate</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="219:9" pos:end="221:53"><if pos:start="219:9" pos:end="221:53">if<condition pos:start="219:11" pos:end="219:23">(<expr pos:start="219:12" pos:end="219:22"><operator pos:start="219:12" pos:end="219:12">!</operator><name pos:start="219:13" pos:end="219:22">codec_rate</name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:53"><block_content pos:start="221:13" pos:end="221:53">

            <expr_stmt pos:start="221:13" pos:end="221:53"><expr pos:start="221:13" pos:end="221:52"><name pos:start="221:13" pos:end="221:22">codec_rate</name><operator pos:start="221:23" pos:end="221:23">=</operator> <operator pos:start="221:25" pos:end="221:25">(</operator><literal type="number" pos:start="221:26" pos:end="221:26">1</literal><operator pos:start="221:27" pos:end="221:28">&lt;&lt;</operator><literal type="number" pos:start="221:29" pos:end="221:30">21</literal><operator pos:start="221:31" pos:end="221:31">)</operator><operator pos:start="221:32" pos:end="221:32">*</operator><literal type="number" pos:start="221:33" pos:end="221:33">8</literal><operator pos:start="221:34" pos:end="221:34">*</operator><literal type="number" pos:start="221:35" pos:end="221:36">50</literal><operator pos:start="221:37" pos:end="221:37">/</operator><name pos:start="221:38" pos:end="221:52"><name pos:start="221:38" pos:end="221:40">ctx</name><operator pos:start="221:41" pos:end="221:42">-&gt;</operator><name pos:start="221:43" pos:end="221:52">nb_streams</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:30"><expr pos:start="225:9" pos:end="225:29"><name pos:start="225:9" pos:end="225:15">bitrate</name> <operator pos:start="225:17" pos:end="225:18">+=</operator> <name pos:start="225:20" pos:end="225:29">codec_rate</name></expr>;</expr_stmt>



        <if_stmt pos:start="229:9" pos:end="235:40"><if pos:start="229:9" pos:end="231:40">if <condition pos:start="229:12" pos:end="229:33">(<expr pos:start="229:13" pos:end="229:32"><name pos:start="229:13" pos:end="229:22"><name pos:start="229:13" pos:end="229:18">stream</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:22">id</name></name><operator pos:start="229:23" pos:end="229:24">==</operator><name pos:start="229:25" pos:end="229:32">AUDIO_ID</name></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:40"><block_content pos:start="231:13" pos:end="231:40">

            <expr_stmt pos:start="231:13" pos:end="231:40"><expr pos:start="231:13" pos:end="231:39"><name pos:start="231:13" pos:end="231:25">audio_bitrate</name> <operator pos:start="231:27" pos:end="231:28">+=</operator> <name pos:start="231:30" pos:end="231:39">codec_rate</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="233:9" pos:end="235:40">else if <condition pos:start="233:17" pos:end="233:38">(<expr pos:start="233:18" pos:end="233:37"><name pos:start="233:18" pos:end="233:27"><name pos:start="233:18" pos:end="233:23">stream</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:27">id</name></name><operator pos:start="233:28" pos:end="233:29">==</operator><name pos:start="233:30" pos:end="233:37">VIDEO_ID</name></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:40"><block_content pos:start="235:13" pos:end="235:40">

            <expr_stmt pos:start="235:13" pos:end="235:40"><expr pos:start="235:13" pos:end="235:39"><name pos:start="235:13" pos:end="235:25">video_bitrate</name> <operator pos:start="235:27" pos:end="235:28">+=</operator> <name pos:start="235:30" pos:end="235:39">codec_rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="241:5" pos:end="257:5"><if pos:start="241:5" pos:end="245:5">if<condition pos:start="241:7" pos:end="241:21">(<expr pos:start="241:8" pos:end="241:20"><name pos:start="241:8" pos:end="241:20"><name pos:start="241:8" pos:end="241:10">ctx</name><operator pos:start="241:11" pos:end="241:12">-&gt;</operator><name pos:start="241:13" pos:end="241:20">mux_rate</name></name></expr>)</condition><block pos:start="241:22" pos:end="245:5">{<block_content pos:start="243:9" pos:end="243:63">

        <expr_stmt pos:start="243:9" pos:end="243:63"><expr pos:start="243:9" pos:end="243:62"><name pos:start="243:9" pos:end="243:19"><name pos:start="243:9" pos:end="243:9">s</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:19">mux_rate</name></name><operator pos:start="243:20" pos:end="243:20">=</operator> <operator pos:start="243:22" pos:end="243:22">(</operator><name pos:start="243:23" pos:end="243:35"><name pos:start="243:23" pos:end="243:25">ctx</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:35">mux_rate</name></name> <operator pos:start="243:37" pos:end="243:37">+</operator> <operator pos:start="243:39" pos:end="243:39">(</operator><literal type="number" pos:start="243:40" pos:end="243:40">8</literal> <operator pos:start="243:42" pos:end="243:42">*</operator> <literal type="number" pos:start="243:44" pos:end="243:45">50</literal><operator pos:start="243:46" pos:end="243:46">)</operator> <operator pos:start="243:48" pos:end="243:48">-</operator> <literal type="number" pos:start="243:50" pos:end="243:50">1</literal><operator pos:start="243:51" pos:end="243:51">)</operator> <operator pos:start="243:53" pos:end="243:53">/</operator> <operator pos:start="243:55" pos:end="243:55">(</operator><literal type="number" pos:start="243:56" pos:end="243:56">8</literal> <operator pos:start="243:58" pos:end="243:58">*</operator> <literal type="number" pos:start="243:60" pos:end="243:61">50</literal><operator pos:start="243:62" pos:end="243:62">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="245:7" pos:end="257:5">else <block pos:start="245:12" pos:end="257:5">{<block_content pos:start="251:9" pos:end="255:58">

        <comment type="block" pos:start="247:9" pos:end="249:46">/* we increase slightly the bitrate to take into account the

           headers. XXX: compute it exactly */</comment>

        <expr_stmt pos:start="251:9" pos:end="251:33"><expr pos:start="251:9" pos:end="251:32"><name pos:start="251:9" pos:end="251:15">bitrate</name> <operator pos:start="251:17" pos:end="251:18">+=</operator> <name pos:start="251:20" pos:end="251:26">bitrate</name><operator pos:start="251:27" pos:end="251:27">*</operator><literal type="number" pos:start="251:28" pos:end="251:28">5</literal><operator pos:start="251:29" pos:end="251:29">/</operator><literal type="number" pos:start="251:30" pos:end="251:32">100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:25"><expr pos:start="253:9" pos:end="253:24"><name pos:start="253:9" pos:end="253:15">bitrate</name> <operator pos:start="253:17" pos:end="253:18">+=</operator> <literal type="number" pos:start="253:20" pos:end="253:24">10000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:58"><expr pos:start="255:9" pos:end="255:57"><name pos:start="255:9" pos:end="255:19"><name pos:start="255:9" pos:end="255:9">s</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:19">mux_rate</name></name> <operator pos:start="255:21" pos:end="255:21">=</operator> <operator pos:start="255:23" pos:end="255:23">(</operator><name pos:start="255:24" pos:end="255:30">bitrate</name> <operator pos:start="255:32" pos:end="255:32">+</operator> <operator pos:start="255:34" pos:end="255:34">(</operator><literal type="number" pos:start="255:35" pos:end="255:35">8</literal> <operator pos:start="255:37" pos:end="255:37">*</operator> <literal type="number" pos:start="255:39" pos:end="255:40">50</literal><operator pos:start="255:41" pos:end="255:41">)</operator> <operator pos:start="255:43" pos:end="255:43">-</operator> <literal type="number" pos:start="255:45" pos:end="255:45">1</literal><operator pos:start="255:46" pos:end="255:46">)</operator> <operator pos:start="255:48" pos:end="255:48">/</operator> <operator pos:start="255:50" pos:end="255:50">(</operator><literal type="number" pos:start="255:51" pos:end="255:51">8</literal> <operator pos:start="255:53" pos:end="255:53">*</operator> <literal type="number" pos:start="255:55" pos:end="255:56">50</literal><operator pos:start="255:57" pos:end="255:57">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="261:5" pos:end="315:5"><if pos:start="261:5" pos:end="315:5">if <condition pos:start="261:8" pos:end="261:18">(<expr pos:start="261:9" pos:end="261:17"><name pos:start="261:9" pos:end="261:17"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:17">is_vcd</name></name></expr>)</condition> <block pos:start="261:20" pos:end="315:5">{<block_content pos:start="263:9" pos:end="313:75">

        <decl_stmt pos:start="263:9" pos:end="263:29"><decl pos:start="263:9" pos:end="263:28"><type pos:start="263:9" pos:end="263:14"><name pos:start="263:9" pos:end="263:14">double</name></type> <name pos:start="263:16" pos:end="263:28">overhead_rate</name></decl>;</decl_stmt>



        <comment type="block" pos:start="267:9" pos:end="279:54">/* The VCD standard mandates that the mux_rate field is 3528

           (see standard p. IV-6).

           The value is actually "wrong", i.e. if you calculate

           it using the normal formula and the 75 sectors per second transfer

           rate you get a different value because the real pack size is 2324,

           not 2352. But the standard explicitly specifies that the mux_rate

           field in the header must have this value.*/</comment>

<comment type="line" pos:start="281:1" pos:end="281:52">//        s-&gt;mux_rate=2352 * 75 / 50;    /* = 3528*/</comment>



        <comment type="block" pos:start="285:9" pos:end="295:40">/* The VCD standard states that the muxed stream must be

           exactly 75 packs / second (the data rate of a single speed cdrom).

           Since the video bitrate (probably 1150000 bits/sec) will be below

           the theoretical maximum we have to add some padding packets

           to make up for the lower data rate.

           (cf. VCD standard p. IV-6 )*/</comment>



        <comment type="block" pos:start="299:9" pos:end="301:75">/* Add the header overhead to the data rate.

           2279 data bytes per audio pack, 2294 data bytes per video pack*/</comment>

        <expr_stmt pos:start="303:9" pos:end="303:72"><expr pos:start="303:9" pos:end="303:71"><name pos:start="303:9" pos:end="303:21">overhead_rate</name>  <operator pos:start="303:24" pos:end="303:24">=</operator> <operator pos:start="303:26" pos:end="303:26">(</operator><operator pos:start="303:27" pos:end="303:27">(</operator><name pos:start="303:28" pos:end="303:40">audio_bitrate</name> <operator pos:start="303:42" pos:end="303:42">/</operator> <literal type="number" pos:start="303:44" pos:end="303:46">8.0</literal><operator pos:start="303:47" pos:end="303:47">)</operator> <operator pos:start="303:49" pos:end="303:49">/</operator> <literal type="number" pos:start="303:51" pos:end="303:54">2279</literal><operator pos:start="303:55" pos:end="303:55">)</operator> <operator pos:start="303:57" pos:end="303:57">*</operator> <operator pos:start="303:59" pos:end="303:59">(</operator><literal type="number" pos:start="303:60" pos:end="303:65">2324</literal> <operator pos:start="303:65" pos:end="303:65">-</operator> <literal type="number" pos:start="303:67" pos:end="303:70">2279</literal><operator pos:start="303:71" pos:end="303:71">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:72"><expr pos:start="305:9" pos:end="305:71"><name pos:start="305:9" pos:end="305:21">overhead_rate</name> <operator pos:start="305:23" pos:end="305:24">+=</operator> <operator pos:start="305:26" pos:end="305:26">(</operator><operator pos:start="305:27" pos:end="305:27">(</operator><name pos:start="305:28" pos:end="305:40">video_bitrate</name> <operator pos:start="305:42" pos:end="305:42">/</operator> <literal type="number" pos:start="305:44" pos:end="305:46">8.0</literal><operator pos:start="305:47" pos:end="305:47">)</operator> <operator pos:start="305:49" pos:end="305:49">/</operator> <literal type="number" pos:start="305:51" pos:end="305:54">2294</literal><operator pos:start="305:55" pos:end="305:55">)</operator> <operator pos:start="305:57" pos:end="305:57">*</operator> <operator pos:start="305:59" pos:end="305:59">(</operator><literal type="number" pos:start="305:60" pos:end="305:65">2324</literal> <operator pos:start="305:65" pos:end="305:65">-</operator> <literal type="number" pos:start="305:67" pos:end="305:70">2294</literal><operator pos:start="305:71" pos:end="305:71">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:27"><expr pos:start="307:9" pos:end="307:26"><name pos:start="307:9" pos:end="307:21">overhead_rate</name> <operator pos:start="307:23" pos:end="307:24">*=</operator> <literal type="number" pos:start="307:26" pos:end="307:26">8</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="311:9" pos:end="311:71">/* Add padding so that the full bitrate is 2324*75 bytes/sec */</comment>

        <expr_stmt pos:start="313:9" pos:end="313:75"><expr pos:start="313:9" pos:end="313:74"><name pos:start="313:9" pos:end="313:30"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:30">vcd_padding_bitrate</name></name> <operator pos:start="313:32" pos:end="313:32">=</operator> <literal type="number" pos:start="313:34" pos:end="313:37">2324</literal> <operator pos:start="313:39" pos:end="313:39">*</operator> <literal type="number" pos:start="313:41" pos:end="313:42">75</literal> <operator pos:start="313:44" pos:end="313:44">*</operator> <literal type="number" pos:start="313:46" pos:end="313:48">8</literal> <operator pos:start="313:48" pos:end="313:48">-</operator> <operator pos:start="313:50" pos:end="313:50">(</operator><name pos:start="313:51" pos:end="313:57">bitrate</name> <operator pos:start="313:59" pos:end="313:59">+</operator> <name pos:start="313:61" pos:end="313:73">overhead_rate</name><operator pos:start="313:74" pos:end="313:74">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="319:5" pos:end="329:63"><if pos:start="319:5" pos:end="323:32">if <condition pos:start="319:8" pos:end="319:33">(<expr pos:start="319:9" pos:end="319:32"><name pos:start="319:9" pos:end="319:17"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:17">is_vcd</name></name> <operator pos:start="319:19" pos:end="319:20">||</operator> <name pos:start="319:22" pos:end="319:32"><name pos:start="319:22" pos:end="319:22">s</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:32">is_mpeg2</name></name></expr>)</condition><block type="pseudo" pos:start="323:9" pos:end="323:32"><block_content pos:start="323:9" pos:end="323:32">

        <comment type="block" pos:start="321:9" pos:end="321:26">/* every packet */</comment>

        <expr_stmt pos:start="323:9" pos:end="323:32"><expr pos:start="323:9" pos:end="323:31"><name pos:start="323:9" pos:end="323:27"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:27">pack_header_freq</name></name> <operator pos:start="323:29" pos:end="323:29">=</operator> <literal type="number" pos:start="323:31" pos:end="323:31">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="325:5" pos:end="329:63">else<block type="pseudo" pos:start="329:9" pos:end="329:63"><block_content pos:start="329:9" pos:end="329:63">

        <comment type="block" pos:start="327:9" pos:end="327:29">/* every 2 seconds */</comment>

        <expr_stmt pos:start="329:9" pos:end="329:63"><expr pos:start="329:9" pos:end="329:62"><name pos:start="329:9" pos:end="329:27"><name pos:start="329:9" pos:end="329:9">s</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:27">pack_header_freq</name></name> <operator pos:start="329:29" pos:end="329:29">=</operator> <literal type="number" pos:start="329:31" pos:end="329:31">2</literal> <operator pos:start="329:33" pos:end="329:33">*</operator> <name pos:start="329:35" pos:end="329:41">bitrate</name> <operator pos:start="329:43" pos:end="329:43">/</operator> <name pos:start="329:45" pos:end="329:58"><name pos:start="329:45" pos:end="329:45">s</name><operator pos:start="329:46" pos:end="329:47">-&gt;</operator><name pos:start="329:48" pos:end="329:58">packet_size</name></name> <operator pos:start="329:60" pos:end="329:60">/</operator> <literal type="number" pos:start="329:62" pos:end="329:62">8</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="333:5" pos:end="333:65">/* the above seems to make pack_header_freq zero sometimes */</comment>

    <if_stmt pos:start="335:5" pos:end="337:31"><if pos:start="335:5" pos:end="337:31">if <condition pos:start="335:8" pos:end="335:33">(<expr pos:start="335:9" pos:end="335:32"><name pos:start="335:9" pos:end="335:27"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:27">pack_header_freq</name></name> <operator pos:start="335:29" pos:end="335:30">==</operator> <literal type="number" pos:start="335:32" pos:end="335:32">0</literal></expr>)</condition><block type="pseudo" pos:start="337:8" pos:end="337:31"><block_content pos:start="337:8" pos:end="337:31">

       <expr_stmt pos:start="337:8" pos:end="337:31"><expr pos:start="337:8" pos:end="337:30"><name pos:start="337:8" pos:end="337:26"><name pos:start="337:8" pos:end="337:8">s</name><operator pos:start="337:9" pos:end="337:10">-&gt;</operator><name pos:start="337:11" pos:end="337:26">pack_header_freq</name></name> <operator pos:start="337:28" pos:end="337:28">=</operator> <literal type="number" pos:start="337:30" pos:end="337:30">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="341:5" pos:end="359:56"><if pos:start="341:5" pos:end="345:57">if <condition pos:start="341:8" pos:end="341:20">(<expr pos:start="341:9" pos:end="341:19"><name pos:start="341:9" pos:end="341:19"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:19">is_mpeg2</name></name></expr>)</condition><block type="pseudo" pos:start="345:9" pos:end="345:57"><block_content pos:start="345:9" pos:end="345:57">

        <comment type="block" pos:start="343:9" pos:end="343:59">/* every 200 packets. Need to look at the spec.  */</comment>

        <expr_stmt pos:start="345:9" pos:end="345:57"><expr pos:start="345:9" pos:end="345:56"><name pos:start="345:9" pos:end="345:29"><name pos:start="345:9" pos:end="345:9">s</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:29">system_header_freq</name></name> <operator pos:start="345:31" pos:end="345:31">=</operator> <name pos:start="345:33" pos:end="345:51"><name pos:start="345:33" pos:end="345:33">s</name><operator pos:start="345:34" pos:end="345:35">-&gt;</operator><name pos:start="345:36" pos:end="345:51">pack_header_freq</name></name> <operator pos:start="345:53" pos:end="345:53">*</operator> <literal type="number" pos:start="345:55" pos:end="345:56">40</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="347:5" pos:end="355:43">else if <condition pos:start="347:13" pos:end="347:23">(<expr pos:start="347:14" pos:end="347:22"><name pos:start="347:14" pos:end="347:22"><name pos:start="347:14" pos:end="347:14">s</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:22">is_vcd</name></name></expr>)</condition><block type="pseudo" pos:start="355:9" pos:end="355:43"><block_content pos:start="355:9" pos:end="355:43">

        <comment type="block" pos:start="349:9" pos:end="353:45">/* the standard mandates that there are only two system headers

           in the whole file: one in the first packet of each stream.

           (see standard p. IV-7 and IV-8) */</comment>

        <expr_stmt pos:start="355:9" pos:end="355:43"><expr pos:start="355:9" pos:end="355:42"><name pos:start="355:9" pos:end="355:29"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:29">system_header_freq</name></name> <operator pos:start="355:31" pos:end="355:31">=</operator> <literal type="number" pos:start="355:33" pos:end="355:42">0x7fffffff</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="357:5" pos:end="359:56">else<block type="pseudo" pos:start="359:9" pos:end="359:56"><block_content pos:start="359:9" pos:end="359:56">

        <expr_stmt pos:start="359:9" pos:end="359:56"><expr pos:start="359:9" pos:end="359:55"><name pos:start="359:9" pos:end="359:29"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:29">system_header_freq</name></name> <operator pos:start="359:31" pos:end="359:31">=</operator> <name pos:start="359:33" pos:end="359:51"><name pos:start="359:33" pos:end="359:33">s</name><operator pos:start="359:34" pos:end="359:35">-&gt;</operator><name pos:start="359:36" pos:end="359:51">pack_header_freq</name></name> <operator pos:start="359:53" pos:end="359:53">*</operator> <literal type="number" pos:start="359:55" pos:end="359:55">5</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="363:5" pos:end="369:5">for<control pos:start="363:8" pos:end="363:34">(<init pos:start="363:9" pos:end="363:12"><expr pos:start="363:9" pos:end="363:11"><name pos:start="363:9" pos:end="363:9">i</name><operator pos:start="363:10" pos:end="363:10">=</operator><literal type="number" pos:start="363:11" pos:end="363:11">0</literal></expr>;</init><condition pos:start="363:13" pos:end="363:30"><expr pos:start="363:13" pos:end="363:29"><name pos:start="363:13" pos:end="363:13">i</name><operator pos:start="363:14" pos:end="363:14">&lt;</operator><name pos:start="363:15" pos:end="363:29"><name pos:start="363:15" pos:end="363:17">ctx</name><operator pos:start="363:18" pos:end="363:19">-&gt;</operator><name pos:start="363:20" pos:end="363:29">nb_streams</name></name></expr>;</condition><incr pos:start="363:31" pos:end="363:33"><expr pos:start="363:31" pos:end="363:33"><name pos:start="363:31" pos:end="363:31">i</name><operator pos:start="363:32" pos:end="363:33">++</operator></expr></incr>)</control> <block pos:start="363:36" pos:end="369:5">{<block_content pos:start="365:9" pos:end="367:34">

        <expr_stmt pos:start="365:9" pos:end="365:44"><expr pos:start="365:9" pos:end="365:43"><name pos:start="365:9" pos:end="365:14">stream</name> <operator pos:start="365:16" pos:end="365:16">=</operator> <name pos:start="365:18" pos:end="365:32"><name pos:start="365:18" pos:end="365:20">ctx</name><operator pos:start="365:21" pos:end="365:22">-&gt;</operator><name pos:start="365:23" pos:end="365:29">streams</name><index pos:start="365:30" pos:end="365:32">[<expr pos:start="365:31" pos:end="365:31"><name pos:start="365:31" pos:end="365:31">i</name></expr>]</index></name><operator pos:start="365:33" pos:end="365:34">-&gt;</operator><name pos:start="365:35" pos:end="365:43">priv_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:34"><expr pos:start="367:9" pos:end="367:33"><name pos:start="367:9" pos:end="367:29"><name pos:start="367:9" pos:end="367:14">stream</name><operator pos:start="367:15" pos:end="367:16">-&gt;</operator><name pos:start="367:17" pos:end="367:29">packet_number</name></name> <operator pos:start="367:31" pos:end="367:31">=</operator> <literal type="number" pos:start="367:33" pos:end="367:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="371:5" pos:end="371:56"><expr pos:start="371:5" pos:end="371:55"><name pos:start="371:5" pos:end="371:25"><name pos:start="371:5" pos:end="371:5">s</name><operator pos:start="371:6" pos:end="371:7">-&gt;</operator><name pos:start="371:8" pos:end="371:25">system_header_size</name></name> <operator pos:start="371:27" pos:end="371:27">=</operator> <call pos:start="371:29" pos:end="371:55"><name pos:start="371:29" pos:end="371:50">get_system_header_size</name><argument_list pos:start="371:51" pos:end="371:55">(<argument pos:start="371:52" pos:end="371:54"><expr pos:start="371:52" pos:end="371:54"><name pos:start="371:52" pos:end="371:54">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="373:5" pos:end="373:20"><expr pos:start="373:5" pos:end="373:19"><name pos:start="373:5" pos:end="373:15"><name pos:start="373:5" pos:end="373:5">s</name><operator pos:start="373:6" pos:end="373:7">-&gt;</operator><name pos:start="373:8" pos:end="373:15">last_scr</name></name> <operator pos:start="373:17" pos:end="373:17">=</operator> <literal type="number" pos:start="373:19" pos:end="373:19">0</literal></expr>;</expr_stmt>

    <return pos:start="375:5" pos:end="375:13">return <expr pos:start="375:12" pos:end="375:12"><literal type="number" pos:start="375:12" pos:end="375:12">0</literal></expr>;</return>

 <label pos:start="377:2" pos:end="377:6"><name pos:start="377:2" pos:end="377:5">fail</name>:</label>

    <for pos:start="379:5" pos:end="383:5">for<control pos:start="379:8" pos:end="379:34">(<init pos:start="379:9" pos:end="379:12"><expr pos:start="379:9" pos:end="379:11"><name pos:start="379:9" pos:end="379:9">i</name><operator pos:start="379:10" pos:end="379:10">=</operator><literal type="number" pos:start="379:11" pos:end="379:11">0</literal></expr>;</init><condition pos:start="379:13" pos:end="379:30"><expr pos:start="379:13" pos:end="379:29"><name pos:start="379:13" pos:end="379:13">i</name><operator pos:start="379:14" pos:end="379:14">&lt;</operator><name pos:start="379:15" pos:end="379:29"><name pos:start="379:15" pos:end="379:17">ctx</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:29">nb_streams</name></name></expr>;</condition><incr pos:start="379:31" pos:end="379:33"><expr pos:start="379:31" pos:end="379:33"><name pos:start="379:31" pos:end="379:31">i</name><operator pos:start="379:32" pos:end="379:33">++</operator></expr></incr>)</control> <block pos:start="379:36" pos:end="383:5">{<block_content pos:start="381:9" pos:end="381:44">

        <expr_stmt pos:start="381:9" pos:end="381:44"><expr pos:start="381:9" pos:end="381:43"><call pos:start="381:9" pos:end="381:43"><name pos:start="381:9" pos:end="381:15">av_free</name><argument_list pos:start="381:16" pos:end="381:43">(<argument pos:start="381:17" pos:end="381:42"><expr pos:start="381:17" pos:end="381:42"><name pos:start="381:17" pos:end="381:31"><name pos:start="381:17" pos:end="381:19">ctx</name><operator pos:start="381:20" pos:end="381:21">-&gt;</operator><name pos:start="381:22" pos:end="381:28">streams</name><index pos:start="381:29" pos:end="381:31">[<expr pos:start="381:30" pos:end="381:30"><name pos:start="381:30" pos:end="381:30">i</name></expr>]</index></name><operator pos:start="381:32" pos:end="381:33">-&gt;</operator><name pos:start="381:34" pos:end="381:42">priv_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="385:5" pos:end="385:27">return <expr pos:start="385:12" pos:end="385:26"><call pos:start="385:12" pos:end="385:26"><name pos:start="385:12" pos:end="385:18">AVERROR</name><argument_list pos:start="385:19" pos:end="385:26">(<argument pos:start="385:20" pos:end="385:25"><expr pos:start="385:20" pos:end="385:25"><name pos:start="385:20" pos:end="385:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
