<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8601.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:19">iovec</name></name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:30">adjust_sg</name><parameter_list pos:start="1:31" pos:end="1:70">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:37">struct</name> <name pos:start="1:39" pos:end="1:43">iovec</name></name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">sg</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:56"><decl pos:start="1:50" pos:end="1:56"><type pos:start="1:50" pos:end="1:56"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:56">len</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:69"><decl pos:start="1:59" pos:end="1:69"><type pos:start="1:59" pos:end="1:69"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">iovcnt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:14">

    <while pos:start="5:5" pos:end="25:5">while <condition pos:start="5:11" pos:end="5:26">(<expr pos:start="5:12" pos:end="5:25"><name pos:start="5:12" pos:end="5:14">len</name> <operator pos:start="5:16" pos:end="5:17">&amp;&amp;</operator> <operator pos:start="5:19" pos:end="5:19">*</operator><name pos:start="5:20" pos:end="5:25">iovcnt</name></expr>)</condition> <block pos:start="5:28" pos:end="25:5">{<block_content pos:start="7:9" pos:end="23:9">

        <if_stmt pos:start="7:9" pos:end="23:9"><if pos:start="7:9" pos:end="15:9">if <condition pos:start="7:12" pos:end="7:30">(<expr pos:start="7:13" pos:end="7:29"><name pos:start="7:13" pos:end="7:15">len</name> <operator pos:start="7:17" pos:end="7:17">&lt;</operator> <name pos:start="7:19" pos:end="7:29"><name pos:start="7:19" pos:end="7:20">sg</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">iov_len</name></name></expr>)</condition> <block pos:start="7:32" pos:end="15:9">{<block_content pos:start="9:13" pos:end="13:20">

            <expr_stmt pos:start="9:13" pos:end="9:31"><expr pos:start="9:13" pos:end="9:30"><name pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:14">sg</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:23">iov_len</name></name> <operator pos:start="9:25" pos:end="9:26">-=</operator> <name pos:start="9:28" pos:end="9:30">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="11:13" pos:end="11:32"><expr pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:14">sg</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:24">iov_base</name></name> <operator pos:start="11:26" pos:end="11:27">+=</operator> <name pos:start="11:29" pos:end="11:31">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="13:13" pos:end="13:20"><expr pos:start="13:13" pos:end="13:19"><name pos:start="13:13" pos:end="13:15">len</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="15:11" pos:end="23:9">else <block pos:start="15:16" pos:end="23:9">{<block_content pos:start="17:13" pos:end="21:25">

            <expr_stmt pos:start="17:13" pos:end="17:31"><expr pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:15">len</name> <operator pos:start="17:17" pos:end="17:18">-=</operator> <name pos:start="17:20" pos:end="17:30"><name pos:start="17:20" pos:end="17:21">sg</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:30">iov_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:17"><expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:14">sg</name><operator pos:start="19:15" pos:end="19:16">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:24"><operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:19">iovcnt</name> <operator pos:start="21:21" pos:end="21:22">-=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="29:5" pos:end="29:14">return <expr pos:start="29:12" pos:end="29:13"><name pos:start="29:12" pos:end="29:13">sg</name></expr>;</return>

</block_content>}</block></function>
</unit>
