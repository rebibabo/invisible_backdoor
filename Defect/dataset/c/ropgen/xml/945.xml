<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/945.c" pos:tabs="8"><function pos:start="1:1" pos:end="92:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">dump_qobject</name><parameter_list pos:start="1:25" pos:end="3:55">(<parameter pos:start="1:26" pos:end="1:54"><decl pos:start="1:26" pos:end="1:54"><type pos:start="1:26" pos:end="1:54"><name pos:start="1:26" pos:end="1:41">fprintf_function</name></type> <name pos:start="1:43" pos:end="1:54">func_fprintf</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">f</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:40"><decl pos:start="3:26" pos:end="3:40"><type pos:start="3:26" pos:end="3:40"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:40">comp_indent</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:49">QObject</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">obj</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="92:1">{<block_content pos:start="7:5" pos:end="90:5">

    <switch pos:start="7:5" pos:end="90:5">switch <condition pos:start="7:12" pos:end="7:30">(<expr pos:start="7:13" pos:end="7:29"><call pos:start="7:13" pos:end="7:29"><name pos:start="7:13" pos:end="7:24">qobject_type</name><argument_list pos:start="7:25" pos:end="7:29">(<argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><name pos:start="7:26" pos:end="7:28">obj</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:32" pos:end="90:5">{<block_content pos:start="9:9" pos:end="88:20">

        <case pos:start="9:9" pos:end="9:24">case <expr pos:start="9:14" pos:end="9:23"><name pos:start="9:14" pos:end="9:23">QTYPE_QINT</name></expr>:</case> <block pos:start="9:26" pos:end="17:9">{<block_content pos:start="11:13" pos:end="15:18">

            <decl_stmt pos:start="11:13" pos:end="11:47"><decl pos:start="11:13" pos:end="11:46"><type pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:16">QInt</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:23">value</name> <init pos:start="11:25" pos:end="11:46">= <expr pos:start="11:27" pos:end="11:46"><call pos:start="11:27" pos:end="11:46"><name pos:start="11:27" pos:end="11:41">qobject_to_qint</name><argument_list pos:start="11:42" pos:end="11:46">(<argument pos:start="11:43" pos:end="11:45"><expr pos:start="11:43" pos:end="11:45"><name pos:start="11:43" pos:end="11:45">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="13:13" pos:end="13:61"><expr pos:start="13:13" pos:end="13:60"><call pos:start="13:13" pos:end="13:60"><name pos:start="13:13" pos:end="13:24">func_fprintf</name><argument_list pos:start="13:25" pos:end="13:60">(<argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><name pos:start="13:26" pos:end="13:26">f</name></expr></argument>, <argument pos:start="13:29" pos:end="13:38"><expr pos:start="13:29" pos:end="13:38"><literal type="string" pos:start="13:29" pos:end="13:31">"%"</literal> <name pos:start="13:33" pos:end="13:38">PRId64</name></expr></argument>, <argument pos:start="13:41" pos:end="13:59"><expr pos:start="13:41" pos:end="13:59"><call pos:start="13:41" pos:end="13:59"><name pos:start="13:41" pos:end="13:52">qint_get_int</name><argument_list pos:start="13:53" pos:end="13:59">(<argument pos:start="13:54" pos:end="13:58"><expr pos:start="13:54" pos:end="13:58"><name pos:start="13:54" pos:end="13:58">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="15:13" pos:end="15:18">break;</break>

        </block_content>}</block>

        <case pos:start="19:9" pos:end="19:27">case <expr pos:start="19:14" pos:end="19:26"><name pos:start="19:14" pos:end="19:26">QTYPE_QSTRING</name></expr>:</case> <block pos:start="19:29" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:18">

            <decl_stmt pos:start="21:13" pos:end="21:53"><decl pos:start="21:13" pos:end="21:52"><type pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:19">QString</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:26">value</name> <init pos:start="21:28" pos:end="21:52">= <expr pos:start="21:30" pos:end="21:52"><call pos:start="21:30" pos:end="21:52"><name pos:start="21:30" pos:end="21:47">qobject_to_qstring</name><argument_list pos:start="21:48" pos:end="21:52">(<argument pos:start="21:49" pos:end="21:51"><expr pos:start="21:49" pos:end="21:51"><name pos:start="21:49" pos:end="21:51">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:58"><expr pos:start="23:13" pos:end="23:57"><call pos:start="23:13" pos:end="23:57"><name pos:start="23:13" pos:end="23:24">func_fprintf</name><argument_list pos:start="23:25" pos:end="23:57">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">f</name></expr></argument>, <argument pos:start="23:29" pos:end="23:32"><expr pos:start="23:29" pos:end="23:32"><literal type="string" pos:start="23:29" pos:end="23:32">"%s"</literal></expr></argument>, <argument pos:start="23:35" pos:end="23:56"><expr pos:start="23:35" pos:end="23:56"><call pos:start="23:35" pos:end="23:56"><name pos:start="23:35" pos:end="23:49">qstring_get_str</name><argument_list pos:start="23:50" pos:end="23:56">(<argument pos:start="23:51" pos:end="23:55"><expr pos:start="23:51" pos:end="23:55"><name pos:start="23:51" pos:end="23:55">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block>

        <case pos:start="29:9" pos:end="29:25">case <expr pos:start="29:14" pos:end="29:24"><name pos:start="29:14" pos:end="29:24">QTYPE_QDICT</name></expr>:</case> <block pos:start="29:27" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:18">

            <decl_stmt pos:start="31:13" pos:end="31:49"><decl pos:start="31:13" pos:end="31:48"><type pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:17">QDict</name> <modifier pos:start="31:19" pos:end="31:19">*</modifier></type><name pos:start="31:20" pos:end="31:24">value</name> <init pos:start="31:26" pos:end="31:48">= <expr pos:start="31:28" pos:end="31:48"><call pos:start="31:28" pos:end="31:48"><name pos:start="31:28" pos:end="31:43">qobject_to_qdict</name><argument_list pos:start="31:44" pos:end="31:48">(<argument pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:47">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:60"><expr pos:start="33:13" pos:end="33:59"><call pos:start="33:13" pos:end="33:59"><name pos:start="33:13" pos:end="33:22">dump_qdict</name><argument_list pos:start="33:23" pos:end="33:59">(<argument pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:35">func_fprintf</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">f</name></expr></argument>, <argument pos:start="33:41" pos:end="33:51"><expr pos:start="33:41" pos:end="33:51"><name pos:start="33:41" pos:end="33:51">comp_indent</name></expr></argument>, <argument pos:start="33:54" pos:end="33:58"><expr pos:start="33:54" pos:end="33:58"><name pos:start="33:54" pos:end="33:58">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block>

        <case pos:start="39:9" pos:end="39:25">case <expr pos:start="39:14" pos:end="39:24"><name pos:start="39:14" pos:end="39:24">QTYPE_QLIST</name></expr>:</case> <block pos:start="39:27" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:18">

            <decl_stmt pos:start="41:13" pos:end="41:49"><decl pos:start="41:13" pos:end="41:48"><type pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:17">QList</name> <modifier pos:start="41:19" pos:end="41:19">*</modifier></type><name pos:start="41:20" pos:end="41:24">value</name> <init pos:start="41:26" pos:end="41:48">= <expr pos:start="41:28" pos:end="41:48"><call pos:start="41:28" pos:end="41:48"><name pos:start="41:28" pos:end="41:43">qobject_to_qlist</name><argument_list pos:start="41:44" pos:end="41:48">(<argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:60"><expr pos:start="43:13" pos:end="43:59"><call pos:start="43:13" pos:end="43:59"><name pos:start="43:13" pos:end="43:22">dump_qlist</name><argument_list pos:start="43:23" pos:end="43:59">(<argument pos:start="43:24" pos:end="43:35"><expr pos:start="43:24" pos:end="43:35"><name pos:start="43:24" pos:end="43:35">func_fprintf</name></expr></argument>, <argument pos:start="43:38" pos:end="43:38"><expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">f</name></expr></argument>, <argument pos:start="43:41" pos:end="43:51"><expr pos:start="43:41" pos:end="43:51"><name pos:start="43:41" pos:end="43:51">comp_indent</name></expr></argument>, <argument pos:start="43:54" pos:end="43:58"><expr pos:start="43:54" pos:end="43:58"><name pos:start="43:54" pos:end="43:58">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block>

        <case pos:start="49:9" pos:end="49:26">case <expr pos:start="49:14" pos:end="49:25"><name pos:start="49:14" pos:end="49:25">QTYPE_QFLOAT</name></expr>:</case> <block pos:start="49:28" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:18">

            <decl_stmt pos:start="51:13" pos:end="51:51"><decl pos:start="51:13" pos:end="51:50"><type pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:18">QFloat</name> <modifier pos:start="51:20" pos:end="51:20">*</modifier></type><name pos:start="51:21" pos:end="51:25">value</name> <init pos:start="51:27" pos:end="51:50">= <expr pos:start="51:29" pos:end="51:50"><call pos:start="51:29" pos:end="51:50"><name pos:start="51:29" pos:end="51:45">qobject_to_qfloat</name><argument_list pos:start="51:46" pos:end="51:50">(<argument pos:start="51:47" pos:end="51:49"><expr pos:start="51:47" pos:end="51:49"><name pos:start="51:47" pos:end="51:49">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:60"><expr pos:start="53:13" pos:end="53:59"><call pos:start="53:13" pos:end="53:59"><name pos:start="53:13" pos:end="53:24">func_fprintf</name><argument_list pos:start="53:25" pos:end="53:59">(<argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><name pos:start="53:26" pos:end="53:26">f</name></expr></argument>, <argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><literal type="string" pos:start="53:29" pos:end="53:32">"%g"</literal></expr></argument>, <argument pos:start="53:35" pos:end="53:58"><expr pos:start="53:35" pos:end="53:58"><call pos:start="53:35" pos:end="53:58"><name pos:start="53:35" pos:end="53:51">qfloat_get_double</name><argument_list pos:start="53:52" pos:end="53:58">(<argument pos:start="53:53" pos:end="53:57"><expr pos:start="53:53" pos:end="53:57"><name pos:start="53:53" pos:end="53:57">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block>

        <case pos:start="59:9" pos:end="59:25">case <expr pos:start="59:14" pos:end="59:24"><name pos:start="59:14" pos:end="59:24">QTYPE_QBOOL</name></expr>:</case> <block pos:start="59:27" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:18">

            <decl_stmt pos:start="61:13" pos:end="61:49"><decl pos:start="61:13" pos:end="61:48"><type pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:17">QBool</name> <modifier pos:start="61:19" pos:end="61:19">*</modifier></type><name pos:start="61:20" pos:end="61:24">value</name> <init pos:start="61:26" pos:end="61:48">= <expr pos:start="61:28" pos:end="61:48"><call pos:start="61:28" pos:end="61:48"><name pos:start="61:28" pos:end="61:43">qobject_to_qbool</name><argument_list pos:start="61:44" pos:end="61:48">(<argument pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><name pos:start="61:45" pos:end="61:47">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:75"><expr pos:start="63:13" pos:end="63:74"><call pos:start="63:13" pos:end="63:74"><name pos:start="63:13" pos:end="63:24">func_fprintf</name><argument_list pos:start="63:25" pos:end="63:74">(<argument pos:start="63:26" pos:end="63:26"><expr pos:start="63:26" pos:end="63:26"><name pos:start="63:26" pos:end="63:26">f</name></expr></argument>, <argument pos:start="63:29" pos:end="63:32"><expr pos:start="63:29" pos:end="63:32"><literal type="string" pos:start="63:29" pos:end="63:32">"%s"</literal></expr></argument>, <argument pos:start="63:35" pos:end="63:73"><expr pos:start="63:35" pos:end="63:73"><ternary pos:start="63:35" pos:end="63:73"><condition pos:start="63:35" pos:end="63:56"><expr pos:start="63:35" pos:end="63:54"><call pos:start="63:35" pos:end="63:54"><name pos:start="63:35" pos:end="63:47">qbool_get_int</name><argument_list pos:start="63:48" pos:end="63:54">(<argument pos:start="63:49" pos:end="63:53"><expr pos:start="63:49" pos:end="63:53"><name pos:start="63:49" pos:end="63:53">value</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="63:58" pos:end="63:63"> <expr pos:start="63:58" pos:end="63:63"><literal type="string" pos:start="63:58" pos:end="63:63">"true"</literal></expr> </then><else pos:start="63:65" pos:end="63:73">: <expr pos:start="63:67" pos:end="63:73"><literal type="string" pos:start="63:67" pos:end="63:73">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        </block_content>}</block>

        <case pos:start="69:9" pos:end="69:26">case <expr pos:start="69:14" pos:end="69:25"><name pos:start="69:14" pos:end="69:25">QTYPE_QERROR</name></expr>:</case> <block pos:start="69:28" pos:end="78:9">{<block_content pos:start="71:13" pos:end="76:18">

            <decl_stmt pos:start="71:13" pos:end="71:57"><decl pos:start="71:13" pos:end="71:56"><type pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:19">QString</name> <modifier pos:start="71:21" pos:end="71:21">*</modifier></type><name pos:start="71:22" pos:end="71:26">value</name> <init pos:start="71:28" pos:end="71:56">= <expr pos:start="71:30" pos:end="71:56"><call pos:start="71:30" pos:end="71:56"><name pos:start="71:30" pos:end="71:41">qerror_human</name><argument_list pos:start="71:42" pos:end="71:56">(<argument pos:start="71:43" pos:end="71:55"><expr pos:start="71:43" pos:end="71:55"><operator pos:start="71:43" pos:end="71:43">(</operator><name pos:start="71:44" pos:end="71:49">QError</name> <operator pos:start="71:51" pos:end="71:51">*</operator><operator pos:start="71:52" pos:end="71:52">)</operator><name pos:start="71:53" pos:end="71:55">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:58"><expr pos:start="73:13" pos:end="73:57"><call pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:24">func_fprintf</name><argument_list pos:start="73:25" pos:end="73:57">(<argument pos:start="73:26" pos:end="73:26"><expr pos:start="73:26" pos:end="73:26"><name pos:start="73:26" pos:end="73:26">f</name></expr></argument>, <argument pos:start="73:29" pos:end="73:32"><expr pos:start="73:29" pos:end="73:32"><literal type="string" pos:start="73:29" pos:end="73:32">"%s"</literal></expr></argument>, <argument pos:start="73:35" pos:end="73:56"><expr pos:start="73:35" pos:end="73:56"><call pos:start="73:35" pos:end="73:56"><name pos:start="73:35" pos:end="73:49">qstring_get_str</name><argument_list pos:start="73:50" pos:end="73:56">(<argument pos:start="73:51" pos:end="73:55"><expr pos:start="73:51" pos:end="73:55"><name pos:start="73:51" pos:end="73:55">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <break pos:start="76:13" pos:end="76:18">break;</break>

        </block_content>}</block>

        <case pos:start="80:9" pos:end="80:24">case <expr pos:start="80:14" pos:end="80:23"><name pos:start="80:14" pos:end="80:23">QTYPE_NONE</name></expr>:</case>

            <break pos:start="82:13" pos:end="82:18">break;</break>

        <case pos:start="84:9" pos:end="84:23">case <expr pos:start="84:14" pos:end="84:22"><name pos:start="84:14" pos:end="84:22">QTYPE_MAX</name></expr>:</case>

        <default pos:start="86:9" pos:end="86:16">default:</default>

            <expr_stmt pos:start="88:13" pos:end="88:20"><expr pos:start="88:13" pos:end="88:19"><call pos:start="88:13" pos:end="88:19"><name pos:start="88:13" pos:end="88:17">abort</name><argument_list pos:start="88:18" pos:end="88:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function></unit>
