<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24094.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">uart_parameters_setup</name><parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:43">UartState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:65">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:23">QEMUSerialSetParams</name></type> <name pos:start="5:25" pos:end="5:27">ssp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:26">baud_rate</name></decl>, <decl pos:start="7:29" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:29" pos:end="7:39">packet_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:48"><expr pos:start="11:5" pos:end="13:47"><name pos:start="11:5" pos:end="11:13">baud_rate</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <ternary pos:start="11:17" pos:end="13:47"><condition pos:start="11:17" pos:end="11:45"><expr pos:start="11:17" pos:end="11:43"><operator pos:start="11:17" pos:end="11:17">(</operator><name pos:start="11:18" pos:end="11:27"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:21">r</name><index pos:start="11:22" pos:end="11:27">[<expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">R_MR</name></expr>]</index></name> <operator pos:start="11:29" pos:end="11:29">&amp;</operator> <name pos:start="11:31" pos:end="11:42">UART_MR_CLKS</name><operator pos:start="11:43" pos:end="11:43">)</operator></expr> ?</condition><then pos:start="13:13" pos:end="13:30">

            <expr pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:26">UART_INPUT_CLK</name> <operator pos:start="13:28" pos:end="13:28">/</operator> <literal type="number" pos:start="13:30" pos:end="13:30">8</literal></expr> </then><else pos:start="13:32" pos:end="13:47">: <expr pos:start="13:34" pos:end="13:47"><name pos:start="13:34" pos:end="13:47">UART_INPUT_CLK</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:64"><expr pos:start="17:5" pos:end="17:63"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">ssp</name><operator pos:start="17:8" pos:end="17:8">.</operator><name pos:start="17:9" pos:end="17:13">speed</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:25">baud_rate</name> <operator pos:start="17:27" pos:end="17:27">/</operator> <operator pos:start="17:29" pos:end="17:29">(</operator><name pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:33">r</name><index pos:start="17:34" pos:end="17:41">[<expr pos:start="17:35" pos:end="17:40"><name pos:start="17:35" pos:end="17:40">R_BRGR</name></expr>]</index></name> <operator pos:start="17:43" pos:end="17:43">*</operator> <operator pos:start="17:45" pos:end="17:45">(</operator><name pos:start="17:46" pos:end="17:57"><name pos:start="17:46" pos:end="17:46">s</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:49">r</name><index pos:start="17:50" pos:end="17:57">[<expr pos:start="17:51" pos:end="17:56"><name pos:start="17:51" pos:end="17:56">R_BDIV</name></expr>]</index></name> <operator pos:start="17:59" pos:end="17:59">+</operator> <literal type="number" pos:start="17:61" pos:end="17:61">1</literal><operator pos:start="17:62" pos:end="17:62">)</operator><operator pos:start="17:63" pos:end="17:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:15">packet_size</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">1</literal></expr>;</expr_stmt>



    <switch pos:start="23:5" pos:end="47:5">switch <condition pos:start="23:12" pos:end="23:37">(<expr pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:16">r</name><index pos:start="23:17" pos:end="23:22">[<expr pos:start="23:18" pos:end="23:21"><name pos:start="23:18" pos:end="23:21">R_MR</name></expr>]</index></name> <operator pos:start="23:24" pos:end="23:24">&amp;</operator> <name pos:start="23:26" pos:end="23:36">UART_MR_PAR</name></expr>)</condition> <block pos:start="23:39" pos:end="47:5">{<block_content pos:start="25:5" pos:end="45:14">

    <case pos:start="25:5" pos:end="25:26">case <expr pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:25">UART_PARITY_EVEN</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:11">ssp</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:18">parity</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="char" pos:start="27:22" pos:end="27:24">'E'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:19">packet_size</name><operator pos:start="29:20" pos:end="29:21">++</operator></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:25">case <expr pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:24">UART_PARITY_ODD</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:11">ssp</name><operator pos:start="35:12" pos:end="35:12">.</operator><name pos:start="35:13" pos:end="35:18">parity</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="char" pos:start="35:22" pos:end="35:24">'O'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:19">packet_size</name><operator pos:start="37:20" pos:end="37:21">++</operator></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:11">ssp</name><operator pos:start="43:12" pos:end="43:12">.</operator><name pos:start="43:13" pos:end="43:18">parity</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="char" pos:start="43:22" pos:end="43:24">'N'</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></switch>



    <switch pos:start="51:5" pos:end="71:5">switch <condition pos:start="51:12" pos:end="51:38">(<expr pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:16">r</name><index pos:start="51:17" pos:end="51:22">[<expr pos:start="51:18" pos:end="51:21"><name pos:start="51:18" pos:end="51:21">R_MR</name></expr>]</index></name> <operator pos:start="51:24" pos:end="51:24">&amp;</operator> <name pos:start="51:26" pos:end="51:37">UART_MR_CHRL</name></expr>)</condition> <block pos:start="51:40" pos:end="71:5">{<block_content pos:start="53:5" pos:end="69:14">

    <case pos:start="53:5" pos:end="53:26">case <expr pos:start="53:10" pos:end="53:25"><name pos:start="53:10" pos:end="53:25">UART_DATA_BITS_6</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:11">ssp</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:21">data_bits</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">6</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:26">case <expr pos:start="59:10" pos:end="59:25"><name pos:start="59:10" pos:end="59:25">UART_DATA_BITS_7</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:11">ssp</name><operator pos:start="61:12" pos:end="61:12">.</operator><name pos:start="61:13" pos:end="61:21">data_bits</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">7</literal></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:11">ssp</name><operator pos:start="67:12" pos:end="67:12">.</operator><name pos:start="67:13" pos:end="67:21">data_bits</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <literal type="number" pos:start="67:25" pos:end="67:25">8</literal></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    </block_content>}</block></switch>



    <switch pos:start="75:5" pos:end="89:5">switch <condition pos:start="75:12" pos:end="75:40">(<expr pos:start="75:13" pos:end="75:39"><name pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:16">r</name><index pos:start="75:17" pos:end="75:22">[<expr pos:start="75:18" pos:end="75:21"><name pos:start="75:18" pos:end="75:21">R_MR</name></expr>]</index></name> <operator pos:start="75:24" pos:end="75:24">&amp;</operator> <name pos:start="75:26" pos:end="75:39">UART_MR_NBSTOP</name></expr>)</condition> <block pos:start="75:42" pos:end="89:5">{<block_content pos:start="77:5" pos:end="87:14">

    <case pos:start="77:5" pos:end="77:26">case <expr pos:start="77:10" pos:end="77:25"><name pos:start="77:10" pos:end="77:25">UART_STOP_BITS_1</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:26"><expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:11">ssp</name><operator pos:start="79:12" pos:end="79:12">.</operator><name pos:start="79:13" pos:end="79:21">stop_bits</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <default pos:start="83:5" pos:end="83:12">default:</default>

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:11">ssp</name><operator pos:start="85:12" pos:end="85:12">.</operator><name pos:start="85:13" pos:end="85:21">stop_bits</name></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <literal type="number" pos:start="85:25" pos:end="85:25">2</literal></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="93:5" pos:end="93:49"><expr pos:start="93:5" pos:end="93:48"><name pos:start="93:5" pos:end="93:15">packet_size</name> <operator pos:start="93:17" pos:end="93:18">+=</operator> <name pos:start="93:20" pos:end="93:32"><name pos:start="93:20" pos:end="93:22">ssp</name><operator pos:start="93:23" pos:end="93:23">.</operator><name pos:start="93:24" pos:end="93:32">data_bits</name></name> <operator pos:start="93:34" pos:end="93:34">+</operator> <name pos:start="93:36" pos:end="93:48"><name pos:start="93:36" pos:end="93:38">ssp</name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:48">stop_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:70"><expr pos:start="95:5" pos:end="95:69"><name pos:start="95:5" pos:end="95:19"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:19">char_tx_time</name></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <operator pos:start="95:23" pos:end="95:23">(</operator><call pos:start="95:24" pos:end="95:42"><name pos:start="95:24" pos:end="95:40">get_ticks_per_sec</name><argument_list pos:start="95:41" pos:end="95:42">()</argument_list></call> <operator pos:start="95:44" pos:end="95:44">/</operator> <name pos:start="95:46" pos:end="95:54"><name pos:start="95:46" pos:end="95:48">ssp</name><operator pos:start="95:49" pos:end="95:49">.</operator><name pos:start="95:50" pos:end="95:54">speed</name></name><operator pos:start="95:55" pos:end="95:55">)</operator> <operator pos:start="95:57" pos:end="95:57">*</operator> <name pos:start="95:59" pos:end="95:69">packet_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:65"><expr pos:start="97:5" pos:end="97:64"><call pos:start="97:5" pos:end="97:64"><name pos:start="97:5" pos:end="97:21">qemu_chr_fe_ioctl</name><argument_list pos:start="97:22" pos:end="97:64">(<argument pos:start="97:23" pos:end="97:28"><expr pos:start="97:23" pos:end="97:28"><name pos:start="97:23" pos:end="97:28"><name pos:start="97:23" pos:end="97:23">s</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:28">chr</name></name></expr></argument>, <argument pos:start="97:31" pos:end="97:57"><expr pos:start="97:31" pos:end="97:57"><name pos:start="97:31" pos:end="97:57">CHR_IOCTL_SERIAL_SET_PARAMS</name></expr></argument>, <argument pos:start="97:60" pos:end="97:63"><expr pos:start="97:60" pos:end="97:63"><operator pos:start="97:60" pos:end="97:60">&amp;</operator><name pos:start="97:61" pos:end="97:63">ssp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
