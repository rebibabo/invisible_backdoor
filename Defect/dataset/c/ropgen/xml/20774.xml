<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20774.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">build_filter</name><parameter_list pos:start="1:24" pos:end="3:60">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">ResampleContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:48">void</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">filter</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:64">double</name></type> <name pos:start="1:66" pos:end="1:71">factor</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:86">tap_count</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:97"><decl pos:start="1:89" pos:end="1:97"><type pos:start="1:89" pos:end="1:97"><name pos:start="1:89" pos:end="1:91">int</name></type> <name pos:start="1:93" pos:end="1:97">alloc</name></decl></parameter>, <parameter pos:start="1:100" pos:end="1:114"><decl pos:start="1:100" pos:end="1:114"><type pos:start="1:100" pos:end="1:114"><name pos:start="1:100" pos:end="1:102">int</name></type> <name pos:start="1:104" pos:end="1:114">phase_count</name></decl></parameter>, <parameter pos:start="1:117" pos:end="1:125"><decl pos:start="1:117" pos:end="1:125"><type pos:start="1:117" pos:end="1:125"><name pos:start="1:117" pos:end="1:119">int</name></type> <name pos:start="1:121" pos:end="1:125">scale</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:39">filter_type</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:59"><decl pos:start="3:42" pos:end="3:59"><type pos:start="3:42" pos:end="3:59"><name pos:start="3:42" pos:end="3:47">double</name></type> <name pos:start="3:49" pos:end="3:59">kaiser_beta</name></decl></parameter>)</parameter_list><block pos:start="3:61" pos:end="279:1">{<block_content pos:start="5:5" pos:end="277:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ph</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:12">x</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:15" pos:end="7:15">y</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:18" pos:end="7:18">w</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:21" pos:end="7:21">t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">double</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">tab</name> <init pos:start="9:17" pos:end="9:61">= <expr pos:start="9:19" pos:end="9:61"><call pos:start="9:19" pos:end="9:61"><name pos:start="9:19" pos:end="9:33">av_malloc_array</name><argument_list pos:start="9:34" pos:end="9:61">(<argument pos:start="9:35" pos:end="9:45"><expr pos:start="9:35" pos:end="9:45"><name pos:start="9:35" pos:end="9:43">tap_count</name><operator pos:start="9:44" pos:end="9:44">+</operator><literal type="number" pos:start="9:45" pos:end="9:45">1</literal></expr></argument>,  <argument pos:start="9:49" pos:end="9:60"><expr pos:start="9:49" pos:end="9:60"><sizeof pos:start="9:49" pos:end="9:60">sizeof<argument_list pos:start="9:55" pos:end="9:60">(<argument pos:start="9:56" pos:end="9:59"><expr pos:start="9:56" pos:end="9:59"><operator pos:start="9:56" pos:end="9:56">*</operator><name pos:start="9:57" pos:end="9:59">tab</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:20">center</name><init pos:start="11:21" pos:end="11:37">= <expr pos:start="11:23" pos:end="11:37"><operator pos:start="11:23" pos:end="11:23">(</operator><name pos:start="11:24" pos:end="11:32">tap_count</name><operator pos:start="11:33" pos:end="11:33">-</operator><literal type="number" pos:start="11:34" pos:end="11:34">1</literal><operator pos:start="11:35" pos:end="11:35">)</operator><operator pos:start="11:36" pos:end="11:36">/</operator><literal type="number" pos:start="11:37" pos:end="11:37">2</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">tab</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:60">/* if upsampling, only need to interpolate, no filter */</comment>

    <if_stmt pos:start="23:5" pos:end="25:21"><if pos:start="23:5" pos:end="25:21">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:14">factor</name> <operator pos:start="23:16" pos:end="23:16">&gt;</operator> <literal type="number" pos:start="23:18" pos:end="23:20">1.0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:21"><block_content pos:start="25:9" pos:end="25:21">

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:14">factor</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:20">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:57"><expr pos:start="29:5" pos:end="29:56"><call pos:start="29:5" pos:end="29:56"><name pos:start="29:5" pos:end="29:14">av_assert0</name><argument_list pos:start="29:15" pos:end="29:56">(<argument pos:start="29:16" pos:end="29:55"><expr pos:start="29:16" pos:end="29:55"><name pos:start="29:16" pos:end="29:26">phase_count</name> <operator pos:start="29:28" pos:end="29:29">==</operator> <literal type="number" pos:start="29:31" pos:end="29:31">1</literal> <operator pos:start="29:33" pos:end="29:34">||</operator> <name pos:start="29:36" pos:end="29:46">phase_count</name> <operator pos:start="29:48" pos:end="29:48">%</operator> <literal type="number" pos:start="29:50" pos:end="29:50">2</literal> <operator pos:start="29:52" pos:end="29:53">==</operator> <literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="272:0">for<control pos:start="31:8" pos:end="31:44">(<init pos:start="31:9" pos:end="31:15"><expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:10">ph</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:38"><expr pos:start="31:17" pos:end="31:37"><name pos:start="31:17" pos:end="31:18">ph</name> <operator pos:start="31:20" pos:end="31:21">&lt;=</operator> <name pos:start="31:23" pos:end="31:33">phase_count</name> <operator pos:start="31:35" pos:end="31:35">/</operator> <literal type="number" pos:start="31:37" pos:end="31:37">2</literal></expr>;</condition> <incr pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:41">ph</name><operator pos:start="31:42" pos:end="31:43">++</operator></expr></incr>)</control> <block pos:start="31:46" pos:end="272:0">{<block_content pos:start="33:9" pos:end="197:9">

        <decl_stmt pos:start="33:9" pos:end="33:24"><decl pos:start="33:9" pos:end="33:23"><type pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">double</name></type> <name pos:start="33:16" pos:end="33:19">norm</name> <init pos:start="33:21" pos:end="33:23">= <expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="35:9" pos:end="89:9">for<control pos:start="35:12" pos:end="35:33">(<init pos:start="35:13" pos:end="35:16"><expr pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:13">i</name><operator pos:start="35:14" pos:end="35:14">=</operator><literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>;</init><condition pos:start="35:17" pos:end="35:29"><expr pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:17">i</name><operator pos:start="35:18" pos:end="35:19">&lt;=</operator><name pos:start="35:20" pos:end="35:28">tap_count</name></expr>;</condition><incr pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:30">i</name><operator pos:start="35:31" pos:end="35:32">++</operator></expr></incr>)</control> <block pos:start="35:35" pos:end="89:9">{<block_content pos:start="37:13" pos:end="87:26">

            <expr_stmt pos:start="37:13" pos:end="37:82"><expr pos:start="37:13" pos:end="37:81"><name pos:start="37:13" pos:end="37:13">x</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:20">M_PI</name> <operator pos:start="37:22" pos:end="37:22">*</operator> <operator pos:start="37:24" pos:end="37:24">(</operator><operator pos:start="37:25" pos:end="37:25">(</operator><name pos:start="37:26" pos:end="37:31">double</name><operator pos:start="37:32" pos:end="37:32">)</operator><operator pos:start="37:33" pos:end="37:33">(</operator><name pos:start="37:34" pos:end="37:34">i</name> <operator pos:start="37:36" pos:end="37:36">-</operator> <name pos:start="37:38" pos:end="37:43">center</name><operator pos:start="37:44" pos:end="37:44">)</operator> <operator pos:start="37:46" pos:end="37:46">-</operator> <operator pos:start="37:48" pos:end="37:48">(</operator><name pos:start="37:49" pos:end="37:54">double</name><operator pos:start="37:55" pos:end="37:55">)</operator><name pos:start="37:56" pos:end="37:57">ph</name> <operator pos:start="37:59" pos:end="37:59">/</operator> <name pos:start="37:61" pos:end="37:71">phase_count</name><operator pos:start="37:72" pos:end="37:72">)</operator> <operator pos:start="37:74" pos:end="37:74">*</operator> <name pos:start="37:76" pos:end="37:81">factor</name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:39"><if pos:start="39:13" pos:end="39:32">if <condition pos:start="39:16" pos:end="39:23">(<expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">x</name> <operator pos:start="39:19" pos:end="39:20">==</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>)</condition><block type="pseudo" pos:start="39:25" pos:end="39:32"><block_content pos:start="39:25" pos:end="39:32"> <expr_stmt pos:start="39:25" pos:end="39:32"><expr pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:25">y</name> <operator pos:start="39:27" pos:end="39:27">=</operator> <literal type="number" pos:start="39:29" pos:end="39:31">1.0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="41:13" pos:end="41:39">else<block type="pseudo" pos:start="41:25" pos:end="41:39"><block_content pos:start="41:25" pos:end="41:39">        <expr_stmt pos:start="41:25" pos:end="41:39"><expr pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:25">y</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:34"><name pos:start="41:29" pos:end="41:31">sin</name><argument_list pos:start="41:32" pos:end="41:34">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">x</name></expr></argument>)</argument_list></call> <operator pos:start="41:36" pos:end="41:36">/</operator> <name pos:start="41:38" pos:end="41:38">x</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="43:13" pos:end="79:13">switch<condition pos:start="43:19" pos:end="43:31">(<expr pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:30">filter_type</name></expr>)</condition><block pos:start="43:32" pos:end="79:13">{<block_content pos:start="45:13" pos:end="77:30">

            <case pos:start="45:13" pos:end="45:39">case <expr pos:start="45:18" pos:end="45:38"><name pos:start="45:18" pos:end="45:38">SWR_FILTER_TYPE_CUBIC</name></expr>:</case><block pos:start="45:40" pos:end="55:23">{<block_content pos:start="47:17" pos:end="55:22">

                <decl_stmt pos:start="47:17" pos:end="47:36"><decl pos:start="47:17" pos:end="47:35"><type pos:start="47:17" pos:end="47:27"><specifier pos:start="47:17" pos:end="47:21">const</specifier> <name pos:start="47:23" pos:end="47:27">float</name></type> <name pos:start="47:29" pos:end="47:29">d</name><init pos:start="47:30" pos:end="47:35">= <expr pos:start="47:32" pos:end="47:35"><operator pos:start="47:32" pos:end="47:32">-</operator><literal type="number" pos:start="47:33" pos:end="47:35">0.5</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="47:38" pos:end="47:68">//first order derivative = -0.5</comment>

                <expr_stmt pos:start="49:17" pos:end="49:85"><expr pos:start="49:17" pos:end="49:84"><name pos:start="49:17" pos:end="49:17">x</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:84"><name pos:start="49:21" pos:end="49:24">fabs</name><argument_list pos:start="49:25" pos:end="49:84">(<argument pos:start="49:26" pos:end="49:83"><expr pos:start="49:26" pos:end="49:83"><operator pos:start="49:26" pos:end="49:26">(</operator><operator pos:start="49:27" pos:end="49:27">(</operator><name pos:start="49:28" pos:end="49:33">double</name><operator pos:start="49:34" pos:end="49:34">)</operator><operator pos:start="49:35" pos:end="49:35">(</operator><name pos:start="49:36" pos:end="49:36">i</name> <operator pos:start="49:38" pos:end="49:38">-</operator> <name pos:start="49:40" pos:end="49:45">center</name><operator pos:start="49:46" pos:end="49:46">)</operator> <operator pos:start="49:48" pos:end="49:48">-</operator> <operator pos:start="49:50" pos:end="49:50">(</operator><name pos:start="49:51" pos:end="49:56">double</name><operator pos:start="49:57" pos:end="49:57">)</operator><name pos:start="49:58" pos:end="49:59">ph</name> <operator pos:start="49:61" pos:end="49:61">/</operator> <name pos:start="49:63" pos:end="49:73">phase_count</name><operator pos:start="49:74" pos:end="49:74">)</operator> <operator pos:start="49:76" pos:end="49:76">*</operator> <name pos:start="49:78" pos:end="49:83">factor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="51:17" pos:end="53:80"><if pos:start="51:17" pos:end="51:80">if<condition pos:start="51:19" pos:end="51:25">(<expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:20">x</name><operator pos:start="51:21" pos:end="51:21">&lt;</operator><literal type="number" pos:start="51:22" pos:end="51:24">1.0</literal></expr>)</condition><block type="pseudo" pos:start="51:27" pos:end="51:80"><block_content pos:start="51:27" pos:end="51:80"> <expr_stmt pos:start="51:27" pos:end="51:80"><expr pos:start="51:27" pos:end="51:79"><name pos:start="51:27" pos:end="51:27">y</name><operator pos:start="51:28" pos:end="51:28">=</operator> <literal type="number" pos:start="51:30" pos:end="51:32">1</literal> <operator pos:start="51:32" pos:end="51:32">-</operator> <literal type="number" pos:start="51:34" pos:end="51:34">3</literal><operator pos:start="51:35" pos:end="51:35">*</operator><name pos:start="51:36" pos:end="51:36">x</name><operator pos:start="51:37" pos:end="51:37">*</operator><name pos:start="51:38" pos:end="51:38">x</name> <operator pos:start="51:40" pos:end="51:40">+</operator> <literal type="number" pos:start="51:42" pos:end="51:42">2</literal><operator pos:start="51:43" pos:end="51:43">*</operator><name pos:start="51:44" pos:end="51:44">x</name><operator pos:start="51:45" pos:end="51:45">*</operator><name pos:start="51:46" pos:end="51:46">x</name><operator pos:start="51:47" pos:end="51:47">*</operator><name pos:start="51:48" pos:end="51:48">x</name> <operator pos:start="51:50" pos:end="51:50">+</operator> <name pos:start="51:52" pos:end="51:52">d</name><operator pos:start="51:53" pos:end="51:53">*</operator><operator pos:start="51:54" pos:end="51:54">(</operator>            <operator pos:start="51:67" pos:end="51:67">-</operator><name pos:start="51:68" pos:end="51:68">x</name><operator pos:start="51:69" pos:end="51:69">*</operator><name pos:start="51:70" pos:end="51:70">x</name> <operator pos:start="51:72" pos:end="51:72">+</operator> <name pos:start="51:74" pos:end="51:74">x</name><operator pos:start="51:75" pos:end="51:75">*</operator><name pos:start="51:76" pos:end="51:76">x</name><operator pos:start="51:77" pos:end="51:77">*</operator><name pos:start="51:78" pos:end="51:78">x</name><operator pos:start="51:79" pos:end="51:79">)</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="53:17" pos:end="53:80">else<block type="pseudo" pos:start="53:27" pos:end="53:80"><block_content pos:start="53:27" pos:end="53:80">      <expr_stmt pos:start="53:27" pos:end="53:80"><expr pos:start="53:27" pos:end="53:79"><name pos:start="53:27" pos:end="53:27">y</name><operator pos:start="53:28" pos:end="53:28">=</operator>                       <name pos:start="53:52" pos:end="53:52">d</name><operator pos:start="53:53" pos:end="53:53">*</operator><operator pos:start="53:54" pos:end="53:54">(</operator><operator pos:start="53:55" pos:end="53:55">-</operator><literal type="number" pos:start="53:56" pos:end="53:58">4</literal> <operator pos:start="53:58" pos:end="53:58">+</operator> <literal type="number" pos:start="53:60" pos:end="53:60">8</literal><operator pos:start="53:61" pos:end="53:61">*</operator><name pos:start="53:62" pos:end="53:62">x</name> <operator pos:start="53:64" pos:end="53:64">-</operator> <literal type="number" pos:start="53:66" pos:end="53:66">5</literal><operator pos:start="53:67" pos:end="53:67">*</operator><name pos:start="53:68" pos:end="53:68">x</name><operator pos:start="53:69" pos:end="53:69">*</operator><name pos:start="53:70" pos:end="53:70">x</name> <operator pos:start="53:72" pos:end="53:72">+</operator> <name pos:start="53:74" pos:end="53:74">x</name><operator pos:start="53:75" pos:end="53:75">*</operator><name pos:start="53:76" pos:end="53:76">x</name><operator pos:start="53:77" pos:end="53:77">*</operator><name pos:start="53:78" pos:end="53:78">x</name><operator pos:start="53:79" pos:end="53:79">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break></block_content>}</block>

            <case pos:start="57:13" pos:end="57:50">case <expr pos:start="57:18" pos:end="57:49"><name pos:start="57:18" pos:end="57:49">SWR_FILTER_TYPE_BLACKMAN_NUTTALL</name></expr>:</case>

                <expr_stmt pos:start="59:17" pos:end="59:54"><expr pos:start="59:17" pos:end="59:53"><name pos:start="59:17" pos:end="59:17">w</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <literal type="number" pos:start="59:21" pos:end="59:23">2.0</literal><operator pos:start="59:24" pos:end="59:24">*</operator><name pos:start="59:25" pos:end="59:25">x</name> <operator pos:start="59:27" pos:end="59:27">/</operator> <operator pos:start="59:29" pos:end="59:29">(</operator><name pos:start="59:30" pos:end="59:35">factor</name><operator pos:start="59:36" pos:end="59:36">*</operator><name pos:start="59:37" pos:end="59:45">tap_count</name><operator pos:start="59:46" pos:end="59:46">)</operator> <operator pos:start="59:48" pos:end="59:48">+</operator> <name pos:start="59:50" pos:end="59:53">M_PI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:27"><expr pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:17">t</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:23">cos</name><argument_list pos:start="61:24" pos:end="61:26">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:101"><expr pos:start="63:17" pos:end="63:100"><name pos:start="63:17" pos:end="63:17">y</name> <operator pos:start="63:19" pos:end="63:20">*=</operator> <literal type="number" pos:start="63:22" pos:end="63:32">0.3635819</literal> <operator pos:start="63:32" pos:end="63:32">-</operator> <literal type="number" pos:start="63:34" pos:end="63:42">0.4891775</literal> <operator pos:start="63:44" pos:end="63:44">*</operator> <name pos:start="63:46" pos:end="63:46">t</name> <operator pos:start="63:48" pos:end="63:48">+</operator> <literal type="number" pos:start="63:50" pos:end="63:58">0.1365995</literal> <operator pos:start="63:60" pos:end="63:60">*</operator> <operator pos:start="63:62" pos:end="63:62">(</operator><literal type="number" pos:start="63:63" pos:end="63:63">2</literal><operator pos:start="63:64" pos:end="63:64">*</operator><name pos:start="63:65" pos:end="63:65">t</name><operator pos:start="63:66" pos:end="63:66">*</operator><name pos:start="63:67" pos:end="63:67">t</name><operator pos:start="63:68" pos:end="63:68">-</operator><literal type="number" pos:start="63:69" pos:end="63:69">1</literal><operator pos:start="63:70" pos:end="63:70">)</operator> <operator pos:start="63:72" pos:end="63:72">-</operator> <literal type="number" pos:start="63:74" pos:end="63:82">0.0106411</literal> <operator pos:start="63:84" pos:end="63:84">*</operator> <operator pos:start="63:86" pos:end="63:86">(</operator><literal type="number" pos:start="63:87" pos:end="63:87">4</literal><operator pos:start="63:88" pos:end="63:88">*</operator><name pos:start="63:89" pos:end="63:89">t</name><operator pos:start="63:90" pos:end="63:90">*</operator><name pos:start="63:91" pos:end="63:91">t</name><operator pos:start="63:92" pos:end="63:92">*</operator><name pos:start="63:93" pos:end="63:93">t</name> <operator pos:start="63:95" pos:end="63:95">-</operator> <literal type="number" pos:start="63:97" pos:end="63:97">3</literal><operator pos:start="63:98" pos:end="63:98">*</operator><name pos:start="63:99" pos:end="63:99">t</name><operator pos:start="63:100" pos:end="63:100">)</operator></expr>;</expr_stmt>

                <break pos:start="65:17" pos:end="65:22">break;</break>

            <case pos:start="67:13" pos:end="67:40">case <expr pos:start="67:18" pos:end="67:39"><name pos:start="67:18" pos:end="67:39">SWR_FILTER_TYPE_KAISER</name></expr>:</case>

                <expr_stmt pos:start="69:17" pos:end="69:52"><expr pos:start="69:17" pos:end="69:51"><name pos:start="69:17" pos:end="69:17">w</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <literal type="number" pos:start="69:21" pos:end="69:23">2.0</literal><operator pos:start="69:24" pos:end="69:24">*</operator><name pos:start="69:25" pos:end="69:25">x</name> <operator pos:start="69:27" pos:end="69:27">/</operator> <operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:35">factor</name><operator pos:start="69:36" pos:end="69:36">*</operator><name pos:start="69:37" pos:end="69:45">tap_count</name><operator pos:start="69:46" pos:end="69:46">*</operator><name pos:start="69:47" pos:end="69:50">M_PI</name><operator pos:start="69:51" pos:end="69:51">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:63"><expr pos:start="71:17" pos:end="71:62"><name pos:start="71:17" pos:end="71:17">y</name> <operator pos:start="71:19" pos:end="71:20">*=</operator> <call pos:start="71:22" pos:end="71:62"><name pos:start="71:22" pos:end="71:27">bessel</name><argument_list pos:start="71:28" pos:end="71:62">(<argument pos:start="71:29" pos:end="71:61"><expr pos:start="71:29" pos:end="71:61"><name pos:start="71:29" pos:end="71:39">kaiser_beta</name><operator pos:start="71:40" pos:end="71:40">*</operator><call pos:start="71:41" pos:end="71:61"><name pos:start="71:41" pos:end="71:44">sqrt</name><argument_list pos:start="71:45" pos:end="71:61">(<argument pos:start="71:46" pos:end="71:60"><expr pos:start="71:46" pos:end="71:60"><call pos:start="71:46" pos:end="71:60"><name pos:start="71:46" pos:end="71:50">FFMAX</name><argument_list pos:start="71:51" pos:end="71:60">(<argument pos:start="71:52" pos:end="71:56"><expr pos:start="71:52" pos:end="71:56"><literal type="number" pos:start="71:52" pos:end="71:53">1</literal><operator pos:start="71:53" pos:end="71:53">-</operator><name pos:start="71:54" pos:end="71:54">w</name><operator pos:start="71:55" pos:end="71:55">*</operator><name pos:start="71:56" pos:end="71:56">w</name></expr></argument>, <argument pos:start="71:59" pos:end="71:59"><expr pos:start="71:59" pos:end="71:59"><literal type="number" pos:start="71:59" pos:end="71:59">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            <default pos:start="75:13" pos:end="75:20">default:</default>

                <expr_stmt pos:start="77:17" pos:end="77:30"><expr pos:start="77:17" pos:end="77:29"><call pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:26">av_assert0</name><argument_list pos:start="77:27" pos:end="77:29">(<argument pos:start="77:28" pos:end="77:28"><expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <expr_stmt pos:start="83:13" pos:end="83:23"><expr pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:15">tab</name><index pos:start="83:16" pos:end="83:18">[<expr pos:start="83:17" pos:end="83:17"><name pos:start="83:17" pos:end="83:17">i</name></expr>]</index></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:22">y</name></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="87:26"><if pos:start="85:13" pos:end="87:26">if <condition pos:start="85:16" pos:end="85:30">(<expr pos:start="85:17" pos:end="85:29"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <name pos:start="85:21" pos:end="85:29">tap_count</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:26"><block_content pos:start="87:17" pos:end="87:26">

                <expr_stmt pos:start="87:17" pos:end="87:26"><expr pos:start="87:17" pos:end="87:25"><name pos:start="87:17" pos:end="87:20">norm</name> <operator pos:start="87:22" pos:end="87:23">+=</operator> <name pos:start="87:25" pos:end="87:25">y</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="93:9" pos:end="93:65">/* normalize so that an uniform color remains the same */</comment>

        <switch pos:start="95:9" pos:end="197:9">switch<condition pos:start="95:15" pos:end="95:25">(<expr pos:start="95:16" pos:end="95:24"><name pos:start="95:16" pos:end="95:24"><name pos:start="95:16" pos:end="95:16">c</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:24">format</name></name></expr>)</condition><block pos:start="95:26" pos:end="197:9">{<block_content pos:start="97:9" pos:end="195:18">

        <case pos:start="97:9" pos:end="97:32">case <expr pos:start="97:14" pos:end="97:31"><name pos:start="97:14" pos:end="97:31">AV_SAMPLE_FMT_S16P</name></expr>:</case>

            <for pos:start="99:13" pos:end="101:114">for<control pos:start="99:16" pos:end="99:36">(<init pos:start="99:17" pos:end="99:20"><expr pos:start="99:17" pos:end="99:19"><name pos:start="99:17" pos:end="99:17">i</name><operator pos:start="99:18" pos:end="99:18">=</operator><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>;</init><condition pos:start="99:21" pos:end="99:32"><expr pos:start="99:21" pos:end="99:31"><name pos:start="99:21" pos:end="99:21">i</name><operator pos:start="99:22" pos:end="99:22">&lt;</operator><name pos:start="99:23" pos:end="99:31">tap_count</name></expr>;</condition><incr pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:35"><name pos:start="99:33" pos:end="99:33">i</name><operator pos:start="99:34" pos:end="99:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:17" pos:end="101:114"><block_content pos:start="101:17" pos:end="101:114">

                <expr_stmt pos:start="101:17" pos:end="101:114"><expr pos:start="101:17" pos:end="101:113"><operator pos:start="101:17" pos:end="101:17">(</operator><operator pos:start="101:18" pos:end="101:18">(</operator><name pos:start="101:19" pos:end="101:25">int16_t</name><operator pos:start="101:26" pos:end="101:26">*</operator><operator pos:start="101:27" pos:end="101:27">)</operator><name pos:start="101:28" pos:end="101:33">filter</name><operator pos:start="101:34" pos:end="101:34">)</operator><index pos:start="101:35" pos:end="101:50">[<expr pos:start="101:36" pos:end="101:49"><name pos:start="101:36" pos:end="101:37">ph</name> <operator pos:start="101:39" pos:end="101:39">*</operator> <name pos:start="101:41" pos:end="101:45">alloc</name> <operator pos:start="101:47" pos:end="101:47">+</operator> <name pos:start="101:49" pos:end="101:49">i</name></expr>]</index> <operator pos:start="101:52" pos:end="101:52">=</operator> <call pos:start="101:54" pos:end="101:113"><name pos:start="101:54" pos:end="101:60">av_clip</name><argument_list pos:start="101:61" pos:end="101:113">(<argument pos:start="101:62" pos:end="101:90"><expr pos:start="101:62" pos:end="101:90"><call pos:start="101:62" pos:end="101:90"><name pos:start="101:62" pos:end="101:67">lrintf</name><argument_list pos:start="101:68" pos:end="101:90">(<argument pos:start="101:69" pos:end="101:89"><expr pos:start="101:69" pos:end="101:89"><name pos:start="101:69" pos:end="101:74"><name pos:start="101:69" pos:end="101:71">tab</name><index pos:start="101:72" pos:end="101:74">[<expr pos:start="101:73" pos:end="101:73"><name pos:start="101:73" pos:end="101:73">i</name></expr>]</index></name> <operator pos:start="101:76" pos:end="101:76">*</operator> <name pos:start="101:78" pos:end="101:82">scale</name> <operator pos:start="101:84" pos:end="101:84">/</operator> <name pos:start="101:86" pos:end="101:89">norm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:93" pos:end="101:101"><expr pos:start="101:93" pos:end="101:101"><name pos:start="101:93" pos:end="101:101">INT16_MIN</name></expr></argument>, <argument pos:start="101:104" pos:end="101:112"><expr pos:start="101:104" pos:end="101:112"><name pos:start="101:104" pos:end="101:112">INT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="103:13" pos:end="119:13"><if pos:start="103:13" pos:end="109:13">if <condition pos:start="103:16" pos:end="103:35">(<expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:25">tap_count</name> <operator pos:start="103:27" pos:end="103:27">%</operator> <literal type="number" pos:start="103:29" pos:end="103:29">2</literal> <operator pos:start="103:31" pos:end="103:32">==</operator> <literal type="number" pos:start="103:34" pos:end="103:34">0</literal></expr>)</condition> <block pos:start="103:37" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:118">

                <for pos:start="105:17" pos:end="107:118">for <control pos:start="105:21" pos:end="105:47">(<init pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:26"><name pos:start="105:22" pos:end="105:22">i</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <literal type="number" pos:start="105:26" pos:end="105:26">0</literal></expr>;</init> <condition pos:start="105:29" pos:end="105:42"><expr pos:start="105:29" pos:end="105:41"><name pos:start="105:29" pos:end="105:29">i</name> <operator pos:start="105:31" pos:end="105:31">&lt;</operator> <name pos:start="105:33" pos:end="105:41">tap_count</name></expr>;</condition> <incr pos:start="105:44" pos:end="105:46"><expr pos:start="105:44" pos:end="105:46"><name pos:start="105:44" pos:end="105:44">i</name><operator pos:start="105:45" pos:end="105:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:21" pos:end="107:118"><block_content pos:start="107:21" pos:end="107:118">

                    <expr_stmt pos:start="107:21" pos:end="107:118"><expr pos:start="107:21" pos:end="107:117"><operator pos:start="107:21" pos:end="107:21">(</operator><operator pos:start="107:22" pos:end="107:22">(</operator><name pos:start="107:23" pos:end="107:29">int16_t</name><operator pos:start="107:30" pos:end="107:30">*</operator><operator pos:start="107:31" pos:end="107:31">)</operator><name pos:start="107:32" pos:end="107:37">filter</name><operator pos:start="107:38" pos:end="107:38">)</operator><index pos:start="107:39" pos:end="107:80">[<expr pos:start="107:40" pos:end="107:79"><operator pos:start="107:40" pos:end="107:40">(</operator><name pos:start="107:41" pos:end="107:51">phase_count</name><operator pos:start="107:52" pos:end="107:52">-</operator><name pos:start="107:53" pos:end="107:54">ph</name><operator pos:start="107:55" pos:end="107:55">)</operator> <operator pos:start="107:57" pos:end="107:57">*</operator> <name pos:start="107:59" pos:end="107:63">alloc</name> <operator pos:start="107:65" pos:end="107:65">+</operator> <name pos:start="107:67" pos:end="107:75">tap_count</name><operator pos:start="107:76" pos:end="107:76">-</operator><literal type="number" pos:start="107:77" pos:end="107:78">1</literal><operator pos:start="107:78" pos:end="107:78">-</operator><name pos:start="107:79" pos:end="107:79">i</name></expr>]</index> <operator pos:start="107:82" pos:end="107:82">=</operator> <operator pos:start="107:84" pos:end="107:84">(</operator><operator pos:start="107:85" pos:end="107:85">(</operator><name pos:start="107:86" pos:end="107:92">int16_t</name><operator pos:start="107:93" pos:end="107:93">*</operator><operator pos:start="107:94" pos:end="107:94">)</operator><name pos:start="107:95" pos:end="107:100">filter</name><operator pos:start="107:101" pos:end="107:101">)</operator><index pos:start="107:102" pos:end="107:117">[<expr pos:start="107:103" pos:end="107:116"><name pos:start="107:103" pos:end="107:104">ph</name> <operator pos:start="107:106" pos:end="107:106">*</operator> <name pos:start="107:108" pos:end="107:112">alloc</name> <operator pos:start="107:114" pos:end="107:114">+</operator> <name pos:start="107:116" pos:end="107:116">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="111:13" pos:end="119:13">else <block pos:start="111:18" pos:end="119:13">{<block_content pos:start="113:17" pos:end="117:113">

                <for pos:start="113:17" pos:end="117:113">for <control pos:start="113:21" pos:end="113:48">(<init pos:start="113:22" pos:end="113:27"><expr pos:start="113:22" pos:end="113:26"><name pos:start="113:22" pos:end="113:22">i</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">1</literal></expr>;</init> <condition pos:start="113:29" pos:end="113:43"><expr pos:start="113:29" pos:end="113:42"><name pos:start="113:29" pos:end="113:29">i</name> <operator pos:start="113:31" pos:end="113:32">&lt;=</operator> <name pos:start="113:34" pos:end="113:42">tap_count</name></expr>;</condition> <incr pos:start="113:45" pos:end="113:47"><expr pos:start="113:45" pos:end="113:47"><name pos:start="113:45" pos:end="113:45">i</name><operator pos:start="113:46" pos:end="113:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:21" pos:end="117:113"><block_content pos:start="115:21" pos:end="117:113">

                    <expr_stmt pos:start="115:21" pos:end="117:113"><expr pos:start="115:21" pos:end="117:112"><operator pos:start="115:21" pos:end="115:21">(</operator><operator pos:start="115:22" pos:end="115:22">(</operator><name pos:start="115:23" pos:end="115:29">int16_t</name><operator pos:start="115:30" pos:end="115:30">*</operator><operator pos:start="115:31" pos:end="115:31">)</operator><name pos:start="115:32" pos:end="115:37">filter</name><operator pos:start="115:38" pos:end="115:38">)</operator><index pos:start="115:39" pos:end="115:78">[<expr pos:start="115:40" pos:end="115:77"><operator pos:start="115:40" pos:end="115:40">(</operator><name pos:start="115:41" pos:end="115:51">phase_count</name><operator pos:start="115:52" pos:end="115:52">-</operator><name pos:start="115:53" pos:end="115:54">ph</name><operator pos:start="115:55" pos:end="115:55">)</operator> <operator pos:start="115:57" pos:end="115:57">*</operator> <name pos:start="115:59" pos:end="115:63">alloc</name> <operator pos:start="115:65" pos:end="115:65">+</operator> <name pos:start="115:67" pos:end="115:75">tap_count</name><operator pos:start="115:76" pos:end="115:76">-</operator><name pos:start="115:77" pos:end="115:77">i</name></expr>]</index> <operator pos:start="115:80" pos:end="115:80">=</operator>

                        <call pos:start="117:25" pos:end="117:112"><name pos:start="117:25" pos:end="117:31">av_clip</name><argument_list pos:start="117:32" pos:end="117:112">(<argument pos:start="117:33" pos:end="117:89"><expr pos:start="117:33" pos:end="117:89"><call pos:start="117:33" pos:end="117:89"><name pos:start="117:33" pos:end="117:38">lrintf</name><argument_list pos:start="117:39" pos:end="117:89">(<argument pos:start="117:40" pos:end="117:88"><expr pos:start="117:40" pos:end="117:88"><name pos:start="117:40" pos:end="117:45"><name pos:start="117:40" pos:end="117:42">tab</name><index pos:start="117:43" pos:end="117:45">[<expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">i</name></expr>]</index></name> <operator pos:start="117:47" pos:end="117:47">*</operator> <name pos:start="117:49" pos:end="117:53">scale</name> <operator pos:start="117:55" pos:end="117:55">/</operator> <operator pos:start="117:57" pos:end="117:57">(</operator><name pos:start="117:58" pos:end="117:61">norm</name> <operator pos:start="117:63" pos:end="117:63">-</operator> <name pos:start="117:65" pos:end="117:70"><name pos:start="117:65" pos:end="117:67">tab</name><index pos:start="117:68" pos:end="117:70">[<expr pos:start="117:69" pos:end="117:69"><literal type="number" pos:start="117:69" pos:end="117:69">0</literal></expr>]</index></name> <operator pos:start="117:72" pos:end="117:72">+</operator> <name pos:start="117:74" pos:end="117:87"><name pos:start="117:74" pos:end="117:76">tab</name><index pos:start="117:77" pos:end="117:87">[<expr pos:start="117:78" pos:end="117:86"><name pos:start="117:78" pos:end="117:86">tap_count</name></expr>]</index></name><operator pos:start="117:88" pos:end="117:88">)</operator></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:92" pos:end="117:100"><expr pos:start="117:92" pos:end="117:100"><name pos:start="117:92" pos:end="117:100">INT16_MIN</name></expr></argument>, <argument pos:start="117:103" pos:end="117:111"><expr pos:start="117:103" pos:end="117:111"><name pos:start="117:103" pos:end="117:111">INT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:32">case <expr pos:start="123:14" pos:end="123:31"><name pos:start="123:14" pos:end="123:31">AV_SAMPLE_FMT_S32P</name></expr>:</case>

            <for pos:start="125:13" pos:end="127:99">for<control pos:start="125:16" pos:end="125:36">(<init pos:start="125:17" pos:end="125:20"><expr pos:start="125:17" pos:end="125:19"><name pos:start="125:17" pos:end="125:17">i</name><operator pos:start="125:18" pos:end="125:18">=</operator><literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>;</init><condition pos:start="125:21" pos:end="125:32"><expr pos:start="125:21" pos:end="125:31"><name pos:start="125:21" pos:end="125:21">i</name><operator pos:start="125:22" pos:end="125:22">&lt;</operator><name pos:start="125:23" pos:end="125:31">tap_count</name></expr>;</condition><incr pos:start="125:33" pos:end="125:35"><expr pos:start="125:33" pos:end="125:35"><name pos:start="125:33" pos:end="125:33">i</name><operator pos:start="125:34" pos:end="125:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:17" pos:end="127:99"><block_content pos:start="127:17" pos:end="127:99">

                <expr_stmt pos:start="127:17" pos:end="127:99"><expr pos:start="127:17" pos:end="127:98"><operator pos:start="127:17" pos:end="127:17">(</operator><operator pos:start="127:18" pos:end="127:18">(</operator><name pos:start="127:19" pos:end="127:25">int32_t</name><operator pos:start="127:26" pos:end="127:26">*</operator><operator pos:start="127:27" pos:end="127:27">)</operator><name pos:start="127:28" pos:end="127:33">filter</name><operator pos:start="127:34" pos:end="127:34">)</operator><index pos:start="127:35" pos:end="127:50">[<expr pos:start="127:36" pos:end="127:49"><name pos:start="127:36" pos:end="127:37">ph</name> <operator pos:start="127:39" pos:end="127:39">*</operator> <name pos:start="127:41" pos:end="127:45">alloc</name> <operator pos:start="127:47" pos:end="127:47">+</operator> <name pos:start="127:49" pos:end="127:49">i</name></expr>]</index> <operator pos:start="127:52" pos:end="127:52">=</operator> <call pos:start="127:54" pos:end="127:98"><name pos:start="127:54" pos:end="127:67">av_clipl_int32</name><argument_list pos:start="127:68" pos:end="127:98">(<argument pos:start="127:69" pos:end="127:97"><expr pos:start="127:69" pos:end="127:97"><call pos:start="127:69" pos:end="127:97"><name pos:start="127:69" pos:end="127:74">llrint</name><argument_list pos:start="127:75" pos:end="127:97">(<argument pos:start="127:76" pos:end="127:96"><expr pos:start="127:76" pos:end="127:96"><name pos:start="127:76" pos:end="127:81"><name pos:start="127:76" pos:end="127:78">tab</name><index pos:start="127:79" pos:end="127:81">[<expr pos:start="127:80" pos:end="127:80"><name pos:start="127:80" pos:end="127:80">i</name></expr>]</index></name> <operator pos:start="127:83" pos:end="127:83">*</operator> <name pos:start="127:85" pos:end="127:89">scale</name> <operator pos:start="127:91" pos:end="127:91">/</operator> <name pos:start="127:93" pos:end="127:96">norm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="129:13" pos:end="145:13"><if pos:start="129:13" pos:end="135:13">if <condition pos:start="129:16" pos:end="129:35">(<expr pos:start="129:17" pos:end="129:34"><name pos:start="129:17" pos:end="129:25">tap_count</name> <operator pos:start="129:27" pos:end="129:27">%</operator> <literal type="number" pos:start="129:29" pos:end="129:29">2</literal> <operator pos:start="129:31" pos:end="129:32">==</operator> <literal type="number" pos:start="129:34" pos:end="129:34">0</literal></expr>)</condition> <block pos:start="129:37" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:118">

                <for pos:start="131:17" pos:end="133:118">for <control pos:start="131:21" pos:end="131:47">(<init pos:start="131:22" pos:end="131:27"><expr pos:start="131:22" pos:end="131:26"><name pos:start="131:22" pos:end="131:22">i</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <literal type="number" pos:start="131:26" pos:end="131:26">0</literal></expr>;</init> <condition pos:start="131:29" pos:end="131:42"><expr pos:start="131:29" pos:end="131:41"><name pos:start="131:29" pos:end="131:29">i</name> <operator pos:start="131:31" pos:end="131:31">&lt;</operator> <name pos:start="131:33" pos:end="131:41">tap_count</name></expr>;</condition> <incr pos:start="131:44" pos:end="131:46"><expr pos:start="131:44" pos:end="131:46"><name pos:start="131:44" pos:end="131:44">i</name><operator pos:start="131:45" pos:end="131:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:21" pos:end="133:118"><block_content pos:start="133:21" pos:end="133:118">

                    <expr_stmt pos:start="133:21" pos:end="133:118"><expr pos:start="133:21" pos:end="133:117"><operator pos:start="133:21" pos:end="133:21">(</operator><operator pos:start="133:22" pos:end="133:22">(</operator><name pos:start="133:23" pos:end="133:29">int32_t</name><operator pos:start="133:30" pos:end="133:30">*</operator><operator pos:start="133:31" pos:end="133:31">)</operator><name pos:start="133:32" pos:end="133:37">filter</name><operator pos:start="133:38" pos:end="133:38">)</operator><index pos:start="133:39" pos:end="133:80">[<expr pos:start="133:40" pos:end="133:79"><operator pos:start="133:40" pos:end="133:40">(</operator><name pos:start="133:41" pos:end="133:51">phase_count</name><operator pos:start="133:52" pos:end="133:52">-</operator><name pos:start="133:53" pos:end="133:54">ph</name><operator pos:start="133:55" pos:end="133:55">)</operator> <operator pos:start="133:57" pos:end="133:57">*</operator> <name pos:start="133:59" pos:end="133:63">alloc</name> <operator pos:start="133:65" pos:end="133:65">+</operator> <name pos:start="133:67" pos:end="133:75">tap_count</name><operator pos:start="133:76" pos:end="133:76">-</operator><literal type="number" pos:start="133:77" pos:end="133:78">1</literal><operator pos:start="133:78" pos:end="133:78">-</operator><name pos:start="133:79" pos:end="133:79">i</name></expr>]</index> <operator pos:start="133:82" pos:end="133:82">=</operator> <operator pos:start="133:84" pos:end="133:84">(</operator><operator pos:start="133:85" pos:end="133:85">(</operator><name pos:start="133:86" pos:end="133:92">int32_t</name><operator pos:start="133:93" pos:end="133:93">*</operator><operator pos:start="133:94" pos:end="133:94">)</operator><name pos:start="133:95" pos:end="133:100">filter</name><operator pos:start="133:101" pos:end="133:101">)</operator><index pos:start="133:102" pos:end="133:117">[<expr pos:start="133:103" pos:end="133:116"><name pos:start="133:103" pos:end="133:104">ph</name> <operator pos:start="133:106" pos:end="133:106">*</operator> <name pos:start="133:108" pos:end="133:112">alloc</name> <operator pos:start="133:114" pos:end="133:114">+</operator> <name pos:start="133:116" pos:end="133:116">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="137:13" pos:end="145:13">else <block pos:start="137:18" pos:end="145:13">{<block_content pos:start="139:17" pos:end="143:98">

                <for pos:start="139:17" pos:end="143:98">for <control pos:start="139:21" pos:end="139:48">(<init pos:start="139:22" pos:end="139:27"><expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:22">i</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">1</literal></expr>;</init> <condition pos:start="139:29" pos:end="139:43"><expr pos:start="139:29" pos:end="139:42"><name pos:start="139:29" pos:end="139:29">i</name> <operator pos:start="139:31" pos:end="139:32">&lt;=</operator> <name pos:start="139:34" pos:end="139:42">tap_count</name></expr>;</condition> <incr pos:start="139:45" pos:end="139:47"><expr pos:start="139:45" pos:end="139:47"><name pos:start="139:45" pos:end="139:45">i</name><operator pos:start="139:46" pos:end="139:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:21" pos:end="143:98"><block_content pos:start="141:21" pos:end="143:98">

                    <expr_stmt pos:start="141:21" pos:end="143:98"><expr pos:start="141:21" pos:end="143:97"><operator pos:start="141:21" pos:end="141:21">(</operator><operator pos:start="141:22" pos:end="141:22">(</operator><name pos:start="141:23" pos:end="141:29">int32_t</name><operator pos:start="141:30" pos:end="141:30">*</operator><operator pos:start="141:31" pos:end="141:31">)</operator><name pos:start="141:32" pos:end="141:37">filter</name><operator pos:start="141:38" pos:end="141:38">)</operator><index pos:start="141:39" pos:end="141:78">[<expr pos:start="141:40" pos:end="141:77"><operator pos:start="141:40" pos:end="141:40">(</operator><name pos:start="141:41" pos:end="141:51">phase_count</name><operator pos:start="141:52" pos:end="141:52">-</operator><name pos:start="141:53" pos:end="141:54">ph</name><operator pos:start="141:55" pos:end="141:55">)</operator> <operator pos:start="141:57" pos:end="141:57">*</operator> <name pos:start="141:59" pos:end="141:63">alloc</name> <operator pos:start="141:65" pos:end="141:65">+</operator> <name pos:start="141:67" pos:end="141:75">tap_count</name><operator pos:start="141:76" pos:end="141:76">-</operator><name pos:start="141:77" pos:end="141:77">i</name></expr>]</index> <operator pos:start="141:80" pos:end="141:80">=</operator>

                        <call pos:start="143:25" pos:end="143:97"><name pos:start="143:25" pos:end="143:38">av_clipl_int32</name><argument_list pos:start="143:39" pos:end="143:97">(<argument pos:start="143:40" pos:end="143:96"><expr pos:start="143:40" pos:end="143:96"><call pos:start="143:40" pos:end="143:96"><name pos:start="143:40" pos:end="143:45">llrint</name><argument_list pos:start="143:46" pos:end="143:96">(<argument pos:start="143:47" pos:end="143:95"><expr pos:start="143:47" pos:end="143:95"><name pos:start="143:47" pos:end="143:52"><name pos:start="143:47" pos:end="143:49">tab</name><index pos:start="143:50" pos:end="143:52">[<expr pos:start="143:51" pos:end="143:51"><name pos:start="143:51" pos:end="143:51">i</name></expr>]</index></name> <operator pos:start="143:54" pos:end="143:54">*</operator> <name pos:start="143:56" pos:end="143:60">scale</name> <operator pos:start="143:62" pos:end="143:62">/</operator> <operator pos:start="143:64" pos:end="143:64">(</operator><name pos:start="143:65" pos:end="143:68">norm</name> <operator pos:start="143:70" pos:end="143:70">-</operator> <name pos:start="143:72" pos:end="143:77"><name pos:start="143:72" pos:end="143:74">tab</name><index pos:start="143:75" pos:end="143:77">[<expr pos:start="143:76" pos:end="143:76"><literal type="number" pos:start="143:76" pos:end="143:76">0</literal></expr>]</index></name> <operator pos:start="143:79" pos:end="143:79">+</operator> <name pos:start="143:81" pos:end="143:94"><name pos:start="143:81" pos:end="143:83">tab</name><index pos:start="143:84" pos:end="143:94">[<expr pos:start="143:85" pos:end="143:93"><name pos:start="143:85" pos:end="143:93">tap_count</name></expr>]</index></name><operator pos:start="143:95" pos:end="143:95">)</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:32">case <expr pos:start="149:14" pos:end="149:31"><name pos:start="149:14" pos:end="149:31">AV_SAMPLE_FMT_FLTP</name></expr>:</case>

            <for pos:start="151:13" pos:end="153:73">for<control pos:start="151:16" pos:end="151:36">(<init pos:start="151:17" pos:end="151:20"><expr pos:start="151:17" pos:end="151:19"><name pos:start="151:17" pos:end="151:17">i</name><operator pos:start="151:18" pos:end="151:18">=</operator><literal type="number" pos:start="151:19" pos:end="151:19">0</literal></expr>;</init><condition pos:start="151:21" pos:end="151:32"><expr pos:start="151:21" pos:end="151:31"><name pos:start="151:21" pos:end="151:21">i</name><operator pos:start="151:22" pos:end="151:22">&lt;</operator><name pos:start="151:23" pos:end="151:31">tap_count</name></expr>;</condition><incr pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><name pos:start="151:33" pos:end="151:33">i</name><operator pos:start="151:34" pos:end="151:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="153:17" pos:end="153:73"><block_content pos:start="153:17" pos:end="153:73">

                <expr_stmt pos:start="153:17" pos:end="153:73"><expr pos:start="153:17" pos:end="153:72"><operator pos:start="153:17" pos:end="153:17">(</operator><operator pos:start="153:18" pos:end="153:18">(</operator><name pos:start="153:19" pos:end="153:23">float</name><operator pos:start="153:24" pos:end="153:24">*</operator><operator pos:start="153:25" pos:end="153:25">)</operator><name pos:start="153:26" pos:end="153:31">filter</name><operator pos:start="153:32" pos:end="153:32">)</operator><index pos:start="153:33" pos:end="153:48">[<expr pos:start="153:34" pos:end="153:47"><name pos:start="153:34" pos:end="153:35">ph</name> <operator pos:start="153:37" pos:end="153:37">*</operator> <name pos:start="153:39" pos:end="153:43">alloc</name> <operator pos:start="153:45" pos:end="153:45">+</operator> <name pos:start="153:47" pos:end="153:47">i</name></expr>]</index> <operator pos:start="153:50" pos:end="153:50">=</operator> <name pos:start="153:52" pos:end="153:57"><name pos:start="153:52" pos:end="153:54">tab</name><index pos:start="153:55" pos:end="153:57">[<expr pos:start="153:56" pos:end="153:56"><name pos:start="153:56" pos:end="153:56">i</name></expr>]</index></name> <operator pos:start="153:59" pos:end="153:59">*</operator> <name pos:start="153:61" pos:end="153:65">scale</name> <operator pos:start="153:67" pos:end="153:67">/</operator> <name pos:start="153:69" pos:end="153:72">norm</name></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="155:13" pos:end="169:13"><if pos:start="155:13" pos:end="161:13">if <condition pos:start="155:16" pos:end="155:35">(<expr pos:start="155:17" pos:end="155:34"><name pos:start="155:17" pos:end="155:25">tap_count</name> <operator pos:start="155:27" pos:end="155:27">%</operator> <literal type="number" pos:start="155:29" pos:end="155:29">2</literal> <operator pos:start="155:31" pos:end="155:32">==</operator> <literal type="number" pos:start="155:34" pos:end="155:34">0</literal></expr>)</condition> <block pos:start="155:37" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:114">

                <for pos:start="157:17" pos:end="159:114">for <control pos:start="157:21" pos:end="157:47">(<init pos:start="157:22" pos:end="157:27"><expr pos:start="157:22" pos:end="157:26"><name pos:start="157:22" pos:end="157:22">i</name> <operator pos:start="157:24" pos:end="157:24">=</operator> <literal type="number" pos:start="157:26" pos:end="157:26">0</literal></expr>;</init> <condition pos:start="157:29" pos:end="157:42"><expr pos:start="157:29" pos:end="157:41"><name pos:start="157:29" pos:end="157:29">i</name> <operator pos:start="157:31" pos:end="157:31">&lt;</operator> <name pos:start="157:33" pos:end="157:41">tap_count</name></expr>;</condition> <incr pos:start="157:44" pos:end="157:46"><expr pos:start="157:44" pos:end="157:46"><name pos:start="157:44" pos:end="157:44">i</name><operator pos:start="157:45" pos:end="157:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="159:21" pos:end="159:114"><block_content pos:start="159:21" pos:end="159:114">

                    <expr_stmt pos:start="159:21" pos:end="159:114"><expr pos:start="159:21" pos:end="159:113"><operator pos:start="159:21" pos:end="159:21">(</operator><operator pos:start="159:22" pos:end="159:22">(</operator><name pos:start="159:23" pos:end="159:27">float</name><operator pos:start="159:28" pos:end="159:28">*</operator><operator pos:start="159:29" pos:end="159:29">)</operator><name pos:start="159:30" pos:end="159:35">filter</name><operator pos:start="159:36" pos:end="159:36">)</operator><index pos:start="159:37" pos:end="159:78">[<expr pos:start="159:38" pos:end="159:77"><operator pos:start="159:38" pos:end="159:38">(</operator><name pos:start="159:39" pos:end="159:49">phase_count</name><operator pos:start="159:50" pos:end="159:50">-</operator><name pos:start="159:51" pos:end="159:52">ph</name><operator pos:start="159:53" pos:end="159:53">)</operator> <operator pos:start="159:55" pos:end="159:55">*</operator> <name pos:start="159:57" pos:end="159:61">alloc</name> <operator pos:start="159:63" pos:end="159:63">+</operator> <name pos:start="159:65" pos:end="159:73">tap_count</name><operator pos:start="159:74" pos:end="159:74">-</operator><literal type="number" pos:start="159:75" pos:end="159:76">1</literal><operator pos:start="159:76" pos:end="159:76">-</operator><name pos:start="159:77" pos:end="159:77">i</name></expr>]</index> <operator pos:start="159:80" pos:end="159:80">=</operator> <operator pos:start="159:82" pos:end="159:82">(</operator><operator pos:start="159:83" pos:end="159:83">(</operator><name pos:start="159:84" pos:end="159:88">float</name><operator pos:start="159:89" pos:end="159:89">*</operator><operator pos:start="159:90" pos:end="159:90">)</operator><name pos:start="159:91" pos:end="159:96">filter</name><operator pos:start="159:97" pos:end="159:97">)</operator><index pos:start="159:98" pos:end="159:113">[<expr pos:start="159:99" pos:end="159:112"><name pos:start="159:99" pos:end="159:100">ph</name> <operator pos:start="159:102" pos:end="159:102">*</operator> <name pos:start="159:104" pos:end="159:108">alloc</name> <operator pos:start="159:110" pos:end="159:110">+</operator> <name pos:start="159:112" pos:end="159:112">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="163:13" pos:end="169:13">else <block pos:start="163:18" pos:end="169:13">{<block_content pos:start="165:17" pos:end="167:129">

                <for pos:start="165:17" pos:end="167:129">for <control pos:start="165:21" pos:end="165:48">(<init pos:start="165:22" pos:end="165:27"><expr pos:start="165:22" pos:end="165:26"><name pos:start="165:22" pos:end="165:22">i</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <literal type="number" pos:start="165:26" pos:end="165:26">1</literal></expr>;</init> <condition pos:start="165:29" pos:end="165:43"><expr pos:start="165:29" pos:end="165:42"><name pos:start="165:29" pos:end="165:29">i</name> <operator pos:start="165:31" pos:end="165:32">&lt;=</operator> <name pos:start="165:34" pos:end="165:42">tap_count</name></expr>;</condition> <incr pos:start="165:45" pos:end="165:47"><expr pos:start="165:45" pos:end="165:47"><name pos:start="165:45" pos:end="165:45">i</name><operator pos:start="165:46" pos:end="165:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="167:21" pos:end="167:129"><block_content pos:start="167:21" pos:end="167:129">

                    <expr_stmt pos:start="167:21" pos:end="167:129"><expr pos:start="167:21" pos:end="167:128"><operator pos:start="167:21" pos:end="167:21">(</operator><operator pos:start="167:22" pos:end="167:22">(</operator><name pos:start="167:23" pos:end="167:27">float</name><operator pos:start="167:28" pos:end="167:28">*</operator><operator pos:start="167:29" pos:end="167:29">)</operator><name pos:start="167:30" pos:end="167:35">filter</name><operator pos:start="167:36" pos:end="167:36">)</operator><index pos:start="167:37" pos:end="167:76">[<expr pos:start="167:38" pos:end="167:75"><operator pos:start="167:38" pos:end="167:38">(</operator><name pos:start="167:39" pos:end="167:49">phase_count</name><operator pos:start="167:50" pos:end="167:50">-</operator><name pos:start="167:51" pos:end="167:52">ph</name><operator pos:start="167:53" pos:end="167:53">)</operator> <operator pos:start="167:55" pos:end="167:55">*</operator> <name pos:start="167:57" pos:end="167:61">alloc</name> <operator pos:start="167:63" pos:end="167:63">+</operator> <name pos:start="167:65" pos:end="167:73">tap_count</name><operator pos:start="167:74" pos:end="167:74">-</operator><name pos:start="167:75" pos:end="167:75">i</name></expr>]</index> <operator pos:start="167:78" pos:end="167:78">=</operator> <name pos:start="167:80" pos:end="167:85"><name pos:start="167:80" pos:end="167:82">tab</name><index pos:start="167:83" pos:end="167:85">[<expr pos:start="167:84" pos:end="167:84"><name pos:start="167:84" pos:end="167:84">i</name></expr>]</index></name> <operator pos:start="167:87" pos:end="167:87">*</operator> <name pos:start="167:89" pos:end="167:93">scale</name> <operator pos:start="167:95" pos:end="167:95">/</operator> <operator pos:start="167:97" pos:end="167:97">(</operator><name pos:start="167:98" pos:end="167:101">norm</name> <operator pos:start="167:103" pos:end="167:103">-</operator> <name pos:start="167:105" pos:end="167:110"><name pos:start="167:105" pos:end="167:107">tab</name><index pos:start="167:108" pos:end="167:110">[<expr pos:start="167:109" pos:end="167:109"><literal type="number" pos:start="167:109" pos:end="167:109">0</literal></expr>]</index></name> <operator pos:start="167:112" pos:end="167:112">+</operator> <name pos:start="167:114" pos:end="167:127"><name pos:start="167:114" pos:end="167:116">tab</name><index pos:start="167:117" pos:end="167:127">[<expr pos:start="167:118" pos:end="167:126"><name pos:start="167:118" pos:end="167:126">tap_count</name></expr>]</index></name><operator pos:start="167:128" pos:end="167:128">)</operator></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:32">case <expr pos:start="173:14" pos:end="173:31"><name pos:start="173:14" pos:end="173:31">AV_SAMPLE_FMT_DBLP</name></expr>:</case>

            <for pos:start="175:13" pos:end="177:74">for<control pos:start="175:16" pos:end="175:36">(<init pos:start="175:17" pos:end="175:20"><expr pos:start="175:17" pos:end="175:19"><name pos:start="175:17" pos:end="175:17">i</name><operator pos:start="175:18" pos:end="175:18">=</operator><literal type="number" pos:start="175:19" pos:end="175:19">0</literal></expr>;</init><condition pos:start="175:21" pos:end="175:32"><expr pos:start="175:21" pos:end="175:31"><name pos:start="175:21" pos:end="175:21">i</name><operator pos:start="175:22" pos:end="175:22">&lt;</operator><name pos:start="175:23" pos:end="175:31">tap_count</name></expr>;</condition><incr pos:start="175:33" pos:end="175:35"><expr pos:start="175:33" pos:end="175:35"><name pos:start="175:33" pos:end="175:33">i</name><operator pos:start="175:34" pos:end="175:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:17" pos:end="177:74"><block_content pos:start="177:17" pos:end="177:74">

                <expr_stmt pos:start="177:17" pos:end="177:74"><expr pos:start="177:17" pos:end="177:73"><operator pos:start="177:17" pos:end="177:17">(</operator><operator pos:start="177:18" pos:end="177:18">(</operator><name pos:start="177:19" pos:end="177:24">double</name><operator pos:start="177:25" pos:end="177:25">*</operator><operator pos:start="177:26" pos:end="177:26">)</operator><name pos:start="177:27" pos:end="177:32">filter</name><operator pos:start="177:33" pos:end="177:33">)</operator><index pos:start="177:34" pos:end="177:49">[<expr pos:start="177:35" pos:end="177:48"><name pos:start="177:35" pos:end="177:36">ph</name> <operator pos:start="177:38" pos:end="177:38">*</operator> <name pos:start="177:40" pos:end="177:44">alloc</name> <operator pos:start="177:46" pos:end="177:46">+</operator> <name pos:start="177:48" pos:end="177:48">i</name></expr>]</index> <operator pos:start="177:51" pos:end="177:51">=</operator> <name pos:start="177:53" pos:end="177:58"><name pos:start="177:53" pos:end="177:55">tab</name><index pos:start="177:56" pos:end="177:58">[<expr pos:start="177:57" pos:end="177:57"><name pos:start="177:57" pos:end="177:57">i</name></expr>]</index></name> <operator pos:start="177:60" pos:end="177:60">*</operator> <name pos:start="177:62" pos:end="177:66">scale</name> <operator pos:start="177:68" pos:end="177:68">/</operator> <name pos:start="177:70" pos:end="177:73">norm</name></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="179:13" pos:end="193:13"><if pos:start="179:13" pos:end="185:13">if <condition pos:start="179:16" pos:end="179:35">(<expr pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:25">tap_count</name> <operator pos:start="179:27" pos:end="179:27">%</operator> <literal type="number" pos:start="179:29" pos:end="179:29">2</literal> <operator pos:start="179:31" pos:end="179:32">==</operator> <literal type="number" pos:start="179:34" pos:end="179:34">0</literal></expr>)</condition> <block pos:start="179:37" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:116">

                <for pos:start="181:17" pos:end="183:116">for <control pos:start="181:21" pos:end="181:47">(<init pos:start="181:22" pos:end="181:27"><expr pos:start="181:22" pos:end="181:26"><name pos:start="181:22" pos:end="181:22">i</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>;</init> <condition pos:start="181:29" pos:end="181:42"><expr pos:start="181:29" pos:end="181:41"><name pos:start="181:29" pos:end="181:29">i</name> <operator pos:start="181:31" pos:end="181:31">&lt;</operator> <name pos:start="181:33" pos:end="181:41">tap_count</name></expr>;</condition> <incr pos:start="181:44" pos:end="181:46"><expr pos:start="181:44" pos:end="181:46"><name pos:start="181:44" pos:end="181:44">i</name><operator pos:start="181:45" pos:end="181:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:21" pos:end="183:116"><block_content pos:start="183:21" pos:end="183:116">

                    <expr_stmt pos:start="183:21" pos:end="183:116"><expr pos:start="183:21" pos:end="183:115"><operator pos:start="183:21" pos:end="183:21">(</operator><operator pos:start="183:22" pos:end="183:22">(</operator><name pos:start="183:23" pos:end="183:28">double</name><operator pos:start="183:29" pos:end="183:29">*</operator><operator pos:start="183:30" pos:end="183:30">)</operator><name pos:start="183:31" pos:end="183:36">filter</name><operator pos:start="183:37" pos:end="183:37">)</operator><index pos:start="183:38" pos:end="183:79">[<expr pos:start="183:39" pos:end="183:78"><operator pos:start="183:39" pos:end="183:39">(</operator><name pos:start="183:40" pos:end="183:50">phase_count</name><operator pos:start="183:51" pos:end="183:51">-</operator><name pos:start="183:52" pos:end="183:53">ph</name><operator pos:start="183:54" pos:end="183:54">)</operator> <operator pos:start="183:56" pos:end="183:56">*</operator> <name pos:start="183:58" pos:end="183:62">alloc</name> <operator pos:start="183:64" pos:end="183:64">+</operator> <name pos:start="183:66" pos:end="183:74">tap_count</name><operator pos:start="183:75" pos:end="183:75">-</operator><literal type="number" pos:start="183:76" pos:end="183:77">1</literal><operator pos:start="183:77" pos:end="183:77">-</operator><name pos:start="183:78" pos:end="183:78">i</name></expr>]</index> <operator pos:start="183:81" pos:end="183:81">=</operator> <operator pos:start="183:83" pos:end="183:83">(</operator><operator pos:start="183:84" pos:end="183:84">(</operator><name pos:start="183:85" pos:end="183:90">double</name><operator pos:start="183:91" pos:end="183:91">*</operator><operator pos:start="183:92" pos:end="183:92">)</operator><name pos:start="183:93" pos:end="183:98">filter</name><operator pos:start="183:99" pos:end="183:99">)</operator><index pos:start="183:100" pos:end="183:115">[<expr pos:start="183:101" pos:end="183:114"><name pos:start="183:101" pos:end="183:102">ph</name> <operator pos:start="183:104" pos:end="183:104">*</operator> <name pos:start="183:106" pos:end="183:110">alloc</name> <operator pos:start="183:112" pos:end="183:112">+</operator> <name pos:start="183:114" pos:end="183:114">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="187:13" pos:end="193:13">else <block pos:start="187:18" pos:end="193:13">{<block_content pos:start="189:17" pos:end="191:130">

                <for pos:start="189:17" pos:end="191:130">for <control pos:start="189:21" pos:end="189:48">(<init pos:start="189:22" pos:end="189:27"><expr pos:start="189:22" pos:end="189:26"><name pos:start="189:22" pos:end="189:22">i</name> <operator pos:start="189:24" pos:end="189:24">=</operator> <literal type="number" pos:start="189:26" pos:end="189:26">1</literal></expr>;</init> <condition pos:start="189:29" pos:end="189:43"><expr pos:start="189:29" pos:end="189:42"><name pos:start="189:29" pos:end="189:29">i</name> <operator pos:start="189:31" pos:end="189:32">&lt;=</operator> <name pos:start="189:34" pos:end="189:42">tap_count</name></expr>;</condition> <incr pos:start="189:45" pos:end="189:47"><expr pos:start="189:45" pos:end="189:47"><name pos:start="189:45" pos:end="189:45">i</name><operator pos:start="189:46" pos:end="189:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="191:21" pos:end="191:130"><block_content pos:start="191:21" pos:end="191:130">

                    <expr_stmt pos:start="191:21" pos:end="191:130"><expr pos:start="191:21" pos:end="191:129"><operator pos:start="191:21" pos:end="191:21">(</operator><operator pos:start="191:22" pos:end="191:22">(</operator><name pos:start="191:23" pos:end="191:28">double</name><operator pos:start="191:29" pos:end="191:29">*</operator><operator pos:start="191:30" pos:end="191:30">)</operator><name pos:start="191:31" pos:end="191:36">filter</name><operator pos:start="191:37" pos:end="191:37">)</operator><index pos:start="191:38" pos:end="191:77">[<expr pos:start="191:39" pos:end="191:76"><operator pos:start="191:39" pos:end="191:39">(</operator><name pos:start="191:40" pos:end="191:50">phase_count</name><operator pos:start="191:51" pos:end="191:51">-</operator><name pos:start="191:52" pos:end="191:53">ph</name><operator pos:start="191:54" pos:end="191:54">)</operator> <operator pos:start="191:56" pos:end="191:56">*</operator> <name pos:start="191:58" pos:end="191:62">alloc</name> <operator pos:start="191:64" pos:end="191:64">+</operator> <name pos:start="191:66" pos:end="191:74">tap_count</name><operator pos:start="191:75" pos:end="191:75">-</operator><name pos:start="191:76" pos:end="191:76">i</name></expr>]</index> <operator pos:start="191:79" pos:end="191:79">=</operator> <name pos:start="191:81" pos:end="191:86"><name pos:start="191:81" pos:end="191:83">tab</name><index pos:start="191:84" pos:end="191:86">[<expr pos:start="191:85" pos:end="191:85"><name pos:start="191:85" pos:end="191:85">i</name></expr>]</index></name> <operator pos:start="191:88" pos:end="191:88">*</operator> <name pos:start="191:90" pos:end="191:94">scale</name> <operator pos:start="191:96" pos:end="191:96">/</operator> <operator pos:start="191:98" pos:end="191:98">(</operator><name pos:start="191:99" pos:end="191:102">norm</name> <operator pos:start="191:104" pos:end="191:104">-</operator> <name pos:start="191:106" pos:end="191:111"><name pos:start="191:106" pos:end="191:108">tab</name><index pos:start="191:109" pos:end="191:111">[<expr pos:start="191:110" pos:end="191:110"><literal type="number" pos:start="191:110" pos:end="191:110">0</literal></expr>]</index></name> <operator pos:start="191:113" pos:end="191:113">+</operator> <name pos:start="191:115" pos:end="191:128"><name pos:start="191:115" pos:end="191:117">tab</name><index pos:start="191:118" pos:end="191:128">[<expr pos:start="191:119" pos:end="191:127"><name pos:start="191:119" pos:end="191:127">tap_count</name></expr>]</index></name><operator pos:start="191:129" pos:end="191:129">)</operator></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

<cpp:if pos:start="201:1" pos:end="201:5">#<cpp:directive pos:start="201:2" pos:end="201:3">if</cpp:directive> <expr pos:start="201:5" pos:end="201:5"><literal type="number" pos:start="201:5" pos:end="201:5">0</literal></expr></cpp:if>

    {

<cpp:define pos:start="205:1" pos:end="205:16">#<cpp:directive pos:start="205:2" pos:end="205:7">define</cpp:directive> <cpp:macro pos:start="205:9" pos:end="205:11"><name pos:start="205:9" pos:end="205:11">LEN</name></cpp:macro> <cpp:value pos:start="205:13" pos:end="205:16">1024</cpp:value></cpp:define>

        int j,k;

        double sine[LEN + tap_count];

        double filtered[LEN];

        double maxff=-2, minff=2, maxsf=-2, minsf=2;

        for(i=0; i&lt;LEN; i++){

            double ss=0, sf=0, ff=0;

            for(j=0; j&lt;LEN+tap_count; j++)

                sine[j]= cos(i*j*M_PI/LEN);

            for(j=0; j&lt;LEN; j++){

                double sum=0;

                ph=0;

                for(k=0; k&lt;tap_count; k++)

                    sum += filter[ph * tap_count + k] * sine[k+j];

                filtered[j]= sum / (1&lt;&lt;FILTER_SHIFT);

                ss+= sine[j + center] * sine[j + center];

                ff+= filtered[j] * filtered[j];

                sf+= sine[j + center] * filtered[j];

            }

            ss= sqrt(2*ss/LEN);

            ff= sqrt(2*ff/LEN);

            sf= 2*sf/LEN;

            maxff= FFMAX(maxff, ff);

            minff= FFMIN(minff, ff);

            maxsf= FFMAX(maxsf, sf);

            minsf= FFMIN(minsf, sf);

            if(i%11==0){

                av_log(NULL, AV_LOG_ERROR, "i:%4d ss:%f ff:%13.6e-%13.6e sf:%13.6e-%13.6e\n", i, ss, maxff, minff, maxsf, minsf);

                minff=minsf= 2;

                maxff=maxsf= -2;

            }

        }

    }

<cpp:endif pos:start="271:1" pos:end="271:6">#<cpp:directive pos:start="271:2" pos:end="271:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="275:5" pos:end="275:17"><expr pos:start="275:5" pos:end="275:16"><call pos:start="275:5" pos:end="275:16"><name pos:start="275:5" pos:end="275:11">av_free</name><argument_list pos:start="275:12" pos:end="275:16">(<argument pos:start="275:13" pos:end="275:15"><expr pos:start="275:13" pos:end="275:15"><name pos:start="275:13" pos:end="275:15">tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="277:5" pos:end="277:13">return <expr pos:start="277:12" pos:end="277:12"><literal type="number" pos:start="277:12" pos:end="277:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
