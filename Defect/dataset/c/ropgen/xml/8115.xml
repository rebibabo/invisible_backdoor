<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8115.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">kvm_physical_sync_dirty_bitmap</name><parameter_list pos:start="1:36" pos:end="1:95">(<parameter pos:start="1:37" pos:end="1:65"><decl pos:start="1:37" pos:end="1:65"><type pos:start="1:37" pos:end="1:65"><name pos:start="1:37" pos:end="1:54">target_phys_addr_t</name></type> <name pos:start="1:56" pos:end="1:65">start_addr</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:94"><decl pos:start="1:68" pos:end="1:94"><type pos:start="1:68" pos:end="1:94"><name pos:start="1:68" pos:end="1:85">target_phys_addr_t</name></type> <name pos:start="1:87" pos:end="1:94">end_addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:30">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">KVMState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:27">= <expr pos:start="5:19" pos:end="5:27"><name pos:start="5:19" pos:end="5:27">kvm_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">KVMDirtyLog</name></type> <name pos:start="7:17" pos:end="7:17">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">KVMSlot</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">mem</name> <init pos:start="9:18" pos:end="9:49">= <expr pos:start="9:20" pos:end="9:49"><call pos:start="9:20" pos:end="9:49"><name pos:start="9:20" pos:end="9:34">kvm_lookup_slot</name><argument_list pos:start="9:35" pos:end="9:49">(<argument pos:start="9:36" pos:end="9:36"><expr pos:start="9:36" pos:end="9:36"><name pos:start="9:36" pos:end="9:36">s</name></expr></argument>, <argument pos:start="9:39" pos:end="9:48"><expr pos:start="9:39" pos:end="9:48"><name pos:start="9:39" pos:end="9:48">start_addr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name></type> <name pos:start="11:19" pos:end="11:28">alloc_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">ram_addr_t</name></type> <name pos:start="13:16" pos:end="13:19">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22">target_phys_addr_t</name></type> <name pos:start="15:24" pos:end="15:32">phys_addr</name> <init pos:start="15:34" pos:end="15:45">= <expr pos:start="15:36" pos:end="15:45"><name pos:start="15:36" pos:end="15:45">start_addr</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:72"><expr pos:start="19:5" pos:end="19:71"><call pos:start="19:5" pos:end="19:71"><name pos:start="19:5" pos:end="19:11">dprintf</name><argument_list pos:start="19:12" pos:end="19:71">(<argument pos:start="19:13" pos:end="19:40"><expr pos:start="19:13" pos:end="19:40"><literal type="string" pos:start="19:13" pos:end="19:40">"sync addr: %llx into %lx\n"</literal></expr></argument>, <argument pos:start="19:43" pos:end="19:52"><expr pos:start="19:43" pos:end="19:52"><name pos:start="19:43" pos:end="19:52">start_addr</name></expr></argument>, <argument pos:start="19:55" pos:end="19:70"><expr pos:start="19:55" pos:end="19:70"><name pos:start="19:55" pos:end="19:70"><name pos:start="19:55" pos:end="19:57">mem</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:70">phys_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:20">(<expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:11">mem</name> <operator pos:start="21:13" pos:end="21:14">==</operator> <name pos:start="21:16" pos:end="21:19">NULL</name></expr>)</condition> <block pos:start="21:22" pos:end="27:5">{<block_content pos:start="23:13" pos:end="25:19">

            <expr_stmt pos:start="23:13" pos:end="23:71"><expr pos:start="23:13" pos:end="23:70"><call pos:start="23:13" pos:end="23:70"><name pos:start="23:13" pos:end="23:19">fprintf</name><argument_list pos:start="23:20" pos:end="23:70">(<argument pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:26">stderr</name></expr></argument>, <argument pos:start="23:29" pos:end="23:59"><expr pos:start="23:29" pos:end="23:59"><literal type="string" pos:start="23:29" pos:end="23:59">"BUG: %s: invalid parameters\n"</literal></expr></argument>, <argument pos:start="23:62" pos:end="23:69"><expr pos:start="23:62" pos:end="23:69"><name pos:start="23:62" pos:end="23:69">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:19">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:79"><expr pos:start="31:5" pos:end="31:78"><name pos:start="31:5" pos:end="31:14">alloc_size</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:33"><name pos:start="31:18" pos:end="31:20">mem</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:33">memory_size</name></name> <operator pos:start="31:35" pos:end="31:36">&gt;&gt;</operator> <name pos:start="31:38" pos:end="31:53">TARGET_PAGE_BITS</name> <operator pos:start="31:55" pos:end="31:55">/</operator> <sizeof pos:start="31:57" pos:end="31:78">sizeof<argument_list pos:start="31:63" pos:end="31:78">(<argument pos:start="31:64" pos:end="31:77"><expr pos:start="31:64" pos:end="31:77"><name pos:start="31:64" pos:end="31:77"><name pos:start="31:64" pos:end="31:64">d</name><operator pos:start="31:65" pos:end="31:65">.</operator><name pos:start="31:66" pos:end="31:77">dirty_bitmap</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:5">d</name><operator pos:start="33:6" pos:end="33:6">.</operator><name pos:start="33:7" pos:end="33:18">dirty_bitmap</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="33:45"><name pos:start="33:22" pos:end="33:33">qemu_mallocz</name><argument_list pos:start="33:34" pos:end="33:45">(<argument pos:start="33:35" pos:end="33:44"><expr pos:start="33:35" pos:end="33:44"><name pos:start="33:35" pos:end="33:44">alloc_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:5">d</name><operator pos:start="37:6" pos:end="37:6">.</operator><name pos:start="37:7" pos:end="37:10">slot</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:16">mem</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">slot</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:55"><expr pos:start="39:5" pos:end="41:54"><call pos:start="39:5" pos:end="41:54"><name pos:start="39:5" pos:end="39:11">dprintf</name><argument_list pos:start="39:12" pos:end="41:54">(<argument pos:start="39:13" pos:end="39:52"><expr pos:start="39:13" pos:end="39:52"><literal type="string" pos:start="39:13" pos:end="39:52">"slot %d, phys_addr %llx, uaddr: %llx\n"</literal></expr></argument>,

            <argument pos:start="41:13" pos:end="41:18"><expr pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">d</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:18">slot</name></name></expr></argument>, <argument pos:start="41:21" pos:end="41:35"><expr pos:start="41:21" pos:end="41:35"><name pos:start="41:21" pos:end="41:35"><name pos:start="41:21" pos:end="41:23">mem</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:35">start_addr</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:53"><expr pos:start="41:38" pos:end="41:53"><name pos:start="41:38" pos:end="41:53"><name pos:start="41:38" pos:end="41:40">mem</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:53">phys_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:53">(<expr pos:start="45:9" pos:end="45:52"><call pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:20">kvm_vm_ioctl</name><argument_list pos:start="45:21" pos:end="45:46">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">s</name></expr></argument>, <argument pos:start="45:25" pos:end="45:41"><expr pos:start="45:25" pos:end="45:41"><name pos:start="45:25" pos:end="45:41">KVM_GET_DIRTY_LOG</name></expr></argument>, <argument pos:start="45:44" pos:end="45:45"><expr pos:start="45:44" pos:end="45:45"><operator pos:start="45:44" pos:end="45:44">&amp;</operator><name pos:start="45:45" pos:end="45:45">d</name></expr></argument>)</argument_list></call> <operator pos:start="45:48" pos:end="45:49">==</operator> <operator pos:start="45:51" pos:end="45:51">-</operator><literal type="number" pos:start="45:52" pos:end="45:52">1</literal></expr>)</condition> <block pos:start="45:55" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><call pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:15">dprintf</name><argument_list pos:start="47:16" pos:end="47:43">(<argument pos:start="47:17" pos:end="47:35"><expr pos:start="47:17" pos:end="47:35"><literal type="string" pos:start="47:17" pos:end="47:35">"ioctl failed %d\n"</literal></expr></argument>, <argument pos:start="47:38" pos:end="47:42"><expr pos:start="47:38" pos:end="47:42"><name pos:start="47:38" pos:end="47:42">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:13">phys_addr</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:26">start_addr</name></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="71:5">for <control pos:start="57:9" pos:end="57:111">(<init pos:start="57:10" pos:end="57:33"><expr pos:start="57:10" pos:end="57:32"><name pos:start="57:10" pos:end="57:13">addr</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:19">mem</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:32">phys_offset</name></name></expr>;</init> <condition pos:start="57:35" pos:end="57:55"><expr pos:start="57:35" pos:end="57:54"><name pos:start="57:35" pos:end="57:43">phys_addr</name> <operator pos:start="57:45" pos:end="57:45">&lt;</operator> <name pos:start="57:47" pos:end="57:54">end_addr</name></expr>;</condition> <incr pos:start="57:57" pos:end="57:110"><expr pos:start="57:57" pos:end="57:84"><name pos:start="57:57" pos:end="57:65">phys_addr</name><operator pos:start="57:66" pos:end="57:67">+=</operator> <name pos:start="57:69" pos:end="57:84">TARGET_PAGE_SIZE</name></expr><operator pos:start="57:85" pos:end="57:85">,</operator> <expr pos:start="57:87" pos:end="57:110"><name pos:start="57:87" pos:end="57:90">addr</name> <operator pos:start="57:92" pos:end="57:93">+=</operator> <name pos:start="57:95" pos:end="57:110">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="57:113" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:48">

        <decl_stmt pos:start="59:9" pos:end="59:64"><decl pos:start="59:9" pos:end="59:63"><type pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:16">unsigned</name> <name pos:start="59:18" pos:end="59:21">long</name> <modifier pos:start="59:23" pos:end="59:23">*</modifier></type><name pos:start="59:24" pos:end="59:29">bitmap</name> <init pos:start="59:31" pos:end="59:63">= <expr pos:start="59:33" pos:end="59:63"><operator pos:start="59:33" pos:end="59:33">(</operator><name pos:start="59:34" pos:end="59:41">unsigned</name> <name pos:start="59:43" pos:end="59:46">long</name> <operator pos:start="59:48" pos:end="59:48">*</operator><operator pos:start="59:49" pos:end="59:49">)</operator><name pos:start="59:50" pos:end="59:63"><name pos:start="59:50" pos:end="59:50">d</name><operator pos:start="59:51" pos:end="59:51">.</operator><name pos:start="59:52" pos:end="59:63">dirty_bitmap</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:67"><decl pos:start="61:9" pos:end="61:66"><type pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">unsigned</name></type> <name pos:start="61:18" pos:end="61:19">nr</name> <init pos:start="61:21" pos:end="61:66">= <expr pos:start="61:23" pos:end="61:66"><operator pos:start="61:23" pos:end="61:23">(</operator><name pos:start="61:24" pos:end="61:32">phys_addr</name> <operator pos:start="61:34" pos:end="61:34">-</operator> <name pos:start="61:36" pos:end="61:45">start_addr</name><operator pos:start="61:46" pos:end="61:46">)</operator> <operator pos:start="61:48" pos:end="61:49">&gt;&gt;</operator> <name pos:start="61:51" pos:end="61:66">TARGET_PAGE_BITS</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:51"><decl pos:start="63:9" pos:end="63:50"><type pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:16">unsigned</name></type> <name pos:start="63:18" pos:end="63:21">word</name> <init pos:start="63:23" pos:end="63:50">= <expr pos:start="63:25" pos:end="63:50"><name pos:start="63:25" pos:end="63:26">nr</name> <operator pos:start="63:28" pos:end="63:28">/</operator> <operator pos:start="63:30" pos:end="63:30">(</operator><sizeof pos:start="63:31" pos:end="63:45">sizeof<argument_list pos:start="63:37" pos:end="63:45">(<argument pos:start="63:38" pos:end="63:44"><expr pos:start="63:38" pos:end="63:44"><operator pos:start="63:38" pos:end="63:38">*</operator><name pos:start="63:39" pos:end="63:44">bitmap</name></expr></argument>)</argument_list></sizeof> <operator pos:start="63:47" pos:end="63:47">*</operator> <literal type="number" pos:start="63:49" pos:end="63:49">8</literal><operator pos:start="63:50" pos:end="63:50">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:50"><decl pos:start="65:9" pos:end="65:49"><type pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:16">unsigned</name></type> <name pos:start="65:18" pos:end="65:20">bit</name> <init pos:start="65:22" pos:end="65:49">= <expr pos:start="65:24" pos:end="65:49"><name pos:start="65:24" pos:end="65:25">nr</name> <operator pos:start="65:27" pos:end="65:27">%</operator> <operator pos:start="65:29" pos:end="65:29">(</operator><sizeof pos:start="65:30" pos:end="65:44">sizeof<argument_list pos:start="65:36" pos:end="65:44">(<argument pos:start="65:37" pos:end="65:43"><expr pos:start="65:37" pos:end="65:43"><operator pos:start="65:37" pos:end="65:37">*</operator><name pos:start="65:38" pos:end="65:43">bitmap</name></expr></argument>)</argument_list></sizeof> <operator pos:start="65:46" pos:end="65:46">*</operator> <literal type="number" pos:start="65:48" pos:end="65:48">8</literal><operator pos:start="65:49" pos:end="65:49">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="67:9" pos:end="69:48"><if pos:start="67:9" pos:end="69:48">if <condition pos:start="67:12" pos:end="67:38">(<expr pos:start="67:13" pos:end="67:37"><operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:19">bitmap</name><index pos:start="67:20" pos:end="67:25">[<expr pos:start="67:21" pos:end="67:24"><name pos:start="67:21" pos:end="67:24">word</name></expr>]</index></name> <operator pos:start="67:27" pos:end="67:28">&gt;&gt;</operator> <name pos:start="67:30" pos:end="67:32">bit</name><operator pos:start="67:33" pos:end="67:33">)</operator> <operator pos:start="67:35" pos:end="67:35">&amp;</operator> <literal type="number" pos:start="67:37" pos:end="67:37">1</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:48"><block_content pos:start="69:13" pos:end="69:48">

            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><call pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:41">cpu_physical_memory_set_dirty</name><argument_list pos:start="69:42" pos:end="69:47">(<argument pos:start="69:43" pos:end="69:46"><expr pos:start="69:43" pos:end="69:46"><name pos:start="69:43" pos:end="69:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

<label pos:start="73:1" pos:end="73:4"><name pos:start="73:1" pos:end="73:3">out</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><call pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:13">qemu_free</name><argument_list pos:start="75:14" pos:end="75:29">(<argument pos:start="75:15" pos:end="75:28"><expr pos:start="75:15" pos:end="75:28"><name pos:start="75:15" pos:end="75:28"><name pos:start="75:15" pos:end="75:15">d</name><operator pos:start="75:16" pos:end="75:16">.</operator><name pos:start="75:17" pos:end="75:28">dirty_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
