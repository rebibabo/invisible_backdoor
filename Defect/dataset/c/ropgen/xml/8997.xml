<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8997.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">do_info</name><parameter_list pos:start="1:19" pos:end="1:72">(<parameter pos:start="1:20" pos:end="1:31"><decl pos:start="1:20" pos:end="1:31"><type pos:start="1:20" pos:end="1:31"><name pos:start="1:20" pos:end="1:26">Monitor</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">mon</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:44">QDict</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">qdict</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:60">QObject</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier><modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:71">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:19">mon_cmd_t</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">cmd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">item</name> <init pos:start="7:22" pos:end="7:55">= <expr pos:start="7:24" pos:end="7:55"><call pos:start="7:24" pos:end="7:55"><name pos:start="7:24" pos:end="7:40">qdict_get_try_str</name><argument_list pos:start="7:41" pos:end="7:55">(<argument pos:start="7:42" pos:end="7:46"><expr pos:start="7:42" pos:end="7:46"><name pos:start="7:42" pos:end="7:46">qdict</name></expr></argument>, <argument pos:start="7:49" pos:end="7:54"><expr pos:start="7:49" pos:end="7:54"><literal type="string" pos:start="7:49" pos:end="7:54">"item"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">item</name></expr>)</condition> <block pos:start="11:16" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:18">

        <goto pos:start="13:9" pos:end="13:18">goto <name pos:start="13:14" pos:end="13:17">help</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="19:5" pos:end="25:5">for <control pos:start="19:9" pos:end="19:51">(<init pos:start="19:10" pos:end="19:25"><expr pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:12">cmd</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:24">info_cmds</name></expr>;</init> <condition pos:start="19:27" pos:end="19:44"><expr pos:start="19:27" pos:end="19:43"><name pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:29">cmd</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">name</name></name> <operator pos:start="19:37" pos:end="19:38">!=</operator> <name pos:start="19:40" pos:end="19:43">NULL</name></expr>;</condition> <incr pos:start="19:46" pos:end="19:50"><expr pos:start="19:46" pos:end="19:50"><name pos:start="19:46" pos:end="19:48">cmd</name><operator pos:start="19:49" pos:end="19:50">++</operator></expr></incr>)</control> <block pos:start="19:53" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <if_stmt pos:start="21:9" pos:end="23:18"><if pos:start="21:9" pos:end="23:18">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:23">compare_cmd</name><argument_list pos:start="21:24" pos:end="21:40">(<argument pos:start="21:25" pos:end="21:28"><expr pos:start="21:25" pos:end="21:28"><name pos:start="21:25" pos:end="21:28">item</name></expr></argument>, <argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><name pos:start="21:31" pos:end="21:39"><name pos:start="21:31" pos:end="21:33">cmd</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:18"><block_content pos:start="23:13" pos:end="23:18">

            <break pos:start="23:13" pos:end="23:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">cmd</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">name</name></name> <operator pos:start="29:19" pos:end="29:20">==</operator> <name pos:start="29:22" pos:end="29:25">NULL</name></expr>)</condition> <block pos:start="29:28" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">help</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="73:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="37:38">(<expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:32">monitor_handler_is_async</name><argument_list pos:start="37:33" pos:end="37:37">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">cmd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:40" pos:end="53:5">{<block_content pos:start="39:9" pos:end="51:70">

        <expr_stmt pos:start="39:9" pos:end="39:42"><expr pos:start="39:9" pos:end="39:41"><call pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:31">user_async_info_handler</name><argument_list pos:start="39:32" pos:end="39:41">(<argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:35">mon</name></expr></argument>, <argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:40">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="41:9" pos:end="49:11">/*

         * Indicate that this command is asynchronous and will not return any

         * data (not even empty).  Instead, the data will be returned via a

         * completion callback.

         */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:70"><expr pos:start="51:9" pos:end="51:69"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:17">ret_data</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:69"><name pos:start="51:21" pos:end="51:38">qobject_from_jsonf</name><argument_list pos:start="51:39" pos:end="51:69">(<argument pos:start="51:40" pos:end="51:68"><expr pos:start="51:40" pos:end="51:68"><literal type="string" pos:start="51:40" pos:end="51:68">"{ '__mon_async': 'return' }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="69:5">else if <condition pos:start="53:15" pos:end="53:43">(<expr pos:start="53:16" pos:end="53:42"><call pos:start="53:16" pos:end="53:42"><name pos:start="53:16" pos:end="53:37">monitor_handler_ported</name><argument_list pos:start="53:38" pos:end="53:42">(<argument pos:start="53:39" pos:end="53:41"><expr pos:start="53:39" pos:end="53:41"><name pos:start="53:39" pos:end="53:41">cmd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:45" pos:end="69:5">{<block_content pos:start="55:9" pos:end="67:9">

        <decl_stmt pos:start="55:9" pos:end="55:34"><decl pos:start="55:9" pos:end="55:33"><type pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:15">QObject</name> <modifier pos:start="55:17" pos:end="55:17">*</modifier></type><name pos:start="55:18" pos:end="55:26">info_data</name> <init pos:start="55:28" pos:end="55:33">= <expr pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:33">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:48"><expr pos:start="59:9" pos:end="59:47"><call pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:11">cmd</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:21">mhandler</name><operator pos:start="59:22" pos:end="59:22">.</operator><name pos:start="59:23" pos:end="59:30">info_new</name></name><argument_list pos:start="59:31" pos:end="59:47">(<argument pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:34">mon</name></expr></argument>, <argument pos:start="59:37" pos:end="59:46"><expr pos:start="59:37" pos:end="59:46"><operator pos:start="59:37" pos:end="59:37">&amp;</operator><name pos:start="59:38" pos:end="59:46">info_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:22">(<expr pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:21">info_data</name></expr>)</condition> <block pos:start="61:24" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:38">

            <expr_stmt pos:start="63:13" pos:end="63:44"><expr pos:start="63:13" pos:end="63:43"><call pos:start="63:13" pos:end="63:43"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:15">cmd</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:27">user_print</name></name><argument_list pos:start="63:28" pos:end="63:43">(<argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:31">mon</name></expr></argument>, <argument pos:start="63:34" pos:end="63:42"><expr pos:start="63:34" pos:end="63:42"><name pos:start="63:34" pos:end="63:42">info_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:38"><expr pos:start="65:13" pos:end="65:37"><call pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:26">qobject_decref</name><argument_list pos:start="65:27" pos:end="65:37">(<argument pos:start="65:28" pos:end="65:36"><expr pos:start="65:28" pos:end="65:36"><name pos:start="65:28" pos:end="65:36">info_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:32">

        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><call pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:11">cmd</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:21">mhandler</name><operator pos:start="71:22" pos:end="71:22">.</operator><name pos:start="71:23" pos:end="71:26">info</name></name><argument_list pos:start="71:27" pos:end="71:31">(<argument pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:30">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>



<label pos:start="81:1" pos:end="81:5"><name pos:start="81:1" pos:end="81:4">help</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><call pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:12">help_cmd</name><argument_list pos:start="83:13" pos:end="83:25">(<argument pos:start="83:14" pos:end="83:16"><expr pos:start="83:14" pos:end="83:16"><name pos:start="83:14" pos:end="83:16">mon</name></expr></argument>, <argument pos:start="83:19" pos:end="83:24"><expr pos:start="83:19" pos:end="83:24"><literal type="string" pos:start="83:19" pos:end="83:24">"info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
