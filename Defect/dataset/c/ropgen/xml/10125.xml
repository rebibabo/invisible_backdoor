<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10125.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">SH7750State</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:24">sh7750_init</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">CPUSH4State</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type> <name pos:start="1:40" pos:end="1:42">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SH7750State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:24">sh7750_io_memory</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">cpu_model</name> <init pos:start="9:19" pos:end="9:34">= <expr pos:start="9:21" pos:end="9:34"><name pos:start="9:21" pos:end="9:34">SH_CPU_SH7751R</name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="9:37" pos:end="9:49">/* for now */</comment>



    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:20">qemu_mallocz</name><argument_list pos:start="13:21" pos:end="13:41">(<argument pos:start="13:22" pos:end="13:40"><expr pos:start="13:22" pos:end="13:40"><sizeof pos:start="13:22" pos:end="13:40">sizeof<argument_list pos:start="13:28" pos:end="13:40">(<argument pos:start="13:29" pos:end="13:39"><expr pos:start="13:29" pos:end="13:39"><name pos:start="13:29" pos:end="13:39">SH7750State</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">cpu</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:16">cpu</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">periph_freq</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:29">60000000</literal></expr>;</expr_stmt>	<comment type="block" pos:start="17:33" pos:end="17:43">/* 60MHz */</comment>

    <expr_stmt pos:start="19:5" pos:end="23:67"><expr pos:start="19:5" pos:end="23:66"><name pos:start="19:5" pos:end="19:20">sh7750_io_memory</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <call pos:start="19:24" pos:end="23:66"><name pos:start="19:24" pos:end="19:45">cpu_register_io_memory</name><argument_list pos:start="19:46" pos:end="23:66">(<argument pos:start="19:47" pos:end="19:47"><expr pos:start="19:47" pos:end="19:47"><literal type="number" pos:start="19:47" pos:end="19:47">0</literal></expr></argument>,

					      <argument pos:start="21:47" pos:end="21:61"><expr pos:start="21:47" pos:end="21:61"><name pos:start="21:47" pos:end="21:61">sh7750_mem_read</name></expr></argument>,

					      <argument pos:start="23:47" pos:end="23:62"><expr pos:start="23:47" pos:end="23:62"><name pos:start="23:47" pos:end="23:62">sh7750_mem_write</name></expr></argument>, <argument pos:start="23:65" pos:end="23:65"><expr pos:start="23:65" pos:end="23:65"><name pos:start="23:65" pos:end="23:65">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:75"><expr pos:start="25:5" pos:end="25:74"><call pos:start="25:5" pos:end="25:74"><name pos:start="25:5" pos:end="25:32">cpu_register_physical_memory</name><argument_list pos:start="25:33" pos:end="25:74">(<argument pos:start="25:34" pos:end="25:43"><expr pos:start="25:34" pos:end="25:43"><literal type="number" pos:start="25:34" pos:end="25:43">0x1c000000</literal></expr></argument>, <argument pos:start="25:46" pos:end="25:55"><expr pos:start="25:46" pos:end="25:55"><literal type="number" pos:start="25:46" pos:end="25:55">0x04000000</literal></expr></argument>, <argument pos:start="25:58" pos:end="25:73"><expr pos:start="25:58" pos:end="25:73"><name pos:start="25:58" pos:end="25:73">sh7750_io_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="33:46"><expr pos:start="29:5" pos:end="33:45"><call pos:start="29:5" pos:end="33:45"><name pos:start="29:5" pos:end="29:16">sh_intc_init</name><argument_list pos:start="29:17" pos:end="33:45">(<argument pos:start="29:18" pos:end="29:25"><expr pos:start="29:18" pos:end="29:25"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:25"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:25">intc</name></name></expr></argument>, <argument pos:start="29:28" pos:end="29:37"><expr pos:start="29:28" pos:end="29:37"><name pos:start="29:28" pos:end="29:37">NR_SOURCES</name></expr></argument>,

		 <argument pos:start="31:18" pos:end="31:44"><expr pos:start="31:18" pos:end="31:44"><call pos:start="31:18" pos:end="31:44"><name pos:start="31:18" pos:end="31:28">_INTC_ARRAY</name><argument_list pos:start="31:29" pos:end="31:44">(<argument pos:start="31:30" pos:end="31:43"><expr pos:start="31:30" pos:end="31:43"><name pos:start="31:30" pos:end="31:43">mask_registers</name></expr></argument>)</argument_list></call></expr></argument>,

		 <argument pos:start="33:18" pos:end="33:44"><expr pos:start="33:18" pos:end="33:44"><call pos:start="33:18" pos:end="33:44"><name pos:start="33:18" pos:end="33:28">_INTC_ARRAY</name><argument_list pos:start="33:29" pos:end="33:44">(<argument pos:start="33:30" pos:end="33:43"><expr pos:start="33:30" pos:end="33:43"><name pos:start="33:30" pos:end="33:43">prio_registers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="41:50"><expr pos:start="37:5" pos:end="41:49"><call pos:start="37:5" pos:end="41:49"><name pos:start="37:5" pos:end="37:28">sh_intc_register_sources</name><argument_list pos:start="37:29" pos:end="41:49">(<argument pos:start="37:30" pos:end="37:37"><expr pos:start="37:30" pos:end="37:37"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:37"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:37">intc</name></name></expr></argument>, 

			     <argument pos:start="39:30" pos:end="39:49"><expr pos:start="39:30" pos:end="39:49"><call pos:start="39:30" pos:end="39:49"><name pos:start="39:30" pos:end="39:40">_INTC_ARRAY</name><argument_list pos:start="39:41" pos:end="39:49">(<argument pos:start="39:42" pos:end="39:48"><expr pos:start="39:42" pos:end="39:48"><name pos:start="39:42" pos:end="39:48">vectors</name></expr></argument>)</argument_list></call></expr></argument>,

			     <argument pos:start="41:30" pos:end="41:48"><expr pos:start="41:30" pos:end="41:48"><call pos:start="41:30" pos:end="41:48"><name pos:start="41:30" pos:end="41:40">_INTC_ARRAY</name><argument_list pos:start="41:41" pos:end="41:48">(<argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><name pos:start="41:42" pos:end="41:47">groups</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:65"><expr pos:start="45:5" pos:end="45:64"><call pos:start="45:5" pos:end="45:64"><name pos:start="45:5" pos:end="45:18">sh_serial_init</name><argument_list pos:start="45:19" pos:end="45:64">(<argument pos:start="45:20" pos:end="45:29"><expr pos:start="45:20" pos:end="45:29"><literal type="number" pos:start="45:20" pos:end="45:29">0x1fe00000</literal></expr></argument>, <argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr></argument>, <argument pos:start="45:35" pos:end="45:48"><expr pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:48">periph_freq</name></name></expr></argument>, <argument pos:start="45:51" pos:end="45:63"><expr pos:start="45:51" pos:end="45:63"><name pos:start="45:51" pos:end="45:63"><name pos:start="45:51" pos:end="45:60">serial_hds</name><index pos:start="45:61" pos:end="45:63">[<expr pos:start="45:62" pos:end="45:62"><literal type="number" pos:start="45:62" pos:end="45:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:50"><expr pos:start="47:5" pos:end="49:49"><call pos:start="47:5" pos:end="49:49"><name pos:start="47:5" pos:end="47:18">sh_serial_init</name><argument_list pos:start="47:19" pos:end="49:49">(<argument pos:start="47:20" pos:end="47:29"><expr pos:start="47:20" pos:end="47:29"><literal type="number" pos:start="47:20" pos:end="47:29">0x1fe80000</literal></expr></argument>, <argument pos:start="47:32" pos:end="47:50"><expr pos:start="47:32" pos:end="47:50"><name pos:start="47:32" pos:end="47:50">SH_SERIAL_FEAT_SCIF</name></expr></argument>,

		   <argument pos:start="49:20" pos:end="49:33"><expr pos:start="49:20" pos:end="49:33"><name pos:start="49:20" pos:end="49:33"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:33">periph_freq</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:48"><expr pos:start="49:36" pos:end="49:48"><name pos:start="49:36" pos:end="49:48"><name pos:start="49:36" pos:end="49:45">serial_hds</name><index pos:start="49:46" pos:end="49:48">[<expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="57:32"><expr pos:start="53:5" pos:end="57:31"><call pos:start="53:5" pos:end="57:31"><name pos:start="53:5" pos:end="53:15">tmu012_init</name><argument_list pos:start="53:16" pos:end="57:31">(<argument pos:start="53:17" pos:end="53:26"><expr pos:start="53:17" pos:end="53:26"><literal type="number" pos:start="53:17" pos:end="53:26">0x1fd80000</literal></expr></argument>,

		<argument pos:start="55:17" pos:end="55:73"><expr pos:start="55:17" pos:end="55:73"><name pos:start="55:17" pos:end="55:32">TMU012_FEAT_TOCR</name> <operator pos:start="55:34" pos:end="55:34">|</operator> <name pos:start="55:36" pos:end="55:52">TMU012_FEAT_3CHAN</name> <operator pos:start="55:54" pos:end="55:54">|</operator> <name pos:start="55:56" pos:end="55:73">TMU012_FEAT_EXTCLK</name></expr></argument>,

		<argument pos:start="57:17" pos:end="57:30"><expr pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:30">periph_freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:69">(<expr pos:start="63:9" pos:end="63:68"><name pos:start="63:9" pos:end="63:17">cpu_model</name> <operator pos:start="63:19" pos:end="63:19">&amp;</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:34">SH_CPU_SH7750</name> <operator pos:start="63:36" pos:end="63:36">|</operator> <name pos:start="63:38" pos:end="63:51">SH_CPU_SH7750S</name> <operator pos:start="63:53" pos:end="63:53">|</operator> <name pos:start="63:55" pos:end="63:67">SH_CPU_SH7751</name><operator pos:start="63:68" pos:end="63:68">)</operator></expr>)</condition> <block pos:start="63:71" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:59">

        <expr_stmt pos:start="65:9" pos:end="69:59"><expr pos:start="65:9" pos:end="69:58"><call pos:start="65:9" pos:end="69:58"><name pos:start="65:9" pos:end="65:32">sh_intc_register_sources</name><argument_list pos:start="65:33" pos:end="69:58">(<argument pos:start="65:34" pos:end="65:41"><expr pos:start="65:34" pos:end="65:41"><operator pos:start="65:34" pos:end="65:34">&amp;</operator><name pos:start="65:35" pos:end="65:41"><name pos:start="65:35" pos:end="65:35">s</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:41">intc</name></name></expr></argument>, 

				 <argument pos:start="67:34" pos:end="67:58"><expr pos:start="67:34" pos:end="67:58"><call pos:start="67:34" pos:end="67:58"><name pos:start="67:34" pos:end="67:44">_INTC_ARRAY</name><argument_list pos:start="67:45" pos:end="67:58">(<argument pos:start="67:46" pos:end="67:57"><expr pos:start="67:46" pos:end="67:57"><name pos:start="67:46" pos:end="67:57">vectors_dma4</name></expr></argument>)</argument_list></call></expr></argument>,

				 <argument pos:start="69:34" pos:end="69:57"><expr pos:start="69:34" pos:end="69:57"><call pos:start="69:34" pos:end="69:57"><name pos:start="69:34" pos:end="69:44">_INTC_ARRAY</name><argument_list pos:start="69:45" pos:end="69:57">(<argument pos:start="69:46" pos:end="69:56"><expr pos:start="69:46" pos:end="69:56"><name pos:start="69:46" pos:end="69:56">groups_dma4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:54">(<expr pos:start="75:9" pos:end="75:53"><name pos:start="75:9" pos:end="75:17">cpu_model</name> <operator pos:start="75:19" pos:end="75:19">&amp;</operator> <operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:35">SH_CPU_SH7750R</name> <operator pos:start="75:37" pos:end="75:37">|</operator> <name pos:start="75:39" pos:end="75:52">SH_CPU_SH7751R</name><operator pos:start="75:53" pos:end="75:53">)</operator></expr>)</condition> <block pos:start="75:56" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:59">

        <expr_stmt pos:start="77:9" pos:end="81:59"><expr pos:start="77:9" pos:end="81:58"><call pos:start="77:9" pos:end="81:58"><name pos:start="77:9" pos:end="77:32">sh_intc_register_sources</name><argument_list pos:start="77:33" pos:end="81:58">(<argument pos:start="77:34" pos:end="77:41"><expr pos:start="77:34" pos:end="77:41"><operator pos:start="77:34" pos:end="77:34">&amp;</operator><name pos:start="77:35" pos:end="77:41"><name pos:start="77:35" pos:end="77:35">s</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:41">intc</name></name></expr></argument>, 

				 <argument pos:start="79:34" pos:end="79:58"><expr pos:start="79:34" pos:end="79:58"><call pos:start="79:34" pos:end="79:58"><name pos:start="79:34" pos:end="79:44">_INTC_ARRAY</name><argument_list pos:start="79:45" pos:end="79:58">(<argument pos:start="79:46" pos:end="79:57"><expr pos:start="79:46" pos:end="79:57"><name pos:start="79:46" pos:end="79:57">vectors_dma8</name></expr></argument>)</argument_list></call></expr></argument>,

				 <argument pos:start="81:34" pos:end="81:57"><expr pos:start="81:34" pos:end="81:57"><call pos:start="81:34" pos:end="81:57"><name pos:start="81:34" pos:end="81:44">_INTC_ARRAY</name><argument_list pos:start="81:45" pos:end="81:57">(<argument pos:start="81:46" pos:end="81:56"><expr pos:start="81:46" pos:end="81:56"><name pos:start="81:46" pos:end="81:56">groups_dma8</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="97:5"><if pos:start="87:5" pos:end="97:5">if <condition pos:start="87:8" pos:end="87:70">(<expr pos:start="87:9" pos:end="87:69"><name pos:start="87:9" pos:end="87:17">cpu_model</name> <operator pos:start="87:19" pos:end="87:19">&amp;</operator> <operator pos:start="87:21" pos:end="87:21">(</operator><name pos:start="87:22" pos:end="87:35">SH_CPU_SH7750R</name> <operator pos:start="87:37" pos:end="87:37">|</operator> <name pos:start="87:39" pos:end="87:51">SH_CPU_SH7751</name> <operator pos:start="87:53" pos:end="87:53">|</operator> <name pos:start="87:55" pos:end="87:68">SH_CPU_SH7751R</name><operator pos:start="87:69" pos:end="87:69">)</operator></expr>)</condition> <block pos:start="87:72" pos:end="97:5">{<block_content pos:start="89:9" pos:end="95:51">

        <expr_stmt pos:start="89:9" pos:end="93:52"><expr pos:start="89:9" pos:end="93:51"><call pos:start="89:9" pos:end="93:51"><name pos:start="89:9" pos:end="89:32">sh_intc_register_sources</name><argument_list pos:start="89:33" pos:end="93:51">(<argument pos:start="89:34" pos:end="89:41"><expr pos:start="89:34" pos:end="89:41"><operator pos:start="89:34" pos:end="89:34">&amp;</operator><name pos:start="89:35" pos:end="89:41"><name pos:start="89:35" pos:end="89:35">s</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:41">intc</name></name></expr></argument>, 

				 <argument pos:start="91:34" pos:end="91:59"><expr pos:start="91:34" pos:end="91:59"><call pos:start="91:34" pos:end="91:59"><name pos:start="91:34" pos:end="91:44">_INTC_ARRAY</name><argument_list pos:start="91:45" pos:end="91:59">(<argument pos:start="91:46" pos:end="91:58"><expr pos:start="91:46" pos:end="91:58"><name pos:start="91:46" pos:end="91:58">vectors_tmu34</name></expr></argument>)</argument_list></call></expr></argument>,

				 <argument pos:start="93:34" pos:end="93:50"><expr pos:start="93:34" pos:end="93:50"><call pos:start="93:34" pos:end="93:50"><name pos:start="93:34" pos:end="93:44">_INTC_ARRAY</name><argument_list pos:start="93:45" pos:end="93:50">(<argument pos:start="93:46" pos:end="93:49"><expr pos:start="93:46" pos:end="93:49"><name pos:start="93:46" pos:end="93:49">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:51"><expr pos:start="95:9" pos:end="95:50"><call pos:start="95:9" pos:end="95:50"><name pos:start="95:9" pos:end="95:19">tmu012_init</name><argument_list pos:start="95:20" pos:end="95:50">(<argument pos:start="95:21" pos:end="95:30"><expr pos:start="95:21" pos:end="95:30"><literal type="number" pos:start="95:21" pos:end="95:30">0x1e100000</literal></expr></argument>, <argument pos:start="95:33" pos:end="95:33"><expr pos:start="95:33" pos:end="95:33"><literal type="number" pos:start="95:33" pos:end="95:33">0</literal></expr></argument>, <argument pos:start="95:36" pos:end="95:49"><expr pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:36">s</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:49">periph_freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="109:5"><if pos:start="101:5" pos:end="109:5">if <condition pos:start="101:8" pos:end="101:40">(<expr pos:start="101:9" pos:end="101:39"><name pos:start="101:9" pos:end="101:17">cpu_model</name> <operator pos:start="101:19" pos:end="101:19">&amp;</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:38">SH_CPU_SH7751_ALL</name><operator pos:start="101:39" pos:end="101:39">)</operator></expr>)</condition> <block pos:start="101:42" pos:end="109:5">{<block_content pos:start="103:9" pos:end="107:58">

        <expr_stmt pos:start="103:9" pos:end="107:58"><expr pos:start="103:9" pos:end="107:57"><call pos:start="103:9" pos:end="107:57"><name pos:start="103:9" pos:end="103:32">sh_intc_register_sources</name><argument_list pos:start="103:33" pos:end="107:57">(<argument pos:start="103:34" pos:end="103:41"><expr pos:start="103:34" pos:end="103:41"><operator pos:start="103:34" pos:end="103:34">&amp;</operator><name pos:start="103:35" pos:end="103:41"><name pos:start="103:35" pos:end="103:35">s</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:41">intc</name></name></expr></argument>, 

				 <argument pos:start="105:34" pos:end="105:57"><expr pos:start="105:34" pos:end="105:57"><call pos:start="105:34" pos:end="105:57"><name pos:start="105:34" pos:end="105:44">_INTC_ARRAY</name><argument_list pos:start="105:45" pos:end="105:57">(<argument pos:start="105:46" pos:end="105:56"><expr pos:start="105:46" pos:end="105:56"><name pos:start="105:46" pos:end="105:56">vectors_pci</name></expr></argument>)</argument_list></call></expr></argument>,

				 <argument pos:start="107:34" pos:end="107:56"><expr pos:start="107:34" pos:end="107:56"><call pos:start="107:34" pos:end="107:56"><name pos:start="107:34" pos:end="107:44">_INTC_ARRAY</name><argument_list pos:start="107:45" pos:end="107:56">(<argument pos:start="107:46" pos:end="107:55"><expr pos:start="107:46" pos:end="107:55"><name pos:start="107:46" pos:end="107:55">groups_pci</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:74">(<expr pos:start="113:9" pos:end="113:73"><name pos:start="113:9" pos:end="113:17">cpu_model</name> <operator pos:start="113:19" pos:end="113:19">&amp;</operator> <operator pos:start="113:21" pos:end="113:21">(</operator><name pos:start="113:22" pos:end="113:35">SH_CPU_SH7750S</name> <operator pos:start="113:37" pos:end="113:37">|</operator> <name pos:start="113:39" pos:end="113:52">SH_CPU_SH7750R</name> <operator pos:start="113:54" pos:end="113:54">|</operator> <name pos:start="113:56" pos:end="113:72">SH_CPU_SH7751_ALL</name><operator pos:start="113:73" pos:end="113:73">)</operator></expr>)</condition> <block pos:start="113:76" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:52">

        <expr_stmt pos:start="115:9" pos:end="119:52"><expr pos:start="115:9" pos:end="119:51"><call pos:start="115:9" pos:end="119:51"><name pos:start="115:9" pos:end="115:32">sh_intc_register_sources</name><argument_list pos:start="115:33" pos:end="119:51">(<argument pos:start="115:34" pos:end="115:41"><expr pos:start="115:34" pos:end="115:41"><operator pos:start="115:34" pos:end="115:34">&amp;</operator><name pos:start="115:35" pos:end="115:41"><name pos:start="115:35" pos:end="115:35">s</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:41">intc</name></name></expr></argument>, 

				 <argument pos:start="117:34" pos:end="117:58"><expr pos:start="117:34" pos:end="117:58"><call pos:start="117:34" pos:end="117:58"><name pos:start="117:34" pos:end="117:44">_INTC_ARRAY</name><argument_list pos:start="117:45" pos:end="117:58">(<argument pos:start="117:46" pos:end="117:57"><expr pos:start="117:46" pos:end="117:57"><name pos:start="117:46" pos:end="117:57">vectors_irlm</name></expr></argument>)</argument_list></call></expr></argument>,

				 <argument pos:start="119:34" pos:end="119:50"><expr pos:start="119:34" pos:end="119:50"><call pos:start="119:34" pos:end="119:50"><name pos:start="119:34" pos:end="119:44">_INTC_ARRAY</name><argument_list pos:start="119:45" pos:end="119:50">(<argument pos:start="119:46" pos:end="119:49"><expr pos:start="119:46" pos:end="119:49"><name pos:start="119:46" pos:end="119:49">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><name pos:start="125:12" pos:end="125:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
