<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7974.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">spapr_populate_pci_child_dt</name><parameter_list pos:start="1:39" pos:end="3:59">(<parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:48">PCIDevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dev</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">fdt</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:76">offset</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:58"><decl pos:start="3:40" pos:end="3:58"><type pos:start="3:40" pos:end="3:58"><name pos:start="3:40" pos:end="3:52">sPAPRPHBState</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">sphb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="217:1">{<block_content pos:start="7:5" pos:end="215:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">ResourceProps</name></type> <name pos:start="7:19" pos:end="7:20">rp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:18">is_bridge</name> <init pos:start="9:20" pos:end="9:26">= <expr pos:start="9:22" pos:end="9:26"><name pos:start="9:22" pos:end="9:26">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">pci_status</name></decl>, <decl pos:start="11:21" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:23">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">buf</name> <init pos:start="13:15" pos:end="13:20">= <expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:20">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:64"><decl pos:start="15:5" pos:end="15:63"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:22">drc_index</name> <init pos:start="15:24" pos:end="15:63">= <expr pos:start="15:26" pos:end="15:63"><call pos:start="15:26" pos:end="15:63"><name pos:start="15:26" pos:end="15:52">spapr_phb_get_pci_drc_index</name><argument_list pos:start="15:53" pos:end="15:63">(<argument pos:start="15:54" pos:end="15:57"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">sphb</name></expr></argument>, <argument pos:start="15:60" pos:end="15:62"><expr pos:start="15:60" pos:end="15:62"><name pos:start="15:60" pos:end="15:62">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:69"><decl pos:start="17:5" pos:end="17:68"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:18">ccode</name> <init pos:start="17:20" pos:end="17:68">= <expr pos:start="17:22" pos:end="17:68"><call pos:start="17:22" pos:end="17:68"><name pos:start="17:22" pos:end="17:44">pci_default_read_config</name><argument_list pos:start="17:45" pos:end="17:68">(<argument pos:start="17:46" pos:end="17:48"><expr pos:start="17:46" pos:end="17:48"><name pos:start="17:46" pos:end="17:48">dev</name></expr></argument>, <argument pos:start="17:51" pos:end="17:64"><expr pos:start="17:51" pos:end="17:64"><name pos:start="17:51" pos:end="17:64">PCI_CLASS_PROG</name></expr></argument>, <argument pos:start="17:67" pos:end="17:67"><expr pos:start="17:67" pos:end="17:67"><literal type="number" pos:start="17:67" pos:end="17:67">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20">max_msi</name></decl>, <decl pos:start="19:23" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:23" pos:end="19:30">max_msix</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="25:31">(<expr pos:start="23:9" pos:end="25:30"><call pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:31">pci_default_read_config</name><argument_list pos:start="23:32" pos:end="23:56">(<argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:35">dev</name></expr></argument>, <argument pos:start="23:38" pos:end="23:52"><expr pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:52">PCI_HEADER_TYPE</name></expr></argument>, <argument pos:start="23:55" pos:end="23:55"><expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">1</literal></expr></argument>)</argument_list></call> <operator pos:start="23:58" pos:end="23:59">==</operator>

        <name pos:start="25:9" pos:end="25:30">PCI_HEADER_TYPE_BRIDGE</name></expr>)</condition> <block pos:start="25:33" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:25">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">is_bridge</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:24">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:57">/* in accordance with PAPR+ v2.7 13.6.3, Table 181 */</comment>

    <expr_stmt pos:start="35:5" pos:end="37:75"><expr pos:start="35:5" pos:end="37:74"><call pos:start="35:5" pos:end="37:74"><name pos:start="35:5" pos:end="35:8">_FDT</name><argument_list pos:start="35:9" pos:end="37:74">(<argument pos:start="35:10" pos:end="37:73"><expr pos:start="35:10" pos:end="37:73"><call pos:start="35:10" pos:end="37:73"><name pos:start="35:10" pos:end="35:25">fdt_setprop_cell</name><argument_list pos:start="35:26" pos:end="37:73">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">fdt</name></expr></argument>, <argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37">offset</name></expr></argument>, <argument pos:start="35:40" pos:end="35:50"><expr pos:start="35:40" pos:end="35:50"><literal type="string" pos:start="35:40" pos:end="35:50">"vendor-id"</literal></expr></argument>,

                          <argument pos:start="37:27" pos:end="37:72"><expr pos:start="37:27" pos:end="37:72"><call pos:start="37:27" pos:end="37:72"><name pos:start="37:27" pos:end="37:49">pci_default_read_config</name><argument_list pos:start="37:50" pos:end="37:72">(<argument pos:start="37:51" pos:end="37:53"><expr pos:start="37:51" pos:end="37:53"><name pos:start="37:51" pos:end="37:53">dev</name></expr></argument>, <argument pos:start="37:56" pos:end="37:68"><expr pos:start="37:56" pos:end="37:68"><name pos:start="37:56" pos:end="37:68">PCI_VENDOR_ID</name></expr></argument>, <argument pos:start="37:71" pos:end="37:71"><expr pos:start="37:71" pos:end="37:71"><literal type="number" pos:start="37:71" pos:end="37:71">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:75"><expr pos:start="39:5" pos:end="41:74"><call pos:start="39:5" pos:end="41:74"><name pos:start="39:5" pos:end="39:8">_FDT</name><argument_list pos:start="39:9" pos:end="41:74">(<argument pos:start="39:10" pos:end="41:73"><expr pos:start="39:10" pos:end="41:73"><call pos:start="39:10" pos:end="41:73"><name pos:start="39:10" pos:end="39:25">fdt_setprop_cell</name><argument_list pos:start="39:26" pos:end="41:73">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">fdt</name></expr></argument>, <argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">offset</name></expr></argument>, <argument pos:start="39:40" pos:end="39:50"><expr pos:start="39:40" pos:end="39:50"><literal type="string" pos:start="39:40" pos:end="39:50">"device-id"</literal></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:72"><expr pos:start="41:27" pos:end="41:72"><call pos:start="41:27" pos:end="41:72"><name pos:start="41:27" pos:end="41:49">pci_default_read_config</name><argument_list pos:start="41:50" pos:end="41:72">(<argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><name pos:start="41:51" pos:end="41:53">dev</name></expr></argument>, <argument pos:start="41:56" pos:end="41:68"><expr pos:start="41:56" pos:end="41:68"><name pos:start="41:56" pos:end="41:68">PCI_DEVICE_ID</name></expr></argument>, <argument pos:start="41:71" pos:end="41:71"><expr pos:start="41:71" pos:end="41:71"><literal type="number" pos:start="41:71" pos:end="41:71">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:77"><expr pos:start="43:5" pos:end="45:76"><call pos:start="43:5" pos:end="45:76"><name pos:start="43:5" pos:end="43:8">_FDT</name><argument_list pos:start="43:9" pos:end="45:76">(<argument pos:start="43:10" pos:end="45:75"><expr pos:start="43:10" pos:end="45:75"><call pos:start="43:10" pos:end="45:75"><name pos:start="43:10" pos:end="43:25">fdt_setprop_cell</name><argument_list pos:start="43:26" pos:end="45:75">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">fdt</name></expr></argument>, <argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:37">offset</name></expr></argument>, <argument pos:start="43:40" pos:end="43:52"><expr pos:start="43:40" pos:end="43:52"><literal type="string" pos:start="43:40" pos:end="43:52">"revision-id"</literal></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:74"><expr pos:start="45:27" pos:end="45:74"><call pos:start="45:27" pos:end="45:74"><name pos:start="45:27" pos:end="45:49">pci_default_read_config</name><argument_list pos:start="45:50" pos:end="45:74">(<argument pos:start="45:51" pos:end="45:53"><expr pos:start="45:51" pos:end="45:53"><name pos:start="45:51" pos:end="45:53">dev</name></expr></argument>, <argument pos:start="45:56" pos:end="45:70"><expr pos:start="45:56" pos:end="45:70"><name pos:start="45:56" pos:end="45:70">PCI_REVISION_ID</name></expr></argument>, <argument pos:start="45:73" pos:end="45:73"><expr pos:start="45:73" pos:end="45:73"><literal type="number" pos:start="45:73" pos:end="45:73">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:61"><expr pos:start="47:5" pos:end="47:60"><call pos:start="47:5" pos:end="47:60"><name pos:start="47:5" pos:end="47:8">_FDT</name><argument_list pos:start="47:9" pos:end="47:60">(<argument pos:start="47:10" pos:end="47:59"><expr pos:start="47:10" pos:end="47:59"><call pos:start="47:10" pos:end="47:59"><name pos:start="47:10" pos:end="47:25">fdt_setprop_cell</name><argument_list pos:start="47:26" pos:end="47:59">(<argument pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:29">fdt</name></expr></argument>, <argument pos:start="47:32" pos:end="47:37"><expr pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:37">offset</name></expr></argument>, <argument pos:start="47:40" pos:end="47:51"><expr pos:start="47:40" pos:end="47:51"><literal type="string" pos:start="47:40" pos:end="47:51">"class-code"</literal></expr></argument>, <argument pos:start="47:54" pos:end="47:58"><expr pos:start="47:54" pos:end="47:58"><name pos:start="47:54" pos:end="47:58">ccode</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:59">(<expr pos:start="49:9" pos:end="49:58"><call pos:start="49:9" pos:end="49:58"><name pos:start="49:9" pos:end="49:31">pci_default_read_config</name><argument_list pos:start="49:32" pos:end="49:58">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">dev</name></expr></argument>, <argument pos:start="49:38" pos:end="49:54"><expr pos:start="49:38" pos:end="49:54"><name pos:start="49:38" pos:end="49:54">PCI_INTERRUPT_PIN</name></expr></argument>, <argument pos:start="49:57" pos:end="49:57"><expr pos:start="49:57" pos:end="49:57"><literal type="number" pos:start="49:57" pos:end="49:57">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:61" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:70">

        <expr_stmt pos:start="51:9" pos:end="53:70"><expr pos:start="51:9" pos:end="53:69"><call pos:start="51:9" pos:end="53:69"><name pos:start="51:9" pos:end="51:12">_FDT</name><argument_list pos:start="51:13" pos:end="53:69">(<argument pos:start="51:14" pos:end="53:68"><expr pos:start="51:14" pos:end="53:68"><call pos:start="51:14" pos:end="53:68"><name pos:start="51:14" pos:end="51:29">fdt_setprop_cell</name><argument_list pos:start="51:30" pos:end="53:68">(<argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:33">fdt</name></expr></argument>, <argument pos:start="51:36" pos:end="51:41"><expr pos:start="51:36" pos:end="51:41"><name pos:start="51:36" pos:end="51:41">offset</name></expr></argument>, <argument pos:start="51:44" pos:end="51:55"><expr pos:start="51:44" pos:end="51:55"><literal type="string" pos:start="51:44" pos:end="51:55">"interrupts"</literal></expr></argument>,

                 <argument pos:start="53:18" pos:end="53:67"><expr pos:start="53:18" pos:end="53:67"><call pos:start="53:18" pos:end="53:67"><name pos:start="53:18" pos:end="53:40">pci_default_read_config</name><argument_list pos:start="53:41" pos:end="53:67">(<argument pos:start="53:42" pos:end="53:44"><expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:44">dev</name></expr></argument>, <argument pos:start="53:47" pos:end="53:63"><expr pos:start="53:47" pos:end="53:63"><name pos:start="53:47" pos:end="53:63">PCI_INTERRUPT_PIN</name></expr></argument>, <argument pos:start="53:66" pos:end="53:66"><expr pos:start="53:66" pos:end="53:66"><literal type="number" pos:start="53:66" pos:end="53:66">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="59:19">(<expr pos:start="59:9" pos:end="59:18"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:18">is_bridge</name></expr>)</condition> <block pos:start="59:21" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:59">

        <expr_stmt pos:start="61:9" pos:end="63:59"><expr pos:start="61:9" pos:end="63:58"><call pos:start="61:9" pos:end="63:58"><name pos:start="61:9" pos:end="61:12">_FDT</name><argument_list pos:start="61:13" pos:end="63:58">(<argument pos:start="61:14" pos:end="63:57"><expr pos:start="61:14" pos:end="63:57"><call pos:start="61:14" pos:end="63:57"><name pos:start="61:14" pos:end="61:29">fdt_setprop_cell</name><argument_list pos:start="61:30" pos:end="63:57">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">fdt</name></expr></argument>, <argument pos:start="61:36" pos:end="61:41"><expr pos:start="61:36" pos:end="61:41"><name pos:start="61:36" pos:end="61:41">offset</name></expr></argument>, <argument pos:start="61:44" pos:end="61:54"><expr pos:start="61:44" pos:end="61:54"><literal type="string" pos:start="61:44" pos:end="61:54">"min-grant"</literal></expr></argument>,

            <argument pos:start="63:13" pos:end="63:56"><expr pos:start="63:13" pos:end="63:56"><call pos:start="63:13" pos:end="63:56"><name pos:start="63:13" pos:end="63:35">pci_default_read_config</name><argument_list pos:start="63:36" pos:end="63:56">(<argument pos:start="63:37" pos:end="63:39"><expr pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:39">dev</name></expr></argument>, <argument pos:start="63:42" pos:end="63:52"><expr pos:start="63:42" pos:end="63:52"><name pos:start="63:42" pos:end="63:52">PCI_MIN_GNT</name></expr></argument>, <argument pos:start="63:55" pos:end="63:55"><expr pos:start="63:55" pos:end="63:55"><literal type="number" pos:start="63:55" pos:end="63:55">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:59"><expr pos:start="65:9" pos:end="67:58"><call pos:start="65:9" pos:end="67:58"><name pos:start="65:9" pos:end="65:12">_FDT</name><argument_list pos:start="65:13" pos:end="67:58">(<argument pos:start="65:14" pos:end="67:57"><expr pos:start="65:14" pos:end="67:57"><call pos:start="65:14" pos:end="67:57"><name pos:start="65:14" pos:end="65:29">fdt_setprop_cell</name><argument_list pos:start="65:30" pos:end="67:57">(<argument pos:start="65:31" pos:end="65:33"><expr pos:start="65:31" pos:end="65:33"><name pos:start="65:31" pos:end="65:33">fdt</name></expr></argument>, <argument pos:start="65:36" pos:end="65:41"><expr pos:start="65:36" pos:end="65:41"><name pos:start="65:36" pos:end="65:41">offset</name></expr></argument>, <argument pos:start="65:44" pos:end="65:56"><expr pos:start="65:44" pos:end="65:56"><literal type="string" pos:start="65:44" pos:end="65:56">"max-latency"</literal></expr></argument>,

            <argument pos:start="67:13" pos:end="67:56"><expr pos:start="67:13" pos:end="67:56"><call pos:start="67:13" pos:end="67:56"><name pos:start="67:13" pos:end="67:35">pci_default_read_config</name><argument_list pos:start="67:36" pos:end="67:56">(<argument pos:start="67:37" pos:end="67:39"><expr pos:start="67:37" pos:end="67:39"><name pos:start="67:37" pos:end="67:39">dev</name></expr></argument>, <argument pos:start="67:42" pos:end="67:52"><expr pos:start="67:42" pos:end="67:52"><name pos:start="67:42" pos:end="67:52">PCI_MAX_LAT</name></expr></argument>, <argument pos:start="67:55" pos:end="67:55"><expr pos:start="67:55" pos:end="67:55"><literal type="number" pos:start="67:55" pos:end="67:55">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:58">(<expr pos:start="73:9" pos:end="73:57"><call pos:start="73:9" pos:end="73:57"><name pos:start="73:9" pos:end="73:31">pci_default_read_config</name><argument_list pos:start="73:32" pos:end="73:57">(<argument pos:start="73:33" pos:end="73:35"><expr pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:35">dev</name></expr></argument>, <argument pos:start="73:38" pos:end="73:53"><expr pos:start="73:38" pos:end="73:53"><name pos:start="73:38" pos:end="73:53">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="73:56" pos:end="73:56"><expr pos:start="73:56" pos:end="73:56"><literal type="number" pos:start="73:56" pos:end="73:56">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:60" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:69">

        <expr_stmt pos:start="75:9" pos:end="77:69"><expr pos:start="75:9" pos:end="77:68"><call pos:start="75:9" pos:end="77:68"><name pos:start="75:9" pos:end="75:12">_FDT</name><argument_list pos:start="75:13" pos:end="77:68">(<argument pos:start="75:14" pos:end="77:67"><expr pos:start="75:14" pos:end="77:67"><call pos:start="75:14" pos:end="77:67"><name pos:start="75:14" pos:end="75:29">fdt_setprop_cell</name><argument_list pos:start="75:30" pos:end="77:67">(<argument pos:start="75:31" pos:end="75:33"><expr pos:start="75:31" pos:end="75:33"><name pos:start="75:31" pos:end="75:33">fdt</name></expr></argument>, <argument pos:start="75:36" pos:end="75:41"><expr pos:start="75:36" pos:end="75:41"><name pos:start="75:36" pos:end="75:41">offset</name></expr></argument>, <argument pos:start="75:44" pos:end="75:57"><expr pos:start="75:44" pos:end="75:57"><literal type="string" pos:start="75:44" pos:end="75:57">"subsystem-id"</literal></expr></argument>,

                 <argument pos:start="77:18" pos:end="77:66"><expr pos:start="77:18" pos:end="77:66"><call pos:start="77:18" pos:end="77:66"><name pos:start="77:18" pos:end="77:40">pci_default_read_config</name><argument_list pos:start="77:41" pos:end="77:66">(<argument pos:start="77:42" pos:end="77:44"><expr pos:start="77:42" pos:end="77:44"><name pos:start="77:42" pos:end="77:44">dev</name></expr></argument>, <argument pos:start="77:47" pos:end="77:62"><expr pos:start="77:47" pos:end="77:62"><name pos:start="77:47" pos:end="77:62">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="77:65" pos:end="77:65"><expr pos:start="77:65" pos:end="77:65"><literal type="number" pos:start="77:65" pos:end="77:65">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:65">(<expr pos:start="83:9" pos:end="83:64"><call pos:start="83:9" pos:end="83:64"><name pos:start="83:9" pos:end="83:31">pci_default_read_config</name><argument_list pos:start="83:32" pos:end="83:64">(<argument pos:start="83:33" pos:end="83:35"><expr pos:start="83:33" pos:end="83:35"><name pos:start="83:33" pos:end="83:35">dev</name></expr></argument>, <argument pos:start="83:38" pos:end="83:60"><expr pos:start="83:38" pos:end="83:60"><name pos:start="83:38" pos:end="83:60">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>, <argument pos:start="83:63" pos:end="83:63"><expr pos:start="83:63" pos:end="83:63"><literal type="number" pos:start="83:63" pos:end="83:63">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:67" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:76">

        <expr_stmt pos:start="85:9" pos:end="87:76"><expr pos:start="85:9" pos:end="87:75"><call pos:start="85:9" pos:end="87:75"><name pos:start="85:9" pos:end="85:12">_FDT</name><argument_list pos:start="85:13" pos:end="87:75">(<argument pos:start="85:14" pos:end="87:74"><expr pos:start="85:14" pos:end="87:74"><call pos:start="85:14" pos:end="87:74"><name pos:start="85:14" pos:end="85:29">fdt_setprop_cell</name><argument_list pos:start="85:30" pos:end="87:74">(<argument pos:start="85:31" pos:end="85:33"><expr pos:start="85:31" pos:end="85:33"><name pos:start="85:31" pos:end="85:33">fdt</name></expr></argument>, <argument pos:start="85:36" pos:end="85:41"><expr pos:start="85:36" pos:end="85:41"><name pos:start="85:36" pos:end="85:41">offset</name></expr></argument>, <argument pos:start="85:44" pos:end="85:64"><expr pos:start="85:44" pos:end="85:64"><literal type="string" pos:start="85:44" pos:end="85:64">"subsystem-vendor-id"</literal></expr></argument>,

                 <argument pos:start="87:18" pos:end="87:73"><expr pos:start="87:18" pos:end="87:73"><call pos:start="87:18" pos:end="87:73"><name pos:start="87:18" pos:end="87:40">pci_default_read_config</name><argument_list pos:start="87:41" pos:end="87:73">(<argument pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">dev</name></expr></argument>, <argument pos:start="87:47" pos:end="87:69"><expr pos:start="87:47" pos:end="87:69"><name pos:start="87:47" pos:end="87:69">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>, <argument pos:start="87:72" pos:end="87:72"><expr pos:start="87:72" pos:end="87:72"><literal type="number" pos:start="87:72" pos:end="87:72">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="95:63"><expr pos:start="93:5" pos:end="95:62"><call pos:start="93:5" pos:end="95:62"><name pos:start="93:5" pos:end="93:8">_FDT</name><argument_list pos:start="93:9" pos:end="95:62">(<argument pos:start="93:10" pos:end="95:61"><expr pos:start="93:10" pos:end="95:61"><call pos:start="93:10" pos:end="95:61"><name pos:start="93:10" pos:end="93:25">fdt_setprop_cell</name><argument_list pos:start="93:26" pos:end="95:61">(<argument pos:start="93:27" pos:end="93:29"><expr pos:start="93:27" pos:end="93:29"><name pos:start="93:27" pos:end="93:29">fdt</name></expr></argument>, <argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">offset</name></expr></argument>, <argument pos:start="93:40" pos:end="93:56"><expr pos:start="93:40" pos:end="93:56"><literal type="string" pos:start="93:40" pos:end="93:56">"cache-line-size"</literal></expr></argument>,

        <argument pos:start="95:9" pos:end="95:60"><expr pos:start="95:9" pos:end="95:60"><call pos:start="95:9" pos:end="95:60"><name pos:start="95:9" pos:end="95:31">pci_default_read_config</name><argument_list pos:start="95:32" pos:end="95:60">(<argument pos:start="95:33" pos:end="95:35"><expr pos:start="95:33" pos:end="95:35"><name pos:start="95:33" pos:end="95:35">dev</name></expr></argument>, <argument pos:start="95:38" pos:end="95:56"><expr pos:start="95:38" pos:end="95:56"><name pos:start="95:38" pos:end="95:56">PCI_CACHE_LINE_SIZE</name></expr></argument>, <argument pos:start="95:59" pos:end="95:59"><expr pos:start="95:59" pos:end="95:59"><literal type="number" pos:start="95:59" pos:end="95:59">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:72">/* the following fdt cells are masked off the pci status register */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:61"><expr pos:start="101:5" pos:end="101:60"><name pos:start="101:5" pos:end="101:14">pci_status</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <call pos:start="101:18" pos:end="101:60"><name pos:start="101:18" pos:end="101:40">pci_default_read_config</name><argument_list pos:start="101:41" pos:end="101:60">(<argument pos:start="101:42" pos:end="101:44"><expr pos:start="101:42" pos:end="101:44"><name pos:start="101:42" pos:end="101:44">dev</name></expr></argument>, <argument pos:start="101:47" pos:end="101:56"><expr pos:start="101:47" pos:end="101:56"><name pos:start="101:47" pos:end="101:56">PCI_STATUS</name></expr></argument>, <argument pos:start="101:59" pos:end="101:59"><expr pos:start="101:59" pos:end="101:59"><literal type="number" pos:start="101:59" pos:end="101:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="105:64"><expr pos:start="103:5" pos:end="105:63"><call pos:start="103:5" pos:end="105:63"><name pos:start="103:5" pos:end="103:8">_FDT</name><argument_list pos:start="103:9" pos:end="105:63">(<argument pos:start="103:10" pos:end="105:62"><expr pos:start="103:10" pos:end="105:62"><call pos:start="103:10" pos:end="105:62"><name pos:start="103:10" pos:end="103:25">fdt_setprop_cell</name><argument_list pos:start="103:26" pos:end="105:62">(<argument pos:start="103:27" pos:end="103:29"><expr pos:start="103:27" pos:end="103:29"><name pos:start="103:27" pos:end="103:29">fdt</name></expr></argument>, <argument pos:start="103:32" pos:end="103:37"><expr pos:start="103:32" pos:end="103:37"><name pos:start="103:32" pos:end="103:37">offset</name></expr></argument>, <argument pos:start="103:40" pos:end="103:53"><expr pos:start="103:40" pos:end="103:53"><literal type="string" pos:start="103:40" pos:end="103:53">"devsel-speed"</literal></expr></argument>,

                          <argument pos:start="105:27" pos:end="105:61"><expr pos:start="105:27" pos:end="105:61"><name pos:start="105:27" pos:end="105:48">PCI_STATUS_DEVSEL_MASK</name> <operator pos:start="105:50" pos:end="105:50">&amp;</operator> <name pos:start="105:52" pos:end="105:61">pci_status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:42">(<expr pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:18">pci_status</name> <operator pos:start="109:20" pos:end="109:20">&amp;</operator> <name pos:start="109:22" pos:end="109:41">PCI_STATUS_FAST_BACK</name></expr>)</condition> <block pos:start="109:44" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:69">

        <expr_stmt pos:start="111:9" pos:end="111:69"><expr pos:start="111:9" pos:end="111:68"><call pos:start="111:9" pos:end="111:68"><name pos:start="111:9" pos:end="111:12">_FDT</name><argument_list pos:start="111:13" pos:end="111:68">(<argument pos:start="111:14" pos:end="111:67"><expr pos:start="111:14" pos:end="111:67"><call pos:start="111:14" pos:end="111:67"><name pos:start="111:14" pos:end="111:24">fdt_setprop</name><argument_list pos:start="111:25" pos:end="111:67">(<argument pos:start="111:26" pos:end="111:28"><expr pos:start="111:26" pos:end="111:28"><name pos:start="111:26" pos:end="111:28">fdt</name></expr></argument>, <argument pos:start="111:31" pos:end="111:36"><expr pos:start="111:31" pos:end="111:36"><name pos:start="111:31" pos:end="111:36">offset</name></expr></argument>, <argument pos:start="111:39" pos:end="111:57"><expr pos:start="111:39" pos:end="111:57"><literal type="string" pos:start="111:39" pos:end="111:57">"fast-back-to-back"</literal></expr></argument>, <argument pos:start="111:60" pos:end="111:63"><expr pos:start="111:60" pos:end="111:63"><name pos:start="111:60" pos:end="111:63">NULL</name></expr></argument>, <argument pos:start="111:66" pos:end="111:66"><expr pos:start="111:66" pos:end="111:66"><literal type="number" pos:start="111:66" pos:end="111:66">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="119:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:38">(<expr pos:start="115:9" pos:end="115:37"><name pos:start="115:9" pos:end="115:18">pci_status</name> <operator pos:start="115:20" pos:end="115:20">&amp;</operator> <name pos:start="115:22" pos:end="115:37">PCI_STATUS_66MHZ</name></expr>)</condition> <block pos:start="115:40" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:65">

        <expr_stmt pos:start="117:9" pos:end="117:65"><expr pos:start="117:9" pos:end="117:64"><call pos:start="117:9" pos:end="117:64"><name pos:start="117:9" pos:end="117:12">_FDT</name><argument_list pos:start="117:13" pos:end="117:64">(<argument pos:start="117:14" pos:end="117:63"><expr pos:start="117:14" pos:end="117:63"><call pos:start="117:14" pos:end="117:63"><name pos:start="117:14" pos:end="117:24">fdt_setprop</name><argument_list pos:start="117:25" pos:end="117:63">(<argument pos:start="117:26" pos:end="117:28"><expr pos:start="117:26" pos:end="117:28"><name pos:start="117:26" pos:end="117:28">fdt</name></expr></argument>, <argument pos:start="117:31" pos:end="117:36"><expr pos:start="117:31" pos:end="117:36"><name pos:start="117:31" pos:end="117:36">offset</name></expr></argument>, <argument pos:start="117:39" pos:end="117:53"><expr pos:start="117:39" pos:end="117:53"><literal type="string" pos:start="117:39" pos:end="117:53">"66mhz-capable"</literal></expr></argument>, <argument pos:start="117:56" pos:end="117:59"><expr pos:start="117:56" pos:end="117:59"><name pos:start="117:56" pos:end="117:59">NULL</name></expr></argument>, <argument pos:start="117:62" pos:end="117:62"><expr pos:start="117:62" pos:end="117:62"><literal type="number" pos:start="117:62" pos:end="117:62">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="121:5" pos:end="125:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:36">(<expr pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:18">pci_status</name> <operator pos:start="121:20" pos:end="121:20">&amp;</operator> <name pos:start="121:22" pos:end="121:35">PCI_STATUS_UDF</name></expr>)</condition> <block pos:start="121:38" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:65">

        <expr_stmt pos:start="123:9" pos:end="123:65"><expr pos:start="123:9" pos:end="123:64"><call pos:start="123:9" pos:end="123:64"><name pos:start="123:9" pos:end="123:12">_FDT</name><argument_list pos:start="123:13" pos:end="123:64">(<argument pos:start="123:14" pos:end="123:63"><expr pos:start="123:14" pos:end="123:63"><call pos:start="123:14" pos:end="123:63"><name pos:start="123:14" pos:end="123:24">fdt_setprop</name><argument_list pos:start="123:25" pos:end="123:63">(<argument pos:start="123:26" pos:end="123:28"><expr pos:start="123:26" pos:end="123:28"><name pos:start="123:26" pos:end="123:28">fdt</name></expr></argument>, <argument pos:start="123:31" pos:end="123:36"><expr pos:start="123:31" pos:end="123:36"><name pos:start="123:31" pos:end="123:36">offset</name></expr></argument>, <argument pos:start="123:39" pos:end="123:53"><expr pos:start="123:39" pos:end="123:53"><literal type="string" pos:start="123:39" pos:end="123:53">"udf-supported"</literal></expr></argument>, <argument pos:start="123:56" pos:end="123:59"><expr pos:start="123:56" pos:end="123:59"><name pos:start="123:56" pos:end="123:59">NULL</name></expr></argument>, <argument pos:start="123:62" pos:end="123:62"><expr pos:start="123:62" pos:end="123:62"><literal type="number" pos:start="123:62" pos:end="123:62">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="135:65"><expr pos:start="129:5" pos:end="135:64"><call pos:start="129:5" pos:end="135:64"><name pos:start="129:5" pos:end="129:8">_FDT</name><argument_list pos:start="129:9" pos:end="135:64">(<argument pos:start="129:10" pos:end="135:63"><expr pos:start="129:10" pos:end="135:63"><call pos:start="129:10" pos:end="135:63"><name pos:start="129:10" pos:end="129:27">fdt_setprop_string</name><argument_list pos:start="129:28" pos:end="135:63">(<argument pos:start="129:29" pos:end="129:31"><expr pos:start="129:29" pos:end="129:31"><name pos:start="129:29" pos:end="129:31">fdt</name></expr></argument>, <argument pos:start="129:34" pos:end="129:39"><expr pos:start="129:34" pos:end="129:39"><name pos:start="129:34" pos:end="129:39">offset</name></expr></argument>, <argument pos:start="129:42" pos:end="129:47"><expr pos:start="129:42" pos:end="129:47"><literal type="string" pos:start="129:42" pos:end="129:47">"name"</literal></expr></argument>,

                            <argument pos:start="131:29" pos:end="135:62"><expr pos:start="131:29" pos:end="135:62"><call pos:start="131:29" pos:end="135:62"><name pos:start="131:29" pos:end="131:48">pci_find_device_name</name><argument_list pos:start="131:49" pos:end="135:62">(<argument pos:start="131:50" pos:end="131:69"><expr pos:start="131:50" pos:end="131:69"><operator pos:start="131:50" pos:end="131:50">(</operator><name pos:start="131:51" pos:end="131:55">ccode</name> <operator pos:start="131:57" pos:end="131:58">&gt;&gt;</operator> <literal type="number" pos:start="131:60" pos:end="131:61">16</literal><operator pos:start="131:62" pos:end="131:62">)</operator> <operator pos:start="131:64" pos:end="131:64">&amp;</operator> <literal type="number" pos:start="131:66" pos:end="131:69">0xff</literal></expr></argument>,

                                                 <argument pos:start="133:50" pos:end="133:68"><expr pos:start="133:50" pos:end="133:68"><operator pos:start="133:50" pos:end="133:50">(</operator><name pos:start="133:51" pos:end="133:55">ccode</name> <operator pos:start="133:57" pos:end="133:58">&gt;&gt;</operator> <literal type="number" pos:start="133:60" pos:end="133:60">8</literal><operator pos:start="133:61" pos:end="133:61">)</operator> <operator pos:start="133:63" pos:end="133:63">&amp;</operator> <literal type="number" pos:start="133:65" pos:end="133:68">0xff</literal></expr></argument>,

                                                 <argument pos:start="135:50" pos:end="135:61"><expr pos:start="135:50" pos:end="135:61"><name pos:start="135:50" pos:end="135:54">ccode</name> <operator pos:start="135:56" pos:end="135:56">&amp;</operator> <literal type="number" pos:start="135:58" pos:end="135:61">0xff</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:44"><expr pos:start="137:5" pos:end="137:43"><name pos:start="137:5" pos:end="137:7">buf</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="137:43"><name pos:start="137:11" pos:end="137:32">spapr_phb_get_loc_code</name><argument_list pos:start="137:33" pos:end="137:43">(<argument pos:start="137:34" pos:end="137:37"><expr pos:start="137:34" pos:end="137:37"><name pos:start="137:34" pos:end="137:37">sphb</name></expr></argument>, <argument pos:start="137:40" pos:end="137:42"><expr pos:start="137:40" pos:end="137:42"><name pos:start="137:40" pos:end="137:42">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:13">(<expr pos:start="139:9" pos:end="139:12"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:12">buf</name></expr>)</condition> <block pos:start="139:15" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:18">

        <expr_stmt pos:start="141:9" pos:end="141:56"><expr pos:start="141:9" pos:end="141:55"><call pos:start="141:9" pos:end="141:55"><name pos:start="141:9" pos:end="141:20">error_report</name><argument_list pos:start="141:21" pos:end="141:55">(<argument pos:start="141:22" pos:end="141:54"><expr pos:start="141:22" pos:end="141:54"><literal type="string" pos:start="141:22" pos:end="141:54">"Failed setting the ibm,loc-code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="143:9" pos:end="143:18">return <expr pos:start="143:16" pos:end="143:17"><operator pos:start="143:16" pos:end="143:16">-</operator><literal type="number" pos:start="143:17" pos:end="143:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:63"><expr pos:start="149:5" pos:end="149:62"><name pos:start="149:5" pos:end="149:7">err</name> <operator pos:start="149:9" pos:end="149:9">=</operator> <call pos:start="149:11" pos:end="149:62"><name pos:start="149:11" pos:end="149:28">fdt_setprop_string</name><argument_list pos:start="149:29" pos:end="149:62">(<argument pos:start="149:30" pos:end="149:32"><expr pos:start="149:30" pos:end="149:32"><name pos:start="149:30" pos:end="149:32">fdt</name></expr></argument>, <argument pos:start="149:35" pos:end="149:40"><expr pos:start="149:35" pos:end="149:40"><name pos:start="149:35" pos:end="149:40">offset</name></expr></argument>, <argument pos:start="149:43" pos:end="149:56"><expr pos:start="149:43" pos:end="149:56"><literal type="string" pos:start="149:43" pos:end="149:56">"ibm,loc-code"</literal></expr></argument>, <argument pos:start="149:59" pos:end="149:61"><expr pos:start="149:59" pos:end="149:61"><name pos:start="149:59" pos:end="149:61">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:16"><expr pos:start="151:5" pos:end="151:15"><call pos:start="151:5" pos:end="151:15"><name pos:start="151:5" pos:end="151:10">g_free</name><argument_list pos:start="151:11" pos:end="151:15">(<argument pos:start="151:12" pos:end="151:14"><expr pos:start="151:12" pos:end="151:14"><name pos:start="151:12" pos:end="151:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:16">(<expr pos:start="153:9" pos:end="153:15"><name pos:start="153:9" pos:end="153:11">err</name> <operator pos:start="153:13" pos:end="153:13">&lt;</operator> <literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>)</condition> <block pos:start="153:18" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:19">

        <return pos:start="155:9" pos:end="155:19">return <expr pos:start="155:16" pos:end="155:18"><name pos:start="155:16" pos:end="155:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="165:5"><if pos:start="161:5" pos:end="165:5">if <condition pos:start="161:8" pos:end="161:18">(<expr pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:17">drc_index</name></expr>)</condition> <block pos:start="161:20" pos:end="165:5">{<block_content pos:start="163:9" pos:end="163:75">

        <expr_stmt pos:start="163:9" pos:end="163:75"><expr pos:start="163:9" pos:end="163:74"><call pos:start="163:9" pos:end="163:74"><name pos:start="163:9" pos:end="163:12">_FDT</name><argument_list pos:start="163:13" pos:end="163:74">(<argument pos:start="163:14" pos:end="163:73"><expr pos:start="163:14" pos:end="163:73"><call pos:start="163:14" pos:end="163:73"><name pos:start="163:14" pos:end="163:29">fdt_setprop_cell</name><argument_list pos:start="163:30" pos:end="163:73">(<argument pos:start="163:31" pos:end="163:33"><expr pos:start="163:31" pos:end="163:33"><name pos:start="163:31" pos:end="163:33">fdt</name></expr></argument>, <argument pos:start="163:36" pos:end="163:41"><expr pos:start="163:36" pos:end="163:41"><name pos:start="163:36" pos:end="163:41">offset</name></expr></argument>, <argument pos:start="163:44" pos:end="163:61"><expr pos:start="163:44" pos:end="163:61"><literal type="string" pos:start="163:44" pos:end="163:61">"ibm,my-drc-index"</literal></expr></argument>, <argument pos:start="163:64" pos:end="163:72"><expr pos:start="163:64" pos:end="163:72"><name pos:start="163:64" pos:end="163:72">drc_index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="171:51"><expr pos:start="169:5" pos:end="171:50"><call pos:start="169:5" pos:end="171:50"><name pos:start="169:5" pos:end="169:8">_FDT</name><argument_list pos:start="169:9" pos:end="171:50">(<argument pos:start="169:10" pos:end="171:49"><expr pos:start="169:10" pos:end="171:49"><call pos:start="169:10" pos:end="171:49"><name pos:start="169:10" pos:end="169:25">fdt_setprop_cell</name><argument_list pos:start="169:26" pos:end="171:49">(<argument pos:start="169:27" pos:end="169:29"><expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:29">fdt</name></expr></argument>, <argument pos:start="169:32" pos:end="169:37"><expr pos:start="169:32" pos:end="169:37"><name pos:start="169:32" pos:end="169:37">offset</name></expr></argument>, <argument pos:start="169:40" pos:end="169:55"><expr pos:start="169:40" pos:end="169:55"><literal type="string" pos:start="169:40" pos:end="169:55">"#address-cells"</literal></expr></argument>,

                          <argument pos:start="171:27" pos:end="171:48"><expr pos:start="171:27" pos:end="171:48"><name pos:start="171:27" pos:end="171:48">RESOURCE_CELLS_ADDRESS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="175:48"><expr pos:start="173:5" pos:end="175:47"><call pos:start="173:5" pos:end="175:47"><name pos:start="173:5" pos:end="173:8">_FDT</name><argument_list pos:start="173:9" pos:end="175:47">(<argument pos:start="173:10" pos:end="175:46"><expr pos:start="173:10" pos:end="175:46"><call pos:start="173:10" pos:end="175:46"><name pos:start="173:10" pos:end="173:25">fdt_setprop_cell</name><argument_list pos:start="173:26" pos:end="175:46">(<argument pos:start="173:27" pos:end="173:29"><expr pos:start="173:27" pos:end="173:29"><name pos:start="173:27" pos:end="173:29">fdt</name></expr></argument>, <argument pos:start="173:32" pos:end="173:37"><expr pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:37">offset</name></expr></argument>, <argument pos:start="173:40" pos:end="173:52"><expr pos:start="173:40" pos:end="173:52"><literal type="string" pos:start="173:40" pos:end="173:52">"#size-cells"</literal></expr></argument>,

                          <argument pos:start="175:27" pos:end="175:45"><expr pos:start="175:27" pos:end="175:45"><name pos:start="175:27" pos:end="175:45">RESOURCE_CELLS_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:44"><expr pos:start="179:5" pos:end="179:43"><name pos:start="179:5" pos:end="179:11">max_msi</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:43"><name pos:start="179:15" pos:end="179:38">msi_nr_vectors_allocated</name><argument_list pos:start="179:39" pos:end="179:43">(<argument pos:start="179:40" pos:end="179:42"><expr pos:start="179:40" pos:end="179:42"><name pos:start="179:40" pos:end="179:42">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="185:5"><if pos:start="181:5" pos:end="185:5">if <condition pos:start="181:8" pos:end="181:16">(<expr pos:start="181:9" pos:end="181:15"><name pos:start="181:9" pos:end="181:15">max_msi</name></expr>)</condition> <block pos:start="181:18" pos:end="185:5">{<block_content pos:start="183:9" pos:end="183:68">

        <expr_stmt pos:start="183:9" pos:end="183:68"><expr pos:start="183:9" pos:end="183:67"><call pos:start="183:9" pos:end="183:67"><name pos:start="183:9" pos:end="183:12">_FDT</name><argument_list pos:start="183:13" pos:end="183:67">(<argument pos:start="183:14" pos:end="183:66"><expr pos:start="183:14" pos:end="183:66"><call pos:start="183:14" pos:end="183:66"><name pos:start="183:14" pos:end="183:29">fdt_setprop_cell</name><argument_list pos:start="183:30" pos:end="183:66">(<argument pos:start="183:31" pos:end="183:33"><expr pos:start="183:31" pos:end="183:33"><name pos:start="183:31" pos:end="183:33">fdt</name></expr></argument>, <argument pos:start="183:36" pos:end="183:41"><expr pos:start="183:36" pos:end="183:41"><name pos:start="183:36" pos:end="183:41">offset</name></expr></argument>, <argument pos:start="183:44" pos:end="183:56"><expr pos:start="183:44" pos:end="183:56"><literal type="string" pos:start="183:44" pos:end="183:56">"ibm,req#msi"</literal></expr></argument>, <argument pos:start="183:59" pos:end="183:65"><expr pos:start="183:59" pos:end="183:65"><name pos:start="183:59" pos:end="183:65">max_msi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:36"><expr pos:start="187:5" pos:end="187:35"><name pos:start="187:5" pos:end="187:12">max_msix</name> <operator pos:start="187:14" pos:end="187:14">=</operator> <name pos:start="187:16" pos:end="187:35"><name pos:start="187:16" pos:end="187:18">dev</name><operator pos:start="187:19" pos:end="187:20">-&gt;</operator><name pos:start="187:21" pos:end="187:35">msix_entries_nr</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="189:5" pos:end="193:5"><if pos:start="189:5" pos:end="193:5">if <condition pos:start="189:8" pos:end="189:17">(<expr pos:start="189:9" pos:end="189:16"><name pos:start="189:9" pos:end="189:16">max_msix</name></expr>)</condition> <block pos:start="189:19" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:71">

        <expr_stmt pos:start="191:9" pos:end="191:71"><expr pos:start="191:9" pos:end="191:70"><call pos:start="191:9" pos:end="191:70"><name pos:start="191:9" pos:end="191:12">_FDT</name><argument_list pos:start="191:13" pos:end="191:70">(<argument pos:start="191:14" pos:end="191:69"><expr pos:start="191:14" pos:end="191:69"><call pos:start="191:14" pos:end="191:69"><name pos:start="191:14" pos:end="191:29">fdt_setprop_cell</name><argument_list pos:start="191:30" pos:end="191:69">(<argument pos:start="191:31" pos:end="191:33"><expr pos:start="191:31" pos:end="191:33"><name pos:start="191:31" pos:end="191:33">fdt</name></expr></argument>, <argument pos:start="191:36" pos:end="191:41"><expr pos:start="191:36" pos:end="191:41"><name pos:start="191:36" pos:end="191:41">offset</name></expr></argument>, <argument pos:start="191:44" pos:end="191:58"><expr pos:start="191:44" pos:end="191:58"><literal type="string" pos:start="191:44" pos:end="191:58">"ibm,req#msi-x"</literal></expr></argument>, <argument pos:start="191:61" pos:end="191:68"><expr pos:start="191:61" pos:end="191:68"><name pos:start="191:61" pos:end="191:68">max_msix</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:38"><expr pos:start="197:5" pos:end="197:37"><call pos:start="197:5" pos:end="197:37"><name pos:start="197:5" pos:end="197:27">populate_resource_props</name><argument_list pos:start="197:28" pos:end="197:37">(<argument pos:start="197:29" pos:end="197:31"><expr pos:start="197:29" pos:end="197:31"><name pos:start="197:29" pos:end="197:31">dev</name></expr></argument>, <argument pos:start="197:34" pos:end="197:36"><expr pos:start="197:34" pos:end="197:36"><operator pos:start="197:34" pos:end="197:34">&amp;</operator><name pos:start="197:35" pos:end="197:36">rp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:73"><expr pos:start="199:5" pos:end="199:72"><call pos:start="199:5" pos:end="199:72"><name pos:start="199:5" pos:end="199:8">_FDT</name><argument_list pos:start="199:9" pos:end="199:72">(<argument pos:start="199:10" pos:end="199:71"><expr pos:start="199:10" pos:end="199:71"><call pos:start="199:10" pos:end="199:71"><name pos:start="199:10" pos:end="199:20">fdt_setprop</name><argument_list pos:start="199:21" pos:end="199:71">(<argument pos:start="199:22" pos:end="199:24"><expr pos:start="199:22" pos:end="199:24"><name pos:start="199:22" pos:end="199:24">fdt</name></expr></argument>, <argument pos:start="199:27" pos:end="199:32"><expr pos:start="199:27" pos:end="199:32"><name pos:start="199:27" pos:end="199:32">offset</name></expr></argument>, <argument pos:start="199:35" pos:end="199:39"><expr pos:start="199:35" pos:end="199:39"><literal type="string" pos:start="199:35" pos:end="199:39">"reg"</literal></expr></argument>, <argument pos:start="199:42" pos:end="199:58"><expr pos:start="199:42" pos:end="199:58"><operator pos:start="199:42" pos:end="199:42">(</operator><name pos:start="199:43" pos:end="199:49">uint8_t</name> <operator pos:start="199:51" pos:end="199:51">*</operator><operator pos:start="199:52" pos:end="199:52">)</operator><name pos:start="199:53" pos:end="199:58"><name pos:start="199:53" pos:end="199:54">rp</name><operator pos:start="199:55" pos:end="199:55">.</operator><name pos:start="199:56" pos:end="199:58">reg</name></name></expr></argument>, <argument pos:start="199:61" pos:end="199:70"><expr pos:start="199:61" pos:end="199:70"><name pos:start="199:61" pos:end="199:70"><name pos:start="199:61" pos:end="199:62">rp</name><operator pos:start="199:63" pos:end="199:63">.</operator><name pos:start="199:64" pos:end="199:70">reg_len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="203:63"><expr pos:start="201:5" pos:end="203:62"><call pos:start="201:5" pos:end="203:62"><name pos:start="201:5" pos:end="201:8">_FDT</name><argument_list pos:start="201:9" pos:end="203:62">(<argument pos:start="201:10" pos:end="203:61"><expr pos:start="201:10" pos:end="203:61"><call pos:start="201:10" pos:end="203:61"><name pos:start="201:10" pos:end="201:20">fdt_setprop</name><argument_list pos:start="201:21" pos:end="203:61">(<argument pos:start="201:22" pos:end="201:24"><expr pos:start="201:22" pos:end="201:24"><name pos:start="201:22" pos:end="201:24">fdt</name></expr></argument>, <argument pos:start="201:27" pos:end="201:32"><expr pos:start="201:27" pos:end="201:32"><name pos:start="201:27" pos:end="201:32">offset</name></expr></argument>, <argument pos:start="201:35" pos:end="201:54"><expr pos:start="201:35" pos:end="201:54"><literal type="string" pos:start="201:35" pos:end="201:54">"assigned-addresses"</literal></expr></argument>,

                     <argument pos:start="203:22" pos:end="203:43"><expr pos:start="203:22" pos:end="203:43"><operator pos:start="203:22" pos:end="203:22">(</operator><name pos:start="203:23" pos:end="203:29">uint8_t</name> <operator pos:start="203:31" pos:end="203:31">*</operator><operator pos:start="203:32" pos:end="203:32">)</operator><name pos:start="203:33" pos:end="203:43"><name pos:start="203:33" pos:end="203:34">rp</name><operator pos:start="203:35" pos:end="203:35">.</operator><name pos:start="203:36" pos:end="203:43">assigned</name></name></expr></argument>, <argument pos:start="203:46" pos:end="203:60"><expr pos:start="203:46" pos:end="203:60"><name pos:start="203:46" pos:end="203:60"><name pos:start="203:46" pos:end="203:47">rp</name><operator pos:start="203:48" pos:end="203:48">.</operator><name pos:start="203:49" pos:end="203:60">assigned_len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="207:5" pos:end="211:5"><if pos:start="207:5" pos:end="211:5">if <condition pos:start="207:8" pos:end="207:28">(<expr pos:start="207:9" pos:end="207:27"><call pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:22">pci_is_express</name><argument_list pos:start="207:23" pos:end="207:27">(<argument pos:start="207:24" pos:end="207:26"><expr pos:start="207:24" pos:end="207:26"><name pos:start="207:24" pos:end="207:26">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:30" pos:end="211:5">{<block_content pos:start="209:9" pos:end="209:78">

        <expr_stmt pos:start="209:9" pos:end="209:78"><expr pos:start="209:9" pos:end="209:77"><call pos:start="209:9" pos:end="209:77"><name pos:start="209:9" pos:end="209:12">_FDT</name><argument_list pos:start="209:13" pos:end="209:77">(<argument pos:start="209:14" pos:end="209:76"><expr pos:start="209:14" pos:end="209:76"><call pos:start="209:14" pos:end="209:76"><name pos:start="209:14" pos:end="209:29">fdt_setprop_cell</name><argument_list pos:start="209:30" pos:end="209:76">(<argument pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:33">fdt</name></expr></argument>, <argument pos:start="209:36" pos:end="209:41"><expr pos:start="209:36" pos:end="209:41"><name pos:start="209:36" pos:end="209:41">offset</name></expr></argument>, <argument pos:start="209:44" pos:end="209:70"><expr pos:start="209:44" pos:end="209:70"><literal type="string" pos:start="209:44" pos:end="209:70">"ibm,pci-config-space-type"</literal></expr></argument>, <argument pos:start="209:73" pos:end="209:75"><expr pos:start="209:73" pos:end="209:75"><literal type="number" pos:start="209:73" pos:end="209:75">0x1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="215:5" pos:end="215:13">return <expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
