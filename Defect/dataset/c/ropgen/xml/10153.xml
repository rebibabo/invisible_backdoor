<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10153.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">mp3_seek</name><parameter_list pos:start="1:20" pos:end="3:30">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:56">stream_index</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:65">int64_t</name></type> <name pos:start="1:67" pos:end="1:75">timestamp</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:29"><decl pos:start="3:21" pos:end="3:29"><type pos:start="3:21" pos:end="3:29"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:29">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:23">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MP3Context</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">mp3</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVIndexEntry</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:20">ie</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name> <init pos:start="11:18" pos:end="11:32">= <expr pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:29">streams</name><index pos:start="11:30" pos:end="11:32">[<expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:67"><decl pos:start="13:5" pos:end="13:66"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">ret</name>  <init pos:start="13:18" pos:end="13:66">= <expr pos:start="13:20" pos:end="13:66"><call pos:start="13:20" pos:end="13:66"><name pos:start="13:20" pos:end="13:44">av_index_search_timestamp</name><argument_list pos:start="13:45" pos:end="13:66">(<argument pos:start="13:46" pos:end="13:47"><expr pos:start="13:46" pos:end="13:47"><name pos:start="13:46" pos:end="13:47">st</name></expr></argument>, <argument pos:start="13:50" pos:end="13:58"><expr pos:start="13:50" pos:end="13:58"><name pos:start="13:50" pos:end="13:58">timestamp</name></expr></argument>, <argument pos:start="13:61" pos:end="13:65"><expr pos:start="13:61" pos:end="13:65"><name pos:start="13:61" pos:end="13:65">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">header</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:12">mp3</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:22">xing_toc</name></name></expr>)</condition> <block pos:start="19:25" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:18">

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:10">st</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:24">skip_samples</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <ternary pos:start="21:28" pos:end="21:72"><condition pos:start="21:28" pos:end="21:43"><expr pos:start="21:28" pos:end="21:41"><name pos:start="21:28" pos:end="21:36">timestamp</name> <operator pos:start="21:38" pos:end="21:39">&lt;=</operator> <literal type="number" pos:start="21:41" pos:end="21:41">0</literal></expr> ?</condition><then pos:start="21:45" pos:end="21:68"> <expr pos:start="21:45" pos:end="21:68"><name pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:47">mp3</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:58">start_pad</name></name> <operator pos:start="21:60" pos:end="21:60">+</operator> <literal type="number" pos:start="21:62" pos:end="21:66">528</literal> <operator pos:start="21:66" pos:end="21:66">+</operator> <literal type="number" pos:start="21:68" pos:end="21:68">1</literal></expr> </then><else pos:start="21:70" pos:end="21:72">: <expr pos:start="21:72" pos:end="21:72"><literal type="number" pos:start="21:72" pos:end="21:72">0</literal></expr></else></ternary></expr>;</expr_stmt>



        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:19"><if pos:start="31:5" pos:end="33:19">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:19"><block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:6">ie</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <operator pos:start="37:10" pos:end="37:10">&amp;</operator><name pos:start="37:11" pos:end="37:32"><name pos:start="37:11" pos:end="37:12">st</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:27">index_entries</name><index pos:start="37:28" pos:end="37:32">[<expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">ret</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:46"><expr pos:start="39:5" pos:end="39:45"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:45"><name pos:start="39:11" pos:end="39:19">avio_seek</name><argument_list pos:start="39:20" pos:end="39:45">(<argument pos:start="39:21" pos:end="39:25"><expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:25">pb</name></name></expr></argument>, <argument pos:start="39:28" pos:end="39:34"><expr pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:29">ie</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:34">pos</name></name></expr></argument>, <argument pos:start="39:37" pos:end="39:44"><expr pos:start="39:37" pos:end="39:44"><name pos:start="39:37" pos:end="39:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="47:5" pos:end="67:5">while <condition pos:start="47:11" pos:end="47:31">(<expr pos:start="47:12" pos:end="47:30"><operator pos:start="47:12" pos:end="47:12">!</operator><name pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:17">pb</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:30">eof_reached</name></name></expr>)</condition> <block pos:start="47:33" pos:end="67:5">{<block_content pos:start="49:9" pos:end="65:9">

        <expr_stmt pos:start="49:9" pos:end="49:48"><expr pos:start="49:9" pos:end="49:47"><name pos:start="49:9" pos:end="49:14">header</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <operator pos:start="49:18" pos:end="49:18">(</operator><name pos:start="49:19" pos:end="49:24">header</name> <operator pos:start="49:26" pos:end="49:27">&lt;&lt;</operator> <literal type="number" pos:start="49:29" pos:end="49:29">8</literal><operator pos:start="49:30" pos:end="49:30">)</operator> <operator pos:start="49:32" pos:end="49:32">+</operator> <call pos:start="49:34" pos:end="49:47"><name pos:start="49:34" pos:end="49:40">avio_r8</name><argument_list pos:start="49:41" pos:end="49:47">(<argument pos:start="49:42" pos:end="49:46"><expr pos:start="49:42" pos:end="49:46"><name pos:start="49:42" pos:end="49:46"><name pos:start="49:42" pos:end="49:42">s</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:46">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="65:9"><if pos:start="51:9" pos:end="65:9">if <condition pos:start="51:12" pos:end="51:45">(<expr pos:start="51:13" pos:end="51:44"><call pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:31">ff_mpa_check_header</name><argument_list pos:start="51:32" pos:end="51:39">(<argument pos:start="51:33" pos:end="51:38"><expr pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:38">header</name></expr></argument>)</argument_list></call> <operator pos:start="51:41" pos:end="51:42">&gt;=</operator> <literal type="number" pos:start="51:44" pos:end="51:44">0</literal></expr>)</condition> <block pos:start="51:47" pos:end="65:9">{<block_content pos:start="53:13" pos:end="63:40">

            <expr_stmt pos:start="53:13" pos:end="53:52"><expr pos:start="53:13" pos:end="53:51"><call pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:29">ff_update_cur_dts</name><argument_list pos:start="53:30" pos:end="53:51">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">s</name></expr></argument>, <argument pos:start="53:34" pos:end="53:35"><expr pos:start="53:34" pos:end="53:35"><name pos:start="53:34" pos:end="53:35">st</name></expr></argument>, <argument pos:start="53:38" pos:end="53:50"><expr pos:start="53:38" pos:end="53:50"><name pos:start="53:38" pos:end="53:50"><name pos:start="53:38" pos:end="53:39">ie</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:50">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:49"><expr pos:start="55:13" pos:end="55:48"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:48"><name pos:start="55:19" pos:end="55:27">avio_seek</name><argument_list pos:start="55:28" pos:end="55:48">(<argument pos:start="55:29" pos:end="55:33"><expr pos:start="55:29" pos:end="55:33"><name pos:start="55:29" pos:end="55:33"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:33">pb</name></name></expr></argument>, <argument pos:start="55:36" pos:end="55:37"><expr pos:start="55:36" pos:end="55:37"><operator pos:start="55:36" pos:end="55:36">-</operator><literal type="number" pos:start="55:37" pos:end="55:37">4</literal></expr></argument>, <argument pos:start="55:40" pos:end="55:47"><expr pos:start="55:40" pos:end="55:47"><name pos:start="55:40" pos:end="55:47">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:81"><expr pos:start="59:13" pos:end="59:80"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:14">st</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:28">skip_samples</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <ternary pos:start="59:32" pos:end="59:80"><condition pos:start="59:32" pos:end="59:51"><expr pos:start="59:32" pos:end="59:49"><name pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:33">ie</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:44">timestamp</name></name> <operator pos:start="59:46" pos:end="59:47">&lt;=</operator> <literal type="number" pos:start="59:49" pos:end="59:49">0</literal></expr> ?</condition><then pos:start="59:53" pos:end="59:76"> <expr pos:start="59:53" pos:end="59:76"><name pos:start="59:53" pos:end="59:66"><name pos:start="59:53" pos:end="59:55">mp3</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:66">start_pad</name></name> <operator pos:start="59:68" pos:end="59:68">+</operator> <literal type="number" pos:start="59:70" pos:end="59:74">528</literal> <operator pos:start="59:74" pos:end="59:74">+</operator> <literal type="number" pos:start="59:76" pos:end="59:76">1</literal></expr> </then><else pos:start="59:78" pos:end="59:80">: <expr pos:start="59:80" pos:end="59:80"><literal type="number" pos:start="59:80" pos:end="59:80">0</literal></expr></else></ternary></expr>;</expr_stmt>



            <return pos:start="63:13" pos:end="63:40">return <expr pos:start="63:20" pos:end="63:39"><ternary pos:start="63:20" pos:end="63:39"><condition pos:start="63:20" pos:end="63:31"><expr pos:start="63:20" pos:end="63:29"><operator pos:start="63:20" pos:end="63:20">(</operator><name pos:start="63:21" pos:end="63:23">ret</name> <operator pos:start="63:25" pos:end="63:26">&gt;=</operator> <literal type="number" pos:start="63:28" pos:end="63:28">0</literal><operator pos:start="63:29" pos:end="63:29">)</operator></expr> ?</condition><then pos:start="63:33" pos:end="63:33"> <expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">0</literal></expr> </then><else pos:start="63:35" pos:end="63:39">: <expr pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:39">ret</name></expr></else></ternary></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="71:5" pos:end="71:23">return <expr pos:start="71:12" pos:end="71:22"><name pos:start="71:12" pos:end="71:22">AVERROR_EOF</name></expr>;</return>

</block_content>}</block></function>
</unit>
