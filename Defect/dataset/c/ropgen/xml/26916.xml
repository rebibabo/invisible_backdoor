<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26916.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:31"><name pos:start="1:1" pos:end="1:15">e1000e_init_msi</name><argument_list pos:start="1:16" pos:end="1:31">(<argument pos:start="1:17" pos:end="1:30">E1000EState *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="17:26"><expr pos:start="9:5" pos:end="17:25"><name pos:start="9:5" pos:end="9:7">res</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="17:25"><name pos:start="9:11" pos:end="9:18">msi_init</name><argument_list pos:start="9:19" pos:end="17:25">(<argument pos:start="9:20" pos:end="9:32"><expr pos:start="9:20" pos:end="9:32"><call pos:start="9:20" pos:end="9:32"><name pos:start="9:20" pos:end="9:29">PCI_DEVICE</name><argument_list pos:start="9:30" pos:end="9:32">(<argument pos:start="9:31" pos:end="9:31"><expr pos:start="9:31" pos:end="9:31"><name pos:start="9:31" pos:end="9:31">s</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><literal type="number" pos:start="11:20" pos:end="11:23">0xD0</literal></expr></argument>,   <comment type="block" pos:start="11:28" pos:end="11:67">/* MSI capability offset              */</comment>

                   <argument pos:start="13:20" pos:end="13:20"><expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">1</literal></expr></argument>,      <comment type="block" pos:start="13:28" pos:end="13:67">/* MAC MSI interrupts                 */</comment>

                   <argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">true</name></expr></argument>,   <comment type="block" pos:start="15:28" pos:end="15:67">/* 64-bit message addresses supported */</comment>

                   <argument pos:start="17:20" pos:end="17:24"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:24">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:28" pos:end="17:67">/* Per vector mask supported          */</comment>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">res</name> <operator pos:start="21:13" pos:end="21:13">&gt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition> <block pos:start="21:18" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:40">

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">intr_state</name></name> <operator pos:start="23:23" pos:end="23:24">|=</operator> <name pos:start="23:26" pos:end="23:39">E1000E_USE_MSI</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:40">

        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><call pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:34">trace_e1000e_msi_init_fail</name><argument_list pos:start="27:35" pos:end="27:39">(<argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
