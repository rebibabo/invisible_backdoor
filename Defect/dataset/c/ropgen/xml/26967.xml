<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26967.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:26">cpu_get_apic_base</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">DeviceState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <if_stmt pos:start="5:5" pos:end="19:5"><if pos:start="5:5" pos:end="13:5">if <condition pos:start="5:8" pos:end="5:10">(<expr pos:start="5:9" pos:end="5:9"><name pos:start="5:9" pos:end="5:9">d</name></expr>)</condition> <block pos:start="5:12" pos:end="13:5">{<block_content pos:start="7:9" pos:end="11:27">

        <decl_stmt pos:start="7:9" pos:end="7:44"><decl pos:start="7:9" pos:end="7:43"><type pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:23">APICCommonState</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:43">= <expr pos:start="7:30" pos:end="7:43"><call pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:40">APIC_COMMON</name><argument_list pos:start="7:41" pos:end="7:43">(<argument pos:start="7:42" pos:end="7:42"><expr pos:start="7:42" pos:end="7:42"><name pos:start="7:42" pos:end="7:42">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:55"><expr pos:start="9:9" pos:end="9:54"><call pos:start="9:9" pos:end="9:54"><name pos:start="9:9" pos:end="9:31">trace_cpu_get_apic_base</name><argument_list pos:start="9:32" pos:end="9:54">(<argument pos:start="9:33" pos:end="9:53"><expr pos:start="9:33" pos:end="9:53"><operator pos:start="9:33" pos:end="9:33">(</operator><name pos:start="9:34" pos:end="9:41">uint64_t</name><operator pos:start="9:42" pos:end="9:42">)</operator><name pos:start="9:43" pos:end="9:53"><name pos:start="9:43" pos:end="9:43">s</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:53">apicbase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:27">return <expr pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:26">apicbase</name></name></expr>;</return>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="19:5">else <block pos:start="13:12" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:31">trace_cpu_get_apic_base</name><argument_list pos:start="15:32" pos:end="15:34">(<argument pos:start="15:33" pos:end="15:33"><expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
