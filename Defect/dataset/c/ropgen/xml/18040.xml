<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18040.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">icp_pic_write</name><parameter_list pos:start="1:26" pos:end="3:56">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:65"><decl pos:start="1:41" pos:end="1:65"><type pos:start="1:41" pos:end="1:65"><name pos:start="1:41" pos:end="1:58">target_phys_addr_t</name></type> <name pos:start="1:60" pos:end="1:65">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:22">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">icp_pic_state</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:46">= <expr pos:start="7:24" pos:end="7:46"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:37">icp_pic_state</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator><name pos:start="7:41" pos:end="7:46">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="67:5">switch <condition pos:start="11:12" pos:end="11:24">(<expr pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:18">offset</name> <operator pos:start="11:20" pos:end="11:21">&gt;&gt;</operator> <literal type="number" pos:start="11:23" pos:end="11:23">2</literal></expr>)</condition> <block pos:start="11:26" pos:end="67:5">{<block_content pos:start="13:5" pos:end="65:15">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">2</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:31">/* IRQ_ENABLESET */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:32"><expr pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">irq_enabled</name></name> <operator pos:start="15:24" pos:end="15:25">|=</operator> <name pos:start="15:27" pos:end="15:31">value</name></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">3</literal></expr>:</case> <comment type="block" pos:start="19:13" pos:end="19:31">/* IRQ_ENABLECLR */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">irq_enabled</name></name> <operator pos:start="21:24" pos:end="21:25">&amp;=</operator> <operator pos:start="21:27" pos:end="21:27">~</operator><name pos:start="21:28" pos:end="21:32">value</name></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">4</literal></expr>:</case> <comment type="block" pos:start="25:13" pos:end="25:29">/* INT_SOFTSET */</comment>

        <if_stmt pos:start="27:9" pos:end="29:37"><if pos:start="27:9" pos:end="29:37">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:17">value</name> <operator pos:start="27:19" pos:end="27:19">&amp;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:37"><block_content pos:start="29:13" pos:end="29:37">

            <expr_stmt pos:start="29:13" pos:end="29:37"><expr pos:start="29:13" pos:end="29:36"><call pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:27">icp_pic_set_irq</name><argument_list pos:start="29:28" pos:end="29:36">(<argument pos:start="29:29" pos:end="29:29"><expr pos:start="29:29" pos:end="29:29"><name pos:start="29:29" pos:end="29:29">s</name></expr></argument>, <argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr></argument>, <argument pos:start="29:35" pos:end="29:35"><expr pos:start="29:35" pos:end="29:35"><literal type="number" pos:start="29:35" pos:end="29:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">5</literal></expr>:</case> <comment type="block" pos:start="33:13" pos:end="33:29">/* INT_SOFTCLR */</comment>

        <if_stmt pos:start="35:9" pos:end="37:37"><if pos:start="35:9" pos:end="37:37">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:17">value</name> <operator pos:start="35:19" pos:end="35:19">&amp;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:37"><block_content pos:start="37:13" pos:end="37:37">

            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><call pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:27">icp_pic_set_irq</name><argument_list pos:start="37:28" pos:end="37:36">(<argument pos:start="37:29" pos:end="37:29"><expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">s</name></expr></argument>, <argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:12">case <expr pos:start="41:10" pos:end="41:11"><literal type="number" pos:start="41:10" pos:end="41:11">10</literal></expr>:</case> <comment type="block" pos:start="41:14" pos:end="41:32">/* FRQ_ENABLESET */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:22">fiq_enabled</name></name> <operator pos:start="43:24" pos:end="43:25">|=</operator> <name pos:start="43:27" pos:end="43:31">value</name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:12">case <expr pos:start="47:10" pos:end="47:11"><literal type="number" pos:start="47:10" pos:end="47:11">11</literal></expr>:</case> <comment type="block" pos:start="47:14" pos:end="47:32">/* FRQ_ENABLECLR */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:22">fiq_enabled</name></name> <operator pos:start="49:24" pos:end="49:25">&amp;=</operator> <operator pos:start="49:27" pos:end="49:27">~</operator><name pos:start="49:28" pos:end="49:32">value</name></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">0</literal></expr>:</case> <comment type="block" pos:start="53:13" pos:end="53:28">/* IRQ_STATUS */</comment>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">1</literal></expr>:</case> <comment type="block" pos:start="55:13" pos:end="55:29">/* IRQ_RAWSTAT */</comment>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">8</literal></expr>:</case> <comment type="block" pos:start="57:13" pos:end="57:28">/* FRQ_STATUS */</comment>

    <case pos:start="59:5" pos:end="59:11">case <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">9</literal></expr>:</case> <comment type="block" pos:start="59:13" pos:end="59:29">/* FRQ_RAWSTAT */</comment>

    <default pos:start="61:5" pos:end="61:12">default:</default>

        <expr_stmt pos:start="63:9" pos:end="63:74"><expr pos:start="63:9" pos:end="63:73"><call pos:start="63:9" pos:end="63:73"><name pos:start="63:9" pos:end="63:14">printf</name> <argument_list pos:start="63:16" pos:end="63:73">(<argument pos:start="63:17" pos:end="63:59"><expr pos:start="63:17" pos:end="63:59"><literal type="string" pos:start="63:17" pos:end="63:59">"icp_pic_write: Bad register offset 0x%x\n"</literal></expr></argument>, <argument pos:start="63:62" pos:end="63:72"><expr pos:start="63:62" pos:end="63:72"><operator pos:start="63:62" pos:end="63:62">(</operator><name pos:start="63:63" pos:end="63:65">int</name><operator pos:start="63:66" pos:end="63:66">)</operator><name pos:start="63:67" pos:end="63:72">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><call pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:18">icp_pic_update</name><argument_list pos:start="69:19" pos:end="69:21">(<argument pos:start="69:20" pos:end="69:20"><expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
