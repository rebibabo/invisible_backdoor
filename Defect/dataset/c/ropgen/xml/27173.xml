<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27173.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">AVFilterContext</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:36">parse_filter</name><parameter_list pos:start="1:37" pos:end="3:65">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier><modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">buf</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:75"><decl pos:start="1:56" pos:end="1:75"><type pos:start="1:56" pos:end="1:75"><name pos:start="1:56" pos:end="1:68">AVFilterGraph</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:75">graph</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:46">index</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:64"><decl pos:start="3:49" pos:end="3:64"><type pos:start="3:49" pos:end="3:64"><name pos:start="3:49" pos:end="3:55">AVClass</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:64">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:60">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">opts</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14">name</name> <init pos:start="9:16" pos:end="9:36">= <expr pos:start="9:18" pos:end="9:36"><call pos:start="9:18" pos:end="9:36"><name pos:start="9:18" pos:end="9:31">consume_string</name><argument_list pos:start="9:32" pos:end="9:36">(<argument pos:start="9:33" pos:end="9:35"><expr pos:start="9:33" pos:end="9:35"><name pos:start="9:33" pos:end="9:35">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if<condition pos:start="13:7" pos:end="13:20">(<expr pos:start="13:8" pos:end="13:19"><operator pos:start="13:8" pos:end="13:8">*</operator><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:12">buf</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <literal type="char" pos:start="13:17" pos:end="13:19">'='</literal></expr>)</condition> <block pos:start="13:22" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:35">

        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><operator pos:start="15:9" pos:end="15:9">(</operator><operator pos:start="15:10" pos:end="15:10">*</operator><name pos:start="15:11" pos:end="15:13">buf</name><operator pos:start="15:14" pos:end="15:14">)</operator><operator pos:start="15:15" pos:end="15:16">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:12">opts</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:29">consume_string</name><argument_list pos:start="17:30" pos:end="17:34">(<argument pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:33">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="23:5" pos:end="23:60">return <expr pos:start="23:12" pos:end="23:59"><call pos:start="23:12" pos:end="23:59"><name pos:start="23:12" pos:end="23:24">create_filter</name><argument_list pos:start="23:25" pos:end="23:59">(<argument pos:start="23:26" pos:end="23:30"><expr pos:start="23:26" pos:end="23:30"><name pos:start="23:26" pos:end="23:30">graph</name></expr></argument>, <argument pos:start="23:33" pos:end="23:37"><expr pos:start="23:33" pos:end="23:37"><name pos:start="23:33" pos:end="23:37">index</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">name</name></expr></argument>, <argument pos:start="23:46" pos:end="23:49"><expr pos:start="23:46" pos:end="23:49"><name pos:start="23:46" pos:end="23:49">opts</name></expr></argument>, <argument pos:start="23:52" pos:end="23:58"><expr pos:start="23:52" pos:end="23:58"><name pos:start="23:52" pos:end="23:58">log_ctx</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
