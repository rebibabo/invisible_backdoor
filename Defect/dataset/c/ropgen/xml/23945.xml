<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23945.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:27"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">v9fs_link</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="29:27">{<block_content pos:start="3:5" pos:end="29:27">
    <decl_stmt pos:start="3:5" pos:end="3:26"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:11">V9fsPDU</name> <modifier pos:start="3:13" pos:end="3:13">*</modifier></type><name pos:start="3:14" pos:end="3:16">pdu</name> <init pos:start="3:18" pos:end="3:25">= <expr pos:start="3:20" pos:end="3:25"><name pos:start="3:20" pos:end="3:25">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:11">int32_t</name></type> <name pos:start="4:13" pos:end="4:16">dfid</name></decl>, <decl pos:start="4:19" pos:end="4:24"><type ref="prev" pos:start="4:5" pos:end="4:11"/><name pos:start="4:19" pos:end="4:24">oldfid</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">V9fsFidState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">dfidp</name></decl>, <decl pos:start="5:26" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:18"><modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:33">oldfidp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:20"><decl pos:start="6:5" pos:end="6:19"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:14">V9fsString</name></type> <name pos:start="6:16" pos:end="6:19">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:17">offset</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">7</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:15"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">err</name> <init pos:start="8:13" pos:end="8:15">= <expr pos:start="8:15" pos:end="8:15"><literal type="number" pos:start="8:15" pos:end="8:15">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><call pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:20">v9fs_string_init</name><argument_list pos:start="9:21" pos:end="9:27">(<argument pos:start="9:22" pos:end="9:26"><expr pos:start="9:22" pos:end="9:26"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:67"><expr pos:start="10:5" pos:end="10:66"><name pos:start="10:5" pos:end="10:7">err</name> <operator pos:start="10:9" pos:end="10:9">=</operator> <call pos:start="10:11" pos:end="10:66"><name pos:start="10:11" pos:end="10:23">pdu_unmarshal</name><argument_list pos:start="10:24" pos:end="10:66">(<argument pos:start="10:25" pos:end="10:27"><expr pos:start="10:25" pos:end="10:27"><name pos:start="10:25" pos:end="10:27">pdu</name></expr></argument>, <argument pos:start="10:30" pos:end="10:35"><expr pos:start="10:30" pos:end="10:35"><name pos:start="10:30" pos:end="10:35">offset</name></expr></argument>, <argument pos:start="10:38" pos:end="10:42"><expr pos:start="10:38" pos:end="10:42"><literal type="string" pos:start="10:38" pos:end="10:42">"dds"</literal></expr></argument>, <argument pos:start="10:45" pos:end="10:49"><expr pos:start="10:45" pos:end="10:49"><operator pos:start="10:45" pos:end="10:45">&amp;</operator><name pos:start="10:46" pos:end="10:49">dfid</name></expr></argument>, <argument pos:start="10:52" pos:end="10:58"><expr pos:start="10:52" pos:end="10:58"><operator pos:start="10:52" pos:end="10:52">&amp;</operator><name pos:start="10:53" pos:end="10:58">oldfid</name></expr></argument>, <argument pos:start="10:61" pos:end="10:65"><expr pos:start="10:61" pos:end="10:65"><operator pos:start="10:61" pos:end="10:61">&amp;</operator><name pos:start="10:62" pos:end="10:65">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="29:27"><if pos:start="11:5" pos:end="29:27">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">err</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition> <block pos:start="11:18" pos:end="29:27">{<block_content pos:start="12:5" pos:end="29:27">
    <expr_stmt pos:start="12:5" pos:end="12:64"><expr pos:start="12:5" pos:end="12:63"><call pos:start="12:5" pos:end="12:63"><name pos:start="12:5" pos:end="12:19">trace_v9fs_link</name><argument_list pos:start="12:20" pos:end="12:63">(<argument pos:start="12:21" pos:end="12:28"><expr pos:start="12:21" pos:end="12:28"><name pos:start="12:21" pos:end="12:28"><name pos:start="12:21" pos:end="12:23">pdu</name><operator pos:start="12:24" pos:end="12:25">-&gt;</operator><name pos:start="12:26" pos:end="12:28">tag</name></name></expr></argument>, <argument pos:start="12:31" pos:end="12:37"><expr pos:start="12:31" pos:end="12:37"><name pos:start="12:31" pos:end="12:37"><name pos:start="12:31" pos:end="12:33">pdu</name><operator pos:start="12:34" pos:end="12:35">-&gt;</operator><name pos:start="12:36" pos:end="12:37">id</name></name></expr></argument>, <argument pos:start="12:40" pos:end="12:43"><expr pos:start="12:40" pos:end="12:43"><name pos:start="12:40" pos:end="12:43">dfid</name></expr></argument>, <argument pos:start="12:46" pos:end="12:51"><expr pos:start="12:46" pos:end="12:51"><name pos:start="12:46" pos:end="12:51">oldfid</name></expr></argument>, <argument pos:start="12:54" pos:end="12:62"><expr pos:start="12:54" pos:end="12:62"><name pos:start="12:54" pos:end="12:62"><name pos:start="12:54" pos:end="12:57">name</name><operator pos:start="12:58" pos:end="12:58">.</operator><name pos:start="12:59" pos:end="12:62">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="29:27"><if pos:start="13:5" pos:end="29:27">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><call pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:23">name_is_illegal</name><argument_list pos:start="13:24" pos:end="13:34">(<argument pos:start="13:25" pos:end="13:33"><expr pos:start="13:25" pos:end="13:33"><name pos:start="13:25" pos:end="13:33"><name pos:start="13:25" pos:end="13:28">name</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:33">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:37" pos:end="29:27">{<block_content pos:start="14:9" pos:end="29:27">
        <expr_stmt pos:start="14:9" pos:end="14:22"><expr pos:start="14:9" pos:end="14:21"><name pos:start="14:9" pos:end="14:11">err</name> <operator pos:start="14:13" pos:end="14:13">=</operator> <operator pos:start="14:15" pos:end="14:15">-</operator><name pos:start="14:16" pos:end="14:21">ENOENT</name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:9">dfidp</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:19">get_fid</name><argument_list pos:start="15:20" pos:end="15:30">(<argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">pdu</name></expr></argument>, <argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">dfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="29:27"><if pos:start="16:5" pos:end="29:27">if <condition pos:start="16:8" pos:end="16:22">(<expr pos:start="16:9" pos:end="16:21"><name pos:start="16:9" pos:end="16:13">dfidp</name> <operator pos:start="16:15" pos:end="16:16">==</operator> <name pos:start="16:18" pos:end="16:21">NULL</name></expr>)</condition> <block pos:start="16:24" pos:end="29:27">{<block_content pos:start="17:9" pos:end="29:27">
        <expr_stmt pos:start="17:9" pos:end="17:22"><expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:11">err</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <operator pos:start="17:15" pos:end="17:15">-</operator><name pos:start="17:16" pos:end="17:21">ENOENT</name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:35"><expr pos:start="18:5" pos:end="18:34"><name pos:start="18:5" pos:end="18:11">oldfidp</name> <operator pos:start="18:13" pos:end="18:13">=</operator> <call pos:start="18:15" pos:end="18:34"><name pos:start="18:15" pos:end="18:21">get_fid</name><argument_list pos:start="18:22" pos:end="18:34">(<argument pos:start="18:23" pos:end="18:25"><expr pos:start="18:23" pos:end="18:25"><name pos:start="18:23" pos:end="18:25">pdu</name></expr></argument>, <argument pos:start="18:28" pos:end="18:33"><expr pos:start="18:28" pos:end="18:33"><name pos:start="18:28" pos:end="18:33">oldfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="29:27"><if pos:start="19:5" pos:end="29:27">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:15">oldfidp</name> <operator pos:start="19:17" pos:end="19:18">==</operator> <name pos:start="19:20" pos:end="19:23">NULL</name></expr>)</condition> <block pos:start="19:26" pos:end="29:27">{<block_content pos:start="20:9" pos:end="29:27">
        <expr_stmt pos:start="20:9" pos:end="20:22"><expr pos:start="20:9" pos:end="20:21"><name pos:start="20:9" pos:end="20:11">err</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <operator pos:start="20:15" pos:end="20:15">-</operator><name pos:start="20:16" pos:end="20:21">ENOENT</name></expr>;</expr_stmt>
        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>
    <expr_stmt pos:start="22:5" pos:end="22:51"><expr pos:start="22:5" pos:end="22:50"><name pos:start="22:5" pos:end="22:7">err</name> <operator pos:start="22:9" pos:end="22:9">=</operator> <call pos:start="22:11" pos:end="22:50"><name pos:start="22:11" pos:end="22:22">v9fs_co_link</name><argument_list pos:start="22:23" pos:end="22:50">(<argument pos:start="22:24" pos:end="22:26"><expr pos:start="22:24" pos:end="22:26"><name pos:start="22:24" pos:end="22:26">pdu</name></expr></argument>, <argument pos:start="22:29" pos:end="22:35"><expr pos:start="22:29" pos:end="22:35"><name pos:start="22:29" pos:end="22:35">oldfidp</name></expr></argument>, <argument pos:start="22:38" pos:end="22:42"><expr pos:start="22:38" pos:end="22:42"><name pos:start="22:38" pos:end="22:42">dfidp</name></expr></argument>, <argument pos:start="22:45" pos:end="22:49"><expr pos:start="22:45" pos:end="22:49"><operator pos:start="22:45" pos:end="22:45">&amp;</operator><name pos:start="22:46" pos:end="22:49">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="29:27"><if pos:start="23:5" pos:end="29:27">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">err</name></expr>)</condition> <block pos:start="23:15" pos:end="29:27">{<block_content pos:start="24:9" pos:end="29:27">
        <expr_stmt pos:start="24:9" pos:end="24:21"><expr pos:start="24:9" pos:end="24:20"><name pos:start="24:9" pos:end="24:11">err</name> <operator pos:start="24:13" pos:end="24:13">=</operator> <name pos:start="24:15" pos:end="24:20">offset</name></expr>;</expr_stmt>
<label pos:start="25:1" pos:end="25:4"><name pos:start="25:1" pos:end="25:3">out</name>:</label>
    <expr_stmt pos:start="26:5" pos:end="26:24"><expr pos:start="26:5" pos:end="26:23"><call pos:start="26:5" pos:end="26:23"><name pos:start="26:5" pos:end="26:11">put_fid</name><argument_list pos:start="26:12" pos:end="26:23">(<argument pos:start="26:13" pos:end="26:15"><expr pos:start="26:13" pos:end="26:15"><name pos:start="26:13" pos:end="26:15">pdu</name></expr></argument>, <argument pos:start="26:18" pos:end="26:22"><expr pos:start="26:18" pos:end="26:22"><name pos:start="26:18" pos:end="26:22">dfidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="27:1" pos:end="27:10"><name pos:start="27:1" pos:end="27:9">out_nofid</name>:</label>
    <expr_stmt pos:start="28:5" pos:end="28:28"><expr pos:start="28:5" pos:end="28:27"><call pos:start="28:5" pos:end="28:27"><name pos:start="28:5" pos:end="28:20">v9fs_string_free</name><argument_list pos:start="28:21" pos:end="28:27">(<argument pos:start="28:22" pos:end="28:26"><expr pos:start="28:22" pos:end="28:26"><operator pos:start="28:22" pos:end="28:22">&amp;</operator><name pos:start="28:23" pos:end="28:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:16">pdu_complete</name><argument_list pos:start="29:17" pos:end="29:26">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">pdu</name></expr></argument>, <argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
