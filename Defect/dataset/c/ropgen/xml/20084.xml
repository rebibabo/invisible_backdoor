<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20084.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">QemuOpts</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:26">qemu_opts_create</name><parameter_list pos:start="1:27" pos:end="1:82">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:39">QemuOptsList</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">list</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">id</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:81"><decl pos:start="1:64" pos:end="1:81"><type pos:start="1:64" pos:end="1:81"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:81">fail_if_exists</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:16">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name> <init pos:start="5:20" pos:end="5:25">= <expr pos:start="5:22" pos:end="5:25"><name pos:start="5:22" pos:end="5:25">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="31:5"><if pos:start="9:5" pos:end="31:5">if <condition pos:start="9:8" pos:end="9:11">(<expr pos:start="9:9" pos:end="9:10"><name pos:start="9:9" pos:end="9:10">id</name></expr>)</condition> <block pos:start="9:13" pos:end="31:5">{<block_content pos:start="11:9" pos:end="29:9">

        <expr_stmt pos:start="11:9" pos:end="11:40"><expr pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:12">opts</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:39"><name pos:start="11:16" pos:end="11:29">qemu_opts_find</name><argument_list pos:start="11:30" pos:end="11:39">(<argument pos:start="11:31" pos:end="11:34"><expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">list</name></expr></argument>, <argument pos:start="11:37" pos:end="11:38"><expr pos:start="11:37" pos:end="11:38"><name pos:start="11:37" pos:end="11:38">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="29:9"><if pos:start="13:9" pos:end="29:9">if <condition pos:start="13:12" pos:end="13:25">(<expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:16">opts</name> <operator pos:start="13:18" pos:end="13:19">!=</operator> <name pos:start="13:21" pos:end="13:24">NULL</name></expr>)</condition> <block pos:start="13:27" pos:end="29:9">{<block_content pos:start="15:13" pos:end="27:13">

            <if_stmt pos:start="15:13" pos:end="27:13"><if pos:start="15:13" pos:end="23:13">if <condition pos:start="15:16" pos:end="15:31">(<expr pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:30">fail_if_exists</name></expr>)</condition> <block pos:start="15:33" pos:end="23:13">{<block_content pos:start="17:17" pos:end="21:28">

                <expr_stmt pos:start="17:17" pos:end="19:40"><expr pos:start="17:17" pos:end="19:39"><call pos:start="17:17" pos:end="19:39"><name pos:start="17:17" pos:end="17:23">fprintf</name><argument_list pos:start="17:24" pos:end="19:39">(<argument pos:start="17:25" pos:end="17:30"><expr pos:start="17:25" pos:end="17:30"><name pos:start="17:25" pos:end="17:30">stderr</name></expr></argument>, <argument pos:start="17:33" pos:end="17:78"><expr pos:start="17:33" pos:end="17:78"><literal type="string" pos:start="17:33" pos:end="17:78">"tried to create id \"%s\" twice for \"%s\"\n"</literal></expr></argument>,

                        <argument pos:start="19:25" pos:end="19:26"><expr pos:start="19:25" pos:end="19:26"><name pos:start="19:25" pos:end="19:26">id</name></expr></argument>, <argument pos:start="19:29" pos:end="19:38"><expr pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:32">list</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:38">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="21:17" pos:end="21:28">return <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="23:15" pos:end="27:13">else <block pos:start="23:20" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:28">

                <return pos:start="25:17" pos:end="25:28">return <expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">opts</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:8">opts</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <call pos:start="33:12" pos:end="33:38"><name pos:start="33:12" pos:end="33:23">qemu_mallocz</name><argument_list pos:start="33:24" pos:end="33:38">(<argument pos:start="33:25" pos:end="33:37"><expr pos:start="33:25" pos:end="33:37"><sizeof pos:start="33:25" pos:end="33:37">sizeof<argument_list pos:start="33:31" pos:end="33:37">(<argument pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><operator pos:start="33:32" pos:end="33:32">*</operator><name pos:start="33:33" pos:end="33:36">opts</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:11">(<expr pos:start="35:9" pos:end="35:10"><name pos:start="35:9" pos:end="35:10">id</name></expr>)</condition> <block pos:start="35:13" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:35">

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:12">opts</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:16">id</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:30">qemu_strdup</name><argument_list pos:start="37:31" pos:end="37:34">(<argument pos:start="37:32" pos:end="37:33"><expr pos:start="37:32" pos:end="37:33"><name pos:start="37:32" pos:end="37:33">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:8">opts</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:14">list</name></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:21">list</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><call pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:14">TAILQ_INIT</name><argument_list pos:start="43:15" pos:end="43:27">(<argument pos:start="43:16" pos:end="43:26"><expr pos:start="43:16" pos:end="43:26"><operator pos:start="43:16" pos:end="43:16">&amp;</operator><name pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:20">opts</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:26">head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><call pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:21">TAILQ_INSERT_TAIL</name><argument_list pos:start="45:22" pos:end="45:46">(<argument pos:start="45:23" pos:end="45:33"><expr pos:start="45:23" pos:end="45:33"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:33"><name pos:start="45:24" pos:end="45:27">list</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:33">head</name></name></expr></argument>, <argument pos:start="45:36" pos:end="45:39"><expr pos:start="45:36" pos:end="45:39"><name pos:start="45:36" pos:end="45:39">opts</name></expr></argument>, <argument pos:start="45:42" pos:end="45:45"><expr pos:start="45:42" pos:end="45:45"><name pos:start="45:42" pos:end="45:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:16">return <expr pos:start="47:12" pos:end="47:15"><name pos:start="47:12" pos:end="47:15">opts</name></expr>;</return>

</block_content>}</block></function>
</unit>
