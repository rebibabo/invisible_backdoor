<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8005.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">HEVCFrame</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:30">find_ref_idx</name><parameter_list pos:start="1:31" pos:end="1:55">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:42">HEVCContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">poc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:16">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">LtMask</name> <init pos:start="7:16" pos:end="7:52">= <expr pos:start="7:18" pos:end="7:52"><operator pos:start="7:18" pos:end="7:18">(</operator><literal type="number" pos:start="7:19" pos:end="7:19">1</literal> <operator pos:start="7:21" pos:end="7:22">&lt;&lt;</operator> <name pos:start="7:24" pos:end="7:47"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:29">sps</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:47">log2_max_poc_lsb</name></name><operator pos:start="7:48" pos:end="7:48">)</operator> <operator pos:start="7:50" pos:end="7:50">-</operator> <literal type="number" pos:start="7:52" pos:end="7:52">1</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="23:5">for <control pos:start="11:9" pos:end="11:48">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:43"><expr pos:start="11:17" pos:end="11:42"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <call pos:start="11:21" pos:end="11:42"><name pos:start="11:21" pos:end="11:34">FF_ARRAY_ELEMS</name><argument_list pos:start="11:35" pos:end="11:42">(<argument pos:start="11:36" pos:end="11:41"><expr pos:start="11:36" pos:end="11:41"><name pos:start="11:36" pos:end="11:41"><name pos:start="11:36" pos:end="11:36">s</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:41">DPB</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="11:45" pos:end="11:47"><expr pos:start="11:45" pos:end="11:47"><name pos:start="11:45" pos:end="11:45">i</name><operator pos:start="11:46" pos:end="11:47">++</operator></expr></incr>)</control> <block pos:start="11:50" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:9">

        <decl_stmt pos:start="13:9" pos:end="13:36"><decl pos:start="13:9" pos:end="13:35"><type pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:17">HEVCFrame</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">ref</name> <init pos:start="13:24" pos:end="13:35">= <expr pos:start="13:26" pos:end="13:35"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:35"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:32">DPB</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><name pos:start="13:34" pos:end="13:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:67">(<expr pos:start="15:13" pos:end="15:66"><name pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:15">ref</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:22">frame</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:27">buf</name><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>]</index></name> <operator pos:start="15:32" pos:end="15:33">&amp;&amp;</operator> <operator pos:start="15:35" pos:end="15:35">(</operator><name pos:start="15:36" pos:end="15:48"><name pos:start="15:36" pos:end="15:38">ref</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:48">sequence</name></name> <operator pos:start="15:50" pos:end="15:51">==</operator> <name pos:start="15:53" pos:end="15:65"><name pos:start="15:53" pos:end="15:53">s</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:65">seq_decode</name></name><operator pos:start="15:66" pos:end="15:66">)</operator></expr>)</condition> <block pos:start="15:69" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:27">

            <if_stmt pos:start="17:13" pos:end="19:27"><if pos:start="17:13" pos:end="19:27">if <condition pos:start="17:16" pos:end="17:43">(<expr pos:start="17:17" pos:end="17:42"><operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:25"><name pos:start="17:18" pos:end="17:20">ref</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:25">poc</name></name> <operator pos:start="17:27" pos:end="17:27">&amp;</operator> <name pos:start="17:29" pos:end="17:34">LtMask</name><operator pos:start="17:35" pos:end="17:35">)</operator> <operator pos:start="17:37" pos:end="17:38">==</operator> <name pos:start="17:40" pos:end="17:42">poc</name></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:27"><block_content pos:start="19:17" pos:end="19:27">

                <return pos:start="19:17" pos:end="19:27">return <expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">ref</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="27:5" pos:end="39:5">for <control pos:start="27:9" pos:end="27:48">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:43"><expr pos:start="27:17" pos:end="27:42"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <call pos:start="27:21" pos:end="27:42"><name pos:start="27:21" pos:end="27:34">FF_ARRAY_ELEMS</name><argument_list pos:start="27:35" pos:end="27:42">(<argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:36">s</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:41">DPB</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="27:45" pos:end="27:47"><expr pos:start="27:45" pos:end="27:47"><name pos:start="27:45" pos:end="27:45">i</name><operator pos:start="27:46" pos:end="27:47">++</operator></expr></incr>)</control> <block pos:start="27:50" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:9">

        <decl_stmt pos:start="29:9" pos:end="29:36"><decl pos:start="29:9" pos:end="29:35"><type pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:17">HEVCFrame</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:22">ref</name> <init pos:start="29:24" pos:end="29:35">= <expr pos:start="29:26" pos:end="29:35"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:35"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:32">DPB</name><index pos:start="29:33" pos:end="29:35">[<expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:65">(<expr pos:start="31:13" pos:end="31:64"><name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:15">ref</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:22">frame</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:27">buf</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>]</index></name> <operator pos:start="31:32" pos:end="31:33">&amp;&amp;</operator> <name pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:37">ref</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:47">sequence</name></name> <operator pos:start="31:49" pos:end="31:50">==</operator> <name pos:start="31:52" pos:end="31:64"><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:64">seq_decode</name></name></expr>)</condition> <block pos:start="31:67" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:27">

            <if_stmt pos:start="33:13" pos:end="35:27"><if pos:start="33:13" pos:end="35:27">if <condition pos:start="33:16" pos:end="33:62">(<expr pos:start="33:17" pos:end="33:61"><name pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:19">ref</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:24">poc</name></name> <operator pos:start="33:26" pos:end="33:27">==</operator> <name pos:start="33:29" pos:end="33:31">poc</name> <operator pos:start="33:33" pos:end="33:34">||</operator> <operator pos:start="33:36" pos:end="33:36">(</operator><name pos:start="33:37" pos:end="33:44"><name pos:start="33:37" pos:end="33:39">ref</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:44">poc</name></name> <operator pos:start="33:46" pos:end="33:46">&amp;</operator> <name pos:start="33:48" pos:end="33:53">LtMask</name><operator pos:start="33:54" pos:end="33:54">)</operator> <operator pos:start="33:56" pos:end="33:57">==</operator> <name pos:start="33:59" pos:end="33:61">poc</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:27"><block_content pos:start="35:17" pos:end="35:27">

                <return pos:start="35:17" pos:end="35:27">return <expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">ref</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="45:52"><expr pos:start="43:5" pos:end="45:51"><call pos:start="43:5" pos:end="45:51"><name pos:start="43:5" pos:end="43:10">av_log</name><argument_list pos:start="43:11" pos:end="45:51">(<argument pos:start="43:12" pos:end="43:19"><expr pos:start="43:12" pos:end="43:19"><name pos:start="43:12" pos:end="43:19"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:19">avctx</name></name></expr></argument>, <argument pos:start="43:22" pos:end="43:33"><expr pos:start="43:22" pos:end="43:33"><name pos:start="43:22" pos:end="43:33">AV_LOG_ERROR</name></expr></argument>,

           <argument pos:start="45:12" pos:end="45:45"><expr pos:start="45:12" pos:end="45:45"><literal type="string" pos:start="45:12" pos:end="45:45">"Could not find ref with POC %d\n"</literal></expr></argument>, <argument pos:start="45:48" pos:end="45:50"><expr pos:start="45:48" pos:end="45:50"><name pos:start="45:48" pos:end="45:50">poc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:16">return <expr pos:start="47:12" pos:end="47:15"><name pos:start="47:12" pos:end="47:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
