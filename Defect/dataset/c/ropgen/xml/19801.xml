<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19801.c" pos:tabs="8"><function pos:start="1:1" pos:end="603:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">img_compare</name><parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:31"><decl pos:start="1:24" pos:end="1:31"><type pos:start="1:24" pos:end="1:31"><name pos:start="1:24" pos:end="1:26">int</name></type> <name pos:start="1:28" pos:end="1:31">argc</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier><modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="603:1">{<block_content pos:start="5:5" pos:end="601:15">

    <decl_stmt pos:start="5:5" pos:end="5:74"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">fmt1</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>, <decl pos:start="5:30" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">fmt2</name> <init pos:start="5:36" pos:end="5:41">= <expr pos:start="5:38" pos:end="5:41"><name pos:start="5:38" pos:end="5:41">NULL</name></expr></init></decl>, <decl pos:start="5:44" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:49">cache</name></decl>, <decl pos:start="5:52" pos:end="5:61"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:61">filename1</name></decl>, <decl pos:start="5:64" pos:end="5:73"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:73">filename2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BlockBackend</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">blk1</name></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">blk2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">bs1</name></decl>, <decl pos:start="9:28" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:22"><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">bs2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:26">total_sectors1</name></decl>, <decl pos:start="11:29" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:29" pos:end="11:42">total_sectors2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">buf1</name> <init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">NULL</name></expr></init></decl>, <decl pos:start="13:27" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:31">buf2</name> <init pos:start="13:33" pos:end="13:38">= <expr pos:start="13:35" pos:end="13:38"><name pos:start="13:35" pos:end="13:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">pnum1</name></decl>, <decl pos:start="15:16" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:20">pnum2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">allocated1</name></decl>, <decl pos:start="17:21" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:30">allocated2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name> <init pos:start="19:13" pos:end="19:15">= <expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="19:18" pos:end="19:68">/* return value - 0 Ident, 1 Different, &gt;1 Error */</comment>

    <decl_stmt pos:start="21:5" pos:end="21:57"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">bool</name></type> <name pos:start="21:10" pos:end="21:17">progress</name> <init pos:start="21:19" pos:end="21:25">= <expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">false</name></expr></init></decl>, <decl pos:start="21:28" pos:end="21:40"><type ref="prev" pos:start="21:5" pos:end="21:8"/><name pos:start="21:28" pos:end="21:32">quiet</name> <init pos:start="21:34" pos:end="21:40">= <expr pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:40">false</name></expr></init></decl>, <decl pos:start="21:43" pos:end="21:56"><type ref="prev" pos:start="21:5" pos:end="21:8"/><name pos:start="21:43" pos:end="21:48">strict</name> <init pos:start="21:50" pos:end="21:56">= <expr pos:start="21:52" pos:end="21:56"><name pos:start="21:52" pos:end="21:56">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:21">writethrough</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:25"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:25">total_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:27"><decl pos:start="29:5" pos:end="29:26"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int64_t</name></type> <name pos:start="29:13" pos:end="29:22">sector_num</name> <init pos:start="29:24" pos:end="29:26">= <expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:23"><decl pos:start="31:5" pos:end="31:22"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">int64_t</name></type> <name pos:start="31:13" pos:end="31:22">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:16"><decl pos:start="33:5" pos:end="33:9"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:9">c</name></decl>, <decl pos:start="33:12" pos:end="33:15"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:12" pos:end="33:15">pnum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:27"><decl pos:start="35:5" pos:end="35:26"><type pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:12">uint64_t</name></type> <name pos:start="35:14" pos:end="35:26">progress_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:28"><decl pos:start="37:5" pos:end="37:27"><type pos:start="37:5" pos:end="37:8"><name pos:start="37:5" pos:end="37:8">bool</name></type> <name pos:start="37:10" pos:end="37:19">image_opts</name> <init pos:start="37:21" pos:end="37:27">= <expr pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:27">false</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:9">cache</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:30">BDRV_DEFAULT_CACHE</name></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="139:5">for <control pos:start="43:9" pos:end="43:12">(<init pos:start="43:10" pos:end="43:10">;</init><condition pos:start="43:11" pos:end="43:11">;</condition><incr/>)</control> <block pos:start="43:14" pos:end="139:5">{<block_content pos:start="45:9" pos:end="137:9">

        <decl_stmt pos:start="45:9" pos:end="55:10"><decl pos:start="45:9" pos:end="55:9"><type pos:start="45:9" pos:end="45:34"><specifier pos:start="45:9" pos:end="45:14">static</specifier> <specifier pos:start="45:16" pos:end="45:20">const</specifier> <name pos:start="45:22" pos:end="45:34"><name pos:start="45:22" pos:end="45:27">struct</name> <name pos:start="45:29" pos:end="45:34">option</name></name></type> <name pos:start="45:36" pos:end="45:49"><name pos:start="45:36" pos:end="45:47">long_options</name><index pos:start="45:48" pos:end="45:49">[]</index></name> <init pos:start="45:51" pos:end="55:9">= <expr pos:start="45:53" pos:end="55:9"><block pos:start="45:53" pos:end="55:9">{

            <expr pos:start="47:13" pos:end="47:41"><block pos:start="47:13" pos:end="47:41">{<expr pos:start="47:14" pos:end="47:19"><literal type="string" pos:start="47:14" pos:end="47:19">"help"</literal></expr>, <expr pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:32">no_argument</name></expr>, <expr pos:start="47:35" pos:end="47:35"><literal type="number" pos:start="47:35" pos:end="47:35">0</literal></expr>, <expr pos:start="47:38" pos:end="47:40"><literal type="char" pos:start="47:38" pos:end="47:40">'h'</literal></expr>}</block></expr>,

            <expr pos:start="49:13" pos:end="49:59"><block pos:start="49:13" pos:end="49:59">{<expr pos:start="49:14" pos:end="49:21"><literal type="string" pos:start="49:14" pos:end="49:21">"object"</literal></expr>, <expr pos:start="49:24" pos:end="49:40"><name pos:start="49:24" pos:end="49:40">required_argument</name></expr>, <expr pos:start="49:43" pos:end="49:43"><literal type="number" pos:start="49:43" pos:end="49:43">0</literal></expr>, <expr pos:start="49:46" pos:end="49:58"><name pos:start="49:46" pos:end="49:58">OPTION_OBJECT</name></expr>}</block></expr>,

            <expr pos:start="51:13" pos:end="51:61"><block pos:start="51:13" pos:end="51:61">{<expr pos:start="51:14" pos:end="51:25"><literal type="string" pos:start="51:14" pos:end="51:25">"image-opts"</literal></expr>, <expr pos:start="51:28" pos:end="51:38"><name pos:start="51:28" pos:end="51:38">no_argument</name></expr>, <expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">0</literal></expr>, <expr pos:start="51:44" pos:end="51:60"><name pos:start="51:44" pos:end="51:60">OPTION_IMAGE_OPTS</name></expr>}</block></expr>,

            <expr pos:start="53:13" pos:end="53:24"><block pos:start="53:13" pos:end="53:24">{<expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>, <expr pos:start="53:17" pos:end="53:17"><literal type="number" pos:start="53:17" pos:end="53:17">0</literal></expr>, <expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>, <expr pos:start="53:23" pos:end="53:23"><literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>}</block></expr>

        }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="57:9" pos:end="59:44"><expr pos:start="57:9" pos:end="59:43"><name pos:start="57:9" pos:end="57:9">c</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="59:43"><name pos:start="57:13" pos:end="57:23">getopt_long</name><argument_list pos:start="57:24" pos:end="59:43">(<argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><name pos:start="57:25" pos:end="57:28">argc</name></expr></argument>, <argument pos:start="57:31" pos:end="57:34"><expr pos:start="57:31" pos:end="57:34"><name pos:start="57:31" pos:end="57:34">argv</name></expr></argument>, <argument pos:start="57:37" pos:end="57:48"><expr pos:start="57:37" pos:end="57:48"><literal type="string" pos:start="57:37" pos:end="57:48">"hf:F:T:pqs"</literal></expr></argument>,

                        <argument pos:start="59:25" pos:end="59:36"><expr pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:36">long_options</name></expr></argument>, <argument pos:start="59:39" pos:end="59:42"><expr pos:start="59:39" pos:end="59:42"><name pos:start="59:39" pos:end="59:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:13">c</name> <operator pos:start="61:15" pos:end="61:16">==</operator> <operator pos:start="61:18" pos:end="61:18">-</operator><literal type="number" pos:start="61:19" pos:end="61:19">1</literal></expr>)</condition> <block pos:start="61:22" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="67:9" pos:end="137:9">switch <condition pos:start="67:16" pos:end="67:18">(<expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">c</name></expr>)</condition> <block pos:start="67:20" pos:end="137:9">{<block_content pos:start="69:9" pos:end="135:18">

        <case pos:start="69:9" pos:end="69:17">case <expr pos:start="69:14" pos:end="69:16"><literal type="char" pos:start="69:14" pos:end="69:16">'?'</literal></expr>:</case>

        <case pos:start="71:9" pos:end="71:17">case <expr pos:start="71:14" pos:end="71:16"><literal type="char" pos:start="71:14" pos:end="71:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:19"><expr pos:start="73:13" pos:end="73:18"><call pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:16">help</name><argument_list pos:start="73:17" pos:end="73:18">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:17">case <expr pos:start="77:14" pos:end="77:16"><literal type="char" pos:start="77:14" pos:end="77:16">'f'</literal></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:16">fmt1</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:25">optarg</name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:17">case <expr pos:start="83:14" pos:end="83:16"><literal type="char" pos:start="83:14" pos:end="83:16">'F'</literal></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:16">fmt2</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:25">optarg</name></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:17">case <expr pos:start="89:14" pos:end="89:16"><literal type="char" pos:start="89:14" pos:end="89:16">'T'</literal></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:27"><expr pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:17">cache</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:26">optarg</name></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:17">case <expr pos:start="95:14" pos:end="95:16"><literal type="char" pos:start="95:14" pos:end="95:16">'p'</literal></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:28"><expr pos:start="97:13" pos:end="97:27"><name pos:start="97:13" pos:end="97:20">progress</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:27">true</name></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:17">case <expr pos:start="101:14" pos:end="101:16"><literal type="char" pos:start="101:14" pos:end="101:16">'q'</literal></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:25"><expr pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:17">quiet</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:24">true</name></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:17">case <expr pos:start="107:14" pos:end="107:16"><literal type="char" pos:start="107:14" pos:end="107:16">'s'</literal></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:26"><expr pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:18">strict</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:25">true</name></expr>;</expr_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        <case pos:start="113:9" pos:end="113:27">case <expr pos:start="113:14" pos:end="113:26"><name pos:start="113:14" pos:end="113:26">OPTION_OBJECT</name></expr>:</case> <block pos:start="113:29" pos:end="129:9">{<block_content pos:start="115:13" pos:end="127:13">

            <decl_stmt pos:start="115:13" pos:end="115:27"><decl pos:start="115:13" pos:end="115:26"><type pos:start="115:13" pos:end="115:22"><name pos:start="115:13" pos:end="115:20">QemuOpts</name> <modifier pos:start="115:22" pos:end="115:22">*</modifier></type><name pos:start="115:23" pos:end="115:26">opts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="117:13" pos:end="119:57"><expr pos:start="117:13" pos:end="119:56"><name pos:start="117:13" pos:end="117:16">opts</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <call pos:start="117:20" pos:end="119:56"><name pos:start="117:20" pos:end="117:42">qemu_opts_parse_noisily</name><argument_list pos:start="117:43" pos:end="119:56">(<argument pos:start="117:44" pos:end="117:60"><expr pos:start="117:44" pos:end="117:60"><operator pos:start="117:44" pos:end="117:44">&amp;</operator><name pos:start="117:45" pos:end="117:60">qemu_object_opts</name></expr></argument>,

                                           <argument pos:start="119:44" pos:end="119:49"><expr pos:start="119:44" pos:end="119:49"><name pos:start="119:44" pos:end="119:49">optarg</name></expr></argument>, <argument pos:start="119:52" pos:end="119:55"><expr pos:start="119:52" pos:end="119:55"><name pos:start="119:52" pos:end="119:55">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="127:13"><if pos:start="121:13" pos:end="127:13">if <condition pos:start="121:16" pos:end="121:22">(<expr pos:start="121:17" pos:end="121:21"><operator pos:start="121:17" pos:end="121:17">!</operator><name pos:start="121:18" pos:end="121:21">opts</name></expr>)</condition> <block pos:start="121:24" pos:end="127:13">{<block_content pos:start="123:17" pos:end="125:26">

                <expr_stmt pos:start="123:17" pos:end="123:24"><expr pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:19">ret</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <literal type="number" pos:start="123:23" pos:end="123:23">2</literal></expr>;</expr_stmt>

                <goto pos:start="125:17" pos:end="125:26">goto <name pos:start="125:22" pos:end="125:25">out4</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>   <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:31">case <expr pos:start="131:14" pos:end="131:30"><name pos:start="131:14" pos:end="131:30">OPTION_IMAGE_OPTS</name></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:30"><expr pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:22">image_opts</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <name pos:start="133:26" pos:end="133:29">true</name></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <comment type="block" pos:start="143:5" pos:end="143:45">/* Progress is not shown in Quiet mode */</comment>

    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:14">(<expr pos:start="145:9" pos:end="145:13"><name pos:start="145:9" pos:end="145:13">quiet</name></expr>)</condition> <block pos:start="145:16" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:25">

        <expr_stmt pos:start="147:9" pos:end="147:25"><expr pos:start="147:9" pos:end="147:24"><name pos:start="147:9" pos:end="147:16">progress</name> <operator pos:start="147:18" pos:end="147:18">=</operator> <name pos:start="147:20" pos:end="147:24">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="155:5" pos:end="159:5"><if pos:start="155:5" pos:end="159:5">if <condition pos:start="155:8" pos:end="155:27">(<expr pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:14">optind</name> <operator pos:start="155:16" pos:end="155:17">!=</operator> <name pos:start="155:19" pos:end="155:22">argc</name> <operator pos:start="155:24" pos:end="155:24">-</operator> <literal type="number" pos:start="155:26" pos:end="155:26">2</literal></expr>)</condition> <block pos:start="155:29" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:53">

        <expr_stmt pos:start="157:9" pos:end="157:53"><expr pos:start="157:9" pos:end="157:52"><call pos:start="157:9" pos:end="157:52"><name pos:start="157:9" pos:end="157:18">error_exit</name><argument_list pos:start="157:19" pos:end="157:52">(<argument pos:start="157:20" pos:end="157:51"><expr pos:start="157:20" pos:end="157:51"><literal type="string" pos:start="157:20" pos:end="157:51">"Expecting two image file names"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:31"><expr pos:start="161:5" pos:end="161:30"><name pos:start="161:5" pos:end="161:13">filename1</name> <operator pos:start="161:15" pos:end="161:15">=</operator> <name pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:20">argv</name><index pos:start="161:21" pos:end="161:30">[<expr pos:start="161:22" pos:end="161:29"><name pos:start="161:22" pos:end="161:27">optind</name><operator pos:start="161:28" pos:end="161:29">++</operator></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:31"><expr pos:start="163:5" pos:end="163:30"><name pos:start="163:5" pos:end="163:13">filename2</name> <operator pos:start="163:15" pos:end="163:15">=</operator> <name pos:start="163:17" pos:end="163:30"><name pos:start="163:17" pos:end="163:20">argv</name><index pos:start="163:21" pos:end="163:30">[<expr pos:start="163:22" pos:end="163:29"><name pos:start="163:22" pos:end="163:27">optind</name><operator pos:start="163:28" pos:end="163:29">++</operator></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="167:5" pos:end="177:5"><if pos:start="167:5" pos:end="177:5">if <condition pos:start="167:8" pos:end="171:38">(<expr pos:start="167:9" pos:end="171:37"><call pos:start="167:9" pos:end="171:37"><name pos:start="167:9" pos:end="167:25">qemu_opts_foreach</name><argument_list pos:start="167:26" pos:end="171:37">(<argument pos:start="167:27" pos:end="167:43"><expr pos:start="167:27" pos:end="167:43"><operator pos:start="167:27" pos:end="167:27">&amp;</operator><name pos:start="167:28" pos:end="167:43">qemu_object_opts</name></expr></argument>,

                          <argument pos:start="169:27" pos:end="169:57"><expr pos:start="169:27" pos:end="169:57"><name pos:start="169:27" pos:end="169:57">user_creatable_add_opts_foreach</name></expr></argument>,

                          <argument pos:start="171:27" pos:end="171:30"><expr pos:start="171:27" pos:end="171:30"><name pos:start="171:27" pos:end="171:30">NULL</name></expr></argument>, <argument pos:start="171:33" pos:end="171:36"><expr pos:start="171:33" pos:end="171:36"><name pos:start="171:33" pos:end="171:36">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:40" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:18">

        <expr_stmt pos:start="173:9" pos:end="173:16"><expr pos:start="173:9" pos:end="173:15"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <literal type="number" pos:start="173:15" pos:end="173:15">2</literal></expr>;</expr_stmt>

        <goto pos:start="175:9" pos:end="175:18">goto <name pos:start="175:14" pos:end="175:17">out4</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="181:5" pos:end="181:36">/* Initialize before goto out */</comment>

    <expr_stmt pos:start="183:5" pos:end="183:38"><expr pos:start="183:5" pos:end="183:37"><call pos:start="183:5" pos:end="183:37"><name pos:start="183:5" pos:end="183:22">qemu_progress_init</name><argument_list pos:start="183:23" pos:end="183:37">(<argument pos:start="183:24" pos:end="183:31"><expr pos:start="183:24" pos:end="183:31"><name pos:start="183:24" pos:end="183:31">progress</name></expr></argument>, <argument pos:start="183:34" pos:end="183:36"><expr pos:start="183:34" pos:end="183:36"><literal type="number" pos:start="183:34" pos:end="183:36">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:14"><expr pos:start="187:5" pos:end="187:13"><name pos:start="187:5" pos:end="187:9">flags</name> <operator pos:start="187:11" pos:end="187:11">=</operator> <literal type="number" pos:start="187:13" pos:end="187:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:62"><expr pos:start="189:5" pos:end="189:61"><name pos:start="189:5" pos:end="189:7">ret</name> <operator pos:start="189:9" pos:end="189:9">=</operator> <call pos:start="189:11" pos:end="189:61"><name pos:start="189:11" pos:end="189:31">bdrv_parse_cache_mode</name><argument_list pos:start="189:32" pos:end="189:61">(<argument pos:start="189:33" pos:end="189:37"><expr pos:start="189:33" pos:end="189:37"><name pos:start="189:33" pos:end="189:37">cache</name></expr></argument>, <argument pos:start="189:40" pos:end="189:45"><expr pos:start="189:40" pos:end="189:45"><operator pos:start="189:40" pos:end="189:40">&amp;</operator><name pos:start="189:41" pos:end="189:45">flags</name></expr></argument>, <argument pos:start="189:48" pos:end="189:60"><expr pos:start="189:48" pos:end="189:60"><operator pos:start="189:48" pos:end="189:48">&amp;</operator><name pos:start="189:49" pos:end="189:60">writethrough</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="199:5"><if pos:start="191:5" pos:end="199:5">if <condition pos:start="191:8" pos:end="191:16">(<expr pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">&lt;</operator> <literal type="number" pos:start="191:15" pos:end="191:15">0</literal></expr>)</condition> <block pos:start="191:18" pos:end="199:5">{<block_content pos:start="193:9" pos:end="197:18">

        <expr_stmt pos:start="193:9" pos:end="193:63"><expr pos:start="193:9" pos:end="193:62"><call pos:start="193:9" pos:end="193:62"><name pos:start="193:9" pos:end="193:20">error_report</name><argument_list pos:start="193:21" pos:end="193:62">(<argument pos:start="193:22" pos:end="193:54"><expr pos:start="193:22" pos:end="193:54"><literal type="string" pos:start="193:22" pos:end="193:54">"Invalid source cache option: %s"</literal></expr></argument>, <argument pos:start="193:57" pos:end="193:61"><expr pos:start="193:57" pos:end="193:61"><name pos:start="193:57" pos:end="193:61">cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:16"><expr pos:start="195:9" pos:end="195:15"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <literal type="number" pos:start="195:15" pos:end="195:15">2</literal></expr>;</expr_stmt>

        <goto pos:start="197:9" pos:end="197:18">goto <name pos:start="197:14" pos:end="197:17">out3</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:77"><expr pos:start="203:5" pos:end="203:76"><name pos:start="203:5" pos:end="203:8">blk1</name> <operator pos:start="203:10" pos:end="203:10">=</operator> <call pos:start="203:12" pos:end="203:76"><name pos:start="203:12" pos:end="203:19">img_open</name><argument_list pos:start="203:20" pos:end="203:76">(<argument pos:start="203:21" pos:end="203:30"><expr pos:start="203:21" pos:end="203:30"><name pos:start="203:21" pos:end="203:30">image_opts</name></expr></argument>, <argument pos:start="203:33" pos:end="203:41"><expr pos:start="203:33" pos:end="203:41"><name pos:start="203:33" pos:end="203:41">filename1</name></expr></argument>, <argument pos:start="203:44" pos:end="203:47"><expr pos:start="203:44" pos:end="203:47"><name pos:start="203:44" pos:end="203:47">fmt1</name></expr></argument>, <argument pos:start="203:50" pos:end="203:54"><expr pos:start="203:50" pos:end="203:54"><name pos:start="203:50" pos:end="203:54">flags</name></expr></argument>, <argument pos:start="203:57" pos:end="203:68"><expr pos:start="203:57" pos:end="203:68"><name pos:start="203:57" pos:end="203:68">writethrough</name></expr></argument>, <argument pos:start="203:71" pos:end="203:75"><expr pos:start="203:71" pos:end="203:75"><name pos:start="203:71" pos:end="203:75">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="205:5" pos:end="211:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:14">(<expr pos:start="205:9" pos:end="205:13"><operator pos:start="205:9" pos:end="205:9">!</operator><name pos:start="205:10" pos:end="205:13">blk1</name></expr>)</condition> <block pos:start="205:16" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:18">

        <expr_stmt pos:start="207:9" pos:end="207:16"><expr pos:start="207:9" pos:end="207:15"><name pos:start="207:9" pos:end="207:11">ret</name> <operator pos:start="207:13" pos:end="207:13">=</operator> <literal type="number" pos:start="207:15" pos:end="207:15">2</literal></expr>;</expr_stmt>

        <goto pos:start="209:9" pos:end="209:18">goto <name pos:start="209:14" pos:end="209:17">out3</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:77"><expr pos:start="215:5" pos:end="215:76"><name pos:start="215:5" pos:end="215:8">blk2</name> <operator pos:start="215:10" pos:end="215:10">=</operator> <call pos:start="215:12" pos:end="215:76"><name pos:start="215:12" pos:end="215:19">img_open</name><argument_list pos:start="215:20" pos:end="215:76">(<argument pos:start="215:21" pos:end="215:30"><expr pos:start="215:21" pos:end="215:30"><name pos:start="215:21" pos:end="215:30">image_opts</name></expr></argument>, <argument pos:start="215:33" pos:end="215:41"><expr pos:start="215:33" pos:end="215:41"><name pos:start="215:33" pos:end="215:41">filename2</name></expr></argument>, <argument pos:start="215:44" pos:end="215:47"><expr pos:start="215:44" pos:end="215:47"><name pos:start="215:44" pos:end="215:47">fmt2</name></expr></argument>, <argument pos:start="215:50" pos:end="215:54"><expr pos:start="215:50" pos:end="215:54"><name pos:start="215:50" pos:end="215:54">flags</name></expr></argument>, <argument pos:start="215:57" pos:end="215:68"><expr pos:start="215:57" pos:end="215:68"><name pos:start="215:57" pos:end="215:68">writethrough</name></expr></argument>, <argument pos:start="215:71" pos:end="215:75"><expr pos:start="215:71" pos:end="215:75"><name pos:start="215:71" pos:end="215:75">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="223:5"><if pos:start="217:5" pos:end="223:5">if <condition pos:start="217:8" pos:end="217:14">(<expr pos:start="217:9" pos:end="217:13"><operator pos:start="217:9" pos:end="217:9">!</operator><name pos:start="217:10" pos:end="217:13">blk2</name></expr>)</condition> <block pos:start="217:16" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:18">

        <expr_stmt pos:start="219:9" pos:end="219:16"><expr pos:start="219:9" pos:end="219:15"><name pos:start="219:9" pos:end="219:11">ret</name> <operator pos:start="219:13" pos:end="219:13">=</operator> <literal type="number" pos:start="219:15" pos:end="219:15">2</literal></expr>;</expr_stmt>

        <goto pos:start="221:9" pos:end="221:18">goto <name pos:start="221:14" pos:end="221:17">out2</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:23"><expr pos:start="225:5" pos:end="225:22"><name pos:start="225:5" pos:end="225:7">bs1</name> <operator pos:start="225:9" pos:end="225:9">=</operator> <call pos:start="225:11" pos:end="225:22"><name pos:start="225:11" pos:end="225:16">blk_bs</name><argument_list pos:start="225:17" pos:end="225:22">(<argument pos:start="225:18" pos:end="225:21"><expr pos:start="225:18" pos:end="225:21"><name pos:start="225:18" pos:end="225:21">blk1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:23"><expr pos:start="227:5" pos:end="227:22"><name pos:start="227:5" pos:end="227:7">bs2</name> <operator pos:start="227:9" pos:end="227:9">=</operator> <call pos:start="227:11" pos:end="227:22"><name pos:start="227:11" pos:end="227:16">blk_bs</name><argument_list pos:start="227:17" pos:end="227:22">(<argument pos:start="227:18" pos:end="227:21"><expr pos:start="227:18" pos:end="227:21"><name pos:start="227:18" pos:end="227:21">blk2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:45"><expr pos:start="231:5" pos:end="231:44"><name pos:start="231:5" pos:end="231:8">buf1</name> <operator pos:start="231:10" pos:end="231:10">=</operator> <call pos:start="231:12" pos:end="231:44"><name pos:start="231:12" pos:end="231:25">blk_blockalign</name><argument_list pos:start="231:26" pos:end="231:44">(<argument pos:start="231:27" pos:end="231:30"><expr pos:start="231:27" pos:end="231:30"><name pos:start="231:27" pos:end="231:30">blk1</name></expr></argument>, <argument pos:start="231:33" pos:end="231:43"><expr pos:start="231:33" pos:end="231:43"><name pos:start="231:33" pos:end="231:43">IO_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:45"><expr pos:start="233:5" pos:end="233:44"><name pos:start="233:5" pos:end="233:8">buf2</name> <operator pos:start="233:10" pos:end="233:10">=</operator> <call pos:start="233:12" pos:end="233:44"><name pos:start="233:12" pos:end="233:25">blk_blockalign</name><argument_list pos:start="233:26" pos:end="233:44">(<argument pos:start="233:27" pos:end="233:30"><expr pos:start="233:27" pos:end="233:30"><name pos:start="233:27" pos:end="233:30">blk2</name></expr></argument>, <argument pos:start="233:33" pos:end="233:43"><expr pos:start="233:33" pos:end="233:43"><name pos:start="233:33" pos:end="233:43">IO_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:42"><expr pos:start="235:5" pos:end="235:41"><name pos:start="235:5" pos:end="235:18">total_sectors1</name> <operator pos:start="235:20" pos:end="235:20">=</operator> <call pos:start="235:22" pos:end="235:41"><name pos:start="235:22" pos:end="235:35">blk_nb_sectors</name><argument_list pos:start="235:36" pos:end="235:41">(<argument pos:start="235:37" pos:end="235:40"><expr pos:start="235:37" pos:end="235:40"><name pos:start="235:37" pos:end="235:40">blk1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="247:5"><if pos:start="237:5" pos:end="247:5">if <condition pos:start="237:8" pos:end="237:27">(<expr pos:start="237:9" pos:end="237:26"><name pos:start="237:9" pos:end="237:22">total_sectors1</name> <operator pos:start="237:24" pos:end="237:24">&lt;</operator> <literal type="number" pos:start="237:26" pos:end="237:26">0</literal></expr>)</condition> <block pos:start="237:29" pos:end="247:5">{<block_content pos:start="239:9" pos:end="245:17">

        <expr_stmt pos:start="239:9" pos:end="241:59"><expr pos:start="239:9" pos:end="241:58"><call pos:start="239:9" pos:end="241:58"><name pos:start="239:9" pos:end="239:20">error_report</name><argument_list pos:start="239:21" pos:end="241:58">(<argument pos:start="239:22" pos:end="239:47"><expr pos:start="239:22" pos:end="239:47"><literal type="string" pos:start="239:22" pos:end="239:47">"Can't get size of %s: %s"</literal></expr></argument>,

                     <argument pos:start="241:22" pos:end="241:30"><expr pos:start="241:22" pos:end="241:30"><name pos:start="241:22" pos:end="241:30">filename1</name></expr></argument>, <argument pos:start="241:33" pos:end="241:57"><expr pos:start="241:33" pos:end="241:57"><call pos:start="241:33" pos:end="241:57"><name pos:start="241:33" pos:end="241:40">strerror</name><argument_list pos:start="241:41" pos:end="241:57">(<argument pos:start="241:42" pos:end="241:56"><expr pos:start="241:42" pos:end="241:56"><operator pos:start="241:42" pos:end="241:42">-</operator><name pos:start="241:43" pos:end="241:56">total_sectors1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:16"><expr pos:start="243:9" pos:end="243:15"><name pos:start="243:9" pos:end="243:11">ret</name> <operator pos:start="243:13" pos:end="243:13">=</operator> <literal type="number" pos:start="243:15" pos:end="243:15">4</literal></expr>;</expr_stmt>

        <goto pos:start="245:9" pos:end="245:17">goto <name pos:start="245:14" pos:end="245:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:42"><expr pos:start="249:5" pos:end="249:41"><name pos:start="249:5" pos:end="249:18">total_sectors2</name> <operator pos:start="249:20" pos:end="249:20">=</operator> <call pos:start="249:22" pos:end="249:41"><name pos:start="249:22" pos:end="249:35">blk_nb_sectors</name><argument_list pos:start="249:36" pos:end="249:41">(<argument pos:start="249:37" pos:end="249:40"><expr pos:start="249:37" pos:end="249:40"><name pos:start="249:37" pos:end="249:40">blk2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="261:5"><if pos:start="251:5" pos:end="261:5">if <condition pos:start="251:8" pos:end="251:27">(<expr pos:start="251:9" pos:end="251:26"><name pos:start="251:9" pos:end="251:22">total_sectors2</name> <operator pos:start="251:24" pos:end="251:24">&lt;</operator> <literal type="number" pos:start="251:26" pos:end="251:26">0</literal></expr>)</condition> <block pos:start="251:29" pos:end="261:5">{<block_content pos:start="253:9" pos:end="259:17">

        <expr_stmt pos:start="253:9" pos:end="255:59"><expr pos:start="253:9" pos:end="255:58"><call pos:start="253:9" pos:end="255:58"><name pos:start="253:9" pos:end="253:20">error_report</name><argument_list pos:start="253:21" pos:end="255:58">(<argument pos:start="253:22" pos:end="253:47"><expr pos:start="253:22" pos:end="253:47"><literal type="string" pos:start="253:22" pos:end="253:47">"Can't get size of %s: %s"</literal></expr></argument>,

                     <argument pos:start="255:22" pos:end="255:30"><expr pos:start="255:22" pos:end="255:30"><name pos:start="255:22" pos:end="255:30">filename2</name></expr></argument>, <argument pos:start="255:33" pos:end="255:57"><expr pos:start="255:33" pos:end="255:57"><call pos:start="255:33" pos:end="255:57"><name pos:start="255:33" pos:end="255:40">strerror</name><argument_list pos:start="255:41" pos:end="255:57">(<argument pos:start="255:42" pos:end="255:56"><expr pos:start="255:42" pos:end="255:56"><operator pos:start="255:42" pos:end="255:42">-</operator><name pos:start="255:43" pos:end="255:56">total_sectors2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:16"><expr pos:start="257:9" pos:end="257:15"><name pos:start="257:9" pos:end="257:11">ret</name> <operator pos:start="257:13" pos:end="257:13">=</operator> <literal type="number" pos:start="257:15" pos:end="257:15">4</literal></expr>;</expr_stmt>

        <goto pos:start="259:9" pos:end="259:17">goto <name pos:start="259:14" pos:end="259:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:56"><expr pos:start="263:5" pos:end="263:55"><name pos:start="263:5" pos:end="263:17">total_sectors</name> <operator pos:start="263:19" pos:end="263:19">=</operator> <call pos:start="263:21" pos:end="263:55"><name pos:start="263:21" pos:end="263:23">MIN</name><argument_list pos:start="263:24" pos:end="263:55">(<argument pos:start="263:25" pos:end="263:38"><expr pos:start="263:25" pos:end="263:38"><name pos:start="263:25" pos:end="263:38">total_sectors1</name></expr></argument>, <argument pos:start="263:41" pos:end="263:54"><expr pos:start="263:41" pos:end="263:54"><name pos:start="263:41" pos:end="263:54">total_sectors2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:56"><expr pos:start="265:5" pos:end="265:55"><name pos:start="265:5" pos:end="265:17">progress_base</name> <operator pos:start="265:19" pos:end="265:19">=</operator> <call pos:start="265:21" pos:end="265:55"><name pos:start="265:21" pos:end="265:23">MAX</name><argument_list pos:start="265:24" pos:end="265:55">(<argument pos:start="265:25" pos:end="265:38"><expr pos:start="265:25" pos:end="265:38"><name pos:start="265:25" pos:end="265:38">total_sectors1</name></expr></argument>, <argument pos:start="265:41" pos:end="265:54"><expr pos:start="265:41" pos:end="265:54"><name pos:start="265:41" pos:end="265:54">total_sectors2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="269:5" pos:end="269:32"><expr pos:start="269:5" pos:end="269:31"><call pos:start="269:5" pos:end="269:31"><name pos:start="269:5" pos:end="269:23">qemu_progress_print</name><argument_list pos:start="269:24" pos:end="269:31">(<argument pos:start="269:25" pos:end="269:25"><expr pos:start="269:25" pos:end="269:25"><literal type="number" pos:start="269:25" pos:end="269:25">0</literal></expr></argument>, <argument pos:start="269:28" pos:end="269:30"><expr pos:start="269:28" pos:end="269:30"><literal type="number" pos:start="269:28" pos:end="269:30">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="273:5" pos:end="281:5"><if pos:start="273:5" pos:end="281:5">if <condition pos:start="273:8" pos:end="273:51">(<expr pos:start="273:9" pos:end="273:50"><name pos:start="273:9" pos:end="273:14">strict</name> <operator pos:start="273:16" pos:end="273:17">&amp;&amp;</operator> <name pos:start="273:19" pos:end="273:32">total_sectors1</name> <operator pos:start="273:34" pos:end="273:35">!=</operator> <name pos:start="273:37" pos:end="273:50">total_sectors2</name></expr>)</condition> <block pos:start="273:53" pos:end="281:5">{<block_content pos:start="275:9" pos:end="279:17">

        <expr_stmt pos:start="275:9" pos:end="275:16"><expr pos:start="275:9" pos:end="275:15"><name pos:start="275:9" pos:end="275:11">ret</name> <operator pos:start="275:13" pos:end="275:13">=</operator> <literal type="number" pos:start="275:15" pos:end="275:15">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:62"><expr pos:start="277:9" pos:end="277:61"><call pos:start="277:9" pos:end="277:61"><name pos:start="277:9" pos:end="277:15">qprintf</name><argument_list pos:start="277:16" pos:end="277:61">(<argument pos:start="277:17" pos:end="277:21"><expr pos:start="277:17" pos:end="277:21"><name pos:start="277:17" pos:end="277:21">quiet</name></expr></argument>, <argument pos:start="277:24" pos:end="277:60"><expr pos:start="277:24" pos:end="277:60"><literal type="string" pos:start="277:24" pos:end="277:60">"Strict mode: Image size mismatch!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="279:9" pos:end="279:17">goto <name pos:start="279:14" pos:end="279:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="285:5" pos:end="475:5">for <control pos:start="285:9" pos:end="285:12">(<init pos:start="285:10" pos:end="285:10">;</init><condition pos:start="285:11" pos:end="285:11">;</condition><incr/>)</control> <block pos:start="285:14" pos:end="475:5">{<block_content pos:start="287:9" pos:end="473:75">

        <decl_stmt pos:start="287:9" pos:end="287:33"><decl pos:start="287:9" pos:end="287:23"><type pos:start="287:9" pos:end="287:15"><name pos:start="287:9" pos:end="287:15">int64_t</name></type> <name pos:start="287:17" pos:end="287:23">status1</name></decl>, <decl pos:start="287:26" pos:end="287:32"><type ref="prev" pos:start="287:9" pos:end="287:15"/><name pos:start="287:26" pos:end="287:32">status2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="289:9" pos:end="289:31"><decl pos:start="289:9" pos:end="289:30"><type pos:start="289:9" pos:end="289:26"><name pos:start="289:9" pos:end="289:24">BlockDriverState</name> <modifier pos:start="289:26" pos:end="289:26">*</modifier></type><name pos:start="289:27" pos:end="289:30">file</name></decl>;</decl_stmt>



        <expr_stmt pos:start="293:9" pos:end="293:67"><expr pos:start="293:9" pos:end="293:66"><name pos:start="293:9" pos:end="293:18">nb_sectors</name> <operator pos:start="293:20" pos:end="293:20">=</operator> <call pos:start="293:22" pos:end="293:66"><name pos:start="293:22" pos:end="293:39">sectors_to_process</name><argument_list pos:start="293:40" pos:end="293:66">(<argument pos:start="293:41" pos:end="293:53"><expr pos:start="293:41" pos:end="293:53"><name pos:start="293:41" pos:end="293:53">total_sectors</name></expr></argument>, <argument pos:start="293:56" pos:end="293:65"><expr pos:start="293:56" pos:end="293:65"><name pos:start="293:56" pos:end="293:65">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="295:9" pos:end="299:9"><if pos:start="295:9" pos:end="299:9">if <condition pos:start="295:12" pos:end="295:28">(<expr pos:start="295:13" pos:end="295:27"><name pos:start="295:13" pos:end="295:22">nb_sectors</name> <operator pos:start="295:24" pos:end="295:25">&lt;=</operator> <literal type="number" pos:start="295:27" pos:end="295:27">0</literal></expr>)</condition> <block pos:start="295:30" pos:end="299:9">{<block_content pos:start="297:13" pos:end="297:18">

            <break pos:start="297:13" pos:end="297:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="301:9" pos:end="305:61"><expr pos:start="301:9" pos:end="305:60"><name pos:start="301:9" pos:end="301:15">status1</name> <operator pos:start="301:17" pos:end="301:17">=</operator> <call pos:start="301:19" pos:end="305:60"><name pos:start="301:19" pos:end="301:45">bdrv_get_block_status_above</name><argument_list pos:start="301:46" pos:end="305:60">(<argument pos:start="301:47" pos:end="301:49"><expr pos:start="301:47" pos:end="301:49"><name pos:start="301:47" pos:end="301:49">bs1</name></expr></argument>, <argument pos:start="301:52" pos:end="301:55"><expr pos:start="301:52" pos:end="301:55"><name pos:start="301:52" pos:end="301:55">NULL</name></expr></argument>, <argument pos:start="301:58" pos:end="301:67"><expr pos:start="301:58" pos:end="301:67"><name pos:start="301:58" pos:end="301:67">sector_num</name></expr></argument>,

                                              <argument pos:start="303:47" pos:end="303:73"><expr pos:start="303:47" pos:end="303:73"><name pos:start="303:47" pos:end="303:60">total_sectors1</name> <operator pos:start="303:62" pos:end="303:62">-</operator> <name pos:start="303:64" pos:end="303:73">sector_num</name></expr></argument>,

                                              <argument pos:start="305:47" pos:end="305:52"><expr pos:start="305:47" pos:end="305:52"><operator pos:start="305:47" pos:end="305:47">&amp;</operator><name pos:start="305:48" pos:end="305:52">pnum1</name></expr></argument>, <argument pos:start="305:55" pos:end="305:59"><expr pos:start="305:55" pos:end="305:59"><operator pos:start="305:55" pos:end="305:55">&amp;</operator><name pos:start="305:56" pos:end="305:59">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="307:9" pos:end="315:9"><if pos:start="307:9" pos:end="315:9">if <condition pos:start="307:12" pos:end="307:24">(<expr pos:start="307:13" pos:end="307:23"><name pos:start="307:13" pos:end="307:19">status1</name> <operator pos:start="307:21" pos:end="307:21">&lt;</operator> <literal type="number" pos:start="307:23" pos:end="307:23">0</literal></expr>)</condition> <block pos:start="307:26" pos:end="315:9">{<block_content pos:start="309:13" pos:end="313:21">

            <expr_stmt pos:start="309:13" pos:end="309:20"><expr pos:start="309:13" pos:end="309:19"><name pos:start="309:13" pos:end="309:15">ret</name> <operator pos:start="309:17" pos:end="309:17">=</operator> <literal type="number" pos:start="309:19" pos:end="309:19">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:76"><expr pos:start="311:13" pos:end="311:75"><call pos:start="311:13" pos:end="311:75"><name pos:start="311:13" pos:end="311:24">error_report</name><argument_list pos:start="311:25" pos:end="311:75">(<argument pos:start="311:26" pos:end="311:63"><expr pos:start="311:26" pos:end="311:63"><literal type="string" pos:start="311:26" pos:end="311:63">"Sector allocation test failed for %s"</literal></expr></argument>, <argument pos:start="311:66" pos:end="311:74"><expr pos:start="311:66" pos:end="311:74"><name pos:start="311:66" pos:end="311:74">filename1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="313:13" pos:end="313:21">goto <name pos:start="313:18" pos:end="313:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:52"><expr pos:start="317:9" pos:end="317:51"><name pos:start="317:9" pos:end="317:18">allocated1</name> <operator pos:start="317:20" pos:end="317:20">=</operator> <name pos:start="317:22" pos:end="317:28">status1</name> <operator pos:start="317:30" pos:end="317:30">&amp;</operator> <name pos:start="317:32" pos:end="317:51">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>



        <expr_stmt pos:start="321:9" pos:end="325:61"><expr pos:start="321:9" pos:end="325:60"><name pos:start="321:9" pos:end="321:15">status2</name> <operator pos:start="321:17" pos:end="321:17">=</operator> <call pos:start="321:19" pos:end="325:60"><name pos:start="321:19" pos:end="321:45">bdrv_get_block_status_above</name><argument_list pos:start="321:46" pos:end="325:60">(<argument pos:start="321:47" pos:end="321:49"><expr pos:start="321:47" pos:end="321:49"><name pos:start="321:47" pos:end="321:49">bs2</name></expr></argument>, <argument pos:start="321:52" pos:end="321:55"><expr pos:start="321:52" pos:end="321:55"><name pos:start="321:52" pos:end="321:55">NULL</name></expr></argument>, <argument pos:start="321:58" pos:end="321:67"><expr pos:start="321:58" pos:end="321:67"><name pos:start="321:58" pos:end="321:67">sector_num</name></expr></argument>,

                                              <argument pos:start="323:47" pos:end="323:73"><expr pos:start="323:47" pos:end="323:73"><name pos:start="323:47" pos:end="323:60">total_sectors2</name> <operator pos:start="323:62" pos:end="323:62">-</operator> <name pos:start="323:64" pos:end="323:73">sector_num</name></expr></argument>,

                                              <argument pos:start="325:47" pos:end="325:52"><expr pos:start="325:47" pos:end="325:52"><operator pos:start="325:47" pos:end="325:47">&amp;</operator><name pos:start="325:48" pos:end="325:52">pnum2</name></expr></argument>, <argument pos:start="325:55" pos:end="325:59"><expr pos:start="325:55" pos:end="325:59"><operator pos:start="325:55" pos:end="325:55">&amp;</operator><name pos:start="325:56" pos:end="325:59">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="327:9" pos:end="335:9"><if pos:start="327:9" pos:end="335:9">if <condition pos:start="327:12" pos:end="327:24">(<expr pos:start="327:13" pos:end="327:23"><name pos:start="327:13" pos:end="327:19">status2</name> <operator pos:start="327:21" pos:end="327:21">&lt;</operator> <literal type="number" pos:start="327:23" pos:end="327:23">0</literal></expr>)</condition> <block pos:start="327:26" pos:end="335:9">{<block_content pos:start="329:13" pos:end="333:21">

            <expr_stmt pos:start="329:13" pos:end="329:20"><expr pos:start="329:13" pos:end="329:19"><name pos:start="329:13" pos:end="329:15">ret</name> <operator pos:start="329:17" pos:end="329:17">=</operator> <literal type="number" pos:start="329:19" pos:end="329:19">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:76"><expr pos:start="331:13" pos:end="331:75"><call pos:start="331:13" pos:end="331:75"><name pos:start="331:13" pos:end="331:24">error_report</name><argument_list pos:start="331:25" pos:end="331:75">(<argument pos:start="331:26" pos:end="331:63"><expr pos:start="331:26" pos:end="331:63"><literal type="string" pos:start="331:26" pos:end="331:63">"Sector allocation test failed for %s"</literal></expr></argument>, <argument pos:start="331:66" pos:end="331:74"><expr pos:start="331:66" pos:end="331:74"><name pos:start="331:66" pos:end="331:74">filename2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="333:13" pos:end="333:21">goto <name pos:start="333:18" pos:end="333:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:52"><expr pos:start="337:9" pos:end="337:51"><name pos:start="337:9" pos:end="337:18">allocated2</name> <operator pos:start="337:20" pos:end="337:20">=</operator> <name pos:start="337:22" pos:end="337:28">status2</name> <operator pos:start="337:30" pos:end="337:30">&amp;</operator> <name pos:start="337:32" pos:end="337:51">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>

        <if_stmt pos:start="339:9" pos:end="343:9"><if pos:start="339:9" pos:end="343:9">if <condition pos:start="339:12" pos:end="339:18">(<expr pos:start="339:13" pos:end="339:17"><name pos:start="339:13" pos:end="339:17">pnum1</name></expr>)</condition> <block pos:start="339:20" pos:end="343:9">{<block_content pos:start="341:13" pos:end="341:48">

            <expr_stmt pos:start="341:13" pos:end="341:48"><expr pos:start="341:13" pos:end="341:47"><name pos:start="341:13" pos:end="341:22">nb_sectors</name> <operator pos:start="341:24" pos:end="341:24">=</operator> <call pos:start="341:26" pos:end="341:47"><name pos:start="341:26" pos:end="341:28">MIN</name><argument_list pos:start="341:29" pos:end="341:47">(<argument pos:start="341:30" pos:end="341:39"><expr pos:start="341:30" pos:end="341:39"><name pos:start="341:30" pos:end="341:39">nb_sectors</name></expr></argument>, <argument pos:start="341:42" pos:end="341:46"><expr pos:start="341:42" pos:end="341:46"><name pos:start="341:42" pos:end="341:46">pnum1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="345:9" pos:end="349:9"><if pos:start="345:9" pos:end="349:9">if <condition pos:start="345:12" pos:end="345:18">(<expr pos:start="345:13" pos:end="345:17"><name pos:start="345:13" pos:end="345:17">pnum2</name></expr>)</condition> <block pos:start="345:20" pos:end="349:9">{<block_content pos:start="347:13" pos:end="347:48">

            <expr_stmt pos:start="347:13" pos:end="347:48"><expr pos:start="347:13" pos:end="347:47"><name pos:start="347:13" pos:end="347:22">nb_sectors</name> <operator pos:start="347:24" pos:end="347:24">=</operator> <call pos:start="347:26" pos:end="347:47"><name pos:start="347:26" pos:end="347:28">MIN</name><argument_list pos:start="347:29" pos:end="347:47">(<argument pos:start="347:30" pos:end="347:39"><expr pos:start="347:30" pos:end="347:39"><name pos:start="347:30" pos:end="347:39">nb_sectors</name></expr></argument>, <argument pos:start="347:42" pos:end="347:46"><expr pos:start="347:42" pos:end="347:46"><name pos:start="347:42" pos:end="347:46">pnum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="353:9" pos:end="371:9"><if pos:start="353:9" pos:end="371:9">if <condition pos:start="353:12" pos:end="353:19">(<expr pos:start="353:13" pos:end="353:18"><name pos:start="353:13" pos:end="353:18">strict</name></expr>)</condition> <block pos:start="353:21" pos:end="371:9">{<block_content pos:start="355:13" pos:end="369:13">

            <if_stmt pos:start="355:13" pos:end="369:13"><if pos:start="355:13" pos:end="369:13">if <condition pos:start="355:16" pos:end="357:52">(<expr pos:start="355:17" pos:end="357:51"><operator pos:start="355:17" pos:end="355:17">(</operator><name pos:start="355:18" pos:end="355:24">status1</name> <operator pos:start="355:26" pos:end="355:26">&amp;</operator> <operator pos:start="355:28" pos:end="355:28">~</operator><name pos:start="355:29" pos:end="355:50">BDRV_BLOCK_OFFSET_MASK</name><operator pos:start="355:51" pos:end="355:51">)</operator> <operator pos:start="355:53" pos:end="355:54">!=</operator>

                <operator pos:start="357:17" pos:end="357:17">(</operator><name pos:start="357:18" pos:end="357:24">status2</name> <operator pos:start="357:26" pos:end="357:26">&amp;</operator> <operator pos:start="357:28" pos:end="357:28">~</operator><name pos:start="357:29" pos:end="357:50">BDRV_BLOCK_OFFSET_MASK</name><operator pos:start="357:51" pos:end="357:51">)</operator></expr>)</condition> <block pos:start="357:54" pos:end="369:13">{<block_content pos:start="359:17" pos:end="367:25">

                <expr_stmt pos:start="359:17" pos:end="359:24"><expr pos:start="359:17" pos:end="359:23"><name pos:start="359:17" pos:end="359:19">ret</name> <operator pos:start="359:21" pos:end="359:21">=</operator> <literal type="number" pos:start="359:23" pos:end="359:23">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="365:54"><expr pos:start="361:17" pos:end="365:53"><call pos:start="361:17" pos:end="365:53"><name pos:start="361:17" pos:end="361:23">qprintf</name><argument_list pos:start="361:24" pos:end="365:53">(<argument pos:start="361:25" pos:end="361:29"><expr pos:start="361:25" pos:end="361:29"><name pos:start="361:25" pos:end="361:29">quiet</name></expr></argument>, <argument pos:start="361:32" pos:end="363:51"><expr pos:start="361:32" pos:end="363:51"><literal type="string" pos:start="361:32" pos:end="361:54">"Strict mode: Offset %"</literal> <name pos:start="361:56" pos:end="361:61">PRId64</name>

                        <literal type="string" pos:start="363:25" pos:end="363:51">" block status mismatch!\n"</literal></expr></argument>,

                        <argument pos:start="365:25" pos:end="365:52"><expr pos:start="365:25" pos:end="365:52"><call pos:start="365:25" pos:end="365:52"><name pos:start="365:25" pos:end="365:40">sectors_to_bytes</name><argument_list pos:start="365:41" pos:end="365:52">(<argument pos:start="365:42" pos:end="365:51"><expr pos:start="365:42" pos:end="365:51"><name pos:start="365:42" pos:end="365:51">sector_num</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="367:17" pos:end="367:25">goto <name pos:start="367:22" pos:end="367:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="373:9" pos:end="469:9"><if pos:start="373:9" pos:end="377:9">if <condition pos:start="373:12" pos:end="373:71">(<expr pos:start="373:13" pos:end="373:70"><operator pos:start="373:13" pos:end="373:13">(</operator><name pos:start="373:14" pos:end="373:20">status1</name> <operator pos:start="373:22" pos:end="373:22">&amp;</operator> <name pos:start="373:24" pos:end="373:38">BDRV_BLOCK_ZERO</name><operator pos:start="373:39" pos:end="373:39">)</operator> <operator pos:start="373:41" pos:end="373:42">&amp;&amp;</operator> <operator pos:start="373:44" pos:end="373:44">(</operator><name pos:start="373:45" pos:end="373:51">status2</name> <operator pos:start="373:53" pos:end="373:53">&amp;</operator> <name pos:start="373:55" pos:end="373:69">BDRV_BLOCK_ZERO</name><operator pos:start="373:70" pos:end="373:70">)</operator></expr>)</condition> <block pos:start="373:73" pos:end="377:9">{<block_content pos:start="375:13" pos:end="375:43">

            <expr_stmt pos:start="375:13" pos:end="375:43"><expr pos:start="375:13" pos:end="375:42"><name pos:start="375:13" pos:end="375:22">nb_sectors</name> <operator pos:start="375:24" pos:end="375:24">=</operator> <call pos:start="375:26" pos:end="375:42"><name pos:start="375:26" pos:end="375:28">MIN</name><argument_list pos:start="375:29" pos:end="375:42">(<argument pos:start="375:30" pos:end="375:34"><expr pos:start="375:30" pos:end="375:34"><name pos:start="375:30" pos:end="375:34">pnum1</name></expr></argument>, <argument pos:start="375:37" pos:end="375:41"><expr pos:start="375:37" pos:end="375:41"><name pos:start="375:37" pos:end="375:41">pnum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="377:11" pos:end="435:9">else if <condition pos:start="377:19" pos:end="377:44">(<expr pos:start="377:20" pos:end="377:43"><name pos:start="377:20" pos:end="377:29">allocated1</name> <operator pos:start="377:31" pos:end="377:32">==</operator> <name pos:start="377:34" pos:end="377:43">allocated2</name></expr>)</condition> <block pos:start="377:46" pos:end="435:9">{<block_content pos:start="379:13" pos:end="433:13">

            <if_stmt pos:start="379:13" pos:end="433:13"><if pos:start="379:13" pos:end="433:13">if <condition pos:start="379:16" pos:end="379:27">(<expr pos:start="379:17" pos:end="379:26"><name pos:start="379:17" pos:end="379:26">allocated1</name></expr>)</condition> <block pos:start="379:29" pos:end="433:13">{<block_content pos:start="381:17" pos:end="431:17">

                <expr_stmt pos:start="381:17" pos:end="383:64"><expr pos:start="381:17" pos:end="383:63"><name pos:start="381:17" pos:end="381:19">ret</name> <operator pos:start="381:21" pos:end="381:21">=</operator> <call pos:start="381:23" pos:end="383:63"><name pos:start="381:23" pos:end="381:31">blk_pread</name><argument_list pos:start="381:32" pos:end="383:63">(<argument pos:start="381:33" pos:end="381:36"><expr pos:start="381:33" pos:end="381:36"><name pos:start="381:33" pos:end="381:36">blk1</name></expr></argument>, <argument pos:start="381:39" pos:end="381:68"><expr pos:start="381:39" pos:end="381:68"><name pos:start="381:39" pos:end="381:48">sector_num</name> <operator pos:start="381:50" pos:end="381:51">&lt;&lt;</operator> <name pos:start="381:53" pos:end="381:68">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="381:71" pos:end="381:74"><expr pos:start="381:71" pos:end="381:74"><name pos:start="381:71" pos:end="381:74">buf1</name></expr></argument>,

                                <argument pos:start="383:33" pos:end="383:62"><expr pos:start="383:33" pos:end="383:62"><name pos:start="383:33" pos:end="383:42">nb_sectors</name> <operator pos:start="383:44" pos:end="383:45">&lt;&lt;</operator> <name pos:start="383:47" pos:end="383:62">BDRV_SECTOR_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="385:17" pos:end="397:17"><if pos:start="385:17" pos:end="397:17">if <condition pos:start="385:20" pos:end="385:28">(<expr pos:start="385:21" pos:end="385:27"><name pos:start="385:21" pos:end="385:23">ret</name> <operator pos:start="385:25" pos:end="385:25">&lt;</operator> <literal type="number" pos:start="385:27" pos:end="385:27">0</literal></expr>)</condition> <block pos:start="385:30" pos:end="397:17">{<block_content pos:start="387:21" pos:end="395:29">

                    <expr_stmt pos:start="387:21" pos:end="391:49"><expr pos:start="387:21" pos:end="391:48"><call pos:start="387:21" pos:end="391:48"><name pos:start="387:21" pos:end="387:32">error_report</name><argument_list pos:start="387:33" pos:end="391:48">(<argument pos:start="387:34" pos:end="389:38"><expr pos:start="387:34" pos:end="389:38"><literal type="string" pos:start="387:34" pos:end="387:63">"Error while reading offset %"</literal> <name pos:start="387:65" pos:end="387:70">PRId64</name> <literal type="string" pos:start="387:72" pos:end="387:80">" of %s:"</literal>

                                 <literal type="string" pos:start="389:34" pos:end="389:38">" %s"</literal></expr></argument>, <argument pos:start="389:41" pos:end="389:68"><expr pos:start="389:41" pos:end="389:68"><call pos:start="389:41" pos:end="389:68"><name pos:start="389:41" pos:end="389:56">sectors_to_bytes</name><argument_list pos:start="389:57" pos:end="389:68">(<argument pos:start="389:58" pos:end="389:67"><expr pos:start="389:58" pos:end="389:67"><name pos:start="389:58" pos:end="389:67">sector_num</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="389:71" pos:end="389:79"><expr pos:start="389:71" pos:end="389:79"><name pos:start="389:71" pos:end="389:79">filename1</name></expr></argument>,

                                 <argument pos:start="391:34" pos:end="391:47"><expr pos:start="391:34" pos:end="391:47"><call pos:start="391:34" pos:end="391:47"><name pos:start="391:34" pos:end="391:41">strerror</name><argument_list pos:start="391:42" pos:end="391:47">(<argument pos:start="391:43" pos:end="391:46"><expr pos:start="391:43" pos:end="391:46"><operator pos:start="391:43" pos:end="391:43">-</operator><name pos:start="391:44" pos:end="391:46">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="393:21" pos:end="393:28"><expr pos:start="393:21" pos:end="393:27"><name pos:start="393:21" pos:end="393:23">ret</name> <operator pos:start="393:25" pos:end="393:25">=</operator> <literal type="number" pos:start="393:27" pos:end="393:27">4</literal></expr>;</expr_stmt>

                    <goto pos:start="395:21" pos:end="395:29">goto <name pos:start="395:26" pos:end="395:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="399:17" pos:end="401:64"><expr pos:start="399:17" pos:end="401:63"><name pos:start="399:17" pos:end="399:19">ret</name> <operator pos:start="399:21" pos:end="399:21">=</operator> <call pos:start="399:23" pos:end="401:63"><name pos:start="399:23" pos:end="399:31">blk_pread</name><argument_list pos:start="399:32" pos:end="401:63">(<argument pos:start="399:33" pos:end="399:36"><expr pos:start="399:33" pos:end="399:36"><name pos:start="399:33" pos:end="399:36">blk2</name></expr></argument>, <argument pos:start="399:39" pos:end="399:68"><expr pos:start="399:39" pos:end="399:68"><name pos:start="399:39" pos:end="399:48">sector_num</name> <operator pos:start="399:50" pos:end="399:51">&lt;&lt;</operator> <name pos:start="399:53" pos:end="399:68">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="399:71" pos:end="399:74"><expr pos:start="399:71" pos:end="399:74"><name pos:start="399:71" pos:end="399:74">buf2</name></expr></argument>,

                                <argument pos:start="401:33" pos:end="401:62"><expr pos:start="401:33" pos:end="401:62"><name pos:start="401:33" pos:end="401:42">nb_sectors</name> <operator pos:start="401:44" pos:end="401:45">&lt;&lt;</operator> <name pos:start="401:47" pos:end="401:62">BDRV_SECTOR_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="403:17" pos:end="415:17"><if pos:start="403:17" pos:end="415:17">if <condition pos:start="403:20" pos:end="403:28">(<expr pos:start="403:21" pos:end="403:27"><name pos:start="403:21" pos:end="403:23">ret</name> <operator pos:start="403:25" pos:end="403:25">&lt;</operator> <literal type="number" pos:start="403:27" pos:end="403:27">0</literal></expr>)</condition> <block pos:start="403:30" pos:end="415:17">{<block_content pos:start="405:21" pos:end="413:29">

                    <expr_stmt pos:start="405:21" pos:end="409:60"><expr pos:start="405:21" pos:end="409:59"><call pos:start="405:21" pos:end="409:59"><name pos:start="405:21" pos:end="405:32">error_report</name><argument_list pos:start="405:33" pos:end="409:59">(<argument pos:start="405:34" pos:end="407:45"><expr pos:start="405:34" pos:end="407:45"><literal type="string" pos:start="405:34" pos:end="405:63">"Error while reading offset %"</literal> <name pos:start="405:65" pos:end="405:70">PRId64</name>

                                 <literal type="string" pos:start="407:34" pos:end="407:45">" of %s: %s"</literal></expr></argument>, <argument pos:start="407:48" pos:end="407:75"><expr pos:start="407:48" pos:end="407:75"><call pos:start="407:48" pos:end="407:75"><name pos:start="407:48" pos:end="407:63">sectors_to_bytes</name><argument_list pos:start="407:64" pos:end="407:75">(<argument pos:start="407:65" pos:end="407:74"><expr pos:start="407:65" pos:end="407:74"><name pos:start="407:65" pos:end="407:74">sector_num</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="409:34" pos:end="409:42"><expr pos:start="409:34" pos:end="409:42"><name pos:start="409:34" pos:end="409:42">filename2</name></expr></argument>, <argument pos:start="409:45" pos:end="409:58"><expr pos:start="409:45" pos:end="409:58"><call pos:start="409:45" pos:end="409:58"><name pos:start="409:45" pos:end="409:52">strerror</name><argument_list pos:start="409:53" pos:end="409:58">(<argument pos:start="409:54" pos:end="409:57"><expr pos:start="409:54" pos:end="409:57"><operator pos:start="409:54" pos:end="409:54">-</operator><name pos:start="409:55" pos:end="409:57">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="411:21" pos:end="411:28"><expr pos:start="411:21" pos:end="411:27"><name pos:start="411:21" pos:end="411:23">ret</name> <operator pos:start="411:25" pos:end="411:25">=</operator> <literal type="number" pos:start="411:27" pos:end="411:27">4</literal></expr>;</expr_stmt>

                    <goto pos:start="413:21" pos:end="413:29">goto <name pos:start="413:26" pos:end="413:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:69"><expr pos:start="417:17" pos:end="417:68"><name pos:start="417:17" pos:end="417:19">ret</name> <operator pos:start="417:21" pos:end="417:21">=</operator> <call pos:start="417:23" pos:end="417:68"><name pos:start="417:23" pos:end="417:37">compare_sectors</name><argument_list pos:start="417:38" pos:end="417:68">(<argument pos:start="417:39" pos:end="417:42"><expr pos:start="417:39" pos:end="417:42"><name pos:start="417:39" pos:end="417:42">buf1</name></expr></argument>, <argument pos:start="417:45" pos:end="417:48"><expr pos:start="417:45" pos:end="417:48"><name pos:start="417:45" pos:end="417:48">buf2</name></expr></argument>, <argument pos:start="417:51" pos:end="417:60"><expr pos:start="417:51" pos:end="417:60"><name pos:start="417:51" pos:end="417:60">nb_sectors</name></expr></argument>, <argument pos:start="417:63" pos:end="417:67"><expr pos:start="417:63" pos:end="417:67"><operator pos:start="417:63" pos:end="417:63">&amp;</operator><name pos:start="417:64" pos:end="417:67">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="419:17" pos:end="431:17"><if pos:start="419:17" pos:end="431:17">if <condition pos:start="419:20" pos:end="419:46">(<expr pos:start="419:21" pos:end="419:45"><name pos:start="419:21" pos:end="419:23">ret</name> <operator pos:start="419:25" pos:end="419:26">||</operator> <name pos:start="419:28" pos:end="419:31">pnum</name> <operator pos:start="419:33" pos:end="419:34">!=</operator> <name pos:start="419:36" pos:end="419:45">nb_sectors</name></expr>)</condition> <block pos:start="419:48" pos:end="431:17">{<block_content pos:start="421:21" pos:end="429:29">

                    <expr_stmt pos:start="421:21" pos:end="425:71"><expr pos:start="421:21" pos:end="425:70"><call pos:start="421:21" pos:end="425:70"><name pos:start="421:21" pos:end="421:27">qprintf</name><argument_list pos:start="421:28" pos:end="425:70">(<argument pos:start="421:29" pos:end="421:33"><expr pos:start="421:29" pos:end="421:33"><name pos:start="421:29" pos:end="421:33">quiet</name></expr></argument>, <argument pos:start="421:36" pos:end="421:78"><expr pos:start="421:36" pos:end="421:78"><literal type="string" pos:start="421:36" pos:end="421:65">"Content mismatch at offset %"</literal> <name pos:start="421:67" pos:end="421:72">PRId64</name> <literal type="string" pos:start="421:74" pos:end="421:78">"!\n"</literal></expr></argument>,

                            <argument pos:start="423:29" pos:end="425:69"><expr pos:start="423:29" pos:end="425:69"><call pos:start="423:29" pos:end="425:69"><name pos:start="423:29" pos:end="423:44">sectors_to_bytes</name><argument_list pos:start="423:45" pos:end="425:69">(

                                <argument pos:start="425:33" pos:end="425:68"><expr pos:start="425:33" pos:end="425:68"><ternary pos:start="425:33" pos:end="425:68"><condition pos:start="425:33" pos:end="425:37"><expr pos:start="425:33" pos:end="425:35"><name pos:start="425:33" pos:end="425:35">ret</name></expr> ?</condition><then pos:start="425:39" pos:end="425:48"> <expr pos:start="425:39" pos:end="425:48"><name pos:start="425:39" pos:end="425:48">sector_num</name></expr> </then><else pos:start="425:50" pos:end="425:68">: <expr pos:start="425:52" pos:end="425:68"><name pos:start="425:52" pos:end="425:61">sector_num</name> <operator pos:start="425:63" pos:end="425:63">+</operator> <name pos:start="425:65" pos:end="425:68">pnum</name></expr></else></ternary></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="427:28"><expr pos:start="427:21" pos:end="427:27"><name pos:start="427:21" pos:end="427:23">ret</name> <operator pos:start="427:25" pos:end="427:25">=</operator> <literal type="number" pos:start="427:27" pos:end="427:27">1</literal></expr>;</expr_stmt>

                    <goto pos:start="429:21" pos:end="429:29">goto <name pos:start="429:26" pos:end="429:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="435:11" pos:end="469:9">else <block pos:start="435:16" pos:end="469:9">{<block_content pos:start="439:13" pos:end="467:13">



            <if_stmt pos:start="439:13" pos:end="451:13"><if pos:start="439:13" pos:end="445:13">if <condition pos:start="439:16" pos:end="439:27">(<expr pos:start="439:17" pos:end="439:26"><name pos:start="439:17" pos:end="439:26">allocated1</name></expr>)</condition> <block pos:start="439:29" pos:end="445:13">{<block_content pos:start="441:17" pos:end="443:66">

                <expr_stmt pos:start="441:17" pos:end="443:66"><expr pos:start="441:17" pos:end="443:65"><name pos:start="441:17" pos:end="441:19">ret</name> <operator pos:start="441:21" pos:end="441:21">=</operator> <call pos:start="441:23" pos:end="443:65"><name pos:start="441:23" pos:end="441:41">check_empty_sectors</name><argument_list pos:start="441:42" pos:end="443:65">(<argument pos:start="441:43" pos:end="441:46"><expr pos:start="441:43" pos:end="441:46"><name pos:start="441:43" pos:end="441:46">blk1</name></expr></argument>, <argument pos:start="441:49" pos:end="441:58"><expr pos:start="441:49" pos:end="441:58"><name pos:start="441:49" pos:end="441:58">sector_num</name></expr></argument>, <argument pos:start="441:61" pos:end="441:70"><expr pos:start="441:61" pos:end="441:70"><name pos:start="441:61" pos:end="441:70">nb_sectors</name></expr></argument>,

                                          <argument pos:start="443:43" pos:end="443:51"><expr pos:start="443:43" pos:end="443:51"><name pos:start="443:43" pos:end="443:51">filename1</name></expr></argument>, <argument pos:start="443:54" pos:end="443:57"><expr pos:start="443:54" pos:end="443:57"><name pos:start="443:54" pos:end="443:57">buf1</name></expr></argument>, <argument pos:start="443:60" pos:end="443:64"><expr pos:start="443:60" pos:end="443:64"><name pos:start="443:60" pos:end="443:64">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="445:15" pos:end="451:13">else <block pos:start="445:20" pos:end="451:13">{<block_content pos:start="447:17" pos:end="449:66">

                <expr_stmt pos:start="447:17" pos:end="449:66"><expr pos:start="447:17" pos:end="449:65"><name pos:start="447:17" pos:end="447:19">ret</name> <operator pos:start="447:21" pos:end="447:21">=</operator> <call pos:start="447:23" pos:end="449:65"><name pos:start="447:23" pos:end="447:41">check_empty_sectors</name><argument_list pos:start="447:42" pos:end="449:65">(<argument pos:start="447:43" pos:end="447:46"><expr pos:start="447:43" pos:end="447:46"><name pos:start="447:43" pos:end="447:46">blk2</name></expr></argument>, <argument pos:start="447:49" pos:end="447:58"><expr pos:start="447:49" pos:end="447:58"><name pos:start="447:49" pos:end="447:58">sector_num</name></expr></argument>, <argument pos:start="447:61" pos:end="447:70"><expr pos:start="447:61" pos:end="447:70"><name pos:start="447:61" pos:end="447:70">nb_sectors</name></expr></argument>,

                                          <argument pos:start="449:43" pos:end="449:51"><expr pos:start="449:43" pos:end="449:51"><name pos:start="449:43" pos:end="449:51">filename2</name></expr></argument>, <argument pos:start="449:54" pos:end="449:57"><expr pos:start="449:54" pos:end="449:57"><name pos:start="449:54" pos:end="449:57">buf1</name></expr></argument>, <argument pos:start="449:60" pos:end="449:64"><expr pos:start="449:60" pos:end="449:64"><name pos:start="449:60" pos:end="449:64">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="453:13" pos:end="467:13"><if pos:start="453:13" pos:end="467:13">if <condition pos:start="453:16" pos:end="453:20">(<expr pos:start="453:17" pos:end="453:19"><name pos:start="453:17" pos:end="453:19">ret</name></expr>)</condition> <block pos:start="453:22" pos:end="467:13">{<block_content pos:start="455:17" pos:end="465:25">

                <if_stmt pos:start="455:17" pos:end="463:17"><if pos:start="455:17" pos:end="463:17">if <condition pos:start="455:20" pos:end="455:28">(<expr pos:start="455:21" pos:end="455:27"><name pos:start="455:21" pos:end="455:23">ret</name> <operator pos:start="455:25" pos:end="455:25">&lt;</operator> <literal type="number" pos:start="455:27" pos:end="455:27">0</literal></expr>)</condition> <block pos:start="455:30" pos:end="463:17">{<block_content pos:start="457:21" pos:end="461:28">

                    <expr_stmt pos:start="457:21" pos:end="459:79"><expr pos:start="457:21" pos:end="459:78"><call pos:start="457:21" pos:end="459:78"><name pos:start="457:21" pos:end="457:32">error_report</name><argument_list pos:start="457:33" pos:end="459:78">(<argument pos:start="457:34" pos:end="457:77"><expr pos:start="457:34" pos:end="457:77"><literal type="string" pos:start="457:34" pos:end="457:63">"Error while reading offset %"</literal> <name pos:start="457:65" pos:end="457:70">PRId64</name> <literal type="string" pos:start="457:72" pos:end="457:77">": %s"</literal></expr></argument>,

                                 <argument pos:start="459:34" pos:end="459:61"><expr pos:start="459:34" pos:end="459:61"><call pos:start="459:34" pos:end="459:61"><name pos:start="459:34" pos:end="459:49">sectors_to_bytes</name><argument_list pos:start="459:50" pos:end="459:61">(<argument pos:start="459:51" pos:end="459:60"><expr pos:start="459:51" pos:end="459:60"><name pos:start="459:51" pos:end="459:60">sector_num</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="459:64" pos:end="459:77"><expr pos:start="459:64" pos:end="459:77"><call pos:start="459:64" pos:end="459:77"><name pos:start="459:64" pos:end="459:71">strerror</name><argument_list pos:start="459:72" pos:end="459:77">(<argument pos:start="459:73" pos:end="459:76"><expr pos:start="459:73" pos:end="459:76"><operator pos:start="459:73" pos:end="459:73">-</operator><name pos:start="459:74" pos:end="459:76">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="461:21" pos:end="461:28"><expr pos:start="461:21" pos:end="461:27"><name pos:start="461:21" pos:end="461:23">ret</name> <operator pos:start="461:25" pos:end="461:25">=</operator> <literal type="number" pos:start="461:27" pos:end="461:27">4</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <goto pos:start="465:17" pos:end="465:25">goto <name pos:start="465:22" pos:end="465:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:33"><expr pos:start="471:9" pos:end="471:32"><name pos:start="471:9" pos:end="471:18">sector_num</name> <operator pos:start="471:20" pos:end="471:21">+=</operator> <name pos:start="471:23" pos:end="471:32">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:75"><expr pos:start="473:9" pos:end="473:74"><call pos:start="473:9" pos:end="473:74"><name pos:start="473:9" pos:end="473:27">qemu_progress_print</name><argument_list pos:start="473:28" pos:end="473:74">(<argument pos:start="473:29" pos:end="473:68"><expr pos:start="473:29" pos:end="473:68"><operator pos:start="473:29" pos:end="473:29">(</operator><operator pos:start="473:30" pos:end="473:30">(</operator><name pos:start="473:31" pos:end="473:35">float</name><operator pos:start="473:36" pos:end="473:36">)</operator> <name pos:start="473:38" pos:end="473:47">nb_sectors</name> <operator pos:start="473:49" pos:end="473:49">/</operator> <name pos:start="473:51" pos:end="473:63">progress_base</name><operator pos:start="473:64" pos:end="473:64">)</operator><operator pos:start="473:65" pos:end="473:65">*</operator><literal type="number" pos:start="473:66" pos:end="473:68">100</literal></expr></argument>, <argument pos:start="473:71" pos:end="473:73"><expr pos:start="473:71" pos:end="473:73"><literal type="number" pos:start="473:71" pos:end="473:73">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="479:5" pos:end="573:5"><if pos:start="479:5" pos:end="573:5">if <condition pos:start="479:8" pos:end="479:41">(<expr pos:start="479:9" pos:end="479:40"><name pos:start="479:9" pos:end="479:22">total_sectors1</name> <operator pos:start="479:24" pos:end="479:25">!=</operator> <name pos:start="479:27" pos:end="479:40">total_sectors2</name></expr>)</condition> <block pos:start="479:43" pos:end="573:5">{<block_content pos:start="481:9" pos:end="571:9">

        <decl_stmt pos:start="481:9" pos:end="481:31"><decl pos:start="481:9" pos:end="481:30"><type pos:start="481:9" pos:end="481:22"><name pos:start="481:9" pos:end="481:20">BlockBackend</name> <modifier pos:start="481:22" pos:end="481:22">*</modifier></type><name pos:start="481:23" pos:end="481:30">blk_over</name></decl>;</decl_stmt>

        <decl_stmt pos:start="483:9" pos:end="483:35"><decl pos:start="483:9" pos:end="483:34"><type pos:start="483:9" pos:end="483:15"><name pos:start="483:9" pos:end="483:15">int64_t</name></type> <name pos:start="483:17" pos:end="483:34">total_sectors_over</name></decl>;</decl_stmt>

        <decl_stmt pos:start="485:9" pos:end="485:34"><decl pos:start="485:9" pos:end="485:33"><type pos:start="485:9" pos:end="485:20"><specifier pos:start="485:9" pos:end="485:13">const</specifier> <name pos:start="485:15" pos:end="485:18">char</name> <modifier pos:start="485:20" pos:end="485:20">*</modifier></type><name pos:start="485:21" pos:end="485:33">filename_over</name></decl>;</decl_stmt>



        <expr_stmt pos:start="489:9" pos:end="489:58"><expr pos:start="489:9" pos:end="489:57"><call pos:start="489:9" pos:end="489:57"><name pos:start="489:9" pos:end="489:15">qprintf</name><argument_list pos:start="489:16" pos:end="489:57">(<argument pos:start="489:17" pos:end="489:21"><expr pos:start="489:17" pos:end="489:21"><name pos:start="489:17" pos:end="489:21">quiet</name></expr></argument>, <argument pos:start="489:24" pos:end="489:56"><expr pos:start="489:24" pos:end="489:56"><literal type="string" pos:start="489:24" pos:end="489:56">"Warning: Image size mismatch!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="491:9" pos:end="507:9"><if pos:start="491:9" pos:end="499:9">if <condition pos:start="491:12" pos:end="491:44">(<expr pos:start="491:13" pos:end="491:43"><name pos:start="491:13" pos:end="491:26">total_sectors1</name> <operator pos:start="491:28" pos:end="491:28">&gt;</operator> <name pos:start="491:30" pos:end="491:43">total_sectors2</name></expr>)</condition> <block pos:start="491:46" pos:end="499:9">{<block_content pos:start="493:13" pos:end="497:38">

            <expr_stmt pos:start="493:13" pos:end="493:48"><expr pos:start="493:13" pos:end="493:47"><name pos:start="493:13" pos:end="493:30">total_sectors_over</name> <operator pos:start="493:32" pos:end="493:32">=</operator> <name pos:start="493:34" pos:end="493:47">total_sectors1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="495:13" pos:end="495:28"><expr pos:start="495:13" pos:end="495:27"><name pos:start="495:13" pos:end="495:20">blk_over</name> <operator pos:start="495:22" pos:end="495:22">=</operator> <name pos:start="495:24" pos:end="495:27">blk1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:38"><expr pos:start="497:13" pos:end="497:37"><name pos:start="497:13" pos:end="497:25">filename_over</name> <operator pos:start="497:27" pos:end="497:27">=</operator> <name pos:start="497:29" pos:end="497:37">filename1</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="499:11" pos:end="507:9">else <block pos:start="499:16" pos:end="507:9">{<block_content pos:start="501:13" pos:end="505:38">

            <expr_stmt pos:start="501:13" pos:end="501:48"><expr pos:start="501:13" pos:end="501:47"><name pos:start="501:13" pos:end="501:30">total_sectors_over</name> <operator pos:start="501:32" pos:end="501:32">=</operator> <name pos:start="501:34" pos:end="501:47">total_sectors2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:28"><expr pos:start="503:13" pos:end="503:27"><name pos:start="503:13" pos:end="503:20">blk_over</name> <operator pos:start="503:22" pos:end="503:22">=</operator> <name pos:start="503:24" pos:end="503:27">blk2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:38"><expr pos:start="505:13" pos:end="505:37"><name pos:start="505:13" pos:end="505:25">filename_over</name> <operator pos:start="505:27" pos:end="505:27">=</operator> <name pos:start="505:29" pos:end="505:37">filename2</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <for pos:start="511:9" pos:end="571:9">for <control pos:start="511:13" pos:end="511:16">(<init pos:start="511:14" pos:end="511:14">;</init><condition pos:start="511:15" pos:end="511:15">;</condition><incr/>)</control> <block pos:start="511:18" pos:end="571:9">{<block_content pos:start="513:13" pos:end="569:79">

            <expr_stmt pos:start="513:13" pos:end="513:76"><expr pos:start="513:13" pos:end="513:75"><name pos:start="513:13" pos:end="513:22">nb_sectors</name> <operator pos:start="513:24" pos:end="513:24">=</operator> <call pos:start="513:26" pos:end="513:75"><name pos:start="513:26" pos:end="513:43">sectors_to_process</name><argument_list pos:start="513:44" pos:end="513:75">(<argument pos:start="513:45" pos:end="513:62"><expr pos:start="513:45" pos:end="513:62"><name pos:start="513:45" pos:end="513:62">total_sectors_over</name></expr></argument>, <argument pos:start="513:65" pos:end="513:74"><expr pos:start="513:65" pos:end="513:74"><name pos:start="513:65" pos:end="513:74">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="515:13" pos:end="519:13"><if pos:start="515:13" pos:end="519:13">if <condition pos:start="515:16" pos:end="515:32">(<expr pos:start="515:17" pos:end="515:31"><name pos:start="515:17" pos:end="515:26">nb_sectors</name> <operator pos:start="515:28" pos:end="515:29">&lt;=</operator> <literal type="number" pos:start="515:31" pos:end="515:31">0</literal></expr>)</condition> <block pos:start="515:34" pos:end="519:13">{<block_content pos:start="517:17" pos:end="517:22">

                <break pos:start="517:17" pos:end="517:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="521:13" pos:end="523:61"><expr pos:start="521:13" pos:end="523:60"><name pos:start="521:13" pos:end="521:15">ret</name> <operator pos:start="521:17" pos:end="521:17">=</operator> <call pos:start="521:19" pos:end="523:60"><name pos:start="521:19" pos:end="521:41">bdrv_is_allocated_above</name><argument_list pos:start="521:42" pos:end="523:60">(<argument pos:start="521:43" pos:end="521:58"><expr pos:start="521:43" pos:end="521:58"><call pos:start="521:43" pos:end="521:58"><name pos:start="521:43" pos:end="521:48">blk_bs</name><argument_list pos:start="521:49" pos:end="521:58">(<argument pos:start="521:50" pos:end="521:57"><expr pos:start="521:50" pos:end="521:57"><name pos:start="521:50" pos:end="521:57">blk_over</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="521:61" pos:end="521:64"><expr pos:start="521:61" pos:end="521:64"><name pos:start="521:61" pos:end="521:64">NULL</name></expr></argument>, <argument pos:start="521:67" pos:end="521:76"><expr pos:start="521:67" pos:end="521:76"><name pos:start="521:67" pos:end="521:76">sector_num</name></expr></argument>,

                                          <argument pos:start="523:43" pos:end="523:52"><expr pos:start="523:43" pos:end="523:52"><name pos:start="523:43" pos:end="523:52">nb_sectors</name></expr></argument>, <argument pos:start="523:55" pos:end="523:59"><expr pos:start="523:55" pos:end="523:59"><operator pos:start="523:55" pos:end="523:55">&amp;</operator><name pos:start="523:56" pos:end="523:59">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="525:13" pos:end="537:13"><if pos:start="525:13" pos:end="537:13">if <condition pos:start="525:16" pos:end="525:24">(<expr pos:start="525:17" pos:end="525:23"><name pos:start="525:17" pos:end="525:19">ret</name> <operator pos:start="525:21" pos:end="525:21">&lt;</operator> <literal type="number" pos:start="525:23" pos:end="525:23">0</literal></expr>)</condition> <block pos:start="525:26" pos:end="537:13">{<block_content pos:start="527:17" pos:end="533:25">

                <expr_stmt pos:start="527:17" pos:end="527:24"><expr pos:start="527:17" pos:end="527:23"><name pos:start="527:17" pos:end="527:19">ret</name> <operator pos:start="527:21" pos:end="527:21">=</operator> <literal type="number" pos:start="527:23" pos:end="527:23">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="529:17" pos:end="531:44"><expr pos:start="529:17" pos:end="531:43"><call pos:start="529:17" pos:end="531:43"><name pos:start="529:17" pos:end="529:28">error_report</name><argument_list pos:start="529:29" pos:end="531:43">(<argument pos:start="529:30" pos:end="529:67"><expr pos:start="529:30" pos:end="529:67"><literal type="string" pos:start="529:30" pos:end="529:67">"Sector allocation test failed for %s"</literal></expr></argument>,

                             <argument pos:start="531:30" pos:end="531:42"><expr pos:start="531:30" pos:end="531:42"><name pos:start="531:30" pos:end="531:42">filename_over</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="533:17" pos:end="533:25">goto <name pos:start="533:22" pos:end="533:24">out</name>;</goto>



            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="539:13" pos:end="539:30"><expr pos:start="539:13" pos:end="539:29"><name pos:start="539:13" pos:end="539:22">nb_sectors</name> <operator pos:start="539:24" pos:end="539:24">=</operator> <name pos:start="539:26" pos:end="539:29">pnum</name></expr>;</expr_stmt>

            <if_stmt pos:start="541:13" pos:end="565:13"><if pos:start="541:13" pos:end="565:13">if <condition pos:start="541:16" pos:end="541:20">(<expr pos:start="541:17" pos:end="541:19"><name pos:start="541:17" pos:end="541:19">ret</name></expr>)</condition> <block pos:start="541:22" pos:end="565:13">{<block_content pos:start="543:17" pos:end="563:17">

                <expr_stmt pos:start="543:17" pos:end="545:70"><expr pos:start="543:17" pos:end="545:69"><name pos:start="543:17" pos:end="543:19">ret</name> <operator pos:start="543:21" pos:end="543:21">=</operator> <call pos:start="543:23" pos:end="545:69"><name pos:start="543:23" pos:end="543:41">check_empty_sectors</name><argument_list pos:start="543:42" pos:end="545:69">(<argument pos:start="543:43" pos:end="543:50"><expr pos:start="543:43" pos:end="543:50"><name pos:start="543:43" pos:end="543:50">blk_over</name></expr></argument>, <argument pos:start="543:53" pos:end="543:62"><expr pos:start="543:53" pos:end="543:62"><name pos:start="543:53" pos:end="543:62">sector_num</name></expr></argument>, <argument pos:start="543:65" pos:end="543:74"><expr pos:start="543:65" pos:end="543:74"><name pos:start="543:65" pos:end="543:74">nb_sectors</name></expr></argument>,

                                          <argument pos:start="545:43" pos:end="545:55"><expr pos:start="545:43" pos:end="545:55"><name pos:start="545:43" pos:end="545:55">filename_over</name></expr></argument>, <argument pos:start="545:58" pos:end="545:61"><expr pos:start="545:58" pos:end="545:61"><name pos:start="545:58" pos:end="545:61">buf1</name></expr></argument>, <argument pos:start="545:64" pos:end="545:68"><expr pos:start="545:64" pos:end="545:68"><name pos:start="545:64" pos:end="545:68">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="547:17" pos:end="563:17"><if pos:start="547:17" pos:end="563:17">if <condition pos:start="547:20" pos:end="547:24">(<expr pos:start="547:21" pos:end="547:23"><name pos:start="547:21" pos:end="547:23">ret</name></expr>)</condition> <block pos:start="547:26" pos:end="563:17">{<block_content pos:start="549:21" pos:end="561:29">

                    <if_stmt pos:start="549:21" pos:end="559:21"><if pos:start="549:21" pos:end="559:21">if <condition pos:start="549:24" pos:end="549:32">(<expr pos:start="549:25" pos:end="549:31"><name pos:start="549:25" pos:end="549:27">ret</name> <operator pos:start="549:29" pos:end="549:29">&lt;</operator> <literal type="number" pos:start="549:31" pos:end="549:31">0</literal></expr>)</condition> <block pos:start="549:34" pos:end="559:21">{<block_content pos:start="551:25" pos:end="557:32">

                        <expr_stmt pos:start="551:25" pos:end="555:68"><expr pos:start="551:25" pos:end="555:67"><call pos:start="551:25" pos:end="555:67"><name pos:start="551:25" pos:end="551:36">error_report</name><argument_list pos:start="551:37" pos:end="555:67">(<argument pos:start="551:38" pos:end="553:49"><expr pos:start="551:38" pos:end="553:49"><literal type="string" pos:start="551:38" pos:end="551:67">"Error while reading offset %"</literal> <name pos:start="551:69" pos:end="551:74">PRId64</name>

                                     <literal type="string" pos:start="553:38" pos:end="553:49">" of %s: %s"</literal></expr></argument>, <argument pos:start="553:52" pos:end="553:79"><expr pos:start="553:52" pos:end="553:79"><call pos:start="553:52" pos:end="553:79"><name pos:start="553:52" pos:end="553:67">sectors_to_bytes</name><argument_list pos:start="553:68" pos:end="553:79">(<argument pos:start="553:69" pos:end="553:78"><expr pos:start="553:69" pos:end="553:78"><name pos:start="553:69" pos:end="553:78">sector_num</name></expr></argument>)</argument_list></call></expr></argument>,

                                     <argument pos:start="555:38" pos:end="555:50"><expr pos:start="555:38" pos:end="555:50"><name pos:start="555:38" pos:end="555:50">filename_over</name></expr></argument>, <argument pos:start="555:53" pos:end="555:66"><expr pos:start="555:53" pos:end="555:66"><call pos:start="555:53" pos:end="555:66"><name pos:start="555:53" pos:end="555:60">strerror</name><argument_list pos:start="555:61" pos:end="555:66">(<argument pos:start="555:62" pos:end="555:65"><expr pos:start="555:62" pos:end="555:65"><operator pos:start="555:62" pos:end="555:62">-</operator><name pos:start="555:63" pos:end="555:65">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="557:25" pos:end="557:32"><expr pos:start="557:25" pos:end="557:31"><name pos:start="557:25" pos:end="557:27">ret</name> <operator pos:start="557:29" pos:end="557:29">=</operator> <literal type="number" pos:start="557:31" pos:end="557:31">4</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <goto pos:start="561:21" pos:end="561:29">goto <name pos:start="561:26" pos:end="561:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="567:13" pos:end="567:37"><expr pos:start="567:13" pos:end="567:36"><name pos:start="567:13" pos:end="567:22">sector_num</name> <operator pos:start="567:24" pos:end="567:25">+=</operator> <name pos:start="567:27" pos:end="567:36">nb_sectors</name></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:79"><expr pos:start="569:13" pos:end="569:78"><call pos:start="569:13" pos:end="569:78"><name pos:start="569:13" pos:end="569:31">qemu_progress_print</name><argument_list pos:start="569:32" pos:end="569:78">(<argument pos:start="569:33" pos:end="569:72"><expr pos:start="569:33" pos:end="569:72"><operator pos:start="569:33" pos:end="569:33">(</operator><operator pos:start="569:34" pos:end="569:34">(</operator><name pos:start="569:35" pos:end="569:39">float</name><operator pos:start="569:40" pos:end="569:40">)</operator> <name pos:start="569:42" pos:end="569:51">nb_sectors</name> <operator pos:start="569:53" pos:end="569:53">/</operator> <name pos:start="569:55" pos:end="569:67">progress_base</name><operator pos:start="569:68" pos:end="569:68">)</operator><operator pos:start="569:69" pos:end="569:69">*</operator><literal type="number" pos:start="569:70" pos:end="569:72">100</literal></expr></argument>, <argument pos:start="569:75" pos:end="569:77"><expr pos:start="569:75" pos:end="569:77"><literal type="number" pos:start="569:75" pos:end="569:77">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="577:5" pos:end="577:46"><expr pos:start="577:5" pos:end="577:45"><call pos:start="577:5" pos:end="577:45"><name pos:start="577:5" pos:end="577:11">qprintf</name><argument_list pos:start="577:12" pos:end="577:45">(<argument pos:start="577:13" pos:end="577:17"><expr pos:start="577:13" pos:end="577:17"><name pos:start="577:13" pos:end="577:17">quiet</name></expr></argument>, <argument pos:start="577:20" pos:end="577:44"><expr pos:start="577:20" pos:end="577:44"><literal type="string" pos:start="577:20" pos:end="577:44">"Images are identical.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="579:5" pos:end="579:12"><expr pos:start="579:5" pos:end="579:11"><name pos:start="579:5" pos:end="579:7">ret</name> <operator pos:start="579:9" pos:end="579:9">=</operator> <literal type="number" pos:start="579:11" pos:end="579:11">0</literal></expr>;</expr_stmt>



<label pos:start="583:1" pos:end="583:4"><name pos:start="583:1" pos:end="583:3">out</name>:</label>

    <expr_stmt pos:start="585:5" pos:end="585:21"><expr pos:start="585:5" pos:end="585:20"><call pos:start="585:5" pos:end="585:20"><name pos:start="585:5" pos:end="585:14">qemu_vfree</name><argument_list pos:start="585:15" pos:end="585:20">(<argument pos:start="585:16" pos:end="585:19"><expr pos:start="585:16" pos:end="585:19"><name pos:start="585:16" pos:end="585:19">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="587:5" pos:end="587:21"><expr pos:start="587:5" pos:end="587:20"><call pos:start="587:5" pos:end="587:20"><name pos:start="587:5" pos:end="587:14">qemu_vfree</name><argument_list pos:start="587:15" pos:end="587:20">(<argument pos:start="587:16" pos:end="587:19"><expr pos:start="587:16" pos:end="587:19"><name pos:start="587:16" pos:end="587:19">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="589:5" pos:end="589:20"><expr pos:start="589:5" pos:end="589:19"><call pos:start="589:5" pos:end="589:19"><name pos:start="589:5" pos:end="589:13">blk_unref</name><argument_list pos:start="589:14" pos:end="589:19">(<argument pos:start="589:15" pos:end="589:18"><expr pos:start="589:15" pos:end="589:18"><name pos:start="589:15" pos:end="589:18">blk2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="591:1" pos:end="591:5"><name pos:start="591:1" pos:end="591:4">out2</name>:</label>

    <expr_stmt pos:start="593:5" pos:end="593:20"><expr pos:start="593:5" pos:end="593:19"><call pos:start="593:5" pos:end="593:19"><name pos:start="593:5" pos:end="593:13">blk_unref</name><argument_list pos:start="593:14" pos:end="593:19">(<argument pos:start="593:15" pos:end="593:18"><expr pos:start="593:15" pos:end="593:18"><name pos:start="593:15" pos:end="593:18">blk1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="595:1" pos:end="595:5"><name pos:start="595:1" pos:end="595:4">out3</name>:</label>

    <expr_stmt pos:start="597:5" pos:end="597:24"><expr pos:start="597:5" pos:end="597:23"><call pos:start="597:5" pos:end="597:23"><name pos:start="597:5" pos:end="597:21">qemu_progress_end</name><argument_list pos:start="597:22" pos:end="597:23">()</argument_list></call></expr>;</expr_stmt>

<label pos:start="599:1" pos:end="599:5"><name pos:start="599:1" pos:end="599:4">out4</name>:</label>

    <return pos:start="601:5" pos:end="601:15">return <expr pos:start="601:12" pos:end="601:14"><name pos:start="601:12" pos:end="601:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
