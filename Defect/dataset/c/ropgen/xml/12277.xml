<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12277.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">fdctrl_init_common</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:38"><name pos:start="1:31" pos:end="1:36">FDCtrl</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">fdctrl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:36">command_tables_inited</name> <init pos:start="7:38" pos:end="7:40">= <expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:48">/* Fill 'command_to_handler' lookup table */</comment>

    <if_stmt pos:start="13:5" pos:end="31:5"><if pos:start="13:5" pos:end="31:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:30">command_tables_inited</name></expr>)</condition> <block pos:start="13:33" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:9">

        <expr_stmt pos:start="15:9" pos:end="15:34"><expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:29">command_tables_inited</name> <operator pos:start="15:31" pos:end="15:31">=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">1</literal></expr>;</expr_stmt>

        <for pos:start="17:9" pos:end="29:9">for <control pos:start="17:13" pos:end="17:55">(<init pos:start="17:14" pos:end="17:42"><expr pos:start="17:14" pos:end="17:41"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:37"><name pos:start="17:18" pos:end="17:27">ARRAY_SIZE</name><argument_list pos:start="17:28" pos:end="17:37">(<argument pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:36"><name pos:start="17:29" pos:end="17:36">handlers</name></expr></argument>)</argument_list></call> <operator pos:start="17:39" pos:end="17:39">-</operator> <literal type="number" pos:start="17:41" pos:end="17:41">1</literal></expr>;</init> <condition pos:start="17:44" pos:end="17:50"><expr pos:start="17:44" pos:end="17:49"><name pos:start="17:44" pos:end="17:44">i</name> <operator pos:start="17:46" pos:end="17:47">&gt;=</operator> <literal type="number" pos:start="17:49" pos:end="17:49">0</literal></expr>;</condition> <incr pos:start="17:52" pos:end="17:54"><expr pos:start="17:52" pos:end="17:54"><name pos:start="17:52" pos:end="17:52">i</name><operator pos:start="17:53" pos:end="17:54">--</operator></expr></incr>)</control> <block pos:start="17:57" pos:end="29:9">{<block_content pos:start="19:13" pos:end="27:13">

            <for pos:start="19:13" pos:end="27:13">for <control pos:start="19:17" pos:end="19:60">(<init pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:18">j</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</init> <condition pos:start="19:25" pos:end="19:55"><expr pos:start="19:25" pos:end="19:54"><name pos:start="19:25" pos:end="19:25">j</name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <sizeof pos:start="19:29" pos:end="19:54">sizeof<argument_list pos:start="19:35" pos:end="19:54">(<argument pos:start="19:36" pos:end="19:53"><expr pos:start="19:36" pos:end="19:53"><name pos:start="19:36" pos:end="19:53">command_to_handler</name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="19:57" pos:end="19:59"><expr pos:start="19:57" pos:end="19:59"><name pos:start="19:57" pos:end="19:57">j</name><operator pos:start="19:58" pos:end="19:59">++</operator></expr></incr>)</control> <block pos:start="19:62" pos:end="27:13">{<block_content pos:start="21:17" pos:end="25:17">

                <if_stmt pos:start="21:17" pos:end="25:17"><if pos:start="21:17" pos:end="25:17">if <condition pos:start="21:20" pos:end="21:64">(<expr pos:start="21:21" pos:end="21:63"><operator pos:start="21:21" pos:end="21:21">(</operator><name pos:start="21:22" pos:end="21:22">j</name> <operator pos:start="21:24" pos:end="21:24">&amp;</operator> <name pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:33">handlers</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">i</name></expr>]</index></name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:41">mask</name><operator pos:start="21:42" pos:end="21:42">)</operator> <operator pos:start="21:44" pos:end="21:45">==</operator> <name pos:start="21:47" pos:end="21:57"><name pos:start="21:47" pos:end="21:54">handlers</name><index pos:start="21:55" pos:end="21:57">[<expr pos:start="21:56" pos:end="21:56"><name pos:start="21:56" pos:end="21:56">i</name></expr>]</index></name><operator pos:start="21:58" pos:end="21:58">.</operator><name pos:start="21:59" pos:end="21:63">value</name></expr>)</condition> <block pos:start="21:66" pos:end="25:17">{<block_content pos:start="23:21" pos:end="23:46">

                    <expr_stmt pos:start="23:21" pos:end="23:46"><expr pos:start="23:21" pos:end="23:45"><name pos:start="23:21" pos:end="23:41"><name pos:start="23:21" pos:end="23:38">command_to_handler</name><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><name pos:start="23:40" pos:end="23:40">j</name></expr>]</index></name> <operator pos:start="23:43" pos:end="23:43">=</operator> <name pos:start="23:45" pos:end="23:45">i</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><call pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:18">FLOPPY_DPRINTF</name><argument_list pos:start="35:19" pos:end="35:39">(<argument pos:start="35:20" pos:end="35:38"><expr pos:start="35:20" pos:end="35:38"><literal type="string" pos:start="35:20" pos:end="35:38">"init controller\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:10">fdctrl</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:16">fifo</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:52"><name pos:start="37:20" pos:end="37:32">qemu_memalign</name><argument_list pos:start="37:33" pos:end="37:52">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><literal type="number" pos:start="37:34" pos:end="37:36">512</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:51"><expr pos:start="37:39" pos:end="37:51"><name pos:start="37:39" pos:end="37:51">FD_SECTOR_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:10">fdctrl</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:21">fifo_size</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:27">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:71"><expr pos:start="41:5" pos:end="43:70"><name pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:10">fdctrl</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:24">result_timer</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="43:70"><name pos:start="41:28" pos:end="41:41">qemu_new_timer</name><argument_list pos:start="41:42" pos:end="43:70">(<argument pos:start="41:43" pos:end="41:50"><expr pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:50">vm_clock</name></expr></argument>,

                                          <argument pos:start="43:43" pos:end="43:61"><expr pos:start="43:43" pos:end="43:61"><name pos:start="43:43" pos:end="43:61">fdctrl_result_timer</name></expr></argument>, <argument pos:start="43:64" pos:end="43:69"><expr pos:start="43:64" pos:end="43:69"><name pos:start="43:64" pos:end="43:69">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:10">fdctrl</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:19">version</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:26">0x90</literal></expr>;</expr_stmt> <comment type="block" pos:start="47:29" pos:end="47:56">/* Intel 82078 controller */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:53"><expr pos:start="49:5" pos:end="49:52"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:10">fdctrl</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:18">config</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:34">FD_CONFIG_EIS</name> <operator pos:start="49:36" pos:end="49:36">|</operator> <name pos:start="49:38" pos:end="49:52">FD_CONFIG_EFIFO</name></expr>;</expr_stmt> <comment type="block" pos:start="49:55" pos:end="49:97">/* Implicit seek, polling &amp; FIFO enabled */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:10">fdctrl</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:24">num_floppies</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:33">MAX_FD</name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="57:82"><if pos:start="55:5" pos:end="57:82">if <condition pos:start="55:8" pos:end="55:32">(<expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:14">fdctrl</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:25">dma_chann</name></name> <operator pos:start="55:27" pos:end="55:28">!=</operator> <operator pos:start="55:30" pos:end="55:30">-</operator><literal type="number" pos:start="55:31" pos:end="55:31">1</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:82"><block_content pos:start="57:9" pos:end="57:82">

        <expr_stmt pos:start="57:9" pos:end="57:82"><expr pos:start="57:9" pos:end="57:81"><call pos:start="57:9" pos:end="57:81"><name pos:start="57:9" pos:end="57:28">DMA_register_channel</name><argument_list pos:start="57:29" pos:end="57:81">(<argument pos:start="57:30" pos:end="57:46"><expr pos:start="57:30" pos:end="57:46"><name pos:start="57:30" pos:end="57:46"><name pos:start="57:30" pos:end="57:35">fdctrl</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:46">dma_chann</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:72"><expr pos:start="57:49" pos:end="57:72"><operator pos:start="57:49" pos:end="57:49">&amp;</operator><name pos:start="57:50" pos:end="57:72">fdctrl_transfer_handler</name></expr></argument>, <argument pos:start="57:75" pos:end="57:80"><expr pos:start="57:75" pos:end="57:80"><name pos:start="57:75" pos:end="57:80">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><call pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:25">fdctrl_connect_drives</name><argument_list pos:start="59:26" pos:end="59:33">(<argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><name pos:start="59:27" pos:end="59:32">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
