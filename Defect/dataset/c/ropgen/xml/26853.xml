<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26853.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">au_read_header</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:19">id</name></decl>, <decl pos:start="11:22" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:22" pos:end="11:29">channels</name></decl>, <decl pos:start="11:32" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:32" pos:end="11:35">rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:18">AVCodecID</name></name></type> <name pos:start="13:20" pos:end="13:24">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVStream</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:16">st</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:29">/* check ".snd" header */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:7">tag</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:23"><name pos:start="21:11" pos:end="21:19">avio_rl32</name><argument_list pos:start="21:20" pos:end="21:23">(<argument pos:start="21:21" pos:end="21:22"><expr pos:start="21:21" pos:end="21:22"><name pos:start="21:21" pos:end="21:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:11">tag</name> <operator pos:start="23:13" pos:end="23:14">!=</operator> <call pos:start="23:16" pos:end="23:40"><name pos:start="23:16" pos:end="23:20">MKTAG</name><argument_list pos:start="23:21" pos:end="23:40">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><literal type="char" pos:start="23:22" pos:end="23:24">'.'</literal></expr></argument>, <argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><literal type="char" pos:start="23:27" pos:end="23:29">'s'</literal></expr></argument>, <argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><literal type="char" pos:start="23:32" pos:end="23:34">'n'</literal></expr></argument>, <argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><literal type="char" pos:start="23:37" pos:end="23:39">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:8">size</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:24"><name pos:start="27:12" pos:end="27:20">avio_rb32</name><argument_list pos:start="27:21" pos:end="27:24">(<argument pos:start="27:22" pos:end="27:23"><expr pos:start="27:22" pos:end="27:23"><name pos:start="27:22" pos:end="27:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:27" pos:end="27:43">/* header size */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">avio_rb32</name><argument_list pos:start="29:14" pos:end="29:17">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:20" pos:end="29:34">/* data size */</comment>



    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:6">id</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:18">avio_rb32</name><argument_list pos:start="33:19" pos:end="33:22">(<argument pos:start="33:20" pos:end="33:21"><expr pos:start="33:20" pos:end="33:21"><name pos:start="33:20" pos:end="33:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:8">rate</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:24"><name pos:start="35:12" pos:end="35:20">avio_rb32</name><argument_list pos:start="35:21" pos:end="35:24">(<argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:12">channels</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:24">avio_rb32</name><argument_list pos:start="37:25" pos:end="37:28">(<argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:9">codec</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:46"><name pos:start="41:13" pos:end="41:27">ff_codec_get_id</name><argument_list pos:start="41:28" pos:end="41:46">(<argument pos:start="41:29" pos:end="41:41"><expr pos:start="41:29" pos:end="41:41"><name pos:start="41:29" pos:end="41:41">codec_au_tags</name></expr></argument>, <argument pos:start="41:44" pos:end="41:45"><expr pos:start="41:44" pos:end="41:45"><name pos:start="41:44" pos:end="41:45">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:39">(<expr pos:start="45:9" pos:end="45:38"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:38"><name pos:start="45:10" pos:end="45:31">av_get_bits_per_sample</name><argument_list pos:start="45:32" pos:end="45:38">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">codec</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:41" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:36">

        <expr_stmt pos:start="47:9" pos:end="47:74"><expr pos:start="47:9" pos:end="47:73"><call pos:start="47:9" pos:end="47:73"><name pos:start="47:9" pos:end="47:29">av_log_ask_for_sample</name><argument_list pos:start="47:30" pos:end="47:73">(<argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><name pos:start="47:31" pos:end="47:31">s</name></expr></argument>, <argument pos:start="47:34" pos:end="47:72"><expr pos:start="47:34" pos:end="47:72"><literal type="string" pos:start="47:34" pos:end="47:72">"could not determine bits per sample\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:36">return <expr pos:start="49:16" pos:end="49:35"><name pos:start="49:16" pos:end="49:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:39">(<expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:16">channels</name> <operator pos:start="55:18" pos:end="55:19">==</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal> <operator pos:start="55:23" pos:end="55:24">||</operator> <name pos:start="55:26" pos:end="55:33">channels</name> <operator pos:start="55:35" pos:end="55:35">&gt;</operator> <literal type="number" pos:start="55:37" pos:end="55:38">64</literal></expr>)</condition> <block pos:start="55:41" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:35">

        <expr_stmt pos:start="57:9" pos:end="57:77"><expr pos:start="57:9" pos:end="57:76"><call pos:start="57:9" pos:end="57:76"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:76">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">s</name></expr></argument>, <argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:33" pos:end="57:65"><expr pos:start="57:33" pos:end="57:65"><literal type="string" pos:start="57:33" pos:end="57:65">"Invalid number of channels %d\n"</literal></expr></argument>, <argument pos:start="57:68" pos:end="57:75"><expr pos:start="57:68" pos:end="57:75"><name pos:start="57:68" pos:end="57:75">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:35">return <expr pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:19">(<expr pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:12">size</name> <operator pos:start="65:14" pos:end="65:15">&gt;=</operator> <literal type="number" pos:start="65:17" pos:end="65:18">24</literal></expr>)</condition> <block pos:start="65:21" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:33">

        <comment type="block" pos:start="67:9" pos:end="67:30">/* skip unused data */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:33"><expr pos:start="69:9" pos:end="69:32"><call pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:17">avio_skip</name><argument_list pos:start="69:18" pos:end="69:32">(<argument pos:start="69:19" pos:end="69:20"><expr pos:start="69:19" pos:end="69:20"><name pos:start="69:19" pos:end="69:20">pb</name></expr></argument>, <argument pos:start="69:23" pos:end="69:31"><expr pos:start="69:23" pos:end="69:31"><name pos:start="69:23" pos:end="69:26">size</name> <operator pos:start="69:28" pos:end="69:28">-</operator> <literal type="number" pos:start="69:30" pos:end="69:31">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:48">/* now we are ready: build format streams */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:38"><expr pos:start="77:5" pos:end="77:37"><name pos:start="77:5" pos:end="77:6">st</name> <operator pos:start="77:8" pos:end="77:8">=</operator> <call pos:start="77:10" pos:end="77:37"><name pos:start="77:10" pos:end="77:28">avformat_new_stream</name><argument_list pos:start="77:29" pos:end="77:37">(<argument pos:start="77:30" pos:end="77:30"><expr pos:start="77:30" pos:end="77:30"><name pos:start="77:30" pos:end="77:30">s</name></expr></argument>, <argument pos:start="77:33" pos:end="77:36"><expr pos:start="77:33" pos:end="77:36"><name pos:start="77:33" pos:end="77:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:18"><if pos:start="79:5" pos:end="81:18">if <condition pos:start="79:8" pos:end="79:12">(<expr pos:start="79:9" pos:end="79:11"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:11">st</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:18"><block_content pos:start="81:9" pos:end="81:18">

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:6">st</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:25">codec_type</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:6">st</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:24">codec_tag</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:29">id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:32"><expr pos:start="87:5" pos:end="87:31"><name pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:6">st</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:13">codec</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:23">codec_id</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:31">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:6">st</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:13">codec</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:23">channels</name></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:34">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:6">st</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:13">codec</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:26">sample_rate</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:33">rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:41"><expr pos:start="93:5" pos:end="93:40"><call pos:start="93:5" pos:end="93:40"><name pos:start="93:5" pos:end="93:23">avpriv_set_pts_info</name><argument_list pos:start="93:24" pos:end="93:40">(<argument pos:start="93:25" pos:end="93:26"><expr pos:start="93:25" pos:end="93:26"><name pos:start="93:25" pos:end="93:26">st</name></expr></argument>, <argument pos:start="93:29" pos:end="93:30"><expr pos:start="93:29" pos:end="93:30"><literal type="number" pos:start="93:29" pos:end="93:30">64</literal></expr></argument>, <argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">1</literal></expr></argument>, <argument pos:start="93:36" pos:end="93:39"><expr pos:start="93:36" pos:end="93:39"><name pos:start="93:36" pos:end="93:39">rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
