<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10505.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vtd_realize</name><parameter_list pos:start="1:24" pos:end="1:55">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">DeviceState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:47">Error</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier><modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:74">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PCMachineState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">pcms</name> <init pos:start="5:26" pos:end="5:57">= <expr pos:start="5:28" pos:end="5:57"><call pos:start="5:28" pos:end="5:57"><name pos:start="5:28" pos:end="5:37">PC_MACHINE</name><argument_list pos:start="5:38" pos:end="5:57">(<argument pos:start="5:39" pos:end="5:56"><expr pos:start="5:39" pos:end="5:56"><call pos:start="5:39" pos:end="5:56"><name pos:start="5:39" pos:end="5:54">qdev_get_machine</name><argument_list pos:start="5:55" pos:end="5:56">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">PCIBus</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">bus</name> <init pos:start="7:17" pos:end="7:27">= <expr pos:start="7:19" pos:end="7:27"><name pos:start="7:19" pos:end="7:27"><name pos:start="7:19" pos:end="7:22">pcms</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">IntelIOMMUState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:22">s</name> <init pos:start="9:24" pos:end="9:48">= <expr pos:start="9:26" pos:end="9:48"><call pos:start="9:26" pos:end="9:48"><name pos:start="9:26" pos:end="9:43">INTEL_IOMMU_DEVICE</name><argument_list pos:start="9:44" pos:end="9:48">(<argument pos:start="9:45" pos:end="9:47"><expr pos:start="9:45" pos:end="9:47"><name pos:start="9:45" pos:end="9:47">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">X86IOMMUState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:28">x86_iommu</name> <init pos:start="11:30" pos:end="11:52">= <expr pos:start="11:32" pos:end="11:52"><call pos:start="11:32" pos:end="11:52"><name pos:start="11:32" pos:end="11:47">X86_IOMMU_DEVICE</name><argument_list pos:start="11:48" pos:end="11:52">(<argument pos:start="11:49" pos:end="11:51"><expr pos:start="11:49" pos:end="11:51"><name pos:start="11:49" pos:end="11:51">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:15">VTD_DPRINTF</name><argument_list pos:start="15:16" pos:end="15:28">(<argument pos:start="15:17" pos:end="15:23"><expr pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:23">GENERAL</name></expr></argument>, <argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><literal type="string" pos:start="15:26" pos:end="15:27">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:13">x86_iommu</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:19">type</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:32">TYPE_INTEL</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:35"><name pos:start="21:10" pos:end="21:26">vtd_decide_config</name><argument_list pos:start="21:27" pos:end="21:35">(<argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><name pos:start="21:28" pos:end="21:28">s</name></expr></argument>, <argument pos:start="21:31" pos:end="21:34"><expr pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:34">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:38" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:14">QLIST_INIT</name><argument_list pos:start="29:15" pos:end="29:34">(<argument pos:start="29:16" pos:end="29:33"><expr pos:start="29:16" pos:end="29:33"><operator pos:start="29:16" pos:end="29:16">&amp;</operator><name pos:start="29:17" pos:end="29:33"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:33">notifiers_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:66"><expr pos:start="31:5" pos:end="31:65"><call pos:start="31:5" pos:end="31:65"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:65">(<argument pos:start="31:12" pos:end="31:31"><expr pos:start="31:12" pos:end="31:31"><name pos:start="31:12" pos:end="31:31"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:31">vtd_as_by_bus_num</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr></argument>, <argument pos:start="31:37" pos:end="31:64"><expr pos:start="31:37" pos:end="31:64"><sizeof pos:start="31:37" pos:end="31:64">sizeof<argument_list pos:start="31:43" pos:end="31:64">(<argument pos:start="31:44" pos:end="31:63"><expr pos:start="31:44" pos:end="31:63"><name pos:start="31:44" pos:end="31:63"><name pos:start="31:44" pos:end="31:44">s</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:63">vtd_as_by_bus_num</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:56"><expr pos:start="33:5" pos:end="35:55"><call pos:start="33:5" pos:end="35:55"><name pos:start="33:5" pos:end="33:25">memory_region_init_io</name><argument_list pos:start="33:26" pos:end="35:55">(<argument pos:start="33:27" pos:end="33:36"><expr pos:start="33:27" pos:end="33:36"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:36"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:36">csrmem</name></name></expr></argument>, <argument pos:start="33:39" pos:end="33:47"><expr pos:start="33:39" pos:end="33:47"><call pos:start="33:39" pos:end="33:47"><name pos:start="33:39" pos:end="33:44">OBJECT</name><argument_list pos:start="33:45" pos:end="33:47">(<argument pos:start="33:46" pos:end="33:46"><expr pos:start="33:46" pos:end="33:46"><name pos:start="33:46" pos:end="33:46">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:50" pos:end="33:61"><expr pos:start="33:50" pos:end="33:61"><operator pos:start="33:50" pos:end="33:50">&amp;</operator><name pos:start="33:51" pos:end="33:61">vtd_mem_ops</name></expr></argument>, <argument pos:start="33:64" pos:end="33:64"><expr pos:start="33:64" pos:end="33:64"><name pos:start="33:64" pos:end="33:64">s</name></expr></argument>,

                          <argument pos:start="35:27" pos:end="35:39"><expr pos:start="35:27" pos:end="35:39"><literal type="string" pos:start="35:27" pos:end="35:39">"intel_iommu"</literal></expr></argument>, <argument pos:start="35:42" pos:end="35:54"><expr pos:start="35:42" pos:end="35:54"><name pos:start="35:42" pos:end="35:54">DMAR_REG_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><call pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:20">sysbus_init_mmio</name><argument_list pos:start="37:21" pos:end="37:51">(<argument pos:start="37:22" pos:end="37:38"><expr pos:start="37:22" pos:end="37:38"><call pos:start="37:22" pos:end="37:38"><name pos:start="37:22" pos:end="37:35">SYS_BUS_DEVICE</name><argument_list pos:start="37:36" pos:end="37:38">(<argument pos:start="37:37" pos:end="37:37"><expr pos:start="37:37" pos:end="37:37"><name pos:start="37:37" pos:end="37:37">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:41" pos:end="37:50"><expr pos:start="37:41" pos:end="37:50"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:50"><name pos:start="37:42" pos:end="37:42">s</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:50">csrmem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:34">/* No corresponding destroy */</comment>

    <expr_stmt pos:start="41:5" pos:end="43:53"><expr pos:start="41:5" pos:end="43:52"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:12">iotlb</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="43:52"><name pos:start="41:16" pos:end="41:36">g_hash_table_new_full</name><argument_list pos:start="41:37" pos:end="43:52">(<argument pos:start="41:38" pos:end="41:52"><expr pos:start="41:38" pos:end="41:52"><name pos:start="41:38" pos:end="41:52">vtd_uint64_hash</name></expr></argument>, <argument pos:start="41:55" pos:end="41:70"><expr pos:start="41:55" pos:end="41:70"><name pos:start="41:55" pos:end="41:70">vtd_uint64_equal</name></expr></argument>,

                                     <argument pos:start="43:38" pos:end="43:43"><expr pos:start="43:38" pos:end="43:43"><name pos:start="43:38" pos:end="43:43">g_free</name></expr></argument>, <argument pos:start="43:46" pos:end="43:51"><expr pos:start="43:46" pos:end="43:51"><name pos:start="43:46" pos:end="43:51">g_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:62"><expr pos:start="45:5" pos:end="47:61"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:23">vtd_as_by_busptr</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="47:61"><name pos:start="45:27" pos:end="45:47">g_hash_table_new_full</name><argument_list pos:start="45:48" pos:end="47:61">(<argument pos:start="45:49" pos:end="45:63"><expr pos:start="45:49" pos:end="45:63"><name pos:start="45:49" pos:end="45:63">vtd_uint64_hash</name></expr></argument>, <argument pos:start="45:66" pos:end="45:81"><expr pos:start="45:66" pos:end="45:81"><name pos:start="45:66" pos:end="45:81">vtd_uint64_equal</name></expr></argument>,

                                              <argument pos:start="47:47" pos:end="47:52"><expr pos:start="47:47" pos:end="47:52"><name pos:start="47:47" pos:end="47:52">g_free</name></expr></argument>, <argument pos:start="47:55" pos:end="47:60"><expr pos:start="47:55" pos:end="47:60"><name pos:start="47:55" pos:end="47:60">g_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:16"><expr pos:start="49:5" pos:end="49:15"><call pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:12">vtd_init</name><argument_list pos:start="49:13" pos:end="49:15">(<argument pos:start="49:14" pos:end="49:14"><expr pos:start="49:14" pos:end="49:14"><name pos:start="49:14" pos:end="49:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:70"><expr pos:start="51:5" pos:end="51:69"><call pos:start="51:5" pos:end="51:69"><name pos:start="51:5" pos:end="51:19">sysbus_mmio_map</name><argument_list pos:start="51:20" pos:end="51:69">(<argument pos:start="51:21" pos:end="51:37"><expr pos:start="51:21" pos:end="51:37"><call pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:34">SYS_BUS_DEVICE</name><argument_list pos:start="51:35" pos:end="51:37">(<argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><name pos:start="51:36" pos:end="51:36">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:40" pos:end="51:40"><expr pos:start="51:40" pos:end="51:40"><literal type="number" pos:start="51:40" pos:end="51:40">0</literal></expr></argument>, <argument pos:start="51:43" pos:end="51:68"><expr pos:start="51:43" pos:end="51:68"><name pos:start="51:43" pos:end="51:68">Q35_HOST_BRIDGE_IOMMU_ADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><call pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:19">pci_setup_iommu</name><argument_list pos:start="53:20" pos:end="53:49">(<argument pos:start="53:21" pos:end="53:23"><expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">bus</name></expr></argument>, <argument pos:start="53:26" pos:end="53:43"><expr pos:start="53:26" pos:end="53:43"><name pos:start="53:26" pos:end="53:43">vtd_host_dma_iommu</name></expr></argument>, <argument pos:start="53:46" pos:end="53:48"><expr pos:start="53:46" pos:end="53:48"><name pos:start="53:46" pos:end="53:48">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:50">/* Pseudo address space under root PCI bus. */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:74"><expr pos:start="57:5" pos:end="57:73"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:8">pcms</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:19">ioapic_as</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:73"><name pos:start="57:23" pos:end="57:40">vtd_host_dma_iommu</name><argument_list pos:start="57:41" pos:end="57:73">(<argument pos:start="57:42" pos:end="57:44"><expr pos:start="57:42" pos:end="57:44"><name pos:start="57:42" pos:end="57:44">bus</name></expr></argument>, <argument pos:start="57:47" pos:end="57:47"><expr pos:start="57:47" pos:end="57:47"><name pos:start="57:47" pos:end="57:47">s</name></expr></argument>, <argument pos:start="57:50" pos:end="57:72"><expr pos:start="57:50" pos:end="57:72"><name pos:start="57:50" pos:end="57:72">Q35_PSEUDO_DEVFN_IOAPIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
