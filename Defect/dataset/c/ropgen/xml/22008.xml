<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22008.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">rd_strip</name><parameter_list pos:start="1:20" pos:end="1:174">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:37">CinepakEncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:47"><decl pos:start="1:43" pos:end="1:47"><type pos:start="1:43" pos:end="1:47"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:47">y</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:54"><decl pos:start="1:50" pos:end="1:54"><type pos:start="1:50" pos:end="1:54"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:54">h</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">keyframe</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:90"><decl pos:start="1:71" pos:end="1:90"><type pos:start="1:71" pos:end="1:90"><name pos:start="1:71" pos:end="1:79">AVPicture</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:90">last_pict</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:107"><decl pos:start="1:93" pos:end="1:107"><type pos:start="1:93" pos:end="1:107"><name pos:start="1:93" pos:end="1:101">AVPicture</name> <modifier pos:start="1:103" pos:end="1:103">*</modifier></type><name pos:start="1:104" pos:end="1:107">pict</name></decl></parameter>, <parameter pos:start="1:110" pos:end="1:132"><decl pos:start="1:110" pos:end="1:132"><type pos:start="1:110" pos:end="1:132"><name pos:start="1:110" pos:end="1:118">AVPicture</name> <modifier pos:start="1:120" pos:end="1:120">*</modifier></type><name pos:start="1:121" pos:end="1:132">scratch_pict</name></decl></parameter>, <parameter pos:start="1:135" pos:end="1:152"><decl pos:start="1:135" pos:end="1:152"><type pos:start="1:135" pos:end="1:152"><name pos:start="1:135" pos:end="1:142">unsigned</name> <name pos:start="1:144" pos:end="1:147">char</name> <modifier pos:start="1:149" pos:end="1:149">*</modifier></type><name pos:start="1:150" pos:end="1:152">buf</name></decl></parameter>, <parameter pos:start="1:155" pos:end="1:173"><decl pos:start="1:155" pos:end="1:173"><type pos:start="1:155" pos:end="1:173"><name pos:start="1:155" pos:end="1:161">int64_t</name> <modifier pos:start="1:163" pos:end="1:163">*</modifier></type><name pos:start="1:164" pos:end="1:173">best_score</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:21">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">score</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">best_size</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>, <decl pos:start="7:24" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:30">v1_size</name></decl>, <decl pos:start="7:33" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:33" pos:end="7:39">v4_size</name></decl>, <decl pos:start="7:42" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:42" pos:end="7:43">v4</name></decl>, <decl pos:start="7:46" pos:end="7:74"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:46" pos:end="7:53">mb_count</name> <init pos:start="7:55" pos:end="7:74">= <expr pos:start="7:57" pos:end="7:74"><name pos:start="7:57" pos:end="7:60"><name pos:start="7:57" pos:end="7:57">s</name><operator pos:start="7:58" pos:end="7:59">-&gt;</operator><name pos:start="7:60" pos:end="7:60">w</name></name> <operator pos:start="7:62" pos:end="7:62">*</operator> <name pos:start="7:64" pos:end="7:64">h</name> <operator pos:start="7:66" pos:end="7:66">/</operator> <name pos:start="7:68" pos:end="7:74">MB_AREA</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">strip_info</name></type> <name pos:start="9:16" pos:end="9:19">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">CinepakMode</name></type> <name pos:start="11:17" pos:end="11:25">best_mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:60"><decl pos:start="13:5" pos:end="13:59"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:59"><name pos:start="13:9" pos:end="13:20">v4_codebooks</name><index pos:start="13:21" pos:end="13:34">[<expr pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:33">CODEBOOK_NUM</name></expr>]</index><index pos:start="13:35" pos:end="13:59">[<expr pos:start="13:36" pos:end="13:58"><name pos:start="13:36" pos:end="13:47">CODEBOOK_MAX</name><operator pos:start="13:48" pos:end="13:48">*</operator><name pos:start="13:49" pos:end="13:58">VECTOR_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:60"><if pos:start="17:5" pos:end="19:60">if<condition pos:start="17:7" pos:end="17:17">(<expr pos:start="17:8" pos:end="17:16"><operator pos:start="17:8" pos:end="17:8">!</operator><name pos:start="17:9" pos:end="17:16">keyframe</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:60"><block_content pos:start="19:9" pos:end="19:60">

        <expr_stmt pos:start="19:9" pos:end="19:60"><expr pos:start="19:9" pos:end="19:59"><call pos:start="19:9" pos:end="19:59"><name pos:start="19:9" pos:end="19:29">calculate_skip_errors</name><argument_list pos:start="19:30" pos:end="19:59">(<argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">s</name></expr></argument>, <argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">h</name></expr></argument>, <argument pos:start="19:37" pos:end="19:45"><expr pos:start="19:37" pos:end="19:45"><name pos:start="19:37" pos:end="19:45">last_pict</name></expr></argument>, <argument pos:start="19:48" pos:end="19:51"><expr pos:start="19:48" pos:end="19:51"><name pos:start="19:48" pos:end="19:51">pict</name></expr></argument>, <argument pos:start="19:54" pos:end="19:58"><expr pos:start="19:54" pos:end="19:58"><operator pos:start="19:54" pos:end="19:54">&amp;</operator><name pos:start="19:55" pos:end="19:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="23:5" pos:end="23:29">//precompute V4 codebooks</comment>

    <for pos:start="25:5" pos:end="31:5">for<control pos:start="25:8" pos:end="25:65">(<init pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:15">v4_size</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">1</literal></expr><operator pos:start="25:20" pos:end="25:20">,</operator> <expr pos:start="25:22" pos:end="25:27"><name pos:start="25:22" pos:end="25:23">v4</name> <operator pos:start="25:25" pos:end="25:25">=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>;</init> <condition pos:start="25:30" pos:end="25:44"><expr pos:start="25:30" pos:end="25:43"><name pos:start="25:30" pos:end="25:36">v4_size</name> <operator pos:start="25:38" pos:end="25:39">&lt;=</operator> <literal type="number" pos:start="25:41" pos:end="25:43">256</literal></expr>;</condition> <incr pos:start="25:46" pos:end="25:64"><expr pos:start="25:46" pos:end="25:58"><name pos:start="25:46" pos:end="25:52">v4_size</name> <operator pos:start="25:54" pos:end="25:56">&lt;&lt;=</operator> <literal type="number" pos:start="25:58" pos:end="25:58">2</literal></expr><operator pos:start="25:59" pos:end="25:59">,</operator> <expr pos:start="25:61" pos:end="25:64"><name pos:start="25:61" pos:end="25:62">v4</name><operator pos:start="25:63" pos:end="25:64">++</operator></expr></incr>)</control> <block pos:start="25:67" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:52">

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:12">info</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:24">v4_codebook</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:43"><name pos:start="27:28" pos:end="27:39">v4_codebooks</name><index pos:start="27:40" pos:end="27:43">[<expr pos:start="27:41" pos:end="27:42"><name pos:start="27:41" pos:end="27:42">v4</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:52"><expr pos:start="29:9" pos:end="29:51"><call pos:start="29:9" pos:end="29:51"><name pos:start="29:9" pos:end="29:16">quantize</name><argument_list pos:start="29:17" pos:end="29:51">(<argument pos:start="29:18" pos:end="29:18"><expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">s</name></expr></argument>, <argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><name pos:start="29:21" pos:end="29:21">h</name></expr></argument>, <argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">pict</name></expr></argument>, <argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><name pos:start="29:33" pos:end="29:39">v4_size</name></expr></argument>, <argument pos:start="29:42" pos:end="29:43"><expr pos:start="29:42" pos:end="29:43"><name pos:start="29:42" pos:end="29:43">v4</name></expr></argument>, <argument pos:start="29:46" pos:end="29:50"><expr pos:start="29:46" pos:end="29:50"><operator pos:start="29:46" pos:end="29:46">&amp;</operator><name pos:start="29:47" pos:end="29:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="35:5" pos:end="35:55">//try all powers of 4 for the size of the codebooks</comment>

    <comment type="line" pos:start="37:5" pos:end="37:69">//constraint the v4 codebook to be no bigger than the v1 codebook</comment>

    <for pos:start="39:5" pos:end="118:0">for<control pos:start="39:8" pos:end="39:51">(<init pos:start="39:9" pos:end="39:20"><expr pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:15">v1_size</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">1</literal></expr>;</init> <condition pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:35"><name pos:start="39:22" pos:end="39:28">v1_size</name> <operator pos:start="39:30" pos:end="39:31">&lt;=</operator> <literal type="number" pos:start="39:33" pos:end="39:35">256</literal></expr>;</condition> <incr pos:start="39:38" pos:end="39:50"><expr pos:start="39:38" pos:end="39:50"><name pos:start="39:38" pos:end="39:44">v1_size</name> <operator pos:start="39:46" pos:end="39:48">&lt;&lt;=</operator> <literal type="number" pos:start="39:50" pos:end="39:50">2</literal></expr></incr>)</control> <block pos:start="39:53" pos:end="118:0">{<block_content pos:start="43:9" pos:end="111:9">

        <comment type="line" pos:start="41:9" pos:end="41:29">//compute V1 codebook</comment>

        <expr_stmt pos:start="43:9" pos:end="43:52"><expr pos:start="43:9" pos:end="43:51"><call pos:start="43:9" pos:end="43:51"><name pos:start="43:9" pos:end="43:16">quantize</name><argument_list pos:start="43:17" pos:end="43:51">(<argument pos:start="43:18" pos:end="43:18"><expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">s</name></expr></argument>, <argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">h</name></expr></argument>, <argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><name pos:start="43:24" pos:end="43:27">pict</name></expr></argument>, <argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><literal type="number" pos:start="43:30" pos:end="43:30">1</literal></expr></argument>, <argument pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:39">v1_size</name></expr></argument>, <argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><operator pos:start="43:42" pos:end="43:42">-</operator><literal type="number" pos:start="43:43" pos:end="43:43">1</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:50"><expr pos:start="43:46" pos:end="43:50"><operator pos:start="43:46" pos:end="43:46">&amp;</operator><name pos:start="43:47" pos:end="43:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="47:9" pos:end="111:9">for<control pos:start="47:12" pos:end="47:127">(<init pos:start="47:13" pos:end="47:33"><expr pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:19">v4_size</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr><operator pos:start="47:24" pos:end="47:24">,</operator> <expr pos:start="47:26" pos:end="47:32"><name pos:start="47:26" pos:end="47:27">v4</name> <operator pos:start="47:29" pos:end="47:29">=</operator> <operator pos:start="47:31" pos:end="47:31">-</operator><literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr>;</init> <condition pos:start="47:35" pos:end="47:53"><expr pos:start="47:35" pos:end="47:52"><name pos:start="47:35" pos:end="47:41">v4_size</name> <operator pos:start="47:43" pos:end="47:44">&lt;=</operator> <name pos:start="47:46" pos:end="47:52">v1_size</name></expr>;</condition> <incr pos:start="47:55" pos:end="47:126"><expr pos:start="47:55" pos:end="47:120"><name pos:start="47:55" pos:end="47:61">v4_size</name> <operator pos:start="47:63" pos:end="47:63">=</operator> <ternary pos:start="47:65" pos:end="47:120"><condition pos:start="47:65" pos:end="47:73"><expr pos:start="47:65" pos:end="47:71"><name pos:start="47:65" pos:end="47:71">v4_size</name></expr> ?</condition><then pos:start="47:75" pos:end="47:86"> <expr pos:start="47:75" pos:end="47:86"><name pos:start="47:75" pos:end="47:81">v4_size</name> <operator pos:start="47:83" pos:end="47:84">&lt;&lt;</operator> <literal type="number" pos:start="47:86" pos:end="47:86">2</literal></expr> </then><else pos:start="47:88" pos:end="47:120">: <expr pos:start="47:90" pos:end="47:120"><ternary pos:start="47:90" pos:end="47:120"><condition pos:start="47:90" pos:end="47:103"><expr pos:start="47:90" pos:end="47:101"><name pos:start="47:90" pos:end="47:96">v1_size</name> <operator pos:start="47:98" pos:end="47:99">&gt;=</operator> <literal type="number" pos:start="47:101" pos:end="47:101">4</literal></expr> ?</condition><then pos:start="47:105" pos:end="47:116"> <expr pos:start="47:105" pos:end="47:116"><name pos:start="47:105" pos:end="47:111">v1_size</name> <operator pos:start="47:113" pos:end="47:114">&gt;&gt;</operator> <literal type="number" pos:start="47:116" pos:end="47:116">2</literal></expr> </then><else pos:start="47:118" pos:end="47:120">: <expr pos:start="47:120" pos:end="47:120"><literal type="number" pos:start="47:120" pos:end="47:120">1</literal></expr></else></ternary></expr></else></ternary></expr><operator pos:start="47:121" pos:end="47:121">,</operator> <expr pos:start="47:123" pos:end="47:126"><name pos:start="47:123" pos:end="47:124">v4</name><operator pos:start="47:125" pos:end="47:126">++</operator></expr></incr>)</control> <block pos:start="47:129" pos:end="111:9">{<block_content pos:start="51:13" pos:end="109:13">

            <comment type="line" pos:start="49:13" pos:end="49:27">//try all modes</comment>

            <for pos:start="51:13" pos:end="109:13">for<control pos:start="51:16" pos:end="51:64">(<init pos:start="51:17" pos:end="51:37"><decl pos:start="51:17" pos:end="51:36"><type pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:27">CinepakMode</name></type> <name pos:start="51:29" pos:end="51:32">mode</name> <init pos:start="51:34" pos:end="51:36">= <expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">0</literal></expr></init></decl>;</init> <condition pos:start="51:39" pos:end="51:56"><expr pos:start="51:39" pos:end="51:55"><name pos:start="51:39" pos:end="51:42">mode</name> <operator pos:start="51:44" pos:end="51:44">&lt;</operator> <name pos:start="51:46" pos:end="51:55">MODE_COUNT</name></expr>;</condition> <incr pos:start="51:58" pos:end="51:63"><expr pos:start="51:58" pos:end="51:63"><name pos:start="51:58" pos:end="51:61">mode</name><operator pos:start="51:62" pos:end="51:63">++</operator></expr></incr>)</control> <block pos:start="51:66" pos:end="109:13">{<block_content pos:start="55:17" pos:end="107:17">

                <comment type="line" pos:start="53:17" pos:end="53:53">//don't allow MODE_MC in inter frames</comment>

                <if_stmt pos:start="55:17" pos:end="57:29"><if pos:start="55:17" pos:end="57:29">if<condition pos:start="55:19" pos:end="55:47">(<expr pos:start="55:20" pos:end="55:46"><name pos:start="55:20" pos:end="55:27">keyframe</name> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator> <name pos:start="55:32" pos:end="55:35">mode</name> <operator pos:start="55:37" pos:end="55:38">==</operator> <name pos:start="55:40" pos:end="55:46">MODE_MC</name></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:29"><block_content pos:start="57:21" pos:end="57:29">

                    <continue pos:start="57:21" pos:end="57:29">continue;</continue></block_content></block></if></if_stmt>



                <comment type="line" pos:start="61:17" pos:end="61:65">//only allow V1-only mode if v4 codebook is empty</comment>

                <if_stmt pos:start="63:17" pos:end="65:29"><if pos:start="63:17" pos:end="65:29">if<condition pos:start="63:19" pos:end="63:52">(<expr pos:start="63:20" pos:end="63:51"><operator pos:start="63:20" pos:end="63:20">!</operator><name pos:start="63:21" pos:end="63:27">v4_size</name> <operator pos:start="63:29" pos:end="63:30">&amp;&amp;</operator> <name pos:start="63:32" pos:end="63:35">mode</name> <operator pos:start="63:37" pos:end="63:38">!=</operator> <name pos:start="63:40" pos:end="63:51">MODE_V1_ONLY</name></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:29"><block_content pos:start="65:21" pos:end="65:29">

                    <continue pos:start="65:21" pos:end="65:29">continue;</continue></block_content></block></if></if_stmt>



                <expr_stmt pos:start="69:17" pos:end="69:69"><expr pos:start="69:17" pos:end="69:68"><name pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:20">info</name><operator pos:start="69:21" pos:end="69:21">.</operator><name pos:start="69:22" pos:end="69:32">v4_codebook</name></name> <operator pos:start="69:34" pos:end="69:34">=</operator> <ternary pos:start="69:36" pos:end="69:68"><condition pos:start="69:36" pos:end="69:44"><expr pos:start="69:36" pos:end="69:42"><name pos:start="69:36" pos:end="69:37">v4</name> <operator pos:start="69:39" pos:end="69:40">&gt;=</operator> <literal type="number" pos:start="69:42" pos:end="69:42">0</literal></expr> ?</condition><then pos:start="69:46" pos:end="69:61"> <expr pos:start="69:46" pos:end="69:61"><name pos:start="69:46" pos:end="69:61"><name pos:start="69:46" pos:end="69:57">v4_codebooks</name><index pos:start="69:58" pos:end="69:61">[<expr pos:start="69:59" pos:end="69:60"><name pos:start="69:59" pos:end="69:60">v4</name></expr>]</index></name></expr> </then><else pos:start="69:63" pos:end="69:68">: <expr pos:start="69:65" pos:end="69:68"><name pos:start="69:65" pos:end="69:68">NULL</name></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:86"><expr pos:start="71:17" pos:end="71:85"><name pos:start="71:17" pos:end="71:21">score</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:85"><name pos:start="71:25" pos:end="71:44">calculate_mode_score</name><argument_list pos:start="71:45" pos:end="71:85">(<argument pos:start="71:46" pos:end="71:46"><expr pos:start="71:46" pos:end="71:46"><name pos:start="71:46" pos:end="71:46">s</name></expr></argument>, <argument pos:start="71:49" pos:end="71:52"><expr pos:start="71:49" pos:end="71:52"><name pos:start="71:49" pos:end="71:52">mode</name></expr></argument>, <argument pos:start="71:55" pos:end="71:55"><expr pos:start="71:55" pos:end="71:55"><name pos:start="71:55" pos:end="71:55">h</name></expr></argument>, <argument pos:start="71:58" pos:end="71:64"><expr pos:start="71:58" pos:end="71:64"><name pos:start="71:58" pos:end="71:64">v1_size</name></expr></argument>, <argument pos:start="71:67" pos:end="71:73"><expr pos:start="71:67" pos:end="71:73"><name pos:start="71:67" pos:end="71:73">v4_size</name></expr></argument>, <argument pos:start="71:76" pos:end="71:77"><expr pos:start="71:76" pos:end="71:77"><name pos:start="71:76" pos:end="71:77">v4</name></expr></argument>, <argument pos:start="71:80" pos:end="71:84"><expr pos:start="71:80" pos:end="71:84"><operator pos:start="71:80" pos:end="71:80">&amp;</operator><name pos:start="71:81" pos:end="71:84">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="line" pos:start="75:17" pos:end="75:98">//av_log(s-&gt;avctx, AV_LOG_INFO, "%3i %3i score = %li\n", v1_size, v4_size, score);</comment>



                <if_stmt pos:start="79:17" pos:end="107:17"><if pos:start="79:17" pos:end="107:17">if<condition pos:start="79:19" pos:end="79:57">(<expr pos:start="79:20" pos:end="79:56"><name pos:start="79:20" pos:end="79:28">best_size</name> <operator pos:start="79:30" pos:end="79:31">==</operator> <literal type="number" pos:start="79:33" pos:end="79:33">0</literal> <operator pos:start="79:35" pos:end="79:36">||</operator> <name pos:start="79:38" pos:end="79:42">score</name> <operator pos:start="79:44" pos:end="79:44">&lt;</operator> <operator pos:start="79:46" pos:end="79:46">*</operator><name pos:start="79:47" pos:end="79:56">best_score</name></expr>)</condition> <block pos:start="79:59" pos:end="107:17">{<block_content pos:start="81:21" pos:end="105:83">

                    <expr_stmt pos:start="81:21" pos:end="81:40"><expr pos:start="81:21" pos:end="81:39"><operator pos:start="81:21" pos:end="81:21">*</operator><name pos:start="81:22" pos:end="81:31">best_score</name> <operator pos:start="81:33" pos:end="81:33">=</operator> <name pos:start="81:35" pos:end="81:39">score</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:133"><expr pos:start="83:21" pos:end="83:132"><name pos:start="83:21" pos:end="83:29">best_size</name> <operator pos:start="83:31" pos:end="83:31">=</operator> <call pos:start="83:33" pos:end="83:132"><name pos:start="83:33" pos:end="83:43">encode_mode</name><argument_list pos:start="83:44" pos:end="83:132">(<argument pos:start="83:45" pos:end="83:45"><expr pos:start="83:45" pos:end="83:45"><name pos:start="83:45" pos:end="83:45">s</name></expr></argument>, <argument pos:start="83:48" pos:end="83:51"><expr pos:start="83:48" pos:end="83:51"><name pos:start="83:48" pos:end="83:51">mode</name></expr></argument>, <argument pos:start="83:54" pos:end="83:54"><expr pos:start="83:54" pos:end="83:54"><name pos:start="83:54" pos:end="83:54">h</name></expr></argument>, <argument pos:start="83:57" pos:end="83:63"><expr pos:start="83:57" pos:end="83:63"><name pos:start="83:57" pos:end="83:63">v1_size</name></expr></argument>, <argument pos:start="83:66" pos:end="83:72"><expr pos:start="83:66" pos:end="83:72"><name pos:start="83:66" pos:end="83:72">v4_size</name></expr></argument>, <argument pos:start="83:75" pos:end="83:76"><expr pos:start="83:75" pos:end="83:76"><name pos:start="83:75" pos:end="83:76">v4</name></expr></argument>, <argument pos:start="83:79" pos:end="83:90"><expr pos:start="83:79" pos:end="83:90"><name pos:start="83:79" pos:end="83:90">scratch_pict</name></expr></argument>, <argument pos:start="83:93" pos:end="83:97"><expr pos:start="83:93" pos:end="83:97"><operator pos:start="83:93" pos:end="83:93">&amp;</operator><name pos:start="83:94" pos:end="83:97">info</name></expr></argument>, <argument pos:start="83:100" pos:end="83:131"><expr pos:start="83:100" pos:end="83:131"><name pos:start="83:100" pos:end="83:111"><name pos:start="83:100" pos:end="83:100">s</name><operator pos:start="83:101" pos:end="83:102">-&gt;</operator><name pos:start="83:103" pos:end="83:111">strip_buf</name></name> <operator pos:start="83:113" pos:end="83:113">+</operator> <name pos:start="83:115" pos:end="83:131">STRIP_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:37"><expr pos:start="85:21" pos:end="85:36"><name pos:start="85:21" pos:end="85:29">best_mode</name> <operator pos:start="85:31" pos:end="85:31">=</operator> <name pos:start="85:33" pos:end="85:36">mode</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="89:21" pos:end="94:0"><expr pos:start="89:21" pos:end="89:126"><call pos:start="89:21" pos:end="89:126"><name pos:start="89:21" pos:end="89:26">av_log</name><argument_list pos:start="89:27" pos:end="89:126">(<argument pos:start="89:28" pos:end="89:35"><expr pos:start="89:28" pos:end="89:35"><name pos:start="89:28" pos:end="89:35"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:35">avctx</name></name></expr></argument>, <argument pos:start="89:38" pos:end="89:48"><expr pos:start="89:38" pos:end="89:48"><name pos:start="89:38" pos:end="89:48">AV_LOG_INFO</name></expr></argument>, <argument pos:start="89:51" pos:end="89:83"><expr pos:start="89:51" pos:end="89:83"><literal type="string" pos:start="89:51" pos:end="89:83">"mode %i, %3i, %3i: %18li %i B\n"</literal></expr></argument>, <argument pos:start="89:86" pos:end="89:89"><expr pos:start="89:86" pos:end="89:89"><name pos:start="89:86" pos:end="89:89">mode</name></expr></argument>, <argument pos:start="89:92" pos:end="89:98"><expr pos:start="89:92" pos:end="89:98"><name pos:start="89:92" pos:end="89:98">v1_size</name></expr></argument>, <argument pos:start="89:101" pos:end="89:107"><expr pos:start="89:101" pos:end="89:107"><name pos:start="89:101" pos:end="89:107">v4_size</name></expr></argument>, <argument pos:start="89:110" pos:end="89:114"><expr pos:start="89:110" pos:end="89:114"><name pos:start="89:110" pos:end="89:114">score</name></expr></argument>, <argument pos:start="89:117" pos:end="89:125"><expr pos:start="89:117" pos:end="89:125"><name pos:start="89:117" pos:end="89:125">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="93:1" pos:end="93:23">#<cpp:directive pos:start="93:2" pos:end="93:6">ifdef</cpp:directive> <name pos:start="93:8" pos:end="93:23">CINEPAKENC_DEBUG</name></cpp:ifdef>

                    <comment type="line" pos:start="95:21" pos:end="95:46">//save MB encoding choices</comment>

                    <expr_stmt pos:start="97:21" pos:end="100:0"><expr pos:start="97:21" pos:end="97:71"><call pos:start="97:21" pos:end="97:71"><name pos:start="97:21" pos:end="97:26">memcpy</name><argument_list pos:start="97:27" pos:end="97:71">(<argument pos:start="97:28" pos:end="97:37"><expr pos:start="97:28" pos:end="97:37"><name pos:start="97:28" pos:end="97:37"><name pos:start="97:28" pos:end="97:28">s</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:37">best_mb</name></name></expr></argument>, <argument pos:start="97:40" pos:end="97:44"><expr pos:start="97:40" pos:end="97:44"><name pos:start="97:40" pos:end="97:44"><name pos:start="97:40" pos:end="97:40">s</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:44">mb</name></name></expr></argument>, <argument pos:start="97:47" pos:end="97:70"><expr pos:start="97:47" pos:end="97:70"><name pos:start="97:47" pos:end="97:54">mb_count</name><operator pos:start="97:55" pos:end="97:55">*</operator><sizeof pos:start="97:56" pos:end="97:70">sizeof<argument_list pos:start="97:62" pos:end="97:70">(<argument pos:start="97:63" pos:end="97:69"><expr pos:start="97:63" pos:end="97:69"><name pos:start="97:63" pos:end="97:69">mb_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>



                    <comment type="line" pos:start="103:21" pos:end="103:84">//memcpy(strip_temp + STRIP_HEADER_SIZE, strip_temp, best_size);</comment>

                    <expr_stmt pos:start="105:21" pos:end="105:83"><expr pos:start="105:21" pos:end="105:82"><call pos:start="105:21" pos:end="105:82"><name pos:start="105:21" pos:end="105:38">write_strip_header</name><argument_list pos:start="105:39" pos:end="105:82">(<argument pos:start="105:40" pos:end="105:40"><expr pos:start="105:40" pos:end="105:40"><name pos:start="105:40" pos:end="105:40">s</name></expr></argument>, <argument pos:start="105:43" pos:end="105:43"><expr pos:start="105:43" pos:end="105:43"><name pos:start="105:43" pos:end="105:43">y</name></expr></argument>, <argument pos:start="105:46" pos:end="105:46"><expr pos:start="105:46" pos:end="105:46"><name pos:start="105:46" pos:end="105:46">h</name></expr></argument>, <argument pos:start="105:49" pos:end="105:56"><expr pos:start="105:49" pos:end="105:56"><name pos:start="105:49" pos:end="105:56">keyframe</name></expr></argument>, <argument pos:start="105:59" pos:end="105:70"><expr pos:start="105:59" pos:end="105:70"><name pos:start="105:59" pos:end="105:70"><name pos:start="105:59" pos:end="105:59">s</name><operator pos:start="105:60" pos:end="105:61">-&gt;</operator><name pos:start="105:62" pos:end="105:70">strip_buf</name></name></expr></argument>, <argument pos:start="105:73" pos:end="105:81"><expr pos:start="105:73" pos:end="105:81"><name pos:start="105:73" pos:end="105:81">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



<cpp:ifdef pos:start="117:1" pos:end="117:23">#<cpp:directive pos:start="117:2" pos:end="117:6">ifdef</cpp:directive> <name pos:start="117:8" pos:end="117:23">CINEPAKENC_DEBUG</name></cpp:ifdef>

    <comment type="line" pos:start="119:5" pos:end="119:67">//gather stats. this will only work properly of MAX_STRIPS == 1</comment>

    <if_stmt pos:start="121:5" pos:end="158:0"><if pos:start="121:5" pos:end="127:5">if<condition pos:start="121:7" pos:end="121:33">(<expr pos:start="121:8" pos:end="121:32"><name pos:start="121:8" pos:end="121:16">best_mode</name> <operator pos:start="121:18" pos:end="121:19">==</operator> <name pos:start="121:21" pos:end="121:32">MODE_V1_ONLY</name></expr>)</condition> <block pos:start="121:35" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:41">

        <expr_stmt pos:start="123:9" pos:end="123:25"><expr pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:22">num_v1_mode</name></name><operator pos:start="123:23" pos:end="123:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:41"><expr pos:start="125:9" pos:end="125:40"><name pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:22">num_v1_encs</name></name> <operator pos:start="125:24" pos:end="125:25">+=</operator> <name pos:start="125:27" pos:end="125:30"><name pos:start="125:27" pos:end="125:27">s</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:30">w</name></name><operator pos:start="125:31" pos:end="125:31">*</operator><name pos:start="125:32" pos:end="125:32">h</name><operator pos:start="125:33" pos:end="125:33">/</operator><name pos:start="125:34" pos:end="125:40">MB_AREA</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="158:0">else <block pos:start="127:12" pos:end="158:0">{<block_content pos:start="129:9" pos:end="153:31">

        <if_stmt pos:start="129:9" pos:end="135:29"><if pos:start="129:9" pos:end="131:29">if<condition pos:start="129:11" pos:end="129:35">(<expr pos:start="129:12" pos:end="129:34"><name pos:start="129:12" pos:end="129:20">best_mode</name> <operator pos:start="129:22" pos:end="129:23">==</operator> <name pos:start="129:25" pos:end="129:34">MODE_V1_V4</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:29"><block_content pos:start="131:13" pos:end="131:29">

            <expr_stmt pos:start="131:13" pos:end="131:29"><expr pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:26"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:26">num_v4_mode</name></name><operator pos:start="131:27" pos:end="131:28">++</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="133:9" pos:end="135:29">else<block type="pseudo" pos:start="135:13" pos:end="135:29"><block_content pos:start="135:13" pos:end="135:29">

            <expr_stmt pos:start="135:13" pos:end="135:29"><expr pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:26">num_mc_mode</name></name><operator pos:start="135:27" pos:end="135:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <decl_stmt pos:start="139:9" pos:end="139:14"><decl pos:start="139:9" pos:end="139:13"><type pos:start="139:9" pos:end="139:11"><name pos:start="139:9" pos:end="139:11">int</name></type> <name pos:start="139:13" pos:end="139:13">x</name></decl>;</decl_stmt>

        <for pos:start="141:9" pos:end="153:31">for<control pos:start="141:12" pos:end="141:43">(<init pos:start="141:13" pos:end="141:18"><expr pos:start="141:13" pos:end="141:17"><name pos:start="141:13" pos:end="141:13">x</name> <operator pos:start="141:15" pos:end="141:15">=</operator> <literal type="number" pos:start="141:17" pos:end="141:17">0</literal></expr>;</init> <condition pos:start="141:20" pos:end="141:38"><expr pos:start="141:20" pos:end="141:37"><name pos:start="141:20" pos:end="141:20">x</name> <operator pos:start="141:22" pos:end="141:22">&lt;</operator> <name pos:start="141:24" pos:end="141:27"><name pos:start="141:24" pos:end="141:24">s</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:27">w</name></name><operator pos:start="141:28" pos:end="141:28">*</operator><name pos:start="141:29" pos:end="141:29">h</name><operator pos:start="141:30" pos:end="141:30">/</operator><name pos:start="141:31" pos:end="141:37">MB_AREA</name></expr>;</condition> <incr pos:start="141:40" pos:end="141:42"><expr pos:start="141:40" pos:end="141:42"><name pos:start="141:40" pos:end="141:40">x</name><operator pos:start="141:41" pos:end="141:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="143:13" pos:end="153:31"><block_content pos:start="143:13" pos:end="153:31">

            <if_stmt pos:start="143:13" pos:end="153:31"><if pos:start="143:13" pos:end="145:33">if<condition pos:start="143:15" pos:end="143:53">(<expr pos:start="143:16" pos:end="143:52"><name pos:start="143:16" pos:end="143:28"><name pos:start="143:16" pos:end="143:16">s</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:25">best_mb</name><index pos:start="143:26" pos:end="143:28">[<expr pos:start="143:27" pos:end="143:27"><name pos:start="143:27" pos:end="143:27">x</name></expr>]</index></name><operator pos:start="143:29" pos:end="143:29">.</operator><name pos:start="143:30" pos:end="143:42">best_encoding</name> <operator pos:start="143:44" pos:end="143:45">==</operator> <name pos:start="143:47" pos:end="143:52">ENC_V1</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:33"><block_content pos:start="145:17" pos:end="145:33">

                <expr_stmt pos:start="145:17" pos:end="145:33"><expr pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:30"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:30">num_v1_encs</name></name><operator pos:start="145:31" pos:end="145:32">++</operator></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="147:13" pos:end="149:33">else if<condition pos:start="147:20" pos:end="147:58">(<expr pos:start="147:21" pos:end="147:57"><name pos:start="147:21" pos:end="147:33"><name pos:start="147:21" pos:end="147:21">s</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:30">best_mb</name><index pos:start="147:31" pos:end="147:33">[<expr pos:start="147:32" pos:end="147:32"><name pos:start="147:32" pos:end="147:32">x</name></expr>]</index></name><operator pos:start="147:34" pos:end="147:34">.</operator><name pos:start="147:35" pos:end="147:47">best_encoding</name> <operator pos:start="147:49" pos:end="147:50">==</operator> <name pos:start="147:52" pos:end="147:57">ENC_V4</name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:33"><block_content pos:start="149:17" pos:end="149:33">

                <expr_stmt pos:start="149:17" pos:end="149:33"><expr pos:start="149:17" pos:end="149:32"><name pos:start="149:17" pos:end="149:30"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:30">num_v4_encs</name></name><operator pos:start="149:31" pos:end="149:32">++</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="151:13" pos:end="153:31">else<block type="pseudo" pos:start="153:17" pos:end="153:31"><block_content pos:start="153:17" pos:end="153:31">

                <expr_stmt pos:start="153:17" pos:end="153:31"><expr pos:start="153:17" pos:end="153:30"><name pos:start="153:17" pos:end="153:28"><name pos:start="153:17" pos:end="153:17">s</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:28">num_skips</name></name><operator pos:start="153:29" pos:end="153:30">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="157:1" pos:end="157:6">#<cpp:directive pos:start="157:2" pos:end="157:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="161:5" pos:end="161:35"><expr pos:start="161:5" pos:end="161:34"><name pos:start="161:5" pos:end="161:13">best_size</name> <operator pos:start="161:15" pos:end="161:16">+=</operator> <name pos:start="161:18" pos:end="161:34">STRIP_HEADER_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:41"><expr pos:start="163:5" pos:end="163:40"><call pos:start="163:5" pos:end="163:40"><name pos:start="163:5" pos:end="163:10">memcpy</name><argument_list pos:start="163:11" pos:end="163:40">(<argument pos:start="163:12" pos:end="163:14"><expr pos:start="163:12" pos:end="163:14"><name pos:start="163:12" pos:end="163:14">buf</name></expr></argument>, <argument pos:start="163:17" pos:end="163:28"><expr pos:start="163:17" pos:end="163:28"><name pos:start="163:17" pos:end="163:28"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:28">strip_buf</name></name></expr></argument>, <argument pos:start="163:31" pos:end="163:39"><expr pos:start="163:31" pos:end="163:39"><name pos:start="163:31" pos:end="163:39">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <return pos:start="169:5" pos:end="169:21">return <expr pos:start="169:12" pos:end="169:20"><name pos:start="169:12" pos:end="169:20">best_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
