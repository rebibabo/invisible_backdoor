<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19170.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">decode_audio_specific_config</name><parameter_list pos:start="1:40" pos:end="9:59">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:50">AACContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">ac</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:61"><decl pos:start="3:41" pos:end="3:61"><type pos:start="3:41" pos:end="3:61"><name pos:start="3:41" pos:end="3:54">AVCodecContext</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:61">avctx</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:62"><decl pos:start="5:41" pos:end="5:62"><type pos:start="5:41" pos:end="5:62"><name pos:start="5:41" pos:end="5:56">MPEG4AudioConfig</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:62">m4ac</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:59"><decl pos:start="7:41" pos:end="7:59"><type pos:start="7:41" pos:end="7:59"><specifier pos:start="7:41" pos:end="7:45">const</specifier> <name pos:start="7:47" pos:end="7:53">uint8_t</name> <modifier pos:start="7:55" pos:end="7:55">*</modifier></type><name pos:start="7:56" pos:end="7:59">data</name></decl></parameter>, <parameter pos:start="7:62" pos:end="7:73"><decl pos:start="7:62" pos:end="7:73"><type pos:start="7:62" pos:end="7:73"><name pos:start="7:62" pos:end="7:64">int</name></type> <name pos:start="7:66" pos:end="7:73">bit_size</name></decl></parameter>,

                                        <parameter pos:start="9:41" pos:end="9:58"><decl pos:start="9:41" pos:end="9:58"><type pos:start="9:41" pos:end="9:58"><name pos:start="9:41" pos:end="9:43">int</name></type> <name pos:start="9:45" pos:end="9:58">sync_extension</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="103:1">{<block_content pos:start="13:5" pos:end="101:31">

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:65"><expr pos:start="19:5" pos:end="19:64"><call pos:start="19:5" pos:end="19:64"><name pos:start="19:5" pos:end="19:11">av_dlog</name><argument_list pos:start="19:12" pos:end="19:64">(<argument pos:start="19:13" pos:end="19:17"><expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:17">avctx</name></expr></argument>, <argument pos:start="19:20" pos:end="19:40"><expr pos:start="19:20" pos:end="19:40"><literal type="string" pos:start="19:20" pos:end="19:40">"extradata size %d\n"</literal></expr></argument>, <argument pos:start="19:43" pos:end="19:63"><expr pos:start="19:43" pos:end="19:63"><name pos:start="19:43" pos:end="19:63"><name pos:start="19:43" pos:end="19:47">avctx</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:63">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="23:53">for <control pos:start="21:9" pos:end="21:47">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:42"><expr pos:start="21:17" pos:end="21:41"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:41"><name pos:start="21:21" pos:end="21:25">avctx</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:41">extradata_size</name></name></expr>;</condition> <incr pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><name pos:start="21:44" pos:end="21:44">i</name><operator pos:start="21:45" pos:end="21:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="23:53"><block_content pos:start="23:9" pos:end="23:53">

        <expr_stmt pos:start="23:9" pos:end="23:53"><expr pos:start="23:9" pos:end="23:52"><call pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:15">av_dlog</name><argument_list pos:start="23:16" pos:end="23:52">(<argument pos:start="23:17" pos:end="23:21"><expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:21">avctx</name></expr></argument>, <argument pos:start="23:24" pos:end="23:30"><expr pos:start="23:24" pos:end="23:30"><literal type="string" pos:start="23:24" pos:end="23:30">"%02x "</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:51"><expr pos:start="23:33" pos:end="23:51"><name pos:start="23:33" pos:end="23:51"><name pos:start="23:33" pos:end="23:37">avctx</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:48">extradata</name><index pos:start="23:49" pos:end="23:51">[<expr pos:start="23:50" pos:end="23:50"><name pos:start="23:50" pos:end="23:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><call pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:11">av_dlog</name><argument_list pos:start="25:12" pos:end="25:24">(<argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17">avctx</name></expr></argument>, <argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><literal type="string" pos:start="25:20" pos:end="25:23">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:17">init_get_bits</name><argument_list pos:start="29:18" pos:end="29:38">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:21">gb</name></expr></argument>, <argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">data</name></expr></argument>, <argument pos:start="29:30" pos:end="29:37"><expr pos:start="29:30" pos:end="29:37"><name pos:start="29:30" pos:end="29:37">bit_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="37:35"><if pos:start="33:5" pos:end="37:35">if <condition pos:start="33:8" pos:end="35:63">(<expr pos:start="33:9" pos:end="35:62"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="35:57"><name pos:start="33:14" pos:end="33:41">avpriv_mpeg4audio_get_config</name><argument_list pos:start="33:42" pos:end="35:57">(<argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><name pos:start="33:43" pos:end="33:46">m4ac</name></expr></argument>, <argument pos:start="33:49" pos:end="33:52"><expr pos:start="33:49" pos:end="33:52"><name pos:start="33:49" pos:end="33:52">data</name></expr></argument>, <argument pos:start="33:55" pos:end="33:62"><expr pos:start="33:55" pos:end="33:62"><name pos:start="33:55" pos:end="33:62">bit_size</name></expr></argument>,

                                          <argument pos:start="35:43" pos:end="35:56"><expr pos:start="35:43" pos:end="35:56"><name pos:start="35:43" pos:end="35:56">sync_extension</name></expr></argument>)</argument_list></call><operator pos:start="35:58" pos:end="35:58">)</operator> <operator pos:start="35:60" pos:end="35:60">&lt;</operator> <literal type="number" pos:start="35:62" pos:end="35:62">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:34">(<expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:12">m4ac</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:28">sampling_index</name></name> <operator pos:start="39:30" pos:end="39:30">&gt;</operator> <literal type="number" pos:start="39:32" pos:end="39:33">12</literal></expr>)</condition> <block pos:start="39:36" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:35">

        <expr_stmt pos:start="41:9" pos:end="45:37"><expr pos:start="41:9" pos:end="45:36"><call pos:start="41:9" pos:end="45:36"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="45:36">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="43:16" pos:end="43:49"><expr pos:start="43:16" pos:end="43:49"><literal type="string" pos:start="43:16" pos:end="43:49">"invalid sampling rate index %d\n"</literal></expr></argument>,

               <argument pos:start="45:16" pos:end="45:35"><expr pos:start="45:16" pos:end="45:35"><name pos:start="45:16" pos:end="45:35"><name pos:start="45:16" pos:end="45:19">m4ac</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:35">sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:35">return <expr pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><call pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:18">skip_bits_long</name><argument_list pos:start="53:19" pos:end="53:26">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:22">gb</name></expr></argument>, <argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="57:5" pos:end="85:5">switch <condition pos:start="57:12" pos:end="57:30">(<expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:16">m4ac</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:29">object_type</name></name></expr>)</condition> <block pos:start="57:32" pos:end="85:5">{<block_content pos:start="59:5" pos:end="83:31">

    <case pos:start="59:5" pos:end="59:22">case <expr pos:start="59:10" pos:end="59:21"><name pos:start="59:10" pos:end="59:21">AOT_AAC_MAIN</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:20">case <expr pos:start="61:10" pos:end="61:19"><name pos:start="61:10" pos:end="61:19">AOT_AAC_LC</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:21">case <expr pos:start="63:10" pos:end="63:20"><name pos:start="63:10" pos:end="63:20">AOT_AAC_LTP</name></expr>:</case>

        <if_stmt pos:start="65:9" pos:end="69:23"><if pos:start="65:9" pos:end="69:23">if <condition pos:start="65:12" pos:end="67:74">(<expr pos:start="65:13" pos:end="67:73"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:16">ret</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="67:68"><name pos:start="65:20" pos:end="65:44">decode_ga_specific_config</name><argument_list pos:start="65:45" pos:end="67:68">(<argument pos:start="65:46" pos:end="65:47"><expr pos:start="65:46" pos:end="65:47"><name pos:start="65:46" pos:end="65:47">ac</name></expr></argument>, <argument pos:start="65:50" pos:end="65:54"><expr pos:start="65:50" pos:end="65:54"><name pos:start="65:50" pos:end="65:54">avctx</name></expr></argument>, <argument pos:start="65:57" pos:end="65:59"><expr pos:start="65:57" pos:end="65:59"><operator pos:start="65:57" pos:end="65:57">&amp;</operator><name pos:start="65:58" pos:end="65:59">gb</name></expr></argument>,

                                            <argument pos:start="67:45" pos:end="67:48"><expr pos:start="67:45" pos:end="67:48"><name pos:start="67:45" pos:end="67:48">m4ac</name></expr></argument>, <argument pos:start="67:51" pos:end="67:67"><expr pos:start="67:51" pos:end="67:67"><name pos:start="67:51" pos:end="67:67"><name pos:start="67:51" pos:end="67:54">m4ac</name><operator pos:start="67:55" pos:end="67:56">-&gt;</operator><name pos:start="67:57" pos:end="67:67">chan_config</name></name></expr></argument>)</argument_list></call><operator pos:start="67:69" pos:end="67:69">)</operator> <operator pos:start="67:71" pos:end="67:71">&lt;</operator> <literal type="number" pos:start="67:73" pos:end="67:73">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:23"><block_content pos:start="69:13" pos:end="69:23">

            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <default pos:start="73:5" pos:end="73:12">default:</default>

        <expr_stmt pos:start="75:9" pos:end="81:34"><expr pos:start="75:9" pos:end="81:33"><call pos:start="75:9" pos:end="81:33"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="81:33">(<argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">avctx</name></expr></argument>, <argument pos:start="75:23" pos:end="75:34"><expr pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="77:16" pos:end="77:59"><expr pos:start="77:16" pos:end="77:59"><literal type="string" pos:start="77:16" pos:end="77:59">"Audio object type %s%d is not supported.\n"</literal></expr></argument>,

               <argument pos:start="79:16" pos:end="79:43"><expr pos:start="79:16" pos:end="79:43"><ternary pos:start="79:16" pos:end="79:43"><condition pos:start="79:16" pos:end="79:31"><expr pos:start="79:16" pos:end="79:29"><name pos:start="79:16" pos:end="79:24"><name pos:start="79:16" pos:end="79:19">m4ac</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:24">sbr</name></name> <operator pos:start="79:26" pos:end="79:27">==</operator> <literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr> ?</condition><then pos:start="79:33" pos:end="79:38"> <expr pos:start="79:33" pos:end="79:38"><literal type="string" pos:start="79:33" pos:end="79:38">"SBR+"</literal></expr> </then><else pos:start="79:40" pos:end="79:43">: <expr pos:start="79:42" pos:end="79:43"><literal type="string" pos:start="79:42" pos:end="79:43">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="81:16" pos:end="81:32"><expr pos:start="81:16" pos:end="81:32"><name pos:start="81:16" pos:end="81:32"><name pos:start="81:16" pos:end="81:19">m4ac</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:32">object_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:31">return <expr pos:start="83:16" pos:end="83:30"><call pos:start="83:16" pos:end="83:30"><name pos:start="83:16" pos:end="83:22">AVERROR</name><argument_list pos:start="83:23" pos:end="83:30">(<argument pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="89:5" pos:end="97:22"><expr pos:start="89:5" pos:end="97:21"><call pos:start="89:5" pos:end="97:21"><name pos:start="89:5" pos:end="89:11">av_dlog</name><argument_list pos:start="89:12" pos:end="97:21">(<argument pos:start="89:13" pos:end="89:17"><expr pos:start="89:13" pos:end="89:17"><name pos:start="89:13" pos:end="89:17">avctx</name></expr></argument>,

            <argument pos:start="91:13" pos:end="91:73"><expr pos:start="91:13" pos:end="91:73"><literal type="string" pos:start="91:13" pos:end="91:73">"AOT %d chan config %d sampling index %d (%d) SBR %d PS %d\n"</literal></expr></argument>,

            <argument pos:start="93:13" pos:end="93:29"><expr pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:16">m4ac</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:29">object_type</name></name></expr></argument>, <argument pos:start="93:32" pos:end="93:48"><expr pos:start="93:32" pos:end="93:48"><name pos:start="93:32" pos:end="93:48"><name pos:start="93:32" pos:end="93:35">m4ac</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:48">chan_config</name></name></expr></argument>, <argument pos:start="93:51" pos:end="93:70"><expr pos:start="93:51" pos:end="93:70"><name pos:start="93:51" pos:end="93:70"><name pos:start="93:51" pos:end="93:54">m4ac</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:70">sampling_index</name></name></expr></argument>,

            <argument pos:start="95:13" pos:end="95:29"><expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:16">m4ac</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:29">sample_rate</name></name></expr></argument>, <argument pos:start="95:32" pos:end="95:40"><expr pos:start="95:32" pos:end="95:40"><name pos:start="95:32" pos:end="95:40"><name pos:start="95:32" pos:end="95:35">m4ac</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:40">sbr</name></name></expr></argument>,

            <argument pos:start="97:13" pos:end="97:20"><expr pos:start="97:13" pos:end="97:20"><name pos:start="97:13" pos:end="97:20"><name pos:start="97:13" pos:end="97:16">m4ac</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:20">ps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="101:5" pos:end="101:31">return <expr pos:start="101:12" pos:end="101:30"><call pos:start="101:12" pos:end="101:30"><name pos:start="101:12" pos:end="101:25">get_bits_count</name><argument_list pos:start="101:26" pos:end="101:30">(<argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><operator pos:start="101:27" pos:end="101:27">&amp;</operator><name pos:start="101:28" pos:end="101:29">gb</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
