<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13747.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:8">main</name><parameter_list pos:start="1:9" pos:end="1:32">(<parameter pos:start="1:10" pos:end="1:17"><decl pos:start="1:10" pos:end="1:17"><type pos:start="1:10" pos:end="1:17"><name pos:start="1:10" pos:end="1:12">int</name></type> <name pos:start="1:14" pos:end="1:17">argc</name></decl></parameter>, <parameter pos:start="1:20" pos:end="1:31"><decl pos:start="1:20" pos:end="1:31"><type pos:start="1:20" pos:end="1:29"><name pos:start="1:20" pos:end="1:23">char</name><modifier pos:start="1:24" pos:end="1:24">*</modifier></type> <name pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:29">argv</name><index pos:start="1:30" pos:end="1:31">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:14"><name pos:start="5:11" pos:end="5:11">f</name><index pos:start="5:12" pos:end="5:14">[<expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:19"><name pos:start="7:14" pos:end="7:16">buf</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">2</literal></expr>]</index></name></decl>, <decl pos:start="7:22" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:33"><name pos:start="7:23" pos:end="7:27">plane</name><index pos:start="7:28" pos:end="7:30">[<expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">2</literal></expr>]</index><index pos:start="7:31" pos:end="7:33">[<expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">int</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:13">temp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19"><name pos:start="11:14" pos:end="11:16">ssd</name><index pos:start="11:17" pos:end="11:19">[<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">3</literal></expr>]</index></name> <init pos:start="11:21" pos:end="11:29">= <expr pos:start="11:23" pos:end="11:29"><block pos:start="11:23" pos:end="11:29">{<expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr>,<expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr>,<expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:18"><name pos:start="13:12" pos:end="13:15">ssim</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">3</literal></expr>]</index></name> <init pos:start="13:20" pos:end="13:28">= <expr pos:start="13:22" pos:end="13:28"><block pos:start="13:22" pos:end="13:28">{<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr>,<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>,<expr pos:start="13:27" pos:end="13:27"><literal type="number" pos:start="13:27" pos:end="13:27">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">frame_size</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:21">w</name></decl>, <decl pos:start="15:24" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:24" pos:end="15:24">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">frames</name></decl>, <decl pos:start="17:17" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:20">seek</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if<condition pos:start="23:7" pos:end="23:57">( <expr pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:12">argc</name><operator pos:start="23:13" pos:end="23:13">&lt;</operator><literal type="number" pos:start="23:14" pos:end="23:14">4</literal> <operator pos:start="23:16" pos:end="23:17">||</operator> <literal type="number" pos:start="23:19" pos:end="23:19">2</literal> <operator pos:start="23:21" pos:end="23:22">!=</operator> <call pos:start="23:24" pos:end="23:55"><name pos:start="23:24" pos:end="23:29">sscanf</name><argument_list pos:start="23:30" pos:end="23:55">(<argument pos:start="23:31" pos:end="23:37"><expr pos:start="23:31" pos:end="23:37"><name pos:start="23:31" pos:end="23:37"><name pos:start="23:31" pos:end="23:34">argv</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:40" pos:end="23:46"><expr pos:start="23:40" pos:end="23:46"><literal type="string" pos:start="23:40" pos:end="23:46">"%dx%d"</literal></expr></argument>, <argument pos:start="23:49" pos:end="23:50"><expr pos:start="23:49" pos:end="23:50"><operator pos:start="23:49" pos:end="23:49">&amp;</operator><name pos:start="23:50" pos:end="23:50">w</name></expr></argument>, <argument pos:start="23:53" pos:end="23:54"><expr pos:start="23:53" pos:end="23:54"><operator pos:start="23:53" pos:end="23:53">&amp;</operator><name pos:start="23:54" pos:end="23:54">h</name></expr></argument>)</argument_list></call></expr> )</condition>

    <block pos:start="25:5" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:80"><expr pos:start="27:9" pos:end="27:79"><call pos:start="27:9" pos:end="27:79"><name pos:start="27:9" pos:end="27:14">printf</name><argument_list pos:start="27:15" pos:end="27:79">(<argument pos:start="27:16" pos:end="27:78"><expr pos:start="27:16" pos:end="27:78"><literal type="string" pos:start="27:16" pos:end="27:78">"tiny_ssim &lt;file1.yuv&gt; &lt;file2.yuv&gt; &lt;width&gt;x&lt;height&gt; [&lt;seek&gt;]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:32"><expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:5">f</name><index pos:start="35:6" pos:end="35:8">[<expr pos:start="35:7" pos:end="35:7"><literal type="number" pos:start="35:7" pos:end="35:7">0</literal></expr>]</index></name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:31"><name pos:start="35:12" pos:end="35:16">fopen</name><argument_list pos:start="35:17" pos:end="35:31">(<argument pos:start="35:18" pos:end="35:24"><expr pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:21">argv</name><index pos:start="35:22" pos:end="35:24">[<expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><literal type="string" pos:start="35:27" pos:end="35:30">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:8"><name pos:start="37:5" pos:end="37:5">f</name><index pos:start="37:6" pos:end="37:8">[<expr pos:start="37:7" pos:end="37:7"><literal type="number" pos:start="37:7" pos:end="37:7">1</literal></expr>]</index></name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:31"><name pos:start="37:12" pos:end="37:16">fopen</name><argument_list pos:start="37:17" pos:end="37:31">(<argument pos:start="37:18" pos:end="37:24"><expr pos:start="37:18" pos:end="37:24"><name pos:start="37:18" pos:end="37:24"><name pos:start="37:18" pos:end="37:21">argv</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:27" pos:end="37:30"><expr pos:start="37:27" pos:end="37:30"><literal type="string" pos:start="37:27" pos:end="37:30">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><call pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:10">sscanf</name><argument_list pos:start="39:11" pos:end="39:36">(<argument pos:start="39:12" pos:end="39:18"><expr pos:start="39:12" pos:end="39:18"><name pos:start="39:12" pos:end="39:18"><name pos:start="39:12" pos:end="39:15">argv</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><literal type="number" pos:start="39:17" pos:end="39:17">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:27"><literal type="string" pos:start="39:21" pos:end="39:27">"%dx%d"</literal></expr></argument>, <argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:31">w</name></expr></argument>, <argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><operator pos:start="39:34" pos:end="39:34">&amp;</operator><name pos:start="39:35" pos:end="39:35">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:14">frame_size</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:18">w</name><operator pos:start="41:19" pos:end="41:19">*</operator><name pos:start="41:20" pos:end="41:20">h</name><operator pos:start="41:21" pos:end="41:21">*</operator><literal type="number" pos:start="41:22" pos:end="41:22">3</literal><operator pos:start="41:23" pos:end="41:23">/</operator><literal type="number" pos:start="41:24" pos:end="41:24">2</literal></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="55:5">for<control pos:start="43:8" pos:end="43:24">( <init pos:start="43:10" pos:end="43:13"><expr pos:start="43:10" pos:end="43:12"><name pos:start="43:10" pos:end="43:10">i</name><operator pos:start="43:11" pos:end="43:11">=</operator><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</init> <condition pos:start="43:15" pos:end="43:18"><expr pos:start="43:15" pos:end="43:17"><name pos:start="43:15" pos:end="43:15">i</name><operator pos:start="43:16" pos:end="43:16">&lt;</operator><literal type="number" pos:start="43:17" pos:end="43:17">2</literal></expr>;</condition> <incr pos:start="43:20" pos:end="43:22"><expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:20">i</name><operator pos:start="43:21" pos:end="43:22">++</operator></expr></incr> )</control>

    <block pos:start="45:5" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:42">

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:11">buf</name><index pos:start="47:12" pos:end="47:14">[<expr pos:start="47:13" pos:end="47:13"><name pos:start="47:13" pos:end="47:13">i</name></expr>]</index></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:35"><name pos:start="47:18" pos:end="47:23">malloc</name><argument_list pos:start="47:24" pos:end="47:35">(<argument pos:start="47:25" pos:end="47:34"><expr pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:34">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:13">plane</name><index pos:start="49:14" pos:end="49:16">[<expr pos:start="49:15" pos:end="49:15"><name pos:start="49:15" pos:end="49:15">i</name></expr>]</index><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>]</index></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:28"><name pos:start="49:23" pos:end="49:25">buf</name><index pos:start="49:26" pos:end="49:28">[<expr pos:start="49:27" pos:end="49:27"><name pos:start="49:27" pos:end="49:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:13">plane</name><index pos:start="51:14" pos:end="51:16">[<expr pos:start="51:15" pos:end="51:15"><name pos:start="51:15" pos:end="51:15">i</name></expr>]</index><index pos:start="51:17" pos:end="51:19">[<expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">1</literal></expr>]</index></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:33"><name pos:start="51:23" pos:end="51:27">plane</name><index pos:start="51:28" pos:end="51:30">[<expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">i</name></expr>]</index><index pos:start="51:31" pos:end="51:33">[<expr pos:start="51:32" pos:end="51:32"><literal type="number" pos:start="51:32" pos:end="51:32">0</literal></expr>]</index></name> <operator pos:start="51:35" pos:end="51:35">+</operator> <name pos:start="51:37" pos:end="51:37">w</name><operator pos:start="51:38" pos:end="51:38">*</operator><name pos:start="51:39" pos:end="51:39">h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:13">plane</name><index pos:start="53:14" pos:end="53:16">[<expr pos:start="53:15" pos:end="53:15"><name pos:start="53:15" pos:end="53:15">i</name></expr>]</index><index pos:start="53:17" pos:end="53:19">[<expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">2</literal></expr>]</index></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:33"><name pos:start="53:23" pos:end="53:27">plane</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">i</name></expr>]</index><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">1</literal></expr>]</index></name> <operator pos:start="53:35" pos:end="53:35">+</operator> <name pos:start="53:37" pos:end="53:37">w</name><operator pos:start="53:38" pos:end="53:38">*</operator><name pos:start="53:39" pos:end="53:39">h</name><operator pos:start="53:40" pos:end="53:40">/</operator><literal type="number" pos:start="53:41" pos:end="53:41">4</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="57:5" pos:end="57:42"><expr pos:start="57:5" pos:end="57:41"><name pos:start="57:5" pos:end="57:8">temp</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <call pos:start="57:12" pos:end="57:41"><name pos:start="57:12" pos:end="57:17">malloc</name><argument_list pos:start="57:18" pos:end="57:41">(<argument pos:start="57:19" pos:end="57:40"><expr pos:start="57:19" pos:end="57:40"><operator pos:start="57:19" pos:end="57:19">(</operator><literal type="number" pos:start="57:20" pos:end="57:20">2</literal><operator pos:start="57:21" pos:end="57:21">*</operator><name pos:start="57:22" pos:end="57:22">w</name><operator pos:start="57:23" pos:end="57:23">+</operator><literal type="number" pos:start="57:24" pos:end="57:25">12</literal><operator pos:start="57:26" pos:end="57:26">)</operator><operator pos:start="57:27" pos:end="57:27">*</operator><sizeof pos:start="57:28" pos:end="57:40">sizeof<argument_list pos:start="57:34" pos:end="57:40">(<argument pos:start="57:35" pos:end="57:39"><expr pos:start="57:35" pos:end="57:39"><operator pos:start="57:35" pos:end="57:35">*</operator><name pos:start="57:36" pos:end="57:39">temp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:38"><expr pos:start="59:5" pos:end="59:37"><name pos:start="59:5" pos:end="59:8">seek</name> <operator pos:start="59:10" pos:end="59:10">=</operator> <ternary pos:start="59:12" pos:end="59:37"><condition pos:start="59:12" pos:end="59:19"><expr pos:start="59:12" pos:end="59:17"><name pos:start="59:12" pos:end="59:15">argc</name><operator pos:start="59:16" pos:end="59:16">&lt;</operator><literal type="number" pos:start="59:17" pos:end="59:17">5</literal></expr> ?</condition><then pos:start="59:21" pos:end="59:21"> <expr pos:start="59:21" pos:end="59:21"><literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr> </then><else pos:start="59:23" pos:end="59:37">: <expr pos:start="59:25" pos:end="59:37"><call pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:28">atoi</name><argument_list pos:start="59:29" pos:end="59:37">(<argument pos:start="59:30" pos:end="59:36"><expr pos:start="59:30" pos:end="59:36"><name pos:start="59:30" pos:end="59:36"><name pos:start="59:30" pos:end="59:33">argv</name><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><literal type="number" pos:start="59:35" pos:end="59:35">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:56"><expr pos:start="61:5" pos:end="61:55"><call pos:start="61:5" pos:end="61:55"><name pos:start="61:5" pos:end="61:9">fseek</name><argument_list pos:start="61:10" pos:end="61:55">(<argument pos:start="61:11" pos:end="61:19"><expr pos:start="61:11" pos:end="61:19"><name pos:start="61:11" pos:end="61:19"><name pos:start="61:11" pos:end="61:11">f</name><index pos:start="61:12" pos:end="61:19">[<expr pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:16">seek</name><operator pos:start="61:17" pos:end="61:17">&lt;</operator><literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="61:22" pos:end="61:44"><expr pos:start="61:22" pos:end="61:44"><ternary pos:start="61:22" pos:end="61:44"><condition pos:start="61:22" pos:end="61:31"><expr pos:start="61:22" pos:end="61:29"><name pos:start="61:22" pos:end="61:25">seek</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr> ?</condition><then pos:start="61:33" pos:end="61:37"> <expr pos:start="61:33" pos:end="61:37"><operator pos:start="61:33" pos:end="61:33">-</operator><name pos:start="61:34" pos:end="61:37">seek</name></expr> </then><else pos:start="61:39" pos:end="61:44">: <expr pos:start="61:41" pos:end="61:44"><name pos:start="61:41" pos:end="61:44">seek</name></expr></else></ternary></expr></argument>, <argument pos:start="61:47" pos:end="61:54"><expr pos:start="61:47" pos:end="61:54"><name pos:start="61:47" pos:end="61:54">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="65:5" pos:end="105:5">for<control pos:start="65:8" pos:end="65:30">( <init pos:start="65:10" pos:end="65:18"><expr pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:15">frames</name><operator pos:start="65:16" pos:end="65:16">=</operator><literal type="number" pos:start="65:17" pos:end="65:17">0</literal></expr>;</init><condition pos:start="65:19" pos:end="65:19">;</condition> <incr pos:start="65:21" pos:end="65:28"><expr pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:26">frames</name><operator pos:start="65:27" pos:end="65:28">++</operator></expr></incr> )</control>

    <block pos:start="67:5" pos:end="105:5">{<block_content pos:start="69:9" pos:end="103:23">

        <decl_stmt pos:start="69:9" pos:end="69:28"><decl pos:start="69:9" pos:end="69:27"><type pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:16">uint64_t</name></type> <name pos:start="69:18" pos:end="69:27"><name pos:start="69:18" pos:end="69:24">ssd_one</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">3</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:27"><decl pos:start="71:9" pos:end="71:26"><type pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:14">double</name></type> <name pos:start="71:16" pos:end="71:26"><name pos:start="71:16" pos:end="71:23">ssim_one</name><index pos:start="71:24" pos:end="71:26">[<expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">3</literal></expr>]</index></name></decl>;</decl_stmt>

        <if_stmt pos:start="73:9" pos:end="73:59"><if pos:start="73:9" pos:end="73:59">if<condition pos:start="73:11" pos:end="73:52">( <expr pos:start="73:13" pos:end="73:51"><call pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:17">fread</name><argument_list pos:start="73:18" pos:end="73:46">(<argument pos:start="73:19" pos:end="73:24"><expr pos:start="73:19" pos:end="73:24"><name pos:start="73:19" pos:end="73:24"><name pos:start="73:19" pos:end="73:21">buf</name><index pos:start="73:22" pos:end="73:24">[<expr pos:start="73:23" pos:end="73:23"><literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:27" pos:end="73:36"><expr pos:start="73:27" pos:end="73:36"><name pos:start="73:27" pos:end="73:36">frame_size</name></expr></argument>, <argument pos:start="73:39" pos:end="73:39"><expr pos:start="73:39" pos:end="73:39"><literal type="number" pos:start="73:39" pos:end="73:39">1</literal></expr></argument>, <argument pos:start="73:42" pos:end="73:45"><expr pos:start="73:42" pos:end="73:45"><name pos:start="73:42" pos:end="73:45"><name pos:start="73:42" pos:end="73:42">f</name><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><literal type="number" pos:start="73:44" pos:end="73:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="73:48" pos:end="73:49">!=</operator> <literal type="number" pos:start="73:51" pos:end="73:51">1</literal></expr>)</condition><block type="pseudo" pos:start="73:54" pos:end="73:59"><block_content pos:start="73:54" pos:end="73:59"> <break pos:start="73:54" pos:end="73:59">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="75:59"><if pos:start="75:9" pos:end="75:59">if<condition pos:start="75:11" pos:end="75:52">( <expr pos:start="75:13" pos:end="75:51"><call pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:17">fread</name><argument_list pos:start="75:18" pos:end="75:46">(<argument pos:start="75:19" pos:end="75:24"><expr pos:start="75:19" pos:end="75:24"><name pos:start="75:19" pos:end="75:24"><name pos:start="75:19" pos:end="75:21">buf</name><index pos:start="75:22" pos:end="75:24">[<expr pos:start="75:23" pos:end="75:23"><literal type="number" pos:start="75:23" pos:end="75:23">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:27" pos:end="75:36"><expr pos:start="75:27" pos:end="75:36"><name pos:start="75:27" pos:end="75:36">frame_size</name></expr></argument>, <argument pos:start="75:39" pos:end="75:39"><expr pos:start="75:39" pos:end="75:39"><literal type="number" pos:start="75:39" pos:end="75:39">1</literal></expr></argument>, <argument pos:start="75:42" pos:end="75:45"><expr pos:start="75:42" pos:end="75:45"><name pos:start="75:42" pos:end="75:45"><name pos:start="75:42" pos:end="75:42">f</name><index pos:start="75:43" pos:end="75:45">[<expr pos:start="75:44" pos:end="75:44"><literal type="number" pos:start="75:44" pos:end="75:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="75:48" pos:end="75:49">!=</operator> <literal type="number" pos:start="75:51" pos:end="75:51">1</literal></expr>)</condition><block type="pseudo" pos:start="75:54" pos:end="75:59"><block_content pos:start="75:54" pos:end="75:59"> <break pos:start="75:54" pos:end="75:59">break;</break></block_content></block></if></if_stmt>

        <for pos:start="77:9" pos:end="93:9">for<control pos:start="77:12" pos:end="77:28">( <init pos:start="77:14" pos:end="77:17"><expr pos:start="77:14" pos:end="77:16"><name pos:start="77:14" pos:end="77:14">i</name><operator pos:start="77:15" pos:end="77:15">=</operator><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>;</init> <condition pos:start="77:19" pos:end="77:22"><expr pos:start="77:19" pos:end="77:21"><name pos:start="77:19" pos:end="77:19">i</name><operator pos:start="77:20" pos:end="77:20">&lt;</operator><literal type="number" pos:start="77:21" pos:end="77:21">3</literal></expr>;</condition> <incr pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:24">i</name><operator pos:start="77:25" pos:end="77:26">++</operator></expr></incr> )</control>

        <block pos:start="79:9" pos:end="93:9">{<block_content pos:start="81:13" pos:end="91:35">

            <expr_stmt pos:start="81:13" pos:end="81:77"><expr pos:start="81:13" pos:end="81:76"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:19">ssd_one</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">i</name></expr>]</index></name>  <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="81:76"><name pos:start="81:27" pos:end="81:35">ssd_plane</name> <argument_list pos:start="81:37" pos:end="81:76">( <argument pos:start="81:39" pos:end="81:49"><expr pos:start="81:39" pos:end="81:49"><name pos:start="81:39" pos:end="81:49"><name pos:start="81:39" pos:end="81:43">plane</name><index pos:start="81:44" pos:end="81:46">[<expr pos:start="81:45" pos:end="81:45"><literal type="number" pos:start="81:45" pos:end="81:45">0</literal></expr>]</index><index pos:start="81:47" pos:end="81:49">[<expr pos:start="81:48" pos:end="81:48"><name pos:start="81:48" pos:end="81:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="81:52" pos:end="81:62"><expr pos:start="81:52" pos:end="81:62"><name pos:start="81:52" pos:end="81:62"><name pos:start="81:52" pos:end="81:56">plane</name><index pos:start="81:57" pos:end="81:59">[<expr pos:start="81:58" pos:end="81:58"><literal type="number" pos:start="81:58" pos:end="81:58">1</literal></expr>]</index><index pos:start="81:60" pos:end="81:62">[<expr pos:start="81:61" pos:end="81:61"><name pos:start="81:61" pos:end="81:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="81:65" pos:end="81:74"><expr pos:start="81:65" pos:end="81:74"><name pos:start="81:65" pos:end="81:65">w</name><operator pos:start="81:66" pos:end="81:66">*</operator><name pos:start="81:67" pos:end="81:67">h</name><operator pos:start="81:68" pos:end="81:69">&gt;&gt;</operator><literal type="number" pos:start="81:70" pos:end="81:70">2</literal><operator pos:start="81:71" pos:end="81:71">*</operator><operator pos:start="81:72" pos:end="81:72">!</operator><operator pos:start="81:73" pos:end="81:73">!</operator><name pos:start="81:74" pos:end="81:74">i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="87:66"><expr pos:start="83:13" pos:end="87:65"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:20">ssim_one</name><index pos:start="83:21" pos:end="83:23">[<expr pos:start="83:22" pos:end="83:22"><name pos:start="83:22" pos:end="83:22">i</name></expr>]</index></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <call pos:start="83:27" pos:end="87:65"><name pos:start="83:27" pos:end="83:36">ssim_plane</name><argument_list pos:start="83:37" pos:end="87:65">( <argument pos:start="83:39" pos:end="83:49"><expr pos:start="83:39" pos:end="83:49"><name pos:start="83:39" pos:end="83:49"><name pos:start="83:39" pos:end="83:43">plane</name><index pos:start="83:44" pos:end="83:46">[<expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">0</literal></expr>]</index><index pos:start="83:47" pos:end="83:49">[<expr pos:start="83:48" pos:end="83:48"><name pos:start="83:48" pos:end="83:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="83:52" pos:end="83:57"><expr pos:start="83:52" pos:end="83:57"><name pos:start="83:52" pos:end="83:52">w</name><operator pos:start="83:53" pos:end="83:54">&gt;&gt;</operator><operator pos:start="83:55" pos:end="83:55">!</operator><operator pos:start="83:56" pos:end="83:56">!</operator><name pos:start="83:57" pos:end="83:57">i</name></expr></argument>,

                                     <argument pos:start="85:38" pos:end="85:48"><expr pos:start="85:38" pos:end="85:48"><name pos:start="85:38" pos:end="85:48"><name pos:start="85:38" pos:end="85:42">plane</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">1</literal></expr>]</index><index pos:start="85:46" pos:end="85:48">[<expr pos:start="85:47" pos:end="85:47"><name pos:start="85:47" pos:end="85:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="85:51" pos:end="85:56"><expr pos:start="85:51" pos:end="85:56"><name pos:start="85:51" pos:end="85:51">w</name><operator pos:start="85:52" pos:end="85:53">&gt;&gt;</operator><operator pos:start="85:54" pos:end="85:54">!</operator><operator pos:start="85:55" pos:end="85:55">!</operator><name pos:start="85:56" pos:end="85:56">i</name></expr></argument>,

                                     <argument pos:start="87:38" pos:end="87:43"><expr pos:start="87:38" pos:end="87:43"><name pos:start="87:38" pos:end="87:38">w</name><operator pos:start="87:39" pos:end="87:40">&gt;&gt;</operator><operator pos:start="87:41" pos:end="87:41">!</operator><operator pos:start="87:42" pos:end="87:42">!</operator><name pos:start="87:43" pos:end="87:43">i</name></expr></argument>, <argument pos:start="87:46" pos:end="87:51"><expr pos:start="87:46" pos:end="87:51"><name pos:start="87:46" pos:end="87:46">h</name><operator pos:start="87:47" pos:end="87:48">&gt;&gt;</operator><operator pos:start="87:49" pos:end="87:49">!</operator><operator pos:start="87:50" pos:end="87:50">!</operator><name pos:start="87:51" pos:end="87:51">i</name></expr></argument>, <argument pos:start="87:54" pos:end="87:57"><expr pos:start="87:54" pos:end="87:57"><name pos:start="87:54" pos:end="87:57">temp</name></expr></argument>, <argument pos:start="87:60" pos:end="87:63"><expr pos:start="87:60" pos:end="87:63"><name pos:start="87:60" pos:end="87:63">NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:18"><name pos:start="89:13" pos:end="89:15">ssd</name><index pos:start="89:16" pos:end="89:18">[<expr pos:start="89:17" pos:end="89:17"><name pos:start="89:17" pos:end="89:17">i</name></expr>]</index></name> <operator pos:start="89:20" pos:end="89:21">+=</operator> <name pos:start="89:23" pos:end="89:32"><name pos:start="89:23" pos:end="89:29">ssd_one</name><index pos:start="89:30" pos:end="89:32">[<expr pos:start="89:31" pos:end="89:31"><name pos:start="89:31" pos:end="89:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:16">ssim</name><index pos:start="91:17" pos:end="91:19">[<expr pos:start="91:18" pos:end="91:18"><name pos:start="91:18" pos:end="91:18">i</name></expr>]</index></name> <operator pos:start="91:21" pos:end="91:22">+=</operator> <name pos:start="91:24" pos:end="91:34"><name pos:start="91:24" pos:end="91:31">ssim_one</name><index pos:start="91:32" pos:end="91:34">[<expr pos:start="91:33" pos:end="91:33"><name pos:start="91:33" pos:end="91:33">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><call pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:14">printf</name><argument_list pos:start="97:15" pos:end="97:37">(<argument pos:start="97:16" pos:end="97:28"><expr pos:start="97:16" pos:end="97:28"><literal type="string" pos:start="97:16" pos:end="97:28">"Frame %d | "</literal></expr></argument>, <argument pos:start="97:31" pos:end="97:36"><expr pos:start="97:31" pos:end="97:36"><name pos:start="97:31" pos:end="97:36">frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:50"><expr pos:start="99:9" pos:end="99:49"><call pos:start="99:9" pos:end="99:49"><name pos:start="99:9" pos:end="99:21">print_results</name><argument_list pos:start="99:22" pos:end="99:49">(<argument pos:start="99:23" pos:end="99:29"><expr pos:start="99:23" pos:end="99:29"><name pos:start="99:23" pos:end="99:29">ssd_one</name></expr></argument>, <argument pos:start="99:32" pos:end="99:39"><expr pos:start="99:32" pos:end="99:39"><name pos:start="99:32" pos:end="99:39">ssim_one</name></expr></argument>, <argument pos:start="99:42" pos:end="99:42"><expr pos:start="99:42" pos:end="99:42"><literal type="number" pos:start="99:42" pos:end="99:42">1</literal></expr></argument>, <argument pos:start="99:45" pos:end="99:45"><expr pos:start="99:45" pos:end="99:45"><name pos:start="99:45" pos:end="99:45">w</name></expr></argument>, <argument pos:start="99:48" pos:end="99:48"><expr pos:start="99:48" pos:end="99:48"><name pos:start="99:48" pos:end="99:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:37"><expr pos:start="101:9" pos:end="101:36"><call pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:14">printf</name><argument_list pos:start="101:15" pos:end="101:36">(<argument pos:start="101:16" pos:end="101:35"><expr pos:start="101:16" pos:end="101:35"><literal type="string" pos:start="101:16" pos:end="101:35">"                \r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:23"><expr pos:start="103:9" pos:end="103:22"><call pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:14">fflush</name><argument_list pos:start="103:15" pos:end="103:22">(<argument pos:start="103:16" pos:end="103:21"><expr pos:start="103:16" pos:end="103:21"><name pos:start="103:16" pos:end="103:21">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="109:5" pos:end="109:27"><if pos:start="109:5" pos:end="109:27">if<condition pos:start="109:7" pos:end="109:17">( <expr pos:start="109:9" pos:end="109:15"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:15">frames</name></expr> )</condition><block type="pseudo" pos:start="109:19" pos:end="109:27"><block_content pos:start="109:19" pos:end="109:27"> <return pos:start="109:19" pos:end="109:27">return <expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:41"><expr pos:start="113:5" pos:end="113:40"><call pos:start="113:5" pos:end="113:40"><name pos:start="113:5" pos:end="113:10">printf</name><argument_list pos:start="113:11" pos:end="113:40">(<argument pos:start="113:12" pos:end="113:31"><expr pos:start="113:12" pos:end="113:31"><literal type="string" pos:start="113:12" pos:end="113:31">"Total %d frames | "</literal></expr></argument>, <argument pos:start="113:34" pos:end="113:39"><expr pos:start="113:34" pos:end="113:39"><name pos:start="113:34" pos:end="113:39">frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:43"><expr pos:start="115:5" pos:end="115:42"><call pos:start="115:5" pos:end="115:42"><name pos:start="115:5" pos:end="115:17">print_results</name><argument_list pos:start="115:18" pos:end="115:42">(<argument pos:start="115:19" pos:end="115:21"><expr pos:start="115:19" pos:end="115:21"><name pos:start="115:19" pos:end="115:21">ssd</name></expr></argument>, <argument pos:start="115:24" pos:end="115:27"><expr pos:start="115:24" pos:end="115:27"><name pos:start="115:24" pos:end="115:27">ssim</name></expr></argument>, <argument pos:start="115:30" pos:end="115:35"><expr pos:start="115:30" pos:end="115:35"><name pos:start="115:30" pos:end="115:35">frames</name></expr></argument>, <argument pos:start="115:38" pos:end="115:38"><expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">w</name></expr></argument>, <argument pos:start="115:41" pos:end="115:41"><expr pos:start="115:41" pos:end="115:41"><name pos:start="115:41" pos:end="115:41">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:17"><expr pos:start="117:5" pos:end="117:16"><call pos:start="117:5" pos:end="117:16"><name pos:start="117:5" pos:end="117:10">printf</name><argument_list pos:start="117:11" pos:end="117:16">(<argument pos:start="117:12" pos:end="117:15"><expr pos:start="117:12" pos:end="117:15"><literal type="string" pos:start="117:12" pos:end="117:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
