<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24407.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:20"><name pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:18">omap_gpmc_s</name></name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:34">omap_gpmc_init</name><parameter_list pos:start="1:35" pos:end="5:62">(<parameter pos:start="1:36" pos:end="1:63"><decl pos:start="1:36" pos:end="1:63"><type pos:start="1:36" pos:end="1:63"><name pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:41">struct</name> <name pos:start="1:43" pos:end="1:58">omap_mpu_state_s</name></name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">mpu</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:46"><decl pos:start="3:36" pos:end="3:46"><type pos:start="3:36" pos:end="3:46"><name pos:start="3:36" pos:end="3:41">hwaddr</name></type> <name pos:start="3:43" pos:end="3:46">base</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:47"><decl pos:start="5:36" pos:end="5:47"><type pos:start="5:36" pos:end="5:47"><name pos:start="5:36" pos:end="5:43">qemu_irq</name></type> <name pos:start="5:45" pos:end="5:47">irq</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:61"><decl pos:start="5:50" pos:end="5:61"><type pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:57">qemu_irq</name></type> <name pos:start="5:59" pos:end="5:61">drq</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="9:5" pos:end="69:13">

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:50"><decl pos:start="11:5" pos:end="13:49"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:22">omap_gpmc_s</name></name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:25">s</name> <init pos:start="11:27" pos:end="13:49">= <expr pos:start="11:29" pos:end="13:49"><operator pos:start="11:29" pos:end="11:29">(</operator>struct <name pos:start="11:37" pos:end="11:47">omap_gpmc_s</name> <operator pos:start="11:49" pos:end="11:49">*</operator><operator pos:start="11:50" pos:end="11:50">)</operator>

            <call pos:start="13:13" pos:end="13:49"><name pos:start="13:13" pos:end="13:21">g_malloc0</name><argument_list pos:start="13:22" pos:end="13:49">(<argument pos:start="13:23" pos:end="13:48"><expr pos:start="13:23" pos:end="13:48"><sizeof pos:start="13:23" pos:end="13:48">sizeof<argument_list pos:start="13:29" pos:end="13:48">(<argument pos:start="13:30" pos:end="13:47"><expr pos:start="13:30" pos:end="13:47">struct <name pos:start="13:37" pos:end="13:47">omap_gpmc_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:83"><expr pos:start="17:5" pos:end="17:82"><call pos:start="17:5" pos:end="17:82"><name pos:start="17:5" pos:end="17:25">memory_region_init_io</name><argument_list pos:start="17:26" pos:end="17:82">(<argument pos:start="17:27" pos:end="17:35"><expr pos:start="17:27" pos:end="17:35"><operator pos:start="17:27" pos:end="17:27">&amp;</operator><name pos:start="17:28" pos:end="17:35"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:35">iomem</name></name></expr></argument>, <argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">NULL</name></expr></argument>, <argument pos:start="17:44" pos:end="17:57"><expr pos:start="17:44" pos:end="17:57"><operator pos:start="17:44" pos:end="17:44">&amp;</operator><name pos:start="17:45" pos:end="17:57">omap_gpmc_ops</name></expr></argument>, <argument pos:start="17:60" pos:end="17:60"><expr pos:start="17:60" pos:end="17:60"><name pos:start="17:60" pos:end="17:60">s</name></expr></argument>, <argument pos:start="17:63" pos:end="17:73"><expr pos:start="17:63" pos:end="17:73"><literal type="string" pos:start="17:63" pos:end="17:73">"omap-gpmc"</literal></expr></argument>, <argument pos:start="17:76" pos:end="17:81"><expr pos:start="17:76" pos:end="17:81"><literal type="number" pos:start="17:76" pos:end="17:81">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><call pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:31">memory_region_add_subregion</name><argument_list pos:start="19:32" pos:end="19:69">(<argument pos:start="19:33" pos:end="19:51"><expr pos:start="19:33" pos:end="19:51"><call pos:start="19:33" pos:end="19:51"><name pos:start="19:33" pos:end="19:49">get_system_memory</name><argument_list pos:start="19:50" pos:end="19:51">()</argument_list></call></expr></argument>, <argument pos:start="19:54" pos:end="19:57"><expr pos:start="19:54" pos:end="19:57"><name pos:start="19:54" pos:end="19:57">base</name></expr></argument>, <argument pos:start="19:60" pos:end="19:68"><expr pos:start="19:60" pos:end="19:68"><operator pos:start="19:60" pos:end="19:60">&amp;</operator><name pos:start="19:61" pos:end="19:68"><name pos:start="19:61" pos:end="19:61">s</name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:68">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:10">irq</name></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">drq</name></name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:16">drq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:17">accept_256</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:40"><name pos:start="27:21" pos:end="27:35">cpu_is_omap3630</name><argument_list pos:start="27:36" pos:end="27:40">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">mpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">revision</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <ternary pos:start="29:19" pos:end="29:52"><condition pos:start="29:19" pos:end="29:40"><expr pos:start="29:19" pos:end="29:38"><call pos:start="29:19" pos:end="29:38"><name pos:start="29:19" pos:end="29:33">cpu_class_omap3</name><argument_list pos:start="29:34" pos:end="29:38">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">mpu</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="29:42" pos:end="29:45"> <expr pos:start="29:42" pos:end="29:45"><literal type="number" pos:start="29:42" pos:end="29:45">0x50</literal></expr> </then><else pos:start="29:47" pos:end="29:52">: <expr pos:start="29:49" pos:end="29:52"><literal type="number" pos:start="29:49" pos:end="29:52">0x20</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:14">lastirq</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><call pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:19">omap_gpmc_reset</name><argument_list pos:start="33:20" pos:end="33:22">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="47:7">/* We have to register a different IO memory handler for each

     * chip select region in case a NAND device is mapped there. We

     * make the region the worst-case size of 256MB and rely on the

     * container memory region in cs_map to chop it down to the actual

     * guest-requested size.

     */</comment>

    <for pos:start="49:5" pos:end="61:5">for <control pos:start="49:9" pos:end="49:30">(<init pos:start="49:10" pos:end="49:16"><expr pos:start="49:10" pos:end="49:15"><name pos:start="49:10" pos:end="49:11">cs</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>;</init> <condition pos:start="49:18" pos:end="49:24"><expr pos:start="49:18" pos:end="49:23"><name pos:start="49:18" pos:end="49:19">cs</name> <operator pos:start="49:21" pos:end="49:21">&lt;</operator> <literal type="number" pos:start="49:23" pos:end="49:23">8</literal></expr>;</condition> <incr pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:27">cs</name><operator pos:start="49:28" pos:end="49:29">++</operator></expr></incr>)</control> <block pos:start="49:32" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:49">

        <expr_stmt pos:start="51:9" pos:end="59:49"><expr pos:start="51:9" pos:end="59:48"><call pos:start="51:9" pos:end="59:48"><name pos:start="51:9" pos:end="51:29">memory_region_init_io</name><argument_list pos:start="51:30" pos:end="59:48">(<argument pos:start="51:31" pos:end="51:55"><expr pos:start="51:31" pos:end="51:55"><operator pos:start="51:31" pos:end="51:31">&amp;</operator><name pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:32">s</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:41">cs_file</name><index pos:start="51:42" pos:end="51:45">[<expr pos:start="51:43" pos:end="51:44"><name pos:start="51:43" pos:end="51:44">cs</name></expr>]</index></name><operator pos:start="51:46" pos:end="51:46">.</operator><name pos:start="51:47" pos:end="51:55">nandiomem</name></expr></argument>, <argument pos:start="51:58" pos:end="51:61"><expr pos:start="51:58" pos:end="51:61"><name pos:start="51:58" pos:end="51:61">NULL</name></expr></argument>,

                              <argument pos:start="53:31" pos:end="53:44"><expr pos:start="53:31" pos:end="53:44"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:44">omap_nand_ops</name></expr></argument>,

                              <argument pos:start="55:31" pos:end="55:45"><expr pos:start="55:31" pos:end="55:45"><operator pos:start="55:31" pos:end="55:31">&amp;</operator><name pos:start="55:32" pos:end="55:45"><name pos:start="55:32" pos:end="55:32">s</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:41">cs_file</name><index pos:start="55:42" pos:end="55:45">[<expr pos:start="55:43" pos:end="55:44"><name pos:start="55:43" pos:end="55:44">cs</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="57:31" pos:end="57:41"><expr pos:start="57:31" pos:end="57:41"><literal type="string" pos:start="57:31" pos:end="57:41">"omap-nand"</literal></expr></argument>,

                              <argument pos:start="59:31" pos:end="59:47"><expr pos:start="59:31" pos:end="59:47"><literal type="number" pos:start="59:31" pos:end="59:33">256</literal> <operator pos:start="59:35" pos:end="59:35">*</operator> <literal type="number" pos:start="59:37" pos:end="59:40">1024</literal> <operator pos:start="59:42" pos:end="59:42">*</operator> <literal type="number" pos:start="59:44" pos:end="59:47">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="65:5" pos:end="67:67"><expr pos:start="65:5" pos:end="67:66"><call pos:start="65:5" pos:end="67:66"><name pos:start="65:5" pos:end="65:25">memory_region_init_io</name><argument_list pos:start="65:26" pos:end="67:66">(<argument pos:start="65:27" pos:end="65:44"><expr pos:start="65:27" pos:end="65:44"><operator pos:start="65:27" pos:end="65:27">&amp;</operator><name pos:start="65:28" pos:end="65:44"><name pos:start="65:28" pos:end="65:28">s</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:38">prefetch</name><operator pos:start="65:39" pos:end="65:39">.</operator><name pos:start="65:40" pos:end="65:44">iomem</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:50"><expr pos:start="65:47" pos:end="65:50"><name pos:start="65:47" pos:end="65:50">NULL</name></expr></argument>, <argument pos:start="65:53" pos:end="65:70"><expr pos:start="65:53" pos:end="65:70"><operator pos:start="65:53" pos:end="65:53">&amp;</operator><name pos:start="65:54" pos:end="65:70">omap_prefetch_ops</name></expr></argument>, <argument pos:start="65:73" pos:end="65:73"><expr pos:start="65:73" pos:end="65:73"><name pos:start="65:73" pos:end="65:73">s</name></expr></argument>,

                          <argument pos:start="67:27" pos:end="67:46"><expr pos:start="67:27" pos:end="67:46"><literal type="string" pos:start="67:27" pos:end="67:46">"omap-gpmc-prefetch"</literal></expr></argument>, <argument pos:start="67:49" pos:end="67:65"><expr pos:start="67:49" pos:end="67:65"><literal type="number" pos:start="67:49" pos:end="67:51">256</literal> <operator pos:start="67:53" pos:end="67:53">*</operator> <literal type="number" pos:start="67:55" pos:end="67:58">1024</literal> <operator pos:start="67:60" pos:end="67:60">*</operator> <literal type="number" pos:start="67:62" pos:end="67:65">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><name pos:start="69:12" pos:end="69:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
