<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25766.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">tight_send_compact_size</name><parameter_list pos:start="1:36" pos:end="1:61">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:44">VncState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">vs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:56">size_t</name></type> <name pos:start="1:58" pos:end="1:60">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">lpc</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">bytes</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">3</literal></expr>]</index></name> <init pos:start="9:17" pos:end="9:27">= <expr pos:start="9:19" pos:end="9:27"><block pos:start="9:19" pos:end="9:27">{<expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr>, <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr>, <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:7">buf</name><index pos:start="13:8" pos:end="13:16">[<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:13">bytes</name><operator pos:start="13:14" pos:end="13:15">++</operator></expr>]</index></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:22">len</name> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <literal type="number" pos:start="13:26" pos:end="13:29">0x7F</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="29:5">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:11">len</name> <operator pos:start="15:13" pos:end="15:13">&gt;</operator> <literal type="number" pos:start="15:15" pos:end="15:18">0x7F</literal></expr>)</condition> <block pos:start="15:21" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:9">

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:11">buf</name><index pos:start="17:12" pos:end="17:20">[<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:17">bytes</name><operator pos:start="17:18" pos:end="17:18">-</operator><literal type="number" pos:start="17:19" pos:end="17:19">1</literal></expr>]</index></name> <operator pos:start="17:22" pos:end="17:23">|=</operator> <literal type="number" pos:start="17:25" pos:end="17:28">0x80</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:11">buf</name><index pos:start="19:12" pos:end="19:20">[<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:17">bytes</name><operator pos:start="19:18" pos:end="19:19">++</operator></expr>]</index></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <operator pos:start="19:24" pos:end="19:24">(</operator><name pos:start="19:25" pos:end="19:27">len</name> <operator pos:start="19:29" pos:end="19:30">&gt;&gt;</operator> <literal type="number" pos:start="19:32" pos:end="19:32">7</literal><operator pos:start="19:33" pos:end="19:33">)</operator> <operator pos:start="19:35" pos:end="19:35">&amp;</operator> <literal type="number" pos:start="19:37" pos:end="19:40">0x7F</literal></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:25">(<expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <literal type="number" pos:start="21:19" pos:end="21:24">0x3FFF</literal></expr>)</condition> <block pos:start="21:27" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:46">

            <expr_stmt pos:start="23:13" pos:end="23:33"><expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:15">buf</name><index pos:start="23:16" pos:end="23:24">[<expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:21">bytes</name><operator pos:start="23:22" pos:end="23:22">-</operator><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr>]</index></name> <operator pos:start="23:26" pos:end="23:27">|=</operator> <literal type="number" pos:start="23:29" pos:end="23:32">0x80</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:46"><expr pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:15">buf</name><index pos:start="25:16" pos:end="25:24">[<expr pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:21">bytes</name><operator pos:start="25:22" pos:end="25:23">++</operator></expr>]</index></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <operator pos:start="25:28" pos:end="25:28">(</operator><name pos:start="25:29" pos:end="25:31">len</name> <operator pos:start="25:33" pos:end="25:34">&gt;&gt;</operator> <literal type="number" pos:start="25:36" pos:end="25:37">14</literal><operator pos:start="25:38" pos:end="25:38">)</operator> <operator pos:start="25:40" pos:end="25:40">&amp;</operator> <literal type="number" pos:start="25:42" pos:end="25:45">0xFF</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="31:5" pos:end="35:5">for <control pos:start="31:9" pos:end="31:37">(<init pos:start="31:10" pos:end="31:17"><expr pos:start="31:10" pos:end="31:16"><name pos:start="31:10" pos:end="31:12">lpc</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</init> <condition pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:29"><name pos:start="31:19" pos:end="31:21">lpc</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:29">bytes</name></expr>;</condition> <incr pos:start="31:32" pos:end="31:36"><expr pos:start="31:32" pos:end="31:36"><name pos:start="31:32" pos:end="31:34">lpc</name><operator pos:start="31:35" pos:end="31:36">++</operator></expr></incr>)</control> <block pos:start="31:39" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:35">

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><call pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:20">vnc_write_u8</name><argument_list pos:start="33:21" pos:end="33:34">(<argument pos:start="33:22" pos:end="33:23"><expr pos:start="33:22" pos:end="33:23"><name pos:start="33:22" pos:end="33:23">vs</name></expr></argument>, <argument pos:start="33:26" pos:end="33:33"><expr pos:start="33:26" pos:end="33:33"><name pos:start="33:26" pos:end="33:33"><name pos:start="33:26" pos:end="33:28">buf</name><index pos:start="33:29" pos:end="33:33">[<expr pos:start="33:30" pos:end="33:32"><name pos:start="33:30" pos:end="33:32">lpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
