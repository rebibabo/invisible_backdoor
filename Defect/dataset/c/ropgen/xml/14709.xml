<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14709.c" pos:tabs="8"><function pos:start="1:1" pos:end="459:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">cpu_ppc_handle_mmu_fault</name><parameter_list pos:start="1:36" pos:end="3:56">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:47">CPUPPCState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">env</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:74"><decl pos:start="1:55" pos:end="1:74"><type pos:start="1:55" pos:end="1:74"><name pos:start="1:55" pos:end="1:66">target_ulong</name></type> <name pos:start="1:68" pos:end="1:74">address</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:42"><decl pos:start="3:37" pos:end="3:42"><type pos:start="3:37" pos:end="3:42"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:42">rw</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:55"><decl pos:start="3:45" pos:end="3:55"><type pos:start="3:45" pos:end="3:55"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:55">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="459:1">{<block_content pos:start="7:5" pos:end="457:15">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:44">= <expr pos:start="7:20" pos:end="7:44"><call pos:start="7:20" pos:end="7:44"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:44">(<argument pos:start="7:24" pos:end="7:43"><expr pos:start="7:24" pos:end="7:43"><call pos:start="7:24" pos:end="7:43"><name pos:start="7:24" pos:end="7:38">ppc_env_get_cpu</name><argument_list pos:start="7:39" pos:end="7:43">(<argument pos:start="7:40" pos:end="7:42"><expr pos:start="7:40" pos:end="7:42"><name pos:start="7:40" pos:end="7:42">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PowerPCCPU</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">cpu</name> <init pos:start="9:21" pos:end="9:37">= <expr pos:start="9:23" pos:end="9:37"><call pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:33">POWERPC_CPU</name><argument_list pos:start="9:34" pos:end="9:37">(<argument pos:start="9:35" pos:end="9:36"><expr pos:start="9:35" pos:end="9:36"><name pos:start="9:35" pos:end="9:36">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">mmu_ctx_t</name></type> <name pos:start="11:15" pos:end="11:17">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">access_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">rw</name> <operator pos:start="19:12" pos:end="19:13">==</operator> <literal type="number" pos:start="19:15" pos:end="19:15">2</literal></expr>)</condition> <block pos:start="19:18" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:34">

        <comment type="block" pos:start="21:9" pos:end="21:25">/* code access */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:15"><expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:10">rw</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:19">access_type</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:33">ACCESS_CODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="33:5">else <block pos:start="27:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:39">

        <comment type="block" pos:start="29:9" pos:end="29:25">/* data access */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:19">access_type</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:38"><name pos:start="31:23" pos:end="31:25">env</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:38">access_type</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:68"><expr pos:start="35:5" pos:end="35:67"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:67"><name pos:start="35:11" pos:end="35:30">get_physical_address</name><argument_list pos:start="35:31" pos:end="35:67">(<argument pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:34">env</name></expr></argument>, <argument pos:start="35:37" pos:end="35:40"><expr pos:start="35:37" pos:end="35:40"><operator pos:start="35:37" pos:end="35:37">&amp;</operator><name pos:start="35:38" pos:end="35:40">ctx</name></expr></argument>, <argument pos:start="35:43" pos:end="35:49"><expr pos:start="35:43" pos:end="35:49"><name pos:start="35:43" pos:end="35:49">address</name></expr></argument>, <argument pos:start="35:52" pos:end="35:53"><expr pos:start="35:52" pos:end="35:53"><name pos:start="35:52" pos:end="35:53">rw</name></expr></argument>, <argument pos:start="35:56" pos:end="35:66"><expr pos:start="35:56" pos:end="35:66"><name pos:start="35:56" pos:end="35:66">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="453:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:14">==</operator> <literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>)</condition> <block pos:start="37:19" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:16">

        <expr_stmt pos:start="39:9" pos:end="43:48"><expr pos:start="39:9" pos:end="43:47"><call pos:start="39:9" pos:end="43:47"><name pos:start="39:9" pos:end="39:20">tlb_set_page</name><argument_list pos:start="39:21" pos:end="43:47">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">cs</name></expr></argument>, <argument pos:start="39:26" pos:end="39:51"><expr pos:start="39:26" pos:end="39:51"><name pos:start="39:26" pos:end="39:32">address</name> <operator pos:start="39:34" pos:end="39:34">&amp;</operator> <name pos:start="39:36" pos:end="39:51">TARGET_PAGE_MASK</name></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:49"><expr pos:start="41:22" pos:end="41:49"><name pos:start="41:22" pos:end="41:30"><name pos:start="41:22" pos:end="41:24">ctx</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:30">raddr</name></name> <operator pos:start="41:32" pos:end="41:32">&amp;</operator> <name pos:start="41:34" pos:end="41:49">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="41:52" pos:end="41:59"><expr pos:start="41:52" pos:end="41:59"><name pos:start="41:52" pos:end="41:59"><name pos:start="41:52" pos:end="41:54">ctx</name><operator pos:start="41:55" pos:end="41:55">.</operator><name pos:start="41:56" pos:end="41:59">prot</name></name></expr></argument>,

                     <argument pos:start="43:22" pos:end="43:28"><expr pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:28">mmu_idx</name></expr></argument>, <argument pos:start="43:31" pos:end="43:46"><expr pos:start="43:31" pos:end="43:46"><name pos:start="43:31" pos:end="43:46">TARGET_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="453:5">else if <condition pos:start="47:15" pos:end="47:23">(<expr pos:start="47:16" pos:end="47:22"><name pos:start="47:16" pos:end="47:18">ret</name> <operator pos:start="47:20" pos:end="47:20">&lt;</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>)</condition> <block pos:start="47:25" pos:end="453:5">{<block_content pos:start="49:9" pos:end="451:16">

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><call pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:21">LOG_MMU_STATE</name><argument_list pos:start="49:22" pos:end="49:25">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="450:0"><if pos:start="51:9" pos:end="177:9">if <condition pos:start="51:12" pos:end="51:39">(<expr pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:23">access_type</name> <operator pos:start="51:25" pos:end="51:26">==</operator> <name pos:start="51:28" pos:end="51:38">ACCESS_CODE</name></expr>)</condition> <block pos:start="51:41" pos:end="177:9">{<block_content pos:start="53:13" pos:end="175:13">

            <switch pos:start="53:13" pos:end="175:13">switch <condition pos:start="53:20" pos:end="53:24">(<expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">ret</name></expr>)</condition> <block pos:start="53:26" pos:end="175:13">{<block_content pos:start="55:13" pos:end="173:22">

            <case pos:start="55:13" pos:end="55:20">case <expr pos:start="55:18" pos:end="55:19"><operator pos:start="55:18" pos:end="55:18">-</operator><literal type="number" pos:start="55:19" pos:end="55:19">1</literal></expr>:</case>

                <comment type="block" pos:start="57:17" pos:end="57:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="59:17" pos:end="131:17">switch <condition pos:start="59:24" pos:end="59:39">(<expr pos:start="59:25" pos:end="59:38"><name pos:start="59:25" pos:end="59:38"><name pos:start="59:25" pos:end="59:27">env</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:38">mmu_model</name></name></expr>)</condition> <block pos:start="59:41" pos:end="131:17">{<block_content pos:start="61:17" pos:end="129:30">

                <case pos:start="61:17" pos:end="61:42">case <expr pos:start="61:22" pos:end="61:41"><name pos:start="61:22" pos:end="61:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <expr_stmt pos:start="63:21" pos:end="63:61"><expr pos:start="63:21" pos:end="63:60"><name pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:22">cs</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:39">exception_index</name></name> <operator pos:start="63:41" pos:end="63:41">=</operator> <name pos:start="63:43" pos:end="63:60">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:46"><expr pos:start="65:21" pos:end="65:45"><name pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:23">env</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:35">error_code</name></name> <operator pos:start="65:37" pos:end="65:37">=</operator> <literal type="number" pos:start="65:39" pos:end="65:39">1</literal> <operator pos:start="65:41" pos:end="65:42">&lt;&lt;</operator> <literal type="number" pos:start="65:44" pos:end="65:45">18</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:50"><expr pos:start="67:21" pos:end="67:49"><name pos:start="67:21" pos:end="67:39"><name pos:start="67:21" pos:end="67:23">env</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:28">spr</name><index pos:start="67:29" pos:end="67:39">[<expr pos:start="67:30" pos:end="67:38"><name pos:start="67:30" pos:end="67:38">SPR_IMISS</name></expr>]</index></name> <operator pos:start="67:41" pos:end="67:41">=</operator> <name pos:start="67:43" pos:end="67:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:63"><expr pos:start="69:21" pos:end="69:62"><name pos:start="69:21" pos:end="69:38"><name pos:start="69:21" pos:end="69:23">env</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:28">spr</name><index pos:start="69:29" pos:end="69:38">[<expr pos:start="69:30" pos:end="69:37"><name pos:start="69:30" pos:end="69:37">SPR_ICMP</name></expr>]</index></name> <operator pos:start="69:40" pos:end="69:40">=</operator> <literal type="number" pos:start="69:42" pos:end="69:51">0x80000000</literal> <operator pos:start="69:53" pos:end="69:53">|</operator> <name pos:start="69:55" pos:end="69:62"><name pos:start="69:55" pos:end="69:57">ctx</name><operator pos:start="69:58" pos:end="69:58">.</operator><name pos:start="69:59" pos:end="69:62">ptem</name></name></expr>;</expr_stmt>

                    <goto pos:start="71:21" pos:end="71:34">goto <name pos:start="71:26" pos:end="71:33">tlb_miss</name>;</goto>

                <case pos:start="73:17" pos:end="73:43">case <expr pos:start="73:22" pos:end="73:42"><name pos:start="73:22" pos:end="73:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <expr_stmt pos:start="75:21" pos:end="75:61"><expr pos:start="75:21" pos:end="75:60"><name pos:start="75:21" pos:end="75:39"><name pos:start="75:21" pos:end="75:22">cs</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:39">exception_index</name></name> <operator pos:start="75:41" pos:end="75:41">=</operator> <name pos:start="75:43" pos:end="75:60">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <goto pos:start="77:21" pos:end="77:39">goto <name pos:start="77:26" pos:end="77:38">tlb_miss_74xx</name>;</goto>

                <case pos:start="79:17" pos:end="79:42">case <expr pos:start="79:22" pos:end="79:41"><name pos:start="79:22" pos:end="79:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="81:17" pos:end="81:44">case <expr pos:start="81:22" pos:end="81:43"><name pos:start="81:22" pos:end="81:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="83:21" pos:end="83:60"><expr pos:start="83:21" pos:end="83:59"><name pos:start="83:21" pos:end="83:39"><name pos:start="83:21" pos:end="83:22">cs</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:39">exception_index</name></name> <operator pos:start="83:41" pos:end="83:41">=</operator> <name pos:start="83:43" pos:end="83:59">POWERPC_EXCP_ITLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:40"><expr pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:35"><name pos:start="85:21" pos:end="85:23">env</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:35">error_code</name></name> <operator pos:start="85:37" pos:end="85:37">=</operator> <literal type="number" pos:start="85:39" pos:end="85:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:53"><expr pos:start="87:21" pos:end="87:52"><name pos:start="87:21" pos:end="87:42"><name pos:start="87:21" pos:end="87:23">env</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:28">spr</name><index pos:start="87:29" pos:end="87:42">[<expr pos:start="87:30" pos:end="87:41"><name pos:start="87:30" pos:end="87:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="87:44" pos:end="87:44">=</operator> <name pos:start="87:46" pos:end="87:52">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:55"><expr pos:start="89:21" pos:end="89:54"><name pos:start="89:21" pos:end="89:41"><name pos:start="89:21" pos:end="89:23">env</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:28">spr</name><index pos:start="89:29" pos:end="89:41">[<expr pos:start="89:30" pos:end="89:40"><name pos:start="89:30" pos:end="89:40">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="89:43" pos:end="89:43">=</operator> <literal type="number" pos:start="89:45" pos:end="89:54">0x00000000</literal></expr>;</expr_stmt>

                    <break pos:start="91:21" pos:end="91:26">break;</break>

                <case pos:start="93:17" pos:end="93:42">case <expr pos:start="93:22" pos:end="93:41"><name pos:start="93:22" pos:end="93:41">POWERPC_MMU_BOOKE206</name></expr>:</case>

                    <expr_stmt pos:start="95:21" pos:end="95:67"><expr pos:start="95:21" pos:end="95:66"><call pos:start="95:21" pos:end="95:66"><name pos:start="95:21" pos:end="95:48">booke206_update_mas_tlb_miss</name><argument_list pos:start="95:49" pos:end="95:66">(<argument pos:start="95:50" pos:end="95:52"><expr pos:start="95:50" pos:end="95:52"><name pos:start="95:50" pos:end="95:52">env</name></expr></argument>, <argument pos:start="95:55" pos:end="95:61"><expr pos:start="95:55" pos:end="95:61"><name pos:start="95:55" pos:end="95:61">address</name></expr></argument>, <argument pos:start="95:64" pos:end="95:65"><expr pos:start="95:64" pos:end="95:65"><name pos:start="95:64" pos:end="95:65">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="97:21" pos:end="97:38">/* fall through */</comment>

                <case pos:start="99:17" pos:end="99:39">case <expr pos:start="99:22" pos:end="99:38"><name pos:start="99:22" pos:end="99:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <expr_stmt pos:start="101:21" pos:end="101:60"><expr pos:start="101:21" pos:end="101:59"><name pos:start="101:21" pos:end="101:39"><name pos:start="101:21" pos:end="101:22">cs</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:39">exception_index</name></name> <operator pos:start="101:41" pos:end="101:41">=</operator> <name pos:start="101:43" pos:end="101:59">POWERPC_EXCP_ITLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:40"><expr pos:start="103:21" pos:end="103:39"><name pos:start="103:21" pos:end="103:35"><name pos:start="103:21" pos:end="103:23">env</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:35">error_code</name></name> <operator pos:start="103:37" pos:end="103:37">=</operator> <literal type="number" pos:start="103:39" pos:end="103:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:55"><expr pos:start="105:21" pos:end="105:54"><name pos:start="105:21" pos:end="105:44"><name pos:start="105:21" pos:end="105:23">env</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:28">spr</name><index pos:start="105:29" pos:end="105:44">[<expr pos:start="105:30" pos:end="105:43"><name pos:start="105:30" pos:end="105:43">SPR_BOOKE_DEAR</name></expr>]</index></name> <operator pos:start="105:46" pos:end="105:46">=</operator> <name pos:start="105:48" pos:end="105:54">address</name></expr>;</expr_stmt>

                    <return pos:start="107:21" pos:end="107:30">return <expr pos:start="107:28" pos:end="107:29"><operator pos:start="107:28" pos:end="107:28">-</operator><literal type="number" pos:start="107:29" pos:end="107:29">1</literal></expr>;</return>

                <case pos:start="109:17" pos:end="109:40">case <expr pos:start="109:22" pos:end="109:39"><name pos:start="109:22" pos:end="109:39">POWERPC_MMU_MPC8xx</name></expr>:</case>

                    <comment type="block" pos:start="111:21" pos:end="111:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="113:21" pos:end="113:75"><expr pos:start="113:21" pos:end="113:74"><call pos:start="113:21" pos:end="113:74"><name pos:start="113:21" pos:end="113:29">cpu_abort</name><argument_list pos:start="113:30" pos:end="113:74">(<argument pos:start="113:31" pos:end="113:32"><expr pos:start="113:31" pos:end="113:32"><name pos:start="113:31" pos:end="113:32">cs</name></expr></argument>, <argument pos:start="113:35" pos:end="113:73"><expr pos:start="113:35" pos:end="113:73"><literal type="string" pos:start="113:35" pos:end="113:73">"MPC8xx MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="115:21" pos:end="115:26">break;</break>

                <case pos:start="117:17" pos:end="117:38">case <expr pos:start="117:22" pos:end="117:37"><name pos:start="117:22" pos:end="117:37">POWERPC_MMU_REAL</name></expr>:</case>

                    <expr_stmt pos:start="119:21" pos:end="121:54"><expr pos:start="119:21" pos:end="121:53"><call pos:start="119:21" pos:end="121:53"><name pos:start="119:21" pos:end="119:29">cpu_abort</name><argument_list pos:start="119:30" pos:end="121:53">(<argument pos:start="119:31" pos:end="119:32"><expr pos:start="119:31" pos:end="119:32"><name pos:start="119:31" pos:end="119:32">cs</name></expr></argument>, <argument pos:start="119:35" pos:end="121:52"><expr pos:start="119:35" pos:end="121:52"><literal type="string" pos:start="119:35" pos:end="119:76">"PowerPC in real mode should never raise "</literal>

                              <literal type="string" pos:start="121:31" pos:end="121:52">"any MMU exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="123:21" pos:end="123:30">return <expr pos:start="123:28" pos:end="123:29"><operator pos:start="123:28" pos:end="123:28">-</operator><literal type="number" pos:start="123:29" pos:end="123:29">1</literal></expr>;</return>

                <default pos:start="125:17" pos:end="125:24">default:</default>

                    <expr_stmt pos:start="127:21" pos:end="127:68"><expr pos:start="127:21" pos:end="127:67"><call pos:start="127:21" pos:end="127:67"><name pos:start="127:21" pos:end="127:29">cpu_abort</name><argument_list pos:start="127:30" pos:end="127:67">(<argument pos:start="127:31" pos:end="127:32"><expr pos:start="127:31" pos:end="127:32"><name pos:start="127:31" pos:end="127:32">cs</name></expr></argument>, <argument pos:start="127:35" pos:end="127:66"><expr pos:start="127:35" pos:end="127:66"><literal type="string" pos:start="127:35" pos:end="127:66">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="129:21" pos:end="129:30">return <expr pos:start="129:28" pos:end="129:29"><operator pos:start="129:28" pos:end="129:28">-</operator><literal type="number" pos:start="129:29" pos:end="129:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="133:17" pos:end="133:22">break;</break>

            <case pos:start="135:13" pos:end="135:20">case <expr pos:start="135:18" pos:end="135:19"><operator pos:start="135:18" pos:end="135:18">-</operator><literal type="number" pos:start="135:19" pos:end="135:19">2</literal></expr>:</case>

                <comment type="block" pos:start="137:17" pos:end="137:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="139:17" pos:end="139:55"><expr pos:start="139:17" pos:end="139:54"><name pos:start="139:17" pos:end="139:35"><name pos:start="139:17" pos:end="139:18">cs</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:35">exception_index</name></name> <operator pos:start="139:37" pos:end="139:37">=</operator> <name pos:start="139:39" pos:end="139:54">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:45"><expr pos:start="141:17" pos:end="141:44"><name pos:start="141:17" pos:end="141:31"><name pos:start="141:17" pos:end="141:19">env</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:31">error_code</name></name> <operator pos:start="141:33" pos:end="141:33">=</operator> <literal type="number" pos:start="141:35" pos:end="141:44">0x08000000</literal></expr>;</expr_stmt>

                <break pos:start="143:17" pos:end="143:22">break;</break>

            <case pos:start="145:13" pos:end="145:20">case <expr pos:start="145:18" pos:end="145:19"><operator pos:start="145:18" pos:end="145:18">-</operator><literal type="number" pos:start="145:19" pos:end="145:19">3</literal></expr>:</case>

                <comment type="block" pos:start="147:17" pos:end="147:53">/* No execute protection violation */</comment>

                <if_stmt pos:start="149:17" pos:end="155:17"><if pos:start="149:17" pos:end="155:17">if <condition pos:start="149:20" pos:end="151:61">(<expr pos:start="149:21" pos:end="151:60"><operator pos:start="149:21" pos:end="149:21">(</operator><name pos:start="149:22" pos:end="149:35"><name pos:start="149:22" pos:end="149:24">env</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:35">mmu_model</name></name> <operator pos:start="149:37" pos:end="149:38">==</operator> <name pos:start="149:40" pos:end="149:56">POWERPC_MMU_BOOKE</name><operator pos:start="149:57" pos:end="149:57">)</operator> <operator pos:start="149:59" pos:end="149:60">||</operator>

                    <operator pos:start="151:21" pos:end="151:21">(</operator><name pos:start="151:22" pos:end="151:35"><name pos:start="151:22" pos:end="151:24">env</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:35">mmu_model</name></name> <operator pos:start="151:37" pos:end="151:38">==</operator> <name pos:start="151:40" pos:end="151:59">POWERPC_MMU_BOOKE206</name><operator pos:start="151:60" pos:end="151:60">)</operator></expr>)</condition> <block pos:start="151:63" pos:end="155:17">{<block_content pos:start="153:21" pos:end="153:57">

                    <expr_stmt pos:start="153:21" pos:end="153:57"><expr pos:start="153:21" pos:end="153:56"><name pos:start="153:21" pos:end="153:43"><name pos:start="153:21" pos:end="153:23">env</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:28">spr</name><index pos:start="153:29" pos:end="153:43">[<expr pos:start="153:30" pos:end="153:42"><name pos:start="153:30" pos:end="153:42">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="153:45" pos:end="153:45">=</operator> <literal type="number" pos:start="153:47" pos:end="153:56">0x00000000</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:55"><expr pos:start="157:17" pos:end="157:54"><name pos:start="157:17" pos:end="157:35"><name pos:start="157:17" pos:end="157:18">cs</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:35">exception_index</name></name> <operator pos:start="157:37" pos:end="157:37">=</operator> <name pos:start="157:39" pos:end="157:54">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:45"><expr pos:start="159:17" pos:end="159:44"><name pos:start="159:17" pos:end="159:31"><name pos:start="159:17" pos:end="159:19">env</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:31">error_code</name></name> <operator pos:start="159:33" pos:end="159:33">=</operator> <literal type="number" pos:start="159:35" pos:end="159:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="161:17" pos:end="161:22">break;</break>

            <case pos:start="163:13" pos:end="163:20">case <expr pos:start="163:18" pos:end="163:19"><operator pos:start="163:18" pos:end="163:18">-</operator><literal type="number" pos:start="163:19" pos:end="163:19">4</literal></expr>:</case>

                <comment type="block" pos:start="165:17" pos:end="165:44">/* Direct store exception */</comment>

                <comment type="block" pos:start="167:17" pos:end="167:68">/* No code fetch is allowed in direct-store areas */</comment>

                <expr_stmt pos:start="169:17" pos:end="169:55"><expr pos:start="169:17" pos:end="169:54"><name pos:start="169:17" pos:end="169:35"><name pos:start="169:17" pos:end="169:18">cs</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:35">exception_index</name></name> <operator pos:start="169:37" pos:end="169:37">=</operator> <name pos:start="169:39" pos:end="169:54">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:45"><expr pos:start="171:17" pos:end="171:44"><name pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:19">env</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:31">error_code</name></name> <operator pos:start="171:33" pos:end="171:33">=</operator> <literal type="number" pos:start="171:35" pos:end="171:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="177:11" pos:end="450:0">else <block pos:start="177:16" pos:end="450:0">{<block_content pos:start="179:13" pos:end="439:13">

            <switch pos:start="179:13" pos:end="439:13">switch <condition pos:start="179:20" pos:end="179:24">(<expr pos:start="179:21" pos:end="179:23"><name pos:start="179:21" pos:end="179:23">ret</name></expr>)</condition> <block pos:start="179:26" pos:end="439:13">{<block_content pos:start="181:13" pos:end="437:22">

            <case pos:start="181:13" pos:end="181:20">case <expr pos:start="181:18" pos:end="181:19"><operator pos:start="181:18" pos:end="181:18">-</operator><literal type="number" pos:start="181:19" pos:end="181:19">1</literal></expr>:</case>

                <comment type="block" pos:start="183:17" pos:end="183:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="185:17" pos:end="309:17">switch <condition pos:start="185:24" pos:end="185:39">(<expr pos:start="185:25" pos:end="185:38"><name pos:start="185:25" pos:end="185:38"><name pos:start="185:25" pos:end="185:27">env</name><operator pos:start="185:28" pos:end="185:29">-&gt;</operator><name pos:start="185:30" pos:end="185:38">mmu_model</name></name></expr>)</condition> <block pos:start="185:41" pos:end="309:17">{<block_content pos:start="187:17" pos:end="307:30">

                <case pos:start="187:17" pos:end="187:42">case <expr pos:start="187:22" pos:end="187:41"><name pos:start="187:22" pos:end="187:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <if_stmt pos:start="189:21" pos:end="201:21"><if pos:start="189:21" pos:end="195:21">if <condition pos:start="189:24" pos:end="189:32">(<expr pos:start="189:25" pos:end="189:31"><name pos:start="189:25" pos:end="189:26">rw</name> <operator pos:start="189:28" pos:end="189:29">==</operator> <literal type="number" pos:start="189:31" pos:end="189:31">1</literal></expr>)</condition> <block pos:start="189:34" pos:end="195:21">{<block_content pos:start="191:25" pos:end="193:50">

                        <expr_stmt pos:start="191:25" pos:end="191:65"><expr pos:start="191:25" pos:end="191:64"><name pos:start="191:25" pos:end="191:43"><name pos:start="191:25" pos:end="191:26">cs</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:43">exception_index</name></name> <operator pos:start="191:45" pos:end="191:45">=</operator> <name pos:start="191:47" pos:end="191:64">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="193:25" pos:end="193:50"><expr pos:start="193:25" pos:end="193:49"><name pos:start="193:25" pos:end="193:39"><name pos:start="193:25" pos:end="193:27">env</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:39">error_code</name></name> <operator pos:start="193:41" pos:end="193:41">=</operator> <literal type="number" pos:start="193:43" pos:end="193:43">1</literal> <operator pos:start="193:45" pos:end="193:46">&lt;&lt;</operator> <literal type="number" pos:start="193:48" pos:end="193:49">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="195:23" pos:end="201:21">else <block pos:start="195:28" pos:end="201:21">{<block_content pos:start="197:25" pos:end="199:44">

                        <expr_stmt pos:start="197:25" pos:end="197:65"><expr pos:start="197:25" pos:end="197:64"><name pos:start="197:25" pos:end="197:43"><name pos:start="197:25" pos:end="197:26">cs</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:43">exception_index</name></name> <operator pos:start="197:45" pos:end="197:45">=</operator> <name pos:start="197:47" pos:end="197:64">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="199:25" pos:end="199:44"><expr pos:start="199:25" pos:end="199:43"><name pos:start="199:25" pos:end="199:39"><name pos:start="199:25" pos:end="199:27">env</name><operator pos:start="199:28" pos:end="199:29">-&gt;</operator><name pos:start="199:30" pos:end="199:39">error_code</name></name> <operator pos:start="199:41" pos:end="199:41">=</operator> <literal type="number" pos:start="199:43" pos:end="199:43">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:50"><expr pos:start="203:21" pos:end="203:49"><name pos:start="203:21" pos:end="203:39"><name pos:start="203:21" pos:end="203:23">env</name><operator pos:start="203:24" pos:end="203:25">-&gt;</operator><name pos:start="203:26" pos:end="203:28">spr</name><index pos:start="203:29" pos:end="203:39">[<expr pos:start="203:30" pos:end="203:38"><name pos:start="203:30" pos:end="203:38">SPR_DMISS</name></expr>]</index></name> <operator pos:start="203:41" pos:end="203:41">=</operator> <name pos:start="203:43" pos:end="203:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:63"><expr pos:start="205:21" pos:end="205:62"><name pos:start="205:21" pos:end="205:38"><name pos:start="205:21" pos:end="205:23">env</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:28">spr</name><index pos:start="205:29" pos:end="205:38">[<expr pos:start="205:30" pos:end="205:37"><name pos:start="205:30" pos:end="205:37">SPR_DCMP</name></expr>]</index></name> <operator pos:start="205:40" pos:end="205:40">=</operator> <literal type="number" pos:start="205:42" pos:end="205:51">0x80000000</literal> <operator pos:start="205:53" pos:end="205:53">|</operator> <name pos:start="205:55" pos:end="205:62"><name pos:start="205:55" pos:end="205:57">ctx</name><operator pos:start="205:58" pos:end="205:58">.</operator><name pos:start="205:59" pos:end="205:62">ptem</name></name></expr>;</expr_stmt>

                <label pos:start="207:17" pos:end="207:25"><name pos:start="207:17" pos:end="207:24">tlb_miss</name>:</label>

                    <expr_stmt pos:start="209:21" pos:end="209:53"><expr pos:start="209:21" pos:end="209:52"><name pos:start="209:21" pos:end="209:35"><name pos:start="209:21" pos:end="209:23">env</name><operator pos:start="209:24" pos:end="209:25">-&gt;</operator><name pos:start="209:26" pos:end="209:35">error_code</name></name> <operator pos:start="209:37" pos:end="209:38">|=</operator> <name pos:start="209:40" pos:end="209:46"><name pos:start="209:40" pos:end="209:42">ctx</name><operator pos:start="209:43" pos:end="209:43">.</operator><name pos:start="209:44" pos:end="209:46">key</name></name> <operator pos:start="209:48" pos:end="209:49">&lt;&lt;</operator> <literal type="number" pos:start="209:51" pos:end="209:52">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="213:60"><expr pos:start="211:21" pos:end="213:59"><name pos:start="211:21" pos:end="211:39"><name pos:start="211:21" pos:end="211:23">env</name><operator pos:start="211:24" pos:end="211:25">-&gt;</operator><name pos:start="211:26" pos:end="211:28">spr</name><index pos:start="211:29" pos:end="211:39">[<expr pos:start="211:30" pos:end="211:38"><name pos:start="211:30" pos:end="211:38">SPR_HASH1</name></expr>]</index></name> <operator pos:start="211:41" pos:end="211:41">=</operator> <name pos:start="211:43" pos:end="211:56"><name pos:start="211:43" pos:end="211:45">env</name><operator pos:start="211:46" pos:end="211:47">-&gt;</operator><name pos:start="211:48" pos:end="211:56">htab_base</name></name> <operator pos:start="211:58" pos:end="211:58">+</operator>

                        <call pos:start="213:25" pos:end="213:59"><name pos:start="213:25" pos:end="213:41">get_pteg_offset32</name><argument_list pos:start="213:42" pos:end="213:59">(<argument pos:start="213:43" pos:end="213:45"><expr pos:start="213:43" pos:end="213:45"><name pos:start="213:43" pos:end="213:45">cpu</name></expr></argument>, <argument pos:start="213:48" pos:end="213:58"><expr pos:start="213:48" pos:end="213:58"><name pos:start="213:48" pos:end="213:58"><name pos:start="213:48" pos:end="213:50">ctx</name><operator pos:start="213:51" pos:end="213:51">.</operator><name pos:start="213:52" pos:end="213:55">hash</name><index pos:start="213:56" pos:end="213:58">[<expr pos:start="213:57" pos:end="213:57"><literal type="number" pos:start="213:57" pos:end="213:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="217:60"><expr pos:start="215:21" pos:end="217:59"><name pos:start="215:21" pos:end="215:39"><name pos:start="215:21" pos:end="215:23">env</name><operator pos:start="215:24" pos:end="215:25">-&gt;</operator><name pos:start="215:26" pos:end="215:28">spr</name><index pos:start="215:29" pos:end="215:39">[<expr pos:start="215:30" pos:end="215:38"><name pos:start="215:30" pos:end="215:38">SPR_HASH2</name></expr>]</index></name> <operator pos:start="215:41" pos:end="215:41">=</operator> <name pos:start="215:43" pos:end="215:56"><name pos:start="215:43" pos:end="215:45">env</name><operator pos:start="215:46" pos:end="215:47">-&gt;</operator><name pos:start="215:48" pos:end="215:56">htab_base</name></name> <operator pos:start="215:58" pos:end="215:58">+</operator>

                        <call pos:start="217:25" pos:end="217:59"><name pos:start="217:25" pos:end="217:41">get_pteg_offset32</name><argument_list pos:start="217:42" pos:end="217:59">(<argument pos:start="217:43" pos:end="217:45"><expr pos:start="217:43" pos:end="217:45"><name pos:start="217:43" pos:end="217:45">cpu</name></expr></argument>, <argument pos:start="217:48" pos:end="217:58"><expr pos:start="217:48" pos:end="217:58"><name pos:start="217:48" pos:end="217:58"><name pos:start="217:48" pos:end="217:50">ctx</name><operator pos:start="217:51" pos:end="217:51">.</operator><name pos:start="217:52" pos:end="217:55">hash</name><index pos:start="217:56" pos:end="217:58">[<expr pos:start="217:57" pos:end="217:57"><literal type="number" pos:start="217:57" pos:end="217:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="219:21" pos:end="219:26">break;</break>

                <case pos:start="221:17" pos:end="221:43">case <expr pos:start="221:22" pos:end="221:42"><name pos:start="221:22" pos:end="221:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <if_stmt pos:start="223:21" pos:end="231:21"><if pos:start="223:21" pos:end="227:21">if <condition pos:start="223:24" pos:end="223:32">(<expr pos:start="223:25" pos:end="223:31"><name pos:start="223:25" pos:end="223:26">rw</name> <operator pos:start="223:28" pos:end="223:29">==</operator> <literal type="number" pos:start="223:31" pos:end="223:31">1</literal></expr>)</condition> <block pos:start="223:34" pos:end="227:21">{<block_content pos:start="225:25" pos:end="225:65">

                        <expr_stmt pos:start="225:25" pos:end="225:65"><expr pos:start="225:25" pos:end="225:64"><name pos:start="225:25" pos:end="225:43"><name pos:start="225:25" pos:end="225:26">cs</name><operator pos:start="225:27" pos:end="225:28">-&gt;</operator><name pos:start="225:29" pos:end="225:43">exception_index</name></name> <operator pos:start="225:45" pos:end="225:45">=</operator> <name pos:start="225:47" pos:end="225:64">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="227:23" pos:end="231:21">else <block pos:start="227:28" pos:end="231:21">{<block_content pos:start="229:25" pos:end="229:65">

                        <expr_stmt pos:start="229:25" pos:end="229:65"><expr pos:start="229:25" pos:end="229:64"><name pos:start="229:25" pos:end="229:43"><name pos:start="229:25" pos:end="229:26">cs</name><operator pos:start="229:27" pos:end="229:28">-&gt;</operator><name pos:start="229:29" pos:end="229:43">exception_index</name></name> <operator pos:start="229:45" pos:end="229:45">=</operator> <name pos:start="229:47" pos:end="229:64">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                <label pos:start="233:17" pos:end="233:30"><name pos:start="233:17" pos:end="233:29">tlb_miss_74xx</name>:</label>

                    <comment type="block" pos:start="235:21" pos:end="235:49">/* Implement LRU algorithm */</comment>

                    <expr_stmt pos:start="237:21" pos:end="237:52"><expr pos:start="237:21" pos:end="237:51"><name pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:23">env</name><operator pos:start="237:24" pos:end="237:25">-&gt;</operator><name pos:start="237:26" pos:end="237:35">error_code</name></name> <operator pos:start="237:37" pos:end="237:37">=</operator> <name pos:start="237:39" pos:end="237:45"><name pos:start="237:39" pos:end="237:41">ctx</name><operator pos:start="237:42" pos:end="237:42">.</operator><name pos:start="237:43" pos:end="237:45">key</name></name> <operator pos:start="237:47" pos:end="237:48">&lt;&lt;</operator> <literal type="number" pos:start="237:50" pos:end="237:51">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="239:21" pos:end="241:67"><expr pos:start="239:21" pos:end="241:66"><name pos:start="239:21" pos:end="239:41"><name pos:start="239:21" pos:end="239:23">env</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:28">spr</name><index pos:start="239:29" pos:end="239:41">[<expr pos:start="239:30" pos:end="239:40"><name pos:start="239:30" pos:end="239:40">SPR_TLBMISS</name></expr>]</index></name> <operator pos:start="239:43" pos:end="239:43">=</operator> <operator pos:start="239:45" pos:end="239:45">(</operator><name pos:start="239:46" pos:end="239:52">address</name> <operator pos:start="239:54" pos:end="239:54">&amp;</operator> <operator pos:start="239:56" pos:end="239:56">~</operator><operator pos:start="239:57" pos:end="239:57">(</operator><operator pos:start="239:58" pos:end="239:58">(</operator><name pos:start="239:59" pos:end="239:70">target_ulong</name><operator pos:start="239:71" pos:end="239:71">)</operator><literal type="number" pos:start="239:72" pos:end="239:74">0x3</literal><operator pos:start="239:75" pos:end="239:75">)</operator><operator pos:start="239:76" pos:end="239:76">)</operator> <operator pos:start="239:78" pos:end="239:78">|</operator>

                        <operator pos:start="241:25" pos:end="241:25">(</operator><operator pos:start="241:26" pos:end="241:26">(</operator><name pos:start="241:27" pos:end="241:39"><name pos:start="241:27" pos:end="241:29">env</name><operator pos:start="241:30" pos:end="241:31">-&gt;</operator><name pos:start="241:32" pos:end="241:39">last_way</name></name> <operator pos:start="241:41" pos:end="241:41">+</operator> <literal type="number" pos:start="241:43" pos:end="241:43">1</literal><operator pos:start="241:44" pos:end="241:44">)</operator> <operator pos:start="241:46" pos:end="241:46">&amp;</operator> <operator pos:start="241:48" pos:end="241:48">(</operator><name pos:start="241:49" pos:end="241:60"><name pos:start="241:49" pos:end="241:51">env</name><operator pos:start="241:52" pos:end="241:53">-&gt;</operator><name pos:start="241:54" pos:end="241:60">nb_ways</name></name> <operator pos:start="241:62" pos:end="241:62">-</operator> <literal type="number" pos:start="241:64" pos:end="241:64">1</literal><operator pos:start="241:65" pos:end="241:65">)</operator><operator pos:start="241:66" pos:end="241:66">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="243:21" pos:end="243:64"><expr pos:start="243:21" pos:end="243:63"><name pos:start="243:21" pos:end="243:39"><name pos:start="243:21" pos:end="243:23">env</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:28">spr</name><index pos:start="243:29" pos:end="243:39">[<expr pos:start="243:30" pos:end="243:38"><name pos:start="243:30" pos:end="243:38">SPR_PTEHI</name></expr>]</index></name> <operator pos:start="243:41" pos:end="243:41">=</operator> <literal type="number" pos:start="243:43" pos:end="243:52">0x80000000</literal> <operator pos:start="243:54" pos:end="243:54">|</operator> <name pos:start="243:56" pos:end="243:63"><name pos:start="243:56" pos:end="243:58">ctx</name><operator pos:start="243:59" pos:end="243:59">.</operator><name pos:start="243:60" pos:end="243:63">ptem</name></name></expr>;</expr_stmt>

                    <break pos:start="245:21" pos:end="245:26">break;</break>

                <case pos:start="247:17" pos:end="247:42">case <expr pos:start="247:22" pos:end="247:41"><name pos:start="247:22" pos:end="247:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="249:17" pos:end="249:44">case <expr pos:start="249:22" pos:end="249:43"><name pos:start="249:22" pos:end="249:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="251:21" pos:end="251:60"><expr pos:start="251:21" pos:end="251:59"><name pos:start="251:21" pos:end="251:39"><name pos:start="251:21" pos:end="251:22">cs</name><operator pos:start="251:23" pos:end="251:24">-&gt;</operator><name pos:start="251:25" pos:end="251:39">exception_index</name></name> <operator pos:start="251:41" pos:end="251:41">=</operator> <name pos:start="251:43" pos:end="251:59">POWERPC_EXCP_DTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="253:21" pos:end="253:40"><expr pos:start="253:21" pos:end="253:39"><name pos:start="253:21" pos:end="253:35"><name pos:start="253:21" pos:end="253:23">env</name><operator pos:start="253:24" pos:end="253:25">-&gt;</operator><name pos:start="253:26" pos:end="253:35">error_code</name></name> <operator pos:start="253:37" pos:end="253:37">=</operator> <literal type="number" pos:start="253:39" pos:end="253:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="255:21" pos:end="255:53"><expr pos:start="255:21" pos:end="255:52"><name pos:start="255:21" pos:end="255:42"><name pos:start="255:21" pos:end="255:23">env</name><operator pos:start="255:24" pos:end="255:25">-&gt;</operator><name pos:start="255:26" pos:end="255:28">spr</name><index pos:start="255:29" pos:end="255:42">[<expr pos:start="255:30" pos:end="255:41"><name pos:start="255:30" pos:end="255:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="255:44" pos:end="255:44">=</operator> <name pos:start="255:46" pos:end="255:52">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="257:21" pos:end="265:21"><if pos:start="257:21" pos:end="261:21">if <condition pos:start="257:24" pos:end="257:27">(<expr pos:start="257:25" pos:end="257:26"><name pos:start="257:25" pos:end="257:26">rw</name></expr>)</condition> <block pos:start="257:29" pos:end="261:21">{<block_content pos:start="259:25" pos:end="259:59">

                        <expr_stmt pos:start="259:25" pos:end="259:59"><expr pos:start="259:25" pos:end="259:58"><name pos:start="259:25" pos:end="259:45"><name pos:start="259:25" pos:end="259:27">env</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:32">spr</name><index pos:start="259:33" pos:end="259:45">[<expr pos:start="259:34" pos:end="259:44"><name pos:start="259:34" pos:end="259:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="259:47" pos:end="259:47">=</operator> <literal type="number" pos:start="259:49" pos:end="259:58">0x00800000</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="261:23" pos:end="265:21">else <block pos:start="261:28" pos:end="265:21">{<block_content pos:start="263:25" pos:end="263:59">

                        <expr_stmt pos:start="263:25" pos:end="263:59"><expr pos:start="263:25" pos:end="263:58"><name pos:start="263:25" pos:end="263:45"><name pos:start="263:25" pos:end="263:27">env</name><operator pos:start="263:28" pos:end="263:29">-&gt;</operator><name pos:start="263:30" pos:end="263:32">spr</name><index pos:start="263:33" pos:end="263:45">[<expr pos:start="263:34" pos:end="263:44"><name pos:start="263:34" pos:end="263:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="263:47" pos:end="263:47">=</operator> <literal type="number" pos:start="263:49" pos:end="263:58">0x00000000</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="267:21" pos:end="267:26">break;</break>

                <case pos:start="269:17" pos:end="269:40">case <expr pos:start="269:22" pos:end="269:39"><name pos:start="269:22" pos:end="269:39">POWERPC_MMU_MPC8xx</name></expr>:</case>

                    <comment type="block" pos:start="271:21" pos:end="271:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="273:21" pos:end="273:75"><expr pos:start="273:21" pos:end="273:74"><call pos:start="273:21" pos:end="273:74"><name pos:start="273:21" pos:end="273:29">cpu_abort</name><argument_list pos:start="273:30" pos:end="273:74">(<argument pos:start="273:31" pos:end="273:32"><expr pos:start="273:31" pos:end="273:32"><name pos:start="273:31" pos:end="273:32">cs</name></expr></argument>, <argument pos:start="273:35" pos:end="273:73"><expr pos:start="273:35" pos:end="273:73"><literal type="string" pos:start="273:35" pos:end="273:73">"MPC8xx MMU model is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="275:21" pos:end="275:26">break;</break>

                <case pos:start="277:17" pos:end="277:42">case <expr pos:start="277:22" pos:end="277:41"><name pos:start="277:22" pos:end="277:41">POWERPC_MMU_BOOKE206</name></expr>:</case>

                    <expr_stmt pos:start="279:21" pos:end="279:67"><expr pos:start="279:21" pos:end="279:66"><call pos:start="279:21" pos:end="279:66"><name pos:start="279:21" pos:end="279:48">booke206_update_mas_tlb_miss</name><argument_list pos:start="279:49" pos:end="279:66">(<argument pos:start="279:50" pos:end="279:52"><expr pos:start="279:50" pos:end="279:52"><name pos:start="279:50" pos:end="279:52">env</name></expr></argument>, <argument pos:start="279:55" pos:end="279:61"><expr pos:start="279:55" pos:end="279:61"><name pos:start="279:55" pos:end="279:61">address</name></expr></argument>, <argument pos:start="279:64" pos:end="279:65"><expr pos:start="279:64" pos:end="279:65"><name pos:start="279:64" pos:end="279:65">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="281:21" pos:end="281:38">/* fall through */</comment>

                <case pos:start="283:17" pos:end="283:39">case <expr pos:start="283:22" pos:end="283:38"><name pos:start="283:22" pos:end="283:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <expr_stmt pos:start="285:21" pos:end="285:60"><expr pos:start="285:21" pos:end="285:59"><name pos:start="285:21" pos:end="285:39"><name pos:start="285:21" pos:end="285:22">cs</name><operator pos:start="285:23" pos:end="285:24">-&gt;</operator><name pos:start="285:25" pos:end="285:39">exception_index</name></name> <operator pos:start="285:41" pos:end="285:41">=</operator> <name pos:start="285:43" pos:end="285:59">POWERPC_EXCP_DTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="287:21" pos:end="287:40"><expr pos:start="287:21" pos:end="287:39"><name pos:start="287:21" pos:end="287:35"><name pos:start="287:21" pos:end="287:23">env</name><operator pos:start="287:24" pos:end="287:25">-&gt;</operator><name pos:start="287:26" pos:end="287:35">error_code</name></name> <operator pos:start="287:37" pos:end="287:37">=</operator> <literal type="number" pos:start="287:39" pos:end="287:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="289:21" pos:end="289:55"><expr pos:start="289:21" pos:end="289:54"><name pos:start="289:21" pos:end="289:44"><name pos:start="289:21" pos:end="289:23">env</name><operator pos:start="289:24" pos:end="289:25">-&gt;</operator><name pos:start="289:26" pos:end="289:28">spr</name><index pos:start="289:29" pos:end="289:44">[<expr pos:start="289:30" pos:end="289:43"><name pos:start="289:30" pos:end="289:43">SPR_BOOKE_DEAR</name></expr>]</index></name> <operator pos:start="289:46" pos:end="289:46">=</operator> <name pos:start="289:48" pos:end="289:54">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="291:21" pos:end="291:62"><expr pos:start="291:21" pos:end="291:61"><name pos:start="291:21" pos:end="291:43"><name pos:start="291:21" pos:end="291:23">env</name><operator pos:start="291:24" pos:end="291:25">-&gt;</operator><name pos:start="291:26" pos:end="291:28">spr</name><index pos:start="291:29" pos:end="291:43">[<expr pos:start="291:30" pos:end="291:42"><name pos:start="291:30" pos:end="291:42">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="291:45" pos:end="291:45">=</operator> <ternary pos:start="291:47" pos:end="291:61"><condition pos:start="291:47" pos:end="291:50"><expr pos:start="291:47" pos:end="291:48"><name pos:start="291:47" pos:end="291:48">rw</name></expr> ?</condition><then pos:start="291:52" pos:end="291:57"> <expr pos:start="291:52" pos:end="291:57"><name pos:start="291:52" pos:end="291:57">ESR_ST</name></expr> </then><else pos:start="291:59" pos:end="291:61">: <expr pos:start="291:61" pos:end="291:61"><literal type="number" pos:start="291:61" pos:end="291:61">0</literal></expr></else></ternary></expr>;</expr_stmt>

                    <return pos:start="293:21" pos:end="293:30">return <expr pos:start="293:28" pos:end="293:29"><operator pos:start="293:28" pos:end="293:28">-</operator><literal type="number" pos:start="293:29" pos:end="293:29">1</literal></expr>;</return>

                <case pos:start="295:17" pos:end="295:38">case <expr pos:start="295:22" pos:end="295:37"><name pos:start="295:22" pos:end="295:37">POWERPC_MMU_REAL</name></expr>:</case>

                    <expr_stmt pos:start="297:21" pos:end="299:54"><expr pos:start="297:21" pos:end="299:53"><call pos:start="297:21" pos:end="299:53"><name pos:start="297:21" pos:end="297:29">cpu_abort</name><argument_list pos:start="297:30" pos:end="299:53">(<argument pos:start="297:31" pos:end="297:32"><expr pos:start="297:31" pos:end="297:32"><name pos:start="297:31" pos:end="297:32">cs</name></expr></argument>, <argument pos:start="297:35" pos:end="299:52"><expr pos:start="297:35" pos:end="299:52"><literal type="string" pos:start="297:35" pos:end="297:76">"PowerPC in real mode should never raise "</literal>

                              <literal type="string" pos:start="299:31" pos:end="299:52">"any MMU exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="301:21" pos:end="301:30">return <expr pos:start="301:28" pos:end="301:29"><operator pos:start="301:28" pos:end="301:28">-</operator><literal type="number" pos:start="301:29" pos:end="301:29">1</literal></expr>;</return>

                <default pos:start="303:17" pos:end="303:24">default:</default>

                    <expr_stmt pos:start="305:21" pos:end="305:68"><expr pos:start="305:21" pos:end="305:67"><call pos:start="305:21" pos:end="305:67"><name pos:start="305:21" pos:end="305:29">cpu_abort</name><argument_list pos:start="305:30" pos:end="305:67">(<argument pos:start="305:31" pos:end="305:32"><expr pos:start="305:31" pos:end="305:32"><name pos:start="305:31" pos:end="305:32">cs</name></expr></argument>, <argument pos:start="305:35" pos:end="305:66"><expr pos:start="305:35" pos:end="305:66"><literal type="string" pos:start="305:35" pos:end="305:66">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="307:21" pos:end="307:30">return <expr pos:start="307:28" pos:end="307:29"><operator pos:start="307:28" pos:end="307:28">-</operator><literal type="number" pos:start="307:29" pos:end="307:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="311:17" pos:end="311:22">break;</break>

            <case pos:start="313:13" pos:end="313:20">case <expr pos:start="313:18" pos:end="313:19"><operator pos:start="313:18" pos:end="313:18">-</operator><literal type="number" pos:start="313:19" pos:end="313:19">2</literal></expr>:</case>

                <comment type="block" pos:start="315:17" pos:end="315:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="317:17" pos:end="317:55"><expr pos:start="317:17" pos:end="317:54"><name pos:start="317:17" pos:end="317:35"><name pos:start="317:17" pos:end="317:18">cs</name><operator pos:start="317:19" pos:end="317:20">-&gt;</operator><name pos:start="317:21" pos:end="317:35">exception_index</name></name> <operator pos:start="317:37" pos:end="317:37">=</operator> <name pos:start="317:39" pos:end="317:54">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:36"><expr pos:start="319:17" pos:end="319:35"><name pos:start="319:17" pos:end="319:31"><name pos:start="319:17" pos:end="319:19">env</name><operator pos:start="319:20" pos:end="319:21">-&gt;</operator><name pos:start="319:22" pos:end="319:31">error_code</name></name> <operator pos:start="319:33" pos:end="319:33">=</operator> <literal type="number" pos:start="319:35" pos:end="319:35">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="321:17" pos:end="355:17"><if pos:start="321:17" pos:end="333:17">if <condition pos:start="321:20" pos:end="323:64">(<expr pos:start="321:21" pos:end="323:63"><name pos:start="321:21" pos:end="321:34"><name pos:start="321:21" pos:end="321:23">env</name><operator pos:start="321:24" pos:end="321:25">-&gt;</operator><name pos:start="321:26" pos:end="321:34">mmu_model</name></name> <operator pos:start="321:36" pos:end="321:37">==</operator> <name pos:start="321:39" pos:end="321:58">POWERPC_MMU_SOFT_4xx</name>

                    <operator pos:start="323:21" pos:end="323:22">||</operator> <name pos:start="323:24" pos:end="323:37"><name pos:start="323:24" pos:end="323:26">env</name><operator pos:start="323:27" pos:end="323:28">-&gt;</operator><name pos:start="323:29" pos:end="323:37">mmu_model</name></name> <operator pos:start="323:39" pos:end="323:40">==</operator> <name pos:start="323:42" pos:end="323:63">POWERPC_MMU_SOFT_4xx_Z</name></expr>)</condition> <block pos:start="323:66" pos:end="333:17">{<block_content pos:start="325:21" pos:end="331:21">

                    <expr_stmt pos:start="325:21" pos:end="325:53"><expr pos:start="325:21" pos:end="325:52"><name pos:start="325:21" pos:end="325:42"><name pos:start="325:21" pos:end="325:23">env</name><operator pos:start="325:24" pos:end="325:25">-&gt;</operator><name pos:start="325:26" pos:end="325:28">spr</name><index pos:start="325:29" pos:end="325:42">[<expr pos:start="325:30" pos:end="325:41"><name pos:start="325:30" pos:end="325:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="325:44" pos:end="325:44">=</operator> <name pos:start="325:46" pos:end="325:52">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="327:21" pos:end="331:21"><if pos:start="327:21" pos:end="331:21">if <condition pos:start="327:24" pos:end="327:27">(<expr pos:start="327:25" pos:end="327:26"><name pos:start="327:25" pos:end="327:26">rw</name></expr>)</condition> <block pos:start="327:29" pos:end="331:21">{<block_content pos:start="329:25" pos:end="329:60">

                        <expr_stmt pos:start="329:25" pos:end="329:60"><expr pos:start="329:25" pos:end="329:59"><name pos:start="329:25" pos:end="329:45"><name pos:start="329:25" pos:end="329:27">env</name><operator pos:start="329:28" pos:end="329:29">-&gt;</operator><name pos:start="329:30" pos:end="329:32">spr</name><index pos:start="329:33" pos:end="329:45">[<expr pos:start="329:34" pos:end="329:44"><name pos:start="329:34" pos:end="329:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="329:47" pos:end="329:48">|=</operator> <literal type="number" pos:start="329:50" pos:end="329:59">0x00800000</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="333:19" pos:end="341:17">else if <condition pos:start="333:27" pos:end="335:68">(<expr pos:start="333:28" pos:end="335:67"><operator pos:start="333:28" pos:end="333:28">(</operator><name pos:start="333:29" pos:end="333:42"><name pos:start="333:29" pos:end="333:31">env</name><operator pos:start="333:32" pos:end="333:33">-&gt;</operator><name pos:start="333:34" pos:end="333:42">mmu_model</name></name> <operator pos:start="333:44" pos:end="333:45">==</operator> <name pos:start="333:47" pos:end="333:63">POWERPC_MMU_BOOKE</name><operator pos:start="333:64" pos:end="333:64">)</operator> <operator pos:start="333:66" pos:end="333:67">||</operator>

                           <operator pos:start="335:28" pos:end="335:28">(</operator><name pos:start="335:29" pos:end="335:42"><name pos:start="335:29" pos:end="335:31">env</name><operator pos:start="335:32" pos:end="335:33">-&gt;</operator><name pos:start="335:34" pos:end="335:42">mmu_model</name></name> <operator pos:start="335:44" pos:end="335:45">==</operator> <name pos:start="335:47" pos:end="335:66">POWERPC_MMU_BOOKE206</name><operator pos:start="335:67" pos:end="335:67">)</operator></expr>)</condition> <block pos:start="335:70" pos:end="341:17">{<block_content pos:start="337:21" pos:end="339:62">

                    <expr_stmt pos:start="337:21" pos:end="337:55"><expr pos:start="337:21" pos:end="337:54"><name pos:start="337:21" pos:end="337:44"><name pos:start="337:21" pos:end="337:23">env</name><operator pos:start="337:24" pos:end="337:25">-&gt;</operator><name pos:start="337:26" pos:end="337:28">spr</name><index pos:start="337:29" pos:end="337:44">[<expr pos:start="337:30" pos:end="337:43"><name pos:start="337:30" pos:end="337:43">SPR_BOOKE_DEAR</name></expr>]</index></name> <operator pos:start="337:46" pos:end="337:46">=</operator> <name pos:start="337:48" pos:end="337:54">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="339:21" pos:end="339:62"><expr pos:start="339:21" pos:end="339:61"><name pos:start="339:21" pos:end="339:43"><name pos:start="339:21" pos:end="339:23">env</name><operator pos:start="339:24" pos:end="339:25">-&gt;</operator><name pos:start="339:26" pos:end="339:28">spr</name><index pos:start="339:29" pos:end="339:43">[<expr pos:start="339:30" pos:end="339:42"><name pos:start="339:30" pos:end="339:42">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="339:45" pos:end="339:45">=</operator> <ternary pos:start="339:47" pos:end="339:61"><condition pos:start="339:47" pos:end="339:50"><expr pos:start="339:47" pos:end="339:48"><name pos:start="339:47" pos:end="339:48">rw</name></expr> ?</condition><then pos:start="339:52" pos:end="339:57"> <expr pos:start="339:52" pos:end="339:57"><name pos:start="339:52" pos:end="339:57">ESR_ST</name></expr> </then><else pos:start="339:59" pos:end="339:61">: <expr pos:start="339:61" pos:end="339:61"><literal type="number" pos:start="339:61" pos:end="339:61">0</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="341:19" pos:end="355:17">else <block pos:start="341:24" pos:end="355:17">{<block_content pos:start="343:21" pos:end="353:21">

                    <expr_stmt pos:start="343:21" pos:end="343:48"><expr pos:start="343:21" pos:end="343:47"><name pos:start="343:21" pos:end="343:37"><name pos:start="343:21" pos:end="343:23">env</name><operator pos:start="343:24" pos:end="343:25">-&gt;</operator><name pos:start="343:26" pos:end="343:28">spr</name><index pos:start="343:29" pos:end="343:37">[<expr pos:start="343:30" pos:end="343:36"><name pos:start="343:30" pos:end="343:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="343:39" pos:end="343:39">=</operator> <name pos:start="343:41" pos:end="343:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="345:21" pos:end="353:21"><if pos:start="345:21" pos:end="349:21">if <condition pos:start="345:24" pos:end="345:32">(<expr pos:start="345:25" pos:end="345:31"><name pos:start="345:25" pos:end="345:26">rw</name> <operator pos:start="345:28" pos:end="345:29">==</operator> <literal type="number" pos:start="345:31" pos:end="345:31">1</literal></expr>)</condition> <block pos:start="345:34" pos:end="349:21">{<block_content pos:start="347:25" pos:end="347:57">

                        <expr_stmt pos:start="347:25" pos:end="347:57"><expr pos:start="347:25" pos:end="347:56"><name pos:start="347:25" pos:end="347:43"><name pos:start="347:25" pos:end="347:27">env</name><operator pos:start="347:28" pos:end="347:29">-&gt;</operator><name pos:start="347:30" pos:end="347:32">spr</name><index pos:start="347:33" pos:end="347:43">[<expr pos:start="347:34" pos:end="347:42"><name pos:start="347:34" pos:end="347:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="347:45" pos:end="347:45">=</operator> <literal type="number" pos:start="347:47" pos:end="347:56">0x0A000000</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="349:23" pos:end="353:21">else <block pos:start="349:28" pos:end="353:21">{<block_content pos:start="351:25" pos:end="351:57">

                        <expr_stmt pos:start="351:25" pos:end="351:57"><expr pos:start="351:25" pos:end="351:56"><name pos:start="351:25" pos:end="351:43"><name pos:start="351:25" pos:end="351:27">env</name><operator pos:start="351:28" pos:end="351:29">-&gt;</operator><name pos:start="351:30" pos:end="351:32">spr</name><index pos:start="351:33" pos:end="351:43">[<expr pos:start="351:34" pos:end="351:42"><name pos:start="351:34" pos:end="351:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="351:45" pos:end="351:45">=</operator> <literal type="number" pos:start="351:47" pos:end="351:56">0x08000000</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="357:17" pos:end="357:22">break;</break>

            <case pos:start="359:13" pos:end="359:20">case <expr pos:start="359:18" pos:end="359:19"><operator pos:start="359:18" pos:end="359:18">-</operator><literal type="number" pos:start="359:19" pos:end="359:19">4</literal></expr>:</case>

                <comment type="block" pos:start="361:17" pos:end="361:44">/* Direct store exception */</comment>

                <switch pos:start="363:17" pos:end="435:17">switch <condition pos:start="363:24" pos:end="363:36">(<expr pos:start="363:25" pos:end="363:35"><name pos:start="363:25" pos:end="363:35">access_type</name></expr>)</condition> <block pos:start="363:38" pos:end="435:17">{<block_content pos:start="365:17" pos:end="433:26">

                <case pos:start="365:17" pos:end="365:34">case <expr pos:start="365:22" pos:end="365:33"><name pos:start="365:22" pos:end="365:33">ACCESS_FLOAT</name></expr>:</case>

                    <comment type="block" pos:start="367:21" pos:end="367:51">/* Floating point load/store */</comment>

                    <expr_stmt pos:start="369:21" pos:end="369:61"><expr pos:start="369:21" pos:end="369:60"><name pos:start="369:21" pos:end="369:39"><name pos:start="369:21" pos:end="369:22">cs</name><operator pos:start="369:23" pos:end="369:24">-&gt;</operator><name pos:start="369:25" pos:end="369:39">exception_index</name></name> <operator pos:start="369:41" pos:end="369:41">=</operator> <name pos:start="369:43" pos:end="369:60">POWERPC_EXCP_ALIGN</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="371:21" pos:end="371:60"><expr pos:start="371:21" pos:end="371:59"><name pos:start="371:21" pos:end="371:35"><name pos:start="371:21" pos:end="371:23">env</name><operator pos:start="371:24" pos:end="371:25">-&gt;</operator><name pos:start="371:26" pos:end="371:35">error_code</name></name> <operator pos:start="371:37" pos:end="371:37">=</operator> <name pos:start="371:39" pos:end="371:59">POWERPC_EXCP_ALIGN_FP</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="373:21" pos:end="373:48"><expr pos:start="373:21" pos:end="373:47"><name pos:start="373:21" pos:end="373:37"><name pos:start="373:21" pos:end="373:23">env</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:28">spr</name><index pos:start="373:29" pos:end="373:37">[<expr pos:start="373:30" pos:end="373:36"><name pos:start="373:30" pos:end="373:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="373:39" pos:end="373:39">=</operator> <name pos:start="373:41" pos:end="373:47">address</name></expr>;</expr_stmt>

                    <break pos:start="375:21" pos:end="375:26">break;</break>

                <case pos:start="377:17" pos:end="377:32">case <expr pos:start="377:22" pos:end="377:31"><name pos:start="377:22" pos:end="377:31">ACCESS_RES</name></expr>:</case>

                    <comment type="block" pos:start="379:21" pos:end="379:48">/* lwarx, ldarx or stwcx. */</comment>

                    <expr_stmt pos:start="381:21" pos:end="381:59"><expr pos:start="381:21" pos:end="381:58"><name pos:start="381:21" pos:end="381:39"><name pos:start="381:21" pos:end="381:22">cs</name><operator pos:start="381:23" pos:end="381:24">-&gt;</operator><name pos:start="381:25" pos:end="381:39">exception_index</name></name> <operator pos:start="381:41" pos:end="381:41">=</operator> <name pos:start="381:43" pos:end="381:58">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="383:21" pos:end="383:40"><expr pos:start="383:21" pos:end="383:39"><name pos:start="383:21" pos:end="383:35"><name pos:start="383:21" pos:end="383:23">env</name><operator pos:start="383:24" pos:end="383:25">-&gt;</operator><name pos:start="383:26" pos:end="383:35">error_code</name></name> <operator pos:start="383:37" pos:end="383:37">=</operator> <literal type="number" pos:start="383:39" pos:end="383:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:48"><expr pos:start="385:21" pos:end="385:47"><name pos:start="385:21" pos:end="385:37"><name pos:start="385:21" pos:end="385:23">env</name><operator pos:start="385:24" pos:end="385:25">-&gt;</operator><name pos:start="385:26" pos:end="385:28">spr</name><index pos:start="385:29" pos:end="385:37">[<expr pos:start="385:30" pos:end="385:36"><name pos:start="385:30" pos:end="385:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="385:39" pos:end="385:39">=</operator> <name pos:start="385:41" pos:end="385:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="387:21" pos:end="395:21"><if pos:start="387:21" pos:end="391:21">if <condition pos:start="387:24" pos:end="387:32">(<expr pos:start="387:25" pos:end="387:31"><name pos:start="387:25" pos:end="387:26">rw</name> <operator pos:start="387:28" pos:end="387:29">==</operator> <literal type="number" pos:start="387:31" pos:end="387:31">1</literal></expr>)</condition> <block pos:start="387:34" pos:end="391:21">{<block_content pos:start="389:25" pos:end="389:57">

                        <expr_stmt pos:start="389:25" pos:end="389:57"><expr pos:start="389:25" pos:end="389:56"><name pos:start="389:25" pos:end="389:43"><name pos:start="389:25" pos:end="389:27">env</name><operator pos:start="389:28" pos:end="389:29">-&gt;</operator><name pos:start="389:30" pos:end="389:32">spr</name><index pos:start="389:33" pos:end="389:43">[<expr pos:start="389:34" pos:end="389:42"><name pos:start="389:34" pos:end="389:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="389:45" pos:end="389:45">=</operator> <literal type="number" pos:start="389:47" pos:end="389:56">0x06000000</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="391:23" pos:end="395:21">else <block pos:start="391:28" pos:end="395:21">{<block_content pos:start="393:25" pos:end="393:57">

                        <expr_stmt pos:start="393:25" pos:end="393:57"><expr pos:start="393:25" pos:end="393:56"><name pos:start="393:25" pos:end="393:43"><name pos:start="393:25" pos:end="393:27">env</name><operator pos:start="393:28" pos:end="393:29">-&gt;</operator><name pos:start="393:30" pos:end="393:32">spr</name><index pos:start="393:33" pos:end="393:43">[<expr pos:start="393:34" pos:end="393:42"><name pos:start="393:34" pos:end="393:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="393:45" pos:end="393:45">=</operator> <literal type="number" pos:start="393:47" pos:end="393:56">0x04000000</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="397:21" pos:end="397:26">break;</break>

                <case pos:start="399:17" pos:end="399:32">case <expr pos:start="399:22" pos:end="399:31"><name pos:start="399:22" pos:end="399:31">ACCESS_EXT</name></expr>:</case>

                    <comment type="block" pos:start="401:21" pos:end="401:40">/* eciwx or ecowx */</comment>

                    <expr_stmt pos:start="403:21" pos:end="403:59"><expr pos:start="403:21" pos:end="403:58"><name pos:start="403:21" pos:end="403:39"><name pos:start="403:21" pos:end="403:22">cs</name><operator pos:start="403:23" pos:end="403:24">-&gt;</operator><name pos:start="403:25" pos:end="403:39">exception_index</name></name> <operator pos:start="403:41" pos:end="403:41">=</operator> <name pos:start="403:43" pos:end="403:58">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="405:21" pos:end="405:40"><expr pos:start="405:21" pos:end="405:39"><name pos:start="405:21" pos:end="405:35"><name pos:start="405:21" pos:end="405:23">env</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:35">error_code</name></name> <operator pos:start="405:37" pos:end="405:37">=</operator> <literal type="number" pos:start="405:39" pos:end="405:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="407:21" pos:end="407:48"><expr pos:start="407:21" pos:end="407:47"><name pos:start="407:21" pos:end="407:37"><name pos:start="407:21" pos:end="407:23">env</name><operator pos:start="407:24" pos:end="407:25">-&gt;</operator><name pos:start="407:26" pos:end="407:28">spr</name><index pos:start="407:29" pos:end="407:37">[<expr pos:start="407:30" pos:end="407:36"><name pos:start="407:30" pos:end="407:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="407:39" pos:end="407:39">=</operator> <name pos:start="407:41" pos:end="407:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="409:21" pos:end="417:21"><if pos:start="409:21" pos:end="413:21">if <condition pos:start="409:24" pos:end="409:32">(<expr pos:start="409:25" pos:end="409:31"><name pos:start="409:25" pos:end="409:26">rw</name> <operator pos:start="409:28" pos:end="409:29">==</operator> <literal type="number" pos:start="409:31" pos:end="409:31">1</literal></expr>)</condition> <block pos:start="409:34" pos:end="413:21">{<block_content pos:start="411:25" pos:end="411:57">

                        <expr_stmt pos:start="411:25" pos:end="411:57"><expr pos:start="411:25" pos:end="411:56"><name pos:start="411:25" pos:end="411:43"><name pos:start="411:25" pos:end="411:27">env</name><operator pos:start="411:28" pos:end="411:29">-&gt;</operator><name pos:start="411:30" pos:end="411:32">spr</name><index pos:start="411:33" pos:end="411:43">[<expr pos:start="411:34" pos:end="411:42"><name pos:start="411:34" pos:end="411:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="411:45" pos:end="411:45">=</operator> <literal type="number" pos:start="411:47" pos:end="411:56">0x06100000</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="413:23" pos:end="417:21">else <block pos:start="413:28" pos:end="417:21">{<block_content pos:start="415:25" pos:end="415:57">

                        <expr_stmt pos:start="415:25" pos:end="415:57"><expr pos:start="415:25" pos:end="415:56"><name pos:start="415:25" pos:end="415:43"><name pos:start="415:25" pos:end="415:27">env</name><operator pos:start="415:28" pos:end="415:29">-&gt;</operator><name pos:start="415:30" pos:end="415:32">spr</name><index pos:start="415:33" pos:end="415:43">[<expr pos:start="415:34" pos:end="415:42"><name pos:start="415:34" pos:end="415:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="415:45" pos:end="415:45">=</operator> <literal type="number" pos:start="415:47" pos:end="415:56">0x04100000</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="419:21" pos:end="419:26">break;</break>

                <default pos:start="421:17" pos:end="421:24">default:</default>

                    <expr_stmt pos:start="423:21" pos:end="423:65"><expr pos:start="423:21" pos:end="423:64"><call pos:start="423:21" pos:end="423:64"><name pos:start="423:21" pos:end="423:26">printf</name><argument_list pos:start="423:27" pos:end="423:64">(<argument pos:start="423:28" pos:end="423:58"><expr pos:start="423:28" pos:end="423:58"><literal type="string" pos:start="423:28" pos:end="423:58">"DSI: invalid exception (%d)\n"</literal></expr></argument>, <argument pos:start="423:61" pos:end="423:63"><expr pos:start="423:61" pos:end="423:63"><name pos:start="423:61" pos:end="423:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="425:21" pos:end="425:63"><expr pos:start="425:21" pos:end="425:62"><name pos:start="425:21" pos:end="425:39"><name pos:start="425:21" pos:end="425:22">cs</name><operator pos:start="425:23" pos:end="425:24">-&gt;</operator><name pos:start="425:25" pos:end="425:39">exception_index</name></name> <operator pos:start="425:41" pos:end="425:41">=</operator> <name pos:start="425:43" pos:end="425:62">POWERPC_EXCP_PROGRAM</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="429:70"><expr pos:start="427:21" pos:end="429:69"><name pos:start="427:21" pos:end="427:35"><name pos:start="427:21" pos:end="427:23">env</name><operator pos:start="427:24" pos:end="427:25">-&gt;</operator><name pos:start="427:26" pos:end="427:35">error_code</name></name> <operator pos:start="427:37" pos:end="427:37">=</operator>

                        <name pos:start="429:25" pos:end="429:42">POWERPC_EXCP_INVAL</name> <operator pos:start="429:44" pos:end="429:44">|</operator> <name pos:start="429:46" pos:end="429:69">POWERPC_EXCP_INVAL_INVAL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="431:21" pos:end="431:48"><expr pos:start="431:21" pos:end="431:47"><name pos:start="431:21" pos:end="431:37"><name pos:start="431:21" pos:end="431:23">env</name><operator pos:start="431:24" pos:end="431:25">-&gt;</operator><name pos:start="431:26" pos:end="431:28">spr</name><index pos:start="431:29" pos:end="431:37">[<expr pos:start="431:30" pos:end="431:36"><name pos:start="431:30" pos:end="431:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="431:39" pos:end="431:39">=</operator> <name pos:start="431:41" pos:end="431:47">address</name></expr>;</expr_stmt>

                    <break pos:start="433:21" pos:end="433:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="437:17" pos:end="437:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

<cpp:if pos:start="443:1" pos:end="443:5">#<cpp:directive pos:start="443:2" pos:end="443:3">if</cpp:directive> <expr pos:start="443:5" pos:end="443:5"><literal type="number" pos:start="443:5" pos:end="443:5">0</literal></expr></cpp:if>

        printf("%s: set exception to %d %02x\n", __func__,

               cs-&gt;exception, env-&gt;error_code);

<cpp:endif pos:start="449:1" pos:end="449:6">#<cpp:directive pos:start="449:2" pos:end="449:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="451:9" pos:end="451:16"><expr pos:start="451:9" pos:end="451:15"><name pos:start="451:9" pos:end="451:11">ret</name> <operator pos:start="451:13" pos:end="451:13">=</operator> <literal type="number" pos:start="451:15" pos:end="451:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="457:5" pos:end="457:15">return <expr pos:start="457:12" pos:end="457:14"><name pos:start="457:12" pos:end="457:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
