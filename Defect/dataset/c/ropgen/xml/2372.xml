<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2372.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">uint8_t</name></type> <name pos:start="1:16" pos:end="1:22">get_tlm</name><parameter_list pos:start="1:23" pos:end="1:56">(<parameter pos:start="1:24" pos:end="1:48"><decl pos:start="1:24" pos:end="1:48"><type pos:start="1:24" pos:end="1:48"><name pos:start="1:24" pos:end="1:45">Jpeg2000DecoderContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:55"><decl pos:start="1:51" pos:end="1:55"><type pos:start="1:51" pos:end="1:55"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:55">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:16">Stlm</name></decl>, <decl pos:start="5:19" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:19" pos:end="5:20">ST</name></decl>, <decl pos:start="5:23" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:23" pos:end="5:24">SP</name></decl>, <decl pos:start="5:27" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:27" pos:end="5:34">tile_tlm</name></decl>, <decl pos:start="5:37" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:37" pos:end="5:37">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:33"><expr pos:start="7:5" pos:end="7:32"><call pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:23">bytestream_get_byte</name><argument_list pos:start="7:24" pos:end="7:32">(<argument pos:start="7:25" pos:end="7:31"><expr pos:start="7:25" pos:end="7:31"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:31"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:31">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="block" pos:start="7:49" pos:end="7:67">/* Ztlm: skipped */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:8">Stlm</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:39"><name pos:start="9:12" pos:end="9:30">bytestream_get_byte</name><argument_list pos:start="9:31" pos:end="9:39">(<argument pos:start="9:32" pos:end="9:38"><expr pos:start="9:32" pos:end="9:38"><operator pos:start="9:32" pos:end="9:32">&amp;</operator><name pos:start="9:33" pos:end="9:38"><name pos:start="9:33" pos:end="9:33">s</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:38">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:70">// too complex ? ST = ((Stlm &gt;&gt; 4) &amp; 0x01) + ((Stlm &gt;&gt; 4) &amp; 0x02);</comment>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:6">ST</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:14">Stlm</name> <operator pos:start="15:16" pos:end="15:17">&gt;&gt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">4</literal><operator pos:start="15:20" pos:end="15:20">)</operator> <operator pos:start="15:22" pos:end="15:22">&amp;</operator> <literal type="number" pos:start="15:24" pos:end="15:27">0x03</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="17:5" pos:end="17:53">// TODO: Manage case of ST = 0b11 --&gt; raise error</comment>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:6">SP</name>       <operator pos:start="19:14" pos:end="19:14">=</operator> <operator pos:start="19:16" pos:end="19:16">(</operator><name pos:start="19:17" pos:end="19:20">Stlm</name> <operator pos:start="19:22" pos:end="19:23">&gt;&gt;</operator> <literal type="number" pos:start="19:25" pos:end="19:25">6</literal><operator pos:start="19:26" pos:end="19:26">)</operator> <operator pos:start="19:28" pos:end="19:28">&amp;</operator> <literal type="number" pos:start="19:30" pos:end="19:33">0x01</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:12">tile_tlm</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:17">n</name> <operator pos:start="21:19" pos:end="21:19">-</operator> <literal type="number" pos:start="21:21" pos:end="21:21">4</literal><operator pos:start="21:22" pos:end="21:22">)</operator> <operator pos:start="21:24" pos:end="21:24">/</operator> <operator pos:start="21:26" pos:end="21:26">(</operator><operator pos:start="21:27" pos:end="21:27">(</operator><name pos:start="21:28" pos:end="21:29">SP</name> <operator pos:start="21:31" pos:end="21:31">+</operator> <literal type="number" pos:start="21:33" pos:end="21:33">1</literal><operator pos:start="21:34" pos:end="21:34">)</operator> <operator pos:start="21:36" pos:end="21:36">*</operator> <literal type="number" pos:start="21:38" pos:end="21:40">2</literal> <operator pos:start="21:40" pos:end="21:40">+</operator> <name pos:start="21:42" pos:end="21:43">ST</name><operator pos:start="21:44" pos:end="21:44">)</operator></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="61:5">for <control pos:start="23:9" pos:end="23:34">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:29"><expr pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:28">tile_tlm</name></expr>;</condition> <incr pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:31">i</name><operator pos:start="23:32" pos:end="23:33">++</operator></expr></incr>)</control> <block pos:start="23:36" pos:end="61:5">{<block_content pos:start="25:9" pos:end="59:9">

        <switch pos:start="25:9" pos:end="49:9">switch <condition pos:start="25:16" pos:end="25:19">(<expr pos:start="25:17" pos:end="25:18"><name pos:start="25:17" pos:end="25:18">ST</name></expr>)</condition> <block pos:start="25:21" pos:end="49:9">{<block_content pos:start="27:9" pos:end="47:18">

        <case pos:start="27:9" pos:end="27:15">case <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>:</case>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:15">case <expr pos:start="31:14" pos:end="31:14"><literal type="number" pos:start="31:14" pos:end="31:14">1</literal></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:41"><expr pos:start="33:13" pos:end="33:40"><call pos:start="33:13" pos:end="33:40"><name pos:start="33:13" pos:end="33:31">bytestream_get_byte</name><argument_list pos:start="33:32" pos:end="33:40">(<argument pos:start="33:33" pos:end="33:39"><expr pos:start="33:33" pos:end="33:39"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:39"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:39">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:15">case <expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">2</literal></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:41"><expr pos:start="39:13" pos:end="39:40"><call pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:31">bytestream_get_be16</name><argument_list pos:start="39:32" pos:end="39:40">(<argument pos:start="39:33" pos:end="39:39"><expr pos:start="39:33" pos:end="39:39"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:39"><name pos:start="39:34" pos:end="39:34">s</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:39">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <case pos:start="43:9" pos:end="43:15">case <expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">3</literal></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><call pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:31">bytestream_get_be32</name><argument_list pos:start="45:32" pos:end="45:40">(<argument pos:start="45:33" pos:end="45:39"><expr pos:start="45:33" pos:end="45:39"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:39"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:39">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:14">SP</name> <operator pos:start="51:16" pos:end="51:17">==</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition> <block pos:start="51:22" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:41">

            <expr_stmt pos:start="53:13" pos:end="53:41"><expr pos:start="53:13" pos:end="53:40"><call pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:31">bytestream_get_be16</name><argument_list pos:start="53:32" pos:end="53:40">(<argument pos:start="53:33" pos:end="53:39"><expr pos:start="53:33" pos:end="53:39"><operator pos:start="53:33" pos:end="53:33">&amp;</operator><name pos:start="53:34" pos:end="53:39"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:39">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="59:9">else <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:41">

            <expr_stmt pos:start="57:13" pos:end="57:41"><expr pos:start="57:13" pos:end="57:40"><call pos:start="57:13" pos:end="57:40"><name pos:start="57:13" pos:end="57:31">bytestream_get_be32</name><argument_list pos:start="57:32" pos:end="57:40">(<argument pos:start="57:33" pos:end="57:39"><expr pos:start="57:33" pos:end="57:39"><operator pos:start="57:33" pos:end="57:33">&amp;</operator><name pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:39">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
