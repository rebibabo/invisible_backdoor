<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21799.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">ppc_set_irq</name><parameter_list pos:start="1:17" pos:end="1:55">(<parameter pos:start="1:18" pos:end="1:32"><decl pos:start="1:18" pos:end="1:32"><type pos:start="1:18" pos:end="1:32"><name pos:start="1:18" pos:end="1:27">PowerPCCPU</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">cpu</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:43"><decl pos:start="1:35" pos:end="1:43"><type pos:start="1:35" pos:end="1:43"><name pos:start="1:35" pos:end="1:37">int</name></type> <name pos:start="1:39" pos:end="1:43">n_IRQ</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:54">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:70">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:28">old_pending</name> <init pos:start="9:30" pos:end="9:54">= <expr pos:start="9:32" pos:end="9:54"><name pos:start="9:32" pos:end="9:54"><name pos:start="9:32" pos:end="9:34">env</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:54">pending_interrupts</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:13">level</name></expr>)</condition> <block pos:start="13:16" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:46">

        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:11">env</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:31">pending_interrupts</name></name> <operator pos:start="15:33" pos:end="15:34">|=</operator> <literal type="number" pos:start="15:36" pos:end="15:36">1</literal> <operator pos:start="15:38" pos:end="15:39">&lt;&lt;</operator> <name pos:start="15:41" pos:end="15:45">n_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><call pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:21">cpu_interrupt</name><argument_list pos:start="17:22" pos:end="17:45">(<argument pos:start="17:23" pos:end="17:24"><expr pos:start="17:23" pos:end="17:24"><name pos:start="17:23" pos:end="17:24">cs</name></expr></argument>, <argument pos:start="17:27" pos:end="17:44"><expr pos:start="17:27" pos:end="17:44"><name pos:start="17:27" pos:end="17:44">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="29:5">else <block pos:start="19:12" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:11">env</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:31">pending_interrupts</name></name> <operator pos:start="21:33" pos:end="21:34">&amp;=</operator> <operator pos:start="21:36" pos:end="21:36">~</operator><operator pos:start="21:37" pos:end="21:37">(</operator><literal type="number" pos:start="21:38" pos:end="21:38">1</literal> <operator pos:start="21:40" pos:end="21:41">&lt;&lt;</operator> <name pos:start="21:43" pos:end="21:47">n_IRQ</name><operator pos:start="21:48" pos:end="21:48">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:41">(<expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:15">env</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:35">pending_interrupts</name></name> <operator pos:start="23:37" pos:end="23:38">==</operator> <literal type="number" pos:start="23:40" pos:end="23:40">0</literal></expr>)</condition> <block pos:start="23:43" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:56">

            <expr_stmt pos:start="25:13" pos:end="25:56"><expr pos:start="25:13" pos:end="25:55"><call pos:start="25:13" pos:end="25:55"><name pos:start="25:13" pos:end="25:31">cpu_reset_interrupt</name><argument_list pos:start="25:32" pos:end="25:55">(<argument pos:start="25:33" pos:end="25:34"><expr pos:start="25:33" pos:end="25:34"><name pos:start="25:33" pos:end="25:34">cs</name></expr></argument>, <argument pos:start="25:37" pos:end="25:54"><expr pos:start="25:37" pos:end="25:54"><name pos:start="25:37" pos:end="25:54">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:47">(<expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:19">old_pending</name> <operator pos:start="33:21" pos:end="33:22">!=</operator> <name pos:start="33:24" pos:end="33:46"><name pos:start="33:24" pos:end="33:26">env</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:46">pending_interrupts</name></name></expr>)</condition> <block pos:start="33:49" pos:end="41:5">{<block_content pos:start="37:9" pos:end="40:0">

<cpp:ifdef pos:start="35:1" pos:end="35:17">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:17">CONFIG_KVM</name></cpp:ifdef>

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:47"><call pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:28">kvmppc_set_interrupt</name><argument_list pos:start="37:29" pos:end="37:47">(<argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">cpu</name></expr></argument>, <argument pos:start="37:35" pos:end="37:39"><expr pos:start="37:35" pos:end="37:39"><name pos:start="37:35" pos:end="37:39">n_IRQ</name></expr></argument>, <argument pos:start="37:42" pos:end="37:46"><expr pos:start="37:42" pos:end="37:46"><name pos:start="37:42" pos:end="37:46">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="49:70"><expr pos:start="45:5" pos:end="49:69"><call pos:start="45:5" pos:end="49:69"><name pos:start="45:5" pos:end="45:11">LOG_IRQ</name><argument_list pos:start="45:12" pos:end="49:69">(<argument pos:start="45:13" pos:end="47:28"><expr pos:start="45:13" pos:end="47:28"><literal type="string" pos:start="45:13" pos:end="45:53">"%s: %p n_IRQ %d level %d =&gt; pending %08"</literal> <name pos:start="45:55" pos:end="45:60">PRIx32</name>

                <literal type="string" pos:start="47:17" pos:end="47:28">"req %08x\n"</literal></expr></argument>, <argument pos:start="47:31" pos:end="47:38"><expr pos:start="47:31" pos:end="47:38"><name pos:start="47:31" pos:end="47:38">__func__</name></expr></argument>, <argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><name pos:start="47:41" pos:end="47:43">env</name></expr></argument>, <argument pos:start="47:46" pos:end="47:50"><expr pos:start="47:46" pos:end="47:50"><name pos:start="47:46" pos:end="47:50">n_IRQ</name></expr></argument>, <argument pos:start="47:53" pos:end="47:57"><expr pos:start="47:53" pos:end="47:57"><name pos:start="47:53" pos:end="47:57">level</name></expr></argument>,

                <argument pos:start="49:17" pos:end="49:39"><expr pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:19">env</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:39">pending_interrupts</name></name></expr></argument>, <argument pos:start="49:42" pos:end="49:68"><expr pos:start="49:42" pos:end="49:68"><call pos:start="49:42" pos:end="49:49"><name pos:start="49:42" pos:end="49:44">CPU</name><argument_list pos:start="49:45" pos:end="49:49">(<argument pos:start="49:46" pos:end="49:48"><expr pos:start="49:46" pos:end="49:48"><name pos:start="49:46" pos:end="49:48">cpu</name></expr></argument>)</argument_list></call><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:68">interrupt_request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
