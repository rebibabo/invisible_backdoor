<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15045.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">add_shorts_metadata</name><parameter_list pos:start="1:31" pos:end="3:63">(<parameter pos:start="1:32" pos:end="1:40"><decl pos:start="1:32" pos:end="1:40"><type pos:start="1:32" pos:end="1:40"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:40">count</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">name</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:46"><decl pos:start="3:32" pos:end="3:46"><type pos:start="3:32" pos:end="3:46"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">sep</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:59">TiffContext</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:62">s</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:13">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:15">sp</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:69">(<expr pos:start="15:9" pos:end="15:68"><call pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:34">bytestream2_get_bytes_left</name><argument_list pos:start="15:35" pos:end="15:42">(<argument pos:start="15:36" pos:end="15:41"><expr pos:start="15:36" pos:end="15:41"><operator pos:start="15:36" pos:end="15:36">&amp;</operator><name pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:37">s</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:44" pos:end="15:44">&lt;</operator> <name pos:start="15:46" pos:end="15:50">count</name> <operator pos:start="15:52" pos:end="15:52">*</operator> <sizeof pos:start="15:54" pos:end="15:68">sizeof<argument_list pos:start="15:60" pos:end="15:68">(<argument pos:start="15:61" pos:end="15:67"><expr pos:start="15:61" pos:end="15:67"><name pos:start="15:61" pos:end="15:67">int16_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:6">sp</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:43"><name pos:start="21:10" pos:end="21:18">av_malloc</name><argument_list pos:start="21:19" pos:end="21:43">(<argument pos:start="21:20" pos:end="21:42"><expr pos:start="21:20" pos:end="21:42"><name pos:start="21:20" pos:end="21:24">count</name> <operator pos:start="21:26" pos:end="21:26">*</operator> <sizeof pos:start="21:28" pos:end="21:42">sizeof<argument_list pos:start="21:34" pos:end="21:42">(<argument pos:start="21:35" pos:end="21:41"><expr pos:start="21:35" pos:end="21:41"><name pos:start="21:35" pos:end="21:41">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">sp</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="29:5" pos:end="31:42">for <control pos:start="29:9" pos:end="29:31">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:26"><expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:25">count</name></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">i</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:9" pos:end="31:42"><block_content pos:start="31:9" pos:end="31:42">

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:10">sp</name><index pos:start="31:11" pos:end="31:13">[<expr pos:start="31:12" pos:end="31:12"><name pos:start="31:12" pos:end="31:12">i</name></expr>]</index></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:41"><name pos:start="31:17" pos:end="31:26">tget_short</name><argument_list pos:start="31:27" pos:end="31:41">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:33">gb</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:40"><expr pos:start="31:36" pos:end="31:40"><name pos:start="31:36" pos:end="31:40"><name pos:start="31:36" pos:end="31:36">s</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:40">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:6">ap</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:35"><name pos:start="33:10" pos:end="33:19">shorts2str</name><argument_list pos:start="33:20" pos:end="33:35">(<argument pos:start="33:21" pos:end="33:22"><expr pos:start="33:21" pos:end="33:22"><name pos:start="33:21" pos:end="33:22">sp</name></expr></argument>, <argument pos:start="33:25" pos:end="33:29"><expr pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:29">count</name></expr></argument>, <argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">sep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><call pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:12">av_freep</name><argument_list pos:start="35:13" pos:end="35:17">(<argument pos:start="35:14" pos:end="35:16"><expr pos:start="35:14" pos:end="35:16"><operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:16">sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:31"><if pos:start="37:5" pos:end="39:31">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:11">ap</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:31"><block_content pos:start="39:9" pos:end="39:31">

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:73"><expr pos:start="41:5" pos:end="41:72"><call pos:start="41:5" pos:end="41:72"><name pos:start="41:5" pos:end="41:15">av_dict_set</name><argument_list pos:start="41:16" pos:end="41:72">(<argument pos:start="41:17" pos:end="41:36"><expr pos:start="41:17" pos:end="41:36"><operator pos:start="41:17" pos:end="41:17">&amp;</operator><name pos:start="41:18" pos:end="41:36"><name pos:start="41:18" pos:end="41:18">s</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:27">picture</name><operator pos:start="41:28" pos:end="41:28">.</operator><name pos:start="41:29" pos:end="41:36">metadata</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:42"><expr pos:start="41:39" pos:end="41:42"><name pos:start="41:39" pos:end="41:42">name</name></expr></argument>, <argument pos:start="41:45" pos:end="41:46"><expr pos:start="41:45" pos:end="41:46"><name pos:start="41:45" pos:end="41:46">ap</name></expr></argument>, <argument pos:start="41:49" pos:end="41:71"><expr pos:start="41:49" pos:end="41:71"><name pos:start="41:49" pos:end="41:71">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
