<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/678.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">build_table</name><parameter_list pos:start="1:23" pos:end="3:49">(<parameter pos:start="1:24" pos:end="1:31"><decl pos:start="1:24" pos:end="1:31"><type pos:start="1:24" pos:end="1:31"><name pos:start="1:24" pos:end="1:26">VLC</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">vlc</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:50">table_nb_bits</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:64">nb_codes</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:37"><decl pos:start="3:24" pos:end="3:37"><type pos:start="3:24" pos:end="3:37"><name pos:start="3:24" pos:end="3:30">VLCcode</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:37">codes</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:48"><decl pos:start="3:40" pos:end="3:48"><type pos:start="3:40" pos:end="3:48"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:48">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="163:1">{<block_content pos:start="7:5" pos:end="161:23">

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">table_size</name></decl>, <decl pos:start="7:21" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:31">table_index</name></decl>, <decl pos:start="7:34" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:38">index</name></decl>, <decl pos:start="7:41" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:51">code_prefix</name></decl>, <decl pos:start="7:54" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:54" pos:end="7:59">symbol</name></decl>, <decl pos:start="7:62" pos:end="7:74"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:62" pos:end="7:74">subtable_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">n</name></decl>, <decl pos:start="9:21" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:22">nb</name></decl>, <decl pos:start="9:25" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:27">inc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">code</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><call pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:12">VLC_TYPE</name> <argument_list pos:start="13:14" pos:end="13:21">(<argument pos:start="13:15" pos:end="13:20"><expr pos:start="13:15" pos:end="13:20"><operator pos:start="13:15" pos:end="13:15">*</operator><name pos:start="13:16" pos:end="13:20">table</name></expr></argument>)</argument_list></call><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">2</literal></expr>]</index></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:14">table_size</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">1</literal> <operator pos:start="17:20" pos:end="17:21">&lt;&lt;</operator> <name pos:start="17:23" pos:end="17:35">table_nb_bits</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:21">table_nb_bits</name> <operator pos:start="19:23" pos:end="19:23">&gt;</operator> <literal type="number" pos:start="19:25" pos:end="19:26">30</literal></expr>)</condition><block type="pseudo" pos:start="21:8" pos:end="21:17"><block_content pos:start="21:8" pos:end="21:17">

       <return pos:start="21:8" pos:end="21:17">return <expr pos:start="21:15" pos:end="21:16"><operator pos:start="21:15" pos:end="21:15">-</operator><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:80"><expr pos:start="23:5" pos:end="23:79"><name pos:start="23:5" pos:end="23:15">table_index</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:79"><name pos:start="23:19" pos:end="23:29">alloc_table</name><argument_list pos:start="23:30" pos:end="23:79">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">vlc</name></expr></argument>, <argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:45">table_size</name></expr></argument>, <argument pos:start="23:48" pos:end="23:78"><expr pos:start="23:48" pos:end="23:78"><name pos:start="23:48" pos:end="23:52">flags</name> <operator pos:start="23:54" pos:end="23:54">&amp;</operator> <name pos:start="23:56" pos:end="23:78">INIT_VLC_USE_NEW_STATIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:75"><expr pos:start="25:5" pos:end="25:74"><call pos:start="25:5" pos:end="25:74"><name pos:start="25:5" pos:end="25:11">av_dlog</name><argument_list pos:start="25:12" pos:end="25:74">(<argument pos:start="25:13" pos:end="25:16"><expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:16">NULL</name></expr></argument>, <argument pos:start="25:19" pos:end="25:48"><expr pos:start="25:19" pos:end="25:48"><literal type="string" pos:start="25:19" pos:end="25:48">"new table index=%d size=%d\n"</literal></expr></argument>, <argument pos:start="25:51" pos:end="25:61"><expr pos:start="25:51" pos:end="25:61"><name pos:start="25:51" pos:end="25:61">table_index</name></expr></argument>, <argument pos:start="25:64" pos:end="25:73"><expr pos:start="25:64" pos:end="25:73"><name pos:start="25:64" pos:end="25:73">table_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:27"><if pos:start="27:5" pos:end="29:27">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:19">table_index</name> <operator pos:start="27:21" pos:end="27:21">&lt;</operator> <literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:27"><block_content pos:start="29:9" pos:end="29:27">

        <return pos:start="29:9" pos:end="29:27">return <expr pos:start="29:16" pos:end="29:26"><name pos:start="29:16" pos:end="29:26">table_index</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:9">table</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">&amp;</operator><name pos:start="31:14" pos:end="31:36"><name pos:start="31:14" pos:end="31:16">vlc</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">table</name><index pos:start="31:24" pos:end="31:36">[<expr pos:start="31:25" pos:end="31:35"><name pos:start="31:25" pos:end="31:35">table_index</name></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="41:5">for <control pos:start="35:9" pos:end="35:36">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:31"><expr pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:30">table_size</name></expr>;</condition> <incr pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:33">i</name><operator pos:start="35:34" pos:end="35:35">++</operator></expr></incr>)</control> <block pos:start="35:38" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:25">

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">table</name><index pos:start="37:14" pos:end="37:16">[<expr pos:start="37:15" pos:end="37:15"><name pos:start="37:15" pos:end="37:15">i</name></expr>]</index><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr>]</index></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="37:26" pos:end="37:31">//bits</comment>

        <expr_stmt pos:start="39:9" pos:end="39:25"><expr pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:13">table</name><index pos:start="39:14" pos:end="39:16">[<expr pos:start="39:15" pos:end="39:15"><name pos:start="39:15" pos:end="39:15">i</name></expr>]</index><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>]</index></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <operator pos:start="39:23" pos:end="39:23">-</operator><literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="39:27" pos:end="39:33">//codes</comment>

    </block_content>}</block></for>



    <comment type="block" pos:start="45:5" pos:end="45:65">/* first pass: map codes and compute auxiliary table sizes */</comment>

    <for pos:start="47:5" pos:end="159:5">for <control pos:start="47:9" pos:end="47:34">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:29"><expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:28">nb_codes</name></expr>;</condition> <incr pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:31">i</name><operator pos:start="47:32" pos:end="47:33">++</operator></expr></incr>)</control> <block pos:start="47:36" pos:end="159:5">{<block_content pos:start="49:9" pos:end="157:9">

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:9">n</name>      <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:25"><name pos:start="49:18" pos:end="49:22">codes</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">i</name></expr>]</index></name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:30">bits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:12">code</name>   <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:25"><name pos:start="51:18" pos:end="51:22">codes</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">i</name></expr>]</index></name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:30">code</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:14">symbol</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:22">codes</name><index pos:start="53:23" pos:end="53:25">[<expr pos:start="53:24" pos:end="53:24"><name pos:start="53:24" pos:end="53:24">i</name></expr>]</index></name><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:32">symbol</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><call pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:15">av_dlog</name><argument_list pos:start="55:16" pos:end="55:58">(<argument pos:start="55:17" pos:end="55:20"><expr pos:start="55:17" pos:end="55:20"><name pos:start="55:17" pos:end="55:20">NULL</name></expr></argument>, <argument pos:start="55:23" pos:end="55:45"><expr pos:start="55:23" pos:end="55:45"><literal type="string" pos:start="55:23" pos:end="55:45">"i=%d n=%d code=0x%x\n"</literal></expr></argument>, <argument pos:start="55:48" pos:end="55:48"><expr pos:start="55:48" pos:end="55:48"><name pos:start="55:48" pos:end="55:48">i</name></expr></argument>, <argument pos:start="55:51" pos:end="55:51"><expr pos:start="55:51" pos:end="55:51"><name pos:start="55:51" pos:end="55:51">n</name></expr></argument>, <argument pos:start="55:54" pos:end="55:57"><expr pos:start="55:54" pos:end="55:57"><name pos:start="55:54" pos:end="55:57">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="157:9"><if pos:start="57:9" pos:end="95:9">if <condition pos:start="57:12" pos:end="57:31">(<expr pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:13">n</name> <operator pos:start="57:15" pos:end="57:16">&lt;=</operator> <name pos:start="57:18" pos:end="57:30">table_nb_bits</name></expr>)</condition> <block pos:start="57:33" pos:end="95:9">{<block_content pos:start="61:13" pos:end="93:13">

            <comment type="block" pos:start="59:13" pos:end="59:46">/* no need to add another table */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:45"><expr pos:start="61:13" pos:end="61:44"><name pos:start="61:13" pos:end="61:13">j</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:20">code</name> <operator pos:start="61:22" pos:end="61:23">&gt;&gt;</operator> <operator pos:start="61:25" pos:end="61:25">(</operator><literal type="number" pos:start="61:26" pos:end="61:29">32</literal> <operator pos:start="61:29" pos:end="61:29">-</operator> <name pos:start="61:31" pos:end="61:43">table_nb_bits</name><operator pos:start="61:44" pos:end="61:44">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:14">nb</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">1</literal> <operator pos:start="63:20" pos:end="63:21">&lt;&lt;</operator> <operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:36">table_nb_bits</name> <operator pos:start="63:38" pos:end="63:38">-</operator> <name pos:start="63:40" pos:end="63:40">n</name><operator pos:start="63:41" pos:end="63:41">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:20"><expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:15">inc</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <literal type="number" pos:start="65:19" pos:end="65:19">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="73:13"><if pos:start="67:13" pos:end="73:13">if <condition pos:start="67:16" pos:end="67:36">(<expr pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:21">flags</name> <operator pos:start="67:23" pos:end="67:23">&amp;</operator> <name pos:start="67:25" pos:end="67:35">INIT_VLC_LE</name></expr>)</condition> <block pos:start="67:38" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:29">

                <expr_stmt pos:start="69:17" pos:end="69:37"><expr pos:start="69:17" pos:end="69:36"><name pos:start="69:17" pos:end="69:17">j</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:36"><name pos:start="69:21" pos:end="69:30">bitswap_32</name><argument_list pos:start="69:31" pos:end="69:36">(<argument pos:start="69:32" pos:end="69:35"><expr pos:start="69:32" pos:end="69:35"><name pos:start="69:32" pos:end="69:35">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:29"><expr pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:19">inc</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">1</literal> <operator pos:start="71:25" pos:end="71:26">&lt;&lt;</operator> <name pos:start="71:28" pos:end="71:28">n</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="75:13" pos:end="93:13">for <control pos:start="75:17" pos:end="75:36">(<init pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:22"><name pos:start="75:18" pos:end="75:18">k</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:31"><expr pos:start="75:25" pos:end="75:30"><name pos:start="75:25" pos:end="75:25">k</name> <operator pos:start="75:27" pos:end="75:27">&lt;</operator> <name pos:start="75:29" pos:end="75:30">nb</name></expr>;</condition> <incr pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:33">k</name><operator pos:start="75:34" pos:end="75:35">++</operator></expr></incr>)</control> <block pos:start="75:38" pos:end="93:13">{<block_content pos:start="77:17" pos:end="91:25">

                <expr_stmt pos:start="77:17" pos:end="77:62"><expr pos:start="77:17" pos:end="77:61"><call pos:start="77:17" pos:end="77:61"><name pos:start="77:17" pos:end="77:23">av_dlog</name><argument_list pos:start="77:24" pos:end="77:61">(<argument pos:start="77:25" pos:end="77:28"><expr pos:start="77:25" pos:end="77:28"><name pos:start="77:25" pos:end="77:28">NULL</name></expr></argument>, <argument pos:start="77:31" pos:end="77:51"><expr pos:start="77:31" pos:end="77:51"><literal type="string" pos:start="77:31" pos:end="77:51">"%4x: code=%d n=%d\n"</literal></expr></argument>, <argument pos:start="77:54" pos:end="77:54"><expr pos:start="77:54" pos:end="77:54"><name pos:start="77:54" pos:end="77:54">j</name></expr></argument>, <argument pos:start="77:57" pos:end="77:57"><expr pos:start="77:57" pos:end="77:57"><name pos:start="77:57" pos:end="77:57">i</name></expr></argument>, <argument pos:start="77:60" pos:end="77:60"><expr pos:start="77:60" pos:end="77:60"><name pos:start="77:60" pos:end="77:60">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="79:17" pos:end="85:17"><if pos:start="79:17" pos:end="85:17">if <condition pos:start="79:20" pos:end="79:46">(<expr pos:start="79:21" pos:end="79:45"><name pos:start="79:21" pos:end="79:31"><name pos:start="79:21" pos:end="79:25">table</name><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><name pos:start="79:27" pos:end="79:27">j</name></expr>]</index><index pos:start="79:29" pos:end="79:31">[<expr pos:start="79:30" pos:end="79:30"><literal type="number" pos:start="79:30" pos:end="79:30">1</literal></expr>]</index></name> <comment type="block" pos:start="79:33" pos:end="79:40">/*bits*/</comment> <operator pos:start="79:42" pos:end="79:43">!=</operator> <literal type="number" pos:start="79:45" pos:end="79:45">0</literal></expr>)</condition> <block pos:start="79:48" pos:end="85:17">{<block_content pos:start="81:21" pos:end="83:47">

                    <expr_stmt pos:start="81:21" pos:end="81:68"><expr pos:start="81:21" pos:end="81:67"><call pos:start="81:21" pos:end="81:67"><name pos:start="81:21" pos:end="81:26">av_log</name><argument_list pos:start="81:27" pos:end="81:67">(<argument pos:start="81:28" pos:end="81:31"><expr pos:start="81:28" pos:end="81:31"><name pos:start="81:28" pos:end="81:31">NULL</name></expr></argument>, <argument pos:start="81:34" pos:end="81:45"><expr pos:start="81:34" pos:end="81:45"><name pos:start="81:34" pos:end="81:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:48" pos:end="81:66"><expr pos:start="81:48" pos:end="81:66"><literal type="string" pos:start="81:48" pos:end="81:66">"incorrect codes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="83:21" pos:end="83:47">return <expr pos:start="83:28" pos:end="83:46"><name pos:start="83:28" pos:end="83:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:32"><expr pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:27"><name pos:start="87:17" pos:end="87:21">table</name><index pos:start="87:22" pos:end="87:24">[<expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">j</name></expr>]</index><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">1</literal></expr>]</index></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <name pos:start="87:31" pos:end="87:31">n</name></expr>;</expr_stmt> <comment type="line" pos:start="87:34" pos:end="87:39">//bits</comment>

                <expr_stmt pos:start="89:17" pos:end="89:37"><expr pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:27"><name pos:start="89:17" pos:end="89:21">table</name><index pos:start="89:22" pos:end="89:24">[<expr pos:start="89:23" pos:end="89:23"><name pos:start="89:23" pos:end="89:23">j</name></expr>]</index><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>]</index></name> <operator pos:start="89:29" pos:end="89:29">=</operator> <name pos:start="89:31" pos:end="89:36">symbol</name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:25"><expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:17">j</name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <name pos:start="91:22" pos:end="91:24">inc</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="157:9">else <block pos:start="95:16" pos:end="157:9">{<block_content pos:start="99:13" pos:end="155:20">

            <comment type="block" pos:start="97:13" pos:end="97:50">/* fill auxiliary table recursively */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:31"><expr pos:start="99:13" pos:end="99:30"><name pos:start="99:13" pos:end="99:13">n</name> <operator pos:start="99:15" pos:end="99:16">-=</operator> <name pos:start="99:18" pos:end="99:30">table_nb_bits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:55"><expr pos:start="101:13" pos:end="101:54"><name pos:start="101:13" pos:end="101:23">code_prefix</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:30">code</name> <operator pos:start="101:32" pos:end="101:33">&gt;&gt;</operator> <operator pos:start="101:35" pos:end="101:35">(</operator><literal type="number" pos:start="101:36" pos:end="101:39">32</literal> <operator pos:start="101:39" pos:end="101:39">-</operator> <name pos:start="101:41" pos:end="101:53">table_nb_bits</name><operator pos:start="101:54" pos:end="101:54">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:30"><expr pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:25">subtable_bits</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:29">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:30"><expr pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:17">codes</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><name pos:start="105:19" pos:end="105:19">i</name></expr>]</index></name><operator pos:start="105:21" pos:end="105:21">.</operator><name pos:start="105:22" pos:end="105:25">bits</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:29">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:50"><expr pos:start="107:13" pos:end="107:49"><name pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:17">codes</name><index pos:start="107:18" pos:end="107:20">[<expr pos:start="107:19" pos:end="107:19"><name pos:start="107:19" pos:end="107:19">i</name></expr>]</index></name><operator pos:start="107:21" pos:end="107:21">.</operator><name pos:start="107:22" pos:end="107:25">code</name> <operator pos:start="107:27" pos:end="107:27">=</operator> <name pos:start="107:29" pos:end="107:32">code</name> <operator pos:start="107:34" pos:end="107:35">&lt;&lt;</operator> <name pos:start="107:37" pos:end="107:49">table_nb_bits</name></expr>;</expr_stmt>

            <for pos:start="109:13" pos:end="129:13">for <control pos:start="109:17" pos:end="109:44">(<init pos:start="109:18" pos:end="109:25"><expr pos:start="109:18" pos:end="109:24"><name pos:start="109:18" pos:end="109:18">k</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:22">i</name><operator pos:start="109:23" pos:end="109:23">+</operator><literal type="number" pos:start="109:24" pos:end="109:24">1</literal></expr>;</init> <condition pos:start="109:27" pos:end="109:39"><expr pos:start="109:27" pos:end="109:38"><name pos:start="109:27" pos:end="109:27">k</name> <operator pos:start="109:29" pos:end="109:29">&lt;</operator> <name pos:start="109:31" pos:end="109:38">nb_codes</name></expr>;</condition> <incr pos:start="109:41" pos:end="109:43"><expr pos:start="109:41" pos:end="109:43"><name pos:start="109:41" pos:end="109:41">k</name><operator pos:start="109:42" pos:end="109:43">++</operator></expr></incr>)</control> <block pos:start="109:46" pos:end="129:13">{<block_content pos:start="111:17" pos:end="127:56">

                <expr_stmt pos:start="111:17" pos:end="111:50"><expr pos:start="111:17" pos:end="111:49"><name pos:start="111:17" pos:end="111:17">n</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:28"><name pos:start="111:21" pos:end="111:25">codes</name><index pos:start="111:26" pos:end="111:28">[<expr pos:start="111:27" pos:end="111:27"><name pos:start="111:27" pos:end="111:27">k</name></expr>]</index></name><operator pos:start="111:29" pos:end="111:29">.</operator><name pos:start="111:30" pos:end="111:33">bits</name> <operator pos:start="111:35" pos:end="111:35">-</operator> <name pos:start="111:37" pos:end="111:49">table_nb_bits</name></expr>;</expr_stmt>

                <if_stmt pos:start="113:17" pos:end="115:26"><if pos:start="113:17" pos:end="115:26">if <condition pos:start="113:20" pos:end="113:27">(<expr pos:start="113:21" pos:end="113:26"><name pos:start="113:21" pos:end="113:21">n</name> <operator pos:start="113:23" pos:end="113:24">&lt;=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>)</condition><block type="pseudo" pos:start="115:21" pos:end="115:26"><block_content pos:start="115:21" pos:end="115:26">

                    <break pos:start="115:21" pos:end="115:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:37"><expr pos:start="117:17" pos:end="117:36"><name pos:start="117:17" pos:end="117:20">code</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:31"><name pos:start="117:24" pos:end="117:28">codes</name><index pos:start="117:29" pos:end="117:31">[<expr pos:start="117:30" pos:end="117:30"><name pos:start="117:30" pos:end="117:30">k</name></expr>]</index></name><operator pos:start="117:32" pos:end="117:32">.</operator><name pos:start="117:33" pos:end="117:36">code</name></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="121:26"><if pos:start="119:17" pos:end="121:26">if <condition pos:start="119:20" pos:end="119:64">(<expr pos:start="119:21" pos:end="119:63"><name pos:start="119:21" pos:end="119:24">code</name> <operator pos:start="119:26" pos:end="119:27">&gt;&gt;</operator> <operator pos:start="119:29" pos:end="119:29">(</operator><literal type="number" pos:start="119:30" pos:end="119:33">32</literal> <operator pos:start="119:33" pos:end="119:33">-</operator> <name pos:start="119:35" pos:end="119:47">table_nb_bits</name><operator pos:start="119:48" pos:end="119:48">)</operator> <operator pos:start="119:50" pos:end="119:51">!=</operator> <name pos:start="119:53" pos:end="119:63">code_prefix</name></expr>)</condition><block type="pseudo" pos:start="121:21" pos:end="121:26"><block_content pos:start="121:21" pos:end="121:26">

                    <break pos:start="121:21" pos:end="121:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:34"><expr pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:21">codes</name><index pos:start="123:22" pos:end="123:24">[<expr pos:start="123:23" pos:end="123:23"><name pos:start="123:23" pos:end="123:23">k</name></expr>]</index></name><operator pos:start="123:25" pos:end="123:25">.</operator><name pos:start="123:26" pos:end="123:29">bits</name> <operator pos:start="123:31" pos:end="123:31">=</operator> <name pos:start="123:33" pos:end="123:33">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:54"><expr pos:start="125:17" pos:end="125:53"><name pos:start="125:17" pos:end="125:24"><name pos:start="125:17" pos:end="125:21">codes</name><index pos:start="125:22" pos:end="125:24">[<expr pos:start="125:23" pos:end="125:23"><name pos:start="125:23" pos:end="125:23">k</name></expr>]</index></name><operator pos:start="125:25" pos:end="125:25">.</operator><name pos:start="125:26" pos:end="125:29">code</name> <operator pos:start="125:31" pos:end="125:31">=</operator> <name pos:start="125:33" pos:end="125:36">code</name> <operator pos:start="125:38" pos:end="125:39">&lt;&lt;</operator> <name pos:start="125:41" pos:end="125:53">table_nb_bits</name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:56"><expr pos:start="127:17" pos:end="127:55"><name pos:start="127:17" pos:end="127:29">subtable_bits</name> <operator pos:start="127:31" pos:end="127:31">=</operator> <call pos:start="127:33" pos:end="127:55"><name pos:start="127:33" pos:end="127:37">FFMAX</name><argument_list pos:start="127:38" pos:end="127:55">(<argument pos:start="127:39" pos:end="127:51"><expr pos:start="127:39" pos:end="127:51"><name pos:start="127:39" pos:end="127:51">subtable_bits</name></expr></argument>, <argument pos:start="127:54" pos:end="127:54"><expr pos:start="127:54" pos:end="127:54"><name pos:start="127:54" pos:end="127:54">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="131:13" pos:end="131:64"><expr pos:start="131:13" pos:end="131:63"><name pos:start="131:13" pos:end="131:25">subtable_bits</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <call pos:start="131:29" pos:end="131:63"><name pos:start="131:29" pos:end="131:33">FFMIN</name><argument_list pos:start="131:34" pos:end="131:63">(<argument pos:start="131:35" pos:end="131:47"><expr pos:start="131:35" pos:end="131:47"><name pos:start="131:35" pos:end="131:47">subtable_bits</name></expr></argument>, <argument pos:start="131:50" pos:end="131:62"><expr pos:start="131:50" pos:end="131:62"><name pos:start="131:50" pos:end="131:62">table_nb_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:102"><expr pos:start="133:13" pos:end="133:101"><name pos:start="133:13" pos:end="133:13">j</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <ternary pos:start="133:17" pos:end="133:101"><condition pos:start="133:17" pos:end="133:39"><expr pos:start="133:17" pos:end="133:37"><operator pos:start="133:17" pos:end="133:17">(</operator><name pos:start="133:18" pos:end="133:22">flags</name> <operator pos:start="133:24" pos:end="133:24">&amp;</operator> <name pos:start="133:26" pos:end="133:36">INIT_VLC_LE</name><operator pos:start="133:37" pos:end="133:37">)</operator></expr> ?</condition><then pos:start="133:41" pos:end="133:87"> <expr pos:start="133:41" pos:end="133:87"><call pos:start="133:41" pos:end="133:63"><name pos:start="133:41" pos:end="133:50">bitswap_32</name><argument_list pos:start="133:51" pos:end="133:63">(<argument pos:start="133:52" pos:end="133:62"><expr pos:start="133:52" pos:end="133:62"><name pos:start="133:52" pos:end="133:62">code_prefix</name></expr></argument>)</argument_list></call> <operator pos:start="133:65" pos:end="133:66">&gt;&gt;</operator> <operator pos:start="133:68" pos:end="133:68">(</operator><literal type="number" pos:start="133:69" pos:end="133:72">32</literal> <operator pos:start="133:72" pos:end="133:72">-</operator> <name pos:start="133:74" pos:end="133:86">table_nb_bits</name><operator pos:start="133:87" pos:end="133:87">)</operator></expr> </then><else pos:start="133:89" pos:end="133:101">: <expr pos:start="133:91" pos:end="133:101"><name pos:start="133:91" pos:end="133:101">code_prefix</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:17">table</name><index pos:start="135:18" pos:end="135:20">[<expr pos:start="135:19" pos:end="135:19"><name pos:start="135:19" pos:end="135:19">j</name></expr>]</index><index pos:start="135:21" pos:end="135:23">[<expr pos:start="135:22" pos:end="135:22"><literal type="number" pos:start="135:22" pos:end="135:22">1</literal></expr>]</index></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <operator pos:start="135:27" pos:end="135:27">-</operator><name pos:start="135:28" pos:end="135:40">subtable_bits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="139:54"><expr pos:start="137:13" pos:end="139:53"><call pos:start="137:13" pos:end="139:53"><name pos:start="137:13" pos:end="137:19">av_dlog</name><argument_list pos:start="137:20" pos:end="139:53">(<argument pos:start="137:21" pos:end="137:24"><expr pos:start="137:21" pos:end="137:24"><name pos:start="137:21" pos:end="137:24">NULL</name></expr></argument>, <argument pos:start="137:27" pos:end="137:50"><expr pos:start="137:27" pos:end="137:50"><literal type="string" pos:start="137:27" pos:end="137:50">"%4x: n=%d (subtable)\n"</literal></expr></argument>,

                    <argument pos:start="139:21" pos:end="139:21"><expr pos:start="139:21" pos:end="139:21"><name pos:start="139:21" pos:end="139:21">j</name></expr></argument>, <argument pos:start="139:24" pos:end="139:52"><expr pos:start="139:24" pos:end="139:52"><name pos:start="139:24" pos:end="139:31"><name pos:start="139:24" pos:end="139:28">codes</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><name pos:start="139:30" pos:end="139:30">i</name></expr>]</index></name><operator pos:start="139:32" pos:end="139:32">.</operator><name pos:start="139:33" pos:end="139:36">bits</name> <operator pos:start="139:38" pos:end="139:38">+</operator> <name pos:start="139:40" pos:end="139:52">table_nb_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:73"><expr pos:start="141:13" pos:end="141:72"><name pos:start="141:13" pos:end="141:17">index</name> <operator pos:start="141:19" pos:end="141:19">=</operator> <call pos:start="141:21" pos:end="141:72"><name pos:start="141:21" pos:end="141:31">build_table</name><argument_list pos:start="141:32" pos:end="141:72">(<argument pos:start="141:33" pos:end="141:35"><expr pos:start="141:33" pos:end="141:35"><name pos:start="141:33" pos:end="141:35">vlc</name></expr></argument>, <argument pos:start="141:38" pos:end="141:50"><expr pos:start="141:38" pos:end="141:50"><name pos:start="141:38" pos:end="141:50">subtable_bits</name></expr></argument>, <argument pos:start="141:53" pos:end="141:55"><expr pos:start="141:53" pos:end="141:55"><name pos:start="141:53" pos:end="141:53">k</name><operator pos:start="141:54" pos:end="141:54">-</operator><name pos:start="141:55" pos:end="141:55">i</name></expr></argument>, <argument pos:start="141:58" pos:end="141:64"><expr pos:start="141:58" pos:end="141:64"><name pos:start="141:58" pos:end="141:62">codes</name><operator pos:start="141:63" pos:end="141:63">+</operator><name pos:start="141:64" pos:end="141:64">i</name></expr></argument>, <argument pos:start="141:67" pos:end="141:71"><expr pos:start="141:67" pos:end="141:71"><name pos:start="141:67" pos:end="141:71">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="145:29"><if pos:start="143:13" pos:end="145:29">if <condition pos:start="143:16" pos:end="143:26">(<expr pos:start="143:17" pos:end="143:25"><name pos:start="143:17" pos:end="143:21">index</name> <operator pos:start="143:23" pos:end="143:23">&lt;</operator> <literal type="number" pos:start="143:25" pos:end="143:25">0</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:29"><block_content pos:start="145:17" pos:end="145:29">

                <return pos:start="145:17" pos:end="145:29">return <expr pos:start="145:24" pos:end="145:28"><name pos:start="145:24" pos:end="145:28">index</name></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="147:13" pos:end="147:63">/* note: realloc has been done, so reload tables */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:45"><expr pos:start="149:13" pos:end="149:44"><name pos:start="149:13" pos:end="149:17">table</name> <operator pos:start="149:19" pos:end="149:19">=</operator> <operator pos:start="149:21" pos:end="149:21">&amp;</operator><name pos:start="149:22" pos:end="149:44"><name pos:start="149:22" pos:end="149:24">vlc</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:31">table</name><index pos:start="149:32" pos:end="149:44">[<expr pos:start="149:33" pos:end="149:43"><name pos:start="149:33" pos:end="149:43">table_index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:32"><expr pos:start="151:13" pos:end="151:31"><name pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:17">table</name><index pos:start="151:18" pos:end="151:20">[<expr pos:start="151:19" pos:end="151:19"><name pos:start="151:19" pos:end="151:19">j</name></expr>]</index><index pos:start="151:21" pos:end="151:23">[<expr pos:start="151:22" pos:end="151:22"><literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>]</index></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:31">index</name></expr>;</expr_stmt> <comment type="line" pos:start="151:34" pos:end="151:39">//code</comment>

            <expr_stmt pos:start="153:13" pos:end="153:45"><expr pos:start="153:13" pos:end="153:44"><call pos:start="153:13" pos:end="153:44"><name pos:start="153:13" pos:end="153:22">av_assert0</name><argument_list pos:start="153:23" pos:end="153:44">(<argument pos:start="153:24" pos:end="153:43"><expr pos:start="153:24" pos:end="153:43"><name pos:start="153:24" pos:end="153:34"><name pos:start="153:24" pos:end="153:28">table</name><index pos:start="153:29" pos:end="153:31">[<expr pos:start="153:30" pos:end="153:30"><name pos:start="153:30" pos:end="153:30">j</name></expr>]</index><index pos:start="153:32" pos:end="153:34">[<expr pos:start="153:33" pos:end="153:33"><literal type="number" pos:start="153:33" pos:end="153:33">0</literal></expr>]</index></name> <operator pos:start="153:36" pos:end="153:37">==</operator> <name pos:start="153:39" pos:end="153:43">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:20"><expr pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:13">i</name> <operator pos:start="155:15" pos:end="155:15">=</operator> <name pos:start="155:17" pos:end="155:17">k</name><operator pos:start="155:18" pos:end="155:18">-</operator><literal type="number" pos:start="155:19" pos:end="155:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="161:5" pos:end="161:23">return <expr pos:start="161:12" pos:end="161:22"><name pos:start="161:12" pos:end="161:22">table_index</name></expr>;</return>

</block_content>}</block></function>
</unit>
