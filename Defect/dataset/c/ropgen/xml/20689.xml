<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20689.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="165:1"><decl pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">ff_convert_matrix</name><argument_list pos:start="1:23" pos:end="7:63">(<argument pos:start="1:24" pos:end="1:40"><expr pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:37">MpegEncContext</name> <operator pos:start="1:39" pos:end="1:39">*</operator><name pos:start="1:40" pos:end="1:40">s</name></expr></argument>, <argument pos:start="1:43" pos:end="1:57"><expr pos:start="1:43" pos:end="1:57"><call pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:45">int</name> <argument_list pos:start="1:47" pos:end="1:53">(<argument pos:start="1:48" pos:end="1:52"><expr pos:start="1:48" pos:end="1:52"><operator pos:start="1:48" pos:end="1:48">*</operator><name pos:start="1:49" pos:end="1:52">qmat</name></expr></argument>)</argument_list></call><index pos:start="1:54" pos:end="1:57">[<expr pos:start="1:55" pos:end="1:56"><literal type="number" pos:start="1:55" pos:end="1:56">64</literal></expr>]</index></expr></argument>,

                       <argument pos:start="3:24" pos:end="3:48"><expr pos:start="3:24" pos:end="3:48"><call pos:start="3:24" pos:end="3:41"><name pos:start="3:24" pos:end="3:31">uint16_t</name> <argument_list pos:start="3:33" pos:end="3:41">(<argument pos:start="3:34" pos:end="3:40"><expr pos:start="3:34" pos:end="3:40"><operator pos:start="3:34" pos:end="3:34">*</operator><name pos:start="3:35" pos:end="3:40">qmat16</name></expr></argument>)</argument_list></call><index pos:start="3:42" pos:end="3:44">[<expr pos:start="3:43" pos:end="3:43"><literal type="number" pos:start="3:43" pos:end="3:43">2</literal></expr>]</index><index pos:start="3:45" pos:end="3:48">[<expr pos:start="3:46" pos:end="3:47"><literal type="number" pos:start="3:46" pos:end="3:47">64</literal></expr>]</index></expr></argument>,

                       <argument pos:start="5:24" pos:end="5:51"><expr pos:start="5:24" pos:end="5:51"><specifier pos:start="5:24" pos:end="5:28">const</specifier> <name pos:start="5:30" pos:end="5:37">uint16_t</name> <operator pos:start="5:39" pos:end="5:39">*</operator><name pos:start="5:40" pos:end="5:51">quant_matrix</name></expr></argument>,

                       <argument pos:start="7:24" pos:end="7:31"><expr pos:start="7:24" pos:end="7:31"><name pos:start="7:24" pos:end="7:26">int</name> <name pos:start="7:28" pos:end="7:31">bias</name></expr></argument>, <argument pos:start="7:34" pos:end="7:41"><expr pos:start="7:34" pos:end="7:41"><name pos:start="7:34" pos:end="7:36">int</name> <name pos:start="7:38" pos:end="7:41">qmin</name></expr></argument>, <argument pos:start="7:44" pos:end="7:51"><expr pos:start="7:44" pos:end="7:51"><name pos:start="7:44" pos:end="7:46">int</name> <name pos:start="7:48" pos:end="7:51">qmax</name></expr></argument>, <argument pos:start="7:54" pos:end="7:62"><expr pos:start="7:54" pos:end="7:62"><name pos:start="7:54" pos:end="7:56">int</name> <name pos:start="7:58" pos:end="7:62">intra</name></expr></argument>)</argument_list>

<block pos:start="9:1" pos:end="165:1">{<block_content pos:start="11:5" pos:end="163:5">

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">FDCTDSPContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">fdsp</name> <init pos:start="11:26" pos:end="11:35">= <expr pos:start="11:28" pos:end="11:35"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">fdsp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">qscale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">shift</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="153:5">for <control pos:start="19:9" pos:end="19:49">(<init pos:start="19:10" pos:end="19:23"><expr pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:15">qscale</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:22">qmin</name></expr>;</init> <condition pos:start="19:25" pos:end="19:39"><expr pos:start="19:25" pos:end="19:38"><name pos:start="19:25" pos:end="19:30">qscale</name> <operator pos:start="19:32" pos:end="19:33">&lt;=</operator> <name pos:start="19:35" pos:end="19:38">qmax</name></expr>;</condition> <incr pos:start="19:41" pos:end="19:48"><expr pos:start="19:41" pos:end="19:48"><name pos:start="19:41" pos:end="19:46">qscale</name><operator pos:start="19:47" pos:end="19:48">++</operator></expr></incr>)</control> <block pos:start="19:51" pos:end="153:5">{<block_content pos:start="21:9" pos:end="151:9">

        <decl_stmt pos:start="21:9" pos:end="21:14"><decl pos:start="21:9" pos:end="21:13"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:20"><decl pos:start="23:9" pos:end="23:19"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:19">qscale2</name></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="29:51"><if pos:start="27:9" pos:end="27:74">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:27">q_scale_type</name></name></expr>)</condition><block type="pseudo" pos:start="27:30" pos:end="27:74"><block_content pos:start="27:30" pos:end="27:74"> <expr_stmt pos:start="27:30" pos:end="27:74"><expr pos:start="27:30" pos:end="27:73"><name pos:start="27:30" pos:end="27:36">qscale2</name> <operator pos:start="27:38" pos:end="27:38">=</operator> <name pos:start="27:40" pos:end="27:73"><name pos:start="27:40" pos:end="27:65">ff_mpeg2_non_linear_qscale</name><index pos:start="27:66" pos:end="27:73">[<expr pos:start="27:67" pos:end="27:72"><name pos:start="27:67" pos:end="27:72">qscale</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="29:9" pos:end="29:51">else<block type="pseudo" pos:start="29:30" pos:end="29:51"><block_content pos:start="29:30" pos:end="29:51">                 <expr_stmt pos:start="29:30" pos:end="29:51"><expr pos:start="29:30" pos:end="29:50"><name pos:start="29:30" pos:end="29:36">qscale2</name> <operator pos:start="29:38" pos:end="29:38">=</operator> <name pos:start="29:40" pos:end="29:45">qscale</name> <operator pos:start="29:47" pos:end="29:48">&lt;&lt;</operator> <literal type="number" pos:start="29:50" pos:end="29:50">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="33:9" pos:end="131:9"><if pos:start="33:9" pos:end="65:9">if <condition pos:start="33:12" pos:end="41:48">(<expr pos:start="33:13" pos:end="41:47"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:16">fdsp</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:22">fdct</name></name> <operator pos:start="33:24" pos:end="33:25">==</operator> <name pos:start="33:27" pos:end="33:46">ff_jpeg_fdct_islow_8</name>  <operator pos:start="33:49" pos:end="36:0">||</operator>

<cpp:if pos:start="35:1" pos:end="35:18">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:18">CONFIG_FAANDCT</name></expr></cpp:if>

            <name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:16">fdsp</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">fdct</name></name> <operator pos:start="37:24" pos:end="37:25">==</operator> <name pos:start="37:27" pos:end="37:36">ff_faandct</name>            <operator pos:start="37:49" pos:end="40:0">||</operator>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="39:8" pos:end="39:27">/* CONFIG_FAANDCT */</comment>

            <name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:16">fdsp</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:22">fdct</name></name> <operator pos:start="41:24" pos:end="41:25">==</operator> <name pos:start="41:27" pos:end="41:47">ff_jpeg_fdct_islow_10</name></expr>)</condition> <block pos:start="41:50" pos:end="65:9">{<block_content pos:start="43:13" pos:end="63:13">

            <for pos:start="43:13" pos:end="63:13">for <control pos:start="43:17" pos:end="43:36">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:31"><expr pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:25">i</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <literal type="number" pos:start="43:29" pos:end="43:30">64</literal></expr>;</condition> <incr pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:33">i</name><operator pos:start="43:34" pos:end="43:35">++</operator></expr></incr>)</control> <block pos:start="43:38" pos:end="63:13">{<block_content pos:start="45:17" pos:end="61:75">

                <decl_stmt pos:start="45:17" pos:end="45:58"><decl pos:start="45:17" pos:end="45:57"><type pos:start="45:17" pos:end="45:25"><specifier pos:start="45:17" pos:end="45:21">const</specifier> <name pos:start="45:23" pos:end="45:25">int</name></type> <name pos:start="45:27" pos:end="45:27">j</name> <init pos:start="45:29" pos:end="45:57">= <expr pos:start="45:31" pos:end="45:57"><name pos:start="45:31" pos:end="45:57"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:37">idsp</name><operator pos:start="45:38" pos:end="45:38">.</operator><name pos:start="45:39" pos:end="45:54">idct_permutation</name><index pos:start="45:55" pos:end="45:57">[<expr pos:start="45:56" pos:end="45:56"><name pos:start="45:56" pos:end="45:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="47:17" pos:end="47:66"><decl pos:start="47:17" pos:end="47:65"><type pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:23">int64_t</name></type> <name pos:start="47:25" pos:end="47:27">den</name> <init pos:start="47:29" pos:end="47:65">= <expr pos:start="47:31" pos:end="47:65"><operator pos:start="47:31" pos:end="47:31">(</operator><name pos:start="47:32" pos:end="47:38">int64_t</name><operator pos:start="47:39" pos:end="47:39">)</operator> <name pos:start="47:41" pos:end="47:47">qscale2</name> <operator pos:start="47:49" pos:end="47:49">*</operator> <name pos:start="47:51" pos:end="47:65"><name pos:start="47:51" pos:end="47:62">quant_matrix</name><index pos:start="47:63" pos:end="47:65">[<expr pos:start="47:64" pos:end="47:64"><name pos:start="47:64" pos:end="47:64">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="49:17" pos:end="57:65">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905

                 * Assume x = ff_aanscales[i] * qscale * quant_matrix[i]

                 *             19952 &lt;=              x  &lt;= 249205026

                 * (1 &lt;&lt; 36) / 19952 &gt;= (1 &lt;&lt; 36) / (x) &gt;= (1 &lt;&lt; 36) / 249205026

                 *           3444240 &gt;= (1 &lt;&lt; 36) / (x) &gt;= 275 */</comment>



                <expr_stmt pos:start="61:17" pos:end="61:75"><expr pos:start="61:17" pos:end="61:74"><name pos:start="61:17" pos:end="61:31"><name pos:start="61:17" pos:end="61:20">qmat</name><index pos:start="61:21" pos:end="61:28">[<expr pos:start="61:22" pos:end="61:27"><name pos:start="61:22" pos:end="61:27">qscale</name></expr>]</index><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">i</name></expr>]</index></name> <operator pos:start="61:33" pos:end="61:33">=</operator> <operator pos:start="61:35" pos:end="61:35">(</operator><name pos:start="61:36" pos:end="61:38">int</name><operator pos:start="61:39" pos:end="61:39">)</operator><operator pos:start="61:40" pos:end="61:40">(</operator><operator pos:start="61:41" pos:end="61:41">(</operator><call pos:start="61:42" pos:end="61:52"><name pos:start="61:42" pos:end="61:49">UINT64_C</name><argument_list pos:start="61:50" pos:end="61:52">(<argument pos:start="61:51" pos:end="61:51"><expr pos:start="61:51" pos:end="61:51"><literal type="number" pos:start="61:51" pos:end="61:51">2</literal></expr></argument>)</argument_list></call> <operator pos:start="61:54" pos:end="61:55">&lt;&lt;</operator> <name pos:start="61:57" pos:end="61:66">QMAT_SHIFT</name><operator pos:start="61:67" pos:end="61:67">)</operator> <operator pos:start="61:69" pos:end="61:69">/</operator> <name pos:start="61:71" pos:end="61:73">den</name><operator pos:start="61:74" pos:end="61:74">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="89:9">else if <condition pos:start="65:19" pos:end="65:47">(<expr pos:start="65:20" pos:end="65:46"><name pos:start="65:20" pos:end="65:29"><name pos:start="65:20" pos:end="65:23">fdsp</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:29">fdct</name></name> <operator pos:start="65:31" pos:end="65:32">==</operator> <name pos:start="65:34" pos:end="65:46">ff_fdct_ifast</name></expr>)</condition> <block pos:start="65:49" pos:end="89:9">{<block_content pos:start="67:13" pos:end="87:13">

            <for pos:start="67:13" pos:end="87:13">for <control pos:start="67:17" pos:end="67:36">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">i</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:31"><expr pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:25">i</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <literal type="number" pos:start="67:29" pos:end="67:30">64</literal></expr>;</condition> <incr pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:33">i</name><operator pos:start="67:34" pos:end="67:35">++</operator></expr></incr>)</control> <block pos:start="67:38" pos:end="87:13">{<block_content pos:start="69:17" pos:end="85:82">

                <decl_stmt pos:start="69:17" pos:end="69:58"><decl pos:start="69:17" pos:end="69:57"><type pos:start="69:17" pos:end="69:25"><specifier pos:start="69:17" pos:end="69:21">const</specifier> <name pos:start="69:23" pos:end="69:25">int</name></type> <name pos:start="69:27" pos:end="69:27">j</name> <init pos:start="69:29" pos:end="69:57">= <expr pos:start="69:31" pos:end="69:57"><name pos:start="69:31" pos:end="69:57"><name pos:start="69:31" pos:end="69:31">s</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:37">idsp</name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:54">idct_permutation</name><index pos:start="69:55" pos:end="69:57">[<expr pos:start="69:56" pos:end="69:56"><name pos:start="69:56" pos:end="69:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="71:17" pos:end="71:84"><decl pos:start="71:17" pos:end="71:83"><type pos:start="71:17" pos:end="71:23"><name pos:start="71:17" pos:end="71:23">int64_t</name></type> <name pos:start="71:25" pos:end="71:27">den</name> <init pos:start="71:29" pos:end="71:83">= <expr pos:start="71:31" pos:end="71:83"><name pos:start="71:31" pos:end="71:45"><name pos:start="71:31" pos:end="71:42">ff_aanscales</name><index pos:start="71:43" pos:end="71:45">[<expr pos:start="71:44" pos:end="71:44"><name pos:start="71:44" pos:end="71:44">i</name></expr>]</index></name> <operator pos:start="71:47" pos:end="71:47">*</operator> <operator pos:start="71:49" pos:end="71:49">(</operator><name pos:start="71:50" pos:end="71:56">int64_t</name><operator pos:start="71:57" pos:end="71:57">)</operator> <name pos:start="71:59" pos:end="71:65">qscale2</name> <operator pos:start="71:67" pos:end="71:67">*</operator> <name pos:start="71:69" pos:end="71:83"><name pos:start="71:69" pos:end="71:80">quant_matrix</name><index pos:start="71:81" pos:end="71:83">[<expr pos:start="71:82" pos:end="71:82"><name pos:start="71:82" pos:end="71:82">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="73:17" pos:end="81:65">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905

                 * Assume x = ff_aanscales[i] * qscale * quant_matrix[i]

                 *             19952 &lt;=              x  &lt;= 249205026

                 * (1 &lt;&lt; 36) / 19952 &gt;= (1 &lt;&lt; 36) / (x) &gt;= (1 &lt;&lt; 36) / 249205026

                 *           3444240 &gt;= (1 &lt;&lt; 36) / (x) &gt;= 275 */</comment>



                <expr_stmt pos:start="85:17" pos:end="85:82"><expr pos:start="85:17" pos:end="85:81"><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:20">qmat</name><index pos:start="85:21" pos:end="85:28">[<expr pos:start="85:22" pos:end="85:27"><name pos:start="85:22" pos:end="85:27">qscale</name></expr>]</index><index pos:start="85:29" pos:end="85:31">[<expr pos:start="85:30" pos:end="85:30"><name pos:start="85:30" pos:end="85:30">i</name></expr>]</index></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <operator pos:start="85:35" pos:end="85:35">(</operator><name pos:start="85:36" pos:end="85:38">int</name><operator pos:start="85:39" pos:end="85:39">)</operator><operator pos:start="85:40" pos:end="85:40">(</operator><operator pos:start="85:41" pos:end="85:41">(</operator><call pos:start="85:42" pos:end="85:52"><name pos:start="85:42" pos:end="85:49">UINT64_C</name><argument_list pos:start="85:50" pos:end="85:52">(<argument pos:start="85:51" pos:end="85:51"><expr pos:start="85:51" pos:end="85:51"><literal type="number" pos:start="85:51" pos:end="85:51">2</literal></expr></argument>)</argument_list></call> <operator pos:start="85:54" pos:end="85:55">&lt;&lt;</operator> <operator pos:start="85:57" pos:end="85:57">(</operator><name pos:start="85:58" pos:end="85:67">QMAT_SHIFT</name> <operator pos:start="85:69" pos:end="85:69">+</operator> <literal type="number" pos:start="85:71" pos:end="85:72">14</literal><operator pos:start="85:73" pos:end="85:73">)</operator><operator pos:start="85:74" pos:end="85:74">)</operator> <operator pos:start="85:76" pos:end="85:76">/</operator> <name pos:start="85:78" pos:end="85:80">den</name><operator pos:start="85:81" pos:end="85:81">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="131:9">else <block pos:start="89:16" pos:end="131:9">{<block_content pos:start="91:13" pos:end="129:13">

            <for pos:start="91:13" pos:end="129:13">for <control pos:start="91:17" pos:end="91:36">(<init pos:start="91:18" pos:end="91:23"><expr pos:start="91:18" pos:end="91:22"><name pos:start="91:18" pos:end="91:18">i</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">0</literal></expr>;</init> <condition pos:start="91:25" pos:end="91:31"><expr pos:start="91:25" pos:end="91:30"><name pos:start="91:25" pos:end="91:25">i</name> <operator pos:start="91:27" pos:end="91:27">&lt;</operator> <literal type="number" pos:start="91:29" pos:end="91:30">64</literal></expr>;</condition> <incr pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><name pos:start="91:33" pos:end="91:33">i</name><operator pos:start="91:34" pos:end="91:35">++</operator></expr></incr>)</control> <block pos:start="91:38" pos:end="129:13">{<block_content pos:start="93:17" pos:end="127:54">

                <decl_stmt pos:start="93:17" pos:end="93:58"><decl pos:start="93:17" pos:end="93:57"><type pos:start="93:17" pos:end="93:25"><specifier pos:start="93:17" pos:end="93:21">const</specifier> <name pos:start="93:23" pos:end="93:25">int</name></type> <name pos:start="93:27" pos:end="93:27">j</name> <init pos:start="93:29" pos:end="93:57">= <expr pos:start="93:31" pos:end="93:57"><name pos:start="93:31" pos:end="93:57"><name pos:start="93:31" pos:end="93:31">s</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:37">idsp</name><operator pos:start="93:38" pos:end="93:38">.</operator><name pos:start="93:39" pos:end="93:54">idct_permutation</name><index pos:start="93:55" pos:end="93:57">[<expr pos:start="93:56" pos:end="93:56"><name pos:start="93:56" pos:end="93:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="95:17" pos:end="95:66"><decl pos:start="95:17" pos:end="95:65"><type pos:start="95:17" pos:end="95:23"><name pos:start="95:17" pos:end="95:23">int64_t</name></type> <name pos:start="95:25" pos:end="95:27">den</name> <init pos:start="95:29" pos:end="95:65">= <expr pos:start="95:31" pos:end="95:65"><operator pos:start="95:31" pos:end="95:31">(</operator><name pos:start="95:32" pos:end="95:38">int64_t</name><operator pos:start="95:39" pos:end="95:39">)</operator> <name pos:start="95:41" pos:end="95:47">qscale2</name> <operator pos:start="95:49" pos:end="95:49">*</operator> <name pos:start="95:51" pos:end="95:65"><name pos:start="95:51" pos:end="95:62">quant_matrix</name><index pos:start="95:63" pos:end="95:65">[<expr pos:start="95:64" pos:end="95:64"><name pos:start="95:64" pos:end="95:64">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="97:17" pos:end="105:64">/* We can safely suppose that 16 &lt;= quant_matrix[i] &lt;= 255

                 * Assume x = qscale * quant_matrix[i]

                 * So             16 &lt;=              x  &lt;= 7905

                 * so (1 &lt;&lt; 19) / 16 &gt;= (1 &lt;&lt; 19) / (x) &gt;= (1 &lt;&lt; 19) / 7905

                 * so          32768 &gt;= (1 &lt;&lt; 19) / (x) &gt;= 67 */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:75"><expr pos:start="107:17" pos:end="107:74"><name pos:start="107:17" pos:end="107:31"><name pos:start="107:17" pos:end="107:20">qmat</name><index pos:start="107:21" pos:end="107:28">[<expr pos:start="107:22" pos:end="107:27"><name pos:start="107:22" pos:end="107:27">qscale</name></expr>]</index><index pos:start="107:29" pos:end="107:31">[<expr pos:start="107:30" pos:end="107:30"><name pos:start="107:30" pos:end="107:30">i</name></expr>]</index></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <operator pos:start="107:35" pos:end="107:35">(</operator><name pos:start="107:36" pos:end="107:38">int</name><operator pos:start="107:39" pos:end="107:39">)</operator><operator pos:start="107:40" pos:end="107:40">(</operator><operator pos:start="107:41" pos:end="107:41">(</operator><call pos:start="107:42" pos:end="107:52"><name pos:start="107:42" pos:end="107:49">UINT64_C</name><argument_list pos:start="107:50" pos:end="107:52">(<argument pos:start="107:51" pos:end="107:51"><expr pos:start="107:51" pos:end="107:51"><literal type="number" pos:start="107:51" pos:end="107:51">2</literal></expr></argument>)</argument_list></call> <operator pos:start="107:54" pos:end="107:55">&lt;&lt;</operator> <name pos:start="107:57" pos:end="107:66">QMAT_SHIFT</name><operator pos:start="107:67" pos:end="107:67">)</operator> <operator pos:start="107:69" pos:end="107:69">/</operator> <name pos:start="107:71" pos:end="107:73">den</name><operator pos:start="107:74" pos:end="107:74">)</operator></expr>;</expr_stmt>

                <comment type="line" pos:start="109:17" pos:end="109:61">//qmat  [qscale][i] = (1 &lt;&lt; QMAT_SHIFT_MMX) /</comment>

                <comment type="line" pos:start="111:17" pos:end="111:65">//                    (qscale * quant_matrix[i]);</comment>

                <expr_stmt pos:start="113:17" pos:end="113:67"><expr pos:start="113:17" pos:end="113:66"><name pos:start="113:17" pos:end="113:36"><name pos:start="113:17" pos:end="113:22">qmat16</name><index pos:start="113:23" pos:end="113:30">[<expr pos:start="113:24" pos:end="113:29"><name pos:start="113:24" pos:end="113:29">qscale</name></expr>]</index><index pos:start="113:31" pos:end="113:33">[<expr pos:start="113:32" pos:end="113:32"><literal type="number" pos:start="113:32" pos:end="113:32">0</literal></expr>]</index><index pos:start="113:34" pos:end="113:36">[<expr pos:start="113:35" pos:end="113:35"><name pos:start="113:35" pos:end="113:35">i</name></expr>]</index></name> <operator pos:start="113:38" pos:end="113:38">=</operator> <operator pos:start="113:40" pos:end="113:40">(</operator><literal type="number" pos:start="113:41" pos:end="113:41">2</literal> <operator pos:start="113:43" pos:end="113:44">&lt;&lt;</operator> <name pos:start="113:46" pos:end="113:59">QMAT_SHIFT_MMX</name><operator pos:start="113:60" pos:end="113:60">)</operator> <operator pos:start="113:62" pos:end="113:62">/</operator> <name pos:start="113:64" pos:end="113:66">den</name></expr>;</expr_stmt>



                <if_stmt pos:start="117:17" pos:end="121:57"><if pos:start="117:17" pos:end="121:57">if <condition pos:start="117:20" pos:end="119:54">(<expr pos:start="117:21" pos:end="119:53"><name pos:start="117:21" pos:end="117:40"><name pos:start="117:21" pos:end="117:26">qmat16</name><index pos:start="117:27" pos:end="117:34">[<expr pos:start="117:28" pos:end="117:33"><name pos:start="117:28" pos:end="117:33">qscale</name></expr>]</index><index pos:start="117:35" pos:end="117:37">[<expr pos:start="117:36" pos:end="117:36"><literal type="number" pos:start="117:36" pos:end="117:36">0</literal></expr>]</index><index pos:start="117:38" pos:end="117:40">[<expr pos:start="117:39" pos:end="117:39"><name pos:start="117:39" pos:end="117:39">i</name></expr>]</index></name> <operator pos:start="117:42" pos:end="117:43">==</operator> <literal type="number" pos:start="117:45" pos:end="117:45">0</literal> <operator pos:start="117:47" pos:end="117:48">||</operator>

                    <name pos:start="119:21" pos:end="119:40"><name pos:start="119:21" pos:end="119:26">qmat16</name><index pos:start="119:27" pos:end="119:34">[<expr pos:start="119:28" pos:end="119:33"><name pos:start="119:28" pos:end="119:33">qscale</name></expr>]</index><index pos:start="119:35" pos:end="119:37">[<expr pos:start="119:36" pos:end="119:36"><literal type="number" pos:start="119:36" pos:end="119:36">0</literal></expr>]</index><index pos:start="119:38" pos:end="119:40">[<expr pos:start="119:39" pos:end="119:39"><name pos:start="119:39" pos:end="119:39">i</name></expr>]</index></name> <operator pos:start="119:42" pos:end="119:43">==</operator> <literal type="number" pos:start="119:45" pos:end="119:47">128</literal> <operator pos:start="119:49" pos:end="119:49">*</operator> <literal type="number" pos:start="119:51" pos:end="119:53">256</literal></expr>)</condition><block type="pseudo" pos:start="121:21" pos:end="121:57"><block_content pos:start="121:21" pos:end="121:57">

                    <expr_stmt pos:start="121:21" pos:end="121:57"><expr pos:start="121:21" pos:end="121:56"><name pos:start="121:21" pos:end="121:40"><name pos:start="121:21" pos:end="121:26">qmat16</name><index pos:start="121:27" pos:end="121:34">[<expr pos:start="121:28" pos:end="121:33"><name pos:start="121:28" pos:end="121:33">qscale</name></expr>]</index><index pos:start="121:35" pos:end="121:37">[<expr pos:start="121:36" pos:end="121:36"><literal type="number" pos:start="121:36" pos:end="121:36">0</literal></expr>]</index><index pos:start="121:38" pos:end="121:40">[<expr pos:start="121:39" pos:end="121:39"><name pos:start="121:39" pos:end="121:39">i</name></expr>]</index></name> <operator pos:start="121:42" pos:end="121:42">=</operator> <literal type="number" pos:start="121:44" pos:end="121:46">128</literal> <operator pos:start="121:48" pos:end="121:48">*</operator> <literal type="number" pos:start="121:50" pos:end="121:54">256</literal> <operator pos:start="121:54" pos:end="121:54">-</operator> <literal type="number" pos:start="121:56" pos:end="121:56">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="123:17" pos:end="127:54"><expr pos:start="123:17" pos:end="127:53"><name pos:start="123:17" pos:end="123:36"><name pos:start="123:17" pos:end="123:22">qmat16</name><index pos:start="123:23" pos:end="123:30">[<expr pos:start="123:24" pos:end="123:29"><name pos:start="123:24" pos:end="123:29">qscale</name></expr>]</index><index pos:start="123:31" pos:end="123:33">[<expr pos:start="123:32" pos:end="123:32"><literal type="number" pos:start="123:32" pos:end="123:32">1</literal></expr>]</index><index pos:start="123:34" pos:end="123:36">[<expr pos:start="123:35" pos:end="123:35"><name pos:start="123:35" pos:end="123:35">i</name></expr>]</index></name> <operator pos:start="123:38" pos:end="123:38">=</operator>

                    <call pos:start="125:21" pos:end="127:53"><name pos:start="125:21" pos:end="125:31">ROUNDED_DIV</name><argument_list pos:start="125:32" pos:end="127:53">(<argument pos:start="125:33" pos:end="125:63"><expr pos:start="125:33" pos:end="125:63"><name pos:start="125:33" pos:end="125:36">bias</name> <operator pos:start="125:38" pos:end="125:39">&lt;&lt;</operator> <operator pos:start="125:41" pos:end="125:41">(</operator><literal type="number" pos:start="125:42" pos:end="125:45">16</literal> <operator pos:start="125:45" pos:end="125:45">-</operator> <name pos:start="125:47" pos:end="125:62">QUANT_BIAS_SHIFT</name><operator pos:start="125:63" pos:end="125:63">)</operator></expr></argument>,

                                <argument pos:start="127:33" pos:end="127:52"><expr pos:start="127:33" pos:end="127:52"><name pos:start="127:33" pos:end="127:52"><name pos:start="127:33" pos:end="127:38">qmat16</name><index pos:start="127:39" pos:end="127:46">[<expr pos:start="127:40" pos:end="127:45"><name pos:start="127:40" pos:end="127:45">qscale</name></expr>]</index><index pos:start="127:47" pos:end="127:49">[<expr pos:start="127:48" pos:end="127:48"><literal type="number" pos:start="127:48" pos:end="127:48">0</literal></expr>]</index><index pos:start="127:50" pos:end="127:52">[<expr pos:start="127:51" pos:end="127:51"><name pos:start="127:51" pos:end="127:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <for pos:start="135:9" pos:end="151:9">for <control pos:start="135:13" pos:end="135:36">(<init pos:start="135:14" pos:end="135:23"><expr pos:start="135:14" pos:end="135:22"><name pos:start="135:14" pos:end="135:14">i</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <name pos:start="135:18" pos:end="135:22">intra</name></expr>;</init> <condition pos:start="135:25" pos:end="135:31"><expr pos:start="135:25" pos:end="135:30"><name pos:start="135:25" pos:end="135:25">i</name> <operator pos:start="135:27" pos:end="135:27">&lt;</operator> <literal type="number" pos:start="135:29" pos:end="135:30">64</literal></expr>;</condition> <incr pos:start="135:33" pos:end="135:35"><expr pos:start="135:33" pos:end="135:35"><name pos:start="135:33" pos:end="135:33">i</name><operator pos:start="135:34" pos:end="135:35">++</operator></expr></incr>)</control> <block pos:start="135:38" pos:end="151:9">{<block_content pos:start="137:13" pos:end="149:13">

            <decl_stmt pos:start="137:13" pos:end="137:31"><decl pos:start="137:13" pos:end="137:30"><type pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:19">int64_t</name></type> <name pos:start="137:21" pos:end="137:23">max</name> <init pos:start="137:25" pos:end="137:30">= <expr pos:start="137:27" pos:end="137:30"><literal type="number" pos:start="137:27" pos:end="137:30">8191</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="139:13" pos:end="143:13"><if pos:start="139:13" pos:end="143:13">if <condition pos:start="139:16" pos:end="139:44">(<expr pos:start="139:17" pos:end="139:43"><name pos:start="139:17" pos:end="139:26"><name pos:start="139:17" pos:end="139:20">fdsp</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:26">fdct</name></name> <operator pos:start="139:28" pos:end="139:29">==</operator> <name pos:start="139:31" pos:end="139:43">ff_fdct_ifast</name></expr>)</condition> <block pos:start="139:46" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:55">

                <expr_stmt pos:start="141:17" pos:end="141:55"><expr pos:start="141:17" pos:end="141:54"><name pos:start="141:17" pos:end="141:19">max</name> <operator pos:start="141:21" pos:end="141:21">=</operator> <operator pos:start="141:23" pos:end="141:23">(</operator><literal type="number" pos:start="141:24" pos:end="141:29">8191LL</literal> <operator pos:start="141:31" pos:end="141:31">*</operator> <name pos:start="141:33" pos:end="141:47"><name pos:start="141:33" pos:end="141:44">ff_aanscales</name><index pos:start="141:45" pos:end="141:47">[<expr pos:start="141:46" pos:end="141:46"><name pos:start="141:46" pos:end="141:46">i</name></expr>]</index></name><operator pos:start="141:48" pos:end="141:48">)</operator> <operator pos:start="141:50" pos:end="141:51">&gt;&gt;</operator> <literal type="number" pos:start="141:53" pos:end="141:54">14</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <while pos:start="145:13" pos:end="149:13">while <condition pos:start="145:19" pos:end="145:64">(<expr pos:start="145:20" pos:end="145:63"><operator pos:start="145:20" pos:end="145:20">(</operator><operator pos:start="145:21" pos:end="145:21">(</operator><name pos:start="145:22" pos:end="145:24">max</name> <operator pos:start="145:26" pos:end="145:26">*</operator> <name pos:start="145:28" pos:end="145:42"><name pos:start="145:28" pos:end="145:31">qmat</name><index pos:start="145:32" pos:end="145:39">[<expr pos:start="145:33" pos:end="145:38"><name pos:start="145:33" pos:end="145:38">qscale</name></expr>]</index><index pos:start="145:40" pos:end="145:42">[<expr pos:start="145:41" pos:end="145:41"><name pos:start="145:41" pos:end="145:41">i</name></expr>]</index></name><operator pos:start="145:43" pos:end="145:43">)</operator> <operator pos:start="145:45" pos:end="145:46">&gt;&gt;</operator> <name pos:start="145:48" pos:end="145:52">shift</name><operator pos:start="145:53" pos:end="145:53">)</operator> <operator pos:start="145:55" pos:end="145:55">&gt;</operator> <name pos:start="145:57" pos:end="145:63">INT_MAX</name></expr>)</condition> <block pos:start="145:66" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:24">

                <expr_stmt pos:start="147:17" pos:end="147:24"><expr pos:start="147:17" pos:end="147:23"><name pos:start="147:17" pos:end="147:21">shift</name><operator pos:start="147:22" pos:end="147:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <if_stmt pos:start="155:5" pos:end="163:5"><if pos:start="155:5" pos:end="163:5">if <condition pos:start="155:8" pos:end="155:14">(<expr pos:start="155:9" pos:end="155:13"><name pos:start="155:9" pos:end="155:13">shift</name></expr>)</condition> <block pos:start="155:16" pos:end="163:5">{<block_content pos:start="157:9" pos:end="161:35">

        <expr_stmt pos:start="157:9" pos:end="161:35"><expr pos:start="157:9" pos:end="161:34"><call pos:start="157:9" pos:end="161:34"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="161:34">(<argument pos:start="157:16" pos:end="157:19"><expr pos:start="157:16" pos:end="157:19"><name pos:start="157:16" pos:end="157:19">NULL</name></expr></argument>, <argument pos:start="157:22" pos:end="157:32"><expr pos:start="157:22" pos:end="157:32"><name pos:start="157:22" pos:end="157:32">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="159:16" pos:end="159:76"><expr pos:start="159:16" pos:end="159:76"><literal type="string" pos:start="159:16" pos:end="159:76">"Warning, QMAT_SHIFT is larger than %d, overflows possible\n"</literal></expr></argument>,

               <argument pos:start="161:16" pos:end="161:33"><expr pos:start="161:16" pos:end="161:33"><name pos:start="161:16" pos:end="161:25">QMAT_SHIFT</name> <operator pos:start="161:27" pos:end="161:27">-</operator> <name pos:start="161:29" pos:end="161:33">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></decl></decl_stmt>
</unit>
