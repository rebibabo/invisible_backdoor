<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25054.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">ppc_cpu_list</name> <parameter_list pos:start="1:19" pos:end="1:78">(<parameter pos:start="1:20" pos:end="1:26"><decl pos:start="1:20" pos:end="1:26"><type pos:start="1:20" pos:end="1:26"><name pos:start="1:20" pos:end="1:23">FILE</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:26">f</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:77"><function_decl pos:start="1:29" pos:end="1:77"><type pos:start="1:29" pos:end="1:31"><name pos:start="1:29" pos:end="1:31">int</name></type> (<modifier pos:start="1:34" pos:end="1:34">*</modifier><name pos:start="1:35" pos:end="1:45">cpu_fprintf</name>)<parameter_list pos:start="1:47" pos:end="1:77">(<parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:51">FILE</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">f</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">fmt</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:76"><decl pos:start="1:74" pos:end="1:76"><type pos:start="1:74" pos:end="1:76"><modifier pos:start="1:74" pos:end="1:76">...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="19:5">for <control pos:start="9:9" pos:end="9:22">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:17">;</condition> <incr pos:start="9:19" pos:end="9:21"><expr pos:start="9:19" pos:end="9:21"><name pos:start="9:19" pos:end="9:19">i</name><operator pos:start="9:20" pos:end="9:21">++</operator></expr></incr>)</control> <block pos:start="9:24" pos:end="19:5">{<block_content pos:start="11:9" pos:end="17:18">

        <expr_stmt pos:start="11:9" pos:end="13:58"><expr pos:start="11:9" pos:end="13:57"><call pos:start="11:9" pos:end="13:57">(<modifier pos:start="11:10" pos:end="11:10">*</modifier><name pos:start="11:11" pos:end="11:21">cpu_fprintf</name>)<argument_list pos:start="11:23" pos:end="13:57">(<argument pos:start="11:24" pos:end="11:24"><expr pos:start="11:24" pos:end="11:24"><name pos:start="11:24" pos:end="11:24">f</name></expr></argument>, <argument pos:start="11:27" pos:end="11:52"><expr pos:start="11:27" pos:end="11:52"><literal type="string" pos:start="11:27" pos:end="11:52">"PowerPC %-16s PVR %08x\n"</literal></expr></argument>,

                       <argument pos:start="13:24" pos:end="13:39"><expr pos:start="13:24" pos:end="13:39"><name pos:start="13:24" pos:end="13:34"><name pos:start="13:24" pos:end="13:31">ppc_defs</name><index pos:start="13:32" pos:end="13:34">[<expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">i</name></expr>]</index></name><operator pos:start="13:35" pos:end="13:35">.</operator><name pos:start="13:36" pos:end="13:39">name</name></expr></argument>, <argument pos:start="13:42" pos:end="13:56"><expr pos:start="13:42" pos:end="13:56"><name pos:start="13:42" pos:end="13:52"><name pos:start="13:42" pos:end="13:49">ppc_defs</name><index pos:start="13:50" pos:end="13:52">[<expr pos:start="13:51" pos:end="13:51"><name pos:start="13:51" pos:end="13:51">i</name></expr>]</index></name><operator pos:start="13:53" pos:end="13:53">.</operator><name pos:start="13:54" pos:end="13:56">pvr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:18"><if pos:start="15:9" pos:end="17:18">if <condition pos:start="15:12" pos:end="15:53">(<expr pos:start="15:13" pos:end="15:52"><call pos:start="15:13" pos:end="15:47"><name pos:start="15:13" pos:end="15:18">strcmp</name><argument_list pos:start="15:19" pos:end="15:47">(<argument pos:start="15:20" pos:end="15:35"><expr pos:start="15:20" pos:end="15:35"><name pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:27">ppc_defs</name><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">i</name></expr>]</index></name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:35">name</name></expr></argument>, <argument pos:start="15:38" pos:end="15:46"><expr pos:start="15:38" pos:end="15:46"><literal type="string" pos:start="15:38" pos:end="15:46">"default"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:49" pos:end="15:50">==</operator> <literal type="number" pos:start="15:52" pos:end="15:52">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:18"><block_content pos:start="17:13" pos:end="17:18">

            <break pos:start="17:13" pos:end="17:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
