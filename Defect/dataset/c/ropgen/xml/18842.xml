<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18842.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">noise_scale</name><parameter_list pos:start="1:24" pos:end="1:72">(<parameter pos:start="1:25" pos:end="1:34"><decl pos:start="1:25" pos:end="1:34"><type pos:start="1:25" pos:end="1:34"><name pos:start="1:25" pos:end="1:27">int</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:34">coefs</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:45"><decl pos:start="1:37" pos:end="1:45"><type pos:start="1:37" pos:end="1:45"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:45">scale</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:62">band_energy</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:71"><decl pos:start="1:65" pos:end="1:71"><type pos:start="1:65" pos:end="1:71"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:71">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">ssign</name> <init pos:start="5:15" pos:end="5:34">= <expr pos:start="5:17" pos:end="5:34"><ternary pos:start="5:17" pos:end="5:34"><condition pos:start="5:17" pos:end="5:27"><expr pos:start="5:17" pos:end="5:25"><name pos:start="5:17" pos:end="5:21">scale</name> <operator pos:start="5:23" pos:end="5:23">&lt;</operator> <literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr> ?</condition><then pos:start="5:29" pos:end="5:30"> <expr pos:start="5:29" pos:end="5:30"><operator pos:start="5:29" pos:end="5:29">-</operator><literal type="number" pos:start="5:30" pos:end="5:30">1</literal></expr> </then><else pos:start="5:32" pos:end="5:34">: <expr pos:start="5:34" pos:end="5:34"><literal type="number" pos:start="5:34" pos:end="5:34">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">s</name> <init pos:start="7:11" pos:end="7:24">= <expr pos:start="7:13" pos:end="7:24"><call pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:17">FFABS</name><argument_list pos:start="7:18" pos:end="7:24">(<argument pos:start="7:19" pos:end="7:23"><expr pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:23">scale</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:22">round</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">out</name></decl>, <decl pos:start="11:17" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:17">c</name> <init pos:start="11:19" pos:end="11:34">= <expr pos:start="11:21" pos:end="11:34"><name pos:start="11:21" pos:end="11:34"><name pos:start="11:21" pos:end="11:27">exp2tab</name><index pos:start="11:28" pos:end="11:34">[<expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:29">s</name> <operator pos:start="11:31" pos:end="11:31">&amp;</operator> <literal type="number" pos:start="11:33" pos:end="11:33">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">nlz</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="23:5">while <condition pos:start="17:11" pos:end="17:32">(<expr pos:start="17:12" pos:end="17:31"><name pos:start="17:12" pos:end="17:22">band_energy</name> <operator pos:start="17:24" pos:end="17:24">&gt;</operator> <literal type="number" pos:start="17:26" pos:end="17:31">0x7fff</literal></expr>)</condition> <block pos:start="17:34" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:14">

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:19">band_energy</name> <operator pos:start="19:21" pos:end="19:23">&gt;&gt;=</operator> <literal type="number" pos:start="19:25" pos:end="19:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:11">nlz</name><operator pos:start="21:12" pos:end="21:13">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:5">c</name> <operator pos:start="25:7" pos:end="25:8">/=</operator> <name pos:start="25:10" pos:end="25:20">band_energy</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <literal type="number" pos:start="27:9" pos:end="27:12">21</literal> <operator pos:start="27:12" pos:end="27:12">+</operator> <name pos:start="27:14" pos:end="27:16">nlz</name> <operator pos:start="27:18" pos:end="27:18">-</operator> <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:21">s</name> <operator pos:start="27:23" pos:end="27:24">&gt;&gt;</operator> <literal type="number" pos:start="27:26" pos:end="27:26">2</literal><operator pos:start="27:27" pos:end="27:27">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="59:5"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">s</name> <operator pos:start="31:11" pos:end="31:11">&gt;</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>)</condition> <block pos:start="31:16" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:9">

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:13">round</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">1</literal> <operator pos:start="33:19" pos:end="33:20">&lt;&lt;</operator> <operator pos:start="33:22" pos:end="33:22">(</operator><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal><operator pos:start="33:26" pos:end="33:26">)</operator></expr>;</expr_stmt>

        <for pos:start="35:9" pos:end="41:9">for <control pos:start="35:13" pos:end="35:29">(<init pos:start="35:14" pos:end="35:17"><expr pos:start="35:14" pos:end="35:16"><name pos:start="35:14" pos:end="35:14">i</name><operator pos:start="35:15" pos:end="35:15">=</operator><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</init> <condition pos:start="35:19" pos:end="35:24"><expr pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:19">i</name><operator pos:start="35:20" pos:end="35:20">&lt;</operator><name pos:start="35:21" pos:end="35:23">len</name></expr>;</condition> <incr pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:26">i</name><operator pos:start="35:27" pos:end="35:28">++</operator></expr></incr>)</control> <block pos:start="35:31" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:55">

            <expr_stmt pos:start="37:13" pos:end="37:55"><expr pos:start="37:13" pos:end="37:54"><name pos:start="37:13" pos:end="37:15">out</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:22">int</name><operator pos:start="37:23" pos:end="37:23">)</operator><operator pos:start="37:24" pos:end="37:24">(</operator><operator pos:start="37:25" pos:end="37:25">(</operator><operator pos:start="37:26" pos:end="37:26">(</operator><name pos:start="37:27" pos:end="37:33">int64_t</name><operator pos:start="37:34" pos:end="37:34">)</operator><name pos:start="37:35" pos:end="37:42"><name pos:start="37:35" pos:end="37:39">coefs</name><index pos:start="37:40" pos:end="37:42">[<expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">i</name></expr>]</index></name> <operator pos:start="37:44" pos:end="37:44">*</operator> <name pos:start="37:46" pos:end="37:46">c</name><operator pos:start="37:47" pos:end="37:47">)</operator> <operator pos:start="37:49" pos:end="37:50">&gt;&gt;</operator> <literal type="number" pos:start="37:52" pos:end="37:53">32</literal><operator pos:start="37:54" pos:end="37:54">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:55"><expr pos:start="39:13" pos:end="39:54"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:17">coefs</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><name pos:start="39:19" pos:end="39:19">i</name></expr>]</index></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <operator pos:start="39:24" pos:end="39:24">(</operator><operator pos:start="39:25" pos:end="39:25">(</operator><name pos:start="39:26" pos:end="39:28">int</name><operator pos:start="39:29" pos:end="39:29">)</operator><operator pos:start="39:30" pos:end="39:30">(</operator><name pos:start="39:31" pos:end="39:33">out</name><operator pos:start="39:34" pos:end="39:34">+</operator><name pos:start="39:35" pos:end="39:39">round</name><operator pos:start="39:40" pos:end="39:40">)</operator> <operator pos:start="39:42" pos:end="39:43">&gt;&gt;</operator> <name pos:start="39:45" pos:end="39:45">s</name><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">*</operator> <name pos:start="39:50" pos:end="39:54">ssign</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if>

    <else pos:start="45:5" pos:end="59:5">else <block pos:start="45:10" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:9">

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:9">s</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <name pos:start="47:13" pos:end="47:13">s</name> <operator pos:start="47:15" pos:end="47:15">+</operator> <literal type="number" pos:start="47:17" pos:end="47:18">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:13">round</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">1</literal> <operator pos:start="49:19" pos:end="49:20">&lt;&lt;</operator> <operator pos:start="49:22" pos:end="49:22">(</operator><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:24">-</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal><operator pos:start="49:26" pos:end="49:26">)</operator></expr>;</expr_stmt>

        <for pos:start="51:9" pos:end="57:9">for <control pos:start="51:13" pos:end="51:29">(<init pos:start="51:14" pos:end="51:17"><expr pos:start="51:14" pos:end="51:16"><name pos:start="51:14" pos:end="51:14">i</name><operator pos:start="51:15" pos:end="51:15">=</operator><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</init> <condition pos:start="51:19" pos:end="51:24"><expr pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:19">i</name><operator pos:start="51:20" pos:end="51:20">&lt;</operator><name pos:start="51:21" pos:end="51:23">len</name></expr>;</condition> <incr pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:26">i</name><operator pos:start="51:27" pos:end="51:28">++</operator></expr></incr>)</control> <block pos:start="51:31" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:35">

            <expr_stmt pos:start="53:13" pos:end="53:71"><expr pos:start="53:13" pos:end="53:70"><name pos:start="53:13" pos:end="53:15">out</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <operator pos:start="53:19" pos:end="53:19">(</operator><name pos:start="53:20" pos:end="53:22">int</name><operator pos:start="53:23" pos:end="53:23">)</operator><operator pos:start="53:24" pos:end="53:24">(</operator><operator pos:start="53:25" pos:end="53:25">(</operator><name pos:start="53:26" pos:end="53:32">int64_t</name><operator pos:start="53:33" pos:end="53:33">)</operator><operator pos:start="53:34" pos:end="53:34">(</operator><operator pos:start="53:35" pos:end="53:35">(</operator><name pos:start="53:36" pos:end="53:42">int64_t</name><operator pos:start="53:43" pos:end="53:43">)</operator><name pos:start="53:44" pos:end="53:51"><name pos:start="53:44" pos:end="53:48">coefs</name><index pos:start="53:49" pos:end="53:51">[<expr pos:start="53:50" pos:end="53:50"><name pos:start="53:50" pos:end="53:50">i</name></expr>]</index></name> <operator pos:start="53:53" pos:end="53:53">*</operator> <name pos:start="53:55" pos:end="53:55">c</name> <operator pos:start="53:57" pos:end="53:57">+</operator> <name pos:start="53:59" pos:end="53:63">round</name><operator pos:start="53:64" pos:end="53:64">)</operator> <operator pos:start="53:66" pos:end="53:67">&gt;&gt;</operator> <name pos:start="53:69" pos:end="53:69">s</name><operator pos:start="53:70" pos:end="53:70">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:35"><expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:17">coefs</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><name pos:start="55:19" pos:end="55:19">i</name></expr>]</index></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:26">out</name> <operator pos:start="55:28" pos:end="55:28">*</operator> <name pos:start="55:30" pos:end="55:34">ssign</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
