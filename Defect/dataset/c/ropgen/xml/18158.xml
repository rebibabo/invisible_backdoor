<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18158.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:31">laio_co_submit</name><parameter_list pos:start="1:32" pos:end="3:78">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><name pos:start="1:55" pos:end="1:67">LinuxAioState</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:70">s</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:78"><decl pos:start="1:73" pos:end="1:78"><type pos:start="1:73" pos:end="1:78"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:78">fd</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:47"><decl pos:start="3:33" pos:end="3:47"><type pos:start="3:33" pos:end="3:47"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:47">offset</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><name pos:start="3:50" pos:end="3:61">QEMUIOVector</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">qiov</name></decl></parameter>, <parameter pos:start="3:70" pos:end="3:77"><decl pos:start="3:70" pos:end="3:77"><type pos:start="3:70" pos:end="3:77"><name pos:start="3:70" pos:end="3:72">int</name></type> <name pos:start="3:74" pos:end="3:77">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:22">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="21:6"><decl pos:start="9:5" pos:end="21:5"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:22">qemu_laiocb</name></name></type> <name pos:start="9:24" pos:end="9:29">laiocb</name> <init pos:start="9:31" pos:end="21:5">= <expr pos:start="9:33" pos:end="21:5"><block pos:start="9:33" pos:end="21:5">{

        <expr pos:start="11:9" pos:end="11:43"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:11">co</name>         <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:43"><name pos:start="11:23" pos:end="11:41">qemu_coroutine_self</name><argument_list pos:start="11:42" pos:end="11:43">()</argument_list></call></expr>,

        <expr pos:start="13:9" pos:end="13:32"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:15">nbytes</name>     <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:32"><name pos:start="13:23" pos:end="13:26">qiov</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:32">size</name></name></expr>,

        <expr pos:start="15:9" pos:end="15:23"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:12">ctx</name>        <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:23">s</name></expr>,

        <expr pos:start="17:9" pos:end="17:45"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:16">is_read</name>    <operator pos:start="17:21" pos:end="17:21">=</operator> <operator pos:start="17:23" pos:end="17:23">(</operator><name pos:start="17:24" pos:end="17:27">type</name> <operator pos:start="17:29" pos:end="17:30">==</operator> <name pos:start="17:32" pos:end="17:44">QEMU_AIO_READ</name><operator pos:start="17:45" pos:end="17:45">)</operator></expr>,

        <expr pos:start="19:9" pos:end="19:26"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">qiov</name>       <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:26">qiov</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:51"><name pos:start="25:11" pos:end="25:24">laio_do_submit</name><argument_list pos:start="25:25" pos:end="25:51">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">fd</name></expr></argument>, <argument pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:36">laiocb</name></expr></argument>, <argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:44">offset</name></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><name pos:start="25:47" pos:end="25:50">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><call pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:24">qemu_coroutine_yield</name><argument_list pos:start="35:25" pos:end="35:26">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:22">return <expr pos:start="37:12" pos:end="37:21"><name pos:start="37:12" pos:end="37:21"><name pos:start="37:12" pos:end="37:17">laiocb</name><operator pos:start="37:18" pos:end="37:18">.</operator><name pos:start="37:19" pos:end="37:21">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
