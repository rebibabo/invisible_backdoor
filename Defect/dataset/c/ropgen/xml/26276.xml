<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26276.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:72"><name pos:start="1:1" pos:end="1:23">pvscsi_command_complete</name><argument_list pos:start="1:24" pos:end="1:72">(<argument pos:start="1:25" pos:end="1:40">SCSIRequest *req</argument>, <argument pos:start="1:43" pos:end="1:57">uint32_t status</argument>, <argument pos:start="1:60" pos:end="1:71">size_t resid</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:43">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">PVSCSIRequest</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:29">pvscsi_req</name> <init pos:start="5:31" pos:end="5:48">= <expr pos:start="5:33" pos:end="5:48"><name pos:start="5:33" pos:end="5:48"><name pos:start="5:33" pos:end="5:35">req</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:48">hba_private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PVSCSIState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:36">= <expr pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:31">pvscsi_req</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:36">dev</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:19">pvscsi_req</name></expr>)</condition> <block pos:start="11:22" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:58"><expr pos:start="13:9" pos:end="13:57"><call pos:start="13:9" pos:end="13:57"><name pos:start="13:9" pos:end="13:47">trace_pvscsi_command_complete_not_found</name><argument_list pos:start="13:48" pos:end="13:57">(<argument pos:start="13:49" pos:end="13:56"><expr pos:start="13:49" pos:end="13:56"><name pos:start="13:49" pos:end="13:56"><name pos:start="13:49" pos:end="13:51">req</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:56">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:13">resid</name></expr>)</condition> <block pos:start="21:16" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:52">

        <comment type="block" pos:start="23:9" pos:end="23:30">/* Short transfer.  */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><call pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:46">trace_pvscsi_command_complete_data_run</name><argument_list pos:start="25:47" pos:end="25:48">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:52"><expr pos:start="27:9" pos:end="27:51"><name pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:18">pvscsi_req</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:23">cmp</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:34">hostStatus</name></name> <operator pos:start="27:36" pos:end="27:36">=</operator> <name pos:start="27:38" pos:end="27:51">BTSTAT_DATARUN</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:14">pvscsi_req</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">cmp</name><operator pos:start="33:20" pos:end="33:20">.</operator><name pos:start="33:21" pos:end="33:30">scsiStatus</name></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:39">status</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:54">(<expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:18">pvscsi_req</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:23">cmp</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:34">scsiStatus</name></name> <operator pos:start="35:36" pos:end="35:37">==</operator> <name pos:start="35:39" pos:end="35:53">CHECK_CONDITION</name></expr>)</condition> <block pos:start="35:56" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:57">

        <decl_stmt pos:start="37:9" pos:end="37:43"><decl pos:start="37:9" pos:end="37:42"><type pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:15">uint8_t</name></type> <name pos:start="37:17" pos:end="37:42"><name pos:start="37:17" pos:end="37:21">sense</name><index pos:start="37:22" pos:end="37:42">[<expr pos:start="37:23" pos:end="37:41"><name pos:start="37:23" pos:end="37:41">SCSI_SENSE_BUF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="41:71"><decl pos:start="39:9" pos:end="41:70"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:21">sense_len</name> <init pos:start="39:23" pos:end="41:70">=

            <expr pos:start="41:13" pos:end="41:70"><call pos:start="41:13" pos:end="41:70"><name pos:start="41:13" pos:end="41:30">scsi_req_get_sense</name><argument_list pos:start="41:31" pos:end="41:70">(<argument pos:start="41:32" pos:end="41:47"><expr pos:start="41:32" pos:end="41:47"><name pos:start="41:32" pos:end="41:47"><name pos:start="41:32" pos:end="41:41">pvscsi_req</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:47">sreq</name></name></expr></argument>, <argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><name pos:start="41:50" pos:end="41:54">sense</name></expr></argument>, <argument pos:start="41:57" pos:end="41:69"><expr pos:start="41:57" pos:end="41:69"><sizeof pos:start="41:57" pos:end="41:69">sizeof<argument_list pos:start="41:63" pos:end="41:69">(<argument pos:start="41:64" pos:end="41:68"><expr pos:start="41:64" pos:end="41:68"><name pos:start="41:64" pos:end="41:68">sense</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><call pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:47">trace_pvscsi_command_complete_sense_len</name><argument_list pos:start="45:48" pos:end="45:58">(<argument pos:start="45:49" pos:end="45:57"><expr pos:start="45:49" pos:end="45:57"><name pos:start="45:49" pos:end="45:57">sense_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:57"><expr pos:start="47:9" pos:end="47:56"><call pos:start="47:9" pos:end="47:56"><name pos:start="47:9" pos:end="47:26">pvscsi_write_sense</name><argument_list pos:start="47:27" pos:end="47:56">(<argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:37">pvscsi_req</name></expr></argument>, <argument pos:start="47:40" pos:end="47:44"><expr pos:start="47:40" pos:end="47:44"><name pos:start="47:40" pos:end="47:44">sense</name></expr></argument>, <argument pos:start="47:47" pos:end="47:55"><expr pos:start="47:47" pos:end="47:55"><name pos:start="47:47" pos:end="47:55">sense_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:42"><expr pos:start="51:5" pos:end="51:41"><call pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:23">qemu_sglist_destroy</name><argument_list pos:start="51:24" pos:end="51:41">(<argument pos:start="51:25" pos:end="51:40"><expr pos:start="51:25" pos:end="51:40"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:40"><name pos:start="51:26" pos:end="51:35">pvscsi_req</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:40">sgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:43"><expr pos:start="53:5" pos:end="53:42"><call pos:start="53:5" pos:end="53:42"><name pos:start="53:5" pos:end="53:27">pvscsi_complete_request</name><argument_list pos:start="53:28" pos:end="53:42">(<argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">s</name></expr></argument>, <argument pos:start="53:32" pos:end="53:41"><expr pos:start="53:32" pos:end="53:41"><name pos:start="53:32" pos:end="53:41">pvscsi_req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
