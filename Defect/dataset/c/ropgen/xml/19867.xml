<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19867.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">test_visitor_in_intList</name><parameter_list pos:start="1:36" pos:end="2:55">(<parameter pos:start="1:37" pos:end="1:62"><decl pos:start="1:37" pos:end="1:62"><type pos:start="1:37" pos:end="1:62"><name pos:start="1:37" pos:end="1:56">TestInputVisitorData</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,
                                    <parameter pos:start="2:37" pos:end="2:54"><decl pos:start="2:37" pos:end="2:54"><type pos:start="2:37" pos:end="2:54"><specifier pos:start="2:37" pos:end="2:41">const</specifier> <name pos:start="2:43" pos:end="2:46">void</name> <modifier pos:start="2:48" pos:end="2:48">*</modifier></type><name pos:start="2:49" pos:end="2:54">unused</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="44:30">
    <comment type="block" pos:start="4:5" pos:end="4:53">/* Note: the visitor *sorts* ranges *unsigned* */</comment>
    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:60"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:21"><name pos:start="5:13" pos:end="5:19">expect1</name><index pos:start="5:20" pos:end="5:21">[]</index></name> <init pos:start="5:23" pos:end="5:60">= <expr pos:start="5:25" pos:end="5:60"><block pos:start="5:25" pos:end="5:60">{ <expr pos:start="5:27" pos:end="5:27"><literal type="number" pos:start="5:27" pos:end="5:27">0</literal></expr>, <expr pos:start="5:30" pos:end="5:30"><literal type="number" pos:start="5:30" pos:end="5:30">1</literal></expr>, <expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">2</literal></expr>, <expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">3</literal></expr>, <expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">4</literal></expr>, <expr pos:start="5:42" pos:end="5:42"><literal type="number" pos:start="5:42" pos:end="5:42">5</literal></expr>, <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">6</literal></expr>, <expr pos:start="5:48" pos:end="5:48"><literal type="number" pos:start="5:48" pos:end="5:48">7</literal></expr>, <expr pos:start="5:51" pos:end="5:51"><literal type="number" pos:start="5:51" pos:end="5:51">8</literal></expr>, <expr pos:start="5:54" pos:end="5:54"><literal type="number" pos:start="5:54" pos:end="5:54">9</literal></expr>, <expr pos:start="5:57" pos:end="5:58"><literal type="number" pos:start="5:57" pos:end="5:58">20</literal></expr> }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:50"><decl pos:start="6:5" pos:end="6:49"><type pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:11">int64_t</name></type> <name pos:start="6:13" pos:end="6:21"><name pos:start="6:13" pos:end="6:19">expect2</name><index pos:start="6:20" pos:end="6:21">[]</index></name> <init pos:start="6:23" pos:end="6:49">= <expr pos:start="6:25" pos:end="6:49"><block pos:start="6:25" pos:end="6:49">{ <expr pos:start="6:27" pos:end="6:31"><literal type="number" pos:start="6:27" pos:end="6:31">32767</literal></expr>, <expr pos:start="6:34" pos:end="6:39"><operator pos:start="6:34" pos:end="6:34">-</operator><literal type="number" pos:start="6:35" pos:end="6:39">32768</literal></expr>, <expr pos:start="6:42" pos:end="6:47"><operator pos:start="6:42" pos:end="6:42">-</operator><literal type="number" pos:start="6:43" pos:end="6:47">32767</literal></expr> }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:21"><name pos:start="7:13" pos:end="7:19">expect3</name><index pos:start="7:20" pos:end="7:21">[]</index></name> <init pos:start="7:23" pos:end="7:48">= <expr pos:start="7:25" pos:end="7:48"><block pos:start="7:25" pos:end="7:48">{ <expr pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:35">INT64_MAX</name></expr>, <expr pos:start="7:38" pos:end="7:46"><name pos:start="7:38" pos:end="7:46">INT64_MIN</name></expr> }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:40"><decl pos:start="8:5" pos:end="8:39"><type pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:12">uint64_t</name></type> <name pos:start="8:14" pos:end="8:22"><name pos:start="8:14" pos:end="8:20">expect4</name><index pos:start="8:21" pos:end="8:22">[]</index></name> <init pos:start="8:24" pos:end="8:39">= <expr pos:start="8:26" pos:end="8:39"><block pos:start="8:26" pos:end="8:39">{ <expr pos:start="8:28" pos:end="8:37"><name pos:start="8:28" pos:end="8:37">UINT64_MAX</name></expr> }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:26"><decl pos:start="10:5" pos:end="10:25"><type pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:13">int64List</name> <modifier pos:start="10:15" pos:end="10:15">*</modifier></type><name pos:start="10:16" pos:end="10:18">res</name> <init pos:start="10:20" pos:end="10:25">= <expr pos:start="10:22" pos:end="10:25"><name pos:start="10:22" pos:end="10:25">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">int64List</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:19">tail</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:15"><decl pos:start="12:5" pos:end="12:14"><type pos:start="12:5" pos:end="12:13"><name pos:start="12:5" pos:end="12:11">Visitor</name> <modifier pos:start="12:13" pos:end="12:13">*</modifier></type><name pos:start="12:14" pos:end="12:14">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">val</name></decl>;</decl_stmt>
    <comment type="block" pos:start="14:5" pos:end="14:21">/* Valid lists */</comment>
    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:5">v</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:31">visitor_input_test_init</name><argument_list pos:start="15:32" pos:end="15:61">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">data</name></expr></argument>, <argument pos:start="15:39" pos:end="15:60"><expr pos:start="15:39" pos:end="15:60"><literal type="string" pos:start="15:39" pos:end="15:60">"1,2,0,2-4,20,5-9,1-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:49"><expr pos:start="16:5" pos:end="16:48"><call pos:start="16:5" pos:end="16:48"><name pos:start="16:5" pos:end="16:15">check_ilist</name><argument_list pos:start="16:16" pos:end="16:48">(<argument pos:start="16:17" pos:end="16:17"><expr pos:start="16:17" pos:end="16:17"><name pos:start="16:17" pos:end="16:17">v</name></expr></argument>, <argument pos:start="16:20" pos:end="16:26"><expr pos:start="16:20" pos:end="16:26"><name pos:start="16:20" pos:end="16:26">expect1</name></expr></argument>, <argument pos:start="16:29" pos:end="16:47"><expr pos:start="16:29" pos:end="16:47"><call pos:start="16:29" pos:end="16:47"><name pos:start="16:29" pos:end="16:38">ARRAY_SIZE</name><argument_list pos:start="16:39" pos:end="16:47">(<argument pos:start="16:40" pos:end="16:46"><expr pos:start="16:40" pos:end="16:46"><name pos:start="16:40" pos:end="16:46">expect1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:61"><expr pos:start="17:5" pos:end="17:60"><name pos:start="17:5" pos:end="17:5">v</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:60"><name pos:start="17:9" pos:end="17:31">visitor_input_test_init</name><argument_list pos:start="17:32" pos:end="17:60">(<argument pos:start="17:33" pos:end="17:36"><expr pos:start="17:33" pos:end="17:36"><name pos:start="17:33" pos:end="17:36">data</name></expr></argument>, <argument pos:start="17:39" pos:end="17:59"><expr pos:start="17:39" pos:end="17:59"><literal type="string" pos:start="17:39" pos:end="17:59">"32767,-32768--32767"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:49"><expr pos:start="18:5" pos:end="18:48"><call pos:start="18:5" pos:end="18:48"><name pos:start="18:5" pos:end="18:15">check_ilist</name><argument_list pos:start="18:16" pos:end="18:48">(<argument pos:start="18:17" pos:end="18:17"><expr pos:start="18:17" pos:end="18:17"><name pos:start="18:17" pos:end="18:17">v</name></expr></argument>, <argument pos:start="18:20" pos:end="18:26"><expr pos:start="18:20" pos:end="18:26"><name pos:start="18:20" pos:end="18:26">expect2</name></expr></argument>, <argument pos:start="18:29" pos:end="18:47"><expr pos:start="18:29" pos:end="18:47"><call pos:start="18:29" pos:end="18:47"><name pos:start="18:29" pos:end="18:38">ARRAY_SIZE</name><argument_list pos:start="18:39" pos:end="18:47">(<argument pos:start="18:40" pos:end="18:46"><expr pos:start="18:40" pos:end="18:46"><name pos:start="18:40" pos:end="18:46">expect2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="20:76"><expr pos:start="19:5" pos:end="20:75"><name pos:start="19:5" pos:end="19:5">v</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="20:75"><name pos:start="19:9" pos:end="19:31">visitor_input_test_init</name><argument_list pos:start="19:32" pos:end="20:75">(<argument pos:start="19:33" pos:end="19:36"><expr pos:start="19:33" pos:end="19:36"><name pos:start="19:33" pos:end="19:36">data</name></expr></argument>,
                                <argument pos:start="20:33" pos:end="20:74"><expr pos:start="20:33" pos:end="20:74"><literal type="string" pos:start="20:33" pos:end="20:74">"-9223372036854775808,9223372036854775807"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><call pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:15">check_ilist</name><argument_list pos:start="21:16" pos:end="21:48">(<argument pos:start="21:17" pos:end="21:17"><expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">v</name></expr></argument>, <argument pos:start="21:20" pos:end="21:26"><expr pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:26">expect3</name></expr></argument>, <argument pos:start="21:29" pos:end="21:47"><expr pos:start="21:29" pos:end="21:47"><call pos:start="21:29" pos:end="21:47"><name pos:start="21:29" pos:end="21:38">ARRAY_SIZE</name><argument_list pos:start="21:39" pos:end="21:47">(<argument pos:start="21:40" pos:end="21:46"><expr pos:start="21:40" pos:end="21:46"><name pos:start="21:40" pos:end="21:46">expect3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:62"><expr pos:start="22:5" pos:end="22:61"><name pos:start="22:5" pos:end="22:5">v</name> <operator pos:start="22:7" pos:end="22:7">=</operator> <call pos:start="22:9" pos:end="22:61"><name pos:start="22:9" pos:end="22:31">visitor_input_test_init</name><argument_list pos:start="22:32" pos:end="22:61">(<argument pos:start="22:33" pos:end="22:36"><expr pos:start="22:33" pos:end="22:36"><name pos:start="22:33" pos:end="22:36">data</name></expr></argument>, <argument pos:start="22:39" pos:end="22:60"><expr pos:start="22:39" pos:end="22:60"><literal type="string" pos:start="22:39" pos:end="22:60">"18446744073709551615"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><call pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:15">check_ulist</name><argument_list pos:start="23:16" pos:end="23:48">(<argument pos:start="23:17" pos:end="23:17"><expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">v</name></expr></argument>, <argument pos:start="23:20" pos:end="23:26"><expr pos:start="23:20" pos:end="23:26"><name pos:start="23:20" pos:end="23:26">expect4</name></expr></argument>, <argument pos:start="23:29" pos:end="23:47"><expr pos:start="23:29" pos:end="23:47"><call pos:start="23:29" pos:end="23:47"><name pos:start="23:29" pos:end="23:38">ARRAY_SIZE</name><argument_list pos:start="23:39" pos:end="23:47">(<argument pos:start="23:40" pos:end="23:46"><expr pos:start="23:40" pos:end="23:46"><name pos:start="23:40" pos:end="23:46">expect4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="24:5" pos:end="24:39">/* Empty list is invalid (weird) */</comment>
    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:5">v</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:31">visitor_input_test_init</name><argument_list pos:start="25:32" pos:end="25:41">(<argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">data</name></expr></argument>, <argument pos:start="25:39" pos:end="25:40"><expr pos:start="25:39" pos:end="25:40"><literal type="string" pos:start="25:39" pos:end="25:40">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:46"><expr pos:start="26:5" pos:end="26:45"><call pos:start="26:5" pos:end="26:45"><name pos:start="26:5" pos:end="26:24">visit_type_int64List</name><argument_list pos:start="26:25" pos:end="26:45">(<argument pos:start="26:26" pos:end="26:26"><expr pos:start="26:26" pos:end="26:26"><name pos:start="26:26" pos:end="26:26">v</name></expr></argument>, <argument pos:start="26:29" pos:end="26:32"><expr pos:start="26:29" pos:end="26:32"><name pos:start="26:29" pos:end="26:32">NULL</name></expr></argument>, <argument pos:start="26:35" pos:end="26:38"><expr pos:start="26:35" pos:end="26:38"><operator pos:start="26:35" pos:end="26:35">&amp;</operator><name pos:start="26:36" pos:end="26:38">res</name></expr></argument>, <argument pos:start="26:41" pos:end="26:44"><expr pos:start="26:41" pos:end="26:44"><operator pos:start="26:41" pos:end="26:41">&amp;</operator><name pos:start="26:42" pos:end="26:44">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><call pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:23">error_free_or_abort</name><argument_list pos:start="27:24" pos:end="27:29">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="28:5" pos:end="28:20">/* Not a list */</comment>
    <expr_stmt pos:start="29:5" pos:end="29:57"><expr pos:start="29:5" pos:end="29:56"><name pos:start="29:5" pos:end="29:5">v</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:56"><name pos:start="29:9" pos:end="29:31">visitor_input_test_init</name><argument_list pos:start="29:32" pos:end="29:56">(<argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">data</name></expr></argument>, <argument pos:start="29:39" pos:end="29:55"><expr pos:start="29:39" pos:end="29:55"><literal type="string" pos:start="29:39" pos:end="29:55">"not an int list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:46"><expr pos:start="30:5" pos:end="30:45"><call pos:start="30:5" pos:end="30:45"><name pos:start="30:5" pos:end="30:24">visit_type_int64List</name><argument_list pos:start="30:25" pos:end="30:45">(<argument pos:start="30:26" pos:end="30:26"><expr pos:start="30:26" pos:end="30:26"><name pos:start="30:26" pos:end="30:26">v</name></expr></argument>, <argument pos:start="30:29" pos:end="30:32"><expr pos:start="30:29" pos:end="30:32"><name pos:start="30:29" pos:end="30:32">NULL</name></expr></argument>, <argument pos:start="30:35" pos:end="30:38"><expr pos:start="30:35" pos:end="30:38"><operator pos:start="30:35" pos:end="30:35">&amp;</operator><name pos:start="30:36" pos:end="30:38">res</name></expr></argument>, <argument pos:start="30:41" pos:end="30:44"><expr pos:start="30:41" pos:end="30:44"><operator pos:start="30:41" pos:end="30:41">&amp;</operator><name pos:start="30:42" pos:end="30:44">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:23">error_free_or_abort</name><argument_list pos:start="31:24" pos:end="31:29">(<argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:19"><expr pos:start="32:5" pos:end="32:18"><call pos:start="32:5" pos:end="32:18"><name pos:start="32:5" pos:end="32:12">g_assert</name><argument_list pos:start="32:13" pos:end="32:18">(<argument pos:start="32:14" pos:end="32:17"><expr pos:start="32:14" pos:end="32:17"><operator pos:start="32:14" pos:end="32:14">!</operator><name pos:start="32:15" pos:end="32:17">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="33:5" pos:end="33:29">/* Unvisited list tail */</comment>
    <expr_stmt pos:start="34:5" pos:end="34:47"><expr pos:start="34:5" pos:end="34:46"><name pos:start="34:5" pos:end="34:5">v</name> <operator pos:start="34:7" pos:end="34:7">=</operator> <call pos:start="34:9" pos:end="34:46"><name pos:start="34:9" pos:end="34:31">visitor_input_test_init</name><argument_list pos:start="34:32" pos:end="34:46">(<argument pos:start="34:33" pos:end="34:36"><expr pos:start="34:33" pos:end="34:36"><name pos:start="34:33" pos:end="34:36">data</name></expr></argument>, <argument pos:start="34:39" pos:end="34:45"><expr pos:start="34:39" pos:end="34:45"><literal type="string" pos:start="34:39" pos:end="34:45">"0,2-3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="35:5" pos:end="35:75">/* Would be simpler if the visitor genuinely supported virtual walks */</comment>
    <expr_stmt pos:start="36:5" pos:end="36:58"><expr pos:start="36:5" pos:end="36:57"><call pos:start="36:5" pos:end="36:57"><name pos:start="36:5" pos:end="36:20">visit_type_int64</name><argument_list pos:start="36:21" pos:end="36:57">(<argument pos:start="36:22" pos:end="36:22"><expr pos:start="36:22" pos:end="36:22"><name pos:start="36:22" pos:end="36:22">v</name></expr></argument>, <argument pos:start="36:25" pos:end="36:28"><expr pos:start="36:25" pos:end="36:28"><name pos:start="36:25" pos:end="36:28">NULL</name></expr></argument>, <argument pos:start="36:31" pos:end="36:42"><expr pos:start="36:31" pos:end="36:42"><operator pos:start="36:31" pos:end="36:31">&amp;</operator><name pos:start="36:32" pos:end="36:42"><name pos:start="36:32" pos:end="36:35">tail</name><operator pos:start="36:36" pos:end="36:37">-&gt;</operator><name pos:start="36:38" pos:end="36:42">value</name></name></expr></argument>, <argument pos:start="36:45" pos:end="36:56"><expr pos:start="36:45" pos:end="36:56"><operator pos:start="36:45" pos:end="36:45">&amp;</operator><name pos:start="36:46" pos:end="36:56">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:78"><expr pos:start="37:5" pos:end="37:77"><name pos:start="37:5" pos:end="37:8">tail</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <operator pos:start="37:12" pos:end="37:12">(</operator><name pos:start="37:13" pos:end="37:21">int64List</name> <operator pos:start="37:23" pos:end="37:23">*</operator><operator pos:start="37:24" pos:end="37:24">)</operator><call pos:start="37:25" pos:end="37:77"><name pos:start="37:25" pos:end="37:39">visit_next_list</name><argument_list pos:start="37:40" pos:end="37:77">(<argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">v</name></expr></argument>, <argument pos:start="37:44" pos:end="37:62"><expr pos:start="37:44" pos:end="37:62"><operator pos:start="37:44" pos:end="37:44">(</operator><name pos:start="37:45" pos:end="37:55">GenericList</name> <operator pos:start="37:57" pos:end="37:57">*</operator><operator pos:start="37:58" pos:end="37:58">)</operator><name pos:start="37:59" pos:end="37:62">tail</name></expr></argument>, <argument pos:start="37:65" pos:end="37:76"><expr pos:start="37:65" pos:end="37:76"><sizeof pos:start="37:65" pos:end="37:76">sizeof<argument_list pos:start="37:71" pos:end="37:76">(<argument pos:start="37:72" pos:end="37:75"><expr pos:start="37:72" pos:end="37:75"><operator pos:start="37:72" pos:end="37:72">*</operator><name pos:start="37:73" pos:end="37:75">res</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:19"><expr pos:start="38:5" pos:end="38:18"><call pos:start="38:5" pos:end="38:18"><name pos:start="38:5" pos:end="38:12">g_assert</name><argument_list pos:start="38:13" pos:end="38:18">(<argument pos:start="38:14" pos:end="38:17"><expr pos:start="38:14" pos:end="38:17"><name pos:start="38:14" pos:end="38:17">tail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:58"><expr pos:start="39:5" pos:end="39:57"><call pos:start="39:5" pos:end="39:57"><name pos:start="39:5" pos:end="39:20">visit_type_int64</name><argument_list pos:start="39:21" pos:end="39:57">(<argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><name pos:start="39:22" pos:end="39:22">v</name></expr></argument>, <argument pos:start="39:25" pos:end="39:28"><expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">NULL</name></expr></argument>, <argument pos:start="39:31" pos:end="39:42"><expr pos:start="39:31" pos:end="39:42"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:42"><name pos:start="39:32" pos:end="39:35">tail</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:42">value</name></name></expr></argument>, <argument pos:start="39:45" pos:end="39:56"><expr pos:start="39:45" pos:end="39:56"><operator pos:start="39:45" pos:end="39:45">&amp;</operator><name pos:start="39:46" pos:end="39:56">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:40"><expr pos:start="40:5" pos:end="40:39"><call pos:start="40:5" pos:end="40:39"><name pos:start="40:5" pos:end="40:19">g_assert_cmpint</name><argument_list pos:start="40:20" pos:end="40:39">(<argument pos:start="40:21" pos:end="40:31"><expr pos:start="40:21" pos:end="40:31"><name pos:start="40:21" pos:end="40:31"><name pos:start="40:21" pos:end="40:24">tail</name><operator pos:start="40:25" pos:end="40:26">-&gt;</operator><name pos:start="40:27" pos:end="40:31">value</name></name></expr></argument>, <argument pos:start="40:34" pos:end="40:35"><expr pos:start="40:34" pos:end="40:35"><operator pos:start="40:34" pos:end="40:35">==</operator></expr></argument>, <argument pos:start="40:38" pos:end="40:38"><expr pos:start="40:38" pos:end="40:38"><literal type="number" pos:start="40:38" pos:end="40:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:78"><expr pos:start="41:5" pos:end="41:77"><name pos:start="41:5" pos:end="41:8">tail</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:21">int64List</name> <operator pos:start="41:23" pos:end="41:23">*</operator><operator pos:start="41:24" pos:end="41:24">)</operator><call pos:start="41:25" pos:end="41:77"><name pos:start="41:25" pos:end="41:39">visit_next_list</name><argument_list pos:start="41:40" pos:end="41:77">(<argument pos:start="41:41" pos:end="41:41"><expr pos:start="41:41" pos:end="41:41"><name pos:start="41:41" pos:end="41:41">v</name></expr></argument>, <argument pos:start="41:44" pos:end="41:62"><expr pos:start="41:44" pos:end="41:62"><operator pos:start="41:44" pos:end="41:44">(</operator><name pos:start="41:45" pos:end="41:55">GenericList</name> <operator pos:start="41:57" pos:end="41:57">*</operator><operator pos:start="41:58" pos:end="41:58">)</operator><name pos:start="41:59" pos:end="41:62">tail</name></expr></argument>, <argument pos:start="41:65" pos:end="41:76"><expr pos:start="41:65" pos:end="41:76"><sizeof pos:start="41:65" pos:end="41:76">sizeof<argument_list pos:start="41:71" pos:end="41:76">(<argument pos:start="41:72" pos:end="41:75"><expr pos:start="41:72" pos:end="41:75"><operator pos:start="41:72" pos:end="41:72">*</operator><name pos:start="41:73" pos:end="41:75">res</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:19"><expr pos:start="42:5" pos:end="42:18"><call pos:start="42:5" pos:end="42:18"><name pos:start="42:5" pos:end="42:12">g_assert</name><argument_list pos:start="42:13" pos:end="42:18">(<argument pos:start="42:14" pos:end="42:17"><expr pos:start="42:14" pos:end="42:17"><name pos:start="42:14" pos:end="42:17">tail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><call pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:20">visit_check_list</name><argument_list pos:start="43:21" pos:end="43:29">(<argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">v</name></expr></argument>, <argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:30"><expr pos:start="44:5" pos:end="44:29"><call pos:start="44:5" pos:end="44:29"><name pos:start="44:5" pos:end="44:23">error_free_or_abort</name><argument_list pos:start="44:24" pos:end="44:29">(<argument pos:start="44:25" pos:end="44:28"><expr pos:start="44:25" pos:end="44:28"><operator pos:start="44:25" pos:end="44:25">&amp;</operator><name pos:start="44:26" pos:end="44:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
