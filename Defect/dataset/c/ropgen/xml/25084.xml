<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25084.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">estimate_sid_gain</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:43">G723_1_Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:15">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:16">shift</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:21">seg</name></decl>, <decl pos:start="5:24" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:27">seg2</name></decl>, <decl pos:start="5:30" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:30" pos:end="5:30">t</name></decl>, <decl pos:start="5:33" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:35">val</name></decl>, <decl pos:start="5:38" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:38" pos:end="5:44">val_add</name></decl>, <decl pos:start="5:47" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:47" pos:end="5:47">x</name></decl>, <decl pos:start="5:50" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:50" pos:end="5:50">y</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:9">shift</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <literal type="number" pos:start="9:13" pos:end="9:16">16</literal> <operator pos:start="9:16" pos:end="9:16">-</operator> <name pos:start="9:18" pos:end="9:28"><name pos:start="9:18" pos:end="9:18">p</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:28">cur_gain</name></name> <operator pos:start="9:30" pos:end="9:30">*</operator> <literal type="number" pos:start="9:32" pos:end="9:32">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:34"><if pos:start="11:5" pos:end="13:33">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:13">shift</name> <operator pos:start="11:15" pos:end="11:15">&gt;</operator> <literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:33"><block_content pos:start="13:9" pos:end="13:33">

        <expr_stmt pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:9">t</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:13">p</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:23">sid_gain</name></name> <operator pos:start="13:25" pos:end="13:26">&lt;&lt;</operator> <name pos:start="13:28" pos:end="13:32">shift</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="15:5" pos:end="17:34">else<block type="pseudo" pos:start="17:9" pos:end="17:34"><block_content pos:start="17:9" pos:end="17:34">

        <expr_stmt pos:start="17:9" pos:end="17:34"><expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:9">t</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:13">p</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:23">sid_gain</name></name> <operator pos:start="17:25" pos:end="17:26">&gt;&gt;</operator> <operator pos:start="17:28" pos:end="17:28">-</operator><name pos:start="17:29" pos:end="17:33">shift</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:5">x</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:22">av_clipl_int32</name><argument_list pos:start="19:23" pos:end="19:54">(<argument pos:start="19:24" pos:end="19:53"><expr pos:start="19:24" pos:end="19:53"><name pos:start="19:24" pos:end="19:24">t</name> <operator pos:start="19:26" pos:end="19:26">*</operator> <operator pos:start="19:28" pos:end="19:28">(</operator><name pos:start="19:29" pos:end="19:35">int64_t</name><operator pos:start="19:36" pos:end="19:36">)</operator><name pos:start="19:37" pos:end="19:47"><name pos:start="19:37" pos:end="19:44">cng_filt</name><index pos:start="19:45" pos:end="19:47">[<expr pos:start="19:46" pos:end="19:46"><literal type="number" pos:start="19:46" pos:end="19:46">0</literal></expr>]</index></name> <operator pos:start="19:49" pos:end="19:50">&gt;&gt;</operator> <literal type="number" pos:start="19:52" pos:end="19:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:9">x</name> <operator pos:start="23:11" pos:end="23:12">&gt;=</operator> <name pos:start="23:14" pos:end="23:24"><name pos:start="23:14" pos:end="23:21">cng_bseg</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">2</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><literal type="number" pos:start="25:16" pos:end="25:19">0x3F</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:9">x</name> <operator pos:start="29:11" pos:end="29:12">&gt;=</operator> <name pos:start="29:14" pos:end="29:24"><name pos:start="29:14" pos:end="29:21">cng_bseg</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="29:27" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:13">shift</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:11">seg</name>   <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="41:5">else <block pos:start="35:12" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:35">

        <expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:13">shift</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:11">seg</name>   <operator pos:start="39:15" pos:end="39:15">=</operator> <operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:18">x</name> <operator pos:start="39:20" pos:end="39:21">&gt;=</operator> <name pos:start="39:23" pos:end="39:33"><name pos:start="39:23" pos:end="39:30">cng_bseg</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>]</index></name><operator pos:start="39:34" pos:end="39:34">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:8">seg2</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <call pos:start="43:12" pos:end="43:24"><name pos:start="43:12" pos:end="43:16">FFMIN</name><argument_list pos:start="43:17" pos:end="43:24">(<argument pos:start="43:18" pos:end="43:20"><expr pos:start="43:18" pos:end="43:20"><name pos:start="43:18" pos:end="43:20">seg</name></expr></argument>, <argument pos:start="43:23" pos:end="43:23"><expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:7">val</name>     <operator pos:start="47:13" pos:end="47:13">=</operator> <literal type="number" pos:start="47:15" pos:end="47:15">1</literal> <operator pos:start="47:17" pos:end="47:18">&lt;&lt;</operator> <name pos:start="47:20" pos:end="47:24">shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:11">val_add</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:17">val</name> <operator pos:start="49:19" pos:end="49:20">&gt;&gt;</operator> <literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="67:5">for <control pos:start="51:9" pos:end="51:31">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:26"><expr pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:25">shift</name></expr>;</condition> <incr pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:28">i</name><operator pos:start="51:29" pos:end="51:30">++</operator></expr></incr>)</control> <block pos:start="51:33" pos:end="67:5">{<block_content pos:start="53:9" pos:end="65:22">

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:9">t</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:15">seg</name> <operator pos:start="53:17" pos:end="53:17">*</operator> <literal type="number" pos:start="53:19" pos:end="53:22">32</literal> <operator pos:start="53:22" pos:end="53:22">+</operator> <operator pos:start="53:24" pos:end="53:24">(</operator><name pos:start="53:25" pos:end="53:27">val</name> <operator pos:start="53:29" pos:end="53:30">&lt;&lt;</operator> <name pos:start="53:32" pos:end="53:35">seg2</name><operator pos:start="53:36" pos:end="53:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:15"><expr pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">t</name> <operator pos:start="55:11" pos:end="55:12">*=</operator> <name pos:start="55:14" pos:end="55:14">t</name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:27"><if pos:start="57:9" pos:end="59:27">if <condition pos:start="57:12" pos:end="57:19">(<expr pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:13">x</name> <operator pos:start="57:15" pos:end="57:16">&gt;=</operator> <name pos:start="57:18" pos:end="57:18">t</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:27"><block_content pos:start="59:13" pos:end="59:27">

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:15">val</name> <operator pos:start="59:17" pos:end="59:18">+=</operator> <name pos:start="59:20" pos:end="59:26">val_add</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="61:9" pos:end="63:27">else<block type="pseudo" pos:start="63:13" pos:end="63:27"><block_content pos:start="63:13" pos:end="63:27">

            <expr_stmt pos:start="63:13" pos:end="63:27"><expr pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:15">val</name> <operator pos:start="63:17" pos:end="63:18">-=</operator> <name pos:start="63:20" pos:end="63:26">val_add</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:22"><expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:15">val_add</name> <operator pos:start="65:17" pos:end="65:19">&gt;&gt;=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:5">t</name> <operator pos:start="71:7" pos:end="71:7">=</operator> <name pos:start="71:9" pos:end="71:11">seg</name> <operator pos:start="71:13" pos:end="71:13">*</operator> <literal type="number" pos:start="71:15" pos:end="71:18">32</literal> <operator pos:start="71:18" pos:end="71:18">+</operator> <operator pos:start="71:20" pos:end="71:20">(</operator><name pos:start="71:21" pos:end="71:23">val</name> <operator pos:start="71:25" pos:end="71:26">&lt;&lt;</operator> <name pos:start="71:28" pos:end="71:31">seg2</name><operator pos:start="71:32" pos:end="71:32">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:18"><expr pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:5">y</name> <operator pos:start="73:7" pos:end="73:7">=</operator> <name pos:start="73:9" pos:end="73:9">t</name> <operator pos:start="73:11" pos:end="73:11">*</operator> <name pos:start="73:13" pos:end="73:13">t</name> <operator pos:start="73:15" pos:end="73:15">-</operator> <name pos:start="73:17" pos:end="73:17">x</name></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="99:5"><if pos:start="75:5" pos:end="87:5">if <condition pos:start="75:8" pos:end="75:15">(<expr pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:9">y</name> <operator pos:start="75:11" pos:end="75:12">&lt;=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>)</condition> <block pos:start="75:17" pos:end="87:5">{<block_content pos:start="77:9" pos:end="85:18">

        <expr_stmt pos:start="77:9" pos:end="77:41"><expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:9">t</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <name pos:start="77:13" pos:end="77:15">seg</name> <operator pos:start="77:17" pos:end="77:17">*</operator> <literal type="number" pos:start="77:19" pos:end="77:22">32</literal> <operator pos:start="77:22" pos:end="77:22">+</operator> <operator pos:start="77:24" pos:end="77:24">(</operator><name pos:start="77:25" pos:end="77:27">val</name> <operator pos:start="77:29" pos:end="77:29">+</operator> <literal type="number" pos:start="77:31" pos:end="77:31">1</literal> <operator pos:start="77:33" pos:end="77:34">&lt;&lt;</operator> <name pos:start="77:36" pos:end="77:39">seg2</name><operator pos:start="77:40" pos:end="77:40">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:22"><expr pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:9">t</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <name pos:start="79:13" pos:end="79:13">t</name> <operator pos:start="79:15" pos:end="79:15">*</operator> <name pos:start="79:17" pos:end="79:17">t</name> <operator pos:start="79:19" pos:end="79:19">-</operator> <name pos:start="79:21" pos:end="79:21">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:11">val</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <operator pos:start="81:15" pos:end="81:15">(</operator><name pos:start="81:16" pos:end="81:19">seg2</name> <operator pos:start="81:21" pos:end="81:21">-</operator> <literal type="number" pos:start="81:23" pos:end="81:23">1</literal> <operator pos:start="81:25" pos:end="81:26">&lt;&lt;</operator> <literal type="number" pos:start="81:28" pos:end="81:28">4</literal><operator pos:start="81:29" pos:end="81:29">)</operator> <operator pos:start="81:31" pos:end="81:31">+</operator> <name pos:start="81:33" pos:end="81:35">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:18"><if pos:start="83:9" pos:end="85:18">if <condition pos:start="83:12" pos:end="83:19">(<expr pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:13">t</name> <operator pos:start="83:15" pos:end="83:16">&gt;=</operator> <name pos:start="83:18" pos:end="83:18">y</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:18"><block_content pos:start="85:13" pos:end="85:18">

            <expr_stmt pos:start="85:13" pos:end="85:18"><expr pos:start="85:13" pos:end="85:17"><name pos:start="85:13" pos:end="85:15">val</name><operator pos:start="85:16" pos:end="85:17">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="99:5">else <block pos:start="87:12" pos:end="99:5">{<block_content pos:start="89:9" pos:end="97:18">

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:9">t</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <name pos:start="89:13" pos:end="89:15">seg</name> <operator pos:start="89:17" pos:end="89:17">*</operator> <literal type="number" pos:start="89:19" pos:end="89:22">32</literal> <operator pos:start="89:22" pos:end="89:22">+</operator> <operator pos:start="89:24" pos:end="89:24">(</operator><name pos:start="89:25" pos:end="89:27">val</name> <operator pos:start="89:29" pos:end="89:29">-</operator> <literal type="number" pos:start="89:31" pos:end="89:31">1</literal> <operator pos:start="89:33" pos:end="89:34">&lt;&lt;</operator> <name pos:start="89:36" pos:end="89:39">seg2</name><operator pos:start="89:40" pos:end="89:40">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:22"><expr pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:9">t</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <name pos:start="91:13" pos:end="91:13">t</name> <operator pos:start="91:15" pos:end="91:15">*</operator> <name pos:start="91:17" pos:end="91:17">t</name> <operator pos:start="91:19" pos:end="91:19">-</operator> <name pos:start="91:21" pos:end="91:21">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:36"><expr pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:11">val</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">(</operator><name pos:start="93:16" pos:end="93:19">seg2</name> <operator pos:start="93:21" pos:end="93:21">-</operator> <literal type="number" pos:start="93:23" pos:end="93:23">1</literal> <operator pos:start="93:25" pos:end="93:26">&lt;&lt;</operator> <literal type="number" pos:start="93:28" pos:end="93:28">4</literal><operator pos:start="93:29" pos:end="93:29">)</operator> <operator pos:start="93:31" pos:end="93:31">+</operator> <name pos:start="93:33" pos:end="93:35">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:18"><if pos:start="95:9" pos:end="97:18">if <condition pos:start="95:12" pos:end="95:19">(<expr pos:start="95:13" pos:end="95:18"><name pos:start="95:13" pos:end="95:13">t</name> <operator pos:start="95:15" pos:end="95:16">&gt;=</operator> <name pos:start="95:18" pos:end="95:18">y</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:18"><block_content pos:start="97:13" pos:end="97:18">

            <expr_stmt pos:start="97:13" pos:end="97:18"><expr pos:start="97:13" pos:end="97:17"><name pos:start="97:13" pos:end="97:15">val</name><operator pos:start="97:16" pos:end="97:17">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="103:5" pos:end="103:15">return <expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
