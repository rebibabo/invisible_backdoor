<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26195.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">kvm_mce_broadcast_rest</name><parameter_list pos:start="1:35" pos:end="1:49">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:43">CPUState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">cenv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">family</name></decl>, <decl pos:start="7:17" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:21">model</name></decl>, <decl pos:start="7:24" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:29">cpuver</name> <init pos:start="7:31" pos:end="7:50">= <expr pos:start="7:33" pos:end="7:50"><name pos:start="7:33" pos:end="7:50"><name pos:start="7:33" pos:end="7:35">env</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:50">cpuid_version</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:10">family</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <operator pos:start="11:14" pos:end="11:14">(</operator><name pos:start="11:15" pos:end="11:20">cpuver</name> <operator pos:start="11:22" pos:end="11:23">&gt;&gt;</operator> <literal type="number" pos:start="11:25" pos:end="11:25">8</literal><operator pos:start="11:26" pos:end="11:26">)</operator> <operator pos:start="11:28" pos:end="11:28">&amp;</operator> <literal type="number" pos:start="11:30" pos:end="11:32">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:60"><expr pos:start="13:5" pos:end="13:59"><name pos:start="13:5" pos:end="13:9">model</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">(</operator><operator pos:start="13:14" pos:end="13:14">(</operator><name pos:start="13:15" pos:end="13:20">cpuver</name> <operator pos:start="13:22" pos:end="13:23">&gt;&gt;</operator> <literal type="number" pos:start="13:25" pos:end="13:26">12</literal><operator pos:start="13:27" pos:end="13:27">)</operator> <operator pos:start="13:29" pos:end="13:29">&amp;</operator> <literal type="number" pos:start="13:31" pos:end="13:34">0xf0</literal><operator pos:start="13:35" pos:end="13:35">)</operator> <operator pos:start="13:37" pos:end="13:37">+</operator> <operator pos:start="13:39" pos:end="13:39">(</operator><operator pos:start="13:40" pos:end="13:40">(</operator><name pos:start="13:41" pos:end="13:46">cpuver</name> <operator pos:start="13:48" pos:end="13:49">&gt;&gt;</operator> <literal type="number" pos:start="13:51" pos:end="13:51">4</literal><operator pos:start="13:52" pos:end="13:52">)</operator> <operator pos:start="13:54" pos:end="13:54">&amp;</operator> <literal type="number" pos:start="13:56" pos:end="13:58">0xf</literal><operator pos:start="13:59" pos:end="13:59">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:69">/* Broadcast MCA signal for processor version 06H_EH and above */</comment>

    <if_stmt pos:start="19:5" pos:end="37:5"><if pos:start="19:5" pos:end="37:5">if <condition pos:start="19:8" pos:end="19:51">(<expr pos:start="19:9" pos:end="19:50"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:15">family</name> <operator pos:start="19:17" pos:end="19:18">==</operator> <literal type="number" pos:start="19:20" pos:end="19:20">6</literal> <operator pos:start="19:22" pos:end="19:23">&amp;&amp;</operator> <name pos:start="19:25" pos:end="19:29">model</name> <operator pos:start="19:31" pos:end="19:32">&gt;=</operator> <literal type="number" pos:start="19:34" pos:end="19:35">14</literal><operator pos:start="19:36" pos:end="19:36">)</operator> <operator pos:start="19:38" pos:end="19:39">||</operator> <name pos:start="19:41" pos:end="19:46">family</name> <operator pos:start="19:48" pos:end="19:48">&gt;</operator> <literal type="number" pos:start="19:50" pos:end="19:50">6</literal></expr>)</condition> <block pos:start="19:53" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:9">

        <for pos:start="21:9" pos:end="35:9">for <control pos:start="21:13" pos:end="21:67">(<init pos:start="21:14" pos:end="21:30"><expr pos:start="21:14" pos:end="21:29"><name pos:start="21:14" pos:end="21:17">cenv</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:29">first_cpu</name></expr>;</init> <condition pos:start="21:32" pos:end="21:44"><expr pos:start="21:32" pos:end="21:43"><name pos:start="21:32" pos:end="21:35">cenv</name> <operator pos:start="21:37" pos:end="21:38">!=</operator> <name pos:start="21:40" pos:end="21:43">NULL</name></expr>;</condition> <incr pos:start="21:46" pos:end="21:66"><expr pos:start="21:46" pos:end="21:66"><name pos:start="21:46" pos:end="21:49">cenv</name> <operator pos:start="21:51" pos:end="21:51">=</operator> <name pos:start="21:53" pos:end="21:66"><name pos:start="21:53" pos:end="21:56">cenv</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:66">next_cpu</name></name></expr></incr>)</control> <block pos:start="21:69" pos:end="35:9">{<block_content pos:start="23:13" pos:end="33:47">

            <if_stmt pos:start="23:13" pos:end="27:13"><if pos:start="23:13" pos:end="27:13">if <condition pos:start="23:16" pos:end="23:28">(<expr pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:20">cenv</name> <operator pos:start="23:22" pos:end="23:23">==</operator> <name pos:start="23:25" pos:end="23:27">env</name></expr>)</condition> <block pos:start="23:30" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:25">

                <continue pos:start="25:17" pos:end="25:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="33:47"><expr pos:start="29:13" pos:end="33:46"><call pos:start="29:13" pos:end="33:46"><name pos:start="29:13" pos:end="29:30">kvm_inject_x86_mce</name><argument_list pos:start="29:31" pos:end="33:46">(<argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">cenv</name></expr></argument>, <argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><literal type="number" pos:start="29:38" pos:end="29:38">1</literal></expr></argument>, <argument pos:start="29:41" pos:end="29:70"><expr pos:start="29:41" pos:end="29:70"><name pos:start="29:41" pos:end="29:54">MCI_STATUS_VAL</name> <operator pos:start="29:56" pos:end="29:56">|</operator> <name pos:start="29:58" pos:end="29:70">MCI_STATUS_UC</name></expr></argument>,

                               <argument pos:start="31:32" pos:end="31:64"><expr pos:start="31:32" pos:end="31:64"><name pos:start="31:32" pos:end="31:46">MCG_STATUS_MCIP</name> <operator pos:start="31:48" pos:end="31:48">|</operator> <name pos:start="31:50" pos:end="31:64">MCG_STATUS_RIPV</name></expr></argument>, <argument pos:start="31:67" pos:end="31:67"><expr pos:start="31:67" pos:end="31:67"><literal type="number" pos:start="31:67" pos:end="31:67">0</literal></expr></argument>, <argument pos:start="31:70" pos:end="31:70"><expr pos:start="31:70" pos:end="31:70"><literal type="number" pos:start="31:70" pos:end="31:70">0</literal></expr></argument>,

                               <argument pos:start="33:32" pos:end="33:45"><expr pos:start="33:32" pos:end="33:45"><name pos:start="33:32" pos:end="33:45">ABORT_ON_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
