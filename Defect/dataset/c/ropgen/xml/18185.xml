<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18185.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:32">psy_3gpp_init</name><parameter_list pos:start="1:33" pos:end="1:51">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:45">FFPsyContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>)</parameter_list> <block pos:start="1:53" pos:end="157:1">{<block_content pos:start="3:5" pos:end="155:13">

    <decl_stmt pos:start="3:5" pos:end="3:24"><decl pos:start="3:5" pos:end="3:23"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">AacPsyContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:23">pctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:9">float</name></type> <name pos:start="5:11" pos:end="5:14">bark</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">g</name></decl>, <decl pos:start="7:18" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:22">start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:14">prev</name></decl>, <decl pos:start="9:17" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:17" pos:end="9:24">minscale</name></decl>, <decl pos:start="9:27" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:27" pos:end="9:32">minath</name></decl>, <decl pos:start="9:35" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:35" pos:end="9:40">minsnr</name></decl>, <decl pos:start="9:43" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:43" pos:end="9:48">pe_min</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:118"><decl pos:start="11:5" pos:end="11:117"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">chan_bitrate</name> <init pos:start="11:22" pos:end="11:117">= <expr pos:start="11:24" pos:end="11:117"><name pos:start="11:24" pos:end="11:43"><name pos:start="11:24" pos:end="11:26">ctx</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:43">bit_rate</name></name> <operator pos:start="11:45" pos:end="11:45">/</operator> <operator pos:start="11:47" pos:end="11:47">(</operator><ternary pos:start="11:48" pos:end="11:116"><condition pos:start="11:48" pos:end="11:88"><expr pos:start="11:48" pos:end="11:86"><operator pos:start="11:48" pos:end="11:48">(</operator><name pos:start="11:49" pos:end="11:65"><name pos:start="11:49" pos:end="11:51">ctx</name><operator pos:start="11:52" pos:end="11:53">-&gt;</operator><name pos:start="11:54" pos:end="11:58">avctx</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:65">flags</name></name> <operator pos:start="11:67" pos:end="11:67">&amp;</operator> <name pos:start="11:69" pos:end="11:85">CODEC_FLAG_QSCALE</name><operator pos:start="11:86" pos:end="11:86">)</operator></expr> ?</condition><then pos:start="11:90" pos:end="11:93"> <expr pos:start="11:90" pos:end="11:93"><literal type="number" pos:start="11:90" pos:end="11:93">2.0f</literal></expr> </then><else pos:start="11:95" pos:end="11:116">: <expr pos:start="11:97" pos:end="11:116"><name pos:start="11:97" pos:end="11:116"><name pos:start="11:97" pos:end="11:99">ctx</name><operator pos:start="11:100" pos:end="11:101">-&gt;</operator><name pos:start="11:102" pos:end="11:106">avctx</name><operator pos:start="11:107" pos:end="11:108">-&gt;</operator><name pos:start="11:109" pos:end="11:116">channels</name></name></expr></else></ternary><operator pos:start="11:117" pos:end="11:117">)</operator></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:94"><decl pos:start="15:5" pos:end="15:93"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:23">bandwidth</name>    <init pos:start="15:28" pos:end="15:93">= <expr pos:start="15:30" pos:end="15:93"><ternary pos:start="15:30" pos:end="15:93"><condition pos:start="15:30" pos:end="15:49"><expr pos:start="15:30" pos:end="15:47"><name pos:start="15:30" pos:end="15:47"><name pos:start="15:30" pos:end="15:32">ctx</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:39">avctx</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:47">cutoff</name></name></expr> ?</condition><then pos:start="15:51" pos:end="15:68"> <expr pos:start="15:51" pos:end="15:68"><name pos:start="15:51" pos:end="15:68"><name pos:start="15:51" pos:end="15:53">ctx</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:60">avctx</name><operator pos:start="15:61" pos:end="15:62">-&gt;</operator><name pos:start="15:63" pos:end="15:68">cutoff</name></name></expr> </then><else pos:start="15:70" pos:end="15:93">: <expr pos:start="15:72" pos:end="15:93"><call pos:start="15:72" pos:end="15:93"><name pos:start="15:72" pos:end="15:81">AAC_CUTOFF</name><argument_list pos:start="15:82" pos:end="15:93">(<argument pos:start="15:83" pos:end="15:92"><expr pos:start="15:83" pos:end="15:92"><name pos:start="15:83" pos:end="15:92"><name pos:start="15:83" pos:end="15:85">ctx</name><operator pos:start="15:86" pos:end="15:87">-&gt;</operator><name pos:start="15:88" pos:end="15:92">avctx</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:57"><decl pos:start="17:5" pos:end="17:56"><type pos:start="17:5" pos:end="17:15"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:15">float</name></type> <name pos:start="17:17" pos:end="17:24">num_bark</name>   <init pos:start="17:28" pos:end="17:56">= <expr pos:start="17:30" pos:end="17:56"><call pos:start="17:30" pos:end="17:56"><name pos:start="17:30" pos:end="17:38">calc_bark</name><argument_list pos:start="17:39" pos:end="17:56">(<argument pos:start="17:40" pos:end="17:55"><expr pos:start="17:40" pos:end="17:55"><operator pos:start="17:40" pos:end="17:40">(</operator><name pos:start="17:41" pos:end="17:45">float</name><operator pos:start="17:46" pos:end="17:46">)</operator><name pos:start="17:47" pos:end="17:55">bandwidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:61"><expr pos:start="21:5" pos:end="21:60"><name pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:24">model_priv_data</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <call pos:start="21:28" pos:end="21:60"><name pos:start="21:28" pos:end="21:37">av_mallocz</name><argument_list pos:start="21:38" pos:end="21:60">(<argument pos:start="21:39" pos:end="21:59"><expr pos:start="21:39" pos:end="21:59"><sizeof pos:start="21:39" pos:end="21:59">sizeof<argument_list pos:start="21:45" pos:end="21:59">(<argument pos:start="21:46" pos:end="21:58"><expr pos:start="21:46" pos:end="21:58"><name pos:start="21:46" pos:end="21:58">AacPsyContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:12">ctx</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:29">model_priv_data</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:8">pctx</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:25">AacPsyContext</name><operator pos:start="27:26" pos:end="27:26">*</operator><operator pos:start="27:27" pos:end="27:27">)</operator> <name pos:start="27:29" pos:end="27:48"><name pos:start="27:29" pos:end="27:31">ctx</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:48">model_priv_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:99"><expr pos:start="29:5" pos:end="29:98"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:8">pctx</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:24">global_quality</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <operator pos:start="29:28" pos:end="29:28">(</operator><ternary pos:start="29:29" pos:end="29:89"><condition pos:start="29:29" pos:end="29:56"><expr pos:start="29:29" pos:end="29:54"><name pos:start="29:29" pos:end="29:54"><name pos:start="29:29" pos:end="29:31">ctx</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:38">avctx</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:54">global_quality</name></name></expr> ?</condition><then pos:start="29:58" pos:end="29:83"> <expr pos:start="29:58" pos:end="29:83"><name pos:start="29:58" pos:end="29:83"><name pos:start="29:58" pos:end="29:60">ctx</name><operator pos:start="29:61" pos:end="29:62">-&gt;</operator><name pos:start="29:63" pos:end="29:67">avctx</name><operator pos:start="29:68" pos:end="29:69">-&gt;</operator><name pos:start="29:70" pos:end="29:83">global_quality</name></name></expr> </then><else pos:start="29:85" pos:end="29:89">: <expr pos:start="29:87" pos:end="29:89"><literal type="number" pos:start="29:87" pos:end="29:89">120</literal></expr></else></ternary><operator pos:start="29:90" pos:end="29:90">)</operator> <operator pos:start="29:92" pos:end="29:92">*</operator> <literal type="number" pos:start="29:94" pos:end="29:98">0.01f</literal></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:46">(<expr pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:11">ctx</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">avctx</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">flags</name></name> <operator pos:start="33:27" pos:end="33:27">&amp;</operator> <name pos:start="33:29" pos:end="33:45">CODEC_FLAG_QSCALE</name></expr>)</condition> <block pos:start="33:48" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:117">

        <comment type="block" pos:start="35:9" pos:end="35:73">/* Use the target average bitrate to compute spread parameters */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:117"><expr pos:start="37:9" pos:end="37:116"><name pos:start="37:9" pos:end="37:20">chan_bitrate</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:27">int</name><operator pos:start="37:28" pos:end="37:28">)</operator><operator pos:start="37:29" pos:end="37:29">(</operator><name pos:start="37:30" pos:end="37:41">chan_bitrate</name> <operator pos:start="37:43" pos:end="37:43">/</operator> <literal type="number" pos:start="37:45" pos:end="37:49">120.0</literal> <operator pos:start="37:51" pos:end="37:51">*</operator> <operator pos:start="37:53" pos:end="37:53">(</operator><ternary pos:start="37:54" pos:end="37:114"><condition pos:start="37:54" pos:end="37:81"><expr pos:start="37:54" pos:end="37:79"><name pos:start="37:54" pos:end="37:79"><name pos:start="37:54" pos:end="37:56">ctx</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:63">avctx</name><operator pos:start="37:64" pos:end="37:65">-&gt;</operator><name pos:start="37:66" pos:end="37:79">global_quality</name></name></expr> ?</condition><then pos:start="37:83" pos:end="37:108"> <expr pos:start="37:83" pos:end="37:108"><name pos:start="37:83" pos:end="37:108"><name pos:start="37:83" pos:end="37:85">ctx</name><operator pos:start="37:86" pos:end="37:87">-&gt;</operator><name pos:start="37:88" pos:end="37:92">avctx</name><operator pos:start="37:93" pos:end="37:94">-&gt;</operator><name pos:start="37:95" pos:end="37:108">global_quality</name></name></expr> </then><else pos:start="37:110" pos:end="37:114">: <expr pos:start="37:112" pos:end="37:114"><literal type="number" pos:start="37:112" pos:end="37:114">120</literal></expr></else></ternary><operator pos:start="37:115" pos:end="37:115">)</operator><operator pos:start="37:116" pos:end="37:116">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:8">pctx</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:22">chan_bitrate</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:37">chan_bitrate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:99"><expr pos:start="45:5" pos:end="45:98"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:8">pctx</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:20">frame_bits</name></name>   <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:98"><name pos:start="45:26" pos:end="45:30">FFMIN</name><argument_list pos:start="45:31" pos:end="45:98">(<argument pos:start="45:32" pos:end="45:35"><expr pos:start="45:32" pos:end="45:35"><literal type="number" pos:start="45:32" pos:end="45:35">2560</literal></expr></argument>, <argument pos:start="45:38" pos:end="45:97"><expr pos:start="45:38" pos:end="45:97"><name pos:start="45:38" pos:end="45:49">chan_bitrate</name> <operator pos:start="45:51" pos:end="45:51">*</operator> <name pos:start="45:53" pos:end="45:71">AAC_BLOCK_SIZE_LONG</name> <operator pos:start="45:73" pos:end="45:73">/</operator> <name pos:start="45:75" pos:end="45:97"><name pos:start="45:75" pos:end="45:77">ctx</name><operator pos:start="45:78" pos:end="45:79">-&gt;</operator><name pos:start="45:80" pos:end="45:84">avctx</name><operator pos:start="45:85" pos:end="45:86">-&gt;</operator><name pos:start="45:87" pos:end="45:97">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:100"><expr pos:start="47:5" pos:end="47:99"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:8">pctx</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:12">pe</name><operator pos:start="47:13" pos:end="47:13">.</operator><name pos:start="47:14" pos:end="47:16">min</name></name>       <operator pos:start="47:24" pos:end="47:24">=</operator>  <literal type="number" pos:start="47:27" pos:end="47:30">8.0f</literal> <operator pos:start="47:32" pos:end="47:32">*</operator> <name pos:start="47:34" pos:end="47:52">AAC_BLOCK_SIZE_LONG</name> <operator pos:start="47:54" pos:end="47:54">*</operator> <name pos:start="47:56" pos:end="47:64">bandwidth</name> <operator pos:start="47:66" pos:end="47:66">/</operator> <operator pos:start="47:68" pos:end="47:68">(</operator><name pos:start="47:69" pos:end="47:91"><name pos:start="47:69" pos:end="47:71">ctx</name><operator pos:start="47:72" pos:end="47:73">-&gt;</operator><name pos:start="47:74" pos:end="47:78">avctx</name><operator pos:start="47:79" pos:end="47:80">-&gt;</operator><name pos:start="47:81" pos:end="47:91">sample_rate</name></name> <operator pos:start="47:93" pos:end="47:93">*</operator> <literal type="number" pos:start="47:95" pos:end="47:98">2.0f</literal><operator pos:start="47:99" pos:end="47:99">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:100"><expr pos:start="49:5" pos:end="49:99"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:8">pctx</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:12">pe</name><operator pos:start="49:13" pos:end="49:13">.</operator><name pos:start="49:14" pos:end="49:16">max</name></name>       <operator pos:start="49:24" pos:end="49:24">=</operator> <literal type="number" pos:start="49:26" pos:end="49:30">12.0f</literal> <operator pos:start="49:32" pos:end="49:32">*</operator> <name pos:start="49:34" pos:end="49:52">AAC_BLOCK_SIZE_LONG</name> <operator pos:start="49:54" pos:end="49:54">*</operator> <name pos:start="49:56" pos:end="49:64">bandwidth</name> <operator pos:start="49:66" pos:end="49:66">/</operator> <operator pos:start="49:68" pos:end="49:68">(</operator><name pos:start="49:69" pos:end="49:91"><name pos:start="49:69" pos:end="49:71">ctx</name><operator pos:start="49:72" pos:end="49:73">-&gt;</operator><name pos:start="49:74" pos:end="49:78">avctx</name><operator pos:start="49:79" pos:end="49:80">-&gt;</operator><name pos:start="49:81" pos:end="49:91">sample_rate</name></name> <operator pos:start="49:93" pos:end="49:93">*</operator> <literal type="number" pos:start="49:95" pos:end="49:98">2.0f</literal><operator pos:start="49:99" pos:end="49:99">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:49"><expr pos:start="51:5" pos:end="51:48"><name pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:7">ctx</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:15">bitres</name><operator pos:start="51:16" pos:end="51:16">.</operator><name pos:start="51:17" pos:end="51:20">size</name></name>   <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:31">6144</literal> <operator pos:start="51:31" pos:end="51:31">-</operator> <name pos:start="51:33" pos:end="51:48"><name pos:start="51:33" pos:end="51:36">pctx</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:48">frame_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:46"><expr pos:start="53:5" pos:end="53:45"><name pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:7">ctx</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:15">bitres</name><operator pos:start="53:16" pos:end="53:16">.</operator><name pos:start="53:17" pos:end="53:20">size</name></name>  <operator pos:start="53:23" pos:end="53:24">-=</operator> <name pos:start="53:26" pos:end="53:41"><name pos:start="53:26" pos:end="53:28">ctx</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:36">bitres</name><operator pos:start="53:37" pos:end="53:37">.</operator><name pos:start="53:38" pos:end="53:41">size</name></name> <operator pos:start="53:43" pos:end="53:43">%</operator> <literal type="number" pos:start="53:45" pos:end="53:45">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:8">pctx</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:20">fill_level</name></name>   <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:41"><name pos:start="55:26" pos:end="55:28">ctx</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:36">bitres</name><operator pos:start="55:37" pos:end="55:37">.</operator><name pos:start="55:38" pos:end="55:41">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:10">minath</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:49"><name pos:start="57:14" pos:end="57:16">ath</name><argument_list pos:start="57:17" pos:end="57:49">(<argument pos:start="57:18" pos:end="57:39"><expr pos:start="57:18" pos:end="57:39"><literal type="number" pos:start="57:18" pos:end="57:23">3410</literal> <operator pos:start="57:23" pos:end="57:23">-</operator> <literal type="number" pos:start="57:25" pos:end="57:29">0.733</literal> <operator pos:start="57:31" pos:end="57:31">*</operator> <name pos:start="57:33" pos:end="57:39">ATH_ADD</name></expr></argument>, <argument pos:start="57:42" pos:end="57:48"><expr pos:start="57:42" pos:end="57:48"><name pos:start="57:42" pos:end="57:48">ATH_ADD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="135:5">for <control pos:start="59:9" pos:end="59:27">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">j</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:17">j</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <literal type="number" pos:start="59:21" pos:end="59:21">2</literal></expr>;</condition> <incr pos:start="59:24" pos:end="59:26"><expr pos:start="59:24" pos:end="59:26"><name pos:start="59:24" pos:end="59:24">j</name><operator pos:start="59:25" pos:end="59:26">++</operator></expr></incr>)</control> <block pos:start="59:29" pos:end="135:5">{<block_content pos:start="61:9" pos:end="133:9">

        <decl_stmt pos:start="61:9" pos:end="61:49"><decl pos:start="61:9" pos:end="61:48"><type pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:20">AacPsyCoeffs</name> <modifier pos:start="61:22" pos:end="61:22">*</modifier></type><name pos:start="61:23" pos:end="61:28">coeffs</name> <init pos:start="61:30" pos:end="61:48">= <expr pos:start="61:32" pos:end="61:48"><name pos:start="61:32" pos:end="61:48"><name pos:start="61:32" pos:end="61:35">pctx</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:45">psy_coef</name><index pos:start="61:46" pos:end="61:48">[<expr pos:start="61:47" pos:end="61:47"><name pos:start="61:47" pos:end="61:47">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:50"><decl pos:start="63:9" pos:end="63:49"><type pos:start="63:9" pos:end="63:23"><specifier pos:start="63:9" pos:end="63:13">const</specifier> <name pos:start="63:15" pos:end="63:21">uint8_t</name> <modifier pos:start="63:23" pos:end="63:23">*</modifier></type><name pos:start="63:24" pos:end="63:33">band_sizes</name> <init pos:start="63:35" pos:end="63:49">= <expr pos:start="63:37" pos:end="63:49"><name pos:start="63:37" pos:end="63:49"><name pos:start="63:37" pos:end="63:39">ctx</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:46">bands</name><index pos:start="63:47" pos:end="63:49">[<expr pos:start="63:48" pos:end="63:48"><name pos:start="63:48" pos:end="63:48">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:82"><decl pos:start="65:9" pos:end="65:81"><type pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:13">float</name></type> <name pos:start="65:15" pos:end="65:31">line_to_frequency</name> <init pos:start="65:33" pos:end="65:81">= <expr pos:start="65:35" pos:end="65:81"><name pos:start="65:35" pos:end="65:57"><name pos:start="65:35" pos:end="65:37">ctx</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:44">avctx</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:57">sample_rate</name></name> <operator pos:start="65:59" pos:end="65:59">/</operator> <operator pos:start="65:61" pos:end="65:61">(</operator><ternary pos:start="65:62" pos:end="65:80"><condition pos:start="65:62" pos:end="65:64"><expr pos:start="65:62" pos:end="65:62"><name pos:start="65:62" pos:end="65:62">j</name></expr> ?</condition><then pos:start="65:66" pos:end="65:70"> <expr pos:start="65:66" pos:end="65:70"><literal type="number" pos:start="65:66" pos:end="65:70">256.f</literal></expr> </then><else pos:start="65:72" pos:end="65:80">: <expr pos:start="65:74" pos:end="65:80"><literal type="number" pos:start="65:74" pos:end="65:80">2048.0f</literal></expr></else></ternary><operator pos:start="65:81" pos:end="65:81">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:94"><decl pos:start="67:9" pos:end="67:93"><type pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:13">float</name></type> <name pos:start="67:15" pos:end="67:27">avg_chan_bits</name> <init pos:start="67:29" pos:end="67:93">= <expr pos:start="67:31" pos:end="67:93"><name pos:start="67:31" pos:end="67:42">chan_bitrate</name> <operator pos:start="67:44" pos:end="67:44">*</operator> <operator pos:start="67:46" pos:end="67:46">(</operator><ternary pos:start="67:47" pos:end="67:66"><condition pos:start="67:47" pos:end="67:49"><expr pos:start="67:47" pos:end="67:47"><name pos:start="67:47" pos:end="67:47">j</name></expr> ?</condition><then pos:start="67:51" pos:end="67:56"> <expr pos:start="67:51" pos:end="67:56"><literal type="number" pos:start="67:51" pos:end="67:56">128.0f</literal></expr> </then><else pos:start="67:58" pos:end="67:66">: <expr pos:start="67:60" pos:end="67:66"><literal type="number" pos:start="67:60" pos:end="67:66">1024.0f</literal></expr></else></ternary><operator pos:start="67:67" pos:end="67:67">)</operator> <operator pos:start="67:69" pos:end="67:69">/</operator> <name pos:start="67:71" pos:end="67:93"><name pos:start="67:71" pos:end="67:73">ctx</name><operator pos:start="67:74" pos:end="67:75">-&gt;</operator><name pos:start="67:76" pos:end="67:80">avctx</name><operator pos:start="67:81" pos:end="67:82">-&gt;</operator><name pos:start="67:83" pos:end="67:93">sample_rate</name></name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:80">/* reference encoder uses 2.4% here instead of 60% like the spec says */</comment>

        <decl_stmt pos:start="71:9" pos:end="71:79"><decl pos:start="71:9" pos:end="71:78"><type pos:start="71:9" pos:end="71:13"><name pos:start="71:9" pos:end="71:13">float</name></type> <name pos:start="71:15" pos:end="71:21">bark_pe</name> <init pos:start="71:23" pos:end="71:78">= <expr pos:start="71:25" pos:end="71:78"><literal type="number" pos:start="71:25" pos:end="71:30">0.024f</literal> <operator pos:start="71:32" pos:end="71:32">*</operator> <call pos:start="71:34" pos:end="71:67"><name pos:start="71:34" pos:end="71:52">PSY_3GPP_BITS_TO_PE</name><argument_list pos:start="71:53" pos:end="71:67">(<argument pos:start="71:54" pos:end="71:66"><expr pos:start="71:54" pos:end="71:66"><name pos:start="71:54" pos:end="71:66">avg_chan_bits</name></expr></argument>)</argument_list></call> <operator pos:start="71:69" pos:end="71:69">/</operator> <name pos:start="71:71" pos:end="71:78">num_bark</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:86"><decl pos:start="73:9" pos:end="73:85"><type pos:start="73:9" pos:end="73:13"><name pos:start="73:9" pos:end="73:13">float</name></type> <name pos:start="73:15" pos:end="73:27">en_spread_low</name> <init pos:start="73:29" pos:end="73:85">= <expr pos:start="73:31" pos:end="73:85"><ternary pos:start="73:31" pos:end="73:85"><condition pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:31"><name pos:start="73:31" pos:end="73:31">j</name></expr> ?</condition><then pos:start="73:35" pos:end="73:58"> <expr pos:start="73:35" pos:end="73:58"><name pos:start="73:35" pos:end="73:58">PSY_3GPP_EN_SPREAD_LOW_S</name></expr> </then><else pos:start="73:60" pos:end="73:85">: <expr pos:start="73:62" pos:end="73:85"><name pos:start="73:62" pos:end="73:85">PSY_3GPP_EN_SPREAD_LOW_L</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="75:9" pos:end="75:100">/* High energy spreading for long blocks &lt;= 22kbps/channel and short blocks are the same. */</comment>

        <decl_stmt pos:start="77:9" pos:end="77:114"><decl pos:start="77:9" pos:end="77:113"><type pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:13">float</name></type> <name pos:start="77:15" pos:end="77:26">en_spread_hi</name>  <init pos:start="77:29" pos:end="77:113">= <expr pos:start="77:31" pos:end="77:113"><ternary pos:start="77:31" pos:end="77:113"><condition pos:start="77:31" pos:end="77:62"><expr pos:start="77:31" pos:end="77:60"><operator pos:start="77:31" pos:end="77:31">(</operator><name pos:start="77:32" pos:end="77:32">j</name> <operator pos:start="77:34" pos:end="77:35">||</operator> <operator pos:start="77:37" pos:end="77:37">(</operator><name pos:start="77:38" pos:end="77:49">chan_bitrate</name> <operator pos:start="77:51" pos:end="77:52">&lt;=</operator> <literal type="number" pos:start="77:54" pos:end="77:58">22.0f</literal><operator pos:start="77:59" pos:end="77:59">)</operator><operator pos:start="77:60" pos:end="77:60">)</operator></expr> ?</condition><then pos:start="77:64" pos:end="77:86"> <expr pos:start="77:64" pos:end="77:86"><name pos:start="77:64" pos:end="77:86">PSY_3GPP_EN_SPREAD_HI_S</name></expr> </then><else pos:start="77:88" pos:end="77:113">: <expr pos:start="77:90" pos:end="77:113"><name pos:start="77:90" pos:end="77:113">PSY_3GPP_EN_SPREAD_HI_L1</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:14"><expr pos:start="81:9" pos:end="81:13"><name pos:start="81:9" pos:end="81:9">i</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <literal type="number" pos:start="81:13" pos:end="81:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:19"><expr pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:12">prev</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <literal type="number" pos:start="83:16" pos:end="83:18">0.0</literal></expr>;</expr_stmt>

        <for pos:start="85:9" pos:end="95:9">for <control pos:start="85:13" pos:end="85:47">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">g</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:42"><expr pos:start="85:21" pos:end="85:41"><name pos:start="85:21" pos:end="85:21">g</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <name pos:start="85:25" pos:end="85:41"><name pos:start="85:25" pos:end="85:27">ctx</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:38">num_bands</name><index pos:start="85:39" pos:end="85:41">[<expr pos:start="85:40" pos:end="85:40"><name pos:start="85:40" pos:end="85:40">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="85:44" pos:end="85:46"><expr pos:start="85:44" pos:end="85:46"><name pos:start="85:44" pos:end="85:44">g</name><operator pos:start="85:45" pos:end="85:46">++</operator></expr></incr>)</control> <block pos:start="85:49" pos:end="95:9">{<block_content pos:start="87:13" pos:end="93:24">

            <expr_stmt pos:start="87:13" pos:end="87:31"><expr pos:start="87:13" pos:end="87:30"><name pos:start="87:13" pos:end="87:13">i</name> <operator pos:start="87:15" pos:end="87:16">+=</operator> <name pos:start="87:18" pos:end="87:30"><name pos:start="87:18" pos:end="87:27">band_sizes</name><index pos:start="87:28" pos:end="87:30">[<expr pos:start="87:29" pos:end="87:29"><name pos:start="87:29" pos:end="87:29">g</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:56"><expr pos:start="89:13" pos:end="89:55"><name pos:start="89:13" pos:end="89:16">bark</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:55"><name pos:start="89:20" pos:end="89:28">calc_bark</name><argument_list pos:start="89:29" pos:end="89:55">(<argument pos:start="89:30" pos:end="89:54"><expr pos:start="89:30" pos:end="89:54"><operator pos:start="89:30" pos:end="89:30">(</operator><name pos:start="89:31" pos:end="89:31">i</name><operator pos:start="89:32" pos:end="89:32">-</operator><literal type="number" pos:start="89:33" pos:end="89:33">1</literal><operator pos:start="89:34" pos:end="89:34">)</operator> <operator pos:start="89:36" pos:end="89:36">*</operator> <name pos:start="89:38" pos:end="89:54">line_to_frequency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:50"><expr pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:18">coeffs</name><index pos:start="91:19" pos:end="91:21">[<expr pos:start="91:20" pos:end="91:20"><name pos:start="91:20" pos:end="91:20">g</name></expr>]</index></name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:27">barks</name> <operator pos:start="91:29" pos:end="91:29">=</operator> <operator pos:start="91:31" pos:end="91:31">(</operator><name pos:start="91:32" pos:end="91:35">bark</name> <operator pos:start="91:37" pos:end="91:37">+</operator> <name pos:start="91:39" pos:end="91:42">prev</name><operator pos:start="91:43" pos:end="91:43">)</operator> <operator pos:start="91:45" pos:end="91:45">/</operator> <literal type="number" pos:start="91:47" pos:end="91:49">2.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:24"><expr pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:16">prev</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:23">bark</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="97:9" pos:end="117:9">for <control pos:start="97:13" pos:end="97:51">(<init pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">g</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>;</init> <condition pos:start="97:21" pos:end="97:46"><expr pos:start="97:21" pos:end="97:45"><name pos:start="97:21" pos:end="97:21">g</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <name pos:start="97:25" pos:end="97:41"><name pos:start="97:25" pos:end="97:27">ctx</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:38">num_bands</name><index pos:start="97:39" pos:end="97:41">[<expr pos:start="97:40" pos:end="97:40"><name pos:start="97:40" pos:end="97:40">j</name></expr>]</index></name> <operator pos:start="97:43" pos:end="97:43">-</operator> <literal type="number" pos:start="97:45" pos:end="97:45">1</literal></expr>;</condition> <incr pos:start="97:48" pos:end="97:50"><expr pos:start="97:48" pos:end="97:50"><name pos:start="97:48" pos:end="97:48">g</name><operator pos:start="97:49" pos:end="97:50">++</operator></expr></incr>)</control> <block pos:start="97:53" pos:end="117:9">{<block_content pos:start="99:13" pos:end="115:80">

            <decl_stmt pos:start="99:13" pos:end="99:45"><decl pos:start="99:13" pos:end="99:44"><type pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:24">AacPsyCoeffs</name> <modifier pos:start="99:26" pos:end="99:26">*</modifier></type><name pos:start="99:27" pos:end="99:31">coeff</name> <init pos:start="99:33" pos:end="99:44">= <expr pos:start="99:35" pos:end="99:44"><operator pos:start="99:35" pos:end="99:35">&amp;</operator><name pos:start="99:36" pos:end="99:44"><name pos:start="99:36" pos:end="99:41">coeffs</name><index pos:start="99:42" pos:end="99:44">[<expr pos:start="99:43" pos:end="99:43"><name pos:start="99:43" pos:end="99:43">g</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="101:13" pos:end="101:65"><decl pos:start="101:13" pos:end="101:64"><type pos:start="101:13" pos:end="101:17"><name pos:start="101:13" pos:end="101:17">float</name></type> <name pos:start="101:19" pos:end="101:28">bark_width</name> <init pos:start="101:30" pos:end="101:64">= <expr pos:start="101:32" pos:end="101:64"><name pos:start="101:32" pos:end="101:42"><name pos:start="101:32" pos:end="101:37">coeffs</name><index pos:start="101:38" pos:end="101:42">[<expr pos:start="101:39" pos:end="101:41"><name pos:start="101:39" pos:end="101:39">g</name><operator pos:start="101:40" pos:end="101:40">+</operator><literal type="number" pos:start="101:41" pos:end="101:41">1</literal></expr>]</index></name><operator pos:start="101:43" pos:end="101:43">.</operator><name pos:start="101:44" pos:end="101:48">barks</name> <operator pos:start="101:50" pos:end="101:50">-</operator> <name pos:start="101:52" pos:end="101:64"><name pos:start="101:52" pos:end="101:57">coeffs</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:64">barks</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:84"><expr pos:start="103:13" pos:end="103:83"><name pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:17">coeff</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:29">spread_low</name><index pos:start="103:30" pos:end="103:32">[<expr pos:start="103:31" pos:end="103:31"><literal type="number" pos:start="103:31" pos:end="103:31">0</literal></expr>]</index></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <call pos:start="103:36" pos:end="103:83"><name pos:start="103:36" pos:end="103:38">pow</name><argument_list pos:start="103:39" pos:end="103:83">(<argument pos:start="103:40" pos:end="103:43"><expr pos:start="103:40" pos:end="103:43"><literal type="number" pos:start="103:40" pos:end="103:43">10.0</literal></expr></argument>, <argument pos:start="103:46" pos:end="103:82"><expr pos:start="103:46" pos:end="103:82"><operator pos:start="103:46" pos:end="103:46">-</operator><name pos:start="103:47" pos:end="103:56">bark_width</name> <operator pos:start="103:58" pos:end="103:58">*</operator> <name pos:start="103:60" pos:end="103:82">PSY_3GPP_THR_SPREAD_LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:83"><expr pos:start="105:13" pos:end="105:82"><name pos:start="105:13" pos:end="105:32"><name pos:start="105:13" pos:end="105:17">coeff</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:28">spread_hi</name> <index pos:start="105:30" pos:end="105:32">[<expr pos:start="105:31" pos:end="105:31"><literal type="number" pos:start="105:31" pos:end="105:31">0</literal></expr>]</index></name> <operator pos:start="105:34" pos:end="105:34">=</operator> <call pos:start="105:36" pos:end="105:82"><name pos:start="105:36" pos:end="105:38">pow</name><argument_list pos:start="105:39" pos:end="105:82">(<argument pos:start="105:40" pos:end="105:43"><expr pos:start="105:40" pos:end="105:43"><literal type="number" pos:start="105:40" pos:end="105:43">10.0</literal></expr></argument>, <argument pos:start="105:46" pos:end="105:81"><expr pos:start="105:46" pos:end="105:81"><operator pos:start="105:46" pos:end="105:46">-</operator><name pos:start="105:47" pos:end="105:56">bark_width</name> <operator pos:start="105:58" pos:end="105:58">*</operator> <name pos:start="105:60" pos:end="105:81">PSY_3GPP_THR_SPREAD_HI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:74"><expr pos:start="107:13" pos:end="107:73"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:17">coeff</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:29">spread_low</name><index pos:start="107:30" pos:end="107:32">[<expr pos:start="107:31" pos:end="107:31"><literal type="number" pos:start="107:31" pos:end="107:31">1</literal></expr>]</index></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <call pos:start="107:36" pos:end="107:73"><name pos:start="107:36" pos:end="107:38">pow</name><argument_list pos:start="107:39" pos:end="107:73">(<argument pos:start="107:40" pos:end="107:43"><expr pos:start="107:40" pos:end="107:43"><literal type="number" pos:start="107:40" pos:end="107:43">10.0</literal></expr></argument>, <argument pos:start="107:46" pos:end="107:72"><expr pos:start="107:46" pos:end="107:72"><operator pos:start="107:46" pos:end="107:46">-</operator><name pos:start="107:47" pos:end="107:56">bark_width</name> <operator pos:start="107:58" pos:end="107:58">*</operator> <name pos:start="107:60" pos:end="107:72">en_spread_low</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:73"><expr pos:start="109:13" pos:end="109:72"><name pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:17">coeff</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:28">spread_hi</name> <index pos:start="109:30" pos:end="109:32">[<expr pos:start="109:31" pos:end="109:31"><literal type="number" pos:start="109:31" pos:end="109:31">1</literal></expr>]</index></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <call pos:start="109:36" pos:end="109:72"><name pos:start="109:36" pos:end="109:38">pow</name><argument_list pos:start="109:39" pos:end="109:72">(<argument pos:start="109:40" pos:end="109:43"><expr pos:start="109:40" pos:end="109:43"><literal type="number" pos:start="109:40" pos:end="109:43">10.0</literal></expr></argument>, <argument pos:start="109:46" pos:end="109:71"><expr pos:start="109:46" pos:end="109:71"><operator pos:start="109:46" pos:end="109:46">-</operator><name pos:start="109:47" pos:end="109:56">bark_width</name> <operator pos:start="109:58" pos:end="109:58">*</operator> <name pos:start="109:60" pos:end="109:71">en_spread_hi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:18">pe_min</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:28">bark_pe</name> <operator pos:start="111:30" pos:end="111:30">*</operator> <name pos:start="111:32" pos:end="111:41">bark_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:57"><expr pos:start="113:13" pos:end="113:56"><name pos:start="113:13" pos:end="113:18">minsnr</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:49"><name pos:start="113:22" pos:end="113:25">exp2</name><argument_list pos:start="113:26" pos:end="113:49">(<argument pos:start="113:27" pos:end="113:48"><expr pos:start="113:27" pos:end="113:48"><name pos:start="113:27" pos:end="113:32">pe_min</name> <operator pos:start="113:34" pos:end="113:34">/</operator> <name pos:start="113:36" pos:end="113:48"><name pos:start="113:36" pos:end="113:45">band_sizes</name><index pos:start="113:46" pos:end="113:48">[<expr pos:start="113:47" pos:end="113:47"><name pos:start="113:47" pos:end="113:47">g</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="113:51" pos:end="113:51">-</operator> <literal type="number" pos:start="113:53" pos:end="113:56">1.5f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:80"><expr pos:start="115:13" pos:end="115:79"><name pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:17">coeff</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:26">min_snr</name></name> <operator pos:start="115:28" pos:end="115:28">=</operator> <call pos:start="115:30" pos:end="115:79"><name pos:start="115:30" pos:end="115:37">av_clipf</name><argument_list pos:start="115:38" pos:end="115:79">(<argument pos:start="115:39" pos:end="115:51"><expr pos:start="115:39" pos:end="115:51"><literal type="number" pos:start="115:39" pos:end="115:42">1.0f</literal> <operator pos:start="115:44" pos:end="115:44">/</operator> <name pos:start="115:46" pos:end="115:51">minsnr</name></expr></argument>, <argument pos:start="115:54" pos:end="115:65"><expr pos:start="115:54" pos:end="115:65"><name pos:start="115:54" pos:end="115:65">PSY_SNR_25DB</name></expr></argument>, <argument pos:start="115:68" pos:end="115:78"><expr pos:start="115:68" pos:end="115:78"><name pos:start="115:68" pos:end="115:78">PSY_SNR_1DB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="119:9" pos:end="119:18"><expr pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:13">start</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <literal type="number" pos:start="119:17" pos:end="119:17">0</literal></expr>;</expr_stmt>

        <for pos:start="121:9" pos:end="133:9">for <control pos:start="121:13" pos:end="121:47">(<init pos:start="121:14" pos:end="121:19"><expr pos:start="121:14" pos:end="121:18"><name pos:start="121:14" pos:end="121:14">g</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">0</literal></expr>;</init> <condition pos:start="121:21" pos:end="121:42"><expr pos:start="121:21" pos:end="121:41"><name pos:start="121:21" pos:end="121:21">g</name> <operator pos:start="121:23" pos:end="121:23">&lt;</operator> <name pos:start="121:25" pos:end="121:41"><name pos:start="121:25" pos:end="121:27">ctx</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:38">num_bands</name><index pos:start="121:39" pos:end="121:41">[<expr pos:start="121:40" pos:end="121:40"><name pos:start="121:40" pos:end="121:40">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="121:44" pos:end="121:46"><expr pos:start="121:44" pos:end="121:46"><name pos:start="121:44" pos:end="121:44">g</name><operator pos:start="121:45" pos:end="121:46">++</operator></expr></incr>)</control> <block pos:start="121:49" pos:end="133:9">{<block_content pos:start="123:13" pos:end="131:35">

            <expr_stmt pos:start="123:13" pos:end="123:63"><expr pos:start="123:13" pos:end="123:62"><name pos:start="123:13" pos:end="123:20">minscale</name> <operator pos:start="123:22" pos:end="123:22">=</operator> <call pos:start="123:24" pos:end="123:62"><name pos:start="123:24" pos:end="123:26">ath</name><argument_list pos:start="123:27" pos:end="123:62">(<argument pos:start="123:28" pos:end="123:52"><expr pos:start="123:28" pos:end="123:52"><name pos:start="123:28" pos:end="123:32">start</name> <operator pos:start="123:34" pos:end="123:34">*</operator> <name pos:start="123:36" pos:end="123:52">line_to_frequency</name></expr></argument>, <argument pos:start="123:55" pos:end="123:61"><expr pos:start="123:55" pos:end="123:61"><name pos:start="123:55" pos:end="123:61">ATH_ADD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="125:13" pos:end="127:90">for <control pos:start="125:17" pos:end="125:47">(<init pos:start="125:18" pos:end="125:23"><expr pos:start="125:18" pos:end="125:22"><name pos:start="125:18" pos:end="125:18">i</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">1</literal></expr>;</init> <condition pos:start="125:25" pos:end="125:42"><expr pos:start="125:25" pos:end="125:41"><name pos:start="125:25" pos:end="125:25">i</name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <name pos:start="125:29" pos:end="125:41"><name pos:start="125:29" pos:end="125:38">band_sizes</name><index pos:start="125:39" pos:end="125:41">[<expr pos:start="125:40" pos:end="125:40"><name pos:start="125:40" pos:end="125:40">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="125:44" pos:end="125:46"><expr pos:start="125:44" pos:end="125:46"><name pos:start="125:44" pos:end="125:44">i</name><operator pos:start="125:45" pos:end="125:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:17" pos:end="127:90"><block_content pos:start="127:17" pos:end="127:90">

                <expr_stmt pos:start="127:17" pos:end="127:90"><expr pos:start="127:17" pos:end="127:89"><name pos:start="127:17" pos:end="127:24">minscale</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <call pos:start="127:28" pos:end="127:89"><name pos:start="127:28" pos:end="127:32">FFMIN</name><argument_list pos:start="127:33" pos:end="127:89">(<argument pos:start="127:34" pos:end="127:41"><expr pos:start="127:34" pos:end="127:41"><name pos:start="127:34" pos:end="127:41">minscale</name></expr></argument>, <argument pos:start="127:44" pos:end="127:88"><expr pos:start="127:44" pos:end="127:88"><call pos:start="127:44" pos:end="127:88"><name pos:start="127:44" pos:end="127:46">ath</name><argument_list pos:start="127:47" pos:end="127:88">(<argument pos:start="127:48" pos:end="127:78"><expr pos:start="127:48" pos:end="127:78"><operator pos:start="127:48" pos:end="127:48">(</operator><name pos:start="127:49" pos:end="127:53">start</name> <operator pos:start="127:55" pos:end="127:55">+</operator> <name pos:start="127:57" pos:end="127:57">i</name><operator pos:start="127:58" pos:end="127:58">)</operator> <operator pos:start="127:60" pos:end="127:60">*</operator> <name pos:start="127:62" pos:end="127:78">line_to_frequency</name></expr></argument>, <argument pos:start="127:81" pos:end="127:87"><expr pos:start="127:81" pos:end="127:87"><name pos:start="127:81" pos:end="127:87">ATH_ADD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="129:13" pos:end="129:46"><expr pos:start="129:13" pos:end="129:45"><name pos:start="129:13" pos:end="129:21"><name pos:start="129:13" pos:end="129:18">coeffs</name><index pos:start="129:19" pos:end="129:21">[<expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">g</name></expr>]</index></name><operator pos:start="129:22" pos:end="129:22">.</operator><name pos:start="129:23" pos:end="129:25">ath</name> <operator pos:start="129:27" pos:end="129:27">=</operator> <name pos:start="129:29" pos:end="129:36">minscale</name> <operator pos:start="129:38" pos:end="129:38">-</operator> <name pos:start="129:40" pos:end="129:45">minath</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:35"><expr pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:17">start</name> <operator pos:start="131:19" pos:end="131:20">+=</operator> <name pos:start="131:22" pos:end="131:34"><name pos:start="131:22" pos:end="131:31">band_sizes</name><index pos:start="131:32" pos:end="131:34">[<expr pos:start="131:33" pos:end="131:33"><name pos:start="131:33" pos:end="131:33">g</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="139:5" pos:end="139:77"><expr pos:start="139:5" pos:end="139:76"><name pos:start="139:5" pos:end="139:12"><name pos:start="139:5" pos:end="139:8">pctx</name><operator pos:start="139:9" pos:end="139:10">-&gt;</operator><name pos:start="139:11" pos:end="139:12">ch</name></name> <operator pos:start="139:14" pos:end="139:14">=</operator> <call pos:start="139:16" pos:end="139:76"><name pos:start="139:16" pos:end="139:31">av_mallocz_array</name><argument_list pos:start="139:32" pos:end="139:76">(<argument pos:start="139:33" pos:end="139:52"><expr pos:start="139:33" pos:end="139:52"><name pos:start="139:33" pos:end="139:52"><name pos:start="139:33" pos:end="139:35">ctx</name><operator pos:start="139:36" pos:end="139:37">-&gt;</operator><name pos:start="139:38" pos:end="139:42">avctx</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:52">channels</name></name></expr></argument>, <argument pos:start="139:55" pos:end="139:75"><expr pos:start="139:55" pos:end="139:75"><sizeof pos:start="139:55" pos:end="139:75">sizeof<argument_list pos:start="139:61" pos:end="139:75">(<argument pos:start="139:62" pos:end="139:74"><expr pos:start="139:62" pos:end="139:74"><name pos:start="139:62" pos:end="139:74">AacPsyChannel</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:18">(<expr pos:start="141:9" pos:end="141:17"><operator pos:start="141:9" pos:end="141:9">!</operator><name pos:start="141:10" pos:end="141:17"><name pos:start="141:10" pos:end="141:13">pctx</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:17">ch</name></name></expr>)</condition> <block pos:start="141:20" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:31">

        <expr_stmt pos:start="143:9" pos:end="143:40"><expr pos:start="143:9" pos:end="143:39"><call pos:start="143:9" pos:end="143:39"><name pos:start="143:9" pos:end="143:16">av_freep</name><argument_list pos:start="143:17" pos:end="143:39">(<argument pos:start="143:18" pos:end="143:38"><expr pos:start="143:18" pos:end="143:38"><operator pos:start="143:18" pos:end="143:18">&amp;</operator><name pos:start="143:19" pos:end="143:38"><name pos:start="143:19" pos:end="143:21">ctx</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:38">model_priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="145:9" pos:end="145:31">return <expr pos:start="145:16" pos:end="145:30"><call pos:start="145:16" pos:end="145:30"><name pos:start="145:16" pos:end="145:22">AVERROR</name><argument_list pos:start="145:23" pos:end="145:30">(<argument pos:start="145:24" pos:end="145:29"><expr pos:start="145:24" pos:end="145:29"><name pos:start="145:24" pos:end="145:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:39"><expr pos:start="151:5" pos:end="151:38"><call pos:start="151:5" pos:end="151:38"><name pos:start="151:5" pos:end="151:20">lame_window_init</name><argument_list pos:start="151:21" pos:end="151:38">(<argument pos:start="151:22" pos:end="151:25"><expr pos:start="151:22" pos:end="151:25"><name pos:start="151:22" pos:end="151:25">pctx</name></expr></argument>, <argument pos:start="151:28" pos:end="151:37"><expr pos:start="151:28" pos:end="151:37"><name pos:start="151:28" pos:end="151:37"><name pos:start="151:28" pos:end="151:30">ctx</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:37">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="155:5" pos:end="155:13">return <expr pos:start="155:12" pos:end="155:12"><literal type="number" pos:start="155:12" pos:end="155:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
