<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6691.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">stream_component_close</name><parameter_list pos:start="1:35" pos:end="1:68">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:45">VideoState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">is</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:67"><decl pos:start="1:52" pos:end="1:67"><type pos:start="1:52" pos:end="1:67"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:67">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">ic</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:28">is</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:32">ic</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:59">(<expr pos:start="11:9" pos:end="11:58"><name pos:start="11:9" pos:end="11:20">stream_index</name> <operator pos:start="11:22" pos:end="11:22">&lt;</operator> <literal type="number" pos:start="11:24" pos:end="11:24">0</literal> <operator pos:start="11:26" pos:end="11:27">||</operator> <name pos:start="11:29" pos:end="11:40">stream_index</name> <operator pos:start="11:42" pos:end="11:43">&gt;=</operator> <name pos:start="11:45" pos:end="11:58"><name pos:start="11:45" pos:end="11:46">ic</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:58">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:9">avctx</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:14">ic</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:23">streams</name><index pos:start="15:24" pos:end="15:37">[<expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:36">stream_index</name></expr>]</index></name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:44">codec</name></expr>;</expr_stmt>



    <switch pos:start="19:5" pos:end="115:5">switch<condition pos:start="19:11" pos:end="19:29">(<expr pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:16">avctx</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:28">codec_type</name></name></expr>)</condition> <block pos:start="19:31" pos:end="115:5">{<block_content pos:start="21:5" pos:end="113:14">

    <case pos:start="21:5" pos:end="21:28">case <expr pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:26">packet_queue_abort</name><argument_list pos:start="23:27" pos:end="23:39">(<argument pos:start="23:28" pos:end="23:38"><expr pos:start="23:28" pos:end="23:38"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:38"><name pos:start="23:29" pos:end="23:30">is</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:38">audioq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:22">SDL_CloseAudio</name><argument_list pos:start="27:23" pos:end="27:24">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:24">packet_queue_end</name><argument_list pos:start="31:25" pos:end="31:37">(<argument pos:start="31:26" pos:end="31:36"><expr pos:start="31:26" pos:end="31:36"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:36"><name pos:start="31:27" pos:end="31:28">is</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:36">audioq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:22">av_free_packet</name><argument_list pos:start="33:23" pos:end="33:38">(<argument pos:start="33:24" pos:end="33:37"><expr pos:start="33:24" pos:end="33:37"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:26">is</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:37">audio_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:52"><if pos:start="35:9" pos:end="37:52">if <condition pos:start="35:12" pos:end="35:29">(<expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:14">is</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:28">reformat_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:52"><block_content pos:start="37:13" pos:end="37:52">

            <expr_stmt pos:start="37:13" pos:end="37:52"><expr pos:start="37:13" pos:end="37:51"><call pos:start="37:13" pos:end="37:51"><name pos:start="37:13" pos:end="37:33">av_audio_convert_free</name><argument_list pos:start="37:34" pos:end="37:51">(<argument pos:start="37:35" pos:end="37:50"><expr pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:36">is</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:50">reformat_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:10">is</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:24">reformat_ctx</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:31">NULL</name></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:21">(<expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:14">is</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">rdft</name></name></expr>)</condition> <block pos:start="43:23" pos:end="51:9">{<block_content pos:start="45:13" pos:end="47:37">

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><call pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:23">av_rdft_end</name><argument_list pos:start="45:24" pos:end="45:33">(<argument pos:start="45:25" pos:end="45:32"><expr pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:26">is</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:32">rdft</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:37"><expr pos:start="47:13" pos:end="47:36"><call pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:20">av_freep</name><argument_list pos:start="47:21" pos:end="47:36">(<argument pos:start="47:22" pos:end="47:35"><expr pos:start="47:22" pos:end="47:35"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:35"><name pos:start="47:23" pos:end="47:24">is</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:35">rdft_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        </block_content>}</block></if></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:28">case <expr pos:start="55:10" pos:end="55:27"><name pos:start="55:10" pos:end="55:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><call pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:26">packet_queue_abort</name><argument_list pos:start="57:27" pos:end="57:39">(<argument pos:start="57:28" pos:end="57:38"><expr pos:start="57:28" pos:end="57:38"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:38"><name pos:start="57:29" pos:end="57:30">is</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:38">videoq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="61:9" pos:end="63:39">/* note: we also signal this mutex to make sure we deblock the

           video thread in all cases */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><call pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:21">SDL_LockMutex</name><argument_list pos:start="65:22" pos:end="65:38">(<argument pos:start="65:23" pos:end="65:37"><expr pos:start="65:23" pos:end="65:37"><name pos:start="65:23" pos:end="65:37"><name pos:start="65:23" pos:end="65:24">is</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:39"><expr pos:start="67:9" pos:end="67:38"><call pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:22">SDL_CondSignal</name><argument_list pos:start="67:23" pos:end="67:38">(<argument pos:start="67:24" pos:end="67:37"><expr pos:start="67:24" pos:end="67:37"><name pos:start="67:24" pos:end="67:37"><name pos:start="67:24" pos:end="67:25">is</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:37">pictq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:41"><expr pos:start="69:9" pos:end="69:40"><call pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:23">SDL_UnlockMutex</name><argument_list pos:start="69:24" pos:end="69:40">(<argument pos:start="69:25" pos:end="69:39"><expr pos:start="69:25" pos:end="69:39"><name pos:start="69:25" pos:end="69:39"><name pos:start="69:25" pos:end="69:26">is</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><call pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:22">SDL_WaitThread</name><argument_list pos:start="73:23" pos:end="73:43">(<argument pos:start="73:24" pos:end="73:36"><expr pos:start="73:24" pos:end="73:36"><name pos:start="73:24" pos:end="73:36"><name pos:start="73:24" pos:end="73:25">is</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:36">video_tid</name></name></expr></argument>, <argument pos:start="73:39" pos:end="73:42"><expr pos:start="73:39" pos:end="73:42"><name pos:start="73:39" pos:end="73:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><call pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:24">packet_queue_end</name><argument_list pos:start="77:25" pos:end="77:37">(<argument pos:start="77:26" pos:end="77:36"><expr pos:start="77:26" pos:end="77:36"><operator pos:start="77:26" pos:end="77:26">&amp;</operator><name pos:start="77:27" pos:end="77:36"><name pos:start="77:27" pos:end="77:28">is</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:36">videoq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:31">case <expr pos:start="81:10" pos:end="81:30"><name pos:start="81:10" pos:end="81:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><call pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:26">packet_queue_abort</name><argument_list pos:start="83:27" pos:end="83:42">(<argument pos:start="83:28" pos:end="83:41"><expr pos:start="83:28" pos:end="83:41"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:41"><name pos:start="83:29" pos:end="83:30">is</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:41">subtitleq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="87:9" pos:end="89:39">/* note: we also signal this mutex to make sure we deblock the

           video thread in all cases */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><call pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:21">SDL_LockMutex</name><argument_list pos:start="91:22" pos:end="91:38">(<argument pos:start="91:23" pos:end="91:37"><expr pos:start="91:23" pos:end="91:37"><name pos:start="91:23" pos:end="91:37"><name pos:start="91:23" pos:end="91:24">is</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:37">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:40"><expr pos:start="93:9" pos:end="93:39"><name pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:10">is</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:35">subtitle_stream_changed</name></name> <operator pos:start="93:37" pos:end="93:37">=</operator> <literal type="number" pos:start="93:39" pos:end="93:39">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:39"><expr pos:start="97:9" pos:end="97:38"><call pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:22">SDL_CondSignal</name><argument_list pos:start="97:23" pos:end="97:38">(<argument pos:start="97:24" pos:end="97:37"><expr pos:start="97:24" pos:end="97:37"><name pos:start="97:24" pos:end="97:37"><name pos:start="97:24" pos:end="97:25">is</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:37">subpq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:41"><expr pos:start="99:9" pos:end="99:40"><call pos:start="99:9" pos:end="99:40"><name pos:start="99:9" pos:end="99:23">SDL_UnlockMutex</name><argument_list pos:start="99:24" pos:end="99:40">(<argument pos:start="99:25" pos:end="99:39"><expr pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:26">is</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:39">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:47"><expr pos:start="103:9" pos:end="103:46"><call pos:start="103:9" pos:end="103:46"><name pos:start="103:9" pos:end="103:22">SDL_WaitThread</name><argument_list pos:start="103:23" pos:end="103:46">(<argument pos:start="103:24" pos:end="103:39"><expr pos:start="103:24" pos:end="103:39"><name pos:start="103:24" pos:end="103:39"><name pos:start="103:24" pos:end="103:25">is</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:39">subtitle_tid</name></name></expr></argument>, <argument pos:start="103:42" pos:end="103:45"><expr pos:start="103:42" pos:end="103:45"><name pos:start="103:42" pos:end="103:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:41"><expr pos:start="107:9" pos:end="107:40"><call pos:start="107:9" pos:end="107:40"><name pos:start="107:9" pos:end="107:24">packet_queue_end</name><argument_list pos:start="107:25" pos:end="107:40">(<argument pos:start="107:26" pos:end="107:39"><expr pos:start="107:26" pos:end="107:39"><operator pos:start="107:26" pos:end="107:26">&amp;</operator><name pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:28">is</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:39">subtitleq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <default pos:start="111:5" pos:end="111:12">default:</default>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="119:5" pos:end="119:55"><expr pos:start="119:5" pos:end="119:54"><name pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:6">ic</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:15">streams</name><index pos:start="119:16" pos:end="119:29">[<expr pos:start="119:17" pos:end="119:28"><name pos:start="119:17" pos:end="119:28">stream_index</name></expr>]</index></name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:38">discard</name> <operator pos:start="119:40" pos:end="119:40">=</operator> <name pos:start="119:42" pos:end="119:54">AVDISCARD_ALL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:25"><expr pos:start="121:5" pos:end="121:24"><call pos:start="121:5" pos:end="121:24"><name pos:start="121:5" pos:end="121:17">avcodec_close</name><argument_list pos:start="121:18" pos:end="121:24">(<argument pos:start="121:19" pos:end="121:23"><expr pos:start="121:19" pos:end="121:23"><name pos:start="121:19" pos:end="121:23">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="123:5" pos:end="153:5">switch<condition pos:start="123:11" pos:end="123:29">(<expr pos:start="123:12" pos:end="123:28"><name pos:start="123:12" pos:end="123:28"><name pos:start="123:12" pos:end="123:16">avctx</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:28">codec_type</name></name></expr>)</condition> <block pos:start="123:31" pos:end="153:5">{<block_content pos:start="125:5" pos:end="151:14">

    <case pos:start="125:5" pos:end="125:28">case <expr pos:start="125:10" pos:end="125:27"><name pos:start="125:10" pos:end="125:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:10">is</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:20">audio_st</name></name> <operator pos:start="127:22" pos:end="127:22">=</operator> <name pos:start="127:24" pos:end="127:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:30"><expr pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:10">is</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:24">audio_stream</name></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <operator pos:start="129:28" pos:end="129:28">-</operator><literal type="number" pos:start="129:29" pos:end="129:29">1</literal></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    <case pos:start="133:5" pos:end="133:28">case <expr pos:start="133:10" pos:end="133:27"><name pos:start="133:10" pos:end="133:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="135:9" pos:end="135:28"><expr pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:10">is</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:20">video_st</name></name> <operator pos:start="135:22" pos:end="135:22">=</operator> <name pos:start="135:24" pos:end="135:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:30"><expr pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:10">is</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:24">video_stream</name></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <operator pos:start="137:28" pos:end="137:28">-</operator><literal type="number" pos:start="137:29" pos:end="137:29">1</literal></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:31">case <expr pos:start="141:10" pos:end="141:30"><name pos:start="141:10" pos:end="141:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <expr_stmt pos:start="143:9" pos:end="143:31"><expr pos:start="143:9" pos:end="143:30"><name pos:start="143:9" pos:end="143:23"><name pos:start="143:9" pos:end="143:10">is</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:23">subtitle_st</name></name> <operator pos:start="143:25" pos:end="143:25">=</operator> <name pos:start="143:27" pos:end="143:30">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:33"><expr pos:start="145:9" pos:end="145:32"><name pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:10">is</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:27">subtitle_stream</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <operator pos:start="145:31" pos:end="145:31">-</operator><literal type="number" pos:start="145:32" pos:end="145:32">1</literal></expr>;</expr_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <default pos:start="149:5" pos:end="149:12">default:</default>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function></unit>
