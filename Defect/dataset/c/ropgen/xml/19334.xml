<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19334.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">vmdvideo_decode_init</name><parameter_list pos:start="1:32" pos:end="1:54">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">VmdVideoContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:27">palette32</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">palette_index</name> <init pos:start="11:23" pos:end="11:25">= <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:19">r</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="13:22" pos:end="13:22">g</name></decl>, <decl pos:start="13:25" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="13:25" pos:end="13:25">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:29">vmd_header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:30">raw_palette</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">avctx</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:9">avctx</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">pix_fmt</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:33">PIX_FMT_PAL8</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:16">dsputil_init</name><argument_list pos:start="25:17" pos:end="25:32">(<argument pos:start="25:18" pos:end="25:24"><expr pos:start="25:18" pos:end="25:24"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:24"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:24">dsp</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:31"><expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:42">/* make sure the VMD header made it */</comment>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:52">(<expr pos:start="31:9" pos:end="31:51"><name pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:32">extradata_size</name></name> <operator pos:start="31:34" pos:end="31:35">!=</operator> <name pos:start="31:37" pos:end="31:51">VMD_HEADER_SIZE</name></expr>)</condition> <block pos:start="31:54" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:18">

        <expr_stmt pos:start="33:9" pos:end="35:29"><expr pos:start="33:9" pos:end="35:28"><call pos:start="33:9" pos:end="35:28"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:28">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:40" pos:end="33:83"><expr pos:start="33:40" pos:end="33:83"><literal type="string" pos:start="33:40" pos:end="33:83">"VMD video: expected extradata size of %d\n"</literal></expr></argument>,

            <argument pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:27">VMD_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:51"><expr pos:start="41:5" pos:end="41:50"><name pos:start="41:5" pos:end="41:14">vmd_header</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:26">unsigned</name> <name pos:start="41:28" pos:end="41:31">char</name> <operator pos:start="41:33" pos:end="41:33">*</operator><operator pos:start="41:34" pos:end="41:34">)</operator><name pos:start="41:35" pos:end="41:50"><name pos:start="41:35" pos:end="41:39">avctx</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:50">extradata</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:25">unpack_buffer_size</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:53"><name pos:start="45:29" pos:end="45:35">AV_RL32</name><argument_list pos:start="45:36" pos:end="45:53">(<argument pos:start="45:37" pos:end="45:52"><expr pos:start="45:37" pos:end="45:52"><operator pos:start="45:37" pos:end="45:37">&amp;</operator><name pos:start="45:38" pos:end="45:52"><name pos:start="45:38" pos:end="45:47">vmd_header</name><index pos:start="45:48" pos:end="45:52">[<expr pos:start="45:49" pos:end="45:51"><literal type="number" pos:start="45:49" pos:end="45:51">800</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:56"><expr pos:start="47:5" pos:end="47:55"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:20">unpack_buffer</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:55"><name pos:start="47:24" pos:end="47:32">av_malloc</name><argument_list pos:start="47:33" pos:end="47:55">(<argument pos:start="47:34" pos:end="47:54"><expr pos:start="47:34" pos:end="47:54"><name pos:start="47:34" pos:end="47:54"><name pos:start="47:34" pos:end="47:34">s</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:54">unpack_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:25"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:25">unpack_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:37">/* load up the initial palette */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:15">raw_palette</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <operator pos:start="57:19" pos:end="57:19">&amp;</operator><name pos:start="57:20" pos:end="57:33"><name pos:start="57:20" pos:end="57:29">vmd_header</name><index pos:start="57:30" pos:end="57:33">[<expr pos:start="57:31" pos:end="57:32"><literal type="number" pos:start="57:31" pos:end="57:32">28</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:13">palette32</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <operator pos:start="59:17" pos:end="59:17">(</operator><name pos:start="59:18" pos:end="59:25">unsigned</name> <name pos:start="59:27" pos:end="59:29">int</name> <operator pos:start="59:31" pos:end="59:31">*</operator><operator pos:start="59:32" pos:end="59:32">)</operator><name pos:start="59:33" pos:end="59:42"><name pos:start="59:33" pos:end="59:33">s</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:42">palette</name></name></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="71:5">for <control pos:start="61:9" pos:end="61:39">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:34"><expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:33">PALETTE_COUNT</name></expr>;</condition> <incr pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:36">i</name><operator pos:start="61:37" pos:end="61:38">++</operator></expr></incr>)</control> <block pos:start="61:41" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:50">

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:9">r</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:23">raw_palette</name><index pos:start="63:24" pos:end="63:40">[<expr pos:start="63:25" pos:end="63:39"><name pos:start="63:25" pos:end="63:37">palette_index</name><operator pos:start="63:38" pos:end="63:39">++</operator></expr>]</index></name> <operator pos:start="63:42" pos:end="63:42">*</operator> <literal type="number" pos:start="63:44" pos:end="63:44">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:9">g</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:23">raw_palette</name><index pos:start="65:24" pos:end="65:40">[<expr pos:start="65:25" pos:end="65:39"><name pos:start="65:25" pos:end="65:37">palette_index</name><operator pos:start="65:38" pos:end="65:39">++</operator></expr>]</index></name> <operator pos:start="65:42" pos:end="65:42">*</operator> <literal type="number" pos:start="65:44" pos:end="65:44">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:9">b</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <name pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:23">raw_palette</name><index pos:start="67:24" pos:end="67:40">[<expr pos:start="67:25" pos:end="67:39"><name pos:start="67:25" pos:end="67:37">palette_index</name><operator pos:start="67:38" pos:end="67:39">++</operator></expr>]</index></name> <operator pos:start="67:42" pos:end="67:42">*</operator> <literal type="number" pos:start="67:44" pos:end="67:44">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:50"><expr pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:17">palette32</name><index pos:start="69:18" pos:end="69:20">[<expr pos:start="69:19" pos:end="69:19"><name pos:start="69:19" pos:end="69:19">i</name></expr>]</index></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <operator pos:start="69:24" pos:end="69:24">(</operator><name pos:start="69:25" pos:end="69:25">r</name> <operator pos:start="69:27" pos:end="69:28">&lt;&lt;</operator> <literal type="number" pos:start="69:30" pos:end="69:31">16</literal><operator pos:start="69:32" pos:end="69:32">)</operator> <operator pos:start="69:34" pos:end="69:34">|</operator> <operator pos:start="69:36" pos:end="69:36">(</operator><name pos:start="69:37" pos:end="69:37">g</name> <operator pos:start="69:39" pos:end="69:40">&lt;&lt;</operator> <literal type="number" pos:start="69:42" pos:end="69:42">8</literal><operator pos:start="69:43" pos:end="69:43">)</operator> <operator pos:start="69:45" pos:end="69:45">|</operator> <operator pos:start="69:47" pos:end="69:47">(</operator><name pos:start="69:48" pos:end="69:48">b</name><operator pos:start="69:49" pos:end="69:49">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="75:5" pos:end="75:52"><expr pos:start="75:5" pos:end="75:51"><name pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:12">frame</name><operator pos:start="75:13" pos:end="75:13">.</operator><name pos:start="75:14" pos:end="75:17">data</name><index pos:start="75:18" pos:end="75:20">[<expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>]</index></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:44"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:36">prev_frame</name><operator pos:start="75:37" pos:end="75:37">.</operator><name pos:start="75:38" pos:end="75:41">data</name><index pos:start="75:42" pos:end="75:44">[<expr pos:start="75:43" pos:end="75:43"><literal type="number" pos:start="75:43" pos:end="75:43">0</literal></expr>]</index></name> <operator pos:start="75:46" pos:end="75:46">=</operator> <name pos:start="75:48" pos:end="75:51">NULL</name></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
