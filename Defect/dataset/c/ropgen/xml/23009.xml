<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23009.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">virtqueue_get_avail_bytes</name><parameter_list pos:start="1:31" pos:end="5:77">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:40">VirtQueue</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">vq</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:54">unsigned</name> <name pos:start="1:56" pos:end="1:58">int</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">in_bytes</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:54"><decl pos:start="3:32" pos:end="3:54"><type pos:start="3:32" pos:end="3:54"><name pos:start="3:32" pos:end="3:39">unsigned</name> <name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">out_bytes</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:52"><decl pos:start="5:32" pos:end="5:52"><type pos:start="5:32" pos:end="5:52"><name pos:start="5:32" pos:end="5:39">unsigned</name></type> <name pos:start="5:41" pos:end="5:52">max_in_bytes</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:76"><decl pos:start="5:55" pos:end="5:76"><type pos:start="5:55" pos:end="5:76"><name pos:start="5:55" pos:end="5:62">unsigned</name></type> <name pos:start="5:64" pos:end="5:76">max_out_bytes</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="137:1">{<block_content pos:start="9:5" pos:end="135:5">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:20">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">total_bufs</name></decl>, <decl pos:start="11:30" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:30" pos:end="11:37">in_total</name></decl>, <decl pos:start="11:40" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:40" pos:end="11:48">out_total</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:7">idx</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:28"><name pos:start="15:11" pos:end="15:12">vq</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:28">last_avail_idx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:14">total_bufs</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:25">in_total</name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:37">out_total</name> <operator pos:start="19:39" pos:end="19:39">=</operator> <literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="121:5">while <condition pos:start="21:11" pos:end="21:40">(<expr pos:start="21:12" pos:end="21:39"><call pos:start="21:12" pos:end="21:39"><name pos:start="21:12" pos:end="21:30">virtqueue_num_heads</name><argument_list pos:start="21:31" pos:end="21:39">(<argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><name pos:start="21:32" pos:end="21:33">vq</name></expr></argument>, <argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">idx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:42" pos:end="121:5">{<block_content pos:start="23:9" pos:end="119:25">

        <decl_stmt pos:start="23:9" pos:end="23:49"><decl pos:start="23:9" pos:end="23:24"><type pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">unsigned</name> <name pos:start="23:18" pos:end="23:20">int</name></type> <name pos:start="23:22" pos:end="23:24">max</name></decl>, <decl pos:start="23:27" pos:end="23:34"><type ref="prev" pos:start="23:9" pos:end="23:20"/><name pos:start="23:27" pos:end="23:34">num_bufs</name></decl>, <decl pos:start="23:37" pos:end="23:48"><type ref="prev" pos:start="23:9" pos:end="23:20"/><name pos:start="23:37" pos:end="23:44">indirect</name> <init pos:start="23:46" pos:end="23:48">= <expr pos:start="23:48" pos:end="23:48"><literal type="number" pos:start="23:48" pos:end="23:48">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:23"><decl pos:start="25:9" pos:end="25:22"><type pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:14">hwaddr</name></type> <name pos:start="25:16" pos:end="25:22">desc_pa</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:14"><decl pos:start="27:9" pos:end="27:13"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:11">max</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:27"><name pos:start="31:15" pos:end="31:16">vq</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">vring</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:27">num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:16">num_bufs</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:29">total_bufs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:30">virtqueue_get_head</name><argument_list pos:start="35:31" pos:end="35:41">(<argument pos:start="35:32" pos:end="35:33"><expr pos:start="35:32" pos:end="35:33"><name pos:start="35:32" pos:end="35:33">vq</name></expr></argument>, <argument pos:start="35:36" pos:end="35:40"><expr pos:start="35:36" pos:end="35:40"><name pos:start="35:36" pos:end="35:38">idx</name><operator pos:start="35:39" pos:end="35:40">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:15">desc_pa</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:32"><name pos:start="37:19" pos:end="37:20">vq</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">vring</name><operator pos:start="37:28" pos:end="37:28">.</operator><name pos:start="37:29" pos:end="37:32">desc</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="75:9"><if pos:start="41:9" pos:end="75:9">if <condition pos:start="41:12" pos:end="41:65">(<expr pos:start="41:13" pos:end="41:64"><call pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:28">vring_desc_flags</name><argument_list pos:start="41:29" pos:end="41:40">(<argument pos:start="41:30" pos:end="41:36"><expr pos:start="41:30" pos:end="41:36"><name pos:start="41:30" pos:end="41:36">desc_pa</name></expr></argument>, <argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><name pos:start="41:39" pos:end="41:39">i</name></expr></argument>)</argument_list></call> <operator pos:start="41:42" pos:end="41:42">&amp;</operator> <name pos:start="41:44" pos:end="41:64">VRING_DESC_F_INDIRECT</name></expr>)</condition> <block pos:start="41:67" pos:end="75:9">{<block_content pos:start="43:13" pos:end="73:50">

            <if_stmt pos:start="43:13" pos:end="49:13"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:63">(<expr pos:start="43:17" pos:end="43:62"><call pos:start="43:17" pos:end="43:42"><name pos:start="43:17" pos:end="43:30">vring_desc_len</name><argument_list pos:start="43:31" pos:end="43:42">(<argument pos:start="43:32" pos:end="43:38"><expr pos:start="43:32" pos:end="43:38"><name pos:start="43:32" pos:end="43:38">desc_pa</name></expr></argument>, <argument pos:start="43:41" pos:end="43:41"><expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">i</name></expr></argument>)</argument_list></call> <operator pos:start="43:44" pos:end="43:44">%</operator> <sizeof pos:start="43:46" pos:end="43:62">sizeof<argument_list pos:start="43:52" pos:end="43:62">(<argument pos:start="43:53" pos:end="43:61"><expr pos:start="43:53" pos:end="43:61"><name pos:start="43:53" pos:end="43:61">VRingDesc</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="43:65" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:24">

                <expr_stmt pos:start="45:17" pos:end="45:71"><expr pos:start="45:17" pos:end="45:70"><call pos:start="45:17" pos:end="45:70"><name pos:start="45:17" pos:end="45:28">error_report</name><argument_list pos:start="45:29" pos:end="45:70">(<argument pos:start="45:30" pos:end="45:69"><expr pos:start="45:30" pos:end="45:69"><literal type="string" pos:start="45:30" pos:end="45:69">"Invalid size for indirect buffer table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:24"><expr pos:start="47:17" pos:end="47:23"><call pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:20">exit</name><argument_list pos:start="47:21" pos:end="47:23">(<argument pos:start="47:22" pos:end="47:22"><expr pos:start="47:22" pos:end="47:22"><literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="53:13" pos:end="53:72">/* If we've got too many, that implies a descriptor loop. */</comment>

            <if_stmt pos:start="55:13" pos:end="61:13"><if pos:start="55:13" pos:end="61:13">if <condition pos:start="55:16" pos:end="55:32">(<expr pos:start="55:17" pos:end="55:31"><name pos:start="55:17" pos:end="55:24">num_bufs</name> <operator pos:start="55:26" pos:end="55:27">&gt;=</operator> <name pos:start="55:29" pos:end="55:31">max</name></expr>)</condition> <block pos:start="55:34" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:24">

                <expr_stmt pos:start="57:17" pos:end="57:50"><expr pos:start="57:17" pos:end="57:49"><call pos:start="57:17" pos:end="57:49"><name pos:start="57:17" pos:end="57:28">error_report</name><argument_list pos:start="57:29" pos:end="57:49">(<argument pos:start="57:30" pos:end="57:48"><expr pos:start="57:30" pos:end="57:48"><literal type="string" pos:start="57:30" pos:end="57:48">"Looped descriptor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:24"><expr pos:start="59:17" pos:end="59:23"><call pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:20">exit</name><argument_list pos:start="59:21" pos:end="59:23">(<argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="65:13" pos:end="65:57">/* loop over the indirect descriptor table */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:20">indirect</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <literal type="number" pos:start="67:24" pos:end="67:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:65"><expr pos:start="69:13" pos:end="69:64"><name pos:start="69:13" pos:end="69:15">max</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:44"><name pos:start="69:19" pos:end="69:32">vring_desc_len</name><argument_list pos:start="69:33" pos:end="69:44">(<argument pos:start="69:34" pos:end="69:40"><expr pos:start="69:34" pos:end="69:40"><name pos:start="69:34" pos:end="69:40">desc_pa</name></expr></argument>, <argument pos:start="69:43" pos:end="69:43"><expr pos:start="69:43" pos:end="69:43"><name pos:start="69:43" pos:end="69:43">i</name></expr></argument>)</argument_list></call> <operator pos:start="69:46" pos:end="69:46">/</operator> <sizeof pos:start="69:48" pos:end="69:64">sizeof<argument_list pos:start="69:54" pos:end="69:64">(<argument pos:start="69:55" pos:end="69:63"><expr pos:start="69:55" pos:end="69:63"><name pos:start="69:55" pos:end="69:63">VRingDesc</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:20">num_bufs</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:24">i</name> <operator pos:start="71:26" pos:end="71:26">=</operator> <literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:50"><expr pos:start="73:13" pos:end="73:49"><name pos:start="73:13" pos:end="73:19">desc_pa</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:49"><name pos:start="73:23" pos:end="73:37">vring_desc_addr</name><argument_list pos:start="73:38" pos:end="73:49">(<argument pos:start="73:39" pos:end="73:45"><expr pos:start="73:39" pos:end="73:45"><name pos:start="73:39" pos:end="73:45">desc_pa</name></expr></argument>, <argument pos:start="73:48" pos:end="73:48"><expr pos:start="73:48" pos:end="73:48"><name pos:start="73:48" pos:end="73:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <do pos:start="79:9" pos:end="109:68">do <block pos:start="79:12" pos:end="109:9">{<block_content pos:start="83:13" pos:end="107:13">

            <comment type="block" pos:start="81:13" pos:end="81:72">/* If we've got too many, that implies a descriptor loop. */</comment>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:33">(<expr pos:start="83:17" pos:end="83:32"><operator pos:start="83:17" pos:end="83:18">++</operator><name pos:start="83:19" pos:end="83:26">num_bufs</name> <operator pos:start="83:28" pos:end="83:28">&gt;</operator> <name pos:start="83:30" pos:end="83:32">max</name></expr>)</condition> <block pos:start="83:35" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:24">

                <expr_stmt pos:start="85:17" pos:end="85:50"><expr pos:start="85:17" pos:end="85:49"><call pos:start="85:17" pos:end="85:49"><name pos:start="85:17" pos:end="85:28">error_report</name><argument_list pos:start="85:29" pos:end="85:49">(<argument pos:start="85:30" pos:end="85:48"><expr pos:start="85:30" pos:end="85:48"><literal type="string" pos:start="85:30" pos:end="85:48">"Looped descriptor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:24"><expr pos:start="87:17" pos:end="87:23"><call pos:start="87:17" pos:end="87:23"><name pos:start="87:17" pos:end="87:20">exit</name><argument_list pos:start="87:21" pos:end="87:23">(<argument pos:start="87:22" pos:end="87:22"><expr pos:start="87:22" pos:end="87:22"><literal type="number" pos:start="87:22" pos:end="87:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="93:13" pos:end="101:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:66">(<expr pos:start="93:17" pos:end="93:65"><call pos:start="93:17" pos:end="93:44"><name pos:start="93:17" pos:end="93:32">vring_desc_flags</name><argument_list pos:start="93:33" pos:end="93:44">(<argument pos:start="93:34" pos:end="93:40"><expr pos:start="93:34" pos:end="93:40"><name pos:start="93:34" pos:end="93:40">desc_pa</name></expr></argument>, <argument pos:start="93:43" pos:end="93:43"><expr pos:start="93:43" pos:end="93:43"><name pos:start="93:43" pos:end="93:43">i</name></expr></argument>)</argument_list></call> <operator pos:start="93:46" pos:end="93:46">&amp;</operator> <name pos:start="93:48" pos:end="93:65">VRING_DESC_F_WRITE</name></expr>)</condition> <block pos:start="93:68" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:55">

                <expr_stmt pos:start="95:17" pos:end="95:55"><expr pos:start="95:17" pos:end="95:54"><name pos:start="95:17" pos:end="95:24">in_total</name> <operator pos:start="95:26" pos:end="95:27">+=</operator> <call pos:start="95:29" pos:end="95:54"><name pos:start="95:29" pos:end="95:42">vring_desc_len</name><argument_list pos:start="95:43" pos:end="95:54">(<argument pos:start="95:44" pos:end="95:50"><expr pos:start="95:44" pos:end="95:50"><name pos:start="95:44" pos:end="95:50">desc_pa</name></expr></argument>, <argument pos:start="95:53" pos:end="95:53"><expr pos:start="95:53" pos:end="95:53"><name pos:start="95:53" pos:end="95:53">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="97:15" pos:end="101:13">else <block pos:start="97:20" pos:end="101:13">{<block_content pos:start="99:17" pos:end="99:56">

                <expr_stmt pos:start="99:17" pos:end="99:56"><expr pos:start="99:17" pos:end="99:55"><name pos:start="99:17" pos:end="99:25">out_total</name> <operator pos:start="99:27" pos:end="99:28">+=</operator> <call pos:start="99:30" pos:end="99:55"><name pos:start="99:30" pos:end="99:43">vring_desc_len</name><argument_list pos:start="99:44" pos:end="99:55">(<argument pos:start="99:45" pos:end="99:51"><expr pos:start="99:45" pos:end="99:51"><name pos:start="99:45" pos:end="99:51">desc_pa</name></expr></argument>, <argument pos:start="99:54" pos:end="99:54"><expr pos:start="99:54" pos:end="99:54"><name pos:start="99:54" pos:end="99:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="103:13" pos:end="107:13"><if pos:start="103:13" pos:end="107:13">if <condition pos:start="103:16" pos:end="103:71">(<expr pos:start="103:17" pos:end="103:70"><name pos:start="103:17" pos:end="103:24">in_total</name> <operator pos:start="103:26" pos:end="103:27">&gt;=</operator> <name pos:start="103:29" pos:end="103:40">max_in_bytes</name> <operator pos:start="103:42" pos:end="103:43">&amp;&amp;</operator> <name pos:start="103:45" pos:end="103:53">out_total</name> <operator pos:start="103:55" pos:end="103:56">&gt;=</operator> <name pos:start="103:58" pos:end="103:70">max_out_bytes</name></expr>)</condition> <block pos:start="103:73" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:26">

                <goto pos:start="105:17" pos:end="105:26">goto <name pos:start="105:22" pos:end="105:25">done</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block> while <condition pos:start="109:17" pos:end="109:67">(<expr pos:start="109:18" pos:end="109:66"><operator pos:start="109:18" pos:end="109:18">(</operator><name pos:start="109:19" pos:end="109:19">i</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <call pos:start="109:23" pos:end="109:58"><name pos:start="109:23" pos:end="109:41">virtqueue_next_desc</name><argument_list pos:start="109:42" pos:end="109:58">(<argument pos:start="109:43" pos:end="109:49"><expr pos:start="109:43" pos:end="109:49"><name pos:start="109:43" pos:end="109:49">desc_pa</name></expr></argument>, <argument pos:start="109:52" pos:end="109:52"><expr pos:start="109:52" pos:end="109:52"><name pos:start="109:52" pos:end="109:52">i</name></expr></argument>, <argument pos:start="109:55" pos:end="109:57"><expr pos:start="109:55" pos:end="109:57"><name pos:start="109:55" pos:end="109:57">max</name></expr></argument>)</argument_list></call><operator pos:start="109:59" pos:end="109:59">)</operator> <operator pos:start="109:61" pos:end="109:62">!=</operator> <name pos:start="109:64" pos:end="109:66">max</name></expr>)</condition>;</do>



        <if_stmt pos:start="113:9" pos:end="119:25"><if pos:start="113:9" pos:end="115:34">if <condition pos:start="113:12" pos:end="113:22">(<expr pos:start="113:13" pos:end="113:21"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:21">indirect</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:34"><block_content pos:start="115:13" pos:end="115:34">

            <expr_stmt pos:start="115:13" pos:end="115:34"><expr pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:22">total_bufs</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <name pos:start="115:26" pos:end="115:33">num_bufs</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="117:9" pos:end="119:25">else<block type="pseudo" pos:start="119:13" pos:end="119:25"><block_content pos:start="119:13" pos:end="119:25">

            <expr_stmt pos:start="119:13" pos:end="119:25"><expr pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:22">total_bufs</name><operator pos:start="119:23" pos:end="119:24">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></while>

<label pos:start="123:1" pos:end="123:5"><name pos:start="123:1" pos:end="123:4">done</name>:</label>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:17">(<expr pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:16">in_bytes</name></expr>)</condition> <block pos:start="125:19" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:29">

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><operator pos:start="127:9" pos:end="127:9">*</operator><name pos:start="127:10" pos:end="127:17">in_bytes</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:28">in_total</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:18">(<expr pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:17">out_bytes</name></expr>)</condition> <block pos:start="131:20" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:31">

        <expr_stmt pos:start="133:9" pos:end="133:31"><expr pos:start="133:9" pos:end="133:30"><operator pos:start="133:9" pos:end="133:9">*</operator><name pos:start="133:10" pos:end="133:18">out_bytes</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <name pos:start="133:22" pos:end="133:30">out_total</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
