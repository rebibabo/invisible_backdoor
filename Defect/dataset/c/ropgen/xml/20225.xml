<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20225.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">PCIBus</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:21">pci_prep_init</name><parameter_list pos:start="1:22" pos:end="1:36">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:32"><name pos:start="1:23" pos:end="1:30">qemu_irq</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">pic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:18">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">PREPPCIState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">PPC_io_memory</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:20">qemu_mallocz</name><argument_list pos:start="13:21" pos:end="13:42">(<argument pos:start="13:22" pos:end="13:41"><expr pos:start="13:22" pos:end="13:41"><sizeof pos:start="13:22" pos:end="13:41">sizeof<argument_list pos:start="13:28" pos:end="13:41">(<argument pos:start="13:29" pos:end="13:40"><expr pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:40">PREPPCIState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:69"><expr pos:start="15:5" pos:end="17:68"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">bus</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="17:68"><name pos:start="15:14" pos:end="15:29">pci_register_bus</name><argument_list pos:start="15:30" pos:end="17:68">(<argument pos:start="15:31" pos:end="15:34"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">NULL</name></expr></argument>, <argument pos:start="15:37" pos:end="15:41"><expr pos:start="15:37" pos:end="15:41"><literal type="string" pos:start="15:37" pos:end="15:41">"pci"</literal></expr></argument>,

                              <argument pos:start="17:31" pos:end="17:42"><expr pos:start="17:31" pos:end="17:42"><name pos:start="17:31" pos:end="17:42">prep_set_irq</name></expr></argument>, <argument pos:start="17:45" pos:end="17:56"><expr pos:start="17:45" pos:end="17:56"><name pos:start="17:45" pos:end="17:56">prep_map_irq</name></expr></argument>, <argument pos:start="17:59" pos:end="17:61"><expr pos:start="17:59" pos:end="17:61"><name pos:start="17:59" pos:end="17:61">pic</name></expr></argument>, <argument pos:start="17:64" pos:end="17:64"><expr pos:start="17:64" pos:end="17:64"><literal type="number" pos:start="17:64" pos:end="17:64">0</literal></expr></argument>, <argument pos:start="17:67" pos:end="17:67"><expr pos:start="17:67" pos:end="17:67"><literal type="number" pos:start="17:67" pos:end="17:67">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:64"><expr pos:start="21:5" pos:end="21:63"><call pos:start="21:5" pos:end="21:63"><name pos:start="21:5" pos:end="21:25">register_ioport_write</name><argument_list pos:start="21:26" pos:end="21:63">(<argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><literal type="number" pos:start="21:27" pos:end="21:31">0xcf8</literal></expr></argument>, <argument pos:start="21:34" pos:end="21:34"><expr pos:start="21:34" pos:end="21:34"><literal type="number" pos:start="21:34" pos:end="21:34">4</literal></expr></argument>, <argument pos:start="21:37" pos:end="21:37"><expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">4</literal></expr></argument>, <argument pos:start="21:40" pos:end="21:59"><expr pos:start="21:40" pos:end="21:59"><name pos:start="21:40" pos:end="21:59">pci_prep_addr_writel</name></expr></argument>, <argument pos:start="21:62" pos:end="21:62"><expr pos:start="21:62" pos:end="21:62"><name pos:start="21:62" pos:end="21:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><call pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:24">register_ioport_read</name><argument_list pos:start="23:25" pos:end="23:61">(<argument pos:start="23:26" pos:end="23:30"><expr pos:start="23:26" pos:end="23:30"><literal type="number" pos:start="23:26" pos:end="23:30">0xcf8</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">4</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">4</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:57"><expr pos:start="23:39" pos:end="23:57"><name pos:start="23:39" pos:end="23:57">pci_prep_addr_readl</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><name pos:start="23:60" pos:end="23:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:64"><expr pos:start="27:5" pos:end="27:63"><call pos:start="27:5" pos:end="27:63"><name pos:start="27:5" pos:end="27:25">register_ioport_write</name><argument_list pos:start="27:26" pos:end="27:63">(<argument pos:start="27:27" pos:end="27:31"><expr pos:start="27:27" pos:end="27:31"><literal type="number" pos:start="27:27" pos:end="27:31">0xcfc</literal></expr></argument>, <argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">4</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:59"><expr pos:start="27:40" pos:end="27:59"><name pos:start="27:40" pos:end="27:59">pci_host_data_writeb</name></expr></argument>, <argument pos:start="27:62" pos:end="27:62"><expr pos:start="27:62" pos:end="27:62"><name pos:start="27:62" pos:end="27:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:64"><expr pos:start="29:5" pos:end="29:63"><call pos:start="29:5" pos:end="29:63"><name pos:start="29:5" pos:end="29:25">register_ioport_write</name><argument_list pos:start="29:26" pos:end="29:63">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><literal type="number" pos:start="29:27" pos:end="29:31">0xcfc</literal></expr></argument>, <argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">4</literal></expr></argument>, <argument pos:start="29:37" pos:end="29:37"><expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">2</literal></expr></argument>, <argument pos:start="29:40" pos:end="29:59"><expr pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:59">pci_host_data_writew</name></expr></argument>, <argument pos:start="29:62" pos:end="29:62"><expr pos:start="29:62" pos:end="29:62"><name pos:start="29:62" pos:end="29:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:64"><expr pos:start="31:5" pos:end="31:63"><call pos:start="31:5" pos:end="31:63"><name pos:start="31:5" pos:end="31:25">register_ioport_write</name><argument_list pos:start="31:26" pos:end="31:63">(<argument pos:start="31:27" pos:end="31:31"><expr pos:start="31:27" pos:end="31:31"><literal type="number" pos:start="31:27" pos:end="31:31">0xcfc</literal></expr></argument>, <argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">4</literal></expr></argument>, <argument pos:start="31:37" pos:end="31:37"><expr pos:start="31:37" pos:end="31:37"><literal type="number" pos:start="31:37" pos:end="31:37">4</literal></expr></argument>, <argument pos:start="31:40" pos:end="31:59"><expr pos:start="31:40" pos:end="31:59"><name pos:start="31:40" pos:end="31:59">pci_host_data_writel</name></expr></argument>, <argument pos:start="31:62" pos:end="31:62"><expr pos:start="31:62" pos:end="31:62"><name pos:start="31:62" pos:end="31:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><call pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:24">register_ioport_read</name><argument_list pos:start="33:25" pos:end="33:61">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><literal type="number" pos:start="33:26" pos:end="33:30">0xcfc</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">4</literal></expr></argument>, <argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">1</literal></expr></argument>, <argument pos:start="33:39" pos:end="33:57"><expr pos:start="33:39" pos:end="33:57"><name pos:start="33:39" pos:end="33:57">pci_host_data_readb</name></expr></argument>, <argument pos:start="33:60" pos:end="33:60"><expr pos:start="33:60" pos:end="33:60"><name pos:start="33:60" pos:end="33:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><call pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:24">register_ioport_read</name><argument_list pos:start="35:25" pos:end="35:61">(<argument pos:start="35:26" pos:end="35:30"><expr pos:start="35:26" pos:end="35:30"><literal type="number" pos:start="35:26" pos:end="35:30">0xcfc</literal></expr></argument>, <argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">4</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">2</literal></expr></argument>, <argument pos:start="35:39" pos:end="35:57"><expr pos:start="35:39" pos:end="35:57"><name pos:start="35:39" pos:end="35:57">pci_host_data_readw</name></expr></argument>, <argument pos:start="35:60" pos:end="35:60"><expr pos:start="35:60" pos:end="35:60"><name pos:start="35:60" pos:end="35:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:62"><expr pos:start="37:5" pos:end="37:61"><call pos:start="37:5" pos:end="37:61"><name pos:start="37:5" pos:end="37:24">register_ioport_read</name><argument_list pos:start="37:25" pos:end="37:61">(<argument pos:start="37:26" pos:end="37:30"><expr pos:start="37:26" pos:end="37:30"><literal type="number" pos:start="37:26" pos:end="37:30">0xcfc</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">4</literal></expr></argument>, <argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">4</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:57"><expr pos:start="37:39" pos:end="37:57"><name pos:start="37:39" pos:end="37:57">pci_host_data_readl</name></expr></argument>, <argument pos:start="37:60" pos:end="37:60"><expr pos:start="37:60" pos:end="37:60"><name pos:start="37:60" pos:end="37:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:63"><expr pos:start="41:5" pos:end="43:62"><name pos:start="41:5" pos:end="41:17">PPC_io_memory</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="43:62"><name pos:start="41:21" pos:end="41:42">cpu_register_io_memory</name><argument_list pos:start="41:43" pos:end="43:62">(<argument pos:start="41:44" pos:end="41:57"><expr pos:start="41:44" pos:end="41:57"><name pos:start="41:44" pos:end="41:57">PPC_PCIIO_read</name></expr></argument>,

                                           <argument pos:start="43:44" pos:end="43:58"><expr pos:start="43:44" pos:end="43:58"><name pos:start="43:44" pos:end="43:58">PPC_PCIIO_write</name></expr></argument>, <argument pos:start="43:61" pos:end="43:61"><expr pos:start="43:61" pos:end="43:61"><name pos:start="43:61" pos:end="43:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:72"><expr pos:start="45:5" pos:end="45:71"><call pos:start="45:5" pos:end="45:71"><name pos:start="45:5" pos:end="45:32">cpu_register_physical_memory</name><argument_list pos:start="45:33" pos:end="45:71">(<argument pos:start="45:34" pos:end="45:43"><expr pos:start="45:34" pos:end="45:43"><literal type="number" pos:start="45:34" pos:end="45:43">0x80800000</literal></expr></argument>, <argument pos:start="45:46" pos:end="45:55"><expr pos:start="45:46" pos:end="45:55"><literal type="number" pos:start="45:46" pos:end="45:55">0x00400000</literal></expr></argument>, <argument pos:start="45:58" pos:end="45:70"><expr pos:start="45:58" pos:end="45:70"><name pos:start="45:58" pos:end="45:70">PPC_io_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:25">/* PCI host bridge */</comment>

    <expr_stmt pos:start="51:5" pos:end="53:62"><expr pos:start="51:5" pos:end="53:61"><name pos:start="51:5" pos:end="51:5">d</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <call pos:start="51:9" pos:end="53:61"><name pos:start="51:9" pos:end="51:27">pci_register_device</name><argument_list pos:start="51:28" pos:end="53:61">(<argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:34">bus</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:71"><expr pos:start="51:37" pos:end="51:71"><literal type="string" pos:start="51:37" pos:end="51:71">"PREP Host Bridge - Motorola Raven"</literal></expr></argument>,

                            <argument pos:start="53:29" pos:end="53:45"><expr pos:start="53:29" pos:end="53:45"><sizeof pos:start="53:29" pos:end="53:45">sizeof<argument_list pos:start="53:35" pos:end="53:45">(<argument pos:start="53:36" pos:end="53:44"><expr pos:start="53:36" pos:end="53:44"><name pos:start="53:36" pos:end="53:44">PCIDevice</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="53:48" pos:end="53:48"><expr pos:start="53:48" pos:end="53:48"><literal type="number" pos:start="53:48" pos:end="53:48">0</literal></expr></argument>, <argument pos:start="53:51" pos:end="53:54"><expr pos:start="53:51" pos:end="53:54"><name pos:start="53:51" pos:end="53:54">NULL</name></expr></argument>, <argument pos:start="53:57" pos:end="53:60"><expr pos:start="53:57" pos:end="53:60"><name pos:start="53:57" pos:end="53:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:64"><expr pos:start="55:5" pos:end="55:63"><call pos:start="55:5" pos:end="55:63"><name pos:start="55:5" pos:end="55:28">pci_config_set_vendor_id</name><argument_list pos:start="55:29" pos:end="55:63">(<argument pos:start="55:30" pos:end="55:38"><expr pos:start="55:30" pos:end="55:38"><name pos:start="55:30" pos:end="55:38"><name pos:start="55:30" pos:end="55:30">d</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:38">config</name></name></expr></argument>, <argument pos:start="55:41" pos:end="55:62"><expr pos:start="55:41" pos:end="55:62"><name pos:start="55:41" pos:end="55:62">PCI_VENDOR_ID_MOTOROLA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:70"><expr pos:start="57:5" pos:end="57:69"><call pos:start="57:5" pos:end="57:69"><name pos:start="57:5" pos:end="57:28">pci_config_set_device_id</name><argument_list pos:start="57:29" pos:end="57:69">(<argument pos:start="57:30" pos:end="57:38"><expr pos:start="57:30" pos:end="57:38"><name pos:start="57:30" pos:end="57:38"><name pos:start="57:30" pos:end="57:30">d</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:38">config</name></name></expr></argument>, <argument pos:start="57:41" pos:end="57:68"><expr pos:start="57:41" pos:end="57:68"><name pos:start="57:41" pos:end="57:68">PCI_DEVICE_ID_MOTOROLA_RAVEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:5">d</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:13">config</name><index pos:start="59:14" pos:end="59:19">[<expr pos:start="59:15" pos:end="59:18"><literal type="number" pos:start="59:15" pos:end="59:18">0x08</literal></expr>]</index></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <literal type="number" pos:start="59:23" pos:end="59:26">0x00</literal></expr>;</expr_stmt> <comment type="line" pos:start="59:29" pos:end="59:39">// revision</comment>

    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><call pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:24">pci_config_set_class</name><argument_list pos:start="61:25" pos:end="61:58">(<argument pos:start="61:26" pos:end="61:34"><expr pos:start="61:26" pos:end="61:34"><name pos:start="61:26" pos:end="61:34"><name pos:start="61:26" pos:end="61:26">d</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:34">config</name></name></expr></argument>, <argument pos:start="61:37" pos:end="61:57"><expr pos:start="61:37" pos:end="61:57"><name pos:start="61:37" pos:end="61:57">PCI_CLASS_BRIDGE_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:5">d</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:13">config</name><index pos:start="63:14" pos:end="63:19">[<expr pos:start="63:15" pos:end="63:18"><literal type="number" pos:start="63:15" pos:end="63:18">0x0C</literal></expr>]</index></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <literal type="number" pos:start="63:23" pos:end="63:26">0x08</literal></expr>;</expr_stmt> <comment type="line" pos:start="63:29" pos:end="63:46">// cache_line_size</comment>

    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:5">d</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:13">config</name><index pos:start="65:14" pos:end="65:19">[<expr pos:start="65:15" pos:end="65:18"><literal type="number" pos:start="65:15" pos:end="65:18">0x0D</literal></expr>]</index></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:26">0x10</literal></expr>;</expr_stmt> <comment type="line" pos:start="65:29" pos:end="65:44">// latency_timer</comment>

    <expr_stmt pos:start="67:5" pos:end="67:56"><expr pos:start="67:5" pos:end="67:55"><name pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:5">d</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:13">config</name><index pos:start="67:14" pos:end="67:30">[<expr pos:start="67:15" pos:end="67:29"><name pos:start="67:15" pos:end="67:29">PCI_HEADER_TYPE</name></expr>]</index></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <name pos:start="67:34" pos:end="67:55">PCI_HEADER_TYPE_NORMAL</name></expr>;</expr_stmt> <comment type="line" pos:start="67:58" pos:end="67:71">// header_type</comment>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:5">d</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:13">config</name><index pos:start="69:14" pos:end="69:19">[<expr pos:start="69:15" pos:end="69:18"><literal type="number" pos:start="69:15" pos:end="69:18">0x34</literal></expr>]</index></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <literal type="number" pos:start="69:23" pos:end="69:26">0x00</literal></expr>;</expr_stmt> <comment type="line" pos:start="69:29" pos:end="69:51">// capabilities_pointer</comment>



    <return pos:start="73:5" pos:end="73:18">return <expr pos:start="73:12" pos:end="73:17"><name pos:start="73:12" pos:end="73:17"><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:17">bus</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
