<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25462.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">ram_save_cleanup</name><parameter_list pos:start="1:29" pos:end="1:42">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:35"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:27">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:12">RAMState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier><modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">rsp</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">RAMBlock</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">block</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="15:7">/* caller have hold iothread lock or is in a bh, so there is

     * no writing race against this migration_bitmap

     */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:32">memory_global_dirty_log_stop</name><argument_list pos:start="17:33" pos:end="17:34">()</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:21">QLIST_FOREACH_RCU</name><argument_list pos:start="21:22" pos:end="21:52">(<argument pos:start="21:23" pos:end="21:27">block</argument>, <argument pos:start="21:30" pos:end="21:45">&amp;ram_list.blocks</argument>, <argument pos:start="21:48" pos:end="21:51">next</argument>)</argument_list></macro> <block pos:start="21:54" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:32">

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><call pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:14">g_free</name><argument_list pos:start="23:15" pos:end="23:27">(<argument pos:start="23:16" pos:end="23:26"><expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:20">block</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:26">bmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:13">block</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:19">bmap</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:26">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:14">g_free</name><argument_list pos:start="27:15" pos:end="27:32">(<argument pos:start="27:16" pos:end="27:31"><expr pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:20">block</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:31">unsentmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:13">block</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">unsentmap</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:31">NULL</name></expr>;</expr_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><call pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:21">XBZRLE_cache_lock</name><argument_list pos:start="35:22" pos:end="35:23">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="55:5"><if pos:start="37:5" pos:end="55:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:14">XBZRLE</name><operator pos:start="37:15" pos:end="37:15">.</operator><name pos:start="37:16" pos:end="37:20">cache</name></name></expr>)</condition> <block pos:start="37:23" pos:end="55:5">{<block_content pos:start="39:9" pos:end="53:39">

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:18">cache_fini</name><argument_list pos:start="39:19" pos:end="39:32">(<argument pos:start="39:20" pos:end="39:31"><expr pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:25">XBZRLE</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:31">cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><call pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:14">g_free</name><argument_list pos:start="41:15" pos:end="41:34">(<argument pos:start="41:16" pos:end="41:33"><expr pos:start="41:16" pos:end="41:33"><name pos:start="41:16" pos:end="41:33"><name pos:start="41:16" pos:end="41:21">XBZRLE</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:33">encoded_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:34">(<argument pos:start="43:16" pos:end="43:33"><expr pos:start="43:16" pos:end="43:33"><name pos:start="43:16" pos:end="43:33"><name pos:start="43:16" pos:end="43:21">XBZRLE</name><operator pos:start="43:22" pos:end="43:22">.</operator><name pos:start="43:23" pos:end="43:33">current_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><call pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:14">g_free</name><argument_list pos:start="45:15" pos:end="45:39">(<argument pos:start="45:16" pos:end="45:38"><expr pos:start="45:16" pos:end="45:38"><name pos:start="45:16" pos:end="45:38"><name pos:start="45:16" pos:end="45:21">XBZRLE</name><operator pos:start="45:22" pos:end="45:22">.</operator><name pos:start="45:23" pos:end="45:38">zero_target_page</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:14">XBZRLE</name><operator pos:start="47:15" pos:end="47:15">.</operator><name pos:start="47:16" pos:end="47:20">cache</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:14">XBZRLE</name><operator pos:start="49:15" pos:end="49:15">.</operator><name pos:start="49:16" pos:end="49:26">encoded_buf</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:33">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:14">XBZRLE</name><operator pos:start="51:15" pos:end="51:15">.</operator><name pos:start="51:16" pos:end="51:26">current_buf</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:33">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:14">XBZRLE</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:31">zero_target_page</name></name> <operator pos:start="53:33" pos:end="53:33">=</operator> <name pos:start="53:35" pos:end="53:38">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><call pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:23">XBZRLE_cache_unlock</name><argument_list pos:start="57:24" pos:end="57:25">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><call pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:33">compress_threads_save_cleanup</name><argument_list pos:start="59:34" pos:end="59:35">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><call pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:21">ram_state_cleanup</name><argument_list pos:start="61:22" pos:end="61:26">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">rsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
