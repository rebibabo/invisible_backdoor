<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8167.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">new_subtitle_stream</name><parameter_list pos:start="1:32" pos:end="1:52">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">oc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:29">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVCodec</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">codec</name><init pos:start="7:19" pos:end="7:23">=<expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:32">subtitle_enc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:96"><expr pos:start="13:5" pos:end="13:95"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:95"><name pos:start="13:10" pos:end="13:22">av_new_stream</name><argument_list pos:start="13:23" pos:end="13:95">(<argument pos:start="13:24" pos:end="13:25"><expr pos:start="13:24" pos:end="13:25"><name pos:start="13:24" pos:end="13:25">oc</name></expr></argument>, <argument pos:start="13:28" pos:end="13:94"><expr pos:start="13:28" pos:end="13:94"><ternary pos:start="13:28" pos:end="13:94"><condition pos:start="13:28" pos:end="13:61"><expr pos:start="13:28" pos:end="13:59"><name pos:start="13:28" pos:end="13:41"><name pos:start="13:28" pos:end="13:29">oc</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:41">nb_streams</name></name> <operator pos:start="13:43" pos:end="13:43">&lt;</operator> <name pos:start="13:45" pos:end="13:59">nb_streamid_map</name></expr> ?</condition><then pos:start="13:63" pos:end="13:90"> <expr pos:start="13:63" pos:end="13:90"><name pos:start="13:63" pos:end="13:90"><name pos:start="13:63" pos:end="13:74">streamid_map</name><index pos:start="13:75" pos:end="13:90">[<expr pos:start="13:76" pos:end="13:89"><name pos:start="13:76" pos:end="13:89"><name pos:start="13:76" pos:end="13:77">oc</name><operator pos:start="13:78" pos:end="13:79">-&gt;</operator><name pos:start="13:80" pos:end="13:89">nb_streams</name></name></expr>]</index></name></expr> </then><else pos:start="13:92" pos:end="13:94">: <expr pos:start="13:94" pos:end="13:94"><literal type="number" pos:start="13:94" pos:end="13:94">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">st</name></expr>)</condition> <block pos:start="15:14" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:23">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><call pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:51">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:50"><expr pos:start="17:25" pos:end="17:50"><literal type="string" pos:start="17:25" pos:end="17:50">"Could not alloc stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:23"><expr pos:start="19:9" pos:end="19:22"><call pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:19">ffmpeg_exit</name><argument_list pos:start="19:20" pos:end="19:22">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:16">subtitle_enc</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:21">st</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:28">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:111"><expr pos:start="25:5" pos:end="25:110"><name pos:start="25:5" pos:end="25:17">output_codecs</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:110"><name pos:start="25:21" pos:end="25:30">grow_array</name><argument_list pos:start="25:31" pos:end="25:110">(<argument pos:start="25:32" pos:end="25:44"><expr pos:start="25:32" pos:end="25:44"><name pos:start="25:32" pos:end="25:44">output_codecs</name></expr></argument>, <argument pos:start="25:47" pos:end="25:68"><expr pos:start="25:47" pos:end="25:68"><sizeof pos:start="25:47" pos:end="25:68">sizeof<argument_list pos:start="25:53" pos:end="25:68">(<argument pos:start="25:54" pos:end="25:67"><expr pos:start="25:54" pos:end="25:67"><operator pos:start="25:54" pos:end="25:54">*</operator><name pos:start="25:55" pos:end="25:67">output_codecs</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:71" pos:end="25:87"><expr pos:start="25:71" pos:end="25:87"><operator pos:start="25:71" pos:end="25:71">&amp;</operator><name pos:start="25:72" pos:end="25:87">nb_output_codecs</name></expr></argument>, <argument pos:start="25:90" pos:end="25:109"><expr pos:start="25:90" pos:end="25:109"><name pos:start="25:90" pos:end="25:105">nb_output_codecs</name> <operator pos:start="25:107" pos:end="25:107">+</operator> <literal type="number" pos:start="25:109" pos:end="25:109">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if<condition pos:start="27:7" pos:end="27:29">(<expr pos:start="27:8" pos:end="27:28"><operator pos:start="27:8" pos:end="27:8">!</operator><name pos:start="27:9" pos:end="27:28">subtitle_stream_copy</name></expr>)</condition><block pos:start="27:30" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:101">

        <expr_stmt pos:start="29:9" pos:end="31:111"><expr pos:start="29:9" pos:end="31:110"><name pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:20">subtitle_enc</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">codec_id</name></name> <operator pos:start="29:32" pos:end="29:32">=</operator> <call pos:start="29:34" pos:end="31:110"><name pos:start="29:34" pos:end="29:50">find_codec_or_die</name><argument_list pos:start="29:51" pos:end="31:110">(<argument pos:start="29:52" pos:end="29:70"><expr pos:start="29:52" pos:end="29:70"><name pos:start="29:52" pos:end="29:70">subtitle_codec_name</name></expr></argument>, <argument pos:start="29:73" pos:end="29:93"><expr pos:start="29:73" pos:end="29:93"><name pos:start="29:73" pos:end="29:93">AVMEDIA_TYPE_SUBTITLE</name></expr></argument>, <argument pos:start="29:96" pos:end="29:96"><expr pos:start="29:96" pos:end="29:96"><literal type="number" pos:start="29:96" pos:end="29:96">1</literal></expr></argument>,

                                                   <argument pos:start="31:52" pos:end="31:109"><expr pos:start="31:52" pos:end="31:109"><name pos:start="31:52" pos:end="31:86"><name pos:start="31:52" pos:end="31:63">avcodec_opts</name><index pos:start="31:64" pos:end="31:86">[<expr pos:start="31:65" pos:end="31:85"><name pos:start="31:65" pos:end="31:85">AVMEDIA_TYPE_SUBTITLE</name></expr>]</index></name><operator pos:start="31:87" pos:end="31:88">-&gt;</operator><name pos:start="31:89" pos:end="31:109">strict_std_compliance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:101"><expr pos:start="33:9" pos:end="33:100"><name pos:start="33:9" pos:end="33:13">codec</name><operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:48"><name pos:start="33:16" pos:end="33:28">output_codecs</name><index pos:start="33:29" pos:end="33:48">[<expr pos:start="33:30" pos:end="33:47"><name pos:start="33:30" pos:end="33:45">nb_output_codecs</name><operator pos:start="33:46" pos:end="33:46">-</operator><literal type="number" pos:start="33:47" pos:end="33:47">1</literal></expr>]</index></name> <operator pos:start="33:50" pos:end="33:50">=</operator> <call pos:start="33:52" pos:end="33:100"><name pos:start="33:52" pos:end="33:79">avcodec_find_encoder_by_name</name><argument_list pos:start="33:80" pos:end="33:100">(<argument pos:start="33:81" pos:end="33:99"><expr pos:start="33:81" pos:end="33:99"><name pos:start="33:81" pos:end="33:99">subtitle_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><call pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:33">avcodec_get_context_defaults3</name><argument_list pos:start="37:34" pos:end="37:51">(<argument pos:start="37:35" pos:end="37:43"><expr pos:start="37:35" pos:end="37:43"><name pos:start="37:35" pos:end="37:43"><name pos:start="37:35" pos:end="37:36">st</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:43">codec</name></name></expr></argument>, <argument pos:start="37:46" pos:end="37:50"><expr pos:start="37:46" pos:end="37:50"><name pos:start="37:46" pos:end="37:50">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="47:75"><expr pos:start="41:5" pos:end="47:74"><name pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:21">bitstream_filters</name><index pos:start="41:22" pos:end="41:38">[<expr pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:37">nb_output_files</name></expr>]</index></name> <operator pos:start="41:40" pos:end="41:40">=</operator>

        <call pos:start="43:9" pos:end="47:74"><name pos:start="43:9" pos:end="43:18">grow_array</name><argument_list pos:start="43:19" pos:end="47:74">(<argument pos:start="43:20" pos:end="43:53"><expr pos:start="43:20" pos:end="43:53"><name pos:start="43:20" pos:end="43:53"><name pos:start="43:20" pos:end="43:36">bitstream_filters</name><index pos:start="43:37" pos:end="43:53">[<expr pos:start="43:38" pos:end="43:52"><name pos:start="43:38" pos:end="43:52">nb_output_files</name></expr>]</index></name></expr></argument>,

                   <argument pos:start="45:20" pos:end="45:62"><expr pos:start="45:20" pos:end="45:62"><sizeof pos:start="45:20" pos:end="45:62">sizeof<argument_list pos:start="45:26" pos:end="45:62">(<argument pos:start="45:27" pos:end="45:61"><expr pos:start="45:27" pos:end="45:61"><operator pos:start="45:27" pos:end="45:27">*</operator><name pos:start="45:28" pos:end="45:61"><name pos:start="45:28" pos:end="45:44">bitstream_filters</name><index pos:start="45:45" pos:end="45:61">[<expr pos:start="45:46" pos:end="45:60"><name pos:start="45:46" pos:end="45:60">nb_output_files</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:57"><expr pos:start="47:20" pos:end="47:57"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:57"><name pos:start="47:21" pos:end="47:40">nb_bitstream_filters</name><index pos:start="47:41" pos:end="47:57">[<expr pos:start="47:42" pos:end="47:56"><name pos:start="47:42" pos:end="47:56">nb_output_files</name></expr>]</index></name></expr></argument>, <argument pos:start="47:60" pos:end="47:73"><expr pos:start="47:60" pos:end="47:73"><name pos:start="47:60" pos:end="47:73"><name pos:start="47:60" pos:end="47:61">oc</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:73">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:87"><expr pos:start="49:5" pos:end="49:86"><name pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:21">bitstream_filters</name><index pos:start="49:22" pos:end="49:38">[<expr pos:start="49:23" pos:end="49:37"><name pos:start="49:23" pos:end="49:37">nb_output_files</name></expr>]</index><index pos:start="49:39" pos:end="49:58">[<expr pos:start="49:40" pos:end="49:57"><name pos:start="49:40" pos:end="49:53"><name pos:start="49:40" pos:end="49:41">oc</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:53">nb_streams</name></name> <operator pos:start="49:55" pos:end="49:55">-</operator> <literal type="number" pos:start="49:57" pos:end="49:57">1</literal></expr>]</index></name><operator pos:start="49:59" pos:end="49:59">=</operator> <name pos:start="49:61" pos:end="49:86">subtitle_bitstream_filters</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:30">subtitle_bitstream_filters</name><operator pos:start="51:31" pos:end="51:31">=</operator> <name pos:start="51:33" pos:end="51:36">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:16">subtitle_enc</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:28">codec_type</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <name pos:start="55:32" pos:end="55:52">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="61:52"><if pos:start="59:5" pos:end="61:52">if<condition pos:start="59:7" pos:end="59:26">(<expr pos:start="59:8" pos:end="59:25"><name pos:start="59:8" pos:end="59:25">subtitle_codec_tag</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:52"><block_content pos:start="61:9" pos:end="61:52">

        <expr_stmt pos:start="61:9" pos:end="61:52"><expr pos:start="61:9" pos:end="61:51"><name pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:20">subtitle_enc</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:31">codec_tag</name></name><operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:51">subtitle_codec_tag</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:29">(<expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:28">subtitle_stream_copy</name></expr>)</condition> <block pos:start="65:31" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:28">

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:10">st</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:23">stream_copy</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="number" pos:start="67:27" pos:end="67:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:140">

        <expr_stmt pos:start="71:9" pos:end="71:140"><expr pos:start="71:9" pos:end="71:139"><call pos:start="71:9" pos:end="71:139"><name pos:start="71:9" pos:end="71:24">set_context_opts</name><argument_list pos:start="71:25" pos:end="71:139">(<argument pos:start="71:26" pos:end="71:60"><expr pos:start="71:26" pos:end="71:60"><name pos:start="71:26" pos:end="71:60"><name pos:start="71:26" pos:end="71:37">avcodec_opts</name><index pos:start="71:38" pos:end="71:60">[<expr pos:start="71:39" pos:end="71:59"><name pos:start="71:39" pos:end="71:59">AVMEDIA_TYPE_SUBTITLE</name></expr>]</index></name></expr></argument>, <argument pos:start="71:63" pos:end="71:74"><expr pos:start="71:63" pos:end="71:74"><name pos:start="71:63" pos:end="71:74">subtitle_enc</name></expr></argument>, <argument pos:start="71:77" pos:end="71:131"><expr pos:start="71:77" pos:end="71:131"><name pos:start="71:77" pos:end="71:102">AV_OPT_FLAG_SUBTITLE_PARAM</name> <operator pos:start="71:104" pos:end="71:104">|</operator> <name pos:start="71:106" pos:end="71:131">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>, <argument pos:start="71:134" pos:end="71:138"><expr pos:start="71:134" pos:end="71:138"><name pos:start="71:134" pos:end="71:138">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:26">(<expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:25">subtitle_language</name></expr>)</condition> <block pos:start="77:28" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:37">

        <expr_stmt pos:start="79:9" pos:end="79:74"><expr pos:start="79:9" pos:end="79:73"><call pos:start="79:9" pos:end="79:73"><name pos:start="79:9" pos:end="79:24">av_metadata_set2</name><argument_list pos:start="79:25" pos:end="79:73">(<argument pos:start="79:26" pos:end="79:38"><expr pos:start="79:26" pos:end="79:38"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:38"><name pos:start="79:27" pos:end="79:28">st</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:38">metadata</name></name></expr></argument>, <argument pos:start="79:41" pos:end="79:50"><expr pos:start="79:41" pos:end="79:50"><literal type="string" pos:start="79:41" pos:end="79:50">"language"</literal></expr></argument>, <argument pos:start="79:53" pos:end="79:69"><expr pos:start="79:53" pos:end="79:69"><name pos:start="79:53" pos:end="79:69">subtitle_language</name></expr></argument>, <argument pos:start="79:72" pos:end="79:72"><expr pos:start="79:72" pos:end="79:72"><literal type="number" pos:start="79:72" pos:end="79:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><call pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:16">av_freep</name><argument_list pos:start="81:17" pos:end="81:36">(<argument pos:start="81:18" pos:end="81:35"><expr pos:start="81:18" pos:end="81:35"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:35">subtitle_language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:25"><expr pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:20">subtitle_disable</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <literal type="number" pos:start="87:24" pos:end="87:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><call pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:12">av_freep</name><argument_list pos:start="89:13" pos:end="89:34">(<argument pos:start="89:14" pos:end="89:33"><expr pos:start="89:14" pos:end="89:33"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:33">subtitle_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:29"><expr pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:24">subtitle_stream_copy</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <literal type="number" pos:start="91:28" pos:end="91:28">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
