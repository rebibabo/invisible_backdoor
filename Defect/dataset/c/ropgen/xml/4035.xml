<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4035.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:26">alloc_block</name><parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name><modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVVPCState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:22">bat_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">index</name></decl>, <decl pos:start="9:21" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:21" pos:end="9:29">bat_value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:34"><name pos:start="13:13" pos:end="13:18">bitmap</name><index pos:start="13:19" pos:end="13:34">[<expr pos:start="13:20" pos:end="13:33"><name pos:start="13:20" pos:end="13:33"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:33">bitmap_size</name></name></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:38">/* Check if sector_num is valid */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:72">(<expr pos:start="19:9" pos:end="19:71"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:15">offset</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal><operator pos:start="19:20" pos:end="19:20">)</operator> <operator pos:start="19:22" pos:end="19:23">||</operator> <operator pos:start="19:25" pos:end="19:25">(</operator><name pos:start="19:26" pos:end="19:31">offset</name> <operator pos:start="19:33" pos:end="19:33">&gt;</operator> <name pos:start="19:35" pos:end="19:51"><name pos:start="19:35" pos:end="19:36">bs</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:51">total_sectors</name></name> <operator pos:start="19:53" pos:end="19:53">*</operator> <name pos:start="19:55" pos:end="19:70">BDRV_SECTOR_SIZE</name><operator pos:start="19:71" pos:end="19:71">)</operator></expr>)</condition> <block pos:start="19:74" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:40">/* Write entry into in-memory BAT */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:9">index</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:18">offset</name> <operator pos:start="29:20" pos:end="29:20">/</operator> <name pos:start="29:22" pos:end="29:34"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:34">block_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><call pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:10">assert</name><argument_list pos:start="31:11" pos:end="31:45">(<argument pos:start="31:12" pos:end="31:44"><expr pos:start="31:12" pos:end="31:44"><name pos:start="31:12" pos:end="31:30"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:23">pagetable</name><index pos:start="31:24" pos:end="31:30">[<expr pos:start="31:25" pos:end="31:29"><name pos:start="31:25" pos:end="31:29">index</name></expr>]</index></name> <operator pos:start="31:32" pos:end="31:33">==</operator> <literal type="number" pos:start="31:35" pos:end="31:44">0xFFFFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:16">pagetable</name><index pos:start="33:17" pos:end="33:23">[<expr pos:start="33:18" pos:end="33:22"><name pos:start="33:18" pos:end="33:22">index</name></expr>]</index></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:51"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:51">free_data_block_offset</name></name> <operator pos:start="33:53" pos:end="33:53">/</operator> <literal type="number" pos:start="33:55" pos:end="33:57">512</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:39">/* Initialize the block's bitmap */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><call pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:10">memset</name><argument_list pos:start="39:11" pos:end="39:40">(<argument pos:start="39:12" pos:end="39:17"><expr pos:start="39:12" pos:end="39:17"><name pos:start="39:12" pos:end="39:17">bitmap</name></expr></argument>, <argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><literal type="number" pos:start="39:20" pos:end="39:23">0xff</literal></expr></argument>, <argument pos:start="39:26" pos:end="39:39"><expr pos:start="39:26" pos:end="39:39"><name pos:start="39:26" pos:end="39:39"><name pos:start="39:26" pos:end="39:26">s</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:39">bitmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:24"><expr pos:start="41:5" pos:end="43:23"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="43:23"><name pos:start="41:11" pos:end="41:26">bdrv_pwrite_sync</name><argument_list pos:start="41:27" pos:end="43:23">(<argument pos:start="41:28" pos:end="41:35"><expr pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:29">bs</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:35">file</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:62"><expr pos:start="41:38" pos:end="41:62"><name pos:start="41:38" pos:end="41:62"><name pos:start="41:38" pos:end="41:38">s</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:62">free_data_block_offset</name></name></expr></argument>, <argument pos:start="41:65" pos:end="41:70"><expr pos:start="41:65" pos:end="41:70"><name pos:start="41:65" pos:end="41:70">bitmap</name></expr></argument>,

        <argument pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:22">bitmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition> <block pos:start="45:18" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:60">/* Write new footer (the old one will be overwritten) */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:64"><expr pos:start="55:5" pos:end="55:63"><name pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:29">free_data_block_offset</name></name> <operator pos:start="55:31" pos:end="55:32">+=</operator> <name pos:start="55:34" pos:end="55:46"><name pos:start="55:34" pos:end="55:34">s</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:46">block_size</name></name> <operator pos:start="55:48" pos:end="55:48">+</operator> <name pos:start="55:50" pos:end="55:63"><name pos:start="55:50" pos:end="55:50">s</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:63">bitmap_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:28"><name pos:start="57:11" pos:end="57:24">rewrite_footer</name><argument_list pos:start="57:25" pos:end="57:28">(<argument pos:start="57:26" pos:end="57:27"><expr pos:start="57:26" pos:end="57:27"><name pos:start="57:26" pos:end="57:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:18"><if pos:start="59:5" pos:end="61:18">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:18"><block_content pos:start="61:9" pos:end="61:18">

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:33">/* Write BAT entry to disk */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:14">bat_offset</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:30"><name pos:start="67:18" pos:end="67:18">s</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:30">bat_offset</name></name> <operator pos:start="67:32" pos:end="67:32">+</operator> <operator pos:start="67:34" pos:end="67:34">(</operator><literal type="number" pos:start="67:35" pos:end="67:35">4</literal> <operator pos:start="67:37" pos:end="67:37">*</operator> <name pos:start="67:39" pos:end="67:43">index</name><operator pos:start="67:44" pos:end="67:44">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:13">bat_value</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="69:48"><name pos:start="69:17" pos:end="69:27">cpu_to_be32</name><argument_list pos:start="69:28" pos:end="69:48">(<argument pos:start="69:29" pos:end="69:47"><expr pos:start="69:29" pos:end="69:47"><name pos:start="69:29" pos:end="69:47"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:40">pagetable</name><index pos:start="69:41" pos:end="69:47">[<expr pos:start="69:42" pos:end="69:46"><name pos:start="69:42" pos:end="69:46">index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:64"><expr pos:start="71:5" pos:end="71:63"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:63"><name pos:start="71:11" pos:end="71:26">bdrv_pwrite_sync</name><argument_list pos:start="71:27" pos:end="71:63">(<argument pos:start="71:28" pos:end="71:35"><expr pos:start="71:28" pos:end="71:35"><name pos:start="71:28" pos:end="71:35"><name pos:start="71:28" pos:end="71:29">bs</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:35">file</name></name></expr></argument>, <argument pos:start="71:38" pos:end="71:47"><expr pos:start="71:38" pos:end="71:47"><name pos:start="71:38" pos:end="71:47">bat_offset</name></expr></argument>, <argument pos:start="71:50" pos:end="71:59"><expr pos:start="71:50" pos:end="71:59"><operator pos:start="71:50" pos:end="71:50">&amp;</operator><name pos:start="71:51" pos:end="71:59">bat_value</name></expr></argument>, <argument pos:start="71:62" pos:end="71:62"><expr pos:start="71:62" pos:end="71:62"><literal type="number" pos:start="71:62" pos:end="71:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:18"><if pos:start="73:5" pos:end="75:18">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">&lt;</operator> <literal type="number" pos:start="73:15" pos:end="73:15">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:18"><block_content pos:start="75:9" pos:end="75:18">

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <return pos:start="79:5" pos:end="79:47">return <expr pos:start="79:12" pos:end="79:46"><call pos:start="79:12" pos:end="79:46"><name pos:start="79:12" pos:end="79:27">get_image_offset</name><argument_list pos:start="79:28" pos:end="79:46">(<argument pos:start="79:29" pos:end="79:30"><expr pos:start="79:29" pos:end="79:30"><name pos:start="79:29" pos:end="79:30">bs</name></expr></argument>, <argument pos:start="79:33" pos:end="79:38"><expr pos:start="79:33" pos:end="79:38"><name pos:start="79:33" pos:end="79:38">offset</name></expr></argument>, <argument pos:start="79:41" pos:end="79:45"><expr pos:start="79:41" pos:end="79:45"><name pos:start="79:41" pos:end="79:45">false</name></expr></argument>)</argument_list></call></expr>;</return>



<label pos:start="83:1" pos:end="83:5"><name pos:start="83:1" pos:end="83:4">fail</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:66"><expr pos:start="85:5" pos:end="85:65"><name pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:29">free_data_block_offset</name></name> <operator pos:start="85:31" pos:end="85:32">-=</operator> <operator pos:start="85:34" pos:end="85:34">(</operator><name pos:start="85:35" pos:end="85:47"><name pos:start="85:35" pos:end="85:35">s</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:47">block_size</name></name> <operator pos:start="85:49" pos:end="85:49">+</operator> <name pos:start="85:51" pos:end="85:64"><name pos:start="85:51" pos:end="85:51">s</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:64">bitmap_size</name></name><operator pos:start="85:65" pos:end="85:65">)</operator></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
