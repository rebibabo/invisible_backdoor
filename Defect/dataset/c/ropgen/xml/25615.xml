<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25615.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">write_manifest</name><parameter_list pos:start="1:26" pos:end="1:56">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">final</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:52">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DASHContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:28"><name pos:start="9:10" pos:end="9:22">temp_filename</name><index pos:start="9:23" pos:end="9:28">[<expr pos:start="9:24" pos:end="9:27"><literal type="number" pos:start="9:24" pos:end="9:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:74"><decl pos:start="13:5" pos:end="13:73"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">AVDictionaryEntry</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">title</name> <init pos:start="13:30" pos:end="13:73">= <expr pos:start="13:32" pos:end="13:73"><call pos:start="13:32" pos:end="13:73"><name pos:start="13:32" pos:end="13:42">av_dict_get</name><argument_list pos:start="13:43" pos:end="13:73">(<argument pos:start="13:44" pos:end="13:54"><expr pos:start="13:44" pos:end="13:54"><name pos:start="13:44" pos:end="13:54"><name pos:start="13:44" pos:end="13:44">s</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:54">metadata</name></name></expr></argument>, <argument pos:start="13:57" pos:end="13:63"><expr pos:start="13:57" pos:end="13:63"><literal type="string" pos:start="13:57" pos:end="13:63">"title"</literal></expr></argument>, <argument pos:start="13:66" pos:end="13:69"><expr pos:start="13:66" pos:end="13:69"><name pos:start="13:66" pos:end="13:69">NULL</name></expr></argument>, <argument pos:start="13:72" pos:end="13:72"><expr pos:start="13:72" pos:end="13:72"><literal type="number" pos:start="13:72" pos:end="13:72">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:74"><expr pos:start="17:5" pos:end="17:73"><call pos:start="17:5" pos:end="17:73"><name pos:start="17:5" pos:end="17:12">snprintf</name><argument_list pos:start="17:13" pos:end="17:73">(<argument pos:start="17:14" pos:end="17:26"><expr pos:start="17:14" pos:end="17:26"><name pos:start="17:14" pos:end="17:26">temp_filename</name></expr></argument>, <argument pos:start="17:29" pos:end="17:49"><expr pos:start="17:29" pos:end="17:49"><sizeof pos:start="17:29" pos:end="17:49">sizeof<argument_list pos:start="17:35" pos:end="17:49">(<argument pos:start="17:36" pos:end="17:48"><expr pos:start="17:36" pos:end="17:48"><name pos:start="17:36" pos:end="17:48">temp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:52" pos:end="17:59"><expr pos:start="17:52" pos:end="17:59"><literal type="string" pos:start="17:52" pos:end="17:59">"%s.tmp"</literal></expr></argument>, <argument pos:start="17:62" pos:end="17:72"><expr pos:start="17:62" pos:end="17:72"><name pos:start="17:62" pos:end="17:72"><name pos:start="17:62" pos:end="17:62">s</name><operator pos:start="17:63" pos:end="17:64">-&gt;</operator><name pos:start="17:65" pos:end="17:72">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:89"><expr pos:start="19:5" pos:end="19:88"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:88"><name pos:start="19:11" pos:end="19:20">avio_open2</name><argument_list pos:start="19:21" pos:end="19:88">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:25">out</name></expr></argument>, <argument pos:start="19:28" pos:end="19:40"><expr pos:start="19:28" pos:end="19:40"><name pos:start="19:28" pos:end="19:40">temp_filename</name></expr></argument>, <argument pos:start="19:43" pos:end="19:57"><expr pos:start="19:43" pos:end="19:57"><name pos:start="19:43" pos:end="19:57">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="19:60" pos:end="19:81"><expr pos:start="19:60" pos:end="19:81"><operator pos:start="19:60" pos:end="19:60">&amp;</operator><name pos:start="19:61" pos:end="19:81"><name pos:start="19:61" pos:end="19:61">s</name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:81">interrupt_callback</name></name></expr></argument>, <argument pos:start="19:84" pos:end="19:87"><expr pos:start="19:84" pos:end="19:87"><name pos:start="19:84" pos:end="19:87">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition> <block pos:start="21:18" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:19">

        <expr_stmt pos:start="23:9" pos:end="23:82"><expr pos:start="23:9" pos:end="23:81"><call pos:start="23:9" pos:end="23:81"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:81">(<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">s</name></expr></argument>, <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:33" pos:end="23:65"><expr pos:start="23:33" pos:end="23:65"><literal type="string" pos:start="23:33" pos:end="23:65">"Unable to open %s for writing\n"</literal></expr></argument>, <argument pos:start="23:68" pos:end="23:80"><expr pos:start="23:68" pos:end="23:80"><name pos:start="23:68" pos:end="23:80">temp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:69"><expr pos:start="29:5" pos:end="29:68"><call pos:start="29:5" pos:end="29:68"><name pos:start="29:5" pos:end="29:15">avio_printf</name><argument_list pos:start="29:16" pos:end="29:68">(<argument pos:start="29:17" pos:end="29:19"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">out</name></expr></argument>, <argument pos:start="29:22" pos:end="29:67"><expr pos:start="29:22" pos:end="29:67"><literal type="string" pos:start="29:22" pos:end="29:67">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="41:65"><expr pos:start="31:5" pos:end="41:64"><call pos:start="31:5" pos:end="41:64"><name pos:start="31:5" pos:end="31:15">avio_printf</name><argument_list pos:start="31:16" pos:end="41:64">(<argument pos:start="31:17" pos:end="31:19"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">out</name></expr></argument>, <argument pos:start="31:22" pos:end="41:33"><expr pos:start="31:22" pos:end="41:33"><literal type="string" pos:start="31:22" pos:end="31:85">"&lt;MPD xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"</literal>

                <literal type="string" pos:start="33:17" pos:end="33:61">"\txmlns=\"urn:mpeg:dash:schema:mpd:2011\"\n"</literal>

                <literal type="string" pos:start="35:17" pos:end="35:66">"\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n"</literal>

                <literal type="string" pos:start="37:17" pos:end="37:167">"\txsi:schemaLocation=\"urn:mpeg:DASH:schema:MPD:2011 http://standards.iso.org/ittf/PubliclyAvailableStandards/MPEG-DASH_schema_files/DASH-MPD.xsd\"\n"</literal>

                <literal type="string" pos:start="39:17" pos:end="39:72">"\tprofiles=\"urn:mpeg:dash:profile:isoff-live:2011\"\n"</literal>

                <literal type="string" pos:start="41:17" pos:end="41:33">"\ttype=\"%s\"\n"</literal></expr></argument>, <argument pos:start="41:36" pos:end="41:63"><expr pos:start="41:36" pos:end="41:63"><ternary pos:start="41:36" pos:end="41:63"><condition pos:start="41:36" pos:end="41:42"><expr pos:start="41:36" pos:end="41:40"><name pos:start="41:36" pos:end="41:40">final</name></expr> ?</condition><then pos:start="41:44" pos:end="41:51"> <expr pos:start="41:44" pos:end="41:51"><literal type="string" pos:start="41:44" pos:end="41:51">"static"</literal></expr> </then><else pos:start="41:53" pos:end="41:63">: <expr pos:start="41:55" pos:end="41:63"><literal type="string" pos:start="41:55" pos:end="41:63">"dynamic"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="97:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:14">(<expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:13">final</name></expr>)</condition> <block pos:start="43:16" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:33">

        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><call pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:19">avio_printf</name><argument_list pos:start="45:20" pos:end="45:58">(<argument pos:start="45:21" pos:end="45:23"><expr pos:start="45:21" pos:end="45:23"><name pos:start="45:21" pos:end="45:23">out</name></expr></argument>, <argument pos:start="45:26" pos:end="45:57"><expr pos:start="45:26" pos:end="45:57"><literal type="string" pos:start="45:26" pos:end="45:57">"\tmediaPresentationDuration=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><call pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:18">write_time</name><argument_list pos:start="47:19" pos:end="47:42">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">out</name></expr></argument>, <argument pos:start="47:25" pos:end="47:41"><expr pos:start="47:25" pos:end="47:41"><name pos:start="47:25" pos:end="47:41"><name pos:start="47:25" pos:end="47:25">c</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:41">total_duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:19">avio_printf</name><argument_list pos:start="49:20" pos:end="49:32">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">out</name></expr></argument>, <argument pos:start="49:26" pos:end="49:31"><expr pos:start="49:26" pos:end="49:31"><literal type="string" pos:start="49:26" pos:end="49:31">"\"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="97:5">else <block pos:start="51:12" pos:end="97:5">{<block_content pos:start="53:9" pos:end="95:9">

        <decl_stmt pos:start="53:9" pos:end="53:60"><decl pos:start="53:9" pos:end="53:59"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:25">update_period</name> <init pos:start="53:27" pos:end="53:59">= <expr pos:start="53:29" pos:end="53:59"><name pos:start="53:29" pos:end="53:44"><name pos:start="53:29" pos:end="53:29">c</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:44">last_duration</name></name> <operator pos:start="53:46" pos:end="53:46">/</operator> <name pos:start="53:48" pos:end="53:59">AV_TIME_BASE</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="55:9" pos:end="57:32"><if pos:start="55:9" pos:end="57:32">if <condition pos:start="55:12" pos:end="55:48">(<expr pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:27">use_template</name></name> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator> <operator pos:start="55:32" pos:end="55:32">!</operator><name pos:start="55:33" pos:end="55:47"><name pos:start="55:33" pos:end="55:33">c</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:47">use_timeline</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:32"><block_content pos:start="57:13" pos:end="57:32">

            <expr_stmt pos:start="57:13" pos:end="57:32"><expr pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:25">update_period</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <literal type="number" pos:start="57:29" pos:end="57:31">500</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:77"><expr pos:start="59:9" pos:end="59:76"><call pos:start="59:9" pos:end="59:76"><name pos:start="59:9" pos:end="59:19">avio_printf</name><argument_list pos:start="59:20" pos:end="59:76">(<argument pos:start="59:21" pos:end="59:23"><expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">out</name></expr></argument>, <argument pos:start="59:26" pos:end="59:60"><expr pos:start="59:26" pos:end="59:60"><literal type="string" pos:start="59:26" pos:end="59:60">"\tminimumUpdatePeriod=\"PT%dS\"\n"</literal></expr></argument>, <argument pos:start="59:63" pos:end="59:75"><expr pos:start="59:63" pos:end="59:75"><name pos:start="59:63" pos:end="59:75">update_period</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:102"><expr pos:start="61:9" pos:end="61:101"><call pos:start="61:9" pos:end="61:101"><name pos:start="61:9" pos:end="61:19">avio_printf</name><argument_list pos:start="61:20" pos:end="61:101">(<argument pos:start="61:21" pos:end="61:23"><expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">out</name></expr></argument>, <argument pos:start="61:26" pos:end="61:67"><expr pos:start="61:26" pos:end="61:67"><literal type="string" pos:start="61:26" pos:end="61:67">"\tsuggestedPresentationDelay=\"PT%dS\"\n"</literal></expr></argument>, <argument pos:start="61:70" pos:end="61:100"><expr pos:start="61:70" pos:end="61:100"><name pos:start="61:70" pos:end="61:85"><name pos:start="61:70" pos:end="61:70">c</name><operator pos:start="61:71" pos:end="61:72">-&gt;</operator><name pos:start="61:73" pos:end="61:85">last_duration</name></name> <operator pos:start="61:87" pos:end="61:87">/</operator> <name pos:start="61:89" pos:end="61:100">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="81:9"><if pos:start="63:9" pos:end="81:9">if <condition pos:start="63:12" pos:end="63:97">(<expr pos:start="63:13" pos:end="63:96"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:42"><name pos:start="63:14" pos:end="63:14">c</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:39">availability_start_time</name><index pos:start="63:40" pos:end="63:42">[<expr pos:start="63:41" pos:end="63:41"><literal type="number" pos:start="63:41" pos:end="63:41">0</literal></expr>]</index></name> <operator pos:start="63:44" pos:end="63:45">&amp;&amp;</operator> <name pos:start="63:47" pos:end="63:59"><name pos:start="63:47" pos:end="63:47">s</name><operator pos:start="63:48" pos:end="63:49">-&gt;</operator><name pos:start="63:50" pos:end="63:59">nb_streams</name></name> <operator pos:start="63:61" pos:end="63:61">&gt;</operator> <literal type="number" pos:start="63:63" pos:end="63:63">0</literal> <operator pos:start="63:65" pos:end="63:66">&amp;&amp;</operator> <name pos:start="63:68" pos:end="63:80"><name pos:start="63:68" pos:end="63:68">c</name><operator pos:start="63:69" pos:end="63:70">-&gt;</operator><name pos:start="63:71" pos:end="63:77">streams</name><index pos:start="63:78" pos:end="63:80">[<expr pos:start="63:79" pos:end="63:79"><literal type="number" pos:start="63:79" pos:end="63:79">0</literal></expr>]</index></name><operator pos:start="63:81" pos:end="63:81">.</operator><name pos:start="63:82" pos:end="63:92">nb_segments</name> <operator pos:start="63:94" pos:end="63:94">&gt;</operator> <literal type="number" pos:start="63:96" pos:end="63:96">0</literal></expr>)</condition> <block pos:start="63:99" pos:end="81:9">{<block_content pos:start="65:13" pos:end="79:13">

            <decl_stmt pos:start="65:13" pos:end="65:34"><decl pos:start="65:13" pos:end="65:33"><type pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:18">time_t</name></type> <name pos:start="65:20" pos:end="65:20">t</name> <init pos:start="65:22" pos:end="65:33">= <expr pos:start="65:24" pos:end="65:33"><call pos:start="65:24" pos:end="65:33"><name pos:start="65:24" pos:end="65:27">time</name><argument_list pos:start="65:28" pos:end="65:33">(<argument pos:start="65:29" pos:end="65:32"><expr pos:start="65:29" pos:end="65:32"><name pos:start="65:29" pos:end="65:32">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:34"><decl pos:start="67:13" pos:end="67:26"><type pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:18">struct</name> <name pos:start="67:20" pos:end="67:21">tm</name></name> <modifier pos:start="67:23" pos:end="67:23">*</modifier></type><name pos:start="67:24" pos:end="67:26">ptm</name></decl>, <decl pos:start="67:29" pos:end="67:33"><type ref="prev" pos:start="67:13" pos:end="67:23"/><name pos:start="67:29" pos:end="67:33">tmbuf</name></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:39"><expr pos:start="69:13" pos:end="69:38"><name pos:start="69:13" pos:end="69:15">ptm</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:38"><name pos:start="69:19" pos:end="69:26">gmtime_r</name><argument_list pos:start="69:27" pos:end="69:38">(<argument pos:start="69:28" pos:end="69:29"><expr pos:start="69:28" pos:end="69:29"><operator pos:start="69:28" pos:end="69:28">&amp;</operator><name pos:start="69:29" pos:end="69:29">t</name></expr></argument>, <argument pos:start="69:32" pos:end="69:37"><expr pos:start="69:32" pos:end="69:37"><operator pos:start="69:32" pos:end="69:32">&amp;</operator><name pos:start="69:33" pos:end="69:37">tmbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="79:13"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:20">(<expr pos:start="71:17" pos:end="71:19"><name pos:start="71:17" pos:end="71:19">ptm</name></expr>)</condition> <block pos:start="71:22" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:57">

                <if_stmt pos:start="73:17" pos:end="77:57"><if pos:start="73:17" pos:end="77:57">if <condition pos:start="73:20" pos:end="75:56">(<expr pos:start="73:21" pos:end="75:55"><operator pos:start="73:21" pos:end="73:21">!</operator><call pos:start="73:22" pos:end="75:55"><name pos:start="73:22" pos:end="73:29">strftime</name><argument_list pos:start="73:30" pos:end="75:55">(<argument pos:start="73:31" pos:end="73:56"><expr pos:start="73:31" pos:end="73:56"><name pos:start="73:31" pos:end="73:56"><name pos:start="73:31" pos:end="73:31">c</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:56">availability_start_time</name></name></expr></argument>, <argument pos:start="73:59" pos:end="73:92"><expr pos:start="73:59" pos:end="73:92"><sizeof pos:start="73:59" pos:end="73:92">sizeof<argument_list pos:start="73:65" pos:end="73:92">(<argument pos:start="73:66" pos:end="73:91"><expr pos:start="73:66" pos:end="73:91"><name pos:start="73:66" pos:end="73:91"><name pos:start="73:66" pos:end="73:66">c</name><operator pos:start="73:67" pos:end="73:68">-&gt;</operator><name pos:start="73:69" pos:end="73:91">availability_start_time</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                              <argument pos:start="75:31" pos:end="75:49"><expr pos:start="75:31" pos:end="75:49"><literal type="string" pos:start="75:31" pos:end="75:49">"%Y-%m-%dT%H:%M:%S"</literal></expr></argument>, <argument pos:start="75:52" pos:end="75:54"><expr pos:start="75:52" pos:end="75:54"><name pos:start="75:52" pos:end="75:54">ptm</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:21" pos:end="77:57"><block_content pos:start="77:21" pos:end="77:57">

                    <expr_stmt pos:start="77:21" pos:end="77:57"><expr pos:start="77:21" pos:end="77:56"><name pos:start="77:21" pos:end="77:49"><name pos:start="77:21" pos:end="77:21">c</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:46">availability_start_time</name><index pos:start="77:47" pos:end="77:49">[<expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">0</literal></expr>]</index></name> <operator pos:start="77:51" pos:end="77:51">=</operator> <literal type="char" pos:start="77:53" pos:end="77:56">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="85:93"><if pos:start="83:9" pos:end="85:93">if <condition pos:start="83:12" pos:end="83:42">(<expr pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:13">c</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:38">availability_start_time</name><index pos:start="83:39" pos:end="83:41">[<expr pos:start="83:40" pos:end="83:40"><literal type="number" pos:start="83:40" pos:end="83:40">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:93"><block_content pos:start="85:13" pos:end="85:93">

            <expr_stmt pos:start="85:13" pos:end="85:93"><expr pos:start="85:13" pos:end="85:92"><call pos:start="85:13" pos:end="85:92"><name pos:start="85:13" pos:end="85:23">avio_printf</name><argument_list pos:start="85:24" pos:end="85:92">(<argument pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:27">out</name></expr></argument>, <argument pos:start="85:30" pos:end="85:63"><expr pos:start="85:30" pos:end="85:63"><literal type="string" pos:start="85:30" pos:end="85:63">"\tavailabilityStartTime=\"%s\"\n"</literal></expr></argument>, <argument pos:start="85:66" pos:end="85:91"><expr pos:start="85:66" pos:end="85:91"><name pos:start="85:66" pos:end="85:91"><name pos:start="85:66" pos:end="85:66">c</name><operator pos:start="85:67" pos:end="85:68">-&gt;</operator><name pos:start="85:69" pos:end="85:91">availability_start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:46">(<expr pos:start="87:13" pos:end="87:45"><name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:13">c</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:26">window_size</name></name> <operator pos:start="87:28" pos:end="87:29">&amp;&amp;</operator> <name pos:start="87:31" pos:end="87:45"><name pos:start="87:31" pos:end="87:31">c</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:45">use_template</name></name></expr>)</condition> <block pos:start="87:48" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:37">

            <expr_stmt pos:start="89:13" pos:end="89:58"><expr pos:start="89:13" pos:end="89:57"><call pos:start="89:13" pos:end="89:57"><name pos:start="89:13" pos:end="89:23">avio_printf</name><argument_list pos:start="89:24" pos:end="89:57">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">out</name></expr></argument>, <argument pos:start="89:30" pos:end="89:56"><expr pos:start="89:30" pos:end="89:56"><literal type="string" pos:start="89:30" pos:end="89:56">"\ttimeShiftBufferDepth=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:63"><expr pos:start="91:13" pos:end="91:62"><call pos:start="91:13" pos:end="91:62"><name pos:start="91:13" pos:end="91:22">write_time</name><argument_list pos:start="91:23" pos:end="91:62">(<argument pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:26">out</name></expr></argument>, <argument pos:start="91:29" pos:end="91:61"><expr pos:start="91:29" pos:end="91:61"><name pos:start="91:29" pos:end="91:44"><name pos:start="91:29" pos:end="91:29">c</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:44">last_duration</name></name> <operator pos:start="91:46" pos:end="91:46">*</operator> <name pos:start="91:48" pos:end="91:61"><name pos:start="91:48" pos:end="91:48">c</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:61">window_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:37"><expr pos:start="93:13" pos:end="93:36"><call pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:23">avio_printf</name><argument_list pos:start="93:24" pos:end="93:36">(<argument pos:start="93:25" pos:end="93:27"><expr pos:start="93:25" pos:end="93:27"><name pos:start="93:25" pos:end="93:27">out</name></expr></argument>, <argument pos:start="93:30" pos:end="93:35"><expr pos:start="93:30" pos:end="93:35"><literal type="string" pos:start="93:30" pos:end="93:35">"\"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:43"><expr pos:start="99:5" pos:end="99:42"><call pos:start="99:5" pos:end="99:42"><name pos:start="99:5" pos:end="99:15">avio_printf</name><argument_list pos:start="99:16" pos:end="99:42">(<argument pos:start="99:17" pos:end="99:19"><expr pos:start="99:17" pos:end="99:19"><name pos:start="99:17" pos:end="99:19">out</name></expr></argument>, <argument pos:start="99:22" pos:end="99:41"><expr pos:start="99:22" pos:end="99:41"><literal type="string" pos:start="99:22" pos:end="99:41">"\tminBufferTime=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:38"><expr pos:start="101:5" pos:end="101:37"><call pos:start="101:5" pos:end="101:37"><name pos:start="101:5" pos:end="101:14">write_time</name><argument_list pos:start="101:15" pos:end="101:37">(<argument pos:start="101:16" pos:end="101:18"><expr pos:start="101:16" pos:end="101:18"><name pos:start="101:16" pos:end="101:18">out</name></expr></argument>, <argument pos:start="101:21" pos:end="101:36"><expr pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:21">c</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:36">last_duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:30"><expr pos:start="103:5" pos:end="103:29"><call pos:start="103:5" pos:end="103:29"><name pos:start="103:5" pos:end="103:15">avio_printf</name><argument_list pos:start="103:16" pos:end="103:29">(<argument pos:start="103:17" pos:end="103:19"><expr pos:start="103:17" pos:end="103:19"><name pos:start="103:17" pos:end="103:19">out</name></expr></argument>, <argument pos:start="103:22" pos:end="103:28"><expr pos:start="103:22" pos:end="103:28"><literal type="string" pos:start="103:22" pos:end="103:28">"\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:49"><expr pos:start="105:5" pos:end="105:48"><call pos:start="105:5" pos:end="105:48"><name pos:start="105:5" pos:end="105:15">avio_printf</name><argument_list pos:start="105:16" pos:end="105:48">(<argument pos:start="105:17" pos:end="105:19"><expr pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:19">out</name></expr></argument>, <argument pos:start="105:22" pos:end="105:47"><expr pos:start="105:22" pos:end="105:47"><literal type="string" pos:start="105:22" pos:end="105:47">"\t&lt;ProgramInformation&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="115:5"><if pos:start="107:5" pos:end="115:5">if <condition pos:start="107:8" pos:end="107:14">(<expr pos:start="107:9" pos:end="107:13"><name pos:start="107:9" pos:end="107:13">title</name></expr>)</condition> <block pos:start="107:16" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:25">

        <decl_stmt pos:start="109:9" pos:end="109:48"><decl pos:start="109:9" pos:end="109:47"><type pos:start="109:9" pos:end="109:14"><name pos:start="109:9" pos:end="109:12">char</name> <modifier pos:start="109:14" pos:end="109:14">*</modifier></type><name pos:start="109:15" pos:end="109:21">escaped</name> <init pos:start="109:23" pos:end="109:47">= <expr pos:start="109:25" pos:end="109:47"><call pos:start="109:25" pos:end="109:47"><name pos:start="109:25" pos:end="109:33">xmlescape</name><argument_list pos:start="109:34" pos:end="109:47">(<argument pos:start="109:35" pos:end="109:46"><expr pos:start="109:35" pos:end="109:46"><name pos:start="109:35" pos:end="109:46"><name pos:start="109:35" pos:end="109:39">title</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:46">value</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:61"><expr pos:start="111:9" pos:end="111:60"><call pos:start="111:9" pos:end="111:60"><name pos:start="111:9" pos:end="111:19">avio_printf</name><argument_list pos:start="111:20" pos:end="111:60">(<argument pos:start="111:21" pos:end="111:23"><expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">out</name></expr></argument>, <argument pos:start="111:26" pos:end="111:50"><expr pos:start="111:26" pos:end="111:50"><literal type="string" pos:start="111:26" pos:end="111:50">"\t\t&lt;Title&gt;%s&lt;/Title&gt;\n"</literal></expr></argument>, <argument pos:start="111:53" pos:end="111:59"><expr pos:start="111:53" pos:end="111:59"><name pos:start="111:53" pos:end="111:59">escaped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:25"><expr pos:start="113:9" pos:end="113:24"><call pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:15">av_free</name><argument_list pos:start="113:16" pos:end="113:24">(<argument pos:start="113:17" pos:end="113:23"><expr pos:start="113:17" pos:end="113:23"><name pos:start="113:17" pos:end="113:23">escaped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:50"><expr pos:start="117:5" pos:end="117:49"><call pos:start="117:5" pos:end="117:49"><name pos:start="117:5" pos:end="117:15">avio_printf</name><argument_list pos:start="117:16" pos:end="117:49">(<argument pos:start="117:17" pos:end="117:19"><expr pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">out</name></expr></argument>, <argument pos:start="117:22" pos:end="117:48"><expr pos:start="117:22" pos:end="117:48"><literal type="string" pos:start="117:22" pos:end="117:48">"\t&lt;/ProgramInformation&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="137:5"><if pos:start="119:5" pos:end="133:5">if <condition pos:start="119:8" pos:end="119:97">(<expr pos:start="119:9" pos:end="119:96"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:9">c</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:22">window_size</name></name> <operator pos:start="119:24" pos:end="119:25">&amp;&amp;</operator> <name pos:start="119:27" pos:end="119:39"><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:39">nb_streams</name></name> <operator pos:start="119:41" pos:end="119:41">&gt;</operator> <literal type="number" pos:start="119:43" pos:end="119:43">0</literal> <operator pos:start="119:45" pos:end="119:46">&amp;&amp;</operator> <name pos:start="119:48" pos:end="119:60"><name pos:start="119:48" pos:end="119:48">c</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:57">streams</name><index pos:start="119:58" pos:end="119:60">[<expr pos:start="119:59" pos:end="119:59"><literal type="number" pos:start="119:59" pos:end="119:59">0</literal></expr>]</index></name><operator pos:start="119:61" pos:end="119:61">.</operator><name pos:start="119:62" pos:end="119:72">nb_segments</name> <operator pos:start="119:74" pos:end="119:74">&gt;</operator> <literal type="number" pos:start="119:76" pos:end="119:76">0</literal> <operator pos:start="119:78" pos:end="119:79">&amp;&amp;</operator> <operator pos:start="119:81" pos:end="119:81">!</operator><name pos:start="119:82" pos:end="119:96"><name pos:start="119:82" pos:end="119:82">c</name><operator pos:start="119:83" pos:end="119:84">-&gt;</operator><name pos:start="119:85" pos:end="119:96">use_template</name></name></expr>)</condition> <block pos:start="119:99" pos:end="133:5">{<block_content pos:start="121:9" pos:end="131:34">

        <decl_stmt pos:start="121:9" pos:end="121:42"><decl pos:start="121:9" pos:end="121:41"><type pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:20">OutputStream</name> <modifier pos:start="121:22" pos:end="121:22">*</modifier></type><name pos:start="121:23" pos:end="121:24">os</name> <init pos:start="121:26" pos:end="121:41">= <expr pos:start="121:28" pos:end="121:41"><operator pos:start="121:28" pos:end="121:28">&amp;</operator><name pos:start="121:29" pos:end="121:41"><name pos:start="121:29" pos:end="121:29">c</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:38">streams</name><index pos:start="121:39" pos:end="121:41">[<expr pos:start="121:40" pos:end="121:40"><literal type="number" pos:start="121:40" pos:end="121:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="123:9" pos:end="123:69"><decl pos:start="123:9" pos:end="123:68"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:23">start_index</name> <init pos:start="123:25" pos:end="123:68">= <expr pos:start="123:27" pos:end="123:68"><call pos:start="123:27" pos:end="123:68"><name pos:start="123:27" pos:end="123:31">FFMAX</name><argument_list pos:start="123:32" pos:end="123:68">(<argument pos:start="123:33" pos:end="123:64"><expr pos:start="123:33" pos:end="123:64"><name pos:start="123:33" pos:end="123:47"><name pos:start="123:33" pos:end="123:34">os</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:47">nb_segments</name></name> <operator pos:start="123:49" pos:end="123:49">-</operator> <name pos:start="123:51" pos:end="123:64"><name pos:start="123:51" pos:end="123:51">c</name><operator pos:start="123:52" pos:end="123:53">-&gt;</operator><name pos:start="123:54" pos:end="123:64">window_size</name></name></expr></argument>, <argument pos:start="123:67" pos:end="123:67"><expr pos:start="123:67" pos:end="123:67"><literal type="number" pos:start="123:67" pos:end="123:67">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:117"><decl pos:start="125:9" pos:end="125:116"><type pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:15">int64_t</name></type> <name pos:start="125:17" pos:end="125:26">start_time</name> <init pos:start="125:28" pos:end="125:116">= <expr pos:start="125:30" pos:end="125:116"><call pos:start="125:30" pos:end="125:116"><name pos:start="125:30" pos:end="125:41">av_rescale_q</name><argument_list pos:start="125:42" pos:end="125:116">(<argument pos:start="125:43" pos:end="125:73"><expr pos:start="125:43" pos:end="125:73"><name pos:start="125:43" pos:end="125:67"><name pos:start="125:43" pos:end="125:44">os</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:54">segments</name><index pos:start="125:55" pos:end="125:67">[<expr pos:start="125:56" pos:end="125:66"><name pos:start="125:56" pos:end="125:66">start_index</name></expr>]</index></name><operator pos:start="125:68" pos:end="125:69">-&gt;</operator><name pos:start="125:70" pos:end="125:73">time</name></expr></argument>, <argument pos:start="125:76" pos:end="125:99"><expr pos:start="125:76" pos:end="125:99"><name pos:start="125:76" pos:end="125:88"><name pos:start="125:76" pos:end="125:76">s</name><operator pos:start="125:77" pos:end="125:78">-&gt;</operator><name pos:start="125:79" pos:end="125:85">streams</name><index pos:start="125:86" pos:end="125:88">[<expr pos:start="125:87" pos:end="125:87"><literal type="number" pos:start="125:87" pos:end="125:87">0</literal></expr>]</index></name><operator pos:start="125:89" pos:end="125:90">-&gt;</operator><name pos:start="125:91" pos:end="125:99">time_base</name></expr></argument>, <argument pos:start="125:102" pos:end="125:115"><expr pos:start="125:102" pos:end="125:115"><name pos:start="125:102" pos:end="125:115">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:47"><expr pos:start="127:9" pos:end="127:46"><call pos:start="127:9" pos:end="127:46"><name pos:start="127:9" pos:end="127:19">avio_printf</name><argument_list pos:start="127:20" pos:end="127:46">(<argument pos:start="127:21" pos:end="127:23"><expr pos:start="127:21" pos:end="127:23"><name pos:start="127:21" pos:end="127:23">out</name></expr></argument>, <argument pos:start="127:26" pos:end="127:45"><expr pos:start="127:26" pos:end="127:45"><literal type="string" pos:start="127:26" pos:end="127:45">"\t&lt;Period start=\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:36"><expr pos:start="129:9" pos:end="129:35"><call pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:18">write_time</name><argument_list pos:start="129:19" pos:end="129:35">(<argument pos:start="129:20" pos:end="129:22"><expr pos:start="129:20" pos:end="129:22"><name pos:start="129:20" pos:end="129:22">out</name></expr></argument>, <argument pos:start="129:25" pos:end="129:34"><expr pos:start="129:25" pos:end="129:34"><name pos:start="129:25" pos:end="129:34">start_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:34"><expr pos:start="131:9" pos:end="131:33"><call pos:start="131:9" pos:end="131:33"><name pos:start="131:9" pos:end="131:19">avio_printf</name><argument_list pos:start="131:20" pos:end="131:33">(<argument pos:start="131:21" pos:end="131:23"><expr pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">out</name></expr></argument>, <argument pos:start="131:26" pos:end="131:32"><expr pos:start="131:26" pos:end="131:32"><literal type="string" pos:start="131:26" pos:end="131:32">"\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="137:5">else <block pos:start="133:12" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:58">

        <expr_stmt pos:start="135:9" pos:end="135:58"><expr pos:start="135:9" pos:end="135:57"><call pos:start="135:9" pos:end="135:57"><name pos:start="135:9" pos:end="135:19">avio_printf</name><argument_list pos:start="135:20" pos:end="135:57">(<argument pos:start="135:21" pos:end="135:23"><expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">out</name></expr></argument>, <argument pos:start="135:26" pos:end="135:56"><expr pos:start="135:26" pos:end="135:56"><literal type="string" pos:start="135:26" pos:end="135:56">"\t&lt;Period start=\"PT0.0S\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="141:5" pos:end="165:5"><if pos:start="141:5" pos:end="165:5">if <condition pos:start="141:8" pos:end="141:21">(<expr pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:9">c</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:20">has_video</name></name></expr>)</condition> <block pos:start="141:23" pos:end="165:5">{<block_content pos:start="143:9" pos:end="163:51">

        <expr_stmt pos:start="143:9" pos:end="143:117"><expr pos:start="143:9" pos:end="143:116"><call pos:start="143:9" pos:end="143:116"><name pos:start="143:9" pos:end="143:19">avio_printf</name><argument_list pos:start="143:20" pos:end="143:116">(<argument pos:start="143:21" pos:end="143:23"><expr pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">out</name></expr></argument>, <argument pos:start="143:26" pos:end="143:115"><expr pos:start="143:26" pos:end="143:115"><literal type="string" pos:start="143:26" pos:end="143:115">"\t\t&lt;AdaptationSet id=\"video\" segmentAlignment=\"true\" bitstreamSwitching=\"true\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="145:9" pos:end="161:9">for <control pos:start="145:13" pos:end="145:43">(<init pos:start="145:14" pos:end="145:19"><expr pos:start="145:14" pos:end="145:18"><name pos:start="145:14" pos:end="145:14">i</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</init> <condition pos:start="145:21" pos:end="145:38"><expr pos:start="145:21" pos:end="145:37"><name pos:start="145:21" pos:end="145:21">i</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <name pos:start="145:25" pos:end="145:37"><name pos:start="145:25" pos:end="145:25">s</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:37">nb_streams</name></name></expr>;</condition> <incr pos:start="145:40" pos:end="145:42"><expr pos:start="145:40" pos:end="145:42"><name pos:start="145:40" pos:end="145:40">i</name><operator pos:start="145:41" pos:end="145:42">++</operator></expr></incr>)</control> <block pos:start="145:45" pos:end="161:9">{<block_content pos:start="147:13" pos:end="159:58">

            <decl_stmt pos:start="147:13" pos:end="147:41"><decl pos:start="147:13" pos:end="147:40"><type pos:start="147:13" pos:end="147:22"><name pos:start="147:13" pos:end="147:20">AVStream</name> <modifier pos:start="147:22" pos:end="147:22">*</modifier></type><name pos:start="147:23" pos:end="147:24">st</name> <init pos:start="147:26" pos:end="147:40">= <expr pos:start="147:28" pos:end="147:40"><name pos:start="147:28" pos:end="147:40"><name pos:start="147:28" pos:end="147:28">s</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:37">streams</name><index pos:start="147:38" pos:end="147:40">[<expr pos:start="147:39" pos:end="147:39"><name pos:start="147:39" pos:end="147:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:46"><decl pos:start="149:13" pos:end="149:45"><type pos:start="149:13" pos:end="149:26"><name pos:start="149:13" pos:end="149:24">OutputStream</name> <modifier pos:start="149:26" pos:end="149:26">*</modifier></type><name pos:start="149:27" pos:end="149:28">os</name> <init pos:start="149:30" pos:end="149:45">= <expr pos:start="149:32" pos:end="149:45"><operator pos:start="149:32" pos:end="149:32">&amp;</operator><name pos:start="149:33" pos:end="149:45"><name pos:start="149:33" pos:end="149:33">c</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:42">streams</name><index pos:start="149:43" pos:end="149:45">[<expr pos:start="149:44" pos:end="149:44"><name pos:start="149:44" pos:end="149:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="151:13" pos:end="153:25"><if pos:start="151:13" pos:end="153:25">if <condition pos:start="151:16" pos:end="151:71">(<expr pos:start="151:17" pos:end="151:70"><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:26">streams</name><index pos:start="151:27" pos:end="151:29">[<expr pos:start="151:28" pos:end="151:28"><name pos:start="151:28" pos:end="151:28">i</name></expr>]</index></name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:48"><name pos:start="151:32" pos:end="151:36">codec</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:48">codec_type</name></name> <operator pos:start="151:50" pos:end="151:51">!=</operator> <name pos:start="151:53" pos:end="151:70">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:25"><block_content pos:start="153:17" pos:end="153:25">

                <continue pos:start="153:17" pos:end="153:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:207"><expr pos:start="155:13" pos:end="155:206"><call pos:start="155:13" pos:end="155:206"><name pos:start="155:13" pos:end="155:23">avio_printf</name><argument_list pos:start="155:24" pos:end="155:206">(<argument pos:start="155:25" pos:end="155:27"><expr pos:start="155:25" pos:end="155:27"><name pos:start="155:25" pos:end="155:27">out</name></expr></argument>, <argument pos:start="155:30" pos:end="155:131"><expr pos:start="155:30" pos:end="155:131"><literal type="string" pos:start="155:30" pos:end="155:131">"\t\t\t&lt;Representation id=\"%d\" mimeType=\"video/mp4\" codecs=\"%s\"%s width=\"%d\" height=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="155:134" pos:end="155:134"><expr pos:start="155:134" pos:end="155:134"><name pos:start="155:134" pos:end="155:134">i</name></expr></argument>, <argument pos:start="155:137" pos:end="155:149"><expr pos:start="155:137" pos:end="155:149"><name pos:start="155:137" pos:end="155:149"><name pos:start="155:137" pos:end="155:138">os</name><operator pos:start="155:139" pos:end="155:140">-&gt;</operator><name pos:start="155:141" pos:end="155:149">codec_str</name></name></expr></argument>, <argument pos:start="155:152" pos:end="155:168"><expr pos:start="155:152" pos:end="155:168"><name pos:start="155:152" pos:end="155:168"><name pos:start="155:152" pos:end="155:153">os</name><operator pos:start="155:154" pos:end="155:155">-&gt;</operator><name pos:start="155:156" pos:end="155:168">bandwidth_str</name></name></expr></argument>, <argument pos:start="155:171" pos:end="155:186"><expr pos:start="155:171" pos:end="155:186"><name pos:start="155:171" pos:end="155:186"><name pos:start="155:171" pos:end="155:172">st</name><operator pos:start="155:173" pos:end="155:174">-&gt;</operator><name pos:start="155:175" pos:end="155:179">codec</name><operator pos:start="155:180" pos:end="155:181">-&gt;</operator><name pos:start="155:182" pos:end="155:186">width</name></name></expr></argument>, <argument pos:start="155:189" pos:end="155:205"><expr pos:start="155:189" pos:end="155:205"><name pos:start="155:189" pos:end="155:205"><name pos:start="155:189" pos:end="155:190">st</name><operator pos:start="155:191" pos:end="155:192">-&gt;</operator><name pos:start="155:193" pos:end="155:197">codec</name><operator pos:start="155:198" pos:end="155:199">-&gt;</operator><name pos:start="155:200" pos:end="155:205">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:56"><expr pos:start="157:13" pos:end="157:55"><call pos:start="157:13" pos:end="157:55"><name pos:start="157:13" pos:end="157:31">output_segment_list</name><argument_list pos:start="157:32" pos:end="157:55">(<argument pos:start="157:33" pos:end="157:46"><expr pos:start="157:33" pos:end="157:46"><operator pos:start="157:33" pos:end="157:33">&amp;</operator><name pos:start="157:34" pos:end="157:46"><name pos:start="157:34" pos:end="157:34">c</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:43">streams</name><index pos:start="157:44" pos:end="157:46">[<expr pos:start="157:45" pos:end="157:45"><name pos:start="157:45" pos:end="157:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="157:49" pos:end="157:51"><expr pos:start="157:49" pos:end="157:51"><name pos:start="157:49" pos:end="157:51">out</name></expr></argument>, <argument pos:start="157:54" pos:end="157:54"><expr pos:start="157:54" pos:end="157:54"><name pos:start="157:54" pos:end="157:54">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:58"><expr pos:start="159:13" pos:end="159:57"><call pos:start="159:13" pos:end="159:57"><name pos:start="159:13" pos:end="159:23">avio_printf</name><argument_list pos:start="159:24" pos:end="159:57">(<argument pos:start="159:25" pos:end="159:27"><expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:27">out</name></expr></argument>, <argument pos:start="159:30" pos:end="159:56"><expr pos:start="159:30" pos:end="159:56"><literal type="string" pos:start="159:30" pos:end="159:56">"\t\t\t&lt;/Representation&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="163:9" pos:end="163:51"><expr pos:start="163:9" pos:end="163:50"><call pos:start="163:9" pos:end="163:50"><name pos:start="163:9" pos:end="163:19">avio_printf</name><argument_list pos:start="163:20" pos:end="163:50">(<argument pos:start="163:21" pos:end="163:23"><expr pos:start="163:21" pos:end="163:23"><name pos:start="163:21" pos:end="163:23">out</name></expr></argument>, <argument pos:start="163:26" pos:end="163:49"><expr pos:start="163:26" pos:end="163:49"><literal type="string" pos:start="163:26" pos:end="163:49">"\t\t&lt;/AdaptationSet&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="167:5" pos:end="193:5"><if pos:start="167:5" pos:end="193:5">if <condition pos:start="167:8" pos:end="167:21">(<expr pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:9">c</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:20">has_audio</name></name></expr>)</condition> <block pos:start="167:23" pos:end="193:5">{<block_content pos:start="169:9" pos:end="191:51">

        <expr_stmt pos:start="169:9" pos:end="169:117"><expr pos:start="169:9" pos:end="169:116"><call pos:start="169:9" pos:end="169:116"><name pos:start="169:9" pos:end="169:19">avio_printf</name><argument_list pos:start="169:20" pos:end="169:116">(<argument pos:start="169:21" pos:end="169:23"><expr pos:start="169:21" pos:end="169:23"><name pos:start="169:21" pos:end="169:23">out</name></expr></argument>, <argument pos:start="169:26" pos:end="169:115"><expr pos:start="169:26" pos:end="169:115"><literal type="string" pos:start="169:26" pos:end="169:115">"\t\t&lt;AdaptationSet id=\"audio\" segmentAlignment=\"true\" bitstreamSwitching=\"true\"&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="171:9" pos:end="189:9">for <control pos:start="171:13" pos:end="171:43">(<init pos:start="171:14" pos:end="171:19"><expr pos:start="171:14" pos:end="171:18"><name pos:start="171:14" pos:end="171:14">i</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <literal type="number" pos:start="171:18" pos:end="171:18">0</literal></expr>;</init> <condition pos:start="171:21" pos:end="171:38"><expr pos:start="171:21" pos:end="171:37"><name pos:start="171:21" pos:end="171:21">i</name> <operator pos:start="171:23" pos:end="171:23">&lt;</operator> <name pos:start="171:25" pos:end="171:37"><name pos:start="171:25" pos:end="171:25">s</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:37">nb_streams</name></name></expr>;</condition> <incr pos:start="171:40" pos:end="171:42"><expr pos:start="171:40" pos:end="171:42"><name pos:start="171:40" pos:end="171:40">i</name><operator pos:start="171:41" pos:end="171:42">++</operator></expr></incr>)</control> <block pos:start="171:45" pos:end="189:9">{<block_content pos:start="173:13" pos:end="187:58">

            <decl_stmt pos:start="173:13" pos:end="173:41"><decl pos:start="173:13" pos:end="173:40"><type pos:start="173:13" pos:end="173:22"><name pos:start="173:13" pos:end="173:20">AVStream</name> <modifier pos:start="173:22" pos:end="173:22">*</modifier></type><name pos:start="173:23" pos:end="173:24">st</name> <init pos:start="173:26" pos:end="173:40">= <expr pos:start="173:28" pos:end="173:40"><name pos:start="173:28" pos:end="173:40"><name pos:start="173:28" pos:end="173:28">s</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:37">streams</name><index pos:start="173:38" pos:end="173:40">[<expr pos:start="173:39" pos:end="173:39"><name pos:start="173:39" pos:end="173:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:46"><decl pos:start="175:13" pos:end="175:45"><type pos:start="175:13" pos:end="175:26"><name pos:start="175:13" pos:end="175:24">OutputStream</name> <modifier pos:start="175:26" pos:end="175:26">*</modifier></type><name pos:start="175:27" pos:end="175:28">os</name> <init pos:start="175:30" pos:end="175:45">= <expr pos:start="175:32" pos:end="175:45"><operator pos:start="175:32" pos:end="175:32">&amp;</operator><name pos:start="175:33" pos:end="175:45"><name pos:start="175:33" pos:end="175:33">c</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:42">streams</name><index pos:start="175:43" pos:end="175:45">[<expr pos:start="175:44" pos:end="175:44"><name pos:start="175:44" pos:end="175:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="177:13" pos:end="179:25"><if pos:start="177:13" pos:end="179:25">if <condition pos:start="177:16" pos:end="177:71">(<expr pos:start="177:17" pos:end="177:70"><name pos:start="177:17" pos:end="177:29"><name pos:start="177:17" pos:end="177:17">s</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:26">streams</name><index pos:start="177:27" pos:end="177:29">[<expr pos:start="177:28" pos:end="177:28"><name pos:start="177:28" pos:end="177:28">i</name></expr>]</index></name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:48"><name pos:start="177:32" pos:end="177:36">codec</name><operator pos:start="177:37" pos:end="177:38">-&gt;</operator><name pos:start="177:39" pos:end="177:48">codec_type</name></name> <operator pos:start="177:50" pos:end="177:51">!=</operator> <name pos:start="177:53" pos:end="177:70">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:25"><block_content pos:start="179:17" pos:end="179:25">

                <continue pos:start="179:17" pos:end="179:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:192"><expr pos:start="181:13" pos:end="181:191"><call pos:start="181:13" pos:end="181:191"><name pos:start="181:13" pos:end="181:23">avio_printf</name><argument_list pos:start="181:24" pos:end="181:191">(<argument pos:start="181:25" pos:end="181:27"><expr pos:start="181:25" pos:end="181:27"><name pos:start="181:25" pos:end="181:27">out</name></expr></argument>, <argument pos:start="181:30" pos:end="181:129"><expr pos:start="181:30" pos:end="181:129"><literal type="string" pos:start="181:30" pos:end="181:129">"\t\t\t&lt;Representation id=\"%d\" mimeType=\"audio/mp4\" codecs=\"%s\"%s audioSamplingRate=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="181:132" pos:end="181:132"><expr pos:start="181:132" pos:end="181:132"><name pos:start="181:132" pos:end="181:132">i</name></expr></argument>, <argument pos:start="181:135" pos:end="181:147"><expr pos:start="181:135" pos:end="181:147"><name pos:start="181:135" pos:end="181:147"><name pos:start="181:135" pos:end="181:136">os</name><operator pos:start="181:137" pos:end="181:138">-&gt;</operator><name pos:start="181:139" pos:end="181:147">codec_str</name></name></expr></argument>, <argument pos:start="181:150" pos:end="181:166"><expr pos:start="181:150" pos:end="181:166"><name pos:start="181:150" pos:end="181:166"><name pos:start="181:150" pos:end="181:151">os</name><operator pos:start="181:152" pos:end="181:153">-&gt;</operator><name pos:start="181:154" pos:end="181:166">bandwidth_str</name></name></expr></argument>, <argument pos:start="181:169" pos:end="181:190"><expr pos:start="181:169" pos:end="181:190"><name pos:start="181:169" pos:end="181:190"><name pos:start="181:169" pos:end="181:170">st</name><operator pos:start="181:171" pos:end="181:172">-&gt;</operator><name pos:start="181:173" pos:end="181:177">codec</name><operator pos:start="181:178" pos:end="181:179">-&gt;</operator><name pos:start="181:180" pos:end="181:190">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:177"><expr pos:start="183:13" pos:end="183:176"><call pos:start="183:13" pos:end="183:176"><name pos:start="183:13" pos:end="183:23">avio_printf</name><argument_list pos:start="183:24" pos:end="183:176">(<argument pos:start="183:25" pos:end="183:27"><expr pos:start="183:25" pos:end="183:27"><name pos:start="183:25" pos:end="183:27">out</name></expr></argument>, <argument pos:start="183:30" pos:end="183:154"><expr pos:start="183:30" pos:end="183:154"><literal type="string" pos:start="183:30" pos:end="183:154">"\t\t\t\t&lt;AudioChannelConfiguration schemeIdUri=\"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" value=\"%d\" /&gt;\n"</literal></expr></argument>, <argument pos:start="183:157" pos:end="183:175"><expr pos:start="183:157" pos:end="183:175"><name pos:start="183:157" pos:end="183:175"><name pos:start="183:157" pos:end="183:158">st</name><operator pos:start="183:159" pos:end="183:160">-&gt;</operator><name pos:start="183:161" pos:end="183:165">codec</name><operator pos:start="183:166" pos:end="183:167">-&gt;</operator><name pos:start="183:168" pos:end="183:175">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:56"><expr pos:start="185:13" pos:end="185:55"><call pos:start="185:13" pos:end="185:55"><name pos:start="185:13" pos:end="185:31">output_segment_list</name><argument_list pos:start="185:32" pos:end="185:55">(<argument pos:start="185:33" pos:end="185:46"><expr pos:start="185:33" pos:end="185:46"><operator pos:start="185:33" pos:end="185:33">&amp;</operator><name pos:start="185:34" pos:end="185:46"><name pos:start="185:34" pos:end="185:34">c</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:43">streams</name><index pos:start="185:44" pos:end="185:46">[<expr pos:start="185:45" pos:end="185:45"><name pos:start="185:45" pos:end="185:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="185:49" pos:end="185:51"><expr pos:start="185:49" pos:end="185:51"><name pos:start="185:49" pos:end="185:51">out</name></expr></argument>, <argument pos:start="185:54" pos:end="185:54"><expr pos:start="185:54" pos:end="185:54"><name pos:start="185:54" pos:end="185:54">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:58"><expr pos:start="187:13" pos:end="187:57"><call pos:start="187:13" pos:end="187:57"><name pos:start="187:13" pos:end="187:23">avio_printf</name><argument_list pos:start="187:24" pos:end="187:57">(<argument pos:start="187:25" pos:end="187:27"><expr pos:start="187:25" pos:end="187:27"><name pos:start="187:25" pos:end="187:27">out</name></expr></argument>, <argument pos:start="187:30" pos:end="187:56"><expr pos:start="187:30" pos:end="187:56"><literal type="string" pos:start="187:30" pos:end="187:56">"\t\t\t&lt;/Representation&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="191:9" pos:end="191:51"><expr pos:start="191:9" pos:end="191:50"><call pos:start="191:9" pos:end="191:50"><name pos:start="191:9" pos:end="191:19">avio_printf</name><argument_list pos:start="191:20" pos:end="191:50">(<argument pos:start="191:21" pos:end="191:23"><expr pos:start="191:21" pos:end="191:23"><name pos:start="191:21" pos:end="191:23">out</name></expr></argument>, <argument pos:start="191:26" pos:end="191:49"><expr pos:start="191:26" pos:end="191:49"><literal type="string" pos:start="191:26" pos:end="191:49">"\t\t&lt;/AdaptationSet&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:38"><expr pos:start="195:5" pos:end="195:37"><call pos:start="195:5" pos:end="195:37"><name pos:start="195:5" pos:end="195:15">avio_printf</name><argument_list pos:start="195:16" pos:end="195:37">(<argument pos:start="195:17" pos:end="195:19"><expr pos:start="195:17" pos:end="195:19"><name pos:start="195:17" pos:end="195:19">out</name></expr></argument>, <argument pos:start="195:22" pos:end="195:36"><expr pos:start="195:22" pos:end="195:36"><literal type="string" pos:start="195:22" pos:end="195:36">"\t&lt;/Period&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:33"><expr pos:start="197:5" pos:end="197:32"><call pos:start="197:5" pos:end="197:32"><name pos:start="197:5" pos:end="197:15">avio_printf</name><argument_list pos:start="197:16" pos:end="197:32">(<argument pos:start="197:17" pos:end="197:19"><expr pos:start="197:17" pos:end="197:19"><name pos:start="197:17" pos:end="197:19">out</name></expr></argument>, <argument pos:start="197:22" pos:end="197:31"><expr pos:start="197:22" pos:end="197:31"><literal type="string" pos:start="197:22" pos:end="197:31">"&lt;/MPD&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:20"><expr pos:start="199:5" pos:end="199:19"><call pos:start="199:5" pos:end="199:19"><name pos:start="199:5" pos:end="199:14">avio_flush</name><argument_list pos:start="199:15" pos:end="199:19">(<argument pos:start="199:16" pos:end="199:18"><expr pos:start="199:16" pos:end="199:18"><name pos:start="199:16" pos:end="199:18">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:20"><expr pos:start="201:5" pos:end="201:19"><call pos:start="201:5" pos:end="201:19"><name pos:start="201:5" pos:end="201:14">avio_close</name><argument_list pos:start="201:15" pos:end="201:19">(<argument pos:start="201:16" pos:end="201:18"><expr pos:start="201:16" pos:end="201:18"><name pos:start="201:16" pos:end="201:18">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="203:5" pos:end="203:52">return <expr pos:start="203:12" pos:end="203:51"><call pos:start="203:12" pos:end="203:51"><name pos:start="203:12" pos:end="203:20">ff_rename</name><argument_list pos:start="203:21" pos:end="203:51">(<argument pos:start="203:22" pos:end="203:34"><expr pos:start="203:22" pos:end="203:34"><name pos:start="203:22" pos:end="203:34">temp_filename</name></expr></argument>, <argument pos:start="203:37" pos:end="203:47"><expr pos:start="203:37" pos:end="203:47"><name pos:start="203:37" pos:end="203:47"><name pos:start="203:37" pos:end="203:37">s</name><operator pos:start="203:38" pos:end="203:39">-&gt;</operator><name pos:start="203:40" pos:end="203:47">filename</name></name></expr></argument>, <argument pos:start="203:50" pos:end="203:50"><expr pos:start="203:50" pos:end="203:50"><name pos:start="203:50" pos:end="203:50">s</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
