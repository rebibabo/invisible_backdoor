<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2379.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:54"><name pos:start="1:1" pos:end="1:10">start_list</name><argument_list pos:start="1:11" pos:end="1:54">(<argument pos:start="1:12" pos:end="1:21">Visitor *v</argument>, <argument pos:start="1:24" pos:end="1:39">const char *name</argument>, <argument pos:start="1:42" pos:end="1:53">Error **errp</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">StringInputVisitor</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">siv</name> <init pos:start="5:29" pos:end="5:39">= <expr pos:start="5:31" pos:end="5:39"><call pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:36">to_siv</name><argument_list pos:start="5:37" pos:end="5:39">(<argument pos:start="5:38" pos:end="5:38"><expr pos:start="5:38" pos:end="5:38"><name pos:start="5:38" pos:end="5:38">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><call pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:13">parse_str</name><argument_list pos:start="9:14" pos:end="9:24">(<argument pos:start="9:15" pos:end="9:17"><expr pos:start="9:15" pos:end="9:17"><name pos:start="9:15" pos:end="9:17">siv</name></expr></argument>, <argument pos:start="9:20" pos:end="9:23"><expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:7">siv</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:18">cur_range</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:46"><name pos:start="13:22" pos:end="13:33">g_list_first</name><argument_list pos:start="13:34" pos:end="13:46">(<argument pos:start="13:35" pos:end="13:45"><expr pos:start="13:35" pos:end="13:45"><name pos:start="13:35" pos:end="13:45"><name pos:start="13:35" pos:end="13:37">siv</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:45">ranges</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">siv</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:22">cur_range</name></name></expr>)</condition> <block pos:start="15:25" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:9">

        <decl_stmt pos:start="17:9" pos:end="17:40"><decl pos:start="17:9" pos:end="17:39"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:13">Range</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:16">r</name> <init pos:start="17:18" pos:end="17:39">= <expr pos:start="17:20" pos:end="17:39"><name pos:start="17:20" pos:end="17:39"><name pos:start="17:20" pos:end="17:22">siv</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:33">cur_range</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:39">data</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:14">(<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">r</name></expr>)</condition> <block pos:start="19:16" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:32">

            <expr_stmt pos:start="21:13" pos:end="21:32"><expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">siv</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">cur</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:24">r</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:31">begin</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
