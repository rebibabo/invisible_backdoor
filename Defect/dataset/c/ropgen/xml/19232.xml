<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19232.c" pos:tabs="8"><function pos:start="1:1" pos:end="847:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_hevc_decode_nal_sps</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">HEVCContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="847:1">{<block_content pos:start="5:5" pos:end="845:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:30"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:28">AVPixFmtDescriptor</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:38">= <expr pos:start="7:25" pos:end="7:38"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">HEVClc</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">sps_id</name> <init pos:start="11:25" pos:end="11:27">= <expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:46">log2_diff_max_min_transform_block_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:69"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:24">bit_depth_chroma</name></decl>, <decl pos:start="15:27" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:31">start</name></decl>, <decl pos:start="15:34" pos:end="15:44"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:34" pos:end="15:44">vui_present</name></decl>, <decl pos:start="15:47" pos:end="15:68"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:47" pos:end="15:68">sublayer_ordering_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">HEVCSPS</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">sps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:58"><decl pos:start="23:5" pos:end="23:57"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">AVBufferRef</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:24">sps_buf</name> <init pos:start="23:26" pos:end="23:57">= <expr pos:start="23:28" pos:end="23:57"><call pos:start="23:28" pos:end="23:57"><name pos:start="23:28" pos:end="23:43">av_buffer_allocz</name><argument_list pos:start="23:44" pos:end="23:57">(<argument pos:start="23:45" pos:end="23:56"><expr pos:start="23:45" pos:end="23:56"><sizeof pos:start="23:45" pos:end="23:56">sizeof<argument_list pos:start="23:51" pos:end="23:56">(<argument pos:start="23:52" pos:end="23:55"><expr pos:start="23:52" pos:end="23:55"><operator pos:start="23:52" pos:end="23:52">*</operator><name pos:start="23:53" pos:end="23:55">sps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:16">sps_buf</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:7">sps</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <operator pos:start="31:11" pos:end="31:11">(</operator><name pos:start="31:12" pos:end="31:18">HEVCSPS</name><operator pos:start="31:19" pos:end="31:19">*</operator><operator pos:start="31:20" pos:end="31:20">)</operator><name pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:27">sps_buf</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><call pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:10">av_log</name><argument_list pos:start="35:11" pos:end="35:52">(<argument pos:start="35:12" pos:end="35:19"><expr pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:19">avctx</name></name></expr></argument>, <argument pos:start="35:22" pos:end="35:33"><expr pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="35:36" pos:end="35:51"><expr pos:start="35:36" pos:end="35:51"><literal type="string" pos:start="35:36" pos:end="35:51">"Decoding SPS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="39:5" pos:end="39:23">// Coded parameters</comment>



    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:7">sps</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:15">vps_id</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:33"><name pos:start="43:19" pos:end="43:26">get_bits</name><argument_list pos:start="43:27" pos:end="43:33">(<argument pos:start="43:28" pos:end="43:29"><expr pos:start="43:28" pos:end="43:29"><name pos:start="43:28" pos:end="43:29">gb</name></expr></argument>, <argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><literal type="number" pos:start="43:32" pos:end="43:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:37">(<expr pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:11">sps</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:19">vps_id</name></name> <operator pos:start="45:21" pos:end="45:22">&gt;=</operator> <name pos:start="45:24" pos:end="45:36">MAX_VPS_COUNT</name></expr>)</condition> <block pos:start="45:39" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:17">

        <expr_stmt pos:start="47:9" pos:end="47:81"><expr pos:start="47:9" pos:end="47:80"><call pos:start="47:9" pos:end="47:80"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:80">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:66"><expr pos:start="47:40" pos:end="47:66"><literal type="string" pos:start="47:40" pos:end="47:66">"VPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="47:69" pos:end="47:79"><expr pos:start="47:69" pos:end="47:79"><name pos:start="47:69" pos:end="47:79"><name pos:start="47:69" pos:end="47:71">sps</name><operator pos:start="47:72" pos:end="47:73">-&gt;</operator><name pos:start="47:74" pos:end="47:79">vps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:17">goto <name pos:start="51:14" pos:end="51:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="57:34">(<expr pos:start="57:9" pos:end="57:33"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:33"><name pos:start="57:10" pos:end="57:10">s</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:20">vps_list</name><index pos:start="57:21" pos:end="57:33">[<expr pos:start="57:22" pos:end="57:32"><name pos:start="57:22" pos:end="57:32"><name pos:start="57:22" pos:end="57:24">sps</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:32">vps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="57:36" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:17">

        <expr_stmt pos:start="59:9" pos:end="61:28"><expr pos:start="59:9" pos:end="61:27"><call pos:start="59:9" pos:end="61:27"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="61:27">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">avctx</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:40" pos:end="59:64"><expr pos:start="59:40" pos:end="59:64"><literal type="string" pos:start="59:40" pos:end="59:64">"VPS %d does not exist\n"</literal></expr></argument>,

               <argument pos:start="61:16" pos:end="61:26"><expr pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:18">sps</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:26">vps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:46"><expr pos:start="71:5" pos:end="71:45"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:7">sps</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:23">max_sub_layers</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:41"><name pos:start="71:27" pos:end="71:34">get_bits</name><argument_list pos:start="71:35" pos:end="71:41">(<argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">gb</name></expr></argument>, <argument pos:start="71:40" pos:end="71:40"><expr pos:start="71:40" pos:end="71:40"><literal type="number" pos:start="71:40" pos:end="71:40">3</literal></expr></argument>)</argument_list></call> <operator pos:start="71:43" pos:end="71:43">+</operator> <literal type="number" pos:start="71:45" pos:end="71:45">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="83:5"><if pos:start="73:5" pos:end="83:5">if <condition pos:start="73:8" pos:end="73:45">(<expr pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:11">sps</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:27">max_sub_layers</name></name> <operator pos:start="73:29" pos:end="73:29">&gt;</operator> <name pos:start="73:31" pos:end="73:44">MAX_SUB_LAYERS</name></expr>)</condition> <block pos:start="73:47" pos:end="83:5">{<block_content pos:start="75:9" pos:end="81:17">

        <expr_stmt pos:start="75:9" pos:end="77:36"><expr pos:start="75:9" pos:end="77:35"><call pos:start="75:9" pos:end="77:35"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="77:35">(<argument pos:start="75:16" pos:end="75:23"><expr pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">avctx</name></name></expr></argument>, <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:40" pos:end="75:78"><expr pos:start="75:40" pos:end="75:78"><literal type="string" pos:start="75:40" pos:end="75:78">"sps_max_sub_layers out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="77:16" pos:end="77:34"><expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:18">sps</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:34">max_sub_layers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:17">goto <name pos:start="81:14" pos:end="81:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:19"><expr pos:start="87:5" pos:end="87:18"><call pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:14">skip_bits1</name><argument_list pos:start="87:15" pos:end="87:18">(<argument pos:start="87:16" pos:end="87:17"><expr pos:start="87:16" pos:end="87:17"><name pos:start="87:16" pos:end="87:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="87:21" pos:end="87:47">// temporal_id_nesting_flag</comment>



    <if_stmt pos:start="91:5" pos:end="93:17"><if pos:start="91:5" pos:end="93:17">if <condition pos:start="91:8" pos:end="91:57">(<expr pos:start="91:9" pos:end="91:56"><call pos:start="91:9" pos:end="91:52"><name pos:start="91:9" pos:end="91:17">parse_ptl</name><argument_list pos:start="91:18" pos:end="91:52">(<argument pos:start="91:19" pos:end="91:19"><expr pos:start="91:19" pos:end="91:19"><name pos:start="91:19" pos:end="91:19">s</name></expr></argument>, <argument pos:start="91:22" pos:end="91:30"><expr pos:start="91:22" pos:end="91:30"><operator pos:start="91:22" pos:end="91:22">&amp;</operator><name pos:start="91:23" pos:end="91:30"><name pos:start="91:23" pos:end="91:25">sps</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:30">ptl</name></name></expr></argument>, <argument pos:start="91:33" pos:end="91:51"><expr pos:start="91:33" pos:end="91:51"><name pos:start="91:33" pos:end="91:51"><name pos:start="91:33" pos:end="91:35">sps</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:51">max_sub_layers</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:54" pos:end="91:54">&lt;</operator> <literal type="number" pos:start="91:56" pos:end="91:56">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:17"><block_content pos:start="93:9" pos:end="93:17">

        <goto pos:start="93:9" pos:end="93:17">goto <name pos:start="93:14" pos:end="93:16">err</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:36"><expr pos:start="97:5" pos:end="97:35"><name pos:start="97:5" pos:end="97:10">sps_id</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <call pos:start="97:14" pos:end="97:35"><name pos:start="97:14" pos:end="97:31">get_ue_golomb_long</name><argument_list pos:start="97:32" pos:end="97:35">(<argument pos:start="97:33" pos:end="97:34"><expr pos:start="97:33" pos:end="97:34"><name pos:start="97:33" pos:end="97:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:32">(<expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:14">sps_id</name> <operator pos:start="99:16" pos:end="99:17">&gt;=</operator> <name pos:start="99:19" pos:end="99:31">MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="99:34" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:17">

        <expr_stmt pos:start="101:9" pos:end="101:76"><expr pos:start="101:9" pos:end="101:75"><call pos:start="101:9" pos:end="101:75"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:75">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="101:66"><expr pos:start="101:40" pos:end="101:66"><literal type="string" pos:start="101:40" pos:end="101:66">"SPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="101:69" pos:end="101:74"><expr pos:start="101:69" pos:end="101:74"><name pos:start="101:69" pos:end="101:74">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:34"><expr pos:start="103:9" pos:end="103:33"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:17">goto <name pos:start="105:14" pos:end="105:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:52"><expr pos:start="111:5" pos:end="111:51"><name pos:start="111:5" pos:end="111:26"><name pos:start="111:5" pos:end="111:7">sps</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:26">chroma_format_idc</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <call pos:start="111:30" pos:end="111:51"><name pos:start="111:30" pos:end="111:47">get_ue_golomb_long</name><argument_list pos:start="111:48" pos:end="111:51">(<argument pos:start="111:49" pos:end="111:50"><expr pos:start="111:49" pos:end="111:50"><name pos:start="111:49" pos:end="111:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="117:56"><if pos:start="115:5" pos:end="117:56">if <condition pos:start="115:8" pos:end="115:36">(<expr pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:11">sps</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:30">chroma_format_idc</name></name> <operator pos:start="115:32" pos:end="115:33">==</operator> <literal type="number" pos:start="115:35" pos:end="115:35">3</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:56"><block_content pos:start="117:9" pos:end="117:56">

        <expr_stmt pos:start="117:9" pos:end="117:56"><expr pos:start="117:9" pos:end="117:55"><name pos:start="117:9" pos:end="117:39"><name pos:start="117:9" pos:end="117:11">sps</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:39">separate_colour_plane_flag</name></name> <operator pos:start="117:41" pos:end="117:41">=</operator> <call pos:start="117:43" pos:end="117:55"><name pos:start="117:43" pos:end="117:51">get_bits1</name><argument_list pos:start="117:52" pos:end="117:55">(<argument pos:start="117:53" pos:end="117:54"><expr pos:start="117:53" pos:end="117:54"><name pos:start="117:53" pos:end="117:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="123:35"><if pos:start="121:5" pos:end="123:35">if <condition pos:start="121:8" pos:end="121:40">(<expr pos:start="121:9" pos:end="121:39"><name pos:start="121:9" pos:end="121:39"><name pos:start="121:9" pos:end="121:11">sps</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:39">separate_colour_plane_flag</name></name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:35"><block_content pos:start="123:9" pos:end="123:35">

        <expr_stmt pos:start="123:9" pos:end="123:35"><expr pos:start="123:9" pos:end="123:34"><name pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:11">sps</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:30">chroma_format_idc</name></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:41"><expr pos:start="127:5" pos:end="127:40"><name pos:start="127:5" pos:end="127:14"><name pos:start="127:5" pos:end="127:7">sps</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:14">width</name></name>  <operator pos:start="127:17" pos:end="127:17">=</operator> <call pos:start="127:19" pos:end="127:40"><name pos:start="127:19" pos:end="127:36">get_ue_golomb_long</name><argument_list pos:start="127:37" pos:end="127:40">(<argument pos:start="127:38" pos:end="127:39"><expr pos:start="127:38" pos:end="127:39"><name pos:start="127:38" pos:end="127:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:41"><expr pos:start="129:5" pos:end="129:40"><name pos:start="129:5" pos:end="129:15"><name pos:start="129:5" pos:end="129:7">sps</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:15">height</name></name> <operator pos:start="129:17" pos:end="129:17">=</operator> <call pos:start="129:19" pos:end="129:40"><name pos:start="129:19" pos:end="129:36">get_ue_golomb_long</name><argument_list pos:start="129:37" pos:end="129:40">(<argument pos:start="129:38" pos:end="129:39"><expr pos:start="129:38" pos:end="129:39"><name pos:start="129:38" pos:end="129:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="135:17"><if pos:start="131:5" pos:end="135:17">if <condition pos:start="131:8" pos:end="133:66">(<expr pos:start="131:9" pos:end="133:65"><operator pos:start="131:9" pos:end="131:9">(</operator><name pos:start="131:10" pos:end="131:12">ret</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <call pos:start="131:16" pos:end="133:60"><name pos:start="131:16" pos:end="131:34">av_image_check_size</name><argument_list pos:start="131:35" pos:end="133:60">(<argument pos:start="131:36" pos:end="131:45"><expr pos:start="131:36" pos:end="131:45"><name pos:start="131:36" pos:end="131:45"><name pos:start="131:36" pos:end="131:38">sps</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:45">width</name></name></expr></argument>,

                                   <argument pos:start="133:36" pos:end="133:46"><expr pos:start="133:36" pos:end="133:46"><name pos:start="133:36" pos:end="133:46"><name pos:start="133:36" pos:end="133:38">sps</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:46">height</name></name></expr></argument>, <argument pos:start="133:49" pos:end="133:49"><expr pos:start="133:49" pos:end="133:49"><literal type="number" pos:start="133:49" pos:end="133:49">0</literal></expr></argument>, <argument pos:start="133:52" pos:end="133:59"><expr pos:start="133:52" pos:end="133:59"><name pos:start="133:52" pos:end="133:59"><name pos:start="133:52" pos:end="133:52">s</name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:59">avctx</name></name></expr></argument>)</argument_list></call><operator pos:start="133:61" pos:end="133:61">)</operator> <operator pos:start="133:63" pos:end="133:63">&lt;</operator> <literal type="number" pos:start="133:65" pos:end="133:65">0</literal></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:17"><block_content pos:start="135:9" pos:end="135:17">

        <goto pos:start="135:9" pos:end="135:17">goto <name pos:start="135:14" pos:end="135:16">err</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="183:5"><if pos:start="139:5" pos:end="183:5">if <condition pos:start="139:8" pos:end="139:22">(<expr pos:start="139:9" pos:end="139:21"><call pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:17">get_bits1</name><argument_list pos:start="139:18" pos:end="139:21">(<argument pos:start="139:19" pos:end="139:20"><expr pos:start="139:19" pos:end="139:20"><name pos:start="139:19" pos:end="139:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:24" pos:end="183:5">{<block_content pos:start="143:9" pos:end="181:47"> <comment type="line" pos:start="139:26" pos:end="139:48">// pic_conformance_flag</comment>

        <comment type="line" pos:start="141:9" pos:end="141:41">//TODO: * 2 is only valid for 420</comment>

        <expr_stmt pos:start="143:9" pos:end="143:69"><expr pos:start="143:9" pos:end="143:68"><name pos:start="143:9" pos:end="143:37"><name pos:start="143:9" pos:end="143:11">sps</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:25">pic_conf_win</name><operator pos:start="143:26" pos:end="143:26">.</operator><name pos:start="143:27" pos:end="143:37">left_offset</name></name>   <operator pos:start="143:41" pos:end="143:41">=</operator> <call pos:start="143:43" pos:end="143:64"><name pos:start="143:43" pos:end="143:60">get_ue_golomb_long</name><argument_list pos:start="143:61" pos:end="143:64">(<argument pos:start="143:62" pos:end="143:63"><expr pos:start="143:62" pos:end="143:63"><name pos:start="143:62" pos:end="143:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="143:66" pos:end="143:66">*</operator> <literal type="number" pos:start="143:68" pos:end="143:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:69"><expr pos:start="145:9" pos:end="145:68"><name pos:start="145:9" pos:end="145:38"><name pos:start="145:9" pos:end="145:11">sps</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:25">pic_conf_win</name><operator pos:start="145:26" pos:end="145:26">.</operator><name pos:start="145:27" pos:end="145:38">right_offset</name></name>  <operator pos:start="145:41" pos:end="145:41">=</operator> <call pos:start="145:43" pos:end="145:64"><name pos:start="145:43" pos:end="145:60">get_ue_golomb_long</name><argument_list pos:start="145:61" pos:end="145:64">(<argument pos:start="145:62" pos:end="145:63"><expr pos:start="145:62" pos:end="145:63"><name pos:start="145:62" pos:end="145:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="145:66" pos:end="145:66">*</operator> <literal type="number" pos:start="145:68" pos:end="145:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:69"><expr pos:start="147:9" pos:end="147:68"><name pos:start="147:9" pos:end="147:36"><name pos:start="147:9" pos:end="147:11">sps</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:25">pic_conf_win</name><operator pos:start="147:26" pos:end="147:26">.</operator><name pos:start="147:27" pos:end="147:36">top_offset</name></name>    <operator pos:start="147:41" pos:end="147:41">=</operator> <call pos:start="147:43" pos:end="147:64"><name pos:start="147:43" pos:end="147:60">get_ue_golomb_long</name><argument_list pos:start="147:61" pos:end="147:64">(<argument pos:start="147:62" pos:end="147:63"><expr pos:start="147:62" pos:end="147:63"><name pos:start="147:62" pos:end="147:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="147:66" pos:end="147:66">*</operator> <literal type="number" pos:start="147:68" pos:end="147:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:69"><expr pos:start="149:9" pos:end="149:68"><name pos:start="149:9" pos:end="149:39"><name pos:start="149:9" pos:end="149:11">sps</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:25">pic_conf_win</name><operator pos:start="149:26" pos:end="149:26">.</operator><name pos:start="149:27" pos:end="149:39">bottom_offset</name></name> <operator pos:start="149:41" pos:end="149:41">=</operator> <call pos:start="149:43" pos:end="149:64"><name pos:start="149:43" pos:end="149:60">get_ue_golomb_long</name><argument_list pos:start="149:61" pos:end="149:64">(<argument pos:start="149:62" pos:end="149:63"><expr pos:start="149:62" pos:end="149:63"><name pos:start="149:62" pos:end="149:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="149:66" pos:end="149:66">*</operator> <literal type="number" pos:start="149:68" pos:end="149:68">2</literal></expr>;</expr_stmt>



        <if_stmt pos:start="153:9" pos:end="179:9"><if pos:start="153:9" pos:end="179:9">if <condition pos:start="153:12" pos:end="153:55">(<expr pos:start="153:13" pos:end="153:54"><name pos:start="153:13" pos:end="153:28"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:20">avctx</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:28">flags2</name></name> <operator pos:start="153:30" pos:end="153:30">&amp;</operator> <name pos:start="153:32" pos:end="153:54">CODEC_FLAG2_IGNORE_CROP</name></expr>)</condition> <block pos:start="153:57" pos:end="179:9">{<block_content pos:start="155:13" pos:end="177:48">

            <expr_stmt pos:start="155:13" pos:end="167:52"><expr pos:start="155:13" pos:end="167:51"><call pos:start="155:13" pos:end="167:51"><name pos:start="155:13" pos:end="155:18">av_log</name><argument_list pos:start="155:19" pos:end="167:51">(<argument pos:start="155:20" pos:end="155:27"><expr pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:20">s</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:27">avctx</name></name></expr></argument>, <argument pos:start="155:30" pos:end="155:41"><expr pos:start="155:30" pos:end="155:41"><name pos:start="155:30" pos:end="155:41">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="157:20" pos:end="159:62"><expr pos:start="157:20" pos:end="159:62"><literal type="string" pos:start="157:20" pos:end="157:56">"discarding sps conformance window, "</literal>

                   <literal type="string" pos:start="159:20" pos:end="159:62">"original values are l:%u r:%u t:%u b:%u\n"</literal></expr></argument>,

                   <argument pos:start="161:20" pos:end="161:48"><expr pos:start="161:20" pos:end="161:48"><name pos:start="161:20" pos:end="161:48"><name pos:start="161:20" pos:end="161:22">sps</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:36">pic_conf_win</name><operator pos:start="161:37" pos:end="161:37">.</operator><name pos:start="161:38" pos:end="161:48">left_offset</name></name></expr></argument>,

                   <argument pos:start="163:20" pos:end="163:49"><expr pos:start="163:20" pos:end="163:49"><name pos:start="163:20" pos:end="163:49"><name pos:start="163:20" pos:end="163:22">sps</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:36">pic_conf_win</name><operator pos:start="163:37" pos:end="163:37">.</operator><name pos:start="163:38" pos:end="163:49">right_offset</name></name></expr></argument>,

                   <argument pos:start="165:20" pos:end="165:47"><expr pos:start="165:20" pos:end="165:47"><name pos:start="165:20" pos:end="165:47"><name pos:start="165:20" pos:end="165:22">sps</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:36">pic_conf_win</name><operator pos:start="165:37" pos:end="165:37">.</operator><name pos:start="165:38" pos:end="165:47">top_offset</name></name></expr></argument>,

                   <argument pos:start="167:20" pos:end="167:50"><expr pos:start="167:20" pos:end="167:50"><name pos:start="167:20" pos:end="167:50"><name pos:start="167:20" pos:end="167:22">sps</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:36">pic_conf_win</name><operator pos:start="167:37" pos:end="167:37">.</operator><name pos:start="167:38" pos:end="167:50">bottom_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="171:13" pos:end="177:48"><expr pos:start="171:13" pos:end="177:47"><name pos:start="171:13" pos:end="171:41"><name pos:start="171:13" pos:end="171:15">sps</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:29">pic_conf_win</name><operator pos:start="171:30" pos:end="171:30">.</operator><name pos:start="171:31" pos:end="171:41">left_offset</name></name>   <operator pos:start="171:45" pos:end="171:45">=</operator>

            <name pos:start="173:13" pos:end="173:42"><name pos:start="173:13" pos:end="173:15">sps</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:29">pic_conf_win</name><operator pos:start="173:30" pos:end="173:30">.</operator><name pos:start="173:31" pos:end="173:42">right_offset</name></name>  <operator pos:start="173:45" pos:end="173:45">=</operator>

            <name pos:start="175:13" pos:end="175:40"><name pos:start="175:13" pos:end="175:15">sps</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:29">pic_conf_win</name><operator pos:start="175:30" pos:end="175:30">.</operator><name pos:start="175:31" pos:end="175:40">top_offset</name></name>    <operator pos:start="175:45" pos:end="175:45">=</operator>

            <name pos:start="177:13" pos:end="177:43"><name pos:start="177:13" pos:end="177:15">sps</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:29">pic_conf_win</name><operator pos:start="177:30" pos:end="177:30">.</operator><name pos:start="177:31" pos:end="177:43">bottom_offset</name></name> <operator pos:start="177:45" pos:end="177:45">=</operator> <literal type="number" pos:start="177:47" pos:end="177:47">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:47"><expr pos:start="181:9" pos:end="181:46"><name pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:11">sps</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:26">output_window</name></name> <operator pos:start="181:28" pos:end="181:28">=</operator> <name pos:start="181:30" pos:end="181:46"><name pos:start="181:30" pos:end="181:32">sps</name><operator pos:start="181:33" pos:end="181:34">-&gt;</operator><name pos:start="181:35" pos:end="181:46">pic_conf_win</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:50"><expr pos:start="187:5" pos:end="187:49"><name pos:start="187:5" pos:end="187:18"><name pos:start="187:5" pos:end="187:7">sps</name><operator pos:start="187:8" pos:end="187:9">-&gt;</operator><name pos:start="187:10" pos:end="187:18">bit_depth</name></name>   <operator pos:start="187:22" pos:end="187:22">=</operator> <call pos:start="187:24" pos:end="187:45"><name pos:start="187:24" pos:end="187:41">get_ue_golomb_long</name><argument_list pos:start="187:42" pos:end="187:45">(<argument pos:start="187:43" pos:end="187:44"><expr pos:start="187:43" pos:end="187:44"><name pos:start="187:43" pos:end="187:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="187:47" pos:end="187:47">+</operator> <literal type="number" pos:start="187:49" pos:end="187:49">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:50"><expr pos:start="189:5" pos:end="189:49"><name pos:start="189:5" pos:end="189:20">bit_depth_chroma</name> <operator pos:start="189:22" pos:end="189:22">=</operator> <call pos:start="189:24" pos:end="189:45"><name pos:start="189:24" pos:end="189:41">get_ue_golomb_long</name><argument_list pos:start="189:42" pos:end="189:45">(<argument pos:start="189:43" pos:end="189:44"><expr pos:start="189:43" pos:end="189:44"><name pos:start="189:43" pos:end="189:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="189:47" pos:end="189:47">+</operator> <literal type="number" pos:start="189:49" pos:end="189:49">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="205:5"><if pos:start="191:5" pos:end="205:5">if <condition pos:start="191:8" pos:end="191:69">(<expr pos:start="191:9" pos:end="191:68"><name pos:start="191:9" pos:end="191:30"><name pos:start="191:9" pos:end="191:11">sps</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator><name pos:start="191:14" pos:end="191:30">chroma_format_idc</name></name> <operator pos:start="191:32" pos:end="191:33">&amp;&amp;</operator> <name pos:start="191:35" pos:end="191:50">bit_depth_chroma</name> <operator pos:start="191:52" pos:end="191:53">!=</operator> <name pos:start="191:55" pos:end="191:68"><name pos:start="191:55" pos:end="191:57">sps</name><operator pos:start="191:58" pos:end="191:59">-&gt;</operator><name pos:start="191:60" pos:end="191:68">bit_depth</name></name></expr>)</condition> <block pos:start="191:71" pos:end="205:5">{<block_content pos:start="193:9" pos:end="203:17">

        <expr_stmt pos:start="193:9" pos:end="199:49"><expr pos:start="193:9" pos:end="199:48"><call pos:start="193:9" pos:end="199:48"><name pos:start="193:9" pos:end="193:14">av_log</name><argument_list pos:start="193:15" pos:end="199:48">(<argument pos:start="193:16" pos:end="193:23"><expr pos:start="193:16" pos:end="193:23"><name pos:start="193:16" pos:end="193:23"><name pos:start="193:16" pos:end="193:16">s</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:23">avctx</name></name></expr></argument>, <argument pos:start="193:26" pos:end="193:37"><expr pos:start="193:26" pos:end="193:37"><name pos:start="193:26" pos:end="193:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="195:16" pos:end="197:39"><expr pos:start="195:16" pos:end="197:39"><literal type="string" pos:start="195:16" pos:end="195:78">"Luma bit depth (%d) is different from chroma bit depth (%d), "</literal>

               <literal type="string" pos:start="197:16" pos:end="197:39">"this is unsupported.\n"</literal></expr></argument>,

               <argument pos:start="199:16" pos:end="199:29"><expr pos:start="199:16" pos:end="199:29"><name pos:start="199:16" pos:end="199:29"><name pos:start="199:16" pos:end="199:18">sps</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:29">bit_depth</name></name></expr></argument>, <argument pos:start="199:32" pos:end="199:47"><expr pos:start="199:32" pos:end="199:47"><name pos:start="199:32" pos:end="199:47">bit_depth_chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:34"><expr pos:start="201:9" pos:end="201:33"><name pos:start="201:9" pos:end="201:11">ret</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <name pos:start="201:15" pos:end="201:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="203:9" pos:end="203:17">goto <name pos:start="203:14" pos:end="203:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="209:5" pos:end="269:5">switch <condition pos:start="209:12" pos:end="209:27">(<expr pos:start="209:13" pos:end="209:26"><name pos:start="209:13" pos:end="209:26"><name pos:start="209:13" pos:end="209:15">sps</name><operator pos:start="209:16" pos:end="209:17">-&gt;</operator><name pos:start="209:18" pos:end="209:26">bit_depth</name></name></expr>)</condition> <block pos:start="209:29" pos:end="269:5">{<block_content pos:start="211:5" pos:end="267:17">

    <case pos:start="211:5" pos:end="211:11">case <expr pos:start="211:10" pos:end="211:10"><literal type="number" pos:start="211:10" pos:end="211:10">8</literal></expr>:</case>

        <if_stmt pos:start="213:9" pos:end="213:73"><if pos:start="213:9" pos:end="213:73">if <condition pos:start="213:12" pos:end="213:40">(<expr pos:start="213:13" pos:end="213:39"><name pos:start="213:13" pos:end="213:34"><name pos:start="213:13" pos:end="213:15">sps</name><operator pos:start="213:16" pos:end="213:17">-&gt;</operator><name pos:start="213:18" pos:end="213:34">chroma_format_idc</name></name> <operator pos:start="213:36" pos:end="213:37">==</operator> <literal type="number" pos:start="213:39" pos:end="213:39">0</literal></expr>)</condition><block type="pseudo" pos:start="213:42" pos:end="213:73"><block_content pos:start="213:42" pos:end="213:73"> <expr_stmt pos:start="213:42" pos:end="213:73"><expr pos:start="213:42" pos:end="213:72"><name pos:start="213:42" pos:end="213:53"><name pos:start="213:42" pos:end="213:44">sps</name><operator pos:start="213:45" pos:end="213:46">-&gt;</operator><name pos:start="213:47" pos:end="213:53">pix_fmt</name></name> <operator pos:start="213:55" pos:end="213:55">=</operator> <name pos:start="213:57" pos:end="213:72">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="215:9" pos:end="215:75"><if pos:start="215:9" pos:end="215:75">if <condition pos:start="215:12" pos:end="215:40">(<expr pos:start="215:13" pos:end="215:39"><name pos:start="215:13" pos:end="215:34"><name pos:start="215:13" pos:end="215:15">sps</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:34">chroma_format_idc</name></name> <operator pos:start="215:36" pos:end="215:37">==</operator> <literal type="number" pos:start="215:39" pos:end="215:39">1</literal></expr>)</condition><block type="pseudo" pos:start="215:42" pos:end="215:75"><block_content pos:start="215:42" pos:end="215:75"> <expr_stmt pos:start="215:42" pos:end="215:75"><expr pos:start="215:42" pos:end="215:74"><name pos:start="215:42" pos:end="215:53"><name pos:start="215:42" pos:end="215:44">sps</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:53">pix_fmt</name></name> <operator pos:start="215:55" pos:end="215:55">=</operator> <name pos:start="215:57" pos:end="215:74">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="217:9" pos:end="217:75"><if pos:start="217:9" pos:end="217:75">if <condition pos:start="217:12" pos:end="217:40">(<expr pos:start="217:13" pos:end="217:39"><name pos:start="217:13" pos:end="217:34"><name pos:start="217:13" pos:end="217:15">sps</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:34">chroma_format_idc</name></name> <operator pos:start="217:36" pos:end="217:37">==</operator> <literal type="number" pos:start="217:39" pos:end="217:39">2</literal></expr>)</condition><block type="pseudo" pos:start="217:42" pos:end="217:75"><block_content pos:start="217:42" pos:end="217:75"> <expr_stmt pos:start="217:42" pos:end="217:75"><expr pos:start="217:42" pos:end="217:74"><name pos:start="217:42" pos:end="217:53"><name pos:start="217:42" pos:end="217:44">sps</name><operator pos:start="217:45" pos:end="217:46">-&gt;</operator><name pos:start="217:47" pos:end="217:53">pix_fmt</name></name> <operator pos:start="217:55" pos:end="217:55">=</operator> <name pos:start="217:57" pos:end="217:74">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="219:9" pos:end="219:75"><if pos:start="219:9" pos:end="219:75">if <condition pos:start="219:12" pos:end="219:40">(<expr pos:start="219:13" pos:end="219:39"><name pos:start="219:13" pos:end="219:34"><name pos:start="219:13" pos:end="219:15">sps</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:34">chroma_format_idc</name></name> <operator pos:start="219:36" pos:end="219:37">==</operator> <literal type="number" pos:start="219:39" pos:end="219:39">3</literal></expr>)</condition><block type="pseudo" pos:start="219:42" pos:end="219:75"><block_content pos:start="219:42" pos:end="219:75"> <expr_stmt pos:start="219:42" pos:end="219:75"><expr pos:start="219:42" pos:end="219:74"><name pos:start="219:42" pos:end="219:53"><name pos:start="219:42" pos:end="219:44">sps</name><operator pos:start="219:45" pos:end="219:46">-&gt;</operator><name pos:start="219:47" pos:end="219:53">pix_fmt</name></name> <operator pos:start="219:55" pos:end="219:55">=</operator> <name pos:start="219:57" pos:end="219:74">AV_PIX_FMT_YUV444P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

       <break pos:start="221:8" pos:end="221:13">break;</break>

    <case pos:start="223:5" pos:end="223:11">case <expr pos:start="223:10" pos:end="223:10"><literal type="number" pos:start="223:10" pos:end="223:10">9</literal></expr>:</case>

        <if_stmt pos:start="225:9" pos:end="225:74"><if pos:start="225:9" pos:end="225:74">if <condition pos:start="225:12" pos:end="225:40">(<expr pos:start="225:13" pos:end="225:39"><name pos:start="225:13" pos:end="225:34"><name pos:start="225:13" pos:end="225:15">sps</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:34">chroma_format_idc</name></name> <operator pos:start="225:36" pos:end="225:37">==</operator> <literal type="number" pos:start="225:39" pos:end="225:39">0</literal></expr>)</condition><block type="pseudo" pos:start="225:42" pos:end="225:74"><block_content pos:start="225:42" pos:end="225:74"> <expr_stmt pos:start="225:42" pos:end="225:74"><expr pos:start="225:42" pos:end="225:73"><name pos:start="225:42" pos:end="225:53"><name pos:start="225:42" pos:end="225:44">sps</name><operator pos:start="225:45" pos:end="225:46">-&gt;</operator><name pos:start="225:47" pos:end="225:53">pix_fmt</name></name> <operator pos:start="225:55" pos:end="225:55">=</operator> <name pos:start="225:57" pos:end="225:73">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="227:9" pos:end="227:76"><if pos:start="227:9" pos:end="227:76">if <condition pos:start="227:12" pos:end="227:40">(<expr pos:start="227:13" pos:end="227:39"><name pos:start="227:13" pos:end="227:34"><name pos:start="227:13" pos:end="227:15">sps</name><operator pos:start="227:16" pos:end="227:17">-&gt;</operator><name pos:start="227:18" pos:end="227:34">chroma_format_idc</name></name> <operator pos:start="227:36" pos:end="227:37">==</operator> <literal type="number" pos:start="227:39" pos:end="227:39">1</literal></expr>)</condition><block type="pseudo" pos:start="227:42" pos:end="227:76"><block_content pos:start="227:42" pos:end="227:76"> <expr_stmt pos:start="227:42" pos:end="227:76"><expr pos:start="227:42" pos:end="227:75"><name pos:start="227:42" pos:end="227:53"><name pos:start="227:42" pos:end="227:44">sps</name><operator pos:start="227:45" pos:end="227:46">-&gt;</operator><name pos:start="227:47" pos:end="227:53">pix_fmt</name></name> <operator pos:start="227:55" pos:end="227:55">=</operator> <name pos:start="227:57" pos:end="227:75">AV_PIX_FMT_YUV420P9</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="229:9" pos:end="229:76"><if pos:start="229:9" pos:end="229:76">if <condition pos:start="229:12" pos:end="229:40">(<expr pos:start="229:13" pos:end="229:39"><name pos:start="229:13" pos:end="229:34"><name pos:start="229:13" pos:end="229:15">sps</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:34">chroma_format_idc</name></name> <operator pos:start="229:36" pos:end="229:37">==</operator> <literal type="number" pos:start="229:39" pos:end="229:39">2</literal></expr>)</condition><block type="pseudo" pos:start="229:42" pos:end="229:76"><block_content pos:start="229:42" pos:end="229:76"> <expr_stmt pos:start="229:42" pos:end="229:76"><expr pos:start="229:42" pos:end="229:75"><name pos:start="229:42" pos:end="229:53"><name pos:start="229:42" pos:end="229:44">sps</name><operator pos:start="229:45" pos:end="229:46">-&gt;</operator><name pos:start="229:47" pos:end="229:53">pix_fmt</name></name> <operator pos:start="229:55" pos:end="229:55">=</operator> <name pos:start="229:57" pos:end="229:75">AV_PIX_FMT_YUV422P9</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="231:9" pos:end="231:76"><if pos:start="231:9" pos:end="231:76">if <condition pos:start="231:12" pos:end="231:40">(<expr pos:start="231:13" pos:end="231:39"><name pos:start="231:13" pos:end="231:34"><name pos:start="231:13" pos:end="231:15">sps</name><operator pos:start="231:16" pos:end="231:17">-&gt;</operator><name pos:start="231:18" pos:end="231:34">chroma_format_idc</name></name> <operator pos:start="231:36" pos:end="231:37">==</operator> <literal type="number" pos:start="231:39" pos:end="231:39">3</literal></expr>)</condition><block type="pseudo" pos:start="231:42" pos:end="231:76"><block_content pos:start="231:42" pos:end="231:76"> <expr_stmt pos:start="231:42" pos:end="231:76"><expr pos:start="231:42" pos:end="231:75"><name pos:start="231:42" pos:end="231:53"><name pos:start="231:42" pos:end="231:44">sps</name><operator pos:start="231:45" pos:end="231:46">-&gt;</operator><name pos:start="231:47" pos:end="231:53">pix_fmt</name></name> <operator pos:start="231:55" pos:end="231:55">=</operator> <name pos:start="231:57" pos:end="231:75">AV_PIX_FMT_YUV444P9</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="233:9" pos:end="233:14">break;</break>

    <case pos:start="235:5" pos:end="235:12">case <expr pos:start="235:10" pos:end="235:11"><literal type="number" pos:start="235:10" pos:end="235:11">10</literal></expr>:</case>

        <if_stmt pos:start="237:9" pos:end="237:74"><if pos:start="237:9" pos:end="237:74">if <condition pos:start="237:12" pos:end="237:40">(<expr pos:start="237:13" pos:end="237:39"><name pos:start="237:13" pos:end="237:34"><name pos:start="237:13" pos:end="237:15">sps</name><operator pos:start="237:16" pos:end="237:17">-&gt;</operator><name pos:start="237:18" pos:end="237:34">chroma_format_idc</name></name> <operator pos:start="237:36" pos:end="237:37">==</operator> <literal type="number" pos:start="237:39" pos:end="237:39">0</literal></expr>)</condition><block type="pseudo" pos:start="237:42" pos:end="237:74"><block_content pos:start="237:42" pos:end="237:74"> <expr_stmt pos:start="237:42" pos:end="237:74"><expr pos:start="237:42" pos:end="237:73"><name pos:start="237:42" pos:end="237:53"><name pos:start="237:42" pos:end="237:44">sps</name><operator pos:start="237:45" pos:end="237:46">-&gt;</operator><name pos:start="237:47" pos:end="237:53">pix_fmt</name></name> <operator pos:start="237:55" pos:end="237:55">=</operator> <name pos:start="237:57" pos:end="237:73">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="239:9" pos:end="239:77"><if pos:start="239:9" pos:end="239:77">if <condition pos:start="239:12" pos:end="239:40">(<expr pos:start="239:13" pos:end="239:39"><name pos:start="239:13" pos:end="239:34"><name pos:start="239:13" pos:end="239:15">sps</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:34">chroma_format_idc</name></name> <operator pos:start="239:36" pos:end="239:37">==</operator> <literal type="number" pos:start="239:39" pos:end="239:39">1</literal></expr>)</condition><block type="pseudo" pos:start="239:42" pos:end="239:77"><block_content pos:start="239:42" pos:end="239:77"> <expr_stmt pos:start="239:42" pos:end="239:77"><expr pos:start="239:42" pos:end="239:76"><name pos:start="239:42" pos:end="239:53"><name pos:start="239:42" pos:end="239:44">sps</name><operator pos:start="239:45" pos:end="239:46">-&gt;</operator><name pos:start="239:47" pos:end="239:53">pix_fmt</name></name> <operator pos:start="239:55" pos:end="239:55">=</operator> <name pos:start="239:57" pos:end="239:76">AV_PIX_FMT_YUV420P10</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="241:9" pos:end="241:77"><if pos:start="241:9" pos:end="241:77">if <condition pos:start="241:12" pos:end="241:40">(<expr pos:start="241:13" pos:end="241:39"><name pos:start="241:13" pos:end="241:34"><name pos:start="241:13" pos:end="241:15">sps</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:34">chroma_format_idc</name></name> <operator pos:start="241:36" pos:end="241:37">==</operator> <literal type="number" pos:start="241:39" pos:end="241:39">2</literal></expr>)</condition><block type="pseudo" pos:start="241:42" pos:end="241:77"><block_content pos:start="241:42" pos:end="241:77"> <expr_stmt pos:start="241:42" pos:end="241:77"><expr pos:start="241:42" pos:end="241:76"><name pos:start="241:42" pos:end="241:53"><name pos:start="241:42" pos:end="241:44">sps</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:53">pix_fmt</name></name> <operator pos:start="241:55" pos:end="241:55">=</operator> <name pos:start="241:57" pos:end="241:76">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="243:9" pos:end="243:77"><if pos:start="243:9" pos:end="243:77">if <condition pos:start="243:12" pos:end="243:40">(<expr pos:start="243:13" pos:end="243:39"><name pos:start="243:13" pos:end="243:34"><name pos:start="243:13" pos:end="243:15">sps</name><operator pos:start="243:16" pos:end="243:17">-&gt;</operator><name pos:start="243:18" pos:end="243:34">chroma_format_idc</name></name> <operator pos:start="243:36" pos:end="243:37">==</operator> <literal type="number" pos:start="243:39" pos:end="243:39">3</literal></expr>)</condition><block type="pseudo" pos:start="243:42" pos:end="243:77"><block_content pos:start="243:42" pos:end="243:77"> <expr_stmt pos:start="243:42" pos:end="243:77"><expr pos:start="243:42" pos:end="243:76"><name pos:start="243:42" pos:end="243:53"><name pos:start="243:42" pos:end="243:44">sps</name><operator pos:start="243:45" pos:end="243:46">-&gt;</operator><name pos:start="243:47" pos:end="243:53">pix_fmt</name></name> <operator pos:start="243:55" pos:end="243:55">=</operator> <name pos:start="243:57" pos:end="243:76">AV_PIX_FMT_YUV444P10</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>

    <case pos:start="247:5" pos:end="247:12">case <expr pos:start="247:10" pos:end="247:11"><literal type="number" pos:start="247:10" pos:end="247:11">12</literal></expr>:</case>

        <if_stmt pos:start="249:9" pos:end="249:74"><if pos:start="249:9" pos:end="249:74">if <condition pos:start="249:12" pos:end="249:40">(<expr pos:start="249:13" pos:end="249:39"><name pos:start="249:13" pos:end="249:34"><name pos:start="249:13" pos:end="249:15">sps</name><operator pos:start="249:16" pos:end="249:17">-&gt;</operator><name pos:start="249:18" pos:end="249:34">chroma_format_idc</name></name> <operator pos:start="249:36" pos:end="249:37">==</operator> <literal type="number" pos:start="249:39" pos:end="249:39">0</literal></expr>)</condition><block type="pseudo" pos:start="249:42" pos:end="249:74"><block_content pos:start="249:42" pos:end="249:74"> <expr_stmt pos:start="249:42" pos:end="249:74"><expr pos:start="249:42" pos:end="249:73"><name pos:start="249:42" pos:end="249:53"><name pos:start="249:42" pos:end="249:44">sps</name><operator pos:start="249:45" pos:end="249:46">-&gt;</operator><name pos:start="249:47" pos:end="249:53">pix_fmt</name></name> <operator pos:start="249:55" pos:end="249:55">=</operator> <name pos:start="249:57" pos:end="249:73">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="251:9" pos:end="251:77"><if pos:start="251:9" pos:end="251:77">if <condition pos:start="251:12" pos:end="251:40">(<expr pos:start="251:13" pos:end="251:39"><name pos:start="251:13" pos:end="251:34"><name pos:start="251:13" pos:end="251:15">sps</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:34">chroma_format_idc</name></name> <operator pos:start="251:36" pos:end="251:37">==</operator> <literal type="number" pos:start="251:39" pos:end="251:39">1</literal></expr>)</condition><block type="pseudo" pos:start="251:42" pos:end="251:77"><block_content pos:start="251:42" pos:end="251:77"> <expr_stmt pos:start="251:42" pos:end="251:77"><expr pos:start="251:42" pos:end="251:76"><name pos:start="251:42" pos:end="251:53"><name pos:start="251:42" pos:end="251:44">sps</name><operator pos:start="251:45" pos:end="251:46">-&gt;</operator><name pos:start="251:47" pos:end="251:53">pix_fmt</name></name> <operator pos:start="251:55" pos:end="251:55">=</operator> <name pos:start="251:57" pos:end="251:76">AV_PIX_FMT_YUV420P12</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="253:9" pos:end="253:77"><if pos:start="253:9" pos:end="253:77">if <condition pos:start="253:12" pos:end="253:40">(<expr pos:start="253:13" pos:end="253:39"><name pos:start="253:13" pos:end="253:34"><name pos:start="253:13" pos:end="253:15">sps</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:34">chroma_format_idc</name></name> <operator pos:start="253:36" pos:end="253:37">==</operator> <literal type="number" pos:start="253:39" pos:end="253:39">2</literal></expr>)</condition><block type="pseudo" pos:start="253:42" pos:end="253:77"><block_content pos:start="253:42" pos:end="253:77"> <expr_stmt pos:start="253:42" pos:end="253:77"><expr pos:start="253:42" pos:end="253:76"><name pos:start="253:42" pos:end="253:53"><name pos:start="253:42" pos:end="253:44">sps</name><operator pos:start="253:45" pos:end="253:46">-&gt;</operator><name pos:start="253:47" pos:end="253:53">pix_fmt</name></name> <operator pos:start="253:55" pos:end="253:55">=</operator> <name pos:start="253:57" pos:end="253:76">AV_PIX_FMT_YUV422P12</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="255:9" pos:end="255:77"><if pos:start="255:9" pos:end="255:77">if <condition pos:start="255:12" pos:end="255:40">(<expr pos:start="255:13" pos:end="255:39"><name pos:start="255:13" pos:end="255:34"><name pos:start="255:13" pos:end="255:15">sps</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:34">chroma_format_idc</name></name> <operator pos:start="255:36" pos:end="255:37">==</operator> <literal type="number" pos:start="255:39" pos:end="255:39">3</literal></expr>)</condition><block type="pseudo" pos:start="255:42" pos:end="255:77"><block_content pos:start="255:42" pos:end="255:77"> <expr_stmt pos:start="255:42" pos:end="255:77"><expr pos:start="255:42" pos:end="255:76"><name pos:start="255:42" pos:end="255:53"><name pos:start="255:42" pos:end="255:44">sps</name><operator pos:start="255:45" pos:end="255:46">-&gt;</operator><name pos:start="255:47" pos:end="255:53">pix_fmt</name></name> <operator pos:start="255:55" pos:end="255:55">=</operator> <name pos:start="255:57" pos:end="255:76">AV_PIX_FMT_YUV444P12</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="257:9" pos:end="257:14">break;</break>

    <default pos:start="259:5" pos:end="259:12">default:</default>

        <expr_stmt pos:start="261:9" pos:end="263:96"><expr pos:start="261:9" pos:end="263:95"><call pos:start="261:9" pos:end="263:95"><name pos:start="261:9" pos:end="261:14">av_log</name><argument_list pos:start="261:15" pos:end="263:95">(<argument pos:start="261:16" pos:end="261:23"><expr pos:start="261:16" pos:end="261:23"><name pos:start="261:16" pos:end="261:23"><name pos:start="261:16" pos:end="261:16">s</name><operator pos:start="261:17" pos:end="261:18">-&gt;</operator><name pos:start="261:19" pos:end="261:23">avctx</name></name></expr></argument>, <argument pos:start="261:26" pos:end="261:37"><expr pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="263:16" pos:end="263:94"><expr pos:start="263:16" pos:end="263:94"><literal type="string" pos:start="263:16" pos:end="263:94">"4:2:0, 4:2:2, 4:4:4 supports are currently specified for 8, 10 and 12 bits.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:35"><expr pos:start="265:9" pos:end="265:34"><name pos:start="265:9" pos:end="265:11">ret</name> <operator pos:start="265:13" pos:end="265:13">=</operator> <name pos:start="265:15" pos:end="265:34">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

        <goto pos:start="267:9" pos:end="267:17">goto <name pos:start="267:14" pos:end="267:16">err</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="273:5" pos:end="273:45"><expr pos:start="273:5" pos:end="273:44"><name pos:start="273:5" pos:end="273:8">desc</name> <operator pos:start="273:10" pos:end="273:10">=</operator> <call pos:start="273:12" pos:end="273:44"><name pos:start="273:12" pos:end="273:30">av_pix_fmt_desc_get</name><argument_list pos:start="273:31" pos:end="273:44">(<argument pos:start="273:32" pos:end="273:43"><expr pos:start="273:32" pos:end="273:43"><name pos:start="273:32" pos:end="273:43"><name pos:start="273:32" pos:end="273:34">sps</name><operator pos:start="273:35" pos:end="273:36">-&gt;</operator><name pos:start="273:37" pos:end="273:43">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="275:5" pos:end="281:5"><if pos:start="275:5" pos:end="281:5">if <condition pos:start="275:8" pos:end="275:14">(<expr pos:start="275:9" pos:end="275:13"><operator pos:start="275:9" pos:end="275:9">!</operator><name pos:start="275:10" pos:end="275:13">desc</name></expr>)</condition> <block pos:start="275:16" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:17">

        <expr_stmt pos:start="277:9" pos:end="277:30"><expr pos:start="277:9" pos:end="277:29"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <call pos:start="277:15" pos:end="277:29"><name pos:start="277:15" pos:end="277:21">AVERROR</name><argument_list pos:start="277:22" pos:end="277:29">(<argument pos:start="277:23" pos:end="277:28"><expr pos:start="277:23" pos:end="277:28"><name pos:start="277:23" pos:end="277:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="279:9" pos:end="279:17">goto <name pos:start="279:14" pos:end="279:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="285:5" pos:end="285:40"><expr pos:start="285:5" pos:end="285:39"><name pos:start="285:5" pos:end="285:18"><name pos:start="285:5" pos:end="285:7">sps</name><operator pos:start="285:8" pos:end="285:9">-&gt;</operator><name pos:start="285:10" pos:end="285:15">hshift</name><index pos:start="285:16" pos:end="285:18">[<expr pos:start="285:17" pos:end="285:17"><literal type="number" pos:start="285:17" pos:end="285:17">0</literal></expr>]</index></name> <operator pos:start="285:20" pos:end="285:20">=</operator> <name pos:start="285:22" pos:end="285:35"><name pos:start="285:22" pos:end="285:24">sps</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:32">vshift</name><index pos:start="285:33" pos:end="285:35">[<expr pos:start="285:34" pos:end="285:34"><literal type="number" pos:start="285:34" pos:end="285:34">0</literal></expr>]</index></name> <operator pos:start="285:37" pos:end="285:37">=</operator> <literal type="number" pos:start="285:39" pos:end="285:39">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:58"><expr pos:start="287:5" pos:end="287:57"><name pos:start="287:5" pos:end="287:18"><name pos:start="287:5" pos:end="287:7">sps</name><operator pos:start="287:8" pos:end="287:9">-&gt;</operator><name pos:start="287:10" pos:end="287:15">hshift</name><index pos:start="287:16" pos:end="287:18">[<expr pos:start="287:17" pos:end="287:17"><literal type="number" pos:start="287:17" pos:end="287:17">2</literal></expr>]</index></name> <operator pos:start="287:20" pos:end="287:20">=</operator> <name pos:start="287:22" pos:end="287:35"><name pos:start="287:22" pos:end="287:24">sps</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:32">hshift</name><index pos:start="287:33" pos:end="287:35">[<expr pos:start="287:34" pos:end="287:34"><literal type="number" pos:start="287:34" pos:end="287:34">1</literal></expr>]</index></name> <operator pos:start="287:37" pos:end="287:37">=</operator> <name pos:start="287:39" pos:end="287:57"><name pos:start="287:39" pos:end="287:42">desc</name><operator pos:start="287:43" pos:end="287:44">-&gt;</operator><name pos:start="287:45" pos:end="287:57">log2_chroma_w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:58"><expr pos:start="289:5" pos:end="289:57"><name pos:start="289:5" pos:end="289:18"><name pos:start="289:5" pos:end="289:7">sps</name><operator pos:start="289:8" pos:end="289:9">-&gt;</operator><name pos:start="289:10" pos:end="289:15">vshift</name><index pos:start="289:16" pos:end="289:18">[<expr pos:start="289:17" pos:end="289:17"><literal type="number" pos:start="289:17" pos:end="289:17">2</literal></expr>]</index></name> <operator pos:start="289:20" pos:end="289:20">=</operator> <name pos:start="289:22" pos:end="289:35"><name pos:start="289:22" pos:end="289:24">sps</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:32">vshift</name><index pos:start="289:33" pos:end="289:35">[<expr pos:start="289:34" pos:end="289:34"><literal type="number" pos:start="289:34" pos:end="289:34">1</literal></expr>]</index></name> <operator pos:start="289:37" pos:end="289:37">=</operator> <name pos:start="289:39" pos:end="289:57"><name pos:start="289:39" pos:end="289:42">desc</name><operator pos:start="289:43" pos:end="289:44">-&gt;</operator><name pos:start="289:45" pos:end="289:57">log2_chroma_h</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="293:5" pos:end="293:42"><expr pos:start="293:5" pos:end="293:41"><name pos:start="293:5" pos:end="293:20"><name pos:start="293:5" pos:end="293:7">sps</name><operator pos:start="293:8" pos:end="293:9">-&gt;</operator><name pos:start="293:10" pos:end="293:20">pixel_shift</name></name> <operator pos:start="293:22" pos:end="293:22">=</operator> <name pos:start="293:24" pos:end="293:37"><name pos:start="293:24" pos:end="293:26">sps</name><operator pos:start="293:27" pos:end="293:28">-&gt;</operator><name pos:start="293:29" pos:end="293:37">bit_depth</name></name> <operator pos:start="293:39" pos:end="293:39">&gt;</operator> <literal type="number" pos:start="293:41" pos:end="293:41">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:55"><expr pos:start="297:5" pos:end="297:54"><name pos:start="297:5" pos:end="297:25"><name pos:start="297:5" pos:end="297:7">sps</name><operator pos:start="297:8" pos:end="297:9">-&gt;</operator><name pos:start="297:10" pos:end="297:25">log2_max_poc_lsb</name></name> <operator pos:start="297:27" pos:end="297:27">=</operator> <call pos:start="297:29" pos:end="297:50"><name pos:start="297:29" pos:end="297:46">get_ue_golomb_long</name><argument_list pos:start="297:47" pos:end="297:50">(<argument pos:start="297:48" pos:end="297:49"><expr pos:start="297:48" pos:end="297:49"><name pos:start="297:48" pos:end="297:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="297:52" pos:end="297:52">+</operator> <literal type="number" pos:start="297:54" pos:end="297:54">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="299:5" pos:end="309:5"><if pos:start="299:5" pos:end="309:5">if <condition pos:start="299:8" pos:end="299:35">(<expr pos:start="299:9" pos:end="299:34"><name pos:start="299:9" pos:end="299:29"><name pos:start="299:9" pos:end="299:11">sps</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:29">log2_max_poc_lsb</name></name> <operator pos:start="299:31" pos:end="299:31">&gt;</operator> <literal type="number" pos:start="299:33" pos:end="299:34">16</literal></expr>)</condition> <block pos:start="299:37" pos:end="309:5">{<block_content pos:start="301:9" pos:end="307:17">

        <expr_stmt pos:start="301:9" pos:end="303:42"><expr pos:start="301:9" pos:end="303:41"><call pos:start="301:9" pos:end="303:41"><name pos:start="301:9" pos:end="301:14">av_log</name><argument_list pos:start="301:15" pos:end="303:41">(<argument pos:start="301:16" pos:end="301:23"><expr pos:start="301:16" pos:end="301:23"><name pos:start="301:16" pos:end="301:23"><name pos:start="301:16" pos:end="301:16">s</name><operator pos:start="301:17" pos:end="301:18">-&gt;</operator><name pos:start="301:19" pos:end="301:23">avctx</name></name></expr></argument>, <argument pos:start="301:26" pos:end="301:37"><expr pos:start="301:26" pos:end="301:37"><name pos:start="301:26" pos:end="301:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:40" pos:end="301:90"><expr pos:start="301:40" pos:end="301:90"><literal type="string" pos:start="301:40" pos:end="301:90">"log2_max_pic_order_cnt_lsb_minus4 out range: %d\n"</literal></expr></argument>,

               <argument pos:start="303:16" pos:end="303:40"><expr pos:start="303:16" pos:end="303:40"><name pos:start="303:16" pos:end="303:36"><name pos:start="303:16" pos:end="303:18">sps</name><operator pos:start="303:19" pos:end="303:20">-&gt;</operator><name pos:start="303:21" pos:end="303:36">log2_max_poc_lsb</name></name> <operator pos:start="303:38" pos:end="303:38">-</operator> <literal type="number" pos:start="303:40" pos:end="303:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:34"><expr pos:start="305:9" pos:end="305:33"><name pos:start="305:9" pos:end="305:11">ret</name> <operator pos:start="305:13" pos:end="305:13">=</operator> <name pos:start="305:15" pos:end="305:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="307:9" pos:end="307:17">goto <name pos:start="307:14" pos:end="307:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="313:5" pos:end="313:43"><expr pos:start="313:5" pos:end="313:42"><name pos:start="313:5" pos:end="313:26">sublayer_ordering_info</name> <operator pos:start="313:28" pos:end="313:28">=</operator> <call pos:start="313:30" pos:end="313:42"><name pos:start="313:30" pos:end="313:38">get_bits1</name><argument_list pos:start="313:39" pos:end="313:42">(<argument pos:start="313:40" pos:end="313:41"><expr pos:start="313:40" pos:end="313:41"><name pos:start="313:40" pos:end="313:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:65"><expr pos:start="315:5" pos:end="315:64"><name pos:start="315:5" pos:end="315:9">start</name> <operator pos:start="315:11" pos:end="315:11">=</operator> <ternary pos:start="315:13" pos:end="315:64"><condition pos:start="315:13" pos:end="315:36"><expr pos:start="315:13" pos:end="315:34"><name pos:start="315:13" pos:end="315:34">sublayer_ordering_info</name></expr> ?</condition><then pos:start="315:38" pos:end="315:38"> <expr pos:start="315:38" pos:end="315:38"><literal type="number" pos:start="315:38" pos:end="315:38">0</literal></expr> </then><else pos:start="315:40" pos:end="315:64">: <expr pos:start="315:42" pos:end="315:64"><name pos:start="315:42" pos:end="315:60"><name pos:start="315:42" pos:end="315:44">sps</name><operator pos:start="315:45" pos:end="315:46">-&gt;</operator><name pos:start="315:47" pos:end="315:60">max_sub_layers</name></name> <operator pos:start="315:62" pos:end="315:62">-</operator> <literal type="number" pos:start="315:64" pos:end="315:64">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="317:5" pos:end="357:5">for <control pos:start="317:9" pos:end="317:49">(<init pos:start="317:10" pos:end="317:19"><expr pos:start="317:10" pos:end="317:18"><name pos:start="317:10" pos:end="317:10">i</name> <operator pos:start="317:12" pos:end="317:12">=</operator> <name pos:start="317:14" pos:end="317:18">start</name></expr>;</init> <condition pos:start="317:21" pos:end="317:44"><expr pos:start="317:21" pos:end="317:43"><name pos:start="317:21" pos:end="317:21">i</name> <operator pos:start="317:23" pos:end="317:23">&lt;</operator> <name pos:start="317:25" pos:end="317:43"><name pos:start="317:25" pos:end="317:27">sps</name><operator pos:start="317:28" pos:end="317:29">-&gt;</operator><name pos:start="317:30" pos:end="317:43">max_sub_layers</name></name></expr>;</condition> <incr pos:start="317:46" pos:end="317:48"><expr pos:start="317:46" pos:end="317:48"><name pos:start="317:46" pos:end="317:46">i</name><operator pos:start="317:47" pos:end="317:48">++</operator></expr></incr>)</control> <block pos:start="317:51" pos:end="357:5">{<block_content pos:start="319:9" pos:end="355:9">

        <expr_stmt pos:start="319:9" pos:end="319:82"><expr pos:start="319:9" pos:end="319:81"><name pos:start="319:9" pos:end="319:30"><name pos:start="319:9" pos:end="319:11">sps</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:27">temporal_layer</name><index pos:start="319:28" pos:end="319:30">[<expr pos:start="319:29" pos:end="319:29"><name pos:start="319:29" pos:end="319:29">i</name></expr>]</index></name><operator pos:start="319:31" pos:end="319:31">.</operator><name pos:start="319:32" pos:end="319:52">max_dec_pic_buffering</name> <operator pos:start="319:54" pos:end="319:54">=</operator> <call pos:start="319:56" pos:end="319:77"><name pos:start="319:56" pos:end="319:73">get_ue_golomb_long</name><argument_list pos:start="319:74" pos:end="319:77">(<argument pos:start="319:75" pos:end="319:76"><expr pos:start="319:75" pos:end="319:76"><name pos:start="319:75" pos:end="319:76">gb</name></expr></argument>)</argument_list></call> <operator pos:start="319:79" pos:end="319:79">+</operator> <literal type="number" pos:start="319:81" pos:end="319:81">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:78"><expr pos:start="321:9" pos:end="321:77"><name pos:start="321:9" pos:end="321:30"><name pos:start="321:9" pos:end="321:11">sps</name><operator pos:start="321:12" pos:end="321:13">-&gt;</operator><name pos:start="321:14" pos:end="321:27">temporal_layer</name><index pos:start="321:28" pos:end="321:30">[<expr pos:start="321:29" pos:end="321:29"><name pos:start="321:29" pos:end="321:29">i</name></expr>]</index></name><operator pos:start="321:31" pos:end="321:31">.</operator><name pos:start="321:32" pos:end="321:47">num_reorder_pics</name>      <operator pos:start="321:54" pos:end="321:54">=</operator> <call pos:start="321:56" pos:end="321:77"><name pos:start="321:56" pos:end="321:73">get_ue_golomb_long</name><argument_list pos:start="321:74" pos:end="321:77">(<argument pos:start="321:75" pos:end="321:76"><expr pos:start="321:75" pos:end="321:76"><name pos:start="321:75" pos:end="321:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:82"><expr pos:start="323:9" pos:end="323:81"><name pos:start="323:9" pos:end="323:30"><name pos:start="323:9" pos:end="323:11">sps</name><operator pos:start="323:12" pos:end="323:13">-&gt;</operator><name pos:start="323:14" pos:end="323:27">temporal_layer</name><index pos:start="323:28" pos:end="323:30">[<expr pos:start="323:29" pos:end="323:29"><name pos:start="323:29" pos:end="323:29">i</name></expr>]</index></name><operator pos:start="323:31" pos:end="323:31">.</operator><name pos:start="323:32" pos:end="323:51">max_latency_increase</name>  <operator pos:start="323:54" pos:end="323:54">=</operator> <call pos:start="323:56" pos:end="323:77"><name pos:start="323:56" pos:end="323:73">get_ue_golomb_long</name><argument_list pos:start="323:74" pos:end="323:77">(<argument pos:start="323:75" pos:end="323:76"><expr pos:start="323:75" pos:end="323:76"><name pos:start="323:75" pos:end="323:76">gb</name></expr></argument>)</argument_list></call> <operator pos:start="323:79" pos:end="323:79">-</operator> <literal type="number" pos:start="323:81" pos:end="323:81">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="325:9" pos:end="335:9"><if pos:start="325:9" pos:end="335:9">if <condition pos:start="325:12" pos:end="325:72">(<expr pos:start="325:13" pos:end="325:71"><name pos:start="325:13" pos:end="325:34"><name pos:start="325:13" pos:end="325:15">sps</name><operator pos:start="325:16" pos:end="325:17">-&gt;</operator><name pos:start="325:18" pos:end="325:31">temporal_layer</name><index pos:start="325:32" pos:end="325:34">[<expr pos:start="325:33" pos:end="325:33"><name pos:start="325:33" pos:end="325:33">i</name></expr>]</index></name><operator pos:start="325:35" pos:end="325:35">.</operator><name pos:start="325:36" pos:end="325:56">max_dec_pic_buffering</name> <operator pos:start="325:58" pos:end="325:58">&gt;</operator> <name pos:start="325:60" pos:end="325:71">MAX_DPB_SIZE</name></expr>)</condition> <block pos:start="325:74" pos:end="335:9">{<block_content pos:start="327:13" pos:end="333:21">

            <expr_stmt pos:start="327:13" pos:end="329:69"><expr pos:start="327:13" pos:end="329:68"><call pos:start="327:13" pos:end="329:68"><name pos:start="327:13" pos:end="327:18">av_log</name><argument_list pos:start="327:19" pos:end="329:68">(<argument pos:start="327:20" pos:end="327:27"><expr pos:start="327:20" pos:end="327:27"><name pos:start="327:20" pos:end="327:27"><name pos:start="327:20" pos:end="327:20">s</name><operator pos:start="327:21" pos:end="327:22">-&gt;</operator><name pos:start="327:23" pos:end="327:27">avctx</name></name></expr></argument>, <argument pos:start="327:30" pos:end="327:41"><expr pos:start="327:30" pos:end="327:41"><name pos:start="327:30" pos:end="327:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:44" pos:end="327:96"><expr pos:start="327:44" pos:end="327:96"><literal type="string" pos:start="327:44" pos:end="327:96">"sps_max_dec_pic_buffering_minus1 out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="329:20" pos:end="329:67"><expr pos:start="329:20" pos:end="329:67"><name pos:start="329:20" pos:end="329:41"><name pos:start="329:20" pos:end="329:22">sps</name><operator pos:start="329:23" pos:end="329:24">-&gt;</operator><name pos:start="329:25" pos:end="329:38">temporal_layer</name><index pos:start="329:39" pos:end="329:41">[<expr pos:start="329:40" pos:end="329:40"><name pos:start="329:40" pos:end="329:40">i</name></expr>]</index></name><operator pos:start="329:42" pos:end="329:42">.</operator><name pos:start="329:43" pos:end="329:63">max_dec_pic_buffering</name> <operator pos:start="329:65" pos:end="329:65">-</operator> <literal type="number" pos:start="329:67" pos:end="329:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:38"><expr pos:start="331:13" pos:end="331:37"><name pos:start="331:13" pos:end="331:15">ret</name> <operator pos:start="331:17" pos:end="331:17">=</operator> <name pos:start="331:19" pos:end="331:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="333:13" pos:end="333:21">goto <name pos:start="333:18" pos:end="333:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="337:9" pos:end="355:9"><if pos:start="337:9" pos:end="355:9">if <condition pos:start="337:12" pos:end="337:103">(<expr pos:start="337:13" pos:end="337:102"><name pos:start="337:13" pos:end="337:34"><name pos:start="337:13" pos:end="337:15">sps</name><operator pos:start="337:16" pos:end="337:17">-&gt;</operator><name pos:start="337:18" pos:end="337:31">temporal_layer</name><index pos:start="337:32" pos:end="337:34">[<expr pos:start="337:33" pos:end="337:33"><name pos:start="337:33" pos:end="337:33">i</name></expr>]</index></name><operator pos:start="337:35" pos:end="337:35">.</operator><name pos:start="337:36" pos:end="337:51">num_reorder_pics</name> <operator pos:start="337:53" pos:end="337:53">&gt;</operator> <name pos:start="337:55" pos:end="337:76"><name pos:start="337:55" pos:end="337:57">sps</name><operator pos:start="337:58" pos:end="337:59">-&gt;</operator><name pos:start="337:60" pos:end="337:73">temporal_layer</name><index pos:start="337:74" pos:end="337:76">[<expr pos:start="337:75" pos:end="337:75"><name pos:start="337:75" pos:end="337:75">i</name></expr>]</index></name><operator pos:start="337:77" pos:end="337:77">.</operator><name pos:start="337:78" pos:end="337:98">max_dec_pic_buffering</name> <operator pos:start="337:100" pos:end="337:100">-</operator> <literal type="number" pos:start="337:102" pos:end="337:102">1</literal></expr>)</condition> <block pos:start="337:105" pos:end="355:9">{<block_content pos:start="339:13" pos:end="353:103">

            <expr_stmt pos:start="339:13" pos:end="341:60"><expr pos:start="339:13" pos:end="341:59"><call pos:start="339:13" pos:end="341:59"><name pos:start="339:13" pos:end="339:18">av_log</name><argument_list pos:start="339:19" pos:end="341:59">(<argument pos:start="339:20" pos:end="339:27"><expr pos:start="339:20" pos:end="339:27"><name pos:start="339:20" pos:end="339:27"><name pos:start="339:20" pos:end="339:20">s</name><operator pos:start="339:21" pos:end="339:22">-&gt;</operator><name pos:start="339:23" pos:end="339:27">avctx</name></name></expr></argument>, <argument pos:start="339:30" pos:end="339:43"><expr pos:start="339:30" pos:end="339:43"><name pos:start="339:30" pos:end="339:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="339:46" pos:end="339:90"><expr pos:start="339:46" pos:end="339:90"><literal type="string" pos:start="339:46" pos:end="339:90">"sps_max_num_reorder_pics out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="341:20" pos:end="341:58"><expr pos:start="341:20" pos:end="341:58"><name pos:start="341:20" pos:end="341:41"><name pos:start="341:20" pos:end="341:22">sps</name><operator pos:start="341:23" pos:end="341:24">-&gt;</operator><name pos:start="341:25" pos:end="341:38">temporal_layer</name><index pos:start="341:39" pos:end="341:41">[<expr pos:start="341:40" pos:end="341:40"><name pos:start="341:40" pos:end="341:40">i</name></expr>]</index></name><operator pos:start="341:42" pos:end="341:42">.</operator><name pos:start="341:43" pos:end="341:58">num_reorder_pics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="343:13" pos:end="351:13"><if pos:start="343:13" pos:end="351:13">if <condition pos:start="343:16" pos:end="345:75">(<expr pos:start="343:17" pos:end="345:74"><name pos:start="343:17" pos:end="343:41"><name pos:start="343:17" pos:end="343:17">s</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:24">avctx</name><operator pos:start="343:25" pos:end="343:26">-&gt;</operator><name pos:start="343:27" pos:end="343:41">err_recognition</name></name> <operator pos:start="343:43" pos:end="343:43">&amp;</operator> <name pos:start="343:45" pos:end="343:57">AV_EF_EXPLODE</name> <operator pos:start="343:59" pos:end="343:60">||</operator>

                <name pos:start="345:17" pos:end="345:38"><name pos:start="345:17" pos:end="345:19">sps</name><operator pos:start="345:20" pos:end="345:21">-&gt;</operator><name pos:start="345:22" pos:end="345:35">temporal_layer</name><index pos:start="345:36" pos:end="345:38">[<expr pos:start="345:37" pos:end="345:37"><name pos:start="345:37" pos:end="345:37">i</name></expr>]</index></name><operator pos:start="345:39" pos:end="345:39">.</operator><name pos:start="345:40" pos:end="345:55">num_reorder_pics</name> <operator pos:start="345:57" pos:end="345:57">&gt;</operator> <name pos:start="345:59" pos:end="345:70">MAX_DPB_SIZE</name> <operator pos:start="345:72" pos:end="345:72">-</operator> <literal type="number" pos:start="345:74" pos:end="345:74">1</literal></expr>)</condition> <block pos:start="345:77" pos:end="351:13">{<block_content pos:start="347:17" pos:end="349:25">

                <expr_stmt pos:start="347:17" pos:end="347:42"><expr pos:start="347:17" pos:end="347:41"><name pos:start="347:17" pos:end="347:19">ret</name> <operator pos:start="347:21" pos:end="347:21">=</operator> <name pos:start="347:23" pos:end="347:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="349:17" pos:end="349:25">goto <name pos:start="349:22" pos:end="349:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:103"><expr pos:start="353:13" pos:end="353:102"><name pos:start="353:13" pos:end="353:34"><name pos:start="353:13" pos:end="353:15">sps</name><operator pos:start="353:16" pos:end="353:17">-&gt;</operator><name pos:start="353:18" pos:end="353:31">temporal_layer</name><index pos:start="353:32" pos:end="353:34">[<expr pos:start="353:33" pos:end="353:33"><name pos:start="353:33" pos:end="353:33">i</name></expr>]</index></name><operator pos:start="353:35" pos:end="353:35">.</operator><name pos:start="353:36" pos:end="353:56">max_dec_pic_buffering</name> <operator pos:start="353:58" pos:end="353:58">=</operator> <name pos:start="353:60" pos:end="353:81"><name pos:start="353:60" pos:end="353:62">sps</name><operator pos:start="353:63" pos:end="353:64">-&gt;</operator><name pos:start="353:65" pos:end="353:78">temporal_layer</name><index pos:start="353:79" pos:end="353:81">[<expr pos:start="353:80" pos:end="353:80"><name pos:start="353:80" pos:end="353:80">i</name></expr>]</index></name><operator pos:start="353:82" pos:end="353:82">.</operator><name pos:start="353:83" pos:end="353:98">num_reorder_pics</name> <operator pos:start="353:100" pos:end="353:100">+</operator> <literal type="number" pos:start="353:102" pos:end="353:102">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="361:5" pos:end="373:5"><if pos:start="361:5" pos:end="373:5">if <condition pos:start="361:8" pos:end="361:32">(<expr pos:start="361:9" pos:end="361:31"><operator pos:start="361:9" pos:end="361:9">!</operator><name pos:start="361:10" pos:end="361:31">sublayer_ordering_info</name></expr>)</condition> <block pos:start="361:34" pos:end="373:5">{<block_content pos:start="363:9" pos:end="371:9">

        <for pos:start="363:9" pos:end="371:9">for <control pos:start="363:13" pos:end="363:35">(<init pos:start="363:14" pos:end="363:19"><expr pos:start="363:14" pos:end="363:18"><name pos:start="363:14" pos:end="363:14">i</name> <operator pos:start="363:16" pos:end="363:16">=</operator> <literal type="number" pos:start="363:18" pos:end="363:18">0</literal></expr>;</init> <condition pos:start="363:21" pos:end="363:30"><expr pos:start="363:21" pos:end="363:29"><name pos:start="363:21" pos:end="363:21">i</name> <operator pos:start="363:23" pos:end="363:23">&lt;</operator> <name pos:start="363:25" pos:end="363:29">start</name></expr>;</condition> <incr pos:start="363:32" pos:end="363:34"><expr pos:start="363:32" pos:end="363:34"><name pos:start="363:32" pos:end="363:32">i</name><operator pos:start="363:33" pos:end="363:34">++</operator></expr></incr>)</control> <block pos:start="363:37" pos:end="371:9">{<block_content pos:start="365:13" pos:end="369:107">

            <expr_stmt pos:start="365:13" pos:end="365:108"><expr pos:start="365:13" pos:end="365:107"><name pos:start="365:13" pos:end="365:34"><name pos:start="365:13" pos:end="365:15">sps</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:31">temporal_layer</name><index pos:start="365:32" pos:end="365:34">[<expr pos:start="365:33" pos:end="365:33"><name pos:start="365:33" pos:end="365:33">i</name></expr>]</index></name><operator pos:start="365:35" pos:end="365:35">.</operator><name pos:start="365:36" pos:end="365:56">max_dec_pic_buffering</name> <operator pos:start="365:58" pos:end="365:58">=</operator> <name pos:start="365:60" pos:end="365:85"><name pos:start="365:60" pos:end="365:62">sps</name><operator pos:start="365:63" pos:end="365:64">-&gt;</operator><name pos:start="365:65" pos:end="365:78">temporal_layer</name><index pos:start="365:79" pos:end="365:85">[<expr pos:start="365:80" pos:end="365:84"><name pos:start="365:80" pos:end="365:84">start</name></expr>]</index></name><operator pos:start="365:86" pos:end="365:86">.</operator><name pos:start="365:87" pos:end="365:107">max_dec_pic_buffering</name></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:103"><expr pos:start="367:13" pos:end="367:102"><name pos:start="367:13" pos:end="367:34"><name pos:start="367:13" pos:end="367:15">sps</name><operator pos:start="367:16" pos:end="367:17">-&gt;</operator><name pos:start="367:18" pos:end="367:31">temporal_layer</name><index pos:start="367:32" pos:end="367:34">[<expr pos:start="367:33" pos:end="367:33"><name pos:start="367:33" pos:end="367:33">i</name></expr>]</index></name><operator pos:start="367:35" pos:end="367:35">.</operator><name pos:start="367:36" pos:end="367:51">num_reorder_pics</name>      <operator pos:start="367:58" pos:end="367:58">=</operator> <name pos:start="367:60" pos:end="367:85"><name pos:start="367:60" pos:end="367:62">sps</name><operator pos:start="367:63" pos:end="367:64">-&gt;</operator><name pos:start="367:65" pos:end="367:78">temporal_layer</name><index pos:start="367:79" pos:end="367:85">[<expr pos:start="367:80" pos:end="367:84"><name pos:start="367:80" pos:end="367:84">start</name></expr>]</index></name><operator pos:start="367:86" pos:end="367:86">.</operator><name pos:start="367:87" pos:end="367:102">num_reorder_pics</name></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:107"><expr pos:start="369:13" pos:end="369:106"><name pos:start="369:13" pos:end="369:34"><name pos:start="369:13" pos:end="369:15">sps</name><operator pos:start="369:16" pos:end="369:17">-&gt;</operator><name pos:start="369:18" pos:end="369:31">temporal_layer</name><index pos:start="369:32" pos:end="369:34">[<expr pos:start="369:33" pos:end="369:33"><name pos:start="369:33" pos:end="369:33">i</name></expr>]</index></name><operator pos:start="369:35" pos:end="369:35">.</operator><name pos:start="369:36" pos:end="369:55">max_latency_increase</name>  <operator pos:start="369:58" pos:end="369:58">=</operator> <name pos:start="369:60" pos:end="369:85"><name pos:start="369:60" pos:end="369:62">sps</name><operator pos:start="369:63" pos:end="369:64">-&gt;</operator><name pos:start="369:65" pos:end="369:78">temporal_layer</name><index pos:start="369:79" pos:end="369:85">[<expr pos:start="369:80" pos:end="369:84"><name pos:start="369:80" pos:end="369:84">start</name></expr>]</index></name><operator pos:start="369:86" pos:end="369:86">.</operator><name pos:start="369:87" pos:end="369:106">max_latency_increase</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="377:5" pos:end="377:74"><expr pos:start="377:5" pos:end="377:73"><name pos:start="377:5" pos:end="377:25"><name pos:start="377:5" pos:end="377:7">sps</name><operator pos:start="377:8" pos:end="377:9">-&gt;</operator><name pos:start="377:10" pos:end="377:25">log2_min_cb_size</name></name>                    <operator pos:start="377:46" pos:end="377:46">=</operator> <call pos:start="377:48" pos:end="377:69"><name pos:start="377:48" pos:end="377:65">get_ue_golomb_long</name><argument_list pos:start="377:66" pos:end="377:69">(<argument pos:start="377:67" pos:end="377:68"><expr pos:start="377:67" pos:end="377:68"><name pos:start="377:67" pos:end="377:68">gb</name></expr></argument>)</argument_list></call> <operator pos:start="377:71" pos:end="377:71">+</operator> <literal type="number" pos:start="377:73" pos:end="377:73">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:70"><expr pos:start="379:5" pos:end="379:69"><name pos:start="379:5" pos:end="379:44"><name pos:start="379:5" pos:end="379:7">sps</name><operator pos:start="379:8" pos:end="379:9">-&gt;</operator><name pos:start="379:10" pos:end="379:44">log2_diff_max_min_coding_block_size</name></name> <operator pos:start="379:46" pos:end="379:46">=</operator> <call pos:start="379:48" pos:end="379:69"><name pos:start="379:48" pos:end="379:65">get_ue_golomb_long</name><argument_list pos:start="379:66" pos:end="379:69">(<argument pos:start="379:67" pos:end="379:68"><expr pos:start="379:67" pos:end="379:68"><name pos:start="379:67" pos:end="379:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:74"><expr pos:start="381:5" pos:end="381:73"><name pos:start="381:5" pos:end="381:25"><name pos:start="381:5" pos:end="381:7">sps</name><operator pos:start="381:8" pos:end="381:9">-&gt;</operator><name pos:start="381:10" pos:end="381:25">log2_min_tb_size</name></name>                    <operator pos:start="381:46" pos:end="381:46">=</operator> <call pos:start="381:48" pos:end="381:69"><name pos:start="381:48" pos:end="381:65">get_ue_golomb_long</name><argument_list pos:start="381:66" pos:end="381:69">(<argument pos:start="381:67" pos:end="381:68"><expr pos:start="381:67" pos:end="381:68"><name pos:start="381:67" pos:end="381:68">gb</name></expr></argument>)</argument_list></call> <operator pos:start="381:71" pos:end="381:71">+</operator> <literal type="number" pos:start="381:73" pos:end="381:73">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="383:5" pos:end="383:70"><expr pos:start="383:5" pos:end="383:69"><name pos:start="383:5" pos:end="383:42">log2_diff_max_min_transform_block_size</name>   <operator pos:start="383:46" pos:end="383:46">=</operator> <call pos:start="383:48" pos:end="383:69"><name pos:start="383:48" pos:end="383:65">get_ue_golomb_long</name><argument_list pos:start="383:66" pos:end="383:69">(<argument pos:start="383:67" pos:end="383:68"><expr pos:start="383:67" pos:end="383:68"><name pos:start="383:67" pos:end="383:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="385:5" pos:end="387:69"><expr pos:start="385:5" pos:end="387:68"><name pos:start="385:5" pos:end="385:28"><name pos:start="385:5" pos:end="385:7">sps</name><operator pos:start="385:8" pos:end="385:9">-&gt;</operator><name pos:start="385:10" pos:end="385:28">log2_max_trafo_size</name></name>                 <operator pos:start="385:46" pos:end="385:46">=</operator> <name pos:start="385:48" pos:end="385:85">log2_diff_max_min_transform_block_size</name> <operator pos:start="385:87" pos:end="385:87">+</operator>

                                               <name pos:start="387:48" pos:end="387:68"><name pos:start="387:48" pos:end="387:50">sps</name><operator pos:start="387:51" pos:end="387:52">-&gt;</operator><name pos:start="387:53" pos:end="387:68">log2_min_tb_size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="391:5" pos:end="399:5"><if pos:start="391:5" pos:end="399:5">if <condition pos:start="391:8" pos:end="391:55">(<expr pos:start="391:9" pos:end="391:54"><name pos:start="391:9" pos:end="391:29"><name pos:start="391:9" pos:end="391:11">sps</name><operator pos:start="391:12" pos:end="391:13">-&gt;</operator><name pos:start="391:14" pos:end="391:29">log2_min_tb_size</name></name> <operator pos:start="391:31" pos:end="391:32">&gt;=</operator> <name pos:start="391:34" pos:end="391:54"><name pos:start="391:34" pos:end="391:36">sps</name><operator pos:start="391:37" pos:end="391:38">-&gt;</operator><name pos:start="391:39" pos:end="391:54">log2_min_cb_size</name></name></expr>)</condition> <block pos:start="391:57" pos:end="399:5">{<block_content pos:start="393:9" pos:end="397:17">

        <expr_stmt pos:start="393:9" pos:end="393:77"><expr pos:start="393:9" pos:end="393:76"><call pos:start="393:9" pos:end="393:76"><name pos:start="393:9" pos:end="393:14">av_log</name><argument_list pos:start="393:15" pos:end="393:76">(<argument pos:start="393:16" pos:end="393:23"><expr pos:start="393:16" pos:end="393:23"><name pos:start="393:16" pos:end="393:23"><name pos:start="393:16" pos:end="393:16">s</name><operator pos:start="393:17" pos:end="393:18">-&gt;</operator><name pos:start="393:19" pos:end="393:23">avctx</name></name></expr></argument>, <argument pos:start="393:26" pos:end="393:37"><expr pos:start="393:26" pos:end="393:37"><name pos:start="393:26" pos:end="393:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="393:40" pos:end="393:75"><expr pos:start="393:40" pos:end="393:75"><literal type="string" pos:start="393:40" pos:end="393:75">"Invalid value for log2_min_tb_size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:34"><expr pos:start="395:9" pos:end="395:33"><name pos:start="395:9" pos:end="395:11">ret</name> <operator pos:start="395:13" pos:end="395:13">=</operator> <name pos:start="395:15" pos:end="395:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="397:9" pos:end="397:17">goto <name pos:start="397:14" pos:end="397:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:70"><expr pos:start="401:5" pos:end="401:69"><name pos:start="401:5" pos:end="401:44"><name pos:start="401:5" pos:end="401:7">sps</name><operator pos:start="401:8" pos:end="401:9">-&gt;</operator><name pos:start="401:10" pos:end="401:44">max_transform_hierarchy_depth_inter</name></name> <operator pos:start="401:46" pos:end="401:46">=</operator> <call pos:start="401:48" pos:end="401:69"><name pos:start="401:48" pos:end="401:65">get_ue_golomb_long</name><argument_list pos:start="401:66" pos:end="401:69">(<argument pos:start="401:67" pos:end="401:68"><expr pos:start="401:67" pos:end="401:68"><name pos:start="401:67" pos:end="401:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:70"><expr pos:start="403:5" pos:end="403:69"><name pos:start="403:5" pos:end="403:44"><name pos:start="403:5" pos:end="403:7">sps</name><operator pos:start="403:8" pos:end="403:9">-&gt;</operator><name pos:start="403:10" pos:end="403:44">max_transform_hierarchy_depth_intra</name></name> <operator pos:start="403:46" pos:end="403:46">=</operator> <call pos:start="403:48" pos:end="403:69"><name pos:start="403:48" pos:end="403:65">get_ue_golomb_long</name><argument_list pos:start="403:66" pos:end="403:69">(<argument pos:start="403:67" pos:end="403:68"><expr pos:start="403:67" pos:end="403:68"><name pos:start="403:67" pos:end="403:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="407:5" pos:end="407:50"><expr pos:start="407:5" pos:end="407:49"><name pos:start="407:5" pos:end="407:33"><name pos:start="407:5" pos:end="407:7">sps</name><operator pos:start="407:8" pos:end="407:9">-&gt;</operator><name pos:start="407:10" pos:end="407:33">scaling_list_enable_flag</name></name> <operator pos:start="407:35" pos:end="407:35">=</operator> <call pos:start="407:37" pos:end="407:49"><name pos:start="407:37" pos:end="407:45">get_bits1</name><argument_list pos:start="407:46" pos:end="407:49">(<argument pos:start="407:47" pos:end="407:48"><expr pos:start="407:47" pos:end="407:48"><name pos:start="407:47" pos:end="407:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="409:5" pos:end="425:5"><if pos:start="409:5" pos:end="425:5">if <condition pos:start="409:8" pos:end="409:38">(<expr pos:start="409:9" pos:end="409:37"><name pos:start="409:9" pos:end="409:37"><name pos:start="409:9" pos:end="409:11">sps</name><operator pos:start="409:12" pos:end="409:13">-&gt;</operator><name pos:start="409:14" pos:end="409:37">scaling_list_enable_flag</name></name></expr>)</condition> <block pos:start="409:40" pos:end="425:5">{<block_content pos:start="411:9" pos:end="423:9">

        <expr_stmt pos:start="411:9" pos:end="411:58"><expr pos:start="411:9" pos:end="411:57"><call pos:start="411:9" pos:end="411:57"><name pos:start="411:9" pos:end="411:37">set_default_scaling_list_data</name><argument_list pos:start="411:38" pos:end="411:57">(<argument pos:start="411:39" pos:end="411:56"><expr pos:start="411:39" pos:end="411:56"><operator pos:start="411:39" pos:end="411:39">&amp;</operator><name pos:start="411:40" pos:end="411:56"><name pos:start="411:40" pos:end="411:42">sps</name><operator pos:start="411:43" pos:end="411:44">-&gt;</operator><name pos:start="411:45" pos:end="411:56">scaling_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="415:9" pos:end="423:9"><if pos:start="415:9" pos:end="423:9">if <condition pos:start="415:12" pos:end="415:26">(<expr pos:start="415:13" pos:end="415:25"><call pos:start="415:13" pos:end="415:25"><name pos:start="415:13" pos:end="415:21">get_bits1</name><argument_list pos:start="415:22" pos:end="415:25">(<argument pos:start="415:23" pos:end="415:24"><expr pos:start="415:23" pos:end="415:24"><name pos:start="415:23" pos:end="415:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="415:28" pos:end="423:9">{<block_content pos:start="417:13" pos:end="421:25">

            <expr_stmt pos:start="417:13" pos:end="417:64"><expr pos:start="417:13" pos:end="417:63"><name pos:start="417:13" pos:end="417:15">ret</name> <operator pos:start="417:17" pos:end="417:17">=</operator> <call pos:start="417:19" pos:end="417:63"><name pos:start="417:19" pos:end="417:35">scaling_list_data</name><argument_list pos:start="417:36" pos:end="417:63">(<argument pos:start="417:37" pos:end="417:37"><expr pos:start="417:37" pos:end="417:37"><name pos:start="417:37" pos:end="417:37">s</name></expr></argument>, <argument pos:start="417:40" pos:end="417:57"><expr pos:start="417:40" pos:end="417:57"><operator pos:start="417:40" pos:end="417:40">&amp;</operator><name pos:start="417:41" pos:end="417:57"><name pos:start="417:41" pos:end="417:43">sps</name><operator pos:start="417:44" pos:end="417:45">-&gt;</operator><name pos:start="417:46" pos:end="417:57">scaling_list</name></name></expr></argument>, <argument pos:start="417:60" pos:end="417:62"><expr pos:start="417:60" pos:end="417:62"><name pos:start="417:60" pos:end="417:62">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="419:13" pos:end="421:25"><if pos:start="419:13" pos:end="421:25">if <condition pos:start="419:16" pos:end="419:24">(<expr pos:start="419:17" pos:end="419:23"><name pos:start="419:17" pos:end="419:19">ret</name> <operator pos:start="419:21" pos:end="419:21">&lt;</operator> <literal type="number" pos:start="419:23" pos:end="419:23">0</literal></expr>)</condition><block type="pseudo" pos:start="421:17" pos:end="421:25"><block_content pos:start="421:17" pos:end="421:25">

                <goto pos:start="421:17" pos:end="421:25">goto <name pos:start="421:22" pos:end="421:24">err</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="429:5" pos:end="429:42"><expr pos:start="429:5" pos:end="429:41"><name pos:start="429:5" pos:end="429:25"><name pos:start="429:5" pos:end="429:7">sps</name><operator pos:start="429:8" pos:end="429:9">-&gt;</operator><name pos:start="429:10" pos:end="429:25">amp_enabled_flag</name></name> <operator pos:start="429:27" pos:end="429:27">=</operator> <call pos:start="429:29" pos:end="429:41"><name pos:start="429:29" pos:end="429:37">get_bits1</name><argument_list pos:start="429:38" pos:end="429:41">(<argument pos:start="429:39" pos:end="429:40"><expr pos:start="429:39" pos:end="429:40"><name pos:start="429:39" pos:end="429:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="431:5" pos:end="431:42"><expr pos:start="431:5" pos:end="431:41"><name pos:start="431:5" pos:end="431:20"><name pos:start="431:5" pos:end="431:7">sps</name><operator pos:start="431:8" pos:end="431:9">-&gt;</operator><name pos:start="431:10" pos:end="431:20">sao_enabled</name></name>      <operator pos:start="431:27" pos:end="431:27">=</operator> <call pos:start="431:29" pos:end="431:41"><name pos:start="431:29" pos:end="431:37">get_bits1</name><argument_list pos:start="431:38" pos:end="431:41">(<argument pos:start="431:39" pos:end="431:40"><expr pos:start="431:39" pos:end="431:40"><name pos:start="431:39" pos:end="431:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="435:5" pos:end="435:42"><expr pos:start="435:5" pos:end="435:41"><name pos:start="435:5" pos:end="435:25"><name pos:start="435:5" pos:end="435:7">sps</name><operator pos:start="435:8" pos:end="435:9">-&gt;</operator><name pos:start="435:10" pos:end="435:25">pcm_enabled_flag</name></name> <operator pos:start="435:27" pos:end="435:27">=</operator> <call pos:start="435:29" pos:end="435:41"><name pos:start="435:29" pos:end="435:37">get_bits1</name><argument_list pos:start="435:38" pos:end="435:41">(<argument pos:start="435:39" pos:end="435:40"><expr pos:start="435:39" pos:end="435:40"><name pos:start="435:39" pos:end="435:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="437:5" pos:end="467:5"><if pos:start="437:5" pos:end="467:5">if <condition pos:start="437:8" pos:end="437:30">(<expr pos:start="437:9" pos:end="437:29"><name pos:start="437:9" pos:end="437:29"><name pos:start="437:9" pos:end="437:11">sps</name><operator pos:start="437:12" pos:end="437:13">-&gt;</operator><name pos:start="437:14" pos:end="437:29">pcm_enabled_flag</name></name></expr>)</condition> <block pos:start="437:32" pos:end="467:5">{<block_content pos:start="439:9" pos:end="465:58">

        <expr_stmt pos:start="439:9" pos:end="439:51"><expr pos:start="439:9" pos:end="439:50"><name pos:start="439:9" pos:end="439:26"><name pos:start="439:9" pos:end="439:11">sps</name><operator pos:start="439:12" pos:end="439:13">-&gt;</operator><name pos:start="439:14" pos:end="439:16">pcm</name><operator pos:start="439:17" pos:end="439:17">.</operator><name pos:start="439:18" pos:end="439:26">bit_depth</name></name>   <operator pos:start="439:30" pos:end="439:30">=</operator> <call pos:start="439:32" pos:end="439:46"><name pos:start="439:32" pos:end="439:39">get_bits</name><argument_list pos:start="439:40" pos:end="439:46">(<argument pos:start="439:41" pos:end="439:42"><expr pos:start="439:41" pos:end="439:42"><name pos:start="439:41" pos:end="439:42">gb</name></expr></argument>, <argument pos:start="439:45" pos:end="439:45"><expr pos:start="439:45" pos:end="439:45"><literal type="number" pos:start="439:45" pos:end="439:45">4</literal></expr></argument>)</argument_list></call> <operator pos:start="439:48" pos:end="439:48">+</operator> <literal type="number" pos:start="439:50" pos:end="439:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:56"><expr pos:start="441:9" pos:end="441:55"><name pos:start="441:9" pos:end="441:33"><name pos:start="441:9" pos:end="441:11">sps</name><operator pos:start="441:12" pos:end="441:13">-&gt;</operator><name pos:start="441:14" pos:end="441:16">pcm</name><operator pos:start="441:17" pos:end="441:17">.</operator><name pos:start="441:18" pos:end="441:33">bit_depth_chroma</name></name> <operator pos:start="441:35" pos:end="441:35">=</operator> <call pos:start="441:37" pos:end="441:51"><name pos:start="441:37" pos:end="441:44">get_bits</name><argument_list pos:start="441:45" pos:end="441:51">(<argument pos:start="441:46" pos:end="441:47"><expr pos:start="441:46" pos:end="441:47"><name pos:start="441:46" pos:end="441:47">gb</name></expr></argument>, <argument pos:start="441:50" pos:end="441:50"><expr pos:start="441:50" pos:end="441:50"><literal type="number" pos:start="441:50" pos:end="441:50">4</literal></expr></argument>)</argument_list></call> <operator pos:start="441:53" pos:end="441:53">+</operator> <literal type="number" pos:start="441:55" pos:end="441:55">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:67"><expr pos:start="443:9" pos:end="443:66"><name pos:start="443:9" pos:end="443:37"><name pos:start="443:9" pos:end="443:11">sps</name><operator pos:start="443:12" pos:end="443:13">-&gt;</operator><name pos:start="443:14" pos:end="443:16">pcm</name><operator pos:start="443:17" pos:end="443:17">.</operator><name pos:start="443:18" pos:end="443:37">log2_min_pcm_cb_size</name></name> <operator pos:start="443:39" pos:end="443:39">=</operator> <call pos:start="443:41" pos:end="443:62"><name pos:start="443:41" pos:end="443:58">get_ue_golomb_long</name><argument_list pos:start="443:59" pos:end="443:62">(<argument pos:start="443:60" pos:end="443:61"><expr pos:start="443:60" pos:end="443:61"><name pos:start="443:60" pos:end="443:61">gb</name></expr></argument>)</argument_list></call> <operator pos:start="443:64" pos:end="443:64">+</operator> <literal type="number" pos:start="443:66" pos:end="443:66">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="447:63"><expr pos:start="445:9" pos:end="447:62"><name pos:start="445:9" pos:end="445:37"><name pos:start="445:9" pos:end="445:11">sps</name><operator pos:start="445:12" pos:end="445:13">-&gt;</operator><name pos:start="445:14" pos:end="445:16">pcm</name><operator pos:start="445:17" pos:end="445:17">.</operator><name pos:start="445:18" pos:end="445:37">log2_max_pcm_cb_size</name></name> <operator pos:start="445:39" pos:end="445:39">=</operator> <name pos:start="445:41" pos:end="445:69"><name pos:start="445:41" pos:end="445:43">sps</name><operator pos:start="445:44" pos:end="445:45">-&gt;</operator><name pos:start="445:46" pos:end="445:48">pcm</name><operator pos:start="445:49" pos:end="445:49">.</operator><name pos:start="445:50" pos:end="445:69">log2_min_pcm_cb_size</name></name> <operator pos:start="445:71" pos:end="445:71">+</operator>

                                        <call pos:start="447:41" pos:end="447:62"><name pos:start="447:41" pos:end="447:58">get_ue_golomb_long</name><argument_list pos:start="447:59" pos:end="447:62">(<argument pos:start="447:60" pos:end="447:61"><expr pos:start="447:60" pos:end="447:61"><name pos:start="447:60" pos:end="447:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="449:9" pos:end="461:9"><if pos:start="449:9" pos:end="461:9">if <condition pos:start="449:12" pos:end="449:48">(<expr pos:start="449:13" pos:end="449:47"><name pos:start="449:13" pos:end="449:30"><name pos:start="449:13" pos:end="449:15">sps</name><operator pos:start="449:16" pos:end="449:17">-&gt;</operator><name pos:start="449:18" pos:end="449:20">pcm</name><operator pos:start="449:21" pos:end="449:21">.</operator><name pos:start="449:22" pos:end="449:30">bit_depth</name></name> <operator pos:start="449:32" pos:end="449:32">&gt;</operator> <name pos:start="449:34" pos:end="449:47"><name pos:start="449:34" pos:end="449:36">sps</name><operator pos:start="449:37" pos:end="449:38">-&gt;</operator><name pos:start="449:39" pos:end="449:47">bit_depth</name></name></expr>)</condition> <block pos:start="449:50" pos:end="461:9">{<block_content pos:start="451:13" pos:end="459:21">

            <expr_stmt pos:start="451:13" pos:end="455:55"><expr pos:start="451:13" pos:end="455:54"><call pos:start="451:13" pos:end="455:54"><name pos:start="451:13" pos:end="451:18">av_log</name><argument_list pos:start="451:19" pos:end="455:54">(<argument pos:start="451:20" pos:end="451:27"><expr pos:start="451:20" pos:end="451:27"><name pos:start="451:20" pos:end="451:27"><name pos:start="451:20" pos:end="451:20">s</name><operator pos:start="451:21" pos:end="451:22">-&gt;</operator><name pos:start="451:23" pos:end="451:27">avctx</name></name></expr></argument>, <argument pos:start="451:30" pos:end="451:41"><expr pos:start="451:30" pos:end="451:41"><name pos:start="451:30" pos:end="451:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="453:20" pos:end="453:79"><expr pos:start="453:20" pos:end="453:79"><literal type="string" pos:start="453:20" pos:end="453:79">"PCM bit depth (%d) is greater than normal bit depth (%d)\n"</literal></expr></argument>,

                   <argument pos:start="455:20" pos:end="455:37"><expr pos:start="455:20" pos:end="455:37"><name pos:start="455:20" pos:end="455:37"><name pos:start="455:20" pos:end="455:22">sps</name><operator pos:start="455:23" pos:end="455:24">-&gt;</operator><name pos:start="455:25" pos:end="455:27">pcm</name><operator pos:start="455:28" pos:end="455:28">.</operator><name pos:start="455:29" pos:end="455:37">bit_depth</name></name></expr></argument>, <argument pos:start="455:40" pos:end="455:53"><expr pos:start="455:40" pos:end="455:53"><name pos:start="455:40" pos:end="455:53"><name pos:start="455:40" pos:end="455:42">sps</name><operator pos:start="455:43" pos:end="455:44">-&gt;</operator><name pos:start="455:45" pos:end="455:53">bit_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:38"><expr pos:start="457:13" pos:end="457:37"><name pos:start="457:13" pos:end="457:15">ret</name> <operator pos:start="457:17" pos:end="457:17">=</operator> <name pos:start="457:19" pos:end="457:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="459:13" pos:end="459:21">goto <name pos:start="459:18" pos:end="459:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="465:9" pos:end="465:58"><expr pos:start="465:9" pos:end="465:57"><name pos:start="465:9" pos:end="465:41"><name pos:start="465:9" pos:end="465:11">sps</name><operator pos:start="465:12" pos:end="465:13">-&gt;</operator><name pos:start="465:14" pos:end="465:16">pcm</name><operator pos:start="465:17" pos:end="465:17">.</operator><name pos:start="465:18" pos:end="465:41">loop_filter_disable_flag</name></name> <operator pos:start="465:43" pos:end="465:43">=</operator> <call pos:start="465:45" pos:end="465:57"><name pos:start="465:45" pos:end="465:53">get_bits1</name><argument_list pos:start="465:54" pos:end="465:57">(<argument pos:start="465:55" pos:end="465:56"><expr pos:start="465:55" pos:end="465:56"><name pos:start="465:55" pos:end="465:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="471:5" pos:end="471:44"><expr pos:start="471:5" pos:end="471:43"><name pos:start="471:5" pos:end="471:18"><name pos:start="471:5" pos:end="471:7">sps</name><operator pos:start="471:8" pos:end="471:9">-&gt;</operator><name pos:start="471:10" pos:end="471:18">nb_st_rps</name></name> <operator pos:start="471:20" pos:end="471:20">=</operator> <call pos:start="471:22" pos:end="471:43"><name pos:start="471:22" pos:end="471:39">get_ue_golomb_long</name><argument_list pos:start="471:40" pos:end="471:43">(<argument pos:start="471:41" pos:end="471:42"><expr pos:start="471:41" pos:end="471:42"><name pos:start="471:41" pos:end="471:42">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="473:5" pos:end="483:5"><if pos:start="473:5" pos:end="483:5">if <condition pos:start="473:8" pos:end="473:50">(<expr pos:start="473:9" pos:end="473:49"><name pos:start="473:9" pos:end="473:22"><name pos:start="473:9" pos:end="473:11">sps</name><operator pos:start="473:12" pos:end="473:13">-&gt;</operator><name pos:start="473:14" pos:end="473:22">nb_st_rps</name></name> <operator pos:start="473:24" pos:end="473:24">&gt;</operator> <name pos:start="473:26" pos:end="473:49">MAX_SHORT_TERM_RPS_COUNT</name></expr>)</condition> <block pos:start="473:52" pos:end="483:5">{<block_content pos:start="475:9" pos:end="481:17">

        <expr_stmt pos:start="475:9" pos:end="477:31"><expr pos:start="475:9" pos:end="477:30"><call pos:start="475:9" pos:end="477:30"><name pos:start="475:9" pos:end="475:14">av_log</name><argument_list pos:start="475:15" pos:end="477:30">(<argument pos:start="475:16" pos:end="475:23"><expr pos:start="475:16" pos:end="475:23"><name pos:start="475:16" pos:end="475:23"><name pos:start="475:16" pos:end="475:16">s</name><operator pos:start="475:17" pos:end="475:18">-&gt;</operator><name pos:start="475:19" pos:end="475:23">avctx</name></name></expr></argument>, <argument pos:start="475:26" pos:end="475:37"><expr pos:start="475:26" pos:end="475:37"><name pos:start="475:26" pos:end="475:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="475:40" pos:end="475:71"><expr pos:start="475:40" pos:end="475:71"><literal type="string" pos:start="475:40" pos:end="475:71">"Too many short term RPS: %d.\n"</literal></expr></argument>,

               <argument pos:start="477:16" pos:end="477:29"><expr pos:start="477:16" pos:end="477:29"><name pos:start="477:16" pos:end="477:29"><name pos:start="477:16" pos:end="477:18">sps</name><operator pos:start="477:19" pos:end="477:20">-&gt;</operator><name pos:start="477:21" pos:end="477:29">nb_st_rps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="479:9" pos:end="479:34"><expr pos:start="479:9" pos:end="479:33"><name pos:start="479:9" pos:end="479:11">ret</name> <operator pos:start="479:13" pos:end="479:13">=</operator> <name pos:start="479:15" pos:end="479:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="481:9" pos:end="481:17">goto <name pos:start="481:14" pos:end="481:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <for pos:start="485:5" pos:end="493:5">for <control pos:start="485:9" pos:end="485:40">(<init pos:start="485:10" pos:end="485:15"><expr pos:start="485:10" pos:end="485:14"><name pos:start="485:10" pos:end="485:10">i</name> <operator pos:start="485:12" pos:end="485:12">=</operator> <literal type="number" pos:start="485:14" pos:end="485:14">0</literal></expr>;</init> <condition pos:start="485:17" pos:end="485:35"><expr pos:start="485:17" pos:end="485:34"><name pos:start="485:17" pos:end="485:17">i</name> <operator pos:start="485:19" pos:end="485:19">&lt;</operator> <name pos:start="485:21" pos:end="485:34"><name pos:start="485:21" pos:end="485:23">sps</name><operator pos:start="485:24" pos:end="485:25">-&gt;</operator><name pos:start="485:26" pos:end="485:34">nb_st_rps</name></name></expr>;</condition> <incr pos:start="485:37" pos:end="485:39"><expr pos:start="485:37" pos:end="485:39"><name pos:start="485:37" pos:end="485:37">i</name><operator pos:start="485:38" pos:end="485:39">++</operator></expr></incr>)</control> <block pos:start="485:42" pos:end="493:5">{<block_content pos:start="487:9" pos:end="491:21">

        <if_stmt pos:start="487:9" pos:end="491:21"><if pos:start="487:9" pos:end="491:21">if <condition pos:start="487:12" pos:end="489:62">(<expr pos:start="487:13" pos:end="489:61"><operator pos:start="487:13" pos:end="487:13">(</operator><name pos:start="487:14" pos:end="487:16">ret</name> <operator pos:start="487:18" pos:end="487:18">=</operator> <call pos:start="487:20" pos:end="489:56"><name pos:start="487:20" pos:end="487:48">ff_hevc_decode_short_term_rps</name><argument_list pos:start="487:49" pos:end="489:56">(<argument pos:start="487:50" pos:end="487:50"><expr pos:start="487:50" pos:end="487:50"><name pos:start="487:50" pos:end="487:50">s</name></expr></argument>, <argument pos:start="487:53" pos:end="487:67"><expr pos:start="487:53" pos:end="487:67"><operator pos:start="487:53" pos:end="487:53">&amp;</operator><name pos:start="487:54" pos:end="487:67"><name pos:start="487:54" pos:end="487:56">sps</name><operator pos:start="487:57" pos:end="487:58">-&gt;</operator><name pos:start="487:59" pos:end="487:64">st_rps</name><index pos:start="487:65" pos:end="487:67">[<expr pos:start="487:66" pos:end="487:66"><name pos:start="487:66" pos:end="487:66">i</name></expr>]</index></name></expr></argument>,

                                                 <argument pos:start="489:50" pos:end="489:52"><expr pos:start="489:50" pos:end="489:52"><name pos:start="489:50" pos:end="489:52">sps</name></expr></argument>, <argument pos:start="489:55" pos:end="489:55"><expr pos:start="489:55" pos:end="489:55"><literal type="number" pos:start="489:55" pos:end="489:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="489:57" pos:end="489:57">)</operator> <operator pos:start="489:59" pos:end="489:59">&lt;</operator> <literal type="number" pos:start="489:61" pos:end="489:61">0</literal></expr>)</condition><block type="pseudo" pos:start="491:13" pos:end="491:21"><block_content pos:start="491:13" pos:end="491:21">

            <goto pos:start="491:13" pos:end="491:21">goto <name pos:start="491:18" pos:end="491:20">err</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="497:5" pos:end="497:57"><expr pos:start="497:5" pos:end="497:56"><name pos:start="497:5" pos:end="497:40"><name pos:start="497:5" pos:end="497:7">sps</name><operator pos:start="497:8" pos:end="497:9">-&gt;</operator><name pos:start="497:10" pos:end="497:40">long_term_ref_pics_present_flag</name></name> <operator pos:start="497:42" pos:end="497:42">=</operator> <call pos:start="497:44" pos:end="497:56"><name pos:start="497:44" pos:end="497:52">get_bits1</name><argument_list pos:start="497:53" pos:end="497:56">(<argument pos:start="497:54" pos:end="497:55"><expr pos:start="497:54" pos:end="497:55"><name pos:start="497:54" pos:end="497:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="499:5" pos:end="521:5"><if pos:start="499:5" pos:end="521:5">if <condition pos:start="499:8" pos:end="499:45">(<expr pos:start="499:9" pos:end="499:44"><name pos:start="499:9" pos:end="499:44"><name pos:start="499:9" pos:end="499:11">sps</name><operator pos:start="499:12" pos:end="499:13">-&gt;</operator><name pos:start="499:14" pos:end="499:44">long_term_ref_pics_present_flag</name></name></expr>)</condition> <block pos:start="499:47" pos:end="521:5">{<block_content pos:start="501:9" pos:end="519:9">

        <expr_stmt pos:start="501:9" pos:end="501:65"><expr pos:start="501:9" pos:end="501:64"><name pos:start="501:9" pos:end="501:39"><name pos:start="501:9" pos:end="501:11">sps</name><operator pos:start="501:12" pos:end="501:13">-&gt;</operator><name pos:start="501:14" pos:end="501:39">num_long_term_ref_pics_sps</name></name> <operator pos:start="501:41" pos:end="501:41">=</operator> <call pos:start="501:43" pos:end="501:64"><name pos:start="501:43" pos:end="501:60">get_ue_golomb_long</name><argument_list pos:start="501:61" pos:end="501:64">(<argument pos:start="501:62" pos:end="501:63"><expr pos:start="501:62" pos:end="501:63"><name pos:start="501:62" pos:end="501:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="503:9" pos:end="511:9"><if pos:start="503:9" pos:end="511:9">if <condition pos:start="503:12" pos:end="503:50">(<expr pos:start="503:13" pos:end="503:49"><name pos:start="503:13" pos:end="503:43"><name pos:start="503:13" pos:end="503:15">sps</name><operator pos:start="503:16" pos:end="503:17">-&gt;</operator><name pos:start="503:18" pos:end="503:43">num_long_term_ref_pics_sps</name></name> <operator pos:start="503:45" pos:end="503:45">&gt;</operator> <literal type="number" pos:start="503:47" pos:end="503:49">31U</literal></expr>)</condition> <block pos:start="503:52" pos:end="511:9">{<block_content pos:start="505:13" pos:end="509:21">

            <expr_stmt pos:start="505:13" pos:end="507:52"><expr pos:start="505:13" pos:end="507:51"><call pos:start="505:13" pos:end="507:51"><name pos:start="505:13" pos:end="505:18">av_log</name><argument_list pos:start="505:19" pos:end="507:51">(<argument pos:start="505:20" pos:end="505:27"><expr pos:start="505:20" pos:end="505:27"><name pos:start="505:20" pos:end="505:27"><name pos:start="505:20" pos:end="505:20">s</name><operator pos:start="505:21" pos:end="505:22">-&gt;</operator><name pos:start="505:23" pos:end="505:27">avctx</name></name></expr></argument>, <argument pos:start="505:30" pos:end="505:41"><expr pos:start="505:30" pos:end="505:41"><name pos:start="505:30" pos:end="505:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="505:44" pos:end="505:93"><expr pos:start="505:44" pos:end="505:93"><literal type="string" pos:start="505:44" pos:end="505:93">"num_long_term_ref_pics_sps %d is out of range.\n"</literal></expr></argument>,

                   <argument pos:start="507:20" pos:end="507:50"><expr pos:start="507:20" pos:end="507:50"><name pos:start="507:20" pos:end="507:50"><name pos:start="507:20" pos:end="507:22">sps</name><operator pos:start="507:23" pos:end="507:24">-&gt;</operator><name pos:start="507:25" pos:end="507:50">num_long_term_ref_pics_sps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="509:13" pos:end="509:21">goto <name pos:start="509:18" pos:end="509:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <for pos:start="513:9" pos:end="519:9">for <control pos:start="513:13" pos:end="513:61">(<init pos:start="513:14" pos:end="513:19"><expr pos:start="513:14" pos:end="513:18"><name pos:start="513:14" pos:end="513:14">i</name> <operator pos:start="513:16" pos:end="513:16">=</operator> <literal type="number" pos:start="513:18" pos:end="513:18">0</literal></expr>;</init> <condition pos:start="513:21" pos:end="513:56"><expr pos:start="513:21" pos:end="513:55"><name pos:start="513:21" pos:end="513:21">i</name> <operator pos:start="513:23" pos:end="513:23">&lt;</operator> <name pos:start="513:25" pos:end="513:55"><name pos:start="513:25" pos:end="513:27">sps</name><operator pos:start="513:28" pos:end="513:29">-&gt;</operator><name pos:start="513:30" pos:end="513:55">num_long_term_ref_pics_sps</name></name></expr>;</condition> <incr pos:start="513:58" pos:end="513:60"><expr pos:start="513:58" pos:end="513:60"><name pos:start="513:58" pos:end="513:58">i</name><operator pos:start="513:59" pos:end="513:60">++</operator></expr></incr>)</control> <block pos:start="513:63" pos:end="519:9">{<block_content pos:start="515:13" pos:end="517:65">

            <expr_stmt pos:start="515:13" pos:end="515:87"><expr pos:start="515:13" pos:end="515:86"><name pos:start="515:13" pos:end="515:42"><name pos:start="515:13" pos:end="515:15">sps</name><operator pos:start="515:16" pos:end="515:17">-&gt;</operator><name pos:start="515:18" pos:end="515:39">lt_ref_pic_poc_lsb_sps</name><index pos:start="515:40" pos:end="515:42">[<expr pos:start="515:41" pos:end="515:41"><name pos:start="515:41" pos:end="515:41">i</name></expr>]</index></name>       <operator pos:start="515:50" pos:end="515:50">=</operator> <call pos:start="515:52" pos:end="515:86"><name pos:start="515:52" pos:end="515:59">get_bits</name><argument_list pos:start="515:60" pos:end="515:86">(<argument pos:start="515:61" pos:end="515:62"><expr pos:start="515:61" pos:end="515:62"><name pos:start="515:61" pos:end="515:62">gb</name></expr></argument>, <argument pos:start="515:65" pos:end="515:85"><expr pos:start="515:65" pos:end="515:85"><name pos:start="515:65" pos:end="515:85"><name pos:start="515:65" pos:end="515:67">sps</name><operator pos:start="515:68" pos:end="515:69">-&gt;</operator><name pos:start="515:70" pos:end="515:85">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:65"><expr pos:start="517:13" pos:end="517:64"><name pos:start="517:13" pos:end="517:48"><name pos:start="517:13" pos:end="517:15">sps</name><operator pos:start="517:16" pos:end="517:17">-&gt;</operator><name pos:start="517:18" pos:end="517:45">used_by_curr_pic_lt_sps_flag</name><index pos:start="517:46" pos:end="517:48">[<expr pos:start="517:47" pos:end="517:47"><name pos:start="517:47" pos:end="517:47">i</name></expr>]</index></name> <operator pos:start="517:50" pos:end="517:50">=</operator> <call pos:start="517:52" pos:end="517:64"><name pos:start="517:52" pos:end="517:60">get_bits1</name><argument_list pos:start="517:61" pos:end="517:64">(<argument pos:start="517:62" pos:end="517:63"><expr pos:start="517:62" pos:end="517:63"><name pos:start="517:62" pos:end="517:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="525:5" pos:end="525:64"><expr pos:start="525:5" pos:end="525:63"><name pos:start="525:5" pos:end="525:38"><name pos:start="525:5" pos:end="525:7">sps</name><operator pos:start="525:8" pos:end="525:9">-&gt;</operator><name pos:start="525:10" pos:end="525:38">sps_temporal_mvp_enabled_flag</name></name>          <operator pos:start="525:49" pos:end="525:49">=</operator> <call pos:start="525:51" pos:end="525:63"><name pos:start="525:51" pos:end="525:59">get_bits1</name><argument_list pos:start="525:60" pos:end="525:63">(<argument pos:start="525:61" pos:end="525:62"><expr pos:start="525:61" pos:end="525:62"><name pos:start="525:61" pos:end="525:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="527:5" pos:end="527:64"><expr pos:start="527:5" pos:end="527:63"><name pos:start="527:5" pos:end="527:47"><name pos:start="527:5" pos:end="527:7">sps</name><operator pos:start="527:8" pos:end="527:9">-&gt;</operator><name pos:start="527:10" pos:end="527:47">sps_strong_intra_smoothing_enable_flag</name></name> <operator pos:start="527:49" pos:end="527:49">=</operator> <call pos:start="527:51" pos:end="527:63"><name pos:start="527:51" pos:end="527:59">get_bits1</name><argument_list pos:start="527:60" pos:end="527:63">(<argument pos:start="527:61" pos:end="527:62"><expr pos:start="527:61" pos:end="527:62"><name pos:start="527:61" pos:end="527:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="529:5" pos:end="529:38"><expr pos:start="529:5" pos:end="529:37"><name pos:start="529:5" pos:end="529:16"><name pos:start="529:5" pos:end="529:7">sps</name><operator pos:start="529:8" pos:end="529:9">-&gt;</operator><name pos:start="529:10" pos:end="529:12">vui</name><operator pos:start="529:13" pos:end="529:13">.</operator><name pos:start="529:14" pos:end="529:16">sar</name></name> <operator pos:start="529:18" pos:end="529:18">=</operator> <operator pos:start="529:20" pos:end="529:20">(</operator><name pos:start="529:21" pos:end="529:30">AVRational</name><operator pos:start="529:31" pos:end="529:31">)</operator><block pos:start="529:32" pos:end="529:37">{<expr pos:start="529:33" pos:end="529:33"><literal type="number" pos:start="529:33" pos:end="529:33">0</literal></expr>, <expr pos:start="529:36" pos:end="529:36"><literal type="number" pos:start="529:36" pos:end="529:36">1</literal></expr>}</block></expr>;</expr_stmt>

    <expr_stmt pos:start="531:5" pos:end="531:32"><expr pos:start="531:5" pos:end="531:31"><name pos:start="531:5" pos:end="531:15">vui_present</name> <operator pos:start="531:17" pos:end="531:17">=</operator> <call pos:start="531:19" pos:end="531:31"><name pos:start="531:19" pos:end="531:27">get_bits1</name><argument_list pos:start="531:28" pos:end="531:31">(<argument pos:start="531:29" pos:end="531:30"><expr pos:start="531:29" pos:end="531:30"><name pos:start="531:29" pos:end="531:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="533:5" pos:end="535:27"><if pos:start="533:5" pos:end="535:27">if <condition pos:start="533:8" pos:end="533:20">(<expr pos:start="533:9" pos:end="533:19"><name pos:start="533:9" pos:end="533:19">vui_present</name></expr>)</condition><block type="pseudo" pos:start="535:9" pos:end="535:27"><block_content pos:start="535:9" pos:end="535:27">

        <expr_stmt pos:start="535:9" pos:end="535:27"><expr pos:start="535:9" pos:end="535:26"><call pos:start="535:9" pos:end="535:26"><name pos:start="535:9" pos:end="535:18">decode_vui</name><argument_list pos:start="535:19" pos:end="535:26">(<argument pos:start="535:20" pos:end="535:20"><expr pos:start="535:20" pos:end="535:20"><name pos:start="535:20" pos:end="535:20">s</name></expr></argument>, <argument pos:start="535:23" pos:end="535:25"><expr pos:start="535:23" pos:end="535:25"><name pos:start="535:23" pos:end="535:25">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="539:5" pos:end="607:5"><if pos:start="539:5" pos:end="607:5">if <condition pos:start="539:8" pos:end="539:22">(<expr pos:start="539:9" pos:end="539:21"><call pos:start="539:9" pos:end="539:21"><name pos:start="539:9" pos:end="539:17">get_bits1</name><argument_list pos:start="539:18" pos:end="539:21">(<argument pos:start="539:19" pos:end="539:20"><expr pos:start="539:19" pos:end="539:20"><name pos:start="539:19" pos:end="539:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="539:24" pos:end="607:5">{<block_content pos:start="541:9" pos:end="605:9"> <comment type="line" pos:start="539:26" pos:end="539:46">// sps_extension_flag</comment>

        <decl_stmt pos:start="541:9" pos:end="541:34"><decl pos:start="541:9" pos:end="541:33"><type pos:start="541:9" pos:end="541:11"><name pos:start="541:9" pos:end="541:11">int</name></type> <name pos:start="541:13" pos:end="541:33"><name pos:start="541:13" pos:end="541:30">sps_extension_flag</name><index pos:start="541:31" pos:end="541:33">[<expr pos:start="541:32" pos:end="541:32"><literal type="number" pos:start="541:32" pos:end="541:32">1</literal></expr>]</index></name></decl>;</decl_stmt>

        <for pos:start="543:9" pos:end="545:50">for <control pos:start="543:13" pos:end="543:31">(<init pos:start="543:14" pos:end="543:19"><expr pos:start="543:14" pos:end="543:18"><name pos:start="543:14" pos:end="543:14">i</name> <operator pos:start="543:16" pos:end="543:16">=</operator> <literal type="number" pos:start="543:18" pos:end="543:18">0</literal></expr>;</init> <condition pos:start="543:21" pos:end="543:26"><expr pos:start="543:21" pos:end="543:25"><name pos:start="543:21" pos:end="543:21">i</name> <operator pos:start="543:23" pos:end="543:23">&lt;</operator> <literal type="number" pos:start="543:25" pos:end="543:25">1</literal></expr>;</condition> <incr pos:start="543:28" pos:end="543:30"><expr pos:start="543:28" pos:end="543:30"><name pos:start="543:28" pos:end="543:28">i</name><operator pos:start="543:29" pos:end="543:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="545:13" pos:end="545:50"><block_content pos:start="545:13" pos:end="545:50">

            <expr_stmt pos:start="545:13" pos:end="545:50"><expr pos:start="545:13" pos:end="545:49"><name pos:start="545:13" pos:end="545:33"><name pos:start="545:13" pos:end="545:30">sps_extension_flag</name><index pos:start="545:31" pos:end="545:33">[<expr pos:start="545:32" pos:end="545:32"><name pos:start="545:32" pos:end="545:32">i</name></expr>]</index></name> <operator pos:start="545:35" pos:end="545:35">=</operator> <call pos:start="545:37" pos:end="545:49"><name pos:start="545:37" pos:end="545:45">get_bits1</name><argument_list pos:start="545:46" pos:end="545:49">(<argument pos:start="545:47" pos:end="545:48"><expr pos:start="545:47" pos:end="545:48"><name pos:start="545:47" pos:end="545:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="547:9" pos:end="547:25"><expr pos:start="547:9" pos:end="547:24"><call pos:start="547:9" pos:end="547:24"><name pos:start="547:9" pos:end="547:17">skip_bits</name><argument_list pos:start="547:18" pos:end="547:24">(<argument pos:start="547:19" pos:end="547:20"><expr pos:start="547:19" pos:end="547:20"><name pos:start="547:19" pos:end="547:20">gb</name></expr></argument>, <argument pos:start="547:23" pos:end="547:23"><expr pos:start="547:23" pos:end="547:23"><literal type="number" pos:start="547:23" pos:end="547:23">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="547:27" pos:end="547:66">//sps_extension_7bits = get_bits(gb, 7);</comment>

        <if_stmt pos:start="549:9" pos:end="605:9"><if pos:start="549:9" pos:end="605:9">if <condition pos:start="549:12" pos:end="549:34">(<expr pos:start="549:13" pos:end="549:33"><name pos:start="549:13" pos:end="549:33"><name pos:start="549:13" pos:end="549:30">sps_extension_flag</name><index pos:start="549:31" pos:end="549:33">[<expr pos:start="549:32" pos:end="549:32"><literal type="number" pos:start="549:32" pos:end="549:32">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="549:36" pos:end="605:9">{<block_content pos:start="551:13" pos:end="603:80">

            <decl_stmt pos:start="551:13" pos:end="551:51"><decl pos:start="551:13" pos:end="551:50"><type pos:start="551:13" pos:end="551:15"><name pos:start="551:13" pos:end="551:15">int</name></type> <name pos:start="551:17" pos:end="551:50">extended_precision_processing_flag</name></decl>;</decl_stmt>

            <decl_stmt pos:start="553:13" pos:end="553:52"><decl pos:start="553:13" pos:end="553:51"><type pos:start="553:13" pos:end="553:15"><name pos:start="553:13" pos:end="553:15">int</name></type> <name pos:start="553:17" pos:end="553:51">high_precision_offsets_enabled_flag</name></decl>;</decl_stmt>

            <decl_stmt pos:start="555:13" pos:end="555:52"><decl pos:start="555:13" pos:end="555:51"><type pos:start="555:13" pos:end="555:15"><name pos:start="555:13" pos:end="555:15">int</name></type> <name pos:start="555:17" pos:end="555:51">cabac_bypass_alignment_enabled_flag</name></decl>;</decl_stmt>



            <expr_stmt pos:start="559:13" pos:end="559:70"><expr pos:start="559:13" pos:end="559:69"><name pos:start="559:13" pos:end="559:53"><name pos:start="559:13" pos:end="559:15">sps</name><operator pos:start="559:16" pos:end="559:17">-&gt;</operator><name pos:start="559:18" pos:end="559:53">transform_skip_rotation_enabled_flag</name></name> <operator pos:start="559:55" pos:end="559:55">=</operator> <call pos:start="559:57" pos:end="559:69"><name pos:start="559:57" pos:end="559:65">get_bits1</name><argument_list pos:start="559:66" pos:end="559:69">(<argument pos:start="559:67" pos:end="559:68"><expr pos:start="559:67" pos:end="559:68"><name pos:start="559:67" pos:end="559:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:70"><expr pos:start="561:13" pos:end="561:69"><name pos:start="561:13" pos:end="561:52"><name pos:start="561:13" pos:end="561:15">sps</name><operator pos:start="561:16" pos:end="561:17">-&gt;</operator><name pos:start="561:18" pos:end="561:52">transform_skip_context_enabled_flag</name></name>  <operator pos:start="561:55" pos:end="561:55">=</operator> <call pos:start="561:57" pos:end="561:69"><name pos:start="561:57" pos:end="561:65">get_bits1</name><argument_list pos:start="561:66" pos:end="561:69">(<argument pos:start="561:67" pos:end="561:68"><expr pos:start="561:67" pos:end="561:68"><name pos:start="561:67" pos:end="561:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:61"><expr pos:start="563:13" pos:end="563:60"><name pos:start="563:13" pos:end="563:44"><name pos:start="563:13" pos:end="563:15">sps</name><operator pos:start="563:16" pos:end="563:17">-&gt;</operator><name pos:start="563:18" pos:end="563:44">implicit_rdpcm_enabled_flag</name></name> <operator pos:start="563:46" pos:end="563:46">=</operator> <call pos:start="563:48" pos:end="563:60"><name pos:start="563:48" pos:end="563:56">get_bits1</name><argument_list pos:start="563:57" pos:end="563:60">(<argument pos:start="563:58" pos:end="563:59"><expr pos:start="563:58" pos:end="563:59"><name pos:start="563:58" pos:end="563:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="567:13" pos:end="567:61"><expr pos:start="567:13" pos:end="567:60"><name pos:start="567:13" pos:end="567:44"><name pos:start="567:13" pos:end="567:15">sps</name><operator pos:start="567:16" pos:end="567:17">-&gt;</operator><name pos:start="567:18" pos:end="567:44">explicit_rdpcm_enabled_flag</name></name> <operator pos:start="567:46" pos:end="567:46">=</operator> <call pos:start="567:48" pos:end="567:60"><name pos:start="567:48" pos:end="567:56">get_bits1</name><argument_list pos:start="567:57" pos:end="567:60">(<argument pos:start="567:58" pos:end="567:59"><expr pos:start="567:58" pos:end="567:59"><name pos:start="567:58" pos:end="567:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="571:13" pos:end="571:63"><expr pos:start="571:13" pos:end="571:62"><name pos:start="571:13" pos:end="571:46">extended_precision_processing_flag</name> <operator pos:start="571:48" pos:end="571:48">=</operator> <call pos:start="571:50" pos:end="571:62"><name pos:start="571:50" pos:end="571:58">get_bits1</name><argument_list pos:start="571:59" pos:end="571:62">(<argument pos:start="571:60" pos:end="571:61"><expr pos:start="571:60" pos:end="571:61"><name pos:start="571:60" pos:end="571:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="573:13" pos:end="577:79"><if pos:start="573:13" pos:end="577:79">if <condition pos:start="573:16" pos:end="573:51">(<expr pos:start="573:17" pos:end="573:50"><name pos:start="573:17" pos:end="573:50">extended_precision_processing_flag</name></expr>)</condition><block type="pseudo" pos:start="575:17" pos:end="577:79"><block_content pos:start="575:17" pos:end="577:79">

                <expr_stmt pos:start="575:17" pos:end="577:79"><expr pos:start="575:17" pos:end="577:78"><call pos:start="575:17" pos:end="577:78"><name pos:start="575:17" pos:end="575:22">av_log</name><argument_list pos:start="575:23" pos:end="577:78">(<argument pos:start="575:24" pos:end="575:31"><expr pos:start="575:24" pos:end="575:31"><name pos:start="575:24" pos:end="575:31"><name pos:start="575:24" pos:end="575:24">s</name><operator pos:start="575:25" pos:end="575:26">-&gt;</operator><name pos:start="575:27" pos:end="575:31">avctx</name></name></expr></argument>, <argument pos:start="575:34" pos:end="575:47"><expr pos:start="575:34" pos:end="575:47"><name pos:start="575:34" pos:end="575:47">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="577:20" pos:end="577:77"><expr pos:start="577:20" pos:end="577:77"><literal type="string" pos:start="577:20" pos:end="577:77">"extended_precision_processing_flag not yet implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="581:13" pos:end="581:69"><expr pos:start="581:13" pos:end="581:68"><name pos:start="581:13" pos:end="581:46"><name pos:start="581:13" pos:end="581:15">sps</name><operator pos:start="581:16" pos:end="581:17">-&gt;</operator><name pos:start="581:18" pos:end="581:46">intra_smoothing_disabled_flag</name></name>       <operator pos:start="581:54" pos:end="581:54">=</operator> <call pos:start="581:56" pos:end="581:68"><name pos:start="581:56" pos:end="581:64">get_bits1</name><argument_list pos:start="581:65" pos:end="581:68">(<argument pos:start="581:66" pos:end="581:67"><expr pos:start="581:66" pos:end="581:67"><name pos:start="581:66" pos:end="581:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:65"><expr pos:start="583:13" pos:end="583:64"><name pos:start="583:13" pos:end="583:47">high_precision_offsets_enabled_flag</name>  <operator pos:start="583:50" pos:end="583:50">=</operator> <call pos:start="583:52" pos:end="583:64"><name pos:start="583:52" pos:end="583:60">get_bits1</name><argument_list pos:start="583:61" pos:end="583:64">(<argument pos:start="583:62" pos:end="583:63"><expr pos:start="583:62" pos:end="583:63"><name pos:start="583:62" pos:end="583:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="585:13" pos:end="589:80"><if pos:start="585:13" pos:end="589:80">if <condition pos:start="585:16" pos:end="585:52">(<expr pos:start="585:17" pos:end="585:51"><name pos:start="585:17" pos:end="585:51">high_precision_offsets_enabled_flag</name></expr>)</condition><block type="pseudo" pos:start="587:17" pos:end="589:80"><block_content pos:start="587:17" pos:end="589:80">

                <expr_stmt pos:start="587:17" pos:end="589:80"><expr pos:start="587:17" pos:end="589:79"><call pos:start="587:17" pos:end="589:79"><name pos:start="587:17" pos:end="587:22">av_log</name><argument_list pos:start="587:23" pos:end="589:79">(<argument pos:start="587:24" pos:end="587:31"><expr pos:start="587:24" pos:end="587:31"><name pos:start="587:24" pos:end="587:31"><name pos:start="587:24" pos:end="587:24">s</name><operator pos:start="587:25" pos:end="587:26">-&gt;</operator><name pos:start="587:27" pos:end="587:31">avctx</name></name></expr></argument>, <argument pos:start="587:34" pos:end="587:47"><expr pos:start="587:34" pos:end="587:47"><name pos:start="587:34" pos:end="587:47">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="589:20" pos:end="589:78"><expr pos:start="589:20" pos:end="589:78"><literal type="string" pos:start="589:20" pos:end="589:78">"high_precision_offsets_enabled_flag not yet implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="593:13" pos:end="593:73"><expr pos:start="593:13" pos:end="593:72"><name pos:start="593:13" pos:end="593:56"><name pos:start="593:13" pos:end="593:15">sps</name><operator pos:start="593:16" pos:end="593:17">-&gt;</operator><name pos:start="593:18" pos:end="593:56">persistent_rice_adaptation_enabled_flag</name></name> <operator pos:start="593:58" pos:end="593:58">=</operator> <call pos:start="593:60" pos:end="593:72"><name pos:start="593:60" pos:end="593:68">get_bits1</name><argument_list pos:start="593:69" pos:end="593:72">(<argument pos:start="593:70" pos:end="593:71"><expr pos:start="593:70" pos:end="593:71"><name pos:start="593:70" pos:end="593:71">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="597:13" pos:end="597:65"><expr pos:start="597:13" pos:end="597:64"><name pos:start="597:13" pos:end="597:47">cabac_bypass_alignment_enabled_flag</name>  <operator pos:start="597:50" pos:end="597:50">=</operator> <call pos:start="597:52" pos:end="597:64"><name pos:start="597:52" pos:end="597:60">get_bits1</name><argument_list pos:start="597:61" pos:end="597:64">(<argument pos:start="597:62" pos:end="597:63"><expr pos:start="597:62" pos:end="597:63"><name pos:start="597:62" pos:end="597:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="599:13" pos:end="603:80"><if pos:start="599:13" pos:end="603:80">if <condition pos:start="599:16" pos:end="599:52">(<expr pos:start="599:17" pos:end="599:51"><name pos:start="599:17" pos:end="599:51">cabac_bypass_alignment_enabled_flag</name></expr>)</condition><block type="pseudo" pos:start="601:17" pos:end="603:80"><block_content pos:start="601:17" pos:end="603:80">

                <expr_stmt pos:start="601:17" pos:end="603:80"><expr pos:start="601:17" pos:end="603:79"><call pos:start="601:17" pos:end="603:79"><name pos:start="601:17" pos:end="601:22">av_log</name><argument_list pos:start="601:23" pos:end="603:79">(<argument pos:start="601:24" pos:end="601:31"><expr pos:start="601:24" pos:end="601:31"><name pos:start="601:24" pos:end="601:31"><name pos:start="601:24" pos:end="601:24">s</name><operator pos:start="601:25" pos:end="601:26">-&gt;</operator><name pos:start="601:27" pos:end="601:31">avctx</name></name></expr></argument>, <argument pos:start="601:34" pos:end="601:47"><expr pos:start="601:34" pos:end="601:47"><name pos:start="601:34" pos:end="601:47">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="603:20" pos:end="603:78"><expr pos:start="603:20" pos:end="603:78"><literal type="string" pos:start="603:20" pos:end="603:78">"cabac_bypass_alignment_enabled_flag not yet implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="609:5" pos:end="619:5"><if pos:start="609:5" pos:end="619:5">if <condition pos:start="609:8" pos:end="609:28">(<expr pos:start="609:9" pos:end="609:27"><name pos:start="609:9" pos:end="609:27"><name pos:start="609:9" pos:end="609:9">s</name><operator pos:start="609:10" pos:end="609:11">-&gt;</operator><name pos:start="609:12" pos:end="609:27">apply_defdispwin</name></name></expr>)</condition> <block pos:start="609:30" pos:end="619:5">{<block_content pos:start="611:9" pos:end="617:80">

        <expr_stmt pos:start="611:9" pos:end="611:78"><expr pos:start="611:9" pos:end="611:77"><name pos:start="611:9" pos:end="611:38"><name pos:start="611:9" pos:end="611:11">sps</name><operator pos:start="611:12" pos:end="611:13">-&gt;</operator><name pos:start="611:14" pos:end="611:26">output_window</name><operator pos:start="611:27" pos:end="611:27">.</operator><name pos:start="611:28" pos:end="611:38">left_offset</name></name>   <operator pos:start="611:42" pos:end="611:43">+=</operator> <name pos:start="611:45" pos:end="611:77"><name pos:start="611:45" pos:end="611:47">sps</name><operator pos:start="611:48" pos:end="611:49">-&gt;</operator><name pos:start="611:50" pos:end="611:52">vui</name><operator pos:start="611:53" pos:end="611:53">.</operator><name pos:start="611:54" pos:end="611:65">def_disp_win</name><operator pos:start="611:66" pos:end="611:66">.</operator><name pos:start="611:67" pos:end="611:77">left_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="613:9" pos:end="613:79"><expr pos:start="613:9" pos:end="613:78"><name pos:start="613:9" pos:end="613:39"><name pos:start="613:9" pos:end="613:11">sps</name><operator pos:start="613:12" pos:end="613:13">-&gt;</operator><name pos:start="613:14" pos:end="613:26">output_window</name><operator pos:start="613:27" pos:end="613:27">.</operator><name pos:start="613:28" pos:end="613:39">right_offset</name></name>  <operator pos:start="613:42" pos:end="613:43">+=</operator> <name pos:start="613:45" pos:end="613:78"><name pos:start="613:45" pos:end="613:47">sps</name><operator pos:start="613:48" pos:end="613:49">-&gt;</operator><name pos:start="613:50" pos:end="613:52">vui</name><operator pos:start="613:53" pos:end="613:53">.</operator><name pos:start="613:54" pos:end="613:65">def_disp_win</name><operator pos:start="613:66" pos:end="613:66">.</operator><name pos:start="613:67" pos:end="613:78">right_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="615:9" pos:end="615:77"><expr pos:start="615:9" pos:end="615:76"><name pos:start="615:9" pos:end="615:37"><name pos:start="615:9" pos:end="615:11">sps</name><operator pos:start="615:12" pos:end="615:13">-&gt;</operator><name pos:start="615:14" pos:end="615:26">output_window</name><operator pos:start="615:27" pos:end="615:27">.</operator><name pos:start="615:28" pos:end="615:37">top_offset</name></name>    <operator pos:start="615:42" pos:end="615:43">+=</operator> <name pos:start="615:45" pos:end="615:76"><name pos:start="615:45" pos:end="615:47">sps</name><operator pos:start="615:48" pos:end="615:49">-&gt;</operator><name pos:start="615:50" pos:end="615:52">vui</name><operator pos:start="615:53" pos:end="615:53">.</operator><name pos:start="615:54" pos:end="615:65">def_disp_win</name><operator pos:start="615:66" pos:end="615:66">.</operator><name pos:start="615:67" pos:end="615:76">top_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="617:9" pos:end="617:80"><expr pos:start="617:9" pos:end="617:79"><name pos:start="617:9" pos:end="617:40"><name pos:start="617:9" pos:end="617:11">sps</name><operator pos:start="617:12" pos:end="617:13">-&gt;</operator><name pos:start="617:14" pos:end="617:26">output_window</name><operator pos:start="617:27" pos:end="617:27">.</operator><name pos:start="617:28" pos:end="617:40">bottom_offset</name></name> <operator pos:start="617:42" pos:end="617:43">+=</operator> <name pos:start="617:45" pos:end="617:79"><name pos:start="617:45" pos:end="617:47">sps</name><operator pos:start="617:48" pos:end="617:49">-&gt;</operator><name pos:start="617:50" pos:end="617:52">vui</name><operator pos:start="617:53" pos:end="617:53">.</operator><name pos:start="617:54" pos:end="617:65">def_disp_win</name><operator pos:start="617:66" pos:end="617:66">.</operator><name pos:start="617:67" pos:end="617:79">bottom_offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="621:5" pos:end="633:5"><if pos:start="621:5" pos:end="633:5">if <condition pos:start="621:8" pos:end="623:50">(<expr pos:start="621:9" pos:end="623:49"><name pos:start="621:9" pos:end="621:38"><name pos:start="621:9" pos:end="621:11">sps</name><operator pos:start="621:12" pos:end="621:13">-&gt;</operator><name pos:start="621:14" pos:end="621:26">output_window</name><operator pos:start="621:27" pos:end="621:27">.</operator><name pos:start="621:28" pos:end="621:38">left_offset</name></name> <operator pos:start="621:40" pos:end="621:40">&amp;</operator> <operator pos:start="621:42" pos:end="621:42">(</operator><literal type="number" pos:start="621:43" pos:end="621:46">0x1F</literal> <operator pos:start="621:48" pos:end="621:49">&gt;&gt;</operator> <operator pos:start="621:51" pos:end="621:51">(</operator><name pos:start="621:52" pos:end="621:67"><name pos:start="621:52" pos:end="621:54">sps</name><operator pos:start="621:55" pos:end="621:56">-&gt;</operator><name pos:start="621:57" pos:end="621:67">pixel_shift</name></name><operator pos:start="621:68" pos:end="621:68">)</operator><operator pos:start="621:69" pos:end="621:69">)</operator> <operator pos:start="621:71" pos:end="621:72">&amp;&amp;</operator>

        <operator pos:start="623:9" pos:end="623:9">!</operator><operator pos:start="623:10" pos:end="623:10">(</operator><name pos:start="623:11" pos:end="623:25"><name pos:start="623:11" pos:end="623:11">s</name><operator pos:start="623:12" pos:end="623:13">-&gt;</operator><name pos:start="623:14" pos:end="623:18">avctx</name><operator pos:start="623:19" pos:end="623:20">-&gt;</operator><name pos:start="623:21" pos:end="623:25">flags</name></name> <operator pos:start="623:27" pos:end="623:27">&amp;</operator> <name pos:start="623:29" pos:end="623:48">CODEC_FLAG_UNALIGNED</name><operator pos:start="623:49" pos:end="623:49">)</operator></expr>)</condition> <block pos:start="623:52" pos:end="633:5">{<block_content pos:start="625:9" pos:end="631:47">

        <expr_stmt pos:start="625:9" pos:end="625:72"><expr pos:start="625:9" pos:end="625:71"><name pos:start="625:9" pos:end="625:38"><name pos:start="625:9" pos:end="625:11">sps</name><operator pos:start="625:12" pos:end="625:13">-&gt;</operator><name pos:start="625:14" pos:end="625:26">output_window</name><operator pos:start="625:27" pos:end="625:27">.</operator><name pos:start="625:28" pos:end="625:38">left_offset</name></name> <operator pos:start="625:40" pos:end="625:41">&amp;=</operator> <operator pos:start="625:43" pos:end="625:43">~</operator><operator pos:start="625:44" pos:end="625:44">(</operator><literal type="number" pos:start="625:45" pos:end="625:48">0x1F</literal> <operator pos:start="625:50" pos:end="625:51">&gt;&gt;</operator> <operator pos:start="625:53" pos:end="625:53">(</operator><name pos:start="625:54" pos:end="625:69"><name pos:start="625:54" pos:end="625:56">sps</name><operator pos:start="625:57" pos:end="625:58">-&gt;</operator><name pos:start="625:59" pos:end="625:69">pixel_shift</name></name><operator pos:start="625:70" pos:end="625:70">)</operator><operator pos:start="625:71" pos:end="625:71">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="627:9" pos:end="631:47"><expr pos:start="627:9" pos:end="631:46"><call pos:start="627:9" pos:end="631:46"><name pos:start="627:9" pos:end="627:14">av_log</name><argument_list pos:start="627:15" pos:end="631:46">(<argument pos:start="627:16" pos:end="627:23"><expr pos:start="627:16" pos:end="627:23"><name pos:start="627:16" pos:end="627:23"><name pos:start="627:16" pos:end="627:16">s</name><operator pos:start="627:17" pos:end="627:18">-&gt;</operator><name pos:start="627:19" pos:end="627:23">avctx</name></name></expr></argument>, <argument pos:start="627:26" pos:end="627:39"><expr pos:start="627:26" pos:end="627:39"><name pos:start="627:26" pos:end="627:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="627:42" pos:end="629:56"><expr pos:start="627:42" pos:end="629:56"><literal type="string" pos:start="627:42" pos:end="627:77">"Reducing left output window to %d "</literal>

               <literal type="string" pos:start="629:16" pos:end="629:56">"chroma samples to preserve alignment.\n"</literal></expr></argument>,

               <argument pos:start="631:16" pos:end="631:45"><expr pos:start="631:16" pos:end="631:45"><name pos:start="631:16" pos:end="631:45"><name pos:start="631:16" pos:end="631:18">sps</name><operator pos:start="631:19" pos:end="631:20">-&gt;</operator><name pos:start="631:21" pos:end="631:33">output_window</name><operator pos:start="631:34" pos:end="631:34">.</operator><name pos:start="631:35" pos:end="631:45">left_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="635:5" pos:end="637:92"><expr pos:start="635:5" pos:end="637:91"><name pos:start="635:5" pos:end="635:21"><name pos:start="635:5" pos:end="635:7">sps</name><operator pos:start="635:8" pos:end="635:9">-&gt;</operator><name pos:start="635:10" pos:end="635:21">output_width</name></name>  <operator pos:start="635:24" pos:end="635:24">=</operator> <name pos:start="635:26" pos:end="635:35"><name pos:start="635:26" pos:end="635:28">sps</name><operator pos:start="635:29" pos:end="635:30">-&gt;</operator><name pos:start="635:31" pos:end="635:35">width</name></name> <operator pos:start="635:37" pos:end="635:37">-</operator>

                         <operator pos:start="637:26" pos:end="637:26">(</operator><name pos:start="637:27" pos:end="637:56"><name pos:start="637:27" pos:end="637:29">sps</name><operator pos:start="637:30" pos:end="637:31">-&gt;</operator><name pos:start="637:32" pos:end="637:44">output_window</name><operator pos:start="637:45" pos:end="637:45">.</operator><name pos:start="637:46" pos:end="637:56">left_offset</name></name> <operator pos:start="637:58" pos:end="637:58">+</operator> <name pos:start="637:60" pos:end="637:90"><name pos:start="637:60" pos:end="637:62">sps</name><operator pos:start="637:63" pos:end="637:64">-&gt;</operator><name pos:start="637:65" pos:end="637:77">output_window</name><operator pos:start="637:78" pos:end="637:78">.</operator><name pos:start="637:79" pos:end="637:90">right_offset</name></name><operator pos:start="637:91" pos:end="637:91">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="639:5" pos:end="641:92"><expr pos:start="639:5" pos:end="641:91"><name pos:start="639:5" pos:end="639:22"><name pos:start="639:5" pos:end="639:7">sps</name><operator pos:start="639:8" pos:end="639:9">-&gt;</operator><name pos:start="639:10" pos:end="639:22">output_height</name></name> <operator pos:start="639:24" pos:end="639:24">=</operator> <name pos:start="639:26" pos:end="639:36"><name pos:start="639:26" pos:end="639:28">sps</name><operator pos:start="639:29" pos:end="639:30">-&gt;</operator><name pos:start="639:31" pos:end="639:36">height</name></name> <operator pos:start="639:38" pos:end="639:38">-</operator>

                         <operator pos:start="641:26" pos:end="641:26">(</operator><name pos:start="641:27" pos:end="641:55"><name pos:start="641:27" pos:end="641:29">sps</name><operator pos:start="641:30" pos:end="641:31">-&gt;</operator><name pos:start="641:32" pos:end="641:44">output_window</name><operator pos:start="641:45" pos:end="641:45">.</operator><name pos:start="641:46" pos:end="641:55">top_offset</name></name> <operator pos:start="641:57" pos:end="641:57">+</operator> <name pos:start="641:59" pos:end="641:90"><name pos:start="641:59" pos:end="641:61">sps</name><operator pos:start="641:62" pos:end="641:63">-&gt;</operator><name pos:start="641:64" pos:end="641:76">output_window</name><operator pos:start="641:77" pos:end="641:77">.</operator><name pos:start="641:78" pos:end="641:90">bottom_offset</name></name><operator pos:start="641:91" pos:end="641:91">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="643:5" pos:end="669:5"><if pos:start="643:5" pos:end="669:5">if <condition pos:start="643:8" pos:end="643:58">(<expr pos:start="643:9" pos:end="643:57"><name pos:start="643:9" pos:end="643:25"><name pos:start="643:9" pos:end="643:11">sps</name><operator pos:start="643:12" pos:end="643:13">-&gt;</operator><name pos:start="643:14" pos:end="643:25">output_width</name></name> <operator pos:start="643:27" pos:end="643:28">&lt;=</operator> <literal type="number" pos:start="643:30" pos:end="643:30">0</literal> <operator pos:start="643:32" pos:end="643:33">||</operator> <name pos:start="643:35" pos:end="643:52"><name pos:start="643:35" pos:end="643:37">sps</name><operator pos:start="643:38" pos:end="643:39">-&gt;</operator><name pos:start="643:40" pos:end="643:52">output_height</name></name> <operator pos:start="643:54" pos:end="643:55">&lt;=</operator> <literal type="number" pos:start="643:57" pos:end="643:57">0</literal></expr>)</condition> <block pos:start="643:60" pos:end="669:5">{<block_content pos:start="645:9" pos:end="667:54">

        <expr_stmt pos:start="645:9" pos:end="647:54"><expr pos:start="645:9" pos:end="647:53"><call pos:start="645:9" pos:end="647:53"><name pos:start="645:9" pos:end="645:14">av_log</name><argument_list pos:start="645:15" pos:end="647:53">(<argument pos:start="645:16" pos:end="645:23"><expr pos:start="645:16" pos:end="645:23"><name pos:start="645:16" pos:end="645:23"><name pos:start="645:16" pos:end="645:16">s</name><operator pos:start="645:17" pos:end="645:18">-&gt;</operator><name pos:start="645:19" pos:end="645:23">avctx</name></name></expr></argument>, <argument pos:start="645:26" pos:end="645:39"><expr pos:start="645:26" pos:end="645:39"><name pos:start="645:26" pos:end="645:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="645:42" pos:end="645:85"><expr pos:start="645:42" pos:end="645:85"><literal type="string" pos:start="645:42" pos:end="645:85">"Invalid visible frame dimensions: %dx%d.\n"</literal></expr></argument>,

               <argument pos:start="647:16" pos:end="647:32"><expr pos:start="647:16" pos:end="647:32"><name pos:start="647:16" pos:end="647:32"><name pos:start="647:16" pos:end="647:18">sps</name><operator pos:start="647:19" pos:end="647:20">-&gt;</operator><name pos:start="647:21" pos:end="647:32">output_width</name></name></expr></argument>, <argument pos:start="647:35" pos:end="647:52"><expr pos:start="647:35" pos:end="647:52"><name pos:start="647:35" pos:end="647:52"><name pos:start="647:35" pos:end="647:37">sps</name><operator pos:start="647:38" pos:end="647:39">-&gt;</operator><name pos:start="647:40" pos:end="647:52">output_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="649:9" pos:end="655:9"><if pos:start="649:9" pos:end="655:9">if <condition pos:start="649:12" pos:end="649:54">(<expr pos:start="649:13" pos:end="649:53"><name pos:start="649:13" pos:end="649:37"><name pos:start="649:13" pos:end="649:13">s</name><operator pos:start="649:14" pos:end="649:15">-&gt;</operator><name pos:start="649:16" pos:end="649:20">avctx</name><operator pos:start="649:21" pos:end="649:22">-&gt;</operator><name pos:start="649:23" pos:end="649:37">err_recognition</name></name> <operator pos:start="649:39" pos:end="649:39">&amp;</operator> <name pos:start="649:41" pos:end="649:53">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="649:56" pos:end="655:9">{<block_content pos:start="651:13" pos:end="653:21">

            <expr_stmt pos:start="651:13" pos:end="651:38"><expr pos:start="651:13" pos:end="651:37"><name pos:start="651:13" pos:end="651:15">ret</name> <operator pos:start="651:17" pos:end="651:17">=</operator> <name pos:start="651:19" pos:end="651:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="653:13" pos:end="653:21">goto <name pos:start="653:18" pos:end="653:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="657:9" pos:end="659:56"><expr pos:start="657:9" pos:end="659:55"><call pos:start="657:9" pos:end="659:55"><name pos:start="657:9" pos:end="657:14">av_log</name><argument_list pos:start="657:15" pos:end="659:55">(<argument pos:start="657:16" pos:end="657:23"><expr pos:start="657:16" pos:end="657:23"><name pos:start="657:16" pos:end="657:23"><name pos:start="657:16" pos:end="657:16">s</name><operator pos:start="657:17" pos:end="657:18">-&gt;</operator><name pos:start="657:19" pos:end="657:23">avctx</name></name></expr></argument>, <argument pos:start="657:26" pos:end="657:39"><expr pos:start="657:26" pos:end="657:39"><name pos:start="657:26" pos:end="657:39">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="659:16" pos:end="659:54"><expr pos:start="659:16" pos:end="659:54"><literal type="string" pos:start="659:16" pos:end="659:54">"Displaying the whole video surface.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:65"><expr pos:start="661:9" pos:end="661:64"><call pos:start="661:9" pos:end="661:64"><name pos:start="661:9" pos:end="661:14">memset</name><argument_list pos:start="661:15" pos:end="661:64">(<argument pos:start="661:16" pos:end="661:33"><expr pos:start="661:16" pos:end="661:33"><operator pos:start="661:16" pos:end="661:16">&amp;</operator><name pos:start="661:17" pos:end="661:33"><name pos:start="661:17" pos:end="661:19">sps</name><operator pos:start="661:20" pos:end="661:21">-&gt;</operator><name pos:start="661:22" pos:end="661:33">pic_conf_win</name></name></expr></argument>, <argument pos:start="661:36" pos:end="661:36"><expr pos:start="661:36" pos:end="661:36"><literal type="number" pos:start="661:36" pos:end="661:36">0</literal></expr></argument>, <argument pos:start="661:39" pos:end="661:63"><expr pos:start="661:39" pos:end="661:63"><sizeof pos:start="661:39" pos:end="661:63">sizeof<argument_list pos:start="661:45" pos:end="661:63">(<argument pos:start="661:46" pos:end="661:62"><expr pos:start="661:46" pos:end="661:62"><name pos:start="661:46" pos:end="661:62"><name pos:start="661:46" pos:end="661:48">sps</name><operator pos:start="661:49" pos:end="661:50">-&gt;</operator><name pos:start="661:51" pos:end="661:62">pic_conf_win</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:67"><expr pos:start="663:9" pos:end="663:66"><call pos:start="663:9" pos:end="663:66"><name pos:start="663:9" pos:end="663:14">memset</name><argument_list pos:start="663:15" pos:end="663:66">(<argument pos:start="663:16" pos:end="663:34"><expr pos:start="663:16" pos:end="663:34"><operator pos:start="663:16" pos:end="663:16">&amp;</operator><name pos:start="663:17" pos:end="663:34"><name pos:start="663:17" pos:end="663:19">sps</name><operator pos:start="663:20" pos:end="663:21">-&gt;</operator><name pos:start="663:22" pos:end="663:34">output_window</name></name></expr></argument>, <argument pos:start="663:37" pos:end="663:37"><expr pos:start="663:37" pos:end="663:37"><literal type="number" pos:start="663:37" pos:end="663:37">0</literal></expr></argument>, <argument pos:start="663:40" pos:end="663:65"><expr pos:start="663:40" pos:end="663:65"><sizeof pos:start="663:40" pos:end="663:65">sizeof<argument_list pos:start="663:46" pos:end="663:65">(<argument pos:start="663:47" pos:end="663:64"><expr pos:start="663:47" pos:end="663:64"><name pos:start="663:47" pos:end="663:64"><name pos:start="663:47" pos:end="663:49">sps</name><operator pos:start="663:50" pos:end="663:51">-&gt;</operator><name pos:start="663:52" pos:end="663:64">output_window</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="665:9" pos:end="665:53"><expr pos:start="665:9" pos:end="665:52"><name pos:start="665:9" pos:end="665:25"><name pos:start="665:9" pos:end="665:11">sps</name><operator pos:start="665:12" pos:end="665:13">-&gt;</operator><name pos:start="665:14" pos:end="665:25">output_width</name></name>               <operator pos:start="665:41" pos:end="665:41">=</operator> <name pos:start="665:43" pos:end="665:52"><name pos:start="665:43" pos:end="665:45">sps</name><operator pos:start="665:46" pos:end="665:47">-&gt;</operator><name pos:start="665:48" pos:end="665:52">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="667:9" pos:end="667:54"><expr pos:start="667:9" pos:end="667:53"><name pos:start="667:9" pos:end="667:26"><name pos:start="667:9" pos:end="667:11">sps</name><operator pos:start="667:12" pos:end="667:13">-&gt;</operator><name pos:start="667:14" pos:end="667:26">output_height</name></name>              <operator pos:start="667:41" pos:end="667:41">=</operator> <name pos:start="667:43" pos:end="667:53"><name pos:start="667:43" pos:end="667:45">sps</name><operator pos:start="667:46" pos:end="667:47">-&gt;</operator><name pos:start="667:48" pos:end="667:53">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="673:5" pos:end="673:26">// Inferred parameters</comment>

    <expr_stmt pos:start="675:5" pos:end="677:66"><expr pos:start="675:5" pos:end="677:65"><name pos:start="675:5" pos:end="675:22"><name pos:start="675:5" pos:end="675:7">sps</name><operator pos:start="675:8" pos:end="675:9">-&gt;</operator><name pos:start="675:10" pos:end="675:22">log2_ctb_size</name></name> <operator pos:start="675:24" pos:end="675:24">=</operator> <name pos:start="675:26" pos:end="675:46"><name pos:start="675:26" pos:end="675:28">sps</name><operator pos:start="675:29" pos:end="675:30">-&gt;</operator><name pos:start="675:31" pos:end="675:46">log2_min_cb_size</name></name> <operator pos:start="675:48" pos:end="675:48">+</operator>

                         <name pos:start="677:26" pos:end="677:65"><name pos:start="677:26" pos:end="677:28">sps</name><operator pos:start="677:29" pos:end="677:30">-&gt;</operator><name pos:start="677:31" pos:end="677:65">log2_diff_max_min_coding_block_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="679:5" pos:end="679:54"><expr pos:start="679:5" pos:end="679:53"><name pos:start="679:5" pos:end="679:25"><name pos:start="679:5" pos:end="679:7">sps</name><operator pos:start="679:8" pos:end="679:9">-&gt;</operator><name pos:start="679:10" pos:end="679:25">log2_min_pu_size</name></name> <operator pos:start="679:27" pos:end="679:27">=</operator> <name pos:start="679:29" pos:end="679:49"><name pos:start="679:29" pos:end="679:31">sps</name><operator pos:start="679:32" pos:end="679:33">-&gt;</operator><name pos:start="679:34" pos:end="679:49">log2_min_cb_size</name></name> <operator pos:start="679:51" pos:end="679:51">-</operator> <literal type="number" pos:start="679:53" pos:end="679:53">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="683:5" pos:end="683:90"><expr pos:start="683:5" pos:end="683:89"><name pos:start="683:5" pos:end="683:18"><name pos:start="683:5" pos:end="683:7">sps</name><operator pos:start="683:8" pos:end="683:9">-&gt;</operator><name pos:start="683:10" pos:end="683:18">ctb_width</name></name>  <operator pos:start="683:21" pos:end="683:21">=</operator> <operator pos:start="683:23" pos:end="683:23">(</operator><name pos:start="683:24" pos:end="683:33"><name pos:start="683:24" pos:end="683:26">sps</name><operator pos:start="683:27" pos:end="683:28">-&gt;</operator><name pos:start="683:29" pos:end="683:33">width</name></name>  <operator pos:start="683:36" pos:end="683:36">+</operator> <operator pos:start="683:38" pos:end="683:38">(</operator><literal type="number" pos:start="683:39" pos:end="683:39">1</literal> <operator pos:start="683:41" pos:end="683:42">&lt;&lt;</operator> <name pos:start="683:44" pos:end="683:61"><name pos:start="683:44" pos:end="683:46">sps</name><operator pos:start="683:47" pos:end="683:48">-&gt;</operator><name pos:start="683:49" pos:end="683:61">log2_ctb_size</name></name><operator pos:start="683:62" pos:end="683:62">)</operator> <operator pos:start="683:64" pos:end="683:64">-</operator> <literal type="number" pos:start="683:66" pos:end="683:66">1</literal><operator pos:start="683:67" pos:end="683:67">)</operator> <operator pos:start="683:69" pos:end="683:70">&gt;&gt;</operator> <name pos:start="683:72" pos:end="683:89"><name pos:start="683:72" pos:end="683:74">sps</name><operator pos:start="683:75" pos:end="683:76">-&gt;</operator><name pos:start="683:77" pos:end="683:89">log2_ctb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="685:5" pos:end="685:90"><expr pos:start="685:5" pos:end="685:89"><name pos:start="685:5" pos:end="685:19"><name pos:start="685:5" pos:end="685:7">sps</name><operator pos:start="685:8" pos:end="685:9">-&gt;</operator><name pos:start="685:10" pos:end="685:19">ctb_height</name></name> <operator pos:start="685:21" pos:end="685:21">=</operator> <operator pos:start="685:23" pos:end="685:23">(</operator><name pos:start="685:24" pos:end="685:34"><name pos:start="685:24" pos:end="685:26">sps</name><operator pos:start="685:27" pos:end="685:28">-&gt;</operator><name pos:start="685:29" pos:end="685:34">height</name></name> <operator pos:start="685:36" pos:end="685:36">+</operator> <operator pos:start="685:38" pos:end="685:38">(</operator><literal type="number" pos:start="685:39" pos:end="685:39">1</literal> <operator pos:start="685:41" pos:end="685:42">&lt;&lt;</operator> <name pos:start="685:44" pos:end="685:61"><name pos:start="685:44" pos:end="685:46">sps</name><operator pos:start="685:47" pos:end="685:48">-&gt;</operator><name pos:start="685:49" pos:end="685:61">log2_ctb_size</name></name><operator pos:start="685:62" pos:end="685:62">)</operator> <operator pos:start="685:64" pos:end="685:64">-</operator> <literal type="number" pos:start="685:66" pos:end="685:66">1</literal><operator pos:start="685:67" pos:end="685:67">)</operator> <operator pos:start="685:69" pos:end="685:70">&gt;&gt;</operator> <name pos:start="685:72" pos:end="685:89"><name pos:start="685:72" pos:end="685:74">sps</name><operator pos:start="685:75" pos:end="685:76">-&gt;</operator><name pos:start="685:77" pos:end="685:89">log2_ctb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="687:5" pos:end="687:55"><expr pos:start="687:5" pos:end="687:54"><name pos:start="687:5" pos:end="687:17"><name pos:start="687:5" pos:end="687:7">sps</name><operator pos:start="687:8" pos:end="687:9">-&gt;</operator><name pos:start="687:10" pos:end="687:17">ctb_size</name></name>   <operator pos:start="687:21" pos:end="687:21">=</operator> <name pos:start="687:23" pos:end="687:36"><name pos:start="687:23" pos:end="687:25">sps</name><operator pos:start="687:26" pos:end="687:27">-&gt;</operator><name pos:start="687:28" pos:end="687:36">ctb_width</name></name> <operator pos:start="687:38" pos:end="687:38">*</operator> <name pos:start="687:40" pos:end="687:54"><name pos:start="687:40" pos:end="687:42">sps</name><operator pos:start="687:43" pos:end="687:44">-&gt;</operator><name pos:start="687:45" pos:end="687:54">ctb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="691:5" pos:end="691:62"><expr pos:start="691:5" pos:end="691:61"><name pos:start="691:5" pos:end="691:21"><name pos:start="691:5" pos:end="691:7">sps</name><operator pos:start="691:8" pos:end="691:9">-&gt;</operator><name pos:start="691:10" pos:end="691:21">min_cb_width</name></name>  <operator pos:start="691:24" pos:end="691:24">=</operator> <name pos:start="691:26" pos:end="691:35"><name pos:start="691:26" pos:end="691:28">sps</name><operator pos:start="691:29" pos:end="691:30">-&gt;</operator><name pos:start="691:31" pos:end="691:35">width</name></name>  <operator pos:start="691:38" pos:end="691:39">&gt;&gt;</operator> <name pos:start="691:41" pos:end="691:61"><name pos:start="691:41" pos:end="691:43">sps</name><operator pos:start="691:44" pos:end="691:45">-&gt;</operator><name pos:start="691:46" pos:end="691:61">log2_min_cb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="693:5" pos:end="693:62"><expr pos:start="693:5" pos:end="693:61"><name pos:start="693:5" pos:end="693:22"><name pos:start="693:5" pos:end="693:7">sps</name><operator pos:start="693:8" pos:end="693:9">-&gt;</operator><name pos:start="693:10" pos:end="693:22">min_cb_height</name></name> <operator pos:start="693:24" pos:end="693:24">=</operator> <name pos:start="693:26" pos:end="693:36"><name pos:start="693:26" pos:end="693:28">sps</name><operator pos:start="693:29" pos:end="693:30">-&gt;</operator><name pos:start="693:31" pos:end="693:36">height</name></name> <operator pos:start="693:38" pos:end="693:39">&gt;&gt;</operator> <name pos:start="693:41" pos:end="693:61"><name pos:start="693:41" pos:end="693:43">sps</name><operator pos:start="693:44" pos:end="693:45">-&gt;</operator><name pos:start="693:46" pos:end="693:61">log2_min_cb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="695:5" pos:end="695:62"><expr pos:start="695:5" pos:end="695:61"><name pos:start="695:5" pos:end="695:21"><name pos:start="695:5" pos:end="695:7">sps</name><operator pos:start="695:8" pos:end="695:9">-&gt;</operator><name pos:start="695:10" pos:end="695:21">min_tb_width</name></name>  <operator pos:start="695:24" pos:end="695:24">=</operator> <name pos:start="695:26" pos:end="695:35"><name pos:start="695:26" pos:end="695:28">sps</name><operator pos:start="695:29" pos:end="695:30">-&gt;</operator><name pos:start="695:31" pos:end="695:35">width</name></name>  <operator pos:start="695:38" pos:end="695:39">&gt;&gt;</operator> <name pos:start="695:41" pos:end="695:61"><name pos:start="695:41" pos:end="695:43">sps</name><operator pos:start="695:44" pos:end="695:45">-&gt;</operator><name pos:start="695:46" pos:end="695:61">log2_min_tb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="697:5" pos:end="697:62"><expr pos:start="697:5" pos:end="697:61"><name pos:start="697:5" pos:end="697:22"><name pos:start="697:5" pos:end="697:7">sps</name><operator pos:start="697:8" pos:end="697:9">-&gt;</operator><name pos:start="697:10" pos:end="697:22">min_tb_height</name></name> <operator pos:start="697:24" pos:end="697:24">=</operator> <name pos:start="697:26" pos:end="697:36"><name pos:start="697:26" pos:end="697:28">sps</name><operator pos:start="697:29" pos:end="697:30">-&gt;</operator><name pos:start="697:31" pos:end="697:36">height</name></name> <operator pos:start="697:38" pos:end="697:39">&gt;&gt;</operator> <name pos:start="697:41" pos:end="697:61"><name pos:start="697:41" pos:end="697:43">sps</name><operator pos:start="697:44" pos:end="697:45">-&gt;</operator><name pos:start="697:46" pos:end="697:61">log2_min_tb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="699:5" pos:end="699:62"><expr pos:start="699:5" pos:end="699:61"><name pos:start="699:5" pos:end="699:21"><name pos:start="699:5" pos:end="699:7">sps</name><operator pos:start="699:8" pos:end="699:9">-&gt;</operator><name pos:start="699:10" pos:end="699:21">min_pu_width</name></name>  <operator pos:start="699:24" pos:end="699:24">=</operator> <name pos:start="699:26" pos:end="699:35"><name pos:start="699:26" pos:end="699:28">sps</name><operator pos:start="699:29" pos:end="699:30">-&gt;</operator><name pos:start="699:31" pos:end="699:35">width</name></name>  <operator pos:start="699:38" pos:end="699:39">&gt;&gt;</operator> <name pos:start="699:41" pos:end="699:61"><name pos:start="699:41" pos:end="699:43">sps</name><operator pos:start="699:44" pos:end="699:45">-&gt;</operator><name pos:start="699:46" pos:end="699:61">log2_min_pu_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="701:5" pos:end="701:62"><expr pos:start="701:5" pos:end="701:61"><name pos:start="701:5" pos:end="701:22"><name pos:start="701:5" pos:end="701:7">sps</name><operator pos:start="701:8" pos:end="701:9">-&gt;</operator><name pos:start="701:10" pos:end="701:22">min_pu_height</name></name> <operator pos:start="701:24" pos:end="701:24">=</operator> <name pos:start="701:26" pos:end="701:36"><name pos:start="701:26" pos:end="701:28">sps</name><operator pos:start="701:29" pos:end="701:30">-&gt;</operator><name pos:start="701:31" pos:end="701:36">height</name></name> <operator pos:start="701:38" pos:end="701:39">&gt;&gt;</operator> <name pos:start="701:41" pos:end="701:61"><name pos:start="701:41" pos:end="701:43">sps</name><operator pos:start="701:44" pos:end="701:45">-&gt;</operator><name pos:start="701:46" pos:end="701:61">log2_min_pu_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="703:5" pos:end="703:81"><expr pos:start="703:5" pos:end="703:80"><name pos:start="703:5" pos:end="703:16"><name pos:start="703:5" pos:end="703:7">sps</name><operator pos:start="703:8" pos:end="703:9">-&gt;</operator><name pos:start="703:10" pos:end="703:16">tb_mask</name></name>       <operator pos:start="703:24" pos:end="703:24">=</operator> <operator pos:start="703:26" pos:end="703:26">(</operator><literal type="number" pos:start="703:27" pos:end="703:27">1</literal> <operator pos:start="703:29" pos:end="703:30">&lt;&lt;</operator> <operator pos:start="703:32" pos:end="703:32">(</operator><name pos:start="703:33" pos:end="703:50"><name pos:start="703:33" pos:end="703:35">sps</name><operator pos:start="703:36" pos:end="703:37">-&gt;</operator><name pos:start="703:38" pos:end="703:50">log2_ctb_size</name></name> <operator pos:start="703:52" pos:end="703:52">-</operator> <name pos:start="703:54" pos:end="703:74"><name pos:start="703:54" pos:end="703:56">sps</name><operator pos:start="703:57" pos:end="703:58">-&gt;</operator><name pos:start="703:59" pos:end="703:74">log2_min_tb_size</name></name><operator pos:start="703:75" pos:end="703:75">)</operator><operator pos:start="703:76" pos:end="703:76">)</operator> <operator pos:start="703:78" pos:end="703:78">-</operator> <literal type="number" pos:start="703:80" pos:end="703:80">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="707:5" pos:end="707:49"><expr pos:start="707:5" pos:end="707:48"><name pos:start="707:5" pos:end="707:21"><name pos:start="707:5" pos:end="707:7">sps</name><operator pos:start="707:8" pos:end="707:9">-&gt;</operator><name pos:start="707:10" pos:end="707:21">qp_bd_offset</name></name> <operator pos:start="707:23" pos:end="707:23">=</operator> <literal type="number" pos:start="707:25" pos:end="707:25">6</literal> <operator pos:start="707:27" pos:end="707:27">*</operator> <operator pos:start="707:29" pos:end="707:29">(</operator><name pos:start="707:30" pos:end="707:43"><name pos:start="707:30" pos:end="707:32">sps</name><operator pos:start="707:33" pos:end="707:34">-&gt;</operator><name pos:start="707:35" pos:end="707:43">bit_depth</name></name> <operator pos:start="707:45" pos:end="707:45">-</operator> <literal type="number" pos:start="707:47" pos:end="707:47">8</literal><operator pos:start="707:48" pos:end="707:48">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="711:5" pos:end="719:5"><if pos:start="711:5" pos:end="719:5">if <condition pos:start="711:8" pos:end="713:57">(<expr pos:start="711:9" pos:end="713:56"><name pos:start="711:9" pos:end="711:18"><name pos:start="711:9" pos:end="711:11">sps</name><operator pos:start="711:12" pos:end="711:13">-&gt;</operator><name pos:start="711:14" pos:end="711:18">width</name></name>  <operator pos:start="711:21" pos:end="711:21">&amp;</operator> <operator pos:start="711:23" pos:end="711:23">(</operator><operator pos:start="711:24" pos:end="711:24">(</operator><literal type="number" pos:start="711:25" pos:end="711:25">1</literal> <operator pos:start="711:27" pos:end="711:28">&lt;&lt;</operator> <name pos:start="711:30" pos:end="711:50"><name pos:start="711:30" pos:end="711:32">sps</name><operator pos:start="711:33" pos:end="711:34">-&gt;</operator><name pos:start="711:35" pos:end="711:50">log2_min_cb_size</name></name><operator pos:start="711:51" pos:end="711:51">)</operator> <operator pos:start="711:53" pos:end="711:53">-</operator> <literal type="number" pos:start="711:55" pos:end="711:55">1</literal><operator pos:start="711:56" pos:end="711:56">)</operator> <operator pos:start="711:58" pos:end="711:59">||</operator>

        <name pos:start="713:9" pos:end="713:19"><name pos:start="713:9" pos:end="713:11">sps</name><operator pos:start="713:12" pos:end="713:13">-&gt;</operator><name pos:start="713:14" pos:end="713:19">height</name></name> <operator pos:start="713:21" pos:end="713:21">&amp;</operator> <operator pos:start="713:23" pos:end="713:23">(</operator><operator pos:start="713:24" pos:end="713:24">(</operator><literal type="number" pos:start="713:25" pos:end="713:25">1</literal> <operator pos:start="713:27" pos:end="713:28">&lt;&lt;</operator> <name pos:start="713:30" pos:end="713:50"><name pos:start="713:30" pos:end="713:32">sps</name><operator pos:start="713:33" pos:end="713:34">-&gt;</operator><name pos:start="713:35" pos:end="713:50">log2_min_cb_size</name></name><operator pos:start="713:51" pos:end="713:51">)</operator> <operator pos:start="713:53" pos:end="713:53">-</operator> <literal type="number" pos:start="713:55" pos:end="713:55">1</literal><operator pos:start="713:56" pos:end="713:56">)</operator></expr>)</condition> <block pos:start="713:59" pos:end="719:5">{<block_content pos:start="715:9" pos:end="717:17">

        <expr_stmt pos:start="715:9" pos:end="715:76"><expr pos:start="715:9" pos:end="715:75"><call pos:start="715:9" pos:end="715:75"><name pos:start="715:9" pos:end="715:14">av_log</name><argument_list pos:start="715:15" pos:end="715:75">(<argument pos:start="715:16" pos:end="715:23"><expr pos:start="715:16" pos:end="715:23"><name pos:start="715:16" pos:end="715:23"><name pos:start="715:16" pos:end="715:16">s</name><operator pos:start="715:17" pos:end="715:18">-&gt;</operator><name pos:start="715:19" pos:end="715:23">avctx</name></name></expr></argument>, <argument pos:start="715:26" pos:end="715:37"><expr pos:start="715:26" pos:end="715:37"><name pos:start="715:26" pos:end="715:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="715:40" pos:end="715:74"><expr pos:start="715:40" pos:end="715:74"><literal type="string" pos:start="715:40" pos:end="715:74">"Invalid coded frame dimensions.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="717:9" pos:end="717:17">goto <name pos:start="717:14" pos:end="717:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="723:5" pos:end="729:5"><if pos:start="723:5" pos:end="729:5">if <condition pos:start="723:8" pos:end="723:47">(<expr pos:start="723:9" pos:end="723:46"><name pos:start="723:9" pos:end="723:26"><name pos:start="723:9" pos:end="723:11">sps</name><operator pos:start="723:12" pos:end="723:13">-&gt;</operator><name pos:start="723:14" pos:end="723:26">log2_ctb_size</name></name> <operator pos:start="723:28" pos:end="723:28">&gt;</operator> <name pos:start="723:30" pos:end="723:46">MAX_LOG2_CTB_SIZE</name></expr>)</condition> <block pos:start="723:49" pos:end="729:5">{<block_content pos:start="725:9" pos:end="727:17">

        <expr_stmt pos:start="725:9" pos:end="725:92"><expr pos:start="725:9" pos:end="725:91"><call pos:start="725:9" pos:end="725:91"><name pos:start="725:9" pos:end="725:14">av_log</name><argument_list pos:start="725:15" pos:end="725:91">(<argument pos:start="725:16" pos:end="725:23"><expr pos:start="725:16" pos:end="725:23"><name pos:start="725:16" pos:end="725:23"><name pos:start="725:16" pos:end="725:16">s</name><operator pos:start="725:17" pos:end="725:18">-&gt;</operator><name pos:start="725:19" pos:end="725:23">avctx</name></name></expr></argument>, <argument pos:start="725:26" pos:end="725:37"><expr pos:start="725:26" pos:end="725:37"><name pos:start="725:26" pos:end="725:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="725:40" pos:end="725:70"><expr pos:start="725:40" pos:end="725:70"><literal type="string" pos:start="725:40" pos:end="725:70">"CTB size out of range: 2^%d\n"</literal></expr></argument>, <argument pos:start="725:73" pos:end="725:90"><expr pos:start="725:73" pos:end="725:90"><name pos:start="725:73" pos:end="725:90"><name pos:start="725:73" pos:end="725:75">sps</name><operator pos:start="725:76" pos:end="725:77">-&gt;</operator><name pos:start="725:78" pos:end="725:90">log2_ctb_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="727:9" pos:end="727:17">goto <name pos:start="727:14" pos:end="727:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="731:5" pos:end="739:5"><if pos:start="731:5" pos:end="739:5">if <condition pos:start="731:8" pos:end="731:94">(<expr pos:start="731:9" pos:end="731:93"><name pos:start="731:9" pos:end="731:48"><name pos:start="731:9" pos:end="731:11">sps</name><operator pos:start="731:12" pos:end="731:13">-&gt;</operator><name pos:start="731:14" pos:end="731:48">max_transform_hierarchy_depth_inter</name></name> <operator pos:start="731:50" pos:end="731:50">&gt;</operator> <name pos:start="731:52" pos:end="731:69"><name pos:start="731:52" pos:end="731:54">sps</name><operator pos:start="731:55" pos:end="731:56">-&gt;</operator><name pos:start="731:57" pos:end="731:69">log2_ctb_size</name></name> <operator pos:start="731:71" pos:end="731:71">-</operator> <name pos:start="731:73" pos:end="731:93"><name pos:start="731:73" pos:end="731:75">sps</name><operator pos:start="731:76" pos:end="731:77">-&gt;</operator><name pos:start="731:78" pos:end="731:93">log2_min_tb_size</name></name></expr>)</condition> <block pos:start="731:96" pos:end="739:5">{<block_content pos:start="733:9" pos:end="737:17">

        <expr_stmt pos:start="733:9" pos:end="735:57"><expr pos:start="733:9" pos:end="735:56"><call pos:start="733:9" pos:end="735:56"><name pos:start="733:9" pos:end="733:14">av_log</name><argument_list pos:start="733:15" pos:end="735:56">(<argument pos:start="733:16" pos:end="733:23"><expr pos:start="733:16" pos:end="733:23"><name pos:start="733:16" pos:end="733:23"><name pos:start="733:16" pos:end="733:16">s</name><operator pos:start="733:17" pos:end="733:18">-&gt;</operator><name pos:start="733:19" pos:end="733:23">avctx</name></name></expr></argument>, <argument pos:start="733:26" pos:end="733:37"><expr pos:start="733:26" pos:end="733:37"><name pos:start="733:26" pos:end="733:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="733:40" pos:end="733:95"><expr pos:start="733:40" pos:end="733:95"><literal type="string" pos:start="733:40" pos:end="733:95">"max_transform_hierarchy_depth_inter out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="735:16" pos:end="735:55"><expr pos:start="735:16" pos:end="735:55"><name pos:start="735:16" pos:end="735:55"><name pos:start="735:16" pos:end="735:18">sps</name><operator pos:start="735:19" pos:end="735:20">-&gt;</operator><name pos:start="735:21" pos:end="735:55">max_transform_hierarchy_depth_inter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="737:9" pos:end="737:17">goto <name pos:start="737:14" pos:end="737:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="741:5" pos:end="749:5"><if pos:start="741:5" pos:end="749:5">if <condition pos:start="741:8" pos:end="741:94">(<expr pos:start="741:9" pos:end="741:93"><name pos:start="741:9" pos:end="741:48"><name pos:start="741:9" pos:end="741:11">sps</name><operator pos:start="741:12" pos:end="741:13">-&gt;</operator><name pos:start="741:14" pos:end="741:48">max_transform_hierarchy_depth_intra</name></name> <operator pos:start="741:50" pos:end="741:50">&gt;</operator> <name pos:start="741:52" pos:end="741:69"><name pos:start="741:52" pos:end="741:54">sps</name><operator pos:start="741:55" pos:end="741:56">-&gt;</operator><name pos:start="741:57" pos:end="741:69">log2_ctb_size</name></name> <operator pos:start="741:71" pos:end="741:71">-</operator> <name pos:start="741:73" pos:end="741:93"><name pos:start="741:73" pos:end="741:75">sps</name><operator pos:start="741:76" pos:end="741:77">-&gt;</operator><name pos:start="741:78" pos:end="741:93">log2_min_tb_size</name></name></expr>)</condition> <block pos:start="741:96" pos:end="749:5">{<block_content pos:start="743:9" pos:end="747:17">

        <expr_stmt pos:start="743:9" pos:end="745:57"><expr pos:start="743:9" pos:end="745:56"><call pos:start="743:9" pos:end="745:56"><name pos:start="743:9" pos:end="743:14">av_log</name><argument_list pos:start="743:15" pos:end="745:56">(<argument pos:start="743:16" pos:end="743:23"><expr pos:start="743:16" pos:end="743:23"><name pos:start="743:16" pos:end="743:23"><name pos:start="743:16" pos:end="743:16">s</name><operator pos:start="743:17" pos:end="743:18">-&gt;</operator><name pos:start="743:19" pos:end="743:23">avctx</name></name></expr></argument>, <argument pos:start="743:26" pos:end="743:37"><expr pos:start="743:26" pos:end="743:37"><name pos:start="743:26" pos:end="743:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="743:40" pos:end="743:95"><expr pos:start="743:40" pos:end="743:95"><literal type="string" pos:start="743:40" pos:end="743:95">"max_transform_hierarchy_depth_intra out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="745:16" pos:end="745:55"><expr pos:start="745:16" pos:end="745:55"><name pos:start="745:16" pos:end="745:55"><name pos:start="745:16" pos:end="745:18">sps</name><operator pos:start="745:19" pos:end="745:20">-&gt;</operator><name pos:start="745:21" pos:end="745:55">max_transform_hierarchy_depth_intra</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="747:9" pos:end="747:17">goto <name pos:start="747:14" pos:end="747:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="751:5" pos:end="761:5"><if pos:start="751:5" pos:end="761:5">if <condition pos:start="751:8" pos:end="751:64">(<expr pos:start="751:9" pos:end="751:63"><name pos:start="751:9" pos:end="751:32"><name pos:start="751:9" pos:end="751:11">sps</name><operator pos:start="751:12" pos:end="751:13">-&gt;</operator><name pos:start="751:14" pos:end="751:32">log2_max_trafo_size</name></name> <operator pos:start="751:34" pos:end="751:34">&gt;</operator> <call pos:start="751:36" pos:end="751:63"><name pos:start="751:36" pos:end="751:40">FFMIN</name><argument_list pos:start="751:41" pos:end="751:63">(<argument pos:start="751:42" pos:end="751:59"><expr pos:start="751:42" pos:end="751:59"><name pos:start="751:42" pos:end="751:59"><name pos:start="751:42" pos:end="751:44">sps</name><operator pos:start="751:45" pos:end="751:46">-&gt;</operator><name pos:start="751:47" pos:end="751:59">log2_ctb_size</name></name></expr></argument>, <argument pos:start="751:62" pos:end="751:62"><expr pos:start="751:62" pos:end="751:62"><literal type="number" pos:start="751:62" pos:end="751:62">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="751:66" pos:end="761:5">{<block_content pos:start="753:9" pos:end="759:17">

        <expr_stmt pos:start="753:9" pos:end="757:41"><expr pos:start="753:9" pos:end="757:40"><call pos:start="753:9" pos:end="757:40"><name pos:start="753:9" pos:end="753:14">av_log</name><argument_list pos:start="753:15" pos:end="757:40">(<argument pos:start="753:16" pos:end="753:23"><expr pos:start="753:16" pos:end="753:23"><name pos:start="753:16" pos:end="753:23"><name pos:start="753:16" pos:end="753:16">s</name><operator pos:start="753:17" pos:end="753:18">-&gt;</operator><name pos:start="753:19" pos:end="753:23">avctx</name></name></expr></argument>, <argument pos:start="753:26" pos:end="753:37"><expr pos:start="753:26" pos:end="753:37"><name pos:start="753:26" pos:end="753:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="755:16" pos:end="755:60"><expr pos:start="755:16" pos:end="755:60"><literal type="string" pos:start="755:16" pos:end="755:60">"max transform block size out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="757:16" pos:end="757:39"><expr pos:start="757:16" pos:end="757:39"><name pos:start="757:16" pos:end="757:39"><name pos:start="757:16" pos:end="757:18">sps</name><operator pos:start="757:19" pos:end="757:20">-&gt;</operator><name pos:start="757:21" pos:end="757:39">log2_max_trafo_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="759:9" pos:end="759:17">goto <name pos:start="759:14" pos:end="759:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="765:5" pos:end="773:5"><if pos:start="765:5" pos:end="773:5">if <condition pos:start="765:8" pos:end="765:30">(<expr pos:start="765:9" pos:end="765:29"><call pos:start="765:9" pos:end="765:25"><name pos:start="765:9" pos:end="765:21">get_bits_left</name><argument_list pos:start="765:22" pos:end="765:25">(<argument pos:start="765:23" pos:end="765:24"><expr pos:start="765:23" pos:end="765:24"><name pos:start="765:23" pos:end="765:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="765:27" pos:end="765:27">&lt;</operator> <literal type="number" pos:start="765:29" pos:end="765:29">0</literal></expr>)</condition> <block pos:start="765:32" pos:end="773:5">{<block_content pos:start="767:9" pos:end="771:17">

        <expr_stmt pos:start="767:9" pos:end="769:64"><expr pos:start="767:9" pos:end="769:63"><call pos:start="767:9" pos:end="769:63"><name pos:start="767:9" pos:end="767:14">av_log</name><argument_list pos:start="767:15" pos:end="769:63">(<argument pos:start="767:16" pos:end="767:23"><expr pos:start="767:16" pos:end="767:23"><name pos:start="767:16" pos:end="767:23"><name pos:start="767:16" pos:end="767:16">s</name><operator pos:start="767:17" pos:end="767:18">-&gt;</operator><name pos:start="767:19" pos:end="767:23">avctx</name></name></expr></argument>, <argument pos:start="767:26" pos:end="767:37"><expr pos:start="767:26" pos:end="767:37"><name pos:start="767:26" pos:end="767:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="769:16" pos:end="769:42"><expr pos:start="769:16" pos:end="769:42"><literal type="string" pos:start="769:16" pos:end="769:42">"Overread SPS by %d bits\n"</literal></expr></argument>, <argument pos:start="769:45" pos:end="769:62"><expr pos:start="769:45" pos:end="769:62"><operator pos:start="769:45" pos:end="769:45">-</operator><call pos:start="769:46" pos:end="769:62"><name pos:start="769:46" pos:end="769:58">get_bits_left</name><argument_list pos:start="769:59" pos:end="769:62">(<argument pos:start="769:60" pos:end="769:61"><expr pos:start="769:60" pos:end="769:61"><name pos:start="769:60" pos:end="769:61">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="771:9" pos:end="771:17">goto <name pos:start="771:14" pos:end="771:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="777:5" pos:end="791:5"><if pos:start="777:5" pos:end="791:5">if <condition pos:start="777:8" pos:end="777:45">(<expr pos:start="777:9" pos:end="777:44"><name pos:start="777:9" pos:end="777:23"><name pos:start="777:9" pos:end="777:9">s</name><operator pos:start="777:10" pos:end="777:11">-&gt;</operator><name pos:start="777:12" pos:end="777:16">avctx</name><operator pos:start="777:17" pos:end="777:18">-&gt;</operator><name pos:start="777:19" pos:end="777:23">debug</name></name> <operator pos:start="777:25" pos:end="777:25">&amp;</operator> <name pos:start="777:27" pos:end="777:44">FF_DEBUG_BITSTREAM</name></expr>)</condition> <block pos:start="777:47" pos:end="791:5">{<block_content pos:start="779:9" pos:end="789:50">

        <expr_stmt pos:start="779:9" pos:end="789:50"><expr pos:start="779:9" pos:end="789:49"><call pos:start="779:9" pos:end="789:49"><name pos:start="779:9" pos:end="779:14">av_log</name><argument_list pos:start="779:15" pos:end="789:49">(<argument pos:start="779:16" pos:end="779:23"><expr pos:start="779:16" pos:end="779:23"><name pos:start="779:16" pos:end="779:23"><name pos:start="779:16" pos:end="779:16">s</name><operator pos:start="779:17" pos:end="779:18">-&gt;</operator><name pos:start="779:19" pos:end="779:23">avctx</name></name></expr></argument>, <argument pos:start="779:26" pos:end="779:37"><expr pos:start="779:26" pos:end="779:37"><name pos:start="779:26" pos:end="779:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="781:16" pos:end="783:51"><expr pos:start="781:16" pos:end="783:51"><literal type="string" pos:start="781:16" pos:end="781:54">"Parsed SPS: id %d; coded wxh: %dx%d; "</literal>

               <literal type="string" pos:start="783:16" pos:end="783:51">"cropped wxh: %dx%d; pix_fmt: %s.\n"</literal></expr></argument>,

               <argument pos:start="785:16" pos:end="785:21"><expr pos:start="785:16" pos:end="785:21"><name pos:start="785:16" pos:end="785:21">sps_id</name></expr></argument>, <argument pos:start="785:24" pos:end="785:33"><expr pos:start="785:24" pos:end="785:33"><name pos:start="785:24" pos:end="785:33"><name pos:start="785:24" pos:end="785:26">sps</name><operator pos:start="785:27" pos:end="785:28">-&gt;</operator><name pos:start="785:29" pos:end="785:33">width</name></name></expr></argument>, <argument pos:start="785:36" pos:end="785:46"><expr pos:start="785:36" pos:end="785:46"><name pos:start="785:36" pos:end="785:46"><name pos:start="785:36" pos:end="785:38">sps</name><operator pos:start="785:39" pos:end="785:40">-&gt;</operator><name pos:start="785:41" pos:end="785:46">height</name></name></expr></argument>,

               <argument pos:start="787:16" pos:end="787:32"><expr pos:start="787:16" pos:end="787:32"><name pos:start="787:16" pos:end="787:32"><name pos:start="787:16" pos:end="787:18">sps</name><operator pos:start="787:19" pos:end="787:20">-&gt;</operator><name pos:start="787:21" pos:end="787:32">output_width</name></name></expr></argument>, <argument pos:start="787:35" pos:end="787:52"><expr pos:start="787:35" pos:end="787:52"><name pos:start="787:35" pos:end="787:52"><name pos:start="787:35" pos:end="787:37">sps</name><operator pos:start="787:38" pos:end="787:39">-&gt;</operator><name pos:start="787:40" pos:end="787:52">output_height</name></name></expr></argument>,

               <argument pos:start="789:16" pos:end="789:48"><expr pos:start="789:16" pos:end="789:48"><call pos:start="789:16" pos:end="789:48"><name pos:start="789:16" pos:end="789:34">av_get_pix_fmt_name</name><argument_list pos:start="789:35" pos:end="789:48">(<argument pos:start="789:36" pos:end="789:47"><expr pos:start="789:36" pos:end="789:47"><name pos:start="789:36" pos:end="789:47"><name pos:start="789:36" pos:end="789:38">sps</name><operator pos:start="789:39" pos:end="789:40">-&gt;</operator><name pos:start="789:41" pos:end="789:47">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="795:5" pos:end="799:52">/* check if this is a repeat of an already parsed SPS, then keep the

     * original one.

     * otherwise drop all PPSes that depend on it */</comment>

    <if_stmt pos:start="801:5" pos:end="833:5"><if pos:start="801:5" pos:end="807:5">if <condition pos:start="801:8" pos:end="803:73">(<expr pos:start="801:9" pos:end="803:72"><name pos:start="801:9" pos:end="801:27"><name pos:start="801:9" pos:end="801:9">s</name><operator pos:start="801:10" pos:end="801:11">-&gt;</operator><name pos:start="801:12" pos:end="801:19">sps_list</name><index pos:start="801:20" pos:end="801:27">[<expr pos:start="801:21" pos:end="801:26"><name pos:start="801:21" pos:end="801:26">sps_id</name></expr>]</index></name> <operator pos:start="801:29" pos:end="801:30">&amp;&amp;</operator>

        <operator pos:start="803:9" pos:end="803:9">!</operator><call pos:start="803:10" pos:end="803:72"><name pos:start="803:10" pos:end="803:15">memcmp</name><argument_list pos:start="803:16" pos:end="803:72">(<argument pos:start="803:17" pos:end="803:41"><expr pos:start="803:17" pos:end="803:41"><name pos:start="803:17" pos:end="803:35"><name pos:start="803:17" pos:end="803:17">s</name><operator pos:start="803:18" pos:end="803:19">-&gt;</operator><name pos:start="803:20" pos:end="803:27">sps_list</name><index pos:start="803:28" pos:end="803:35">[<expr pos:start="803:29" pos:end="803:34"><name pos:start="803:29" pos:end="803:34">sps_id</name></expr>]</index></name><operator pos:start="803:36" pos:end="803:37">-&gt;</operator><name pos:start="803:38" pos:end="803:41">data</name></expr></argument>, <argument pos:start="803:44" pos:end="803:56"><expr pos:start="803:44" pos:end="803:56"><name pos:start="803:44" pos:end="803:56"><name pos:start="803:44" pos:end="803:50">sps_buf</name><operator pos:start="803:51" pos:end="803:52">-&gt;</operator><name pos:start="803:53" pos:end="803:56">data</name></name></expr></argument>, <argument pos:start="803:59" pos:end="803:71"><expr pos:start="803:59" pos:end="803:71"><name pos:start="803:59" pos:end="803:71"><name pos:start="803:59" pos:end="803:65">sps_buf</name><operator pos:start="803:66" pos:end="803:67">-&gt;</operator><name pos:start="803:68" pos:end="803:71">size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="803:75" pos:end="807:5">{<block_content pos:start="805:9" pos:end="805:34">

        <expr_stmt pos:start="805:9" pos:end="805:34"><expr pos:start="805:9" pos:end="805:33"><call pos:start="805:9" pos:end="805:33"><name pos:start="805:9" pos:end="805:23">av_buffer_unref</name><argument_list pos:start="805:24" pos:end="805:33">(<argument pos:start="805:25" pos:end="805:32"><expr pos:start="805:25" pos:end="805:32"><operator pos:start="805:25" pos:end="805:25">&amp;</operator><name pos:start="805:26" pos:end="805:32">sps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="807:7" pos:end="833:5">else <block pos:start="807:12" pos:end="833:5">{<block_content pos:start="809:9" pos:end="831:38">

        <for pos:start="809:9" pos:end="815:9">for <control pos:start="809:13" pos:end="809:57">(<init pos:start="809:14" pos:end="809:19"><expr pos:start="809:14" pos:end="809:18"><name pos:start="809:14" pos:end="809:14">i</name> <operator pos:start="809:16" pos:end="809:16">=</operator> <literal type="number" pos:start="809:18" pos:end="809:18">0</literal></expr>;</init> <condition pos:start="809:21" pos:end="809:52"><expr pos:start="809:21" pos:end="809:51"><name pos:start="809:21" pos:end="809:21">i</name> <operator pos:start="809:23" pos:end="809:23">&lt;</operator> <call pos:start="809:25" pos:end="809:51"><name pos:start="809:25" pos:end="809:38">FF_ARRAY_ELEMS</name><argument_list pos:start="809:39" pos:end="809:51">(<argument pos:start="809:40" pos:end="809:50"><expr pos:start="809:40" pos:end="809:50"><name pos:start="809:40" pos:end="809:50"><name pos:start="809:40" pos:end="809:40">s</name><operator pos:start="809:41" pos:end="809:42">-&gt;</operator><name pos:start="809:43" pos:end="809:50">pps_list</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="809:54" pos:end="809:56"><expr pos:start="809:54" pos:end="809:56"><name pos:start="809:54" pos:end="809:54">i</name><operator pos:start="809:55" pos:end="809:56">++</operator></expr></incr>)</control> <block pos:start="809:59" pos:end="815:9">{<block_content pos:start="811:13" pos:end="813:49">

            <if_stmt pos:start="811:13" pos:end="813:49"><if pos:start="811:13" pos:end="813:49">if <condition pos:start="811:16" pos:end="811:85">(<expr pos:start="811:17" pos:end="811:84"><name pos:start="811:17" pos:end="811:30"><name pos:start="811:17" pos:end="811:17">s</name><operator pos:start="811:18" pos:end="811:19">-&gt;</operator><name pos:start="811:20" pos:end="811:27">pps_list</name><index pos:start="811:28" pos:end="811:30">[<expr pos:start="811:29" pos:end="811:29"><name pos:start="811:29" pos:end="811:29">i</name></expr>]</index></name> <operator pos:start="811:32" pos:end="811:33">&amp;&amp;</operator> <operator pos:start="811:35" pos:end="811:35">(</operator><operator pos:start="811:36" pos:end="811:36">(</operator><name pos:start="811:37" pos:end="811:43">HEVCPPS</name><operator pos:start="811:44" pos:end="811:44">*</operator><operator pos:start="811:45" pos:end="811:45">)</operator><name pos:start="811:46" pos:end="811:59"><name pos:start="811:46" pos:end="811:46">s</name><operator pos:start="811:47" pos:end="811:48">-&gt;</operator><name pos:start="811:49" pos:end="811:56">pps_list</name><index pos:start="811:57" pos:end="811:59">[<expr pos:start="811:58" pos:end="811:58"><name pos:start="811:58" pos:end="811:58">i</name></expr>]</index></name><operator pos:start="811:60" pos:end="811:61">-&gt;</operator><name pos:start="811:62" pos:end="811:65">data</name><operator pos:start="811:66" pos:end="811:66">)</operator><operator pos:start="811:67" pos:end="811:68">-&gt;</operator><name pos:start="811:69" pos:end="811:74">sps_id</name> <operator pos:start="811:76" pos:end="811:77">==</operator> <name pos:start="811:79" pos:end="811:84">sps_id</name></expr>)</condition><block type="pseudo" pos:start="813:17" pos:end="813:49"><block_content pos:start="813:17" pos:end="813:49">

                <expr_stmt pos:start="813:17" pos:end="813:49"><expr pos:start="813:17" pos:end="813:48"><call pos:start="813:17" pos:end="813:48"><name pos:start="813:17" pos:end="813:31">av_buffer_unref</name><argument_list pos:start="813:32" pos:end="813:48">(<argument pos:start="813:33" pos:end="813:47"><expr pos:start="813:33" pos:end="813:47"><operator pos:start="813:33" pos:end="813:33">&amp;</operator><name pos:start="813:34" pos:end="813:47"><name pos:start="813:34" pos:end="813:34">s</name><operator pos:start="813:35" pos:end="813:36">-&gt;</operator><name pos:start="813:37" pos:end="813:44">pps_list</name><index pos:start="813:45" pos:end="813:47">[<expr pos:start="813:46" pos:end="813:46"><name pos:start="813:46" pos:end="813:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="817:9" pos:end="827:9"><if pos:start="817:9" pos:end="827:9">if <condition pos:start="817:12" pos:end="817:81">(<expr pos:start="817:13" pos:end="817:80"><name pos:start="817:13" pos:end="817:31"><name pos:start="817:13" pos:end="817:13">s</name><operator pos:start="817:14" pos:end="817:15">-&gt;</operator><name pos:start="817:16" pos:end="817:23">sps_list</name><index pos:start="817:24" pos:end="817:31">[<expr pos:start="817:25" pos:end="817:30"><name pos:start="817:25" pos:end="817:30">sps_id</name></expr>]</index></name> <operator pos:start="817:33" pos:end="817:34">&amp;&amp;</operator> <name pos:start="817:36" pos:end="817:41"><name pos:start="817:36" pos:end="817:36">s</name><operator pos:start="817:37" pos:end="817:38">-&gt;</operator><name pos:start="817:39" pos:end="817:41">sps</name></name> <operator pos:start="817:43" pos:end="817:44">==</operator> <operator pos:start="817:46" pos:end="817:46">(</operator><name pos:start="817:47" pos:end="817:53">HEVCSPS</name><operator pos:start="817:54" pos:end="817:54">*</operator><operator pos:start="817:55" pos:end="817:55">)</operator><name pos:start="817:56" pos:end="817:74"><name pos:start="817:56" pos:end="817:56">s</name><operator pos:start="817:57" pos:end="817:58">-&gt;</operator><name pos:start="817:59" pos:end="817:66">sps_list</name><index pos:start="817:67" pos:end="817:74">[<expr pos:start="817:68" pos:end="817:73"><name pos:start="817:68" pos:end="817:73">sps_id</name></expr>]</index></name><operator pos:start="817:75" pos:end="817:76">-&gt;</operator><name pos:start="817:77" pos:end="817:80">data</name></expr>)</condition> <block pos:start="817:83" pos:end="827:9">{<block_content pos:start="819:13" pos:end="825:30">

            <expr_stmt pos:start="819:13" pos:end="819:45"><expr pos:start="819:13" pos:end="819:44"><call pos:start="819:13" pos:end="819:44"><name pos:start="819:13" pos:end="819:27">av_buffer_unref</name><argument_list pos:start="819:28" pos:end="819:44">(<argument pos:start="819:29" pos:end="819:43"><expr pos:start="819:29" pos:end="819:43"><operator pos:start="819:29" pos:end="819:29">&amp;</operator><name pos:start="819:30" pos:end="819:43"><name pos:start="819:30" pos:end="819:30">s</name><operator pos:start="819:31" pos:end="819:32">-&gt;</operator><name pos:start="819:33" pos:end="819:43">current_sps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:64"><expr pos:start="821:13" pos:end="821:63"><name pos:start="821:13" pos:end="821:26"><name pos:start="821:13" pos:end="821:13">s</name><operator pos:start="821:14" pos:end="821:15">-&gt;</operator><name pos:start="821:16" pos:end="821:26">current_sps</name></name> <operator pos:start="821:28" pos:end="821:28">=</operator> <call pos:start="821:30" pos:end="821:63"><name pos:start="821:30" pos:end="821:42">av_buffer_ref</name><argument_list pos:start="821:43" pos:end="821:63">(<argument pos:start="821:44" pos:end="821:62"><expr pos:start="821:44" pos:end="821:62"><name pos:start="821:44" pos:end="821:62"><name pos:start="821:44" pos:end="821:44">s</name><operator pos:start="821:45" pos:end="821:46">-&gt;</operator><name pos:start="821:47" pos:end="821:54">sps_list</name><index pos:start="821:55" pos:end="821:62">[<expr pos:start="821:56" pos:end="821:61"><name pos:start="821:56" pos:end="821:61">sps_id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="823:13" pos:end="825:30"><if pos:start="823:13" pos:end="825:30">if <condition pos:start="823:16" pos:end="823:32">(<expr pos:start="823:17" pos:end="823:31"><operator pos:start="823:17" pos:end="823:17">!</operator><name pos:start="823:18" pos:end="823:31"><name pos:start="823:18" pos:end="823:18">s</name><operator pos:start="823:19" pos:end="823:20">-&gt;</operator><name pos:start="823:21" pos:end="823:31">current_sps</name></name></expr>)</condition><block type="pseudo" pos:start="825:17" pos:end="825:30"><block_content pos:start="825:17" pos:end="825:30">

                <expr_stmt pos:start="825:17" pos:end="825:30"><expr pos:start="825:17" pos:end="825:29"><name pos:start="825:17" pos:end="825:22"><name pos:start="825:17" pos:end="825:17">s</name><operator pos:start="825:18" pos:end="825:19">-&gt;</operator><name pos:start="825:20" pos:end="825:22">sps</name></name> <operator pos:start="825:24" pos:end="825:24">=</operator> <name pos:start="825:26" pos:end="825:29">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="829:9" pos:end="829:46"><expr pos:start="829:9" pos:end="829:45"><call pos:start="829:9" pos:end="829:45"><name pos:start="829:9" pos:end="829:23">av_buffer_unref</name><argument_list pos:start="829:24" pos:end="829:45">(<argument pos:start="829:25" pos:end="829:44"><expr pos:start="829:25" pos:end="829:44"><operator pos:start="829:25" pos:end="829:25">&amp;</operator><name pos:start="829:26" pos:end="829:44"><name pos:start="829:26" pos:end="829:26">s</name><operator pos:start="829:27" pos:end="829:28">-&gt;</operator><name pos:start="829:29" pos:end="829:36">sps_list</name><index pos:start="829:37" pos:end="829:44">[<expr pos:start="829:38" pos:end="829:43"><name pos:start="829:38" pos:end="829:43">sps_id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="831:9" pos:end="831:38"><expr pos:start="831:9" pos:end="831:37"><name pos:start="831:9" pos:end="831:27"><name pos:start="831:9" pos:end="831:9">s</name><operator pos:start="831:10" pos:end="831:11">-&gt;</operator><name pos:start="831:12" pos:end="831:19">sps_list</name><index pos:start="831:20" pos:end="831:27">[<expr pos:start="831:21" pos:end="831:26"><name pos:start="831:21" pos:end="831:26">sps_id</name></expr>]</index></name> <operator pos:start="831:29" pos:end="831:29">=</operator> <name pos:start="831:31" pos:end="831:37">sps_buf</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="837:5" pos:end="837:13">return <expr pos:start="837:12" pos:end="837:12"><literal type="number" pos:start="837:12" pos:end="837:12">0</literal></expr>;</return>



<label pos:start="841:1" pos:end="841:4"><name pos:start="841:1" pos:end="841:3">err</name>:</label>

    <expr_stmt pos:start="843:5" pos:end="843:30"><expr pos:start="843:5" pos:end="843:29"><call pos:start="843:5" pos:end="843:29"><name pos:start="843:5" pos:end="843:19">av_buffer_unref</name><argument_list pos:start="843:20" pos:end="843:29">(<argument pos:start="843:21" pos:end="843:28"><expr pos:start="843:21" pos:end="843:28"><operator pos:start="843:21" pos:end="843:21">&amp;</operator><name pos:start="843:22" pos:end="843:28">sps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="845:5" pos:end="845:15">return <expr pos:start="845:12" pos:end="845:14"><name pos:start="845:12" pos:end="845:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
