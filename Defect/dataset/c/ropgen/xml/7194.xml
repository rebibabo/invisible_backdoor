<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7194.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:18">RENAME</name></type>(<name pos:start="1:20" pos:end="1:31">hcscale_fast</name>)<parameter_list pos:start="1:33" pos:end="5:73">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">SwsContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:55">int16_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">dst1</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:70">int16_t</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">dst2</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:45">dstWidth</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:66"><decl pos:start="3:48" pos:end="3:66"><type pos:start="3:48" pos:end="3:66"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:60">uint8_t</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:66">src1</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:52"><decl pos:start="5:34" pos:end="5:52"><type pos:start="5:34" pos:end="5:52"><specifier pos:start="5:34" pos:end="5:38">const</specifier> <name pos:start="5:40" pos:end="5:46">uint8_t</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:52">src2</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:62"><decl pos:start="5:55" pos:end="5:62"><type pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:62">srcW</name></decl></parameter>, <parameter pos:start="5:65" pos:end="5:72"><decl pos:start="5:65" pos:end="5:72"><type pos:start="5:65" pos:end="5:72"><name pos:start="5:65" pos:end="5:67">int</name></type> <name pos:start="5:69" pos:end="5:72">xInc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="169:1">{<block_content pos:start="9:5" pos:end="167:5">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int16_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">filterPos</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:26">c</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:41">hChrFilterPos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">filter</name>    <init pos:start="11:24" pos:end="11:38">= <expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:26">c</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:38">hChrFilter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">void</name>    <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:27">mmx2FilterCode</name><init pos:start="13:28" pos:end="13:49">= <expr pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:30">c</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:49">chrMmx2FilterCode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="17:1" pos:end="17:16">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:16"><call pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:16">(<argument pos:start="17:13" pos:end="17:15"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="19:5" pos:end="24:0"><expr pos:start="19:5" pos:end="19:41"><call pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:19">DECLARE_ALIGNED</name><argument_list pos:start="19:20" pos:end="19:41">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">8</literal></expr></argument>, <argument pos:start="19:24" pos:end="19:31"><expr pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:31">uint64_t</name></expr></argument>, <argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:40">ebxsave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="23:1" pos:end="23:15">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:15">ARCH_X86_64</name></expr></cpp:if>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:41"><call pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:19">DECLARE_ALIGNED</name><argument_list pos:start="25:20" pos:end="25:41">(<argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">8</literal></expr></argument>, <argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:31">uint64_t</name></expr></argument>, <argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40">retsave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>



    <asm pos:start="31:5" pos:end="157:6">__asm__ <specifier pos:start="31:13" pos:end="31:20">volatile</specifier>(

<cpp:if pos:start="33:1" pos:end="33:16">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:16"><call pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:16">(<argument pos:start="33:13" pos:end="33:15"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov          %%"REG_b", %7         \n\t"

<cpp:if pos:start="37:1" pos:end="37:15">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:15">ARCH_X86_64</name></expr></cpp:if>

        "mov          -8(%%rsp), %%"REG_a"  \n\t"

        "mov          %%"REG_a", %8         \n\t"

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

<cpp:else pos:start="45:1" pos:end="45:5">#<cpp:directive pos:start="45:2" pos:end="45:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="47:1" pos:end="47:15">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:15">ARCH_X86_64</name></expr></cpp:if>

        "mov          -8(%%rsp), %%"REG_a"  \n\t"

        "mov          %%"REG_a", %7         \n\t"

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

        "pxor             %%mm7, %%mm7      \n\t"

        "mov                 %0, %%"REG_c"  \n\t"

        "mov                 %1, %%"REG_D"  \n\t"

        "mov                 %2, %%"REG_d"  \n\t"

        "mov                 %3, %%"REG_b"  \n\t"

        "xor          %%"REG_a", %%"REG_a"  \n\t" <comment type="line" pos:start="67:51" pos:end="67:54">// i</comment>

        PREFETCH"   (%%"REG_c")             \n\t"

        PREFETCH" 32(%%"REG_c")             \n\t"

        PREFETCH" 64(%%"REG_c")             \n\t"



        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        "xor          %%"REG_a", %%"REG_a"  \n\t" <comment type="line" pos:start="85:51" pos:end="85:54">// i</comment>

        "mov                 %5, %%"REG_c"  \n\t" <comment type="line" pos:start="87:51" pos:end="87:56">// src</comment>

        "mov                 %6, %%"REG_D"  \n\t" <comment type="line" pos:start="89:51" pos:end="89:57">// buf2</comment>

        PREFETCH"   (%%"REG_c")             \n\t"

        PREFETCH" 32(%%"REG_c")             \n\t"

        PREFETCH" 64(%%"REG_c")             \n\t"



        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE



<cpp:if pos:start="109:1" pos:end="109:16">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:16"><call pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:11">defined</name><argument_list pos:start="109:12" pos:end="109:16">(<argument pos:start="109:13" pos:end="109:15"><expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov %7, %%"REG_b"    \n\t"

<cpp:if pos:start="113:1" pos:end="113:15">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:15">ARCH_X86_64</name></expr></cpp:if>

        "mov                 %8, %%"REG_a"  \n\t"

        "mov          %%"REG_a", -8(%%rsp)  \n\t"

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

<cpp:else pos:start="121:1" pos:end="121:5">#<cpp:directive pos:start="121:2" pos:end="121:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="123:1" pos:end="123:15">#<cpp:directive pos:start="123:2" pos:end="123:3">if</cpp:directive> <expr pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:15">ARCH_X86_64</name></expr></cpp:if>

        "mov                 %7, %%"REG_a"  \n\t"

        "mov          %%"REG_a", -8(%%rsp)  \n\t"

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>

        :: "m" (src1), "m" (dst1), "m" (filter), "m" (filterPos),

           "m" (mmx2FilterCode), "m" (src2), "m"(dst2)

<cpp:if pos:start="137:1" pos:end="137:16">#<cpp:directive pos:start="137:2" pos:end="137:3">if</cpp:directive> <expr pos:start="137:5" pos:end="137:16"><call pos:start="137:5" pos:end="137:16"><name pos:start="137:5" pos:end="137:11">defined</name><argument_list pos:start="137:12" pos:end="137:16">(<argument pos:start="137:13" pos:end="137:15"><expr pos:start="137:13" pos:end="137:15"><name pos:start="137:13" pos:end="137:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

          ,"m" (ebxsave)

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="143:1" pos:end="143:15">#<cpp:directive pos:start="143:2" pos:end="143:3">if</cpp:directive> <expr pos:start="143:5" pos:end="143:15"><name pos:start="143:5" pos:end="143:15">ARCH_X86_64</name></expr></cpp:if>

          ,"m"(retsave)

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

        : "%"REG_a, "%"REG_c, "%"REG_d, "%"REG_S, "%"REG_D

<cpp:if pos:start="151:1" pos:end="151:17">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:17"><operator pos:start="151:5" pos:end="151:5">!</operator><call pos:start="151:6" pos:end="151:17"><name pos:start="151:6" pos:end="151:12">defined</name><argument_list pos:start="151:13" pos:end="151:17">(<argument pos:start="151:14" pos:end="151:16"><expr pos:start="151:14" pos:end="151:16"><name pos:start="151:14" pos:end="151:16">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

         ,"%"REG_b

<cpp:endif pos:start="155:1" pos:end="155:6">#<cpp:directive pos:start="155:2" pos:end="155:6">endif</cpp:directive></cpp:endif>

    );</asm>



    <for pos:start="161:5" pos:end="167:5">for <control pos:start="161:9" pos:end="161:50">(<init pos:start="161:10" pos:end="161:22"><expr pos:start="161:10" pos:end="161:21"><name pos:start="161:10" pos:end="161:10">i</name><operator pos:start="161:11" pos:end="161:11">=</operator><name pos:start="161:12" pos:end="161:19">dstWidth</name><operator pos:start="161:20" pos:end="161:20">-</operator><literal type="number" pos:start="161:21" pos:end="161:21">1</literal></expr>;</init> <condition pos:start="161:24" pos:end="161:45"><expr pos:start="161:24" pos:end="161:44"><operator pos:start="161:24" pos:end="161:24">(</operator><name pos:start="161:25" pos:end="161:25">i</name><operator pos:start="161:26" pos:end="161:26">*</operator><name pos:start="161:27" pos:end="161:30">xInc</name><operator pos:start="161:31" pos:end="161:31">)</operator><operator pos:start="161:32" pos:end="161:33">&gt;&gt;</operator><literal type="number" pos:start="161:34" pos:end="161:35">16</literal> <operator pos:start="161:37" pos:end="161:38">&gt;=</operator><name pos:start="161:39" pos:end="161:42">srcW</name><operator pos:start="161:43" pos:end="161:43">-</operator><literal type="number" pos:start="161:44" pos:end="161:44">1</literal></expr>;</condition> <incr pos:start="161:47" pos:end="161:49"><expr pos:start="161:47" pos:end="161:49"><name pos:start="161:47" pos:end="161:47">i</name><operator pos:start="161:48" pos:end="161:49">--</operator></expr></incr>)</control> <block pos:start="161:52" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:35">

        <expr_stmt pos:start="163:9" pos:end="163:35"><expr pos:start="163:9" pos:end="163:34"><name pos:start="163:9" pos:end="163:15"><name pos:start="163:9" pos:end="163:12">dst1</name><index pos:start="163:13" pos:end="163:15">[<expr pos:start="163:14" pos:end="163:14"><name pos:start="163:14" pos:end="163:14">i</name></expr>]</index></name> <operator pos:start="163:17" pos:end="163:17">=</operator> <name pos:start="163:19" pos:end="163:30"><name pos:start="163:19" pos:end="163:22">src1</name><index pos:start="163:23" pos:end="163:30">[<expr pos:start="163:24" pos:end="163:29"><name pos:start="163:24" pos:end="163:27">srcW</name><operator pos:start="163:28" pos:end="163:28">-</operator><literal type="number" pos:start="163:29" pos:end="163:29">1</literal></expr>]</index></name><operator pos:start="163:31" pos:end="163:31">*</operator><literal type="number" pos:start="163:32" pos:end="163:34">128</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:35"><expr pos:start="165:9" pos:end="165:34"><name pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:12">dst2</name><index pos:start="165:13" pos:end="165:15">[<expr pos:start="165:14" pos:end="165:14"><name pos:start="165:14" pos:end="165:14">i</name></expr>]</index></name> <operator pos:start="165:17" pos:end="165:17">=</operator> <name pos:start="165:19" pos:end="165:30"><name pos:start="165:19" pos:end="165:22">src2</name><index pos:start="165:23" pos:end="165:30">[<expr pos:start="165:24" pos:end="165:29"><name pos:start="165:24" pos:end="165:27">srcW</name><operator pos:start="165:28" pos:end="165:28">-</operator><literal type="number" pos:start="165:29" pos:end="165:29">1</literal></expr>]</index></name><operator pos:start="165:31" pos:end="165:31">*</operator><literal type="number" pos:start="165:32" pos:end="165:34">128</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
