<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13689.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">init_band_stepsize</name><parameter_list pos:start="1:31" pos:end="11:40">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:43">Jpeg2000Band</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">band</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:58"><decl pos:start="5:32" pos:end="5:58"><type pos:start="5:32" pos:end="5:58"><name pos:start="5:32" pos:end="5:50">Jpeg2000CodingStyle</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:58">codsty</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:57"><decl pos:start="7:32" pos:end="7:57"><type pos:start="7:32" pos:end="7:57"><name pos:start="7:32" pos:end="7:49">Jpeg2000QuantStyle</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier></type><name pos:start="7:52" pos:end="7:57">qntsty</name></decl></parameter>,

                               <parameter pos:start="9:32" pos:end="9:41"><decl pos:start="9:32" pos:end="9:41"><type pos:start="9:32" pos:end="9:41"><name pos:start="9:32" pos:end="9:34">int</name></type> <name pos:start="9:36" pos:end="9:41">bandno</name></decl></parameter>, <parameter pos:start="9:44" pos:end="9:54"><decl pos:start="9:44" pos:end="9:54"><type pos:start="9:44" pos:end="9:54"><name pos:start="9:44" pos:end="9:46">int</name></type> <name pos:start="9:48" pos:end="9:54">gbandno</name></decl></parameter>, <parameter pos:start="9:57" pos:end="9:70"><decl pos:start="9:57" pos:end="9:70"><type pos:start="9:57" pos:end="9:70"><name pos:start="9:57" pos:end="9:59">int</name></type> <name pos:start="9:61" pos:end="9:70">reslevelno</name></decl></parameter>,

                               <parameter pos:start="11:32" pos:end="11:39"><decl pos:start="11:32" pos:end="11:39"><type pos:start="11:32" pos:end="11:39"><name pos:start="11:32" pos:end="11:34">int</name></type> <name pos:start="11:36" pos:end="11:39">cbps</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="121:1">{<block_content pos:start="19:5" pos:end="119:32">

    <comment type="block" pos:start="15:5" pos:end="17:49">/* TODO: Implementation of quantization step not finished,

     * see ISO/IEC 15444-1:2002 E.1 and A.6.4. */</comment>

    <switch pos:start="19:5" pos:end="73:5">switch <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:18">qntsty</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:28">quantsty</name></name></expr>)</condition> <block pos:start="19:31" pos:end="73:5">{<block_content pos:start="21:9" pos:end="71:14">

        <decl_stmt pos:start="21:9" pos:end="21:21"><decl pos:start="21:9" pos:end="21:20"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">uint8_t</name></type> <name pos:start="21:17" pos:end="21:20">gain</name></decl>;</decl_stmt>

    <case pos:start="23:5" pos:end="23:28">case <expr pos:start="23:10" pos:end="23:27"><name pos:start="23:10" pos:end="23:27">JPEG2000_QSTY_NONE</name></expr>:</case>

        <comment type="block" pos:start="25:9" pos:end="25:59">/* TODO: to verify. No quantization in this case */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:12">band</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:24">f_stepsize</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <literal type="number" pos:start="27:28" pos:end="27:28">1</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:26">case <expr pos:start="31:10" pos:end="31:25"><name pos:start="31:10" pos:end="31:25">JPEG2000_QSTY_SI</name></expr>:</case>

        <comment type="block" pos:start="33:9" pos:end="33:48">/*TODO: Compute formula to implement. */</comment>

<comment type="line" pos:start="35:1" pos:end="35:26">//         numbps = cbps +</comment>

<comment type="line" pos:start="37:1" pos:end="37:87">//                  lut_gain[codsty-&gt;transform == FF_DWT53][bandno + (reslevelno &gt; 0)];</comment>

<comment type="line" pos:start="39:1" pos:end="39:63">//         band-&gt;f_stepsize = SHL(2048 + qntsty-&gt;mant[gbandno],</comment>

<comment type="line" pos:start="41:1" pos:end="41:70">//                                2 + numbps - qntsty-&gt;expn[gbandno]);</comment>

<comment type="line" pos:start="43:1" pos:end="43:17">//         break;</comment>

    <case pos:start="45:5" pos:end="45:26">case <expr pos:start="45:10" pos:end="45:25"><name pos:start="45:10" pos:end="45:25">JPEG2000_QSTY_SE</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="55:61">/* Exponent quantization step.

         * Formula:

         * delta_b = 2 ^ (R_b - expn_b) * (1 + (mant_b / 2 ^ 11))

         * R_b = R_I + log2 (gain_b )

         * see ISO/IEC 15444-1:2002 E.1.1 eqn. E-3 and E-4 */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:12">gain</name>            <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:30">cbps</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:67"><expr pos:start="59:9" pos:end="59:66"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:12">band</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:24">f_stepsize</name></name>  <operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:66"><name pos:start="59:29" pos:end="59:31">pow</name><argument_list pos:start="59:32" pos:end="59:66">(<argument pos:start="59:33" pos:end="59:35"><expr pos:start="59:33" pos:end="59:35"><literal type="number" pos:start="59:33" pos:end="59:35">2.0</literal></expr></argument>, <argument pos:start="59:38" pos:end="59:65"><expr pos:start="59:38" pos:end="59:65"><name pos:start="59:38" pos:end="59:41">gain</name> <operator pos:start="59:43" pos:end="59:43">-</operator> <name pos:start="59:45" pos:end="59:65"><name pos:start="59:45" pos:end="59:50">qntsty</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:56">expn</name><index pos:start="59:57" pos:end="59:65">[<expr pos:start="59:58" pos:end="59:64"><name pos:start="59:58" pos:end="59:64">gbandno</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:65"><expr pos:start="61:9" pos:end="61:64"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:12">band</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:24">f_stepsize</name></name> <operator pos:start="61:26" pos:end="61:27">*=</operator> <name pos:start="61:29" pos:end="61:49"><name pos:start="61:29" pos:end="61:34">qntsty</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:40">mant</name><index pos:start="61:41" pos:end="61:49">[<expr pos:start="61:42" pos:end="61:48"><name pos:start="61:42" pos:end="61:48">gbandno</name></expr>]</index></name> <operator pos:start="61:51" pos:end="61:51">/</operator> <literal type="number" pos:start="61:53" pos:end="61:60">2048.0</literal> <operator pos:start="61:60" pos:end="61:60">+</operator> <literal type="number" pos:start="61:62" pos:end="61:64">1.0</literal></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:12">band</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:24">f_stepsize</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:69"><expr pos:start="69:9" pos:end="69:68"><call pos:start="69:9" pos:end="69:68"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:68">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:37" pos:end="69:67"><expr pos:start="69:37" pos:end="69:67"><literal type="string" pos:start="69:37" pos:end="69:67">"Unknown quantization format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="75:5" pos:end="105:5"><if pos:start="75:5" pos:end="105:5">if <condition pos:start="75:8" pos:end="75:38">(<expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:14">codsty</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:25">transform</name></name> <operator pos:start="75:27" pos:end="75:28">!=</operator> <name pos:start="75:30" pos:end="75:37">FF_DWT53</name></expr>)</condition> <block pos:start="75:40" pos:end="105:5">{<block_content pos:start="77:9" pos:end="103:9">

        <decl_stmt pos:start="77:9" pos:end="77:22"><decl pos:start="77:9" pos:end="77:21"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:17">lband</name> <init pos:start="77:19" pos:end="77:21">= <expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">0</literal></expr></init></decl>;</decl_stmt>

        <switch pos:start="79:9" pos:end="97:9">switch <condition pos:start="79:16" pos:end="79:42">(<expr pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:22">bandno</name> <operator pos:start="79:24" pos:end="79:24">+</operator> <operator pos:start="79:26" pos:end="79:26">(</operator><name pos:start="79:27" pos:end="79:36">reslevelno</name> <operator pos:start="79:38" pos:end="79:38">&gt;</operator> <literal type="number" pos:start="79:40" pos:end="79:40">0</literal><operator pos:start="79:41" pos:end="79:41">)</operator></expr>)</condition> <block pos:start="79:44" pos:end="97:9">{<block_content pos:start="81:13" pos:end="95:22">

            <case pos:start="81:13" pos:end="81:19">case <expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">1</literal></expr>:</case>

            <case pos:start="83:13" pos:end="83:19">case <expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">2</literal></expr>:</case>

                <expr_stmt pos:start="85:17" pos:end="85:49"><expr pos:start="85:17" pos:end="85:48"><name pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:20">band</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:32">f_stepsize</name></name> <operator pos:start="85:34" pos:end="85:35">*=</operator> <name pos:start="85:37" pos:end="85:44">F_LFTG_X</name> <operator pos:start="85:46" pos:end="85:46">*</operator> <literal type="number" pos:start="85:48" pos:end="85:48">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:26"><expr pos:start="87:17" pos:end="87:25"><name pos:start="87:17" pos:end="87:21">lband</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr>;</expr_stmt>

                <break pos:start="89:17" pos:end="89:22">break;</break>

            <case pos:start="91:13" pos:end="91:19">case <expr pos:start="91:18" pos:end="91:18"><literal type="number" pos:start="91:18" pos:end="91:18">3</literal></expr>:</case>

                <expr_stmt pos:start="93:17" pos:end="93:60"><expr pos:start="93:17" pos:end="93:59"><name pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:20">band</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:32">f_stepsize</name></name> <operator pos:start="93:34" pos:end="93:35">*=</operator> <name pos:start="93:37" pos:end="93:44">F_LFTG_X</name> <operator pos:start="93:46" pos:end="93:46">*</operator> <name pos:start="93:48" pos:end="93:55">F_LFTG_X</name> <operator pos:start="93:57" pos:end="93:57">*</operator> <literal type="number" pos:start="93:59" pos:end="93:59">4</literal></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:42">(<expr pos:start="99:13" pos:end="99:41"><name pos:start="99:13" pos:end="99:29"><name pos:start="99:13" pos:end="99:18">codsty</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:29">transform</name></name> <operator pos:start="99:31" pos:end="99:32">==</operator> <name pos:start="99:34" pos:end="99:41">FF_DWT97</name></expr>)</condition> <block pos:start="99:44" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:102">

            <expr_stmt pos:start="101:13" pos:end="101:102"><expr pos:start="101:13" pos:end="101:101"><name pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:16">band</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:28">f_stepsize</name></name> <operator pos:start="101:30" pos:end="101:31">*=</operator> <call pos:start="101:33" pos:end="101:101"><name pos:start="101:33" pos:end="101:35">pow</name><argument_list pos:start="101:36" pos:end="101:101">(<argument pos:start="101:37" pos:end="101:44"><expr pos:start="101:37" pos:end="101:44"><name pos:start="101:37" pos:end="101:44">F_LFTG_K</name></expr></argument>, <argument pos:start="101:47" pos:end="101:100"><expr pos:start="101:47" pos:end="101:100"><literal type="number" pos:start="101:47" pos:end="101:47">2</literal><operator pos:start="101:48" pos:end="101:48">*</operator><operator pos:start="101:49" pos:end="101:49">(</operator><name pos:start="101:50" pos:end="101:74"><name pos:start="101:50" pos:end="101:55">codsty</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:74">nreslevels2decode</name></name> <operator pos:start="101:76" pos:end="101:76">-</operator> <name pos:start="101:78" pos:end="101:87">reslevelno</name><operator pos:start="101:88" pos:end="101:88">)</operator> <operator pos:start="101:90" pos:end="101:90">+</operator> <name pos:start="101:92" pos:end="101:96">lband</name> <operator pos:start="101:98" pos:end="101:98">-</operator> <literal type="number" pos:start="101:100" pos:end="101:100">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:52"><expr pos:start="109:5" pos:end="109:51"><name pos:start="109:5" pos:end="109:20"><name pos:start="109:5" pos:end="109:8">band</name><operator pos:start="109:9" pos:end="109:10">-&gt;</operator><name pos:start="109:11" pos:end="109:20">i_stepsize</name></name> <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:39"><name pos:start="109:24" pos:end="109:27">band</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:39">f_stepsize</name></name> <operator pos:start="109:41" pos:end="109:41">*</operator> <operator pos:start="109:43" pos:end="109:43">(</operator><literal type="number" pos:start="109:44" pos:end="109:44">1</literal> <operator pos:start="109:46" pos:end="109:47">&lt;&lt;</operator> <literal type="number" pos:start="109:49" pos:end="109:50">15</literal><operator pos:start="109:51" pos:end="109:51">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="113:5" pos:end="115:63">/* FIXME: In openjepg code stespize = stepsize * 0.5. Why?

     * If not set output of entropic decoder is not correct. */</comment>

    <if_stmt pos:start="117:5" pos:end="119:32"><if pos:start="117:5" pos:end="119:32">if <condition pos:start="117:8" pos:end="117:43">(<expr pos:start="117:9" pos:end="117:42"><operator pos:start="117:9" pos:end="117:9">!</operator><call pos:start="117:10" pos:end="117:42"><name pos:start="117:10" pos:end="117:28">av_codec_is_encoder</name><argument_list pos:start="117:29" pos:end="117:42">(<argument pos:start="117:30" pos:end="117:41"><expr pos:start="117:30" pos:end="117:41"><name pos:start="117:30" pos:end="117:41"><name pos:start="117:30" pos:end="117:34">avctx</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:41">codec</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:32"><block_content pos:start="119:9" pos:end="119:32">

        <expr_stmt pos:start="119:9" pos:end="119:32"><expr pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:12">band</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:24">f_stepsize</name></name> <operator pos:start="119:26" pos:end="119:27">*=</operator> <literal type="number" pos:start="119:29" pos:end="119:31">0.5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
