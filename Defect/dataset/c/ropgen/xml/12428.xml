<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12428.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">v9fs_attach</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:29">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">V9fsPDU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pdu</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">V9fsState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:25">= <expr pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:22">pdu</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:25">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:15">fid</name></decl>, <decl pos:start="9:18" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:18" pos:end="9:21">afid</name></decl>, <decl pos:start="9:24" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:24" pos:end="9:30">n_uname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">V9fsString</name></type> <name pos:start="11:16" pos:end="11:20">uname</name></decl>, <decl pos:start="11:23" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:23" pos:end="11:27">aname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">V9fsFidState</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:17">offset</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">V9fsQID</name></type> <name pos:start="17:13" pos:end="17:15">qid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">ssize_t</name></type> <name pos:start="19:13" pos:end="19:15">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:79"><expr pos:start="23:5" pos:end="23:78"><call pos:start="23:5" pos:end="23:78"><name pos:start="23:5" pos:end="23:17">pdu_unmarshal</name><argument_list pos:start="23:18" pos:end="23:78">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:21">pdu</name></expr></argument>, <argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">offset</name></expr></argument>, <argument pos:start="23:32" pos:end="23:38"><expr pos:start="23:32" pos:end="23:38"><literal type="string" pos:start="23:32" pos:end="23:38">"ddssd"</literal></expr></argument>, <argument pos:start="23:41" pos:end="23:44"><expr pos:start="23:41" pos:end="23:44"><operator pos:start="23:41" pos:end="23:41">&amp;</operator><name pos:start="23:42" pos:end="23:44">fid</name></expr></argument>, <argument pos:start="23:47" pos:end="23:51"><expr pos:start="23:47" pos:end="23:51"><operator pos:start="23:47" pos:end="23:47">&amp;</operator><name pos:start="23:48" pos:end="23:51">afid</name></expr></argument>, <argument pos:start="23:54" pos:end="23:59"><expr pos:start="23:54" pos:end="23:59"><operator pos:start="23:54" pos:end="23:54">&amp;</operator><name pos:start="23:55" pos:end="23:59">uname</name></expr></argument>, <argument pos:start="23:62" pos:end="23:67"><expr pos:start="23:62" pos:end="23:67"><operator pos:start="23:62" pos:end="23:62">&amp;</operator><name pos:start="23:63" pos:end="23:67">aname</name></expr></argument>, <argument pos:start="23:70" pos:end="23:77"><expr pos:start="23:70" pos:end="23:77"><operator pos:start="23:70" pos:end="23:70">&amp;</operator><name pos:start="23:71" pos:end="23:77">n_uname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:76"><expr pos:start="25:5" pos:end="25:75"><call pos:start="25:5" pos:end="25:75"><name pos:start="25:5" pos:end="25:21">trace_v9fs_attach</name><argument_list pos:start="25:22" pos:end="25:75">(<argument pos:start="25:23" pos:end="25:30"><expr pos:start="25:23" pos:end="25:30"><name pos:start="25:23" pos:end="25:30"><name pos:start="25:23" pos:end="25:25">pdu</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:30">tag</name></name></expr></argument>, <argument pos:start="25:33" pos:end="25:39"><expr pos:start="25:33" pos:end="25:39"><name pos:start="25:33" pos:end="25:39"><name pos:start="25:33" pos:end="25:35">pdu</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:39">id</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:44"><expr pos:start="25:42" pos:end="25:44"><name pos:start="25:42" pos:end="25:44">fid</name></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><name pos:start="25:47" pos:end="25:50">afid</name></expr></argument>, <argument pos:start="25:53" pos:end="25:62"><expr pos:start="25:53" pos:end="25:62"><name pos:start="25:53" pos:end="25:62"><name pos:start="25:53" pos:end="25:57">uname</name><operator pos:start="25:58" pos:end="25:58">.</operator><name pos:start="25:59" pos:end="25:62">data</name></name></expr></argument>, <argument pos:start="25:65" pos:end="25:74"><expr pos:start="25:65" pos:end="25:74"><name pos:start="25:65" pos:end="25:74"><name pos:start="25:65" pos:end="25:69">aname</name><operator pos:start="25:70" pos:end="25:70">.</operator><name pos:start="25:71" pos:end="25:74">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:8">fidp</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:28"><name pos:start="29:12" pos:end="29:20">alloc_fid</name><argument_list pos:start="29:21" pos:end="29:28">(<argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">s</name></expr></argument>, <argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:12">fidp</name> <operator pos:start="31:14" pos:end="31:15">==</operator> <name pos:start="31:17" pos:end="31:20">NULL</name></expr>)</condition> <block pos:start="31:23" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:23">

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">-</operator><name pos:start="33:16" pos:end="33:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:23">goto <name pos:start="35:14" pos:end="35:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">fidp</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:13">uid</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:23">n_uname</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:60"><expr pos:start="41:5" pos:end="41:59"><name pos:start="41:5" pos:end="41:7">err</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:59"><name pos:start="41:11" pos:end="41:30">v9fs_co_name_to_path</name><argument_list pos:start="41:31" pos:end="41:59">(<argument pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:34">pdu</name></expr></argument>, <argument pos:start="41:37" pos:end="41:40"><expr pos:start="41:37" pos:end="41:40"><name pos:start="41:37" pos:end="41:40">NULL</name></expr></argument>, <argument pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><literal type="string" pos:start="41:43" pos:end="41:45">"/"</literal></expr></argument>, <argument pos:start="41:48" pos:end="41:58"><expr pos:start="41:48" pos:end="41:58"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:58"><name pos:start="41:49" pos:end="41:52">fidp</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:58">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition> <block pos:start="43:18" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:17">

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">err</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">-</operator><name pos:start="45:16" pos:end="45:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:17">clunk_fid</name><argument_list pos:start="47:18" pos:end="47:25">(<argument pos:start="47:19" pos:end="47:19"><expr pos:start="47:19" pos:end="47:19"><name pos:start="47:19" pos:end="47:19">s</name></expr></argument>, <argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:7">err</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:37"><name pos:start="53:11" pos:end="53:20">fid_to_qid</name><argument_list pos:start="53:21" pos:end="53:37">(<argument pos:start="53:22" pos:end="53:24"><expr pos:start="53:22" pos:end="53:24"><name pos:start="53:22" pos:end="53:24">pdu</name></expr></argument>, <argument pos:start="53:27" pos:end="53:30"><expr pos:start="53:27" pos:end="53:30"><name pos:start="53:27" pos:end="53:30">fidp</name></expr></argument>, <argument pos:start="53:33" pos:end="53:36"><expr pos:start="53:33" pos:end="53:36"><operator pos:start="53:33" pos:end="53:33">&amp;</operator><name pos:start="53:34" pos:end="53:36">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:11">err</name> <operator pos:start="55:13" pos:end="55:13">&lt;</operator> <literal type="number" pos:start="55:15" pos:end="55:15">0</literal></expr>)</condition> <block pos:start="55:18" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:17">

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">-</operator><name pos:start="57:16" pos:end="57:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><call pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:17">clunk_fid</name><argument_list pos:start="59:18" pos:end="59:25">(<argument pos:start="59:19" pos:end="59:19"><expr pos:start="59:19" pos:end="59:19"><name pos:start="59:19" pos:end="59:19">s</name></expr></argument>, <argument pos:start="59:22" pos:end="59:24"><expr pos:start="59:22" pos:end="59:24"><name pos:start="59:22" pos:end="59:24">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:50"><expr pos:start="65:5" pos:end="65:49"><name pos:start="65:5" pos:end="65:10">offset</name> <operator pos:start="65:12" pos:end="65:13">+=</operator> <call pos:start="65:15" pos:end="65:49"><name pos:start="65:15" pos:end="65:25">pdu_marshal</name><argument_list pos:start="65:26" pos:end="65:49">(<argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">pdu</name></expr></argument>, <argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:37">offset</name></expr></argument>, <argument pos:start="65:40" pos:end="65:42"><expr pos:start="65:40" pos:end="65:42"><literal type="string" pos:start="65:40" pos:end="65:42">"Q"</literal></expr></argument>, <argument pos:start="65:45" pos:end="65:48"><expr pos:start="65:45" pos:end="65:48"><operator pos:start="65:45" pos:end="65:45">&amp;</operator><name pos:start="65:46" pos:end="65:48">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:17"><expr pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:7">err</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <name pos:start="67:11" pos:end="67:16">offset</name></expr>;</expr_stmt>

<label pos:start="69:1" pos:end="69:4"><name pos:start="69:1" pos:end="69:3">out</name>:</label>

    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><call pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:11">put_fid</name><argument_list pos:start="71:12" pos:end="71:22">(<argument pos:start="71:13" pos:end="71:15"><expr pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">pdu</name></expr></argument>, <argument pos:start="71:18" pos:end="71:21"><expr pos:start="71:18" pos:end="71:21"><name pos:start="71:18" pos:end="71:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="73:1" pos:end="73:10"><name pos:start="73:1" pos:end="73:9">out_nofid</name>:</label>



    <expr_stmt pos:start="77:5" pos:end="77:30"><expr pos:start="77:5" pos:end="77:29"><call pos:start="77:5" pos:end="77:29"><name pos:start="77:5" pos:end="77:16">complete_pdu</name><argument_list pos:start="77:17" pos:end="77:29">(<argument pos:start="77:18" pos:end="77:18"><expr pos:start="77:18" pos:end="77:18"><name pos:start="77:18" pos:end="77:18">s</name></expr></argument>, <argument pos:start="77:21" pos:end="77:23"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">pdu</name></expr></argument>, <argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:29"><expr pos:start="79:5" pos:end="79:28"><call pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:20">v9fs_string_free</name><argument_list pos:start="79:21" pos:end="79:28">(<argument pos:start="79:22" pos:end="79:27"><expr pos:start="79:22" pos:end="79:27"><operator pos:start="79:22" pos:end="79:22">&amp;</operator><name pos:start="79:23" pos:end="79:27">uname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><call pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:20">v9fs_string_free</name><argument_list pos:start="81:21" pos:end="81:28">(<argument pos:start="81:22" pos:end="81:27"><expr pos:start="81:22" pos:end="81:27"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:27">aname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
