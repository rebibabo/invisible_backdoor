<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6497.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">rv34_decode_cbp</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:40">GetBitContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">gb</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:53">RV34VLC</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">vlc</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:69"><decl pos:start="1:61" pos:end="1:69"><type pos:start="1:61" pos:end="1:69"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:69">table</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">pattern</name></decl>, <decl pos:start="5:18" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:21">code</name></decl>, <decl pos:start="5:24" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:26">cbp</name><init pos:start="5:27" pos:end="5:28">=<expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">ones</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:67"><decl pos:start="9:5" pos:end="9:66"><type pos:start="9:5" pos:end="9:20"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:20">int</name></type> <name pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:30">cbp_masks</name><index pos:start="9:31" pos:end="9:33">[<expr pos:start="9:32" pos:end="9:32"><literal type="number" pos:start="9:32" pos:end="9:32">3</literal></expr>]</index></name> <init pos:start="9:35" pos:end="9:66">= <expr pos:start="9:37" pos:end="9:66"><block pos:start="9:37" pos:end="9:66">{<expr pos:start="9:38" pos:end="9:45"><literal type="number" pos:start="9:38" pos:end="9:45">0x100000</literal></expr>, <expr pos:start="9:48" pos:end="9:55"><literal type="number" pos:start="9:48" pos:end="9:55">0x010000</literal></expr>, <expr pos:start="9:58" pos:end="9:65"><literal type="number" pos:start="9:58" pos:end="9:65">0x110000</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <specifier pos:start="11:12" pos:end="11:16">const</specifier> <name pos:start="11:18" pos:end="11:20">int</name></type> <name pos:start="11:22" pos:end="11:30"><name pos:start="11:22" pos:end="11:27">shifts</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">4</literal></expr>]</index></name> <init pos:start="11:32" pos:end="11:48">= <expr pos:start="11:34" pos:end="11:48"><block pos:start="11:34" pos:end="11:48">{ <expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr>, <expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">2</literal></expr>, <expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">8</literal></expr>, <expr pos:start="11:45" pos:end="11:46"><literal type="number" pos:start="11:45" pos:end="11:46">10</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:23">curshift</name> <init pos:start="13:25" pos:end="13:32">= <expr pos:start="13:27" pos:end="13:32"><name pos:start="13:27" pos:end="13:32">shifts</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">t</name></decl>, <decl pos:start="15:15" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:18">mask</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:60"><expr pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:8">code</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:59"><name pos:start="19:12" pos:end="19:19">get_vlc2</name><argument_list pos:start="19:20" pos:end="19:59">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">gb</name></expr></argument>, <argument pos:start="19:25" pos:end="19:52"><expr pos:start="19:25" pos:end="19:52"><name pos:start="19:25" pos:end="19:46"><name pos:start="19:25" pos:end="19:27">vlc</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:39">cbppattern</name><index pos:start="19:40" pos:end="19:46">[<expr pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:45">table</name></expr>]</index></name><operator pos:start="19:47" pos:end="19:47">.</operator><name pos:start="19:48" pos:end="19:52">table</name></expr></argument>, <argument pos:start="19:55" pos:end="19:55"><expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">9</literal></expr></argument>, <argument pos:start="19:58" pos:end="19:58"><expr pos:start="19:58" pos:end="19:58"><literal type="number" pos:start="19:58" pos:end="19:58">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:11">pattern</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:18">code</name> <operator pos:start="21:20" pos:end="21:20">&amp;</operator> <literal type="number" pos:start="21:22" pos:end="21:24">0xF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:8">code</name> <operator pos:start="23:10" pos:end="23:12">&gt;&gt;=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:8">ones</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <name pos:start="27:12" pos:end="27:35"><name pos:start="27:12" pos:end="27:26">rv34_count_ones</name><index pos:start="27:27" pos:end="27:35">[<expr pos:start="27:28" pos:end="27:34"><name pos:start="27:28" pos:end="27:34">pattern</name></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="37:5">for<control pos:start="31:8" pos:end="31:47">(<init pos:start="31:9" pos:end="31:17"><expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:12">mask</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">8</literal></expr>;</init> <condition pos:start="31:19" pos:end="31:23"><expr pos:start="31:19" pos:end="31:22"><name pos:start="31:19" pos:end="31:22">mask</name></expr>;</condition> <incr pos:start="31:25" pos:end="31:46"><expr pos:start="31:25" pos:end="31:34"><name pos:start="31:25" pos:end="31:28">mask</name> <operator pos:start="31:30" pos:end="31:32">&gt;&gt;=</operator> <literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr><operator pos:start="31:35" pos:end="31:35">,</operator> <expr pos:start="31:37" pos:end="31:46"><name pos:start="31:37" pos:end="31:44">curshift</name><operator pos:start="31:45" pos:end="31:46">++</operator></expr></incr>)</control><block pos:start="31:48" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:107">

        <if_stmt pos:start="33:9" pos:end="35:107"><if pos:start="33:9" pos:end="35:107">if<condition pos:start="33:11" pos:end="33:26">(<expr pos:start="33:12" pos:end="33:25"><name pos:start="33:12" pos:end="33:18">pattern</name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <name pos:start="33:22" pos:end="33:25">mask</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:107"><block_content pos:start="35:13" pos:end="35:107">

            <expr_stmt pos:start="35:13" pos:end="35:107"><expr pos:start="35:13" pos:end="35:106"><name pos:start="35:13" pos:end="35:15">cbp</name> <operator pos:start="35:17" pos:end="35:18">|=</operator> <call pos:start="35:20" pos:end="35:91"><name pos:start="35:20" pos:end="35:27">get_vlc2</name><argument_list pos:start="35:28" pos:end="35:91">(<argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><name pos:start="35:29" pos:end="35:30">gb</name></expr></argument>, <argument pos:start="35:33" pos:end="35:59"><expr pos:start="35:33" pos:end="35:59"><name pos:start="35:33" pos:end="35:53"><name pos:start="35:33" pos:end="35:35">vlc</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:40">cbp</name><index pos:start="35:41" pos:end="35:47">[<expr pos:start="35:42" pos:end="35:46"><name pos:start="35:42" pos:end="35:46">table</name></expr>]</index><index pos:start="35:48" pos:end="35:53">[<expr pos:start="35:49" pos:end="35:52"><name pos:start="35:49" pos:end="35:52">ones</name></expr>]</index></name><operator pos:start="35:54" pos:end="35:54">.</operator><name pos:start="35:55" pos:end="35:59">table</name></expr></argument>, <argument pos:start="35:62" pos:end="35:87"><expr pos:start="35:62" pos:end="35:87"><name pos:start="35:62" pos:end="35:82"><name pos:start="35:62" pos:end="35:64">vlc</name><operator pos:start="35:65" pos:end="35:66">-&gt;</operator><name pos:start="35:67" pos:end="35:69">cbp</name><index pos:start="35:70" pos:end="35:76">[<expr pos:start="35:71" pos:end="35:75"><name pos:start="35:71" pos:end="35:75">table</name></expr>]</index><index pos:start="35:77" pos:end="35:82">[<expr pos:start="35:78" pos:end="35:81"><name pos:start="35:78" pos:end="35:81">ones</name></expr>]</index></name><operator pos:start="35:83" pos:end="35:83">.</operator><name pos:start="35:84" pos:end="35:87">bits</name></expr></argument>, <argument pos:start="35:90" pos:end="35:90"><expr pos:start="35:90" pos:end="35:90"><literal type="number" pos:start="35:90" pos:end="35:90">1</literal></expr></argument>)</argument_list></call> <operator pos:start="35:93" pos:end="35:94">&lt;&lt;</operator> <name pos:start="35:96" pos:end="35:106"><name pos:start="35:96" pos:end="35:103">curshift</name><index pos:start="35:104" pos:end="35:106">[<expr pos:start="35:105" pos:end="35:105"><literal type="number" pos:start="35:105" pos:end="35:105">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="41:5" pos:end="53:5">for<control pos:start="41:8" pos:end="41:26">(<init pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>;</init> <condition pos:start="41:16" pos:end="41:21"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:16">i</name> <operator pos:start="41:18" pos:end="41:18">&lt;</operator> <literal type="number" pos:start="41:20" pos:end="41:20">4</literal></expr>;</condition> <incr pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:23">i</name><operator pos:start="41:24" pos:end="41:25">++</operator></expr></incr>)</control><block pos:start="41:27" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:37">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:9">t</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:30">modulo_three_table</name><index pos:start="43:31" pos:end="43:36">[<expr pos:start="43:32" pos:end="43:35"><name pos:start="43:32" pos:end="43:35">code</name></expr>]</index><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:49"><if pos:start="45:9" pos:end="47:49">if<condition pos:start="45:11" pos:end="45:18">(<expr pos:start="45:12" pos:end="45:17"><name pos:start="45:12" pos:end="45:12">t</name> <operator pos:start="45:14" pos:end="45:15">==</operator> <literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:49"><block_content pos:start="47:13" pos:end="47:49">

            <expr_stmt pos:start="47:13" pos:end="47:49"><expr pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:15">cbp</name> <operator pos:start="47:17" pos:end="47:18">|=</operator> <name pos:start="47:20" pos:end="47:43"><name pos:start="47:20" pos:end="47:28">cbp_masks</name><index pos:start="47:29" pos:end="47:43">[<expr pos:start="47:30" pos:end="47:42"><call pos:start="47:30" pos:end="47:42"><name pos:start="47:30" pos:end="47:38">get_bits1</name><argument_list pos:start="47:39" pos:end="47:42">(<argument pos:start="47:40" pos:end="47:41"><expr pos:start="47:40" pos:end="47:41"><name pos:start="47:40" pos:end="47:41">gb</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="47:45" pos:end="47:46">&lt;&lt;</operator> <name pos:start="47:48" pos:end="47:48">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:37"><if pos:start="49:9" pos:end="51:37">if<condition pos:start="49:11" pos:end="49:18">(<expr pos:start="49:12" pos:end="49:17"><name pos:start="49:12" pos:end="49:12">t</name> <operator pos:start="49:14" pos:end="49:15">==</operator> <literal type="number" pos:start="49:17" pos:end="49:17">2</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:37"><block_content pos:start="51:13" pos:end="51:37">

            <expr_stmt pos:start="51:13" pos:end="51:37"><expr pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:15">cbp</name> <operator pos:start="51:17" pos:end="51:18">|=</operator> <name pos:start="51:20" pos:end="51:31"><name pos:start="51:20" pos:end="51:28">cbp_masks</name><index pos:start="51:29" pos:end="51:31">[<expr pos:start="51:30" pos:end="51:30"><literal type="number" pos:start="51:30" pos:end="51:30">2</literal></expr>]</index></name> <operator pos:start="51:33" pos:end="51:34">&lt;&lt;</operator> <name pos:start="51:36" pos:end="51:36">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">cbp</name></expr>;</return>

</block_content>}</block></function>
</unit>
