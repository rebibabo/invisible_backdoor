<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15056.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">test_submit_many</name><parameter_list pos:start="1:29" pos:end="1:34">(<parameter pos:start="1:30" pos:end="1:33"><decl pos:start="1:30" pos:end="1:33"><type pos:start="1:30" pos:end="1:33"><name pos:start="1:30" pos:end="1:33">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">WorkerTestData</name></type> <name pos:start="5:20" pos:end="5:28"><name pos:start="5:20" pos:end="5:23">data</name><index pos:start="5:24" pos:end="5:28">[<expr pos:start="5:25" pos:end="5:27"><literal type="number" pos:start="5:25" pos:end="5:27">100</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:60">/* Start more work items than there will be threads.  */</comment>

    <for pos:start="13:5" pos:end="21:5">for <control pos:start="13:9" pos:end="13:29">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:24"><expr pos:start="13:17" pos:end="13:23"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:23">100</literal></expr>;</condition> <incr pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:26">i</name><operator pos:start="13:27" pos:end="13:28">++</operator></expr></incr>)</control> <block pos:start="13:31" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:71">

        <expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:12">data</name><index pos:start="15:13" pos:end="15:15">[<expr pos:start="15:14" pos:end="15:14"><name pos:start="15:14" pos:end="15:14">i</name></expr>]</index></name><operator pos:start="15:16" pos:end="15:16">.</operator><name pos:start="15:17" pos:end="15:17">n</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">data</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><name pos:start="17:14" pos:end="17:14">i</name></expr>]</index></name><operator pos:start="17:16" pos:end="17:16">.</operator><name pos:start="17:17" pos:end="17:19">ret</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <operator pos:start="17:23" pos:end="17:23">-</operator><name pos:start="17:24" pos:end="17:34">EINPROGRESS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:71"><expr pos:start="19:9" pos:end="19:70"><call pos:start="19:9" pos:end="19:70"><name pos:start="19:9" pos:end="19:30">thread_pool_submit_aio</name><argument_list pos:start="19:31" pos:end="19:70">(<argument pos:start="19:32" pos:end="19:40"><expr pos:start="19:32" pos:end="19:40"><name pos:start="19:32" pos:end="19:40">worker_cb</name></expr></argument>, <argument pos:start="19:43" pos:end="19:50"><expr pos:start="19:43" pos:end="19:50"><operator pos:start="19:43" pos:end="19:43">&amp;</operator><name pos:start="19:44" pos:end="19:50"><name pos:start="19:44" pos:end="19:47">data</name><index pos:start="19:48" pos:end="19:50">[<expr pos:start="19:49" pos:end="19:49"><name pos:start="19:49" pos:end="19:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="19:53" pos:end="19:59"><expr pos:start="19:53" pos:end="19:59"><name pos:start="19:53" pos:end="19:59">done_cb</name></expr></argument>, <argument pos:start="19:62" pos:end="19:69"><expr pos:start="19:62" pos:end="19:69"><operator pos:start="19:62" pos:end="19:62">&amp;</operator><name pos:start="19:63" pos:end="19:69"><name pos:start="19:63" pos:end="19:66">data</name><index pos:start="19:67" pos:end="19:69">[<expr pos:start="19:68" pos:end="19:68"><name pos:start="19:68" pos:end="19:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:10">active</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:16">100</literal></expr>;</expr_stmt>

    <while pos:start="27:5" pos:end="31:5">while <condition pos:start="27:11" pos:end="27:22">(<expr pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:17">active</name> <operator pos:start="27:19" pos:end="27:19">&gt;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>)</condition> <block pos:start="27:24" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:24">

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><call pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:21">qemu_aio_wait</name><argument_list pos:start="29:22" pos:end="29:23">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <for pos:start="33:5" pos:end="39:5">for <control pos:start="33:9" pos:end="33:29">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:24"><expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:23">100</literal></expr>;</condition> <incr pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:26">i</name><operator pos:start="33:27" pos:end="33:28">++</operator></expr></incr>)</control> <block pos:start="33:31" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:44">

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><call pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:23">g_assert_cmpint</name><argument_list pos:start="35:24" pos:end="35:41">(<argument pos:start="35:25" pos:end="35:33"><expr pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:28">data</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">i</name></expr>]</index></name><operator pos:start="35:32" pos:end="35:32">.</operator><name pos:start="35:33" pos:end="35:33">n</name></expr></argument>, <argument pos:start="35:36" pos:end="35:37"><expr pos:start="35:36" pos:end="35:37"><operator pos:start="35:36" pos:end="35:37">==</operator></expr></argument>, <argument pos:start="35:40" pos:end="35:40"><expr pos:start="35:40" pos:end="35:40"><literal type="number" pos:start="35:40" pos:end="35:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><call pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:23">g_assert_cmpint</name><argument_list pos:start="37:24" pos:end="37:43">(<argument pos:start="37:25" pos:end="37:35"><expr pos:start="37:25" pos:end="37:35"><name pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:28">data</name><index pos:start="37:29" pos:end="37:31">[<expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">i</name></expr>]</index></name><operator pos:start="37:32" pos:end="37:32">.</operator><name pos:start="37:33" pos:end="37:35">ret</name></expr></argument>, <argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><operator pos:start="37:38" pos:end="37:39">==</operator></expr></argument>, <argument pos:start="37:42" pos:end="37:42"><expr pos:start="37:42" pos:end="37:42"><literal type="number" pos:start="37:42" pos:end="37:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
