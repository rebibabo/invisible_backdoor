<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18878.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">fdt_add_pmu_nodes</name><parameter_list pos:start="1:30" pos:end="1:58">(<parameter pos:start="1:31" pos:end="1:57"><decl pos:start="1:31" pos:end="1:57"><type pos:start="1:31" pos:end="1:54"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:52">VirtMachineState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">vms</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">ARMCPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:18">armcpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:21">irqflags</name> <init pos:start="9:23" pos:end="9:50">= <expr pos:start="9:25" pos:end="9:50"><name pos:start="9:25" pos:end="9:50">GIC_FDT_IRQ_FLAGS_LEVEL_HI</name></expr></init></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:15">CPU_FOREACH</name><argument_list pos:start="13:16" pos:end="13:20">(<argument pos:start="13:17" pos:end="13:19">cpu</argument>)</argument_list></macro> <block pos:start="13:22" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:9">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:14">armcpu</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:24">ARM_CPU</name><argument_list pos:start="15:25" pos:end="15:29">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="19:59">(<expr pos:start="17:13" pos:end="19:58"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:55"><name pos:start="17:14" pos:end="17:24">arm_feature</name><argument_list pos:start="17:25" pos:end="17:55">(<argument pos:start="17:26" pos:end="17:37"><expr pos:start="17:26" pos:end="17:37"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:32">armcpu</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:37">env</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:54"><expr pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:54">ARM_FEATURE_PMU</name></expr></argument>)</argument_list></call> <operator pos:start="17:57" pos:end="17:58">||</operator>

            <operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:58"><name pos:start="19:14" pos:end="19:31">kvm_arm_pmu_create</name><argument_list pos:start="19:32" pos:end="19:58">(<argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:35">cpu</name></expr></argument>, <argument pos:start="19:38" pos:end="19:57"><expr pos:start="19:38" pos:end="19:57"><call pos:start="19:38" pos:end="19:57"><name pos:start="19:38" pos:end="19:40">PPI</name><argument_list pos:start="19:41" pos:end="19:57">(<argument pos:start="19:42" pos:end="19:56"><expr pos:start="19:42" pos:end="19:56"><name pos:start="19:42" pos:end="19:56">VIRTUAL_PMU_IRQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:61" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:19">

            <return pos:start="21:13" pos:end="21:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:30">(<expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:11">vms</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:24">gic_version</name></name> <operator pos:start="29:26" pos:end="29:27">==</operator> <literal type="number" pos:start="29:29" pos:end="29:29">2</literal></expr>)</condition> <block pos:start="29:32" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:55">

        <expr_stmt pos:start="31:9" pos:end="35:55"><expr pos:start="31:9" pos:end="35:54"><name pos:start="31:9" pos:end="31:16">irqflags</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="35:54"><name pos:start="31:20" pos:end="31:28">deposit32</name><argument_list pos:start="31:29" pos:end="35:54">(<argument pos:start="31:30" pos:end="31:37"><expr pos:start="31:30" pos:end="31:37"><name pos:start="31:30" pos:end="31:37">irqflags</name></expr></argument>, <argument pos:start="31:40" pos:end="31:64"><expr pos:start="31:40" pos:end="31:64"><name pos:start="31:40" pos:end="31:64">GIC_FDT_IRQ_PPI_CPU_START</name></expr></argument>,

                             <argument pos:start="33:30" pos:end="33:54"><expr pos:start="33:30" pos:end="33:54"><name pos:start="33:30" pos:end="33:54">GIC_FDT_IRQ_PPI_CPU_WIDTH</name></expr></argument>,

                             <argument pos:start="35:30" pos:end="35:53"><expr pos:start="35:30" pos:end="35:53"><operator pos:start="35:30" pos:end="35:30">(</operator><literal type="number" pos:start="35:31" pos:end="35:31">1</literal> <operator pos:start="35:33" pos:end="35:34">&lt;&lt;</operator> <name pos:start="35:36" pos:end="35:48"><name pos:start="35:36" pos:end="35:38">vms</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:48">smp_cpus</name></name><operator pos:start="35:49" pos:end="35:49">)</operator> <operator pos:start="35:51" pos:end="35:51">-</operator> <literal type="number" pos:start="35:53" pos:end="35:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:10">armcpu</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:37"><name pos:start="41:14" pos:end="41:20">ARM_CPU</name><argument_list pos:start="41:21" pos:end="41:37">(<argument pos:start="41:22" pos:end="41:36"><expr pos:start="41:22" pos:end="41:36"><call pos:start="41:22" pos:end="41:36"><name pos:start="41:22" pos:end="41:33">qemu_get_cpu</name><argument_list pos:start="41:34" pos:end="41:36">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><call pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:24">qemu_fdt_add_subnode</name><argument_list pos:start="43:25" pos:end="43:42">(<argument pos:start="43:26" pos:end="43:33"><expr pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:28">vms</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:33">fdt</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:41"><expr pos:start="43:36" pos:end="43:41"><literal type="string" pos:start="43:36" pos:end="43:41">"/pmu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:50">(<expr pos:start="45:9" pos:end="45:49"><call pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:19">arm_feature</name><argument_list pos:start="45:20" pos:end="45:49">(<argument pos:start="45:21" pos:end="45:32"><expr pos:start="45:21" pos:end="45:32"><operator pos:start="45:21" pos:end="45:21">&amp;</operator><name pos:start="45:22" pos:end="45:32"><name pos:start="45:22" pos:end="45:27">armcpu</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:32">env</name></name></expr></argument>, <argument pos:start="45:35" pos:end="45:48"><expr pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:48">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:52" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:80">

        <decl_stmt pos:start="47:9" pos:end="47:48"><decl pos:start="47:9" pos:end="47:47"><type pos:start="47:9" pos:end="47:18"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:18">char</name></type> <name pos:start="47:20" pos:end="47:27"><name pos:start="47:20" pos:end="47:25">compat</name><index pos:start="47:26" pos:end="47:27">[]</index></name> <init pos:start="47:29" pos:end="47:47">= <expr pos:start="47:31" pos:end="47:47"><literal type="string" pos:start="47:31" pos:end="47:47">"arm,armv8-pmuv3"</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:49"><expr pos:start="49:9" pos:end="51:48"><call pos:start="49:9" pos:end="51:48"><name pos:start="49:9" pos:end="49:24">qemu_fdt_setprop</name><argument_list pos:start="49:25" pos:end="51:48">(<argument pos:start="49:26" pos:end="49:33"><expr pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:28">vms</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:33">fdt</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:41"><expr pos:start="49:36" pos:end="49:41"><literal type="string" pos:start="49:36" pos:end="49:41">"/pmu"</literal></expr></argument>, <argument pos:start="49:44" pos:end="49:55"><expr pos:start="49:44" pos:end="49:55"><literal type="string" pos:start="49:44" pos:end="49:55">"compatible"</literal></expr></argument>,

                         <argument pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:31"><name pos:start="51:26" pos:end="51:31">compat</name></expr></argument>, <argument pos:start="51:34" pos:end="51:47"><expr pos:start="51:34" pos:end="51:47"><sizeof pos:start="51:34" pos:end="51:47">sizeof<argument_list pos:start="51:40" pos:end="51:47">(<argument pos:start="51:41" pos:end="51:46"><expr pos:start="51:41" pos:end="51:46"><name pos:start="51:41" pos:end="51:46">compat</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="55:80"><expr pos:start="53:9" pos:end="55:79"><call pos:start="53:9" pos:end="55:79"><name pos:start="53:9" pos:end="53:30">qemu_fdt_setprop_cells</name><argument_list pos:start="53:31" pos:end="55:79">(<argument pos:start="53:32" pos:end="53:39"><expr pos:start="53:32" pos:end="53:39"><name pos:start="53:32" pos:end="53:39"><name pos:start="53:32" pos:end="53:34">vms</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:39">fdt</name></name></expr></argument>, <argument pos:start="53:42" pos:end="53:47"><expr pos:start="53:42" pos:end="53:47"><literal type="string" pos:start="53:42" pos:end="53:47">"/pmu"</literal></expr></argument>, <argument pos:start="53:50" pos:end="53:61"><expr pos:start="53:50" pos:end="53:61"><literal type="string" pos:start="53:50" pos:end="53:61">"interrupts"</literal></expr></argument>,

                               <argument pos:start="55:32" pos:end="55:51"><expr pos:start="55:32" pos:end="55:51"><name pos:start="55:32" pos:end="55:51">GIC_FDT_IRQ_TYPE_PPI</name></expr></argument>, <argument pos:start="55:54" pos:end="55:68"><expr pos:start="55:54" pos:end="55:68"><name pos:start="55:54" pos:end="55:68">VIRTUAL_PMU_IRQ</name></expr></argument>, <argument pos:start="55:71" pos:end="55:78"><expr pos:start="55:71" pos:end="55:78"><name pos:start="55:71" pos:end="55:78">irqflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
