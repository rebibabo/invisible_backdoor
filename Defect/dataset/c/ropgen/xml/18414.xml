<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18414.c" pos:tabs="8"><function pos:start="1:1" pos:end="451:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_gop_header</name><parameter_list pos:start="1:29" pos:end="1:73">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44">IVI45DecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:72"><name pos:start="1:52" pos:end="1:65">AVCodecContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="451:1">{<block_content pos:start="5:5" pos:end="449:13">

    <decl_stmt pos:start="5:5" pos:end="5:91"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type>             <name pos:start="5:21" pos:end="5:26">result</name></decl>, <decl pos:start="5:29" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:29">i</name></decl>, <decl pos:start="5:32" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:32">p</name></decl>, <decl pos:start="5:35" pos:end="5:43"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:35" pos:end="5:43">tile_size</name></decl>, <decl pos:start="5:46" pos:end="5:58"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:46" pos:end="5:58">pic_size_indx</name></decl>, <decl pos:start="5:61" pos:end="5:67"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:61" pos:end="5:67">mb_size</name></decl>, <decl pos:start="5:70" pos:end="5:77"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:70" pos:end="5:77">blk_size</name></decl>, <decl pos:start="5:80" pos:end="5:90"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:80" pos:end="5:90">is_scalable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>             <name pos:start="7:21" pos:end="7:29">quant_mat</name></decl>, <decl pos:start="7:32" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:47">blk_size_changed</name> <init pos:start="7:49" pos:end="7:51">= <expr pos:start="7:51" pos:end="7:51"><literal type="number" pos:start="7:51" pos:end="7:51">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:15">IVIBandDesc</name>     <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:25">band</name></decl>, <decl pos:start="9:28" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:33">band1</name></decl>, <decl pos:start="9:36" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:41">band2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">IVIPicConfig</name></type>    <name pos:start="11:21" pos:end="11:28">pic_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:18">gop_flags</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <call pos:start="15:22" pos:end="15:42"><name pos:start="15:22" pos:end="15:29">get_bits</name><argument_list pos:start="15:30" pos:end="15:42">(<argument pos:start="15:31" pos:end="15:38"><expr pos:start="15:31" pos:end="15:38"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:34">ctx</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:38">gb</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:74"><expr pos:start="19:5" pos:end="19:73"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">ctx</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:21">gop_hdr_size</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <ternary pos:start="19:25" pos:end="19:73"><condition pos:start="19:25" pos:end="19:46"><expr pos:start="19:25" pos:end="19:44"><operator pos:start="19:25" pos:end="19:25">(</operator><name pos:start="19:26" pos:end="19:39"><name pos:start="19:26" pos:end="19:28">ctx</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:39">gop_flags</name></name> <operator pos:start="19:41" pos:end="19:41">&amp;</operator> <literal type="number" pos:start="19:43" pos:end="19:43">1</literal><operator pos:start="19:44" pos:end="19:44">)</operator></expr> ?</condition><then pos:start="19:48" pos:end="19:69"> <expr pos:start="19:48" pos:end="19:69"><call pos:start="19:48" pos:end="19:69"><name pos:start="19:48" pos:end="19:55">get_bits</name><argument_list pos:start="19:56" pos:end="19:69">(<argument pos:start="19:57" pos:end="19:64"><expr pos:start="19:57" pos:end="19:64"><operator pos:start="19:57" pos:end="19:57">&amp;</operator><name pos:start="19:58" pos:end="19:64"><name pos:start="19:58" pos:end="19:60">ctx</name><operator pos:start="19:61" pos:end="19:62">-&gt;</operator><name pos:start="19:63" pos:end="19:64">gb</name></name></expr></argument>, <argument pos:start="19:67" pos:end="19:68"><expr pos:start="19:67" pos:end="19:68"><literal type="number" pos:start="19:67" pos:end="19:68">16</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="19:71" pos:end="19:73">: <expr pos:start="19:73" pos:end="19:73"><literal type="number" pos:start="19:73" pos:end="19:73">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:53"><if pos:start="23:5" pos:end="25:53">if <condition pos:start="23:8" pos:end="23:43">(<expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">ctx</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">gop_flags</name></name> <operator pos:start="23:24" pos:end="23:24">&amp;</operator> <name pos:start="23:26" pos:end="23:42">IVI5_IS_PROTECTED</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:53"><block_content pos:start="25:9" pos:end="25:53">

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">ctx</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:22">lock_word</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:52"><name pos:start="25:26" pos:end="25:38">get_bits_long</name><argument_list pos:start="25:39" pos:end="25:52">(<argument pos:start="25:40" pos:end="25:47"><expr pos:start="25:40" pos:end="25:47"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:43">ctx</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:47">gb</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:51"><expr pos:start="25:50" pos:end="25:51"><literal type="number" pos:start="25:50" pos:end="25:51">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:74"><expr pos:start="29:5" pos:end="29:73"><name pos:start="29:5" pos:end="29:13">tile_size</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <ternary pos:start="29:17" pos:end="29:73"><condition pos:start="29:17" pos:end="29:41"><expr pos:start="29:17" pos:end="29:39"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:31"><name pos:start="29:18" pos:end="29:20">ctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:31">gop_flags</name></name> <operator pos:start="29:33" pos:end="29:33">&amp;</operator> <literal type="number" pos:start="29:35" pos:end="29:38">0x40</literal><operator pos:start="29:39" pos:end="29:39">)</operator></expr> ?</condition><then pos:start="29:43" pos:end="29:69"> <expr pos:start="29:43" pos:end="29:69"><literal type="number" pos:start="29:43" pos:end="29:44">64</literal> <operator pos:start="29:46" pos:end="29:47">&lt;&lt;</operator> <call pos:start="29:49" pos:end="29:69"><name pos:start="29:49" pos:end="29:56">get_bits</name><argument_list pos:start="29:57" pos:end="29:69">(<argument pos:start="29:58" pos:end="29:65"><expr pos:start="29:58" pos:end="29:65"><operator pos:start="29:58" pos:end="29:58">&amp;</operator><name pos:start="29:59" pos:end="29:65"><name pos:start="29:59" pos:end="29:61">ctx</name><operator pos:start="29:62" pos:end="29:63">-&gt;</operator><name pos:start="29:64" pos:end="29:65">gb</name></name></expr></argument>, <argument pos:start="29:68" pos:end="29:68"><expr pos:start="29:68" pos:end="29:68"><literal type="number" pos:start="29:68" pos:end="29:68">2</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="29:71" pos:end="29:73">: <expr pos:start="29:73" pos:end="29:73"><literal type="number" pos:start="29:73" pos:end="29:73">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:17">tile_size</name> <operator pos:start="31:19" pos:end="31:19">&gt;</operator> <literal type="number" pos:start="31:21" pos:end="31:23">256</literal></expr>)</condition> <block pos:start="31:26" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:35">

        <expr_stmt pos:start="33:9" pos:end="33:74"><expr pos:start="33:9" pos:end="33:73"><call pos:start="33:9" pos:end="33:73"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:73">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:61"><expr pos:start="33:37" pos:end="33:61"><literal type="string" pos:start="33:37" pos:end="33:61">"Invalid tile size: %d\n"</literal></expr></argument>, <argument pos:start="33:64" pos:end="33:72"><expr pos:start="33:64" pos:end="33:72"><name pos:start="33:64" pos:end="33:72">tile_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:40">/* decode number of wavelet bands */</comment>

    <comment type="block" pos:start="43:5" pos:end="43:28">/* num_levels * 3 + 1 */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:12">pic_conf</name><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:23">luma_bands</name></name>   <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:49"><name pos:start="45:29" pos:end="45:36">get_bits</name><argument_list pos:start="45:37" pos:end="45:49">(<argument pos:start="45:38" pos:end="45:45"><expr pos:start="45:38" pos:end="45:45"><operator pos:start="45:38" pos:end="45:38">&amp;</operator><name pos:start="45:39" pos:end="45:45"><name pos:start="45:39" pos:end="45:41">ctx</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:45">gb</name></name></expr></argument>, <argument pos:start="45:48" pos:end="45:48"><expr pos:start="45:48" pos:end="45:48"><literal type="number" pos:start="45:48" pos:end="45:48">2</literal></expr></argument>)</argument_list></call> <operator pos:start="45:51" pos:end="45:51">*</operator> <literal type="number" pos:start="45:53" pos:end="45:55">3</literal> <operator pos:start="45:55" pos:end="45:55">+</operator> <literal type="number" pos:start="45:57" pos:end="45:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:58"><expr pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:12">pic_conf</name><operator pos:start="47:13" pos:end="47:13">.</operator><name pos:start="47:14" pos:end="47:25">chroma_bands</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <call pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:37">get_bits1</name><argument_list pos:start="47:38" pos:end="47:47">(<argument pos:start="47:39" pos:end="47:46"><expr pos:start="47:39" pos:end="47:46"><operator pos:start="47:39" pos:end="47:39">&amp;</operator><name pos:start="47:40" pos:end="47:46"><name pos:start="47:40" pos:end="47:42">ctx</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:46">gb</name></name></expr></argument>)</argument_list></call>   <operator pos:start="47:51" pos:end="47:51">*</operator> <literal type="number" pos:start="47:53" pos:end="47:55">3</literal> <operator pos:start="47:55" pos:end="47:55">+</operator> <literal type="number" pos:start="47:57" pos:end="47:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:73"><expr pos:start="49:5" pos:end="49:72"><name pos:start="49:5" pos:end="49:15">is_scalable</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:37"><name pos:start="49:19" pos:end="49:26">pic_conf</name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:37">luma_bands</name></name> <operator pos:start="49:39" pos:end="49:40">!=</operator> <literal type="number" pos:start="49:42" pos:end="49:42">1</literal> <operator pos:start="49:44" pos:end="49:45">||</operator> <name pos:start="49:47" pos:end="49:67"><name pos:start="49:47" pos:end="49:54">pic_conf</name><operator pos:start="49:55" pos:end="49:55">.</operator><name pos:start="49:56" pos:end="49:67">chroma_bands</name></name> <operator pos:start="49:69" pos:end="49:70">!=</operator> <literal type="number" pos:start="49:72" pos:end="49:72">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:80">(<expr pos:start="51:9" pos:end="51:79"><name pos:start="51:9" pos:end="51:19">is_scalable</name> <operator pos:start="51:21" pos:end="51:22">&amp;&amp;</operator> <operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:43"><name pos:start="51:25" pos:end="51:32">pic_conf</name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:43">luma_bands</name></name> <operator pos:start="51:45" pos:end="51:46">!=</operator> <literal type="number" pos:start="51:48" pos:end="51:48">4</literal> <operator pos:start="51:50" pos:end="51:51">||</operator> <name pos:start="51:53" pos:end="51:73"><name pos:start="51:53" pos:end="51:60">pic_conf</name><operator pos:start="51:61" pos:end="51:61">.</operator><name pos:start="51:62" pos:end="51:73">chroma_bands</name></name> <operator pos:start="51:75" pos:end="51:76">!=</operator> <literal type="number" pos:start="51:78" pos:end="51:78">1</literal><operator pos:start="51:79" pos:end="51:79">)</operator></expr>)</condition> <block pos:start="51:82" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:35">

        <expr_stmt pos:start="53:9" pos:end="55:59"><expr pos:start="53:9" pos:end="55:58"><call pos:start="53:9" pos:end="55:58"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:58">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:110"><expr pos:start="53:37" pos:end="53:110"><literal type="string" pos:start="53:37" pos:end="53:110">"Scalability: unsupported subdivision! Luma bands: %d, chroma bands: %d\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:34"><expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:23">pic_conf</name><operator pos:start="55:24" pos:end="55:24">.</operator><name pos:start="55:25" pos:end="55:34">luma_bands</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:57"><expr pos:start="55:37" pos:end="55:57"><name pos:start="55:37" pos:end="55:57"><name pos:start="55:37" pos:end="55:44">pic_conf</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:57">chroma_bands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:17">pic_size_indx</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:41"><name pos:start="63:21" pos:end="63:28">get_bits</name><argument_list pos:start="63:29" pos:end="63:41">(<argument pos:start="63:30" pos:end="63:37"><expr pos:start="63:30" pos:end="63:37"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:37"><name pos:start="63:31" pos:end="63:33">ctx</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:37">gb</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><literal type="number" pos:start="63:40" pos:end="63:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="77:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:43">(<expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:21">pic_size_indx</name> <operator pos:start="65:23" pos:end="65:24">==</operator> <name pos:start="65:26" pos:end="65:42">IVI5_PIC_SIZE_ESC</name></expr>)</condition> <block pos:start="65:45" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:53">

        <expr_stmt pos:start="67:9" pos:end="67:53"><expr pos:start="67:9" pos:end="67:52"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:16">pic_conf</name><operator pos:start="67:17" pos:end="67:17">.</operator><name pos:start="67:18" pos:end="67:27">pic_height</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <call pos:start="67:31" pos:end="67:52"><name pos:start="67:31" pos:end="67:38">get_bits</name><argument_list pos:start="67:39" pos:end="67:52">(<argument pos:start="67:40" pos:end="67:47"><expr pos:start="67:40" pos:end="67:47"><operator pos:start="67:40" pos:end="67:40">&amp;</operator><name pos:start="67:41" pos:end="67:47"><name pos:start="67:41" pos:end="67:43">ctx</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:47">gb</name></name></expr></argument>, <argument pos:start="67:50" pos:end="67:51"><expr pos:start="67:50" pos:end="67:51"><literal type="number" pos:start="67:50" pos:end="67:51">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:53"><expr pos:start="69:9" pos:end="69:52"><name pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:16">pic_conf</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:26">pic_width</name></name>  <operator pos:start="69:29" pos:end="69:29">=</operator> <call pos:start="69:31" pos:end="69:52"><name pos:start="69:31" pos:end="69:38">get_bits</name><argument_list pos:start="69:39" pos:end="69:52">(<argument pos:start="69:40" pos:end="69:47"><expr pos:start="69:40" pos:end="69:47"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:47"><name pos:start="69:41" pos:end="69:43">ctx</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:47">gb</name></name></expr></argument>, <argument pos:start="69:50" pos:end="69:51"><expr pos:start="69:50" pos:end="69:51"><literal type="number" pos:start="69:50" pos:end="69:51">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="77:5">else <block pos:start="71:12" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:80">

        <expr_stmt pos:start="73:9" pos:end="73:80"><expr pos:start="73:9" pos:end="73:79"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:16">pic_conf</name><operator pos:start="73:17" pos:end="73:17">.</operator><name pos:start="73:18" pos:end="73:27">pic_height</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:74"><name pos:start="73:31" pos:end="73:51">ivi5_common_pic_sizes</name><index pos:start="73:52" pos:end="73:74">[<expr pos:start="73:53" pos:end="73:73"><name pos:start="73:53" pos:end="73:65">pic_size_indx</name> <operator pos:start="73:67" pos:end="73:67">*</operator> <literal type="number" pos:start="73:69" pos:end="73:71">2</literal> <operator pos:start="73:71" pos:end="73:71">+</operator> <literal type="number" pos:start="73:73" pos:end="73:73">1</literal></expr>]</index></name> <operator pos:start="73:76" pos:end="73:77">&lt;&lt;</operator> <literal type="number" pos:start="73:79" pos:end="73:79">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:80"><expr pos:start="75:9" pos:end="75:79"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:16">pic_conf</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:26">pic_width</name></name>  <operator pos:start="75:29" pos:end="75:29">=</operator> <name pos:start="75:31" pos:end="75:74"><name pos:start="75:31" pos:end="75:51">ivi5_common_pic_sizes</name><index pos:start="75:52" pos:end="75:74">[<expr pos:start="75:53" pos:end="75:69"><name pos:start="75:53" pos:end="75:65">pic_size_indx</name> <operator pos:start="75:67" pos:end="75:67">*</operator> <literal type="number" pos:start="75:69" pos:end="75:69">2</literal></expr>    ]</index></name> <operator pos:start="75:76" pos:end="75:77">&lt;&lt;</operator> <literal type="number" pos:start="75:79" pos:end="75:79">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:27">(<expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">ctx</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:22">gop_flags</name></name> <operator pos:start="81:24" pos:end="81:24">&amp;</operator> <literal type="number" pos:start="81:26" pos:end="81:26">2</literal></expr>)</condition> <block pos:start="81:29" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:36">

        <expr_stmt pos:start="83:9" pos:end="83:68"><expr pos:start="83:9" pos:end="83:67"><call pos:start="83:9" pos:end="83:67"><name pos:start="83:9" pos:end="83:37">avpriv_report_missing_feature</name><argument_list pos:start="83:38" pos:end="83:67">(<argument pos:start="83:39" pos:end="83:43"><expr pos:start="83:39" pos:end="83:43"><name pos:start="83:39" pos:end="83:43">avctx</name></expr></argument>, <argument pos:start="83:46" pos:end="83:66"><expr pos:start="83:46" pos:end="83:66"><literal type="string" pos:start="83:46" pos:end="83:66">"YV12 picture format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:36">return <expr pos:start="85:16" pos:end="85:35"><name pos:start="85:16" pos:end="85:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:60"><expr pos:start="91:5" pos:end="91:59"><name pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:12">pic_conf</name><operator pos:start="91:13" pos:end="91:13">.</operator><name pos:start="91:14" pos:end="91:26">chroma_height</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <operator pos:start="91:30" pos:end="91:30">(</operator><name pos:start="91:31" pos:end="91:49"><name pos:start="91:31" pos:end="91:38">pic_conf</name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:49">pic_height</name></name> <operator pos:start="91:51" pos:end="91:51">+</operator> <literal type="number" pos:start="91:53" pos:end="91:53">3</literal><operator pos:start="91:54" pos:end="91:54">)</operator> <operator pos:start="91:56" pos:end="91:57">&gt;&gt;</operator> <literal type="number" pos:start="91:59" pos:end="91:59">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:60"><expr pos:start="93:5" pos:end="93:59"><name pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:12">pic_conf</name><operator pos:start="93:13" pos:end="93:13">.</operator><name pos:start="93:14" pos:end="93:25">chroma_width</name></name>  <operator pos:start="93:28" pos:end="93:28">=</operator> <operator pos:start="93:30" pos:end="93:30">(</operator><name pos:start="93:31" pos:end="93:48"><name pos:start="93:31" pos:end="93:38">pic_conf</name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:48">pic_width</name></name>  <operator pos:start="93:51" pos:end="93:51">+</operator> <literal type="number" pos:start="93:53" pos:end="93:53">3</literal><operator pos:start="93:54" pos:end="93:54">)</operator> <operator pos:start="93:56" pos:end="93:57">&gt;&gt;</operator> <literal type="number" pos:start="93:59" pos:end="93:59">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="107:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:19">(<expr pos:start="97:9" pos:end="97:18"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:18">tile_size</name></expr>)</condition> <block pos:start="97:21" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:50">

        <expr_stmt pos:start="99:9" pos:end="99:51"><expr pos:start="99:9" pos:end="99:50"><name pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:16">pic_conf</name><operator pos:start="99:17" pos:end="99:17">.</operator><name pos:start="99:18" pos:end="99:28">tile_height</name></name> <operator pos:start="99:30" pos:end="99:30">=</operator> <name pos:start="99:32" pos:end="99:50"><name pos:start="99:32" pos:end="99:39">pic_conf</name><operator pos:start="99:40" pos:end="99:40">.</operator><name pos:start="99:41" pos:end="99:50">pic_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:50"><expr pos:start="101:9" pos:end="101:49"><name pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:16">pic_conf</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:27">tile_width</name></name>  <operator pos:start="101:30" pos:end="101:30">=</operator> <name pos:start="101:32" pos:end="101:49"><name pos:start="101:32" pos:end="101:39">pic_conf</name><operator pos:start="101:40" pos:end="101:40">.</operator><name pos:start="101:41" pos:end="101:49">pic_width</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="107:5">else <block pos:start="103:12" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:63">

        <expr_stmt pos:start="105:9" pos:end="105:63"><expr pos:start="105:9" pos:end="105:62"><name pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:16">pic_conf</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:28">tile_height</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:50"><name pos:start="105:32" pos:end="105:39">pic_conf</name><operator pos:start="105:40" pos:end="105:40">.</operator><name pos:start="105:41" pos:end="105:50">tile_width</name></name> <operator pos:start="105:52" pos:end="105:52">=</operator> <name pos:start="105:54" pos:end="105:62">tile_size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:68">/* check if picture layout was changed and reallocate buffers */</comment>

    <if_stmt pos:start="113:5" pos:end="131:5"><if pos:start="113:5" pos:end="131:5">if <condition pos:start="113:8" pos:end="113:74">(<expr pos:start="113:9" pos:end="113:73"><call pos:start="113:9" pos:end="113:53"><name pos:start="113:9" pos:end="113:26">ivi_pic_config_cmp</name><argument_list pos:start="113:27" pos:end="113:53">(<argument pos:start="113:28" pos:end="113:36"><expr pos:start="113:28" pos:end="113:36"><operator pos:start="113:28" pos:end="113:28">&amp;</operator><name pos:start="113:29" pos:end="113:36">pic_conf</name></expr></argument>, <argument pos:start="113:39" pos:end="113:52"><expr pos:start="113:39" pos:end="113:52"><operator pos:start="113:39" pos:end="113:39">&amp;</operator><name pos:start="113:40" pos:end="113:52"><name pos:start="113:40" pos:end="113:42">ctx</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:52">pic_conf</name></name></expr></argument>)</argument_list></call> <operator pos:start="113:55" pos:end="113:56">||</operator> <name pos:start="113:58" pos:end="113:73"><name pos:start="113:58" pos:end="113:60">ctx</name><operator pos:start="113:61" pos:end="113:62">-&gt;</operator><name pos:start="113:63" pos:end="113:73">gop_invalid</name></name></expr>)</condition> <block pos:start="113:76" pos:end="131:5">{<block_content pos:start="115:9" pos:end="129:29">

        <expr_stmt pos:start="115:9" pos:end="115:63"><expr pos:start="115:9" pos:end="115:62"><name pos:start="115:9" pos:end="115:14">result</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <call pos:start="115:18" pos:end="115:62"><name pos:start="115:18" pos:end="115:35">ff_ivi_init_planes</name><argument_list pos:start="115:36" pos:end="115:62">(<argument pos:start="115:37" pos:end="115:47"><expr pos:start="115:37" pos:end="115:47"><name pos:start="115:37" pos:end="115:47"><name pos:start="115:37" pos:end="115:39">ctx</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:47">planes</name></name></expr></argument>, <argument pos:start="115:50" pos:end="115:58"><expr pos:start="115:50" pos:end="115:58"><operator pos:start="115:50" pos:end="115:50">&amp;</operator><name pos:start="115:51" pos:end="115:58">pic_conf</name></expr></argument>, <argument pos:start="115:61" pos:end="115:61"><expr pos:start="115:61" pos:end="115:61"><literal type="number" pos:start="115:61" pos:end="115:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:23">(<expr pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:18">result</name> <operator pos:start="117:20" pos:end="117:20">&lt;</operator> <literal type="number" pos:start="117:22" pos:end="117:22">0</literal></expr>)</condition> <block pos:start="117:25" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:26">

            <expr_stmt pos:start="119:13" pos:end="119:79"><expr pos:start="119:13" pos:end="119:78"><call pos:start="119:13" pos:end="119:78"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="119:78">(<argument pos:start="119:20" pos:end="119:24"><expr pos:start="119:20" pos:end="119:24"><name pos:start="119:20" pos:end="119:24">avctx</name></expr></argument>, <argument pos:start="119:27" pos:end="119:38"><expr pos:start="119:27" pos:end="119:38"><name pos:start="119:27" pos:end="119:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:41" pos:end="119:77"><expr pos:start="119:41" pos:end="119:77"><literal type="string" pos:start="119:41" pos:end="119:77">"Couldn't reallocate color planes!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:26">return <expr pos:start="121:20" pos:end="121:25"><name pos:start="121:20" pos:end="121:25">result</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:11">ctx</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:21">pic_conf</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:32">pic_conf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:39"><expr pos:start="127:9" pos:end="127:38"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:11">ctx</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:24">is_scalable</name></name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:38">is_scalable</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:24">blk_size_changed</name> <operator pos:start="129:26" pos:end="129:26">=</operator> <literal type="number" pos:start="129:28" pos:end="129:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="129:31" pos:end="129:81">/* force reallocation of the internal structures */</comment>

    </block_content>}</block></if></if_stmt>



    <for pos:start="135:5" pos:end="335:5">for <control pos:start="135:9" pos:end="135:28">(<init pos:start="135:10" pos:end="135:15"><expr pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">p</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</init> <condition pos:start="135:17" pos:end="135:23"><expr pos:start="135:17" pos:end="135:22"><name pos:start="135:17" pos:end="135:17">p</name> <operator pos:start="135:19" pos:end="135:20">&lt;=</operator> <literal type="number" pos:start="135:22" pos:end="135:22">1</literal></expr>;</condition> <incr pos:start="135:25" pos:end="135:27"><expr pos:start="135:25" pos:end="135:27"><name pos:start="135:25" pos:end="135:25">p</name><operator pos:start="135:26" pos:end="135:27">++</operator></expr></incr>)</control> <block pos:start="135:30" pos:end="335:5">{<block_content pos:start="137:9" pos:end="333:9">

        <for pos:start="137:9" pos:end="333:9">for <control pos:start="137:13" pos:end="137:80">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">i</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:75"><expr pos:start="137:21" pos:end="137:74"><name pos:start="137:21" pos:end="137:21">i</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <operator pos:start="137:25" pos:end="137:25">(</operator><ternary pos:start="137:26" pos:end="137:73"><condition pos:start="137:26" pos:end="137:29"><expr pos:start="137:26" pos:end="137:27"><operator pos:start="137:26" pos:end="137:26">!</operator><name pos:start="137:27" pos:end="137:27">p</name></expr> ?</condition><then pos:start="137:31" pos:end="137:49"> <expr pos:start="137:31" pos:end="137:49"><name pos:start="137:31" pos:end="137:49"><name pos:start="137:31" pos:end="137:38">pic_conf</name><operator pos:start="137:39" pos:end="137:39">.</operator><name pos:start="137:40" pos:end="137:49">luma_bands</name></name></expr> </then><else pos:start="137:51" pos:end="137:73">: <expr pos:start="137:53" pos:end="137:73"><name pos:start="137:53" pos:end="137:73"><name pos:start="137:53" pos:end="137:60">pic_conf</name><operator pos:start="137:61" pos:end="137:61">.</operator><name pos:start="137:62" pos:end="137:73">chroma_bands</name></name></expr></else></ternary><operator pos:start="137:74" pos:end="137:74">)</operator></expr>;</condition> <incr pos:start="137:77" pos:end="137:79"><expr pos:start="137:77" pos:end="137:79"><name pos:start="137:77" pos:end="137:77">i</name><operator pos:start="137:78" pos:end="137:79">++</operator></expr></incr>)</control> <block pos:start="137:82" pos:end="333:9">{<block_content pos:start="139:13" pos:end="331:13">

            <expr_stmt pos:start="139:13" pos:end="139:44"><expr pos:start="139:13" pos:end="139:43"><name pos:start="139:13" pos:end="139:16">band</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <operator pos:start="139:20" pos:end="139:20">&amp;</operator><name pos:start="139:21" pos:end="139:34"><name pos:start="139:21" pos:end="139:23">ctx</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:31">planes</name><index pos:start="139:32" pos:end="139:34">[<expr pos:start="139:33" pos:end="139:33"><name pos:start="139:33" pos:end="139:33">p</name></expr>]</index></name><operator pos:start="139:35" pos:end="139:35">.</operator><name pos:start="139:36" pos:end="139:43"><name pos:start="139:36" pos:end="139:40">bands</name><index pos:start="139:41" pos:end="139:43">[<expr pos:start="139:42" pos:end="139:42"><name pos:start="139:42" pos:end="139:42">i</name></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:51"><expr pos:start="143:13" pos:end="143:50"><name pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:16">band</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:28">is_halfpel</name></name> <operator pos:start="143:30" pos:end="143:30">=</operator> <call pos:start="143:32" pos:end="143:50"><name pos:start="143:32" pos:end="143:40">get_bits1</name><argument_list pos:start="143:41" pos:end="143:50">(<argument pos:start="143:42" pos:end="143:49"><expr pos:start="143:42" pos:end="143:49"><operator pos:start="143:42" pos:end="143:42">&amp;</operator><name pos:start="143:43" pos:end="143:49"><name pos:start="143:43" pos:end="143:45">ctx</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:43"><expr pos:start="147:13" pos:end="147:42"><name pos:start="147:13" pos:end="147:19">mb_size</name>  <operator pos:start="147:22" pos:end="147:22">=</operator> <call pos:start="147:24" pos:end="147:42"><name pos:start="147:24" pos:end="147:32">get_bits1</name><argument_list pos:start="147:33" pos:end="147:42">(<argument pos:start="147:34" pos:end="147:41"><expr pos:start="147:34" pos:end="147:41"><operator pos:start="147:34" pos:end="147:34">&amp;</operator><name pos:start="147:35" pos:end="147:41"><name pos:start="147:35" pos:end="147:37">ctx</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:48"><expr pos:start="149:13" pos:end="149:47"><name pos:start="149:13" pos:end="149:20">blk_size</name> <operator pos:start="149:22" pos:end="149:22">=</operator> <literal type="number" pos:start="149:24" pos:end="149:24">8</literal> <operator pos:start="149:26" pos:end="149:27">&gt;&gt;</operator> <call pos:start="149:29" pos:end="149:47"><name pos:start="149:29" pos:end="149:37">get_bits1</name><argument_list pos:start="149:38" pos:end="149:47">(<argument pos:start="149:39" pos:end="149:46"><expr pos:start="149:39" pos:end="149:46"><operator pos:start="149:39" pos:end="149:39">&amp;</operator><name pos:start="149:40" pos:end="149:46"><name pos:start="149:40" pos:end="149:42">ctx</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:44"><expr pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:19">mb_size</name>  <operator pos:start="151:22" pos:end="151:22">=</operator> <name pos:start="151:24" pos:end="151:31">blk_size</name> <operator pos:start="151:33" pos:end="151:34">&lt;&lt;</operator> <operator pos:start="151:36" pos:end="151:36">!</operator><name pos:start="151:37" pos:end="151:43">mb_size</name></expr>;</expr_stmt>



            <if_stmt pos:start="155:13" pos:end="161:13"><if pos:start="155:13" pos:end="161:13">if <condition pos:start="155:16" pos:end="155:36">(<expr pos:start="155:17" pos:end="155:35"><name pos:start="155:17" pos:end="155:17">p</name><operator pos:start="155:18" pos:end="155:19">==</operator><literal type="number" pos:start="155:20" pos:end="155:20">0</literal> <operator pos:start="155:22" pos:end="155:23">&amp;&amp;</operator> <name pos:start="155:25" pos:end="155:32">blk_size</name><operator pos:start="155:33" pos:end="155:34">==</operator><literal type="number" pos:start="155:35" pos:end="155:35">4</literal></expr>)</condition> <block pos:start="155:38" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:44">

                <expr_stmt pos:start="157:17" pos:end="157:82"><expr pos:start="157:17" pos:end="157:81"><call pos:start="157:17" pos:end="157:81"><name pos:start="157:17" pos:end="157:22">av_log</name><argument_list pos:start="157:23" pos:end="157:81">(<argument pos:start="157:24" pos:end="157:28"><expr pos:start="157:24" pos:end="157:28"><name pos:start="157:24" pos:end="157:28">avctx</name></expr></argument>, <argument pos:start="157:31" pos:end="157:42"><expr pos:start="157:31" pos:end="157:42"><name pos:start="157:31" pos:end="157:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:45" pos:end="157:80"><expr pos:start="157:45" pos:end="157:80"><literal type="string" pos:start="157:45" pos:end="157:80">"4x4 luma blocks are unsupported!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="159:17" pos:end="159:44">return <expr pos:start="159:24" pos:end="159:43"><name pos:start="159:24" pos:end="159:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="165:13" pos:end="165:86"><expr pos:start="165:13" pos:end="165:85"><name pos:start="165:13" pos:end="165:28">blk_size_changed</name> <operator pos:start="165:30" pos:end="165:30">=</operator> <name pos:start="165:32" pos:end="165:38">mb_size</name> <operator pos:start="165:40" pos:end="165:41">!=</operator> <name pos:start="165:43" pos:end="165:55"><name pos:start="165:43" pos:end="165:46">band</name><operator pos:start="165:47" pos:end="165:48">-&gt;</operator><name pos:start="165:49" pos:end="165:55">mb_size</name></name> <operator pos:start="165:57" pos:end="165:58">||</operator> <name pos:start="165:60" pos:end="165:67">blk_size</name> <operator pos:start="165:69" pos:end="165:70">!=</operator> <name pos:start="165:72" pos:end="165:85"><name pos:start="165:72" pos:end="165:75">band</name><operator pos:start="165:76" pos:end="165:77">-&gt;</operator><name pos:start="165:78" pos:end="165:85">blk_size</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="173:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:33">(<expr pos:start="167:17" pos:end="167:32"><name pos:start="167:17" pos:end="167:32">blk_size_changed</name></expr>)</condition> <block pos:start="167:35" pos:end="173:13">{<block_content pos:start="169:17" pos:end="171:42">

                <expr_stmt pos:start="169:17" pos:end="169:41"><expr pos:start="169:17" pos:end="169:40"><name pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:20">band</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:29">mb_size</name></name>  <operator pos:start="169:32" pos:end="169:32">=</operator> <name pos:start="169:34" pos:end="169:40">mb_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:42"><expr pos:start="171:17" pos:end="171:41"><name pos:start="171:17" pos:end="171:30"><name pos:start="171:17" pos:end="171:20">band</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:30">blk_size</name></name> <operator pos:start="171:32" pos:end="171:32">=</operator> <name pos:start="171:34" pos:end="171:41">blk_size</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="177:13" pos:end="183:13"><if pos:start="177:13" pos:end="183:13">if <condition pos:start="177:16" pos:end="177:36">(<expr pos:start="177:17" pos:end="177:35"><call pos:start="177:17" pos:end="177:35"><name pos:start="177:17" pos:end="177:25">get_bits1</name><argument_list pos:start="177:26" pos:end="177:35">(<argument pos:start="177:27" pos:end="177:34"><expr pos:start="177:27" pos:end="177:34"><operator pos:start="177:27" pos:end="177:27">&amp;</operator><name pos:start="177:28" pos:end="177:34"><name pos:start="177:28" pos:end="177:30">ctx</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:34">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:38" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:44">

                <expr_stmt pos:start="179:17" pos:end="179:80"><expr pos:start="179:17" pos:end="179:79"><call pos:start="179:17" pos:end="179:79"><name pos:start="179:17" pos:end="179:45">avpriv_report_missing_feature</name><argument_list pos:start="179:46" pos:end="179:79">(<argument pos:start="179:47" pos:end="179:51"><expr pos:start="179:47" pos:end="179:51"><name pos:start="179:47" pos:end="179:51">avctx</name></expr></argument>, <argument pos:start="179:54" pos:end="179:78"><expr pos:start="179:54" pos:end="179:78"><literal type="string" pos:start="179:54" pos:end="179:78">"Extended transform info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="181:17" pos:end="181:44">return <expr pos:start="181:24" pos:end="181:43"><name pos:start="181:24" pos:end="181:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="187:13" pos:end="187:95">/* select transform function and scan pattern according to plane and band number */</comment>

            <switch pos:start="189:13" pos:end="259:13">switch <condition pos:start="189:20" pos:end="189:33">(<expr pos:start="189:21" pos:end="189:32"><operator pos:start="189:21" pos:end="189:21">(</operator><name pos:start="189:22" pos:end="189:22">p</name> <operator pos:start="189:24" pos:end="189:25">&lt;&lt;</operator> <literal type="number" pos:start="189:27" pos:end="189:27">2</literal><operator pos:start="189:28" pos:end="189:28">)</operator> <operator pos:start="189:30" pos:end="189:30">+</operator> <name pos:start="189:32" pos:end="189:32">i</name></expr>)</condition> <block pos:start="189:35" pos:end="259:13">{<block_content pos:start="191:13" pos:end="257:22">

            <case pos:start="191:13" pos:end="191:19">case <expr pos:start="191:18" pos:end="191:18"><literal type="number" pos:start="191:18" pos:end="191:18">0</literal></expr>:</case>

                <expr_stmt pos:start="193:17" pos:end="193:64"><expr pos:start="193:17" pos:end="193:63"><name pos:start="193:17" pos:end="193:35"><name pos:start="193:17" pos:end="193:20">band</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:35">inv_transform</name></name>  <operator pos:start="193:38" pos:end="193:38">=</operator> <name pos:start="193:40" pos:end="193:63">ff_ivi_inverse_slant_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:58"><expr pos:start="195:17" pos:end="195:57"><name pos:start="195:17" pos:end="195:34"><name pos:start="195:17" pos:end="195:20">band</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:34">dc_transform</name></name>   <operator pos:start="195:38" pos:end="195:38">=</operator> <name pos:start="195:40" pos:end="195:57">ff_ivi_dc_slant_2d</name></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:56"><expr pos:start="197:17" pos:end="197:55"><name pos:start="197:17" pos:end="197:26"><name pos:start="197:17" pos:end="197:20">band</name><operator pos:start="197:21" pos:end="197:22">-&gt;</operator><name pos:start="197:23" pos:end="197:26">scan</name></name>           <operator pos:start="197:38" pos:end="197:38">=</operator> <name pos:start="197:40" pos:end="197:55">ff_zigzag_direct</name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:41"><expr pos:start="199:17" pos:end="199:40"><name pos:start="199:17" pos:end="199:36"><name pos:start="199:17" pos:end="199:20">band</name><operator pos:start="199:21" pos:end="199:22">-&gt;</operator><name pos:start="199:23" pos:end="199:36">transform_size</name></name> <operator pos:start="199:38" pos:end="199:38">=</operator> <literal type="number" pos:start="199:40" pos:end="199:40">8</literal></expr>;</expr_stmt>

                <break pos:start="201:17" pos:end="201:22">break;</break>



            <case pos:start="205:13" pos:end="205:19">case <expr pos:start="205:18" pos:end="205:18"><literal type="number" pos:start="205:18" pos:end="205:18">1</literal></expr>:</case>

                <expr_stmt pos:start="207:17" pos:end="207:57"><expr pos:start="207:17" pos:end="207:56"><name pos:start="207:17" pos:end="207:35"><name pos:start="207:17" pos:end="207:20">band</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:35">inv_transform</name></name>  <operator pos:start="207:38" pos:end="207:38">=</operator> <name pos:start="207:40" pos:end="207:56">ff_ivi_row_slant8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:59"><expr pos:start="209:17" pos:end="209:58"><name pos:start="209:17" pos:end="209:34"><name pos:start="209:17" pos:end="209:20">band</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:34">dc_transform</name></name>   <operator pos:start="209:38" pos:end="209:38">=</operator> <name pos:start="209:40" pos:end="209:58">ff_ivi_dc_row_slant</name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:64"><expr pos:start="211:17" pos:end="211:63"><name pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:20">band</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:26">scan</name></name>           <operator pos:start="211:38" pos:end="211:38">=</operator> <name pos:start="211:40" pos:end="211:63">ff_ivi_vertical_scan_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:41"><expr pos:start="213:17" pos:end="213:40"><name pos:start="213:17" pos:end="213:36"><name pos:start="213:17" pos:end="213:20">band</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:36">transform_size</name></name> <operator pos:start="213:38" pos:end="213:38">=</operator> <literal type="number" pos:start="213:40" pos:end="213:40">8</literal></expr>;</expr_stmt>

                <break pos:start="215:17" pos:end="215:22">break;</break>



            <case pos:start="219:13" pos:end="219:19">case <expr pos:start="219:18" pos:end="219:18"><literal type="number" pos:start="219:18" pos:end="219:18">2</literal></expr>:</case>

                <expr_stmt pos:start="221:17" pos:end="221:57"><expr pos:start="221:17" pos:end="221:56"><name pos:start="221:17" pos:end="221:35"><name pos:start="221:17" pos:end="221:20">band</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:35">inv_transform</name></name>  <operator pos:start="221:38" pos:end="221:38">=</operator> <name pos:start="221:40" pos:end="221:56">ff_ivi_col_slant8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:59"><expr pos:start="223:17" pos:end="223:58"><name pos:start="223:17" pos:end="223:34"><name pos:start="223:17" pos:end="223:20">band</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:34">dc_transform</name></name>   <operator pos:start="223:38" pos:end="223:38">=</operator> <name pos:start="223:40" pos:end="223:58">ff_ivi_dc_col_slant</name></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:66"><expr pos:start="225:17" pos:end="225:65"><name pos:start="225:17" pos:end="225:26"><name pos:start="225:17" pos:end="225:20">band</name><operator pos:start="225:21" pos:end="225:22">-&gt;</operator><name pos:start="225:23" pos:end="225:26">scan</name></name>           <operator pos:start="225:38" pos:end="225:38">=</operator> <name pos:start="225:40" pos:end="225:65">ff_ivi_horizontal_scan_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:41"><expr pos:start="227:17" pos:end="227:40"><name pos:start="227:17" pos:end="227:36"><name pos:start="227:17" pos:end="227:20">band</name><operator pos:start="227:21" pos:end="227:22">-&gt;</operator><name pos:start="227:23" pos:end="227:36">transform_size</name></name> <operator pos:start="227:38" pos:end="227:38">=</operator> <literal type="number" pos:start="227:40" pos:end="227:40">8</literal></expr>;</expr_stmt>

                <break pos:start="229:17" pos:end="229:22">break;</break>



            <case pos:start="233:13" pos:end="233:19">case <expr pos:start="233:18" pos:end="233:18"><literal type="number" pos:start="233:18" pos:end="233:18">3</literal></expr>:</case>

                <expr_stmt pos:start="235:17" pos:end="235:61"><expr pos:start="235:17" pos:end="235:60"><name pos:start="235:17" pos:end="235:35"><name pos:start="235:17" pos:end="235:20">band</name><operator pos:start="235:21" pos:end="235:22">-&gt;</operator><name pos:start="235:23" pos:end="235:35">inv_transform</name></name>  <operator pos:start="235:38" pos:end="235:38">=</operator> <name pos:start="235:40" pos:end="235:60">ff_ivi_put_pixels_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="237:63"><expr pos:start="237:17" pos:end="237:62"><name pos:start="237:17" pos:end="237:34"><name pos:start="237:17" pos:end="237:20">band</name><operator pos:start="237:21" pos:end="237:22">-&gt;</operator><name pos:start="237:23" pos:end="237:34">dc_transform</name></name>   <operator pos:start="237:38" pos:end="237:38">=</operator> <name pos:start="237:40" pos:end="237:62">ff_ivi_put_dc_pixel_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:66"><expr pos:start="239:17" pos:end="239:65"><name pos:start="239:17" pos:end="239:26"><name pos:start="239:17" pos:end="239:20">band</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:26">scan</name></name>           <operator pos:start="239:38" pos:end="239:38">=</operator> <name pos:start="239:40" pos:end="239:65">ff_ivi_horizontal_scan_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:41"><expr pos:start="241:17" pos:end="241:40"><name pos:start="241:17" pos:end="241:36"><name pos:start="241:17" pos:end="241:20">band</name><operator pos:start="241:21" pos:end="241:22">-&gt;</operator><name pos:start="241:23" pos:end="241:36">transform_size</name></name> <operator pos:start="241:38" pos:end="241:38">=</operator> <literal type="number" pos:start="241:40" pos:end="241:40">8</literal></expr>;</expr_stmt>

                <break pos:start="243:17" pos:end="243:22">break;</break>



            <case pos:start="247:13" pos:end="247:19">case <expr pos:start="247:18" pos:end="247:18"><literal type="number" pos:start="247:18" pos:end="247:18">4</literal></expr>:</case>

                <expr_stmt pos:start="249:17" pos:end="249:64"><expr pos:start="249:17" pos:end="249:63"><name pos:start="249:17" pos:end="249:35"><name pos:start="249:17" pos:end="249:20">band</name><operator pos:start="249:21" pos:end="249:22">-&gt;</operator><name pos:start="249:23" pos:end="249:35">inv_transform</name></name>  <operator pos:start="249:38" pos:end="249:38">=</operator> <name pos:start="249:40" pos:end="249:63">ff_ivi_inverse_slant_4x4</name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:58"><expr pos:start="251:17" pos:end="251:57"><name pos:start="251:17" pos:end="251:34"><name pos:start="251:17" pos:end="251:20">band</name><operator pos:start="251:21" pos:end="251:22">-&gt;</operator><name pos:start="251:23" pos:end="251:34">dc_transform</name></name>   <operator pos:start="251:38" pos:end="251:38">=</operator> <name pos:start="251:40" pos:end="251:57">ff_ivi_dc_slant_2d</name></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:62"><expr pos:start="253:17" pos:end="253:61"><name pos:start="253:17" pos:end="253:26"><name pos:start="253:17" pos:end="253:20">band</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:26">scan</name></name>           <operator pos:start="253:38" pos:end="253:38">=</operator> <name pos:start="253:40" pos:end="253:61">ff_ivi_direct_scan_4x4</name></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:41"><expr pos:start="255:17" pos:end="255:40"><name pos:start="255:17" pos:end="255:36"><name pos:start="255:17" pos:end="255:20">band</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:36">transform_size</name></name> <operator pos:start="255:38" pos:end="255:38">=</operator> <literal type="number" pos:start="255:40" pos:end="255:40">4</literal></expr>;</expr_stmt>

                <break pos:start="257:17" pos:end="257:22">break;</break>

            </block_content>}</block></switch>



            <expr_stmt pos:start="263:13" pos:end="265:80"><expr pos:start="263:13" pos:end="265:79"><name pos:start="263:13" pos:end="263:29"><name pos:start="263:13" pos:end="263:16">band</name><operator pos:start="263:17" pos:end="263:18">-&gt;</operator><name pos:start="263:19" pos:end="263:29">is_2d_trans</name></name> <operator pos:start="263:31" pos:end="263:31">=</operator> <name pos:start="263:33" pos:end="263:51"><name pos:start="263:33" pos:end="263:36">band</name><operator pos:start="263:37" pos:end="263:38">-&gt;</operator><name pos:start="263:39" pos:end="263:51">inv_transform</name></name> <operator pos:start="263:53" pos:end="263:54">==</operator> <name pos:start="263:56" pos:end="263:79">ff_ivi_inverse_slant_8x8</name> <operator pos:start="263:81" pos:end="263:82">||</operator>

                                <name pos:start="265:33" pos:end="265:51"><name pos:start="265:33" pos:end="265:36">band</name><operator pos:start="265:37" pos:end="265:38">-&gt;</operator><name pos:start="265:39" pos:end="265:51">inv_transform</name></name> <operator pos:start="265:53" pos:end="265:54">==</operator> <name pos:start="265:56" pos:end="265:79">ff_ivi_inverse_slant_4x4</name></expr>;</expr_stmt>



            <if_stmt pos:start="269:13" pos:end="275:13"><if pos:start="269:13" pos:end="275:13">if <condition pos:start="269:16" pos:end="269:55">(<expr pos:start="269:17" pos:end="269:54"><name pos:start="269:17" pos:end="269:36"><name pos:start="269:17" pos:end="269:20">band</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:36">transform_size</name></name> <operator pos:start="269:38" pos:end="269:39">!=</operator> <name pos:start="269:41" pos:end="269:54"><name pos:start="269:41" pos:end="269:44">band</name><operator pos:start="269:45" pos:end="269:46">-&gt;</operator><name pos:start="269:47" pos:end="269:54">blk_size</name></name></expr>)</condition> <block pos:start="269:57" pos:end="275:13">{<block_content pos:start="271:17" pos:end="273:43">

                <expr_stmt pos:start="271:17" pos:end="271:132"><expr pos:start="271:17" pos:end="271:131"><call pos:start="271:17" pos:end="271:131"><name pos:start="271:17" pos:end="271:22">av_log</name><argument_list pos:start="271:23" pos:end="271:131">(<argument pos:start="271:24" pos:end="271:28"><expr pos:start="271:24" pos:end="271:28"><name pos:start="271:24" pos:end="271:28">avctx</name></expr></argument>, <argument pos:start="271:31" pos:end="271:42"><expr pos:start="271:31" pos:end="271:42"><name pos:start="271:31" pos:end="271:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:45" pos:end="271:92"><expr pos:start="271:45" pos:end="271:92"><literal type="string" pos:start="271:45" pos:end="271:92">"transform and block size mismatch (%d != %d)\n"</literal></expr></argument>, <argument pos:start="271:95" pos:end="271:114"><expr pos:start="271:95" pos:end="271:114"><name pos:start="271:95" pos:end="271:114"><name pos:start="271:95" pos:end="271:98">band</name><operator pos:start="271:99" pos:end="271:100">-&gt;</operator><name pos:start="271:101" pos:end="271:114">transform_size</name></name></expr></argument>, <argument pos:start="271:117" pos:end="271:130"><expr pos:start="271:117" pos:end="271:130"><name pos:start="271:117" pos:end="271:130"><name pos:start="271:117" pos:end="271:120">band</name><operator pos:start="271:121" pos:end="271:122">-&gt;</operator><name pos:start="271:123" pos:end="271:130">blk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="273:17" pos:end="273:43">return <expr pos:start="273:24" pos:end="273:42"><name pos:start="273:24" pos:end="273:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="279:13" pos:end="279:74">/* select dequant matrix according to plane and band number */</comment>

            <if_stmt pos:start="281:13" pos:end="289:13"><if pos:start="281:13" pos:end="285:13">if <condition pos:start="281:16" pos:end="281:19">(<expr pos:start="281:17" pos:end="281:18"><operator pos:start="281:17" pos:end="281:17">!</operator><name pos:start="281:18" pos:end="281:18">p</name></expr>)</condition> <block pos:start="281:21" pos:end="285:13">{<block_content pos:start="283:17" pos:end="283:64">

                <expr_stmt pos:start="283:17" pos:end="283:64"><expr pos:start="283:17" pos:end="283:63"><name pos:start="283:17" pos:end="283:25">quant_mat</name> <operator pos:start="283:27" pos:end="283:27">=</operator> <ternary pos:start="283:29" pos:end="283:63"><condition pos:start="283:29" pos:end="283:55"><expr pos:start="283:29" pos:end="283:53"><operator pos:start="283:29" pos:end="283:29">(</operator><name pos:start="283:30" pos:end="283:48"><name pos:start="283:30" pos:end="283:37">pic_conf</name><operator pos:start="283:38" pos:end="283:38">.</operator><name pos:start="283:39" pos:end="283:48">luma_bands</name></name> <operator pos:start="283:50" pos:end="283:50">&gt;</operator> <literal type="number" pos:start="283:52" pos:end="283:52">1</literal><operator pos:start="283:53" pos:end="283:53">)</operator></expr> ?</condition><then pos:start="283:57" pos:end="283:59"> <expr pos:start="283:57" pos:end="283:59"><name pos:start="283:57" pos:end="283:57">i</name><operator pos:start="283:58" pos:end="283:58">+</operator><literal type="number" pos:start="283:59" pos:end="283:59">1</literal></expr> </then><else pos:start="283:61" pos:end="283:63">: <expr pos:start="283:63" pos:end="283:63"><literal type="number" pos:start="283:63" pos:end="283:63">0</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="285:15" pos:end="289:13">else <block pos:start="285:20" pos:end="289:13">{<block_content pos:start="287:17" pos:end="287:30">

                <expr_stmt pos:start="287:17" pos:end="287:30"><expr pos:start="287:17" pos:end="287:29"><name pos:start="287:17" pos:end="287:25">quant_mat</name> <operator pos:start="287:27" pos:end="287:27">=</operator> <literal type="number" pos:start="287:29" pos:end="287:29">5</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="293:13" pos:end="321:13"><if pos:start="293:13" pos:end="311:13">if <condition pos:start="293:16" pos:end="293:36">(<expr pos:start="293:17" pos:end="293:35"><name pos:start="293:17" pos:end="293:30"><name pos:start="293:17" pos:end="293:20">band</name><operator pos:start="293:21" pos:end="293:22">-&gt;</operator><name pos:start="293:23" pos:end="293:30">blk_size</name></name> <operator pos:start="293:32" pos:end="293:33">==</operator> <literal type="number" pos:start="293:35" pos:end="293:35">8</literal></expr>)</condition> <block pos:start="293:38" pos:end="311:13">{<block_content pos:start="295:17" pos:end="309:78">

                <if_stmt pos:start="295:17" pos:end="301:17"><if pos:start="295:17" pos:end="301:17">if<condition pos:start="295:19" pos:end="295:34">(<expr pos:start="295:20" pos:end="295:33"><name pos:start="295:20" pos:end="295:28">quant_mat</name> <operator pos:start="295:30" pos:end="295:31">&gt;=</operator> <literal type="number" pos:start="295:33" pos:end="295:33">5</literal></expr>)</condition><block pos:start="295:35" pos:end="301:17">{<block_content pos:start="297:21" pos:end="299:30">

                    <expr_stmt pos:start="297:21" pos:end="297:88"><expr pos:start="297:21" pos:end="297:87"><call pos:start="297:21" pos:end="297:87"><name pos:start="297:21" pos:end="297:26">av_log</name><argument_list pos:start="297:27" pos:end="297:87">(<argument pos:start="297:28" pos:end="297:32"><expr pos:start="297:28" pos:end="297:32"><name pos:start="297:28" pos:end="297:32">avctx</name></expr></argument>, <argument pos:start="297:35" pos:end="297:46"><expr pos:start="297:35" pos:end="297:46"><name pos:start="297:35" pos:end="297:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="297:49" pos:end="297:75"><expr pos:start="297:49" pos:end="297:75"><literal type="string" pos:start="297:49" pos:end="297:75">"quant_mat %d too large!\n"</literal></expr></argument>, <argument pos:start="297:78" pos:end="297:86"><expr pos:start="297:78" pos:end="297:86"><name pos:start="297:78" pos:end="297:86">quant_mat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="299:21" pos:end="299:30">return <expr pos:start="299:28" pos:end="299:29"><operator pos:start="299:28" pos:end="299:28">-</operator><literal type="number" pos:start="299:29" pos:end="299:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:77"><expr pos:start="303:17" pos:end="303:76"><name pos:start="303:17" pos:end="303:32"><name pos:start="303:17" pos:end="303:20">band</name><operator pos:start="303:21" pos:end="303:22">-&gt;</operator><name pos:start="303:23" pos:end="303:32">intra_base</name></name>  <operator pos:start="303:35" pos:end="303:35">=</operator> <operator pos:start="303:37" pos:end="303:37">&amp;</operator><name pos:start="303:38" pos:end="303:76"><name pos:start="303:38" pos:end="303:62">ivi5_base_quant_8x8_intra</name><index pos:start="303:63" pos:end="303:73">[<expr pos:start="303:64" pos:end="303:72"><name pos:start="303:64" pos:end="303:72">quant_mat</name></expr>]</index><index pos:start="303:74" pos:end="303:76">[<expr pos:start="303:75" pos:end="303:75"><literal type="number" pos:start="303:75" pos:end="303:75">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:77"><expr pos:start="305:17" pos:end="305:76"><name pos:start="305:17" pos:end="305:32"><name pos:start="305:17" pos:end="305:20">band</name><operator pos:start="305:21" pos:end="305:22">-&gt;</operator><name pos:start="305:23" pos:end="305:32">inter_base</name></name>  <operator pos:start="305:35" pos:end="305:35">=</operator> <operator pos:start="305:37" pos:end="305:37">&amp;</operator><name pos:start="305:38" pos:end="305:76"><name pos:start="305:38" pos:end="305:62">ivi5_base_quant_8x8_inter</name><index pos:start="305:63" pos:end="305:73">[<expr pos:start="305:64" pos:end="305:72"><name pos:start="305:64" pos:end="305:72">quant_mat</name></expr>]</index><index pos:start="305:74" pos:end="305:76">[<expr pos:start="305:75" pos:end="305:75"><literal type="number" pos:start="305:75" pos:end="305:75">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:78"><expr pos:start="307:17" pos:end="307:77"><name pos:start="307:17" pos:end="307:33"><name pos:start="307:17" pos:end="307:20">band</name><operator pos:start="307:21" pos:end="307:22">-&gt;</operator><name pos:start="307:23" pos:end="307:33">intra_scale</name></name> <operator pos:start="307:35" pos:end="307:35">=</operator> <operator pos:start="307:37" pos:end="307:37">&amp;</operator><name pos:start="307:38" pos:end="307:77"><name pos:start="307:38" pos:end="307:63">ivi5_scale_quant_8x8_intra</name><index pos:start="307:64" pos:end="307:74">[<expr pos:start="307:65" pos:end="307:73"><name pos:start="307:65" pos:end="307:73">quant_mat</name></expr>]</index><index pos:start="307:75" pos:end="307:77">[<expr pos:start="307:76" pos:end="307:76"><literal type="number" pos:start="307:76" pos:end="307:76">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:78"><expr pos:start="309:17" pos:end="309:77"><name pos:start="309:17" pos:end="309:33"><name pos:start="309:17" pos:end="309:20">band</name><operator pos:start="309:21" pos:end="309:22">-&gt;</operator><name pos:start="309:23" pos:end="309:33">inter_scale</name></name> <operator pos:start="309:35" pos:end="309:35">=</operator> <operator pos:start="309:37" pos:end="309:37">&amp;</operator><name pos:start="309:38" pos:end="309:77"><name pos:start="309:38" pos:end="309:63">ivi5_scale_quant_8x8_inter</name><index pos:start="309:64" pos:end="309:74">[<expr pos:start="309:65" pos:end="309:73"><name pos:start="309:65" pos:end="309:73">quant_mat</name></expr>]</index><index pos:start="309:75" pos:end="309:77">[<expr pos:start="309:76" pos:end="309:76"><literal type="number" pos:start="309:76" pos:end="309:76">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="311:15" pos:end="321:13">else <block pos:start="311:20" pos:end="321:13">{<block_content pos:start="313:17" pos:end="319:63">

                <expr_stmt pos:start="313:17" pos:end="313:62"><expr pos:start="313:17" pos:end="313:61"><name pos:start="313:17" pos:end="313:32"><name pos:start="313:17" pos:end="313:20">band</name><operator pos:start="313:21" pos:end="313:22">-&gt;</operator><name pos:start="313:23" pos:end="313:32">intra_base</name></name>  <operator pos:start="313:35" pos:end="313:35">=</operator> <name pos:start="313:37" pos:end="313:61">ivi5_base_quant_4x4_intra</name></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:62"><expr pos:start="315:17" pos:end="315:61"><name pos:start="315:17" pos:end="315:32"><name pos:start="315:17" pos:end="315:20">band</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:32">inter_base</name></name>  <operator pos:start="315:35" pos:end="315:35">=</operator> <name pos:start="315:37" pos:end="315:61">ivi5_base_quant_4x4_inter</name></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:63"><expr pos:start="317:17" pos:end="317:62"><name pos:start="317:17" pos:end="317:33"><name pos:start="317:17" pos:end="317:20">band</name><operator pos:start="317:21" pos:end="317:22">-&gt;</operator><name pos:start="317:23" pos:end="317:33">intra_scale</name></name> <operator pos:start="317:35" pos:end="317:35">=</operator> <name pos:start="317:37" pos:end="317:62">ivi5_scale_quant_4x4_intra</name></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:63"><expr pos:start="319:17" pos:end="319:62"><name pos:start="319:17" pos:end="319:33"><name pos:start="319:17" pos:end="319:20">band</name><operator pos:start="319:21" pos:end="319:22">-&gt;</operator><name pos:start="319:23" pos:end="319:33">inter_scale</name></name> <operator pos:start="319:35" pos:end="319:35">=</operator> <name pos:start="319:37" pos:end="319:62">ivi5_scale_quant_4x4_inter</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="325:13" pos:end="331:13"><if pos:start="325:13" pos:end="331:13">if <condition pos:start="325:16" pos:end="325:38">(<expr pos:start="325:17" pos:end="325:37"><call pos:start="325:17" pos:end="325:37"><name pos:start="325:17" pos:end="325:24">get_bits</name><argument_list pos:start="325:25" pos:end="325:37">(<argument pos:start="325:26" pos:end="325:33"><expr pos:start="325:26" pos:end="325:33"><operator pos:start="325:26" pos:end="325:26">&amp;</operator><name pos:start="325:27" pos:end="325:33"><name pos:start="325:27" pos:end="325:29">ctx</name><operator pos:start="325:30" pos:end="325:31">-&gt;</operator><name pos:start="325:32" pos:end="325:33">gb</name></name></expr></argument>, <argument pos:start="325:36" pos:end="325:36"><expr pos:start="325:36" pos:end="325:36"><literal type="number" pos:start="325:36" pos:end="325:36">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="325:40" pos:end="331:13">{<block_content pos:start="327:17" pos:end="329:43">

                <expr_stmt pos:start="327:17" pos:end="327:69"><expr pos:start="327:17" pos:end="327:68"><call pos:start="327:17" pos:end="327:68"><name pos:start="327:17" pos:end="327:22">av_log</name><argument_list pos:start="327:23" pos:end="327:68">(<argument pos:start="327:24" pos:end="327:28"><expr pos:start="327:24" pos:end="327:28"><name pos:start="327:24" pos:end="327:28">avctx</name></expr></argument>, <argument pos:start="327:31" pos:end="327:42"><expr pos:start="327:31" pos:end="327:42"><name pos:start="327:31" pos:end="327:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:45" pos:end="327:67"><expr pos:start="327:45" pos:end="327:67"><literal type="string" pos:start="327:45" pos:end="327:67">"End marker missing!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="329:17" pos:end="329:43">return <expr pos:start="329:24" pos:end="329:42"><name pos:start="329:24" pos:end="329:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="339:5" pos:end="339:58">/* copy chroma parameters into the 2nd chroma plane */</comment>

    <for pos:start="341:5" pos:end="377:5">for <control pos:start="341:9" pos:end="341:47">(<init pos:start="341:10" pos:end="341:15"><expr pos:start="341:10" pos:end="341:14"><name pos:start="341:10" pos:end="341:10">i</name> <operator pos:start="341:12" pos:end="341:12">=</operator> <literal type="number" pos:start="341:14" pos:end="341:14">0</literal></expr>;</init> <condition pos:start="341:17" pos:end="341:42"><expr pos:start="341:17" pos:end="341:41"><name pos:start="341:17" pos:end="341:17">i</name> <operator pos:start="341:19" pos:end="341:19">&lt;</operator> <name pos:start="341:21" pos:end="341:41"><name pos:start="341:21" pos:end="341:28">pic_conf</name><operator pos:start="341:29" pos:end="341:29">.</operator><name pos:start="341:30" pos:end="341:41">chroma_bands</name></name></expr>;</condition> <incr pos:start="341:44" pos:end="341:46"><expr pos:start="341:44" pos:end="341:46"><name pos:start="341:44" pos:end="341:44">i</name><operator pos:start="341:45" pos:end="341:46">++</operator></expr></incr>)</control> <block pos:start="341:49" pos:end="377:5">{<block_content pos:start="343:9" pos:end="375:53">

        <expr_stmt pos:start="343:9" pos:end="343:41"><expr pos:start="343:9" pos:end="343:40"><name pos:start="343:9" pos:end="343:13">band1</name> <operator pos:start="343:15" pos:end="343:15">=</operator> <operator pos:start="343:17" pos:end="343:17">&amp;</operator><name pos:start="343:18" pos:end="343:31"><name pos:start="343:18" pos:end="343:20">ctx</name><operator pos:start="343:21" pos:end="343:22">-&gt;</operator><name pos:start="343:23" pos:end="343:28">planes</name><index pos:start="343:29" pos:end="343:31">[<expr pos:start="343:30" pos:end="343:30"><literal type="number" pos:start="343:30" pos:end="343:30">1</literal></expr>]</index></name><operator pos:start="343:32" pos:end="343:32">.</operator><name pos:start="343:33" pos:end="343:40"><name pos:start="343:33" pos:end="343:37">bands</name><index pos:start="343:38" pos:end="343:40">[<expr pos:start="343:39" pos:end="343:39"><name pos:start="343:39" pos:end="343:39">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:41"><expr pos:start="345:9" pos:end="345:40"><name pos:start="345:9" pos:end="345:13">band2</name> <operator pos:start="345:15" pos:end="345:15">=</operator> <operator pos:start="345:17" pos:end="345:17">&amp;</operator><name pos:start="345:18" pos:end="345:31"><name pos:start="345:18" pos:end="345:20">ctx</name><operator pos:start="345:21" pos:end="345:22">-&gt;</operator><name pos:start="345:23" pos:end="345:28">planes</name><index pos:start="345:29" pos:end="345:31">[<expr pos:start="345:30" pos:end="345:30"><literal type="number" pos:start="345:30" pos:end="345:30">2</literal></expr>]</index></name><operator pos:start="345:32" pos:end="345:32">.</operator><name pos:start="345:33" pos:end="345:40"><name pos:start="345:33" pos:end="345:37">bands</name><index pos:start="345:38" pos:end="345:40">[<expr pos:start="345:39" pos:end="345:39"><name pos:start="345:39" pos:end="345:39">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="349:9" pos:end="349:44"><expr pos:start="349:9" pos:end="349:43"><name pos:start="349:9" pos:end="349:20"><name pos:start="349:9" pos:end="349:13">band2</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:20">width</name></name>         <operator pos:start="349:30" pos:end="349:30">=</operator> <name pos:start="349:32" pos:end="349:43"><name pos:start="349:32" pos:end="349:36">band1</name><operator pos:start="349:37" pos:end="349:38">-&gt;</operator><name pos:start="349:39" pos:end="349:43">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:45"><expr pos:start="351:9" pos:end="351:44"><name pos:start="351:9" pos:end="351:21"><name pos:start="351:9" pos:end="351:13">band2</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:21">height</name></name>        <operator pos:start="351:30" pos:end="351:30">=</operator> <name pos:start="351:32" pos:end="351:44"><name pos:start="351:32" pos:end="351:36">band1</name><operator pos:start="351:37" pos:end="351:38">-&gt;</operator><name pos:start="351:39" pos:end="351:44">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:46"><expr pos:start="353:9" pos:end="353:45"><name pos:start="353:9" pos:end="353:22"><name pos:start="353:9" pos:end="353:13">band2</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:22">mb_size</name></name>       <operator pos:start="353:30" pos:end="353:30">=</operator> <name pos:start="353:32" pos:end="353:45"><name pos:start="353:32" pos:end="353:36">band1</name><operator pos:start="353:37" pos:end="353:38">-&gt;</operator><name pos:start="353:39" pos:end="353:45">mb_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:47"><expr pos:start="355:9" pos:end="355:46"><name pos:start="355:9" pos:end="355:23"><name pos:start="355:9" pos:end="355:13">band2</name><operator pos:start="355:14" pos:end="355:15">-&gt;</operator><name pos:start="355:16" pos:end="355:23">blk_size</name></name>      <operator pos:start="355:30" pos:end="355:30">=</operator> <name pos:start="355:32" pos:end="355:46"><name pos:start="355:32" pos:end="355:36">band1</name><operator pos:start="355:37" pos:end="355:38">-&gt;</operator><name pos:start="355:39" pos:end="355:46">blk_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:49"><expr pos:start="357:9" pos:end="357:48"><name pos:start="357:9" pos:end="357:25"><name pos:start="357:9" pos:end="357:13">band2</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:25">is_halfpel</name></name>    <operator pos:start="357:30" pos:end="357:30">=</operator> <name pos:start="357:32" pos:end="357:48"><name pos:start="357:32" pos:end="357:36">band1</name><operator pos:start="357:37" pos:end="357:38">-&gt;</operator><name pos:start="357:39" pos:end="357:48">is_halfpel</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:49"><expr pos:start="359:9" pos:end="359:48"><name pos:start="359:9" pos:end="359:25"><name pos:start="359:9" pos:end="359:13">band2</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:25">intra_base</name></name>    <operator pos:start="359:30" pos:end="359:30">=</operator> <name pos:start="359:32" pos:end="359:48"><name pos:start="359:32" pos:end="359:36">band1</name><operator pos:start="359:37" pos:end="359:38">-&gt;</operator><name pos:start="359:39" pos:end="359:48">intra_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:49"><expr pos:start="361:9" pos:end="361:48"><name pos:start="361:9" pos:end="361:25"><name pos:start="361:9" pos:end="361:13">band2</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:25">inter_base</name></name>    <operator pos:start="361:30" pos:end="361:30">=</operator> <name pos:start="361:32" pos:end="361:48"><name pos:start="361:32" pos:end="361:36">band1</name><operator pos:start="361:37" pos:end="361:38">-&gt;</operator><name pos:start="361:39" pos:end="361:48">inter_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:50"><expr pos:start="363:9" pos:end="363:49"><name pos:start="363:9" pos:end="363:26"><name pos:start="363:9" pos:end="363:13">band2</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:26">intra_scale</name></name>   <operator pos:start="363:30" pos:end="363:30">=</operator> <name pos:start="363:32" pos:end="363:49"><name pos:start="363:32" pos:end="363:36">band1</name><operator pos:start="363:37" pos:end="363:38">-&gt;</operator><name pos:start="363:39" pos:end="363:49">intra_scale</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:50"><expr pos:start="365:9" pos:end="365:49"><name pos:start="365:9" pos:end="365:26"><name pos:start="365:9" pos:end="365:13">band2</name><operator pos:start="365:14" pos:end="365:15">-&gt;</operator><name pos:start="365:16" pos:end="365:26">inter_scale</name></name>   <operator pos:start="365:30" pos:end="365:30">=</operator> <name pos:start="365:32" pos:end="365:49"><name pos:start="365:32" pos:end="365:36">band1</name><operator pos:start="365:37" pos:end="365:38">-&gt;</operator><name pos:start="365:39" pos:end="365:49">inter_scale</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:43"><expr pos:start="367:9" pos:end="367:42"><name pos:start="367:9" pos:end="367:19"><name pos:start="367:9" pos:end="367:13">band2</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:19">scan</name></name>          <operator pos:start="367:30" pos:end="367:30">=</operator> <name pos:start="367:32" pos:end="367:42"><name pos:start="367:32" pos:end="367:36">band1</name><operator pos:start="367:37" pos:end="367:38">-&gt;</operator><name pos:start="367:39" pos:end="367:42">scan</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:52"><expr pos:start="369:9" pos:end="369:51"><name pos:start="369:9" pos:end="369:28"><name pos:start="369:9" pos:end="369:13">band2</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:28">inv_transform</name></name> <operator pos:start="369:30" pos:end="369:30">=</operator> <name pos:start="369:32" pos:end="369:51"><name pos:start="369:32" pos:end="369:36">band1</name><operator pos:start="369:37" pos:end="369:38">-&gt;</operator><name pos:start="369:39" pos:end="369:51">inv_transform</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:51"><expr pos:start="371:9" pos:end="371:50"><name pos:start="371:9" pos:end="371:27"><name pos:start="371:9" pos:end="371:13">band2</name><operator pos:start="371:14" pos:end="371:15">-&gt;</operator><name pos:start="371:16" pos:end="371:27">dc_transform</name></name>  <operator pos:start="371:30" pos:end="371:30">=</operator> <name pos:start="371:32" pos:end="371:50"><name pos:start="371:32" pos:end="371:36">band1</name><operator pos:start="371:37" pos:end="371:38">-&gt;</operator><name pos:start="371:39" pos:end="371:50">dc_transform</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:50"><expr pos:start="373:9" pos:end="373:49"><name pos:start="373:9" pos:end="373:26"><name pos:start="373:9" pos:end="373:13">band2</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:26">is_2d_trans</name></name>   <operator pos:start="373:30" pos:end="373:30">=</operator> <name pos:start="373:32" pos:end="373:49"><name pos:start="373:32" pos:end="373:36">band1</name><operator pos:start="373:37" pos:end="373:38">-&gt;</operator><name pos:start="373:39" pos:end="373:49">is_2d_trans</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:53"><expr pos:start="375:9" pos:end="375:52"><name pos:start="375:9" pos:end="375:29"><name pos:start="375:9" pos:end="375:13">band2</name><operator pos:start="375:14" pos:end="375:15">-&gt;</operator><name pos:start="375:16" pos:end="375:29">transform_size</name></name><operator pos:start="375:30" pos:end="375:30">=</operator> <name pos:start="375:32" pos:end="375:52"><name pos:start="375:32" pos:end="375:36">band1</name><operator pos:start="375:37" pos:end="375:38">-&gt;</operator><name pos:start="375:39" pos:end="375:52">transform_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="381:5" pos:end="381:50">/* reallocate internal structures if needed */</comment>

    <if_stmt pos:start="383:5" pos:end="399:5"><if pos:start="383:5" pos:end="399:5">if <condition pos:start="383:8" pos:end="383:25">(<expr pos:start="383:9" pos:end="383:24"><name pos:start="383:9" pos:end="383:24">blk_size_changed</name></expr>)</condition> <block pos:start="383:27" pos:end="399:5">{<block_content pos:start="385:9" pos:end="397:9">

        <expr_stmt pos:start="385:9" pos:end="387:57"><expr pos:start="385:9" pos:end="387:56"><name pos:start="385:9" pos:end="385:14">result</name> <operator pos:start="385:16" pos:end="385:16">=</operator> <call pos:start="385:18" pos:end="387:56"><name pos:start="385:18" pos:end="385:34">ff_ivi_init_tiles</name><argument_list pos:start="385:35" pos:end="387:56">(<argument pos:start="385:36" pos:end="385:46"><expr pos:start="385:36" pos:end="385:46"><name pos:start="385:36" pos:end="385:46"><name pos:start="385:36" pos:end="385:38">ctx</name><operator pos:start="385:39" pos:end="385:40">-&gt;</operator><name pos:start="385:41" pos:end="385:46">planes</name></name></expr></argument>, <argument pos:start="385:49" pos:end="385:67"><expr pos:start="385:49" pos:end="385:67"><name pos:start="385:49" pos:end="385:67"><name pos:start="385:49" pos:end="385:56">pic_conf</name><operator pos:start="385:57" pos:end="385:57">.</operator><name pos:start="385:58" pos:end="385:67">tile_width</name></name></expr></argument>,

                                   <argument pos:start="387:36" pos:end="387:55"><expr pos:start="387:36" pos:end="387:55"><name pos:start="387:36" pos:end="387:55"><name pos:start="387:36" pos:end="387:43">pic_conf</name><operator pos:start="387:44" pos:end="387:44">.</operator><name pos:start="387:45" pos:end="387:55">tile_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="389:9" pos:end="397:9"><if pos:start="389:9" pos:end="397:9">if <condition pos:start="389:12" pos:end="389:23">(<expr pos:start="389:13" pos:end="389:22"><name pos:start="389:13" pos:end="389:18">result</name> <operator pos:start="389:20" pos:end="389:20">&lt;</operator> <literal type="number" pos:start="389:22" pos:end="389:22">0</literal></expr>)</condition> <block pos:start="389:25" pos:end="397:9">{<block_content pos:start="391:13" pos:end="395:26">

            <expr_stmt pos:start="391:13" pos:end="393:65"><expr pos:start="391:13" pos:end="393:64"><call pos:start="391:13" pos:end="393:64"><name pos:start="391:13" pos:end="391:18">av_log</name><argument_list pos:start="391:19" pos:end="393:64">(<argument pos:start="391:20" pos:end="391:24"><expr pos:start="391:20" pos:end="391:24"><name pos:start="391:20" pos:end="391:24">avctx</name></expr></argument>, <argument pos:start="391:27" pos:end="391:38"><expr pos:start="391:27" pos:end="391:38"><name pos:start="391:27" pos:end="391:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="393:20" pos:end="393:63"><expr pos:start="393:20" pos:end="393:63"><literal type="string" pos:start="393:20" pos:end="393:63">"Couldn't reallocate internal structures!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="395:13" pos:end="395:26">return <expr pos:start="395:20" pos:end="395:25"><name pos:start="395:20" pos:end="395:25">result</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="403:5" pos:end="419:5"><if pos:start="403:5" pos:end="419:5">if <condition pos:start="403:8" pos:end="403:27">(<expr pos:start="403:9" pos:end="403:26"><name pos:start="403:9" pos:end="403:22"><name pos:start="403:9" pos:end="403:11">ctx</name><operator pos:start="403:12" pos:end="403:13">-&gt;</operator><name pos:start="403:14" pos:end="403:22">gop_flags</name></name> <operator pos:start="403:24" pos:end="403:24">&amp;</operator> <literal type="number" pos:start="403:26" pos:end="403:26">8</literal></expr>)</condition> <block pos:start="403:29" pos:end="419:5">{<block_content pos:start="405:9" pos:end="417:41">

        <if_stmt pos:start="405:9" pos:end="411:9"><if pos:start="405:9" pos:end="411:9">if <condition pos:start="405:12" pos:end="405:34">(<expr pos:start="405:13" pos:end="405:33"><call pos:start="405:13" pos:end="405:33"><name pos:start="405:13" pos:end="405:20">get_bits</name><argument_list pos:start="405:21" pos:end="405:33">(<argument pos:start="405:22" pos:end="405:29"><expr pos:start="405:22" pos:end="405:29"><operator pos:start="405:22" pos:end="405:22">&amp;</operator><name pos:start="405:23" pos:end="405:29"><name pos:start="405:23" pos:end="405:25">ctx</name><operator pos:start="405:26" pos:end="405:27">-&gt;</operator><name pos:start="405:28" pos:end="405:29">gb</name></name></expr></argument>, <argument pos:start="405:32" pos:end="405:32"><expr pos:start="405:32" pos:end="405:32"><literal type="number" pos:start="405:32" pos:end="405:32">3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="405:36" pos:end="411:9">{<block_content pos:start="407:13" pos:end="409:39">

            <expr_stmt pos:start="407:13" pos:end="407:74"><expr pos:start="407:13" pos:end="407:73"><call pos:start="407:13" pos:end="407:73"><name pos:start="407:13" pos:end="407:18">av_log</name><argument_list pos:start="407:19" pos:end="407:73">(<argument pos:start="407:20" pos:end="407:24"><expr pos:start="407:20" pos:end="407:24"><name pos:start="407:20" pos:end="407:24">avctx</name></expr></argument>, <argument pos:start="407:27" pos:end="407:38"><expr pos:start="407:27" pos:end="407:38"><name pos:start="407:27" pos:end="407:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="407:41" pos:end="407:72"><expr pos:start="407:41" pos:end="407:72"><literal type="string" pos:start="407:41" pos:end="407:72">"Alignment bits are not zero!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="409:13" pos:end="409:39">return <expr pos:start="409:20" pos:end="409:38"><name pos:start="409:20" pos:end="409:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="415:9" pos:end="417:41"><if pos:start="415:9" pos:end="417:41">if <condition pos:start="415:12" pos:end="415:32">(<expr pos:start="415:13" pos:end="415:31"><call pos:start="415:13" pos:end="415:31"><name pos:start="415:13" pos:end="415:21">get_bits1</name><argument_list pos:start="415:22" pos:end="415:31">(<argument pos:start="415:23" pos:end="415:30"><expr pos:start="415:23" pos:end="415:30"><operator pos:start="415:23" pos:end="415:23">&amp;</operator><name pos:start="415:24" pos:end="415:30"><name pos:start="415:24" pos:end="415:26">ctx</name><operator pos:start="415:27" pos:end="415:28">-&gt;</operator><name pos:start="415:29" pos:end="415:30">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="417:13" pos:end="417:41"><block_content pos:start="417:13" pos:end="417:41">

            <expr_stmt pos:start="417:13" pos:end="417:41"><expr pos:start="417:13" pos:end="417:40"><call pos:start="417:13" pos:end="417:40"><name pos:start="417:13" pos:end="417:26">skip_bits_long</name><argument_list pos:start="417:27" pos:end="417:40">(<argument pos:start="417:28" pos:end="417:35"><expr pos:start="417:28" pos:end="417:35"><operator pos:start="417:28" pos:end="417:28">&amp;</operator><name pos:start="417:29" pos:end="417:35"><name pos:start="417:29" pos:end="417:31">ctx</name><operator pos:start="417:32" pos:end="417:33">-&gt;</operator><name pos:start="417:34" pos:end="417:35">gb</name></name></expr></argument>, <argument pos:start="417:38" pos:end="417:39"><expr pos:start="417:38" pos:end="417:39"><literal type="number" pos:start="417:38" pos:end="417:39">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="417:43" pos:end="417:76">/* skip transparency fill color */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="423:5" pos:end="423:29"><expr pos:start="423:5" pos:end="423:28"><call pos:start="423:5" pos:end="423:28"><name pos:start="423:5" pos:end="423:18">align_get_bits</name><argument_list pos:start="423:19" pos:end="423:28">(<argument pos:start="423:20" pos:end="423:27"><expr pos:start="423:20" pos:end="423:27"><operator pos:start="423:20" pos:end="423:20">&amp;</operator><name pos:start="423:21" pos:end="423:27"><name pos:start="423:21" pos:end="423:23">ctx</name><operator pos:start="423:24" pos:end="423:25">-&gt;</operator><name pos:start="423:26" pos:end="423:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="427:5" pos:end="427:28"><expr pos:start="427:5" pos:end="427:27"><call pos:start="427:5" pos:end="427:27"><name pos:start="427:5" pos:end="427:13">skip_bits</name><argument_list pos:start="427:14" pos:end="427:27">(<argument pos:start="427:15" pos:end="427:22"><expr pos:start="427:15" pos:end="427:22"><operator pos:start="427:15" pos:end="427:15">&amp;</operator><name pos:start="427:16" pos:end="427:22"><name pos:start="427:16" pos:end="427:18">ctx</name><operator pos:start="427:19" pos:end="427:20">-&gt;</operator><name pos:start="427:21" pos:end="427:22">gb</name></name></expr></argument>, <argument pos:start="427:25" pos:end="427:26"><expr pos:start="427:25" pos:end="427:26"><literal type="number" pos:start="427:25" pos:end="427:26">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="427:30" pos:end="427:57">/* FIXME: unknown meaning */</comment>



    <comment type="block" pos:start="431:5" pos:end="431:35">/* skip GOP extension if any */</comment>

    <if_stmt pos:start="433:5" pos:end="441:5"><if pos:start="433:5" pos:end="441:5">if <condition pos:start="433:8" pos:end="433:28">(<expr pos:start="433:9" pos:end="433:27"><call pos:start="433:9" pos:end="433:27"><name pos:start="433:9" pos:end="433:17">get_bits1</name><argument_list pos:start="433:18" pos:end="433:27">(<argument pos:start="433:19" pos:end="433:26"><expr pos:start="433:19" pos:end="433:26"><operator pos:start="433:19" pos:end="433:19">&amp;</operator><name pos:start="433:20" pos:end="433:26"><name pos:start="433:20" pos:end="433:22">ctx</name><operator pos:start="433:23" pos:end="433:24">-&gt;</operator><name pos:start="433:25" pos:end="433:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="433:30" pos:end="441:5">{<block_content pos:start="435:9" pos:end="439:29">

        <do pos:start="435:9" pos:end="439:29">do <block pos:start="435:12" pos:end="439:9">{<block_content pos:start="437:13" pos:end="437:39">

            <expr_stmt pos:start="437:13" pos:end="437:39"><expr pos:start="437:13" pos:end="437:38"><name pos:start="437:13" pos:end="437:13">i</name> <operator pos:start="437:15" pos:end="437:15">=</operator> <call pos:start="437:17" pos:end="437:38"><name pos:start="437:17" pos:end="437:24">get_bits</name><argument_list pos:start="437:25" pos:end="437:38">(<argument pos:start="437:26" pos:end="437:33"><expr pos:start="437:26" pos:end="437:33"><operator pos:start="437:26" pos:end="437:26">&amp;</operator><name pos:start="437:27" pos:end="437:33"><name pos:start="437:27" pos:end="437:29">ctx</name><operator pos:start="437:30" pos:end="437:31">-&gt;</operator><name pos:start="437:32" pos:end="437:33">gb</name></name></expr></argument>, <argument pos:start="437:36" pos:end="437:37"><expr pos:start="437:36" pos:end="437:37"><literal type="number" pos:start="437:36" pos:end="437:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="439:17" pos:end="439:28">(<expr pos:start="439:18" pos:end="439:27"><name pos:start="439:18" pos:end="439:18">i</name> <operator pos:start="439:20" pos:end="439:20">&amp;</operator> <literal type="number" pos:start="439:22" pos:end="439:27">0x8000</literal></expr>)</condition>;</do>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="445:5" pos:end="445:29"><expr pos:start="445:5" pos:end="445:28"><call pos:start="445:5" pos:end="445:28"><name pos:start="445:5" pos:end="445:18">align_get_bits</name><argument_list pos:start="445:19" pos:end="445:28">(<argument pos:start="445:20" pos:end="445:27"><expr pos:start="445:20" pos:end="445:27"><operator pos:start="445:20" pos:end="445:20">&amp;</operator><name pos:start="445:21" pos:end="445:27"><name pos:start="445:21" pos:end="445:23">ctx</name><operator pos:start="445:24" pos:end="445:25">-&gt;</operator><name pos:start="445:26" pos:end="445:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="449:5" pos:end="449:13">return <expr pos:start="449:12" pos:end="449:12"><literal type="number" pos:start="449:12" pos:end="449:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
