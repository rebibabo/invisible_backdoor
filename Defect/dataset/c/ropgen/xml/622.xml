<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/622.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">CPUARMState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:29">target_rt_sigframe</name></name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:30">env</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:37">xregs</name><index pos:start="7:38" pos:end="7:41">[<expr pos:start="7:39" pos:end="7:40"><literal type="number" pos:start="7:39" pos:end="7:40">31</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:18">frame_addr</name> <operator pos:start="11:20" pos:end="11:20">&amp;</operator> <literal type="number" pos:start="11:22" pos:end="11:23">15</literal></expr>)</condition> <block pos:start="11:26" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:22">

        <goto pos:start="13:9" pos:end="13:22">goto <name pos:start="13:14" pos:end="13:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if  <condition pos:start="19:9" pos:end="19:62">(<expr pos:start="19:10" pos:end="19:61"><operator pos:start="19:10" pos:end="19:10">!</operator><call pos:start="19:11" pos:end="19:61"><name pos:start="19:11" pos:end="19:26">lock_user_struct</name><argument_list pos:start="19:27" pos:end="19:61">(<argument pos:start="19:28" pos:end="19:38"><expr pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:38">VERIFY_READ</name></expr></argument>, <argument pos:start="19:41" pos:end="19:45"><expr pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:45">frame</name></expr></argument>, <argument pos:start="19:48" pos:end="19:57"><expr pos:start="19:48" pos:end="19:57"><name pos:start="19:48" pos:end="19:57">frame_addr</name></expr></argument>, <argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:64" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:22">

        <goto pos:start="21:9" pos:end="21:22">goto <name pos:start="21:14" pos:end="21:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:44">(<expr pos:start="27:9" pos:end="27:43"><call pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:31">target_restore_sigframe</name><argument_list pos:start="27:32" pos:end="27:43">(<argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:35">env</name></expr></argument>, <argument pos:start="27:38" pos:end="27:42"><expr pos:start="27:38" pos:end="27:42"><name pos:start="27:38" pos:end="27:42">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:46" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:22">

        <goto pos:start="29:9" pos:end="29:22">goto <name pos:start="29:14" pos:end="29:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="39:53">(<expr pos:start="35:9" pos:end="39:52"><call pos:start="35:9" pos:end="39:41"><name pos:start="35:9" pos:end="35:22">do_sigaltstack</name><argument_list pos:start="35:23" pos:end="39:41">(<argument pos:start="35:24" pos:end="37:61"><expr pos:start="35:24" pos:end="37:61"><name pos:start="35:24" pos:end="35:33">frame_addr</name> <operator pos:start="35:35" pos:end="35:35">+</operator>

            <call pos:start="37:13" pos:end="37:61"><name pos:start="37:13" pos:end="37:20">offsetof</name><argument_list pos:start="37:21" pos:end="37:61">(<argument pos:start="37:22" pos:end="37:46"><expr pos:start="37:22" pos:end="37:46">struct <name pos:start="37:29" pos:end="37:46">target_rt_sigframe</name></expr></argument>, <argument pos:start="37:49" pos:end="37:60"><expr pos:start="37:49" pos:end="37:60"><name pos:start="37:49" pos:end="37:60"><name pos:start="37:49" pos:end="37:50">uc</name><operator pos:start="37:51" pos:end="37:51">.</operator><name pos:start="37:52" pos:end="37:60">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>,

            <argument pos:start="39:13" pos:end="39:13"><expr pos:start="39:13" pos:end="39:13"><literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr></argument>, <argument pos:start="39:16" pos:end="39:40"><expr pos:start="39:16" pos:end="39:40"><call pos:start="39:16" pos:end="39:40"><name pos:start="39:16" pos:end="39:35">get_sp_from_cpustate</name><argument_list pos:start="39:36" pos:end="39:40">(<argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:39">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="39:43" pos:end="39:44">==</operator> <operator pos:start="39:46" pos:end="39:46">-</operator><name pos:start="39:47" pos:end="39:52">EFAULT</name></expr>)</condition> <block pos:start="39:55" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:22">

        <goto pos:start="41:9" pos:end="41:22">goto <name pos:start="41:14" pos:end="41:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><call pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:22">unlock_user_struct</name><argument_list pos:start="47:23" pos:end="47:44">(<argument pos:start="47:24" pos:end="47:28"><expr pos:start="47:24" pos:end="47:28"><name pos:start="47:24" pos:end="47:28">frame</name></expr></argument>, <argument pos:start="47:31" pos:end="47:40"><expr pos:start="47:31" pos:end="47:40"><name pos:start="47:31" pos:end="47:40">frame_addr</name></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:25">return <expr pos:start="49:12" pos:end="49:24"><name pos:start="49:12" pos:end="49:24"><name pos:start="49:12" pos:end="49:14">env</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">xregs</name><index pos:start="49:22" pos:end="49:24">[<expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>]</index></name></expr>;</return>



 <label pos:start="53:2" pos:end="53:10"><name pos:start="53:2" pos:end="53:9">badframe</name>:</label>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:22">unlock_user_struct</name><argument_list pos:start="55:23" pos:end="55:44">(<argument pos:start="55:24" pos:end="55:28"><expr pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:28">frame</name></expr></argument>, <argument pos:start="55:31" pos:end="55:40"><expr pos:start="55:31" pos:end="55:40"><name pos:start="55:31" pos:end="55:40">frame_addr</name></expr></argument>, <argument pos:start="55:43" pos:end="55:43"><expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><call pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:13">force_sig</name><argument_list pos:start="57:14" pos:end="57:29">(<argument pos:start="57:15" pos:end="57:28"><expr pos:start="57:15" pos:end="57:28"><name pos:start="57:15" pos:end="57:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
