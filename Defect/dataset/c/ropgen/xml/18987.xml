<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18987.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:26">SocketAddressLegacy</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:45">sd_socket_address</name><parameter_list pos:start="1:46" pos:end="3:75">(<parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">path</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:56"><decl pos:start="3:41" pos:end="3:56"><type pos:start="3:41" pos:end="3:56"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:50">char</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:56">host</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:74"><decl pos:start="3:59" pos:end="3:74"><type pos:start="3:59" pos:end="3:74"><specifier pos:start="3:59" pos:end="3:63">const</specifier> <name pos:start="3:65" pos:end="3:68">char</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:74">port</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:16">

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">SocketAddressLegacy</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">addr</name> <init pos:start="7:31" pos:end="7:62">= <expr pos:start="7:33" pos:end="7:62"><call pos:start="7:33" pos:end="7:62"><name pos:start="7:33" pos:end="7:38">g_new0</name><argument_list pos:start="7:39" pos:end="7:62">(<argument pos:start="7:40" pos:end="7:58"><expr pos:start="7:40" pos:end="7:58"><name pos:start="7:40" pos:end="7:58">SocketAddressLegacy</name></expr></argument>, <argument pos:start="7:61" pos:end="7:61"><expr pos:start="7:61" pos:end="7:61"><literal type="number" pos:start="7:61" pos:end="7:61">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">path</name></expr>)</condition> <block pos:start="11:15" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:51">

        <expr_stmt pos:start="13:9" pos:end="13:53"><expr pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:12">addr</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:18">type</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:52">SOCKET_ADDRESS_LEGACY_KIND_UNIX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:59"><expr pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:12">addr</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:15">u</name><operator pos:start="15:16" pos:end="15:16">.</operator><name pos:start="15:17" pos:end="15:22">q_unix</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">data</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator> <call pos:start="15:31" pos:end="15:58"><name pos:start="15:31" pos:end="15:36">g_new0</name><argument_list pos:start="15:37" pos:end="15:58">(<argument pos:start="15:38" pos:end="15:54"><expr pos:start="15:38" pos:end="15:54"><name pos:start="15:38" pos:end="15:54">UnixSocketAddress</name></expr></argument>, <argument pos:start="15:57" pos:end="15:57"><expr pos:start="15:57" pos:end="15:57"><literal type="number" pos:start="15:57" pos:end="15:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:12">addr</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:15">u</name><operator pos:start="17:16" pos:end="17:16">.</operator><name pos:start="17:17" pos:end="17:22">q_unix</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:27">data</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:33">path</name></name> <operator pos:start="17:35" pos:end="17:35">=</operator> <call pos:start="17:37" pos:end="17:50"><name pos:start="17:37" pos:end="17:44">g_strdup</name><argument_list pos:start="17:45" pos:end="17:50">(<argument pos:start="17:46" pos:end="17:49"><expr pos:start="17:46" pos:end="17:49"><name pos:start="17:46" pos:end="17:49">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="29:5">else <block pos:start="19:12" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:79">

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:12">addr</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:18">type</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:52">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:57"><expr pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:12">addr</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:15">u</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:20">inet</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:25">data</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <call pos:start="23:29" pos:end="23:56"><name pos:start="23:29" pos:end="23:34">g_new0</name><argument_list pos:start="23:35" pos:end="23:56">(<argument pos:start="23:36" pos:end="23:52"><expr pos:start="23:36" pos:end="23:52"><name pos:start="23:36" pos:end="23:52">InetSocketAddress</name></expr></argument>, <argument pos:start="23:55" pos:end="23:55"><expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:68"><expr pos:start="25:9" pos:end="25:67"><name pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:12">addr</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:15">u</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:20">inet</name><operator pos:start="25:21" pos:end="25:21">.</operator><name pos:start="25:22" pos:end="25:25">data</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">host</name></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <call pos:start="25:35" pos:end="25:67"><name pos:start="25:35" pos:end="25:42">g_strdup</name><argument_list pos:start="25:43" pos:end="25:67">(<argument pos:start="25:44" pos:end="25:66"><expr pos:start="25:44" pos:end="25:66"><ternary pos:start="25:44" pos:end="25:66"><condition pos:start="25:44" pos:end="25:49"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">host</name></expr> ?</condition><then/><else pos:start="25:50" pos:end="25:66">: <expr pos:start="25:52" pos:end="25:66"><name pos:start="25:52" pos:end="25:66">SD_DEFAULT_ADDR</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:79"><expr pos:start="27:9" pos:end="27:78"><name pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:12">addr</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:15">u</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:20">inet</name><operator pos:start="27:21" pos:end="27:21">.</operator><name pos:start="27:22" pos:end="27:25">data</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:31">port</name></name> <operator pos:start="27:33" pos:end="27:33">=</operator> <call pos:start="27:35" pos:end="27:78"><name pos:start="27:35" pos:end="27:42">g_strdup</name><argument_list pos:start="27:43" pos:end="27:78">(<argument pos:start="27:44" pos:end="27:77"><expr pos:start="27:44" pos:end="27:77"><ternary pos:start="27:44" pos:end="27:77"><condition pos:start="27:44" pos:end="27:49"><expr pos:start="27:44" pos:end="27:47"><name pos:start="27:44" pos:end="27:47">port</name></expr> ?</condition><then/><else pos:start="27:50" pos:end="27:77">: <expr pos:start="27:52" pos:end="27:77"><call pos:start="27:52" pos:end="27:77"><name pos:start="27:52" pos:end="27:60">stringify</name><argument_list pos:start="27:61" pos:end="27:77">(<argument pos:start="27:62" pos:end="27:76"><expr pos:start="27:62" pos:end="27:76"><name pos:start="27:62" pos:end="27:76">SD_DEFAULT_PORT</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="33:5" pos:end="33:16">return <expr pos:start="33:12" pos:end="33:15"><name pos:start="33:12" pos:end="33:15">addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
