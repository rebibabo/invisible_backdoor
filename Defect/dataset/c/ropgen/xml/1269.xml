<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1269.c" pos:tabs="8"><function pos:start="1:1" pos:end="369:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vc1_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="369:1">{<block_content pos:start="9:5" pos:end="367:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">VC1Context</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">v</name> <init pos:start="13:19" pos:end="13:36">= <expr pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:25">avctx</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">MpegEncContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:21">s</name> <init pos:start="15:23" pos:end="15:29">= <expr pos:start="15:25" pos:end="15:29"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:26">v</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:17">buf2</name> <init pos:start="19:19" pos:end="19:24">= <expr pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:28">buf_start</name> <init pos:start="21:30" pos:end="21:34">= <expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">buf</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="27:5" pos:end="47:5"><if pos:start="27:5" pos:end="47:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:16">buf_size</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>)</condition> <block pos:start="27:24" pos:end="47:5">{<block_content pos:start="31:9" pos:end="45:17">

        <comment type="block" pos:start="29:9" pos:end="29:43">/* special case for last picture */</comment>

        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:51">(<expr pos:start="31:13" pos:end="31:50"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">low_delay</name></name><operator pos:start="31:25" pos:end="31:26">==</operator><literal type="number" pos:start="31:27" pos:end="31:27">0</literal> <operator pos:start="31:29" pos:end="31:30">&amp;&amp;</operator> <name pos:start="31:32" pos:end="31:50"><name pos:start="31:32" pos:end="31:32">s</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="31:53" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:41">

            <expr_stmt pos:start="33:13" pos:end="33:50"><expr pos:start="33:13" pos:end="33:49"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:17">pict</name><operator pos:start="33:18" pos:end="33:18">=</operator> <operator pos:start="33:20" pos:end="33:20">*</operator><operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:28">AVFrame</name><operator pos:start="33:29" pos:end="33:29">*</operator><operator pos:start="33:30" pos:end="33:30">)</operator><name pos:start="33:31" pos:end="33:49"><name pos:start="33:31" pos:end="33:31">s</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:49">next_picture_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:38"><expr pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:31">next_picture_ptr</name></name><operator pos:start="35:32" pos:end="35:32">=</operator> <name pos:start="35:34" pos:end="35:37">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="39:13" pos:end="39:41"><expr pos:start="39:13" pos:end="39:40"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:22">data_size</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <sizeof pos:start="39:26" pos:end="39:40">sizeof<argument_list pos:start="39:32" pos:end="39:40">(<argument pos:start="39:33" pos:end="39:39"><expr pos:start="39:33" pos:end="39:39"><name pos:start="39:33" pos:end="39:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="53:54">/* We need to set current_picture_ptr before reading the header,

     * otherwise we cannot store anything in there. */</comment>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if<condition pos:start="55:7" pos:end="55:71">(<expr pos:start="55:8" pos:end="55:70"><name pos:start="55:8" pos:end="55:29"><name pos:start="55:8" pos:end="55:8">s</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:29">current_picture_ptr</name></name><operator pos:start="55:30" pos:end="55:31">==</operator><name pos:start="55:32" pos:end="55:35">NULL</name> <operator pos:start="55:37" pos:end="55:38">||</operator> <name pos:start="55:40" pos:end="55:70"><name pos:start="55:40" pos:end="55:40">s</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:61">current_picture_ptr</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:67">data</name><index pos:start="55:68" pos:end="55:70">[<expr pos:start="55:69" pos:end="55:69"><literal type="number" pos:start="55:69" pos:end="55:69">0</literal></expr>]</index></name></expr>)</condition><block pos:start="55:72" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:47">

        <decl_stmt pos:start="57:9" pos:end="57:44"><decl pos:start="57:9" pos:end="57:43"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:13">i</name><init pos:start="57:14" pos:end="57:43">= <expr pos:start="57:16" pos:end="57:43"><call pos:start="57:16" pos:end="57:43"><name pos:start="57:16" pos:end="57:37">ff_find_unused_picture</name><argument_list pos:start="57:38" pos:end="57:43">(<argument pos:start="57:39" pos:end="57:39"><expr pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">s</name></expr></argument>, <argument pos:start="57:42" pos:end="57:42"><expr pos:start="57:42" pos:end="57:42"><literal type="number" pos:start="57:42" pos:end="57:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:30">current_picture_ptr</name></name><operator pos:start="59:31" pos:end="59:31">=</operator> <operator pos:start="59:33" pos:end="59:33">&amp;</operator><name pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:34">s</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:43">picture</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:62">(<expr pos:start="65:9" pos:end="65:61"><name pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:16">avctx</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">codec</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:37">capabilities</name></name><operator pos:start="65:38" pos:end="65:38">&amp;</operator><name pos:start="65:39" pos:end="65:61">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block pos:start="65:63" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:47">

        <if_stmt pos:start="67:9" pos:end="73:47"><if pos:start="67:9" pos:end="69:48">if <condition pos:start="67:12" pos:end="67:42">(<expr pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:13">v</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:22">profile</name></name> <operator pos:start="67:24" pos:end="67:24">&lt;</operator> <name pos:start="67:26" pos:end="67:41">PROFILE_ADVANCED</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:48"><block_content pos:start="69:13" pos:end="69:48">

            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:17">avctx</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:26">pix_fmt</name></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:47">PIX_FMT_VDPAU_WMV3</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="71:9" pos:end="73:47">else<block type="pseudo" pos:start="73:13" pos:end="73:47"><block_content pos:start="73:13" pos:end="73:47">

            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:17">avctx</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:26">pix_fmt</name></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:46">PIX_FMT_VDPAU_VC1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="79:5" pos:end="79:65">//for advanced profile we may need to parse and unescape data</comment>

    <if_stmt pos:start="81:5" pos:end="179:47"><if pos:start="81:5" pos:end="177:5">if <condition pos:start="81:8" pos:end="81:40">(<expr pos:start="81:9" pos:end="81:39"><name pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:13">avctx</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:23">codec_id</name></name> <operator pos:start="81:25" pos:end="81:26">==</operator> <name pos:start="81:28" pos:end="81:39">CODEC_ID_VC1</name></expr>)</condition> <block pos:start="81:42" pos:end="177:5">{<block_content pos:start="83:9" pos:end="175:49">

        <decl_stmt pos:start="83:9" pos:end="83:26"><decl pos:start="83:9" pos:end="83:25"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:21">buf_size2</name> <init pos:start="83:23" pos:end="83:25">= <expr pos:start="83:25" pos:end="83:25"><literal type="number" pos:start="83:25" pos:end="83:25">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:67"><expr pos:start="85:9" pos:end="85:66"><name pos:start="85:9" pos:end="85:12">buf2</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:66"><name pos:start="85:16" pos:end="85:25">av_mallocz</name><argument_list pos:start="85:26" pos:end="85:66">(<argument pos:start="85:27" pos:end="85:65"><expr pos:start="85:27" pos:end="85:65"><name pos:start="85:27" pos:end="85:34">buf_size</name> <operator pos:start="85:36" pos:end="85:36">+</operator> <name pos:start="85:38" pos:end="85:65">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="173:9"><if pos:start="89:9" pos:end="143:9">if<condition pos:start="89:11" pos:end="89:35">(<expr pos:start="89:12" pos:end="89:34"><call pos:start="89:12" pos:end="89:34"><name pos:start="89:12" pos:end="89:20">IS_MARKER</name><argument_list pos:start="89:21" pos:end="89:34">(<argument pos:start="89:22" pos:end="89:33"><expr pos:start="89:22" pos:end="89:33"><call pos:start="89:22" pos:end="89:33"><name pos:start="89:22" pos:end="89:28">AV_RB32</name><argument_list pos:start="89:29" pos:end="89:33">(<argument pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:32">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="89:36" pos:end="143:9">{<block_content pos:start="91:13" pos:end="141:13"> <comment type="block" pos:start="89:38" pos:end="89:90">/* frame starts with marker and needs to be parsed */</comment>

            <decl_stmt pos:start="91:13" pos:end="91:46"><decl pos:start="91:13" pos:end="91:32"><type pos:start="91:13" pos:end="91:27"><specifier pos:start="91:13" pos:end="91:17">const</specifier> <name pos:start="91:19" pos:end="91:25">uint8_t</name> <modifier pos:start="91:27" pos:end="91:27">*</modifier></type><name pos:start="91:28" pos:end="91:32">start</name></decl>, <decl pos:start="91:35" pos:end="91:38"><type ref="prev" pos:start="91:13" pos:end="91:27"><modifier pos:start="91:35" pos:end="91:35">*</modifier></type><name pos:start="91:36" pos:end="91:38">end</name></decl>, <decl pos:start="91:41" pos:end="91:45"><type ref="prev" pos:start="91:13" pos:end="91:27"><modifier pos:start="91:41" pos:end="91:41">*</modifier></type><name pos:start="91:42" pos:end="91:45">next</name></decl>;</decl_stmt>

            <decl_stmt pos:start="93:13" pos:end="93:21"><decl pos:start="93:13" pos:end="93:20"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:20">size</name></decl>;</decl_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:23"><expr pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:16">next</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:22">buf</name></expr>;</expr_stmt>

            <for pos:start="99:13" pos:end="141:13">for<control pos:start="99:16" pos:end="99:76">(<init pos:start="99:17" pos:end="99:50"><expr pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:21">start</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:27">buf</name></expr><operator pos:start="99:28" pos:end="99:28">,</operator> <expr pos:start="99:30" pos:end="99:49"><name pos:start="99:30" pos:end="99:32">end</name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:38">buf</name> <operator pos:start="99:40" pos:end="99:40">+</operator> <name pos:start="99:42" pos:end="99:49">buf_size</name></expr>;</init> <condition pos:start="99:52" pos:end="99:62"><expr pos:start="99:52" pos:end="99:61"><name pos:start="99:52" pos:end="99:55">next</name> <operator pos:start="99:57" pos:end="99:57">&lt;</operator> <name pos:start="99:59" pos:end="99:61">end</name></expr>;</condition> <incr pos:start="99:64" pos:end="99:75"><expr pos:start="99:64" pos:end="99:75"><name pos:start="99:64" pos:end="99:68">start</name> <operator pos:start="99:70" pos:end="99:70">=</operator> <name pos:start="99:72" pos:end="99:75">next</name></expr></incr>)</control><block pos:start="99:77" pos:end="141:13">{<block_content pos:start="101:17" pos:end="139:17">

                <expr_stmt pos:start="101:17" pos:end="101:56"><expr pos:start="101:17" pos:end="101:55"><name pos:start="101:17" pos:end="101:20">next</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:55"><name pos:start="101:24" pos:end="101:39">find_next_marker</name><argument_list pos:start="101:40" pos:end="101:55">(<argument pos:start="101:41" pos:end="101:49"><expr pos:start="101:41" pos:end="101:49"><name pos:start="101:41" pos:end="101:45">start</name> <operator pos:start="101:47" pos:end="101:47">+</operator> <literal type="number" pos:start="101:49" pos:end="101:49">4</literal></expr></argument>, <argument pos:start="101:52" pos:end="101:54"><expr pos:start="101:52" pos:end="101:54"><name pos:start="101:52" pos:end="101:54">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:40"><expr pos:start="103:17" pos:end="103:39"><name pos:start="103:17" pos:end="103:20">size</name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:27">next</name> <operator pos:start="103:29" pos:end="103:29">-</operator> <name pos:start="103:31" pos:end="103:35">start</name> <operator pos:start="103:37" pos:end="103:37">-</operator> <literal type="number" pos:start="103:39" pos:end="103:39">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="105:39"><if pos:start="105:17" pos:end="105:39">if<condition pos:start="105:19" pos:end="105:29">(<expr pos:start="105:20" pos:end="105:28"><name pos:start="105:20" pos:end="105:23">size</name> <operator pos:start="105:25" pos:end="105:26">&lt;=</operator> <literal type="number" pos:start="105:28" pos:end="105:28">0</literal></expr>)</condition><block type="pseudo" pos:start="105:31" pos:end="105:39"><block_content pos:start="105:31" pos:end="105:39"> <continue pos:start="105:31" pos:end="105:39">continue;</continue></block_content></block></if></if_stmt>

                <switch pos:start="107:17" pos:end="139:17">switch<condition pos:start="107:23" pos:end="107:38">(<expr pos:start="107:24" pos:end="107:37"><call pos:start="107:24" pos:end="107:37"><name pos:start="107:24" pos:end="107:30">AV_RB32</name><argument_list pos:start="107:31" pos:end="107:37">(<argument pos:start="107:32" pos:end="107:36"><expr pos:start="107:32" pos:end="107:36"><name pos:start="107:32" pos:end="107:36">start</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="107:39" pos:end="139:17">{<block_content pos:start="109:17" pos:end="137:30">

                <case pos:start="109:17" pos:end="109:36">case <expr pos:start="109:22" pos:end="109:35"><name pos:start="109:22" pos:end="109:35">VC1_CODE_FRAME</name></expr>:</case>

                    <if_stmt pos:start="111:21" pos:end="115:42"><if pos:start="111:21" pos:end="115:42">if <condition pos:start="111:24" pos:end="113:78">(<expr pos:start="111:25" pos:end="113:77"><name pos:start="111:25" pos:end="111:38"><name pos:start="111:25" pos:end="111:29">avctx</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:38">hwaccel</name></name> <operator pos:start="111:40" pos:end="111:41">||</operator>

                        <name pos:start="113:25" pos:end="113:53"><name pos:start="113:25" pos:end="113:25">s</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:32">avctx</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:39">codec</name><operator pos:start="113:40" pos:end="113:41">-&gt;</operator><name pos:start="113:42" pos:end="113:53">capabilities</name></name><operator pos:start="113:54" pos:end="113:54">&amp;</operator><name pos:start="113:55" pos:end="113:77">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="115:25" pos:end="115:42"><block_content pos:start="115:25" pos:end="115:42">

                        <expr_stmt pos:start="115:25" pos:end="115:42"><expr pos:start="115:25" pos:end="115:41"><name pos:start="115:25" pos:end="115:33">buf_start</name> <operator pos:start="115:35" pos:end="115:35">=</operator> <name pos:start="115:37" pos:end="115:41">start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:75"><expr pos:start="117:21" pos:end="117:74"><name pos:start="117:21" pos:end="117:29">buf_size2</name> <operator pos:start="117:31" pos:end="117:31">=</operator> <call pos:start="117:33" pos:end="117:74"><name pos:start="117:33" pos:end="117:51">vc1_unescape_buffer</name><argument_list pos:start="117:52" pos:end="117:74">(<argument pos:start="117:53" pos:end="117:61"><expr pos:start="117:53" pos:end="117:61"><name pos:start="117:53" pos:end="117:57">start</name> <operator pos:start="117:59" pos:end="117:59">+</operator> <literal type="number" pos:start="117:61" pos:end="117:61">4</literal></expr></argument>, <argument pos:start="117:64" pos:end="117:67"><expr pos:start="117:64" pos:end="117:67"><name pos:start="117:64" pos:end="117:67">size</name></expr></argument>, <argument pos:start="117:70" pos:end="117:73"><expr pos:start="117:70" pos:end="117:73"><name pos:start="117:70" pos:end="117:73">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="119:21" pos:end="119:26">break;</break>

                <case pos:start="121:17" pos:end="121:41">case <expr pos:start="121:22" pos:end="121:40"><name pos:start="121:22" pos:end="121:40">VC1_CODE_ENTRYPOINT</name></expr>:</case> <comment type="block" pos:start="121:43" pos:end="121:78">/* it should be before frame data */</comment>

                    <expr_stmt pos:start="123:21" pos:end="123:75"><expr pos:start="123:21" pos:end="123:74"><name pos:start="123:21" pos:end="123:29">buf_size2</name> <operator pos:start="123:31" pos:end="123:31">=</operator> <call pos:start="123:33" pos:end="123:74"><name pos:start="123:33" pos:end="123:51">vc1_unescape_buffer</name><argument_list pos:start="123:52" pos:end="123:74">(<argument pos:start="123:53" pos:end="123:61"><expr pos:start="123:53" pos:end="123:61"><name pos:start="123:53" pos:end="123:57">start</name> <operator pos:start="123:59" pos:end="123:59">+</operator> <literal type="number" pos:start="123:61" pos:end="123:61">4</literal></expr></argument>, <argument pos:start="123:64" pos:end="123:67"><expr pos:start="123:64" pos:end="123:67"><name pos:start="123:64" pos:end="123:67">size</name></expr></argument>, <argument pos:start="123:70" pos:end="123:73"><expr pos:start="123:70" pos:end="123:73"><name pos:start="123:70" pos:end="123:73">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:61"><expr pos:start="125:21" pos:end="125:60"><call pos:start="125:21" pos:end="125:60"><name pos:start="125:21" pos:end="125:33">init_get_bits</name><argument_list pos:start="125:34" pos:end="125:60">(<argument pos:start="125:35" pos:end="125:40"><expr pos:start="125:35" pos:end="125:40"><operator pos:start="125:35" pos:end="125:35">&amp;</operator><name pos:start="125:36" pos:end="125:40"><name pos:start="125:36" pos:end="125:36">s</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:40">gb</name></name></expr></argument>, <argument pos:start="125:43" pos:end="125:46"><expr pos:start="125:43" pos:end="125:46"><name pos:start="125:43" pos:end="125:46">buf2</name></expr></argument>, <argument pos:start="125:49" pos:end="125:59"><expr pos:start="125:49" pos:end="125:59"><name pos:start="125:49" pos:end="125:57">buf_size2</name><operator pos:start="125:58" pos:end="125:58">*</operator><literal type="number" pos:start="125:59" pos:end="125:59">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:61"><expr pos:start="127:21" pos:end="127:60"><call pos:start="127:21" pos:end="127:60"><name pos:start="127:21" pos:end="127:42">vc1_decode_entry_point</name><argument_list pos:start="127:43" pos:end="127:60">(<argument pos:start="127:44" pos:end="127:48"><expr pos:start="127:44" pos:end="127:48"><name pos:start="127:44" pos:end="127:48">avctx</name></expr></argument>, <argument pos:start="127:51" pos:end="127:51"><expr pos:start="127:51" pos:end="127:51"><name pos:start="127:51" pos:end="127:51">v</name></expr></argument>, <argument pos:start="127:54" pos:end="127:59"><expr pos:start="127:54" pos:end="127:59"><operator pos:start="127:54" pos:end="127:54">&amp;</operator><name pos:start="127:55" pos:end="127:59"><name pos:start="127:55" pos:end="127:55">s</name><operator pos:start="127:56" pos:end="127:57">-&gt;</operator><name pos:start="127:58" pos:end="127:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="129:21" pos:end="129:26">break;</break>

                <case pos:start="131:17" pos:end="131:36">case <expr pos:start="131:22" pos:end="131:35"><name pos:start="131:22" pos:end="131:35">VC1_CODE_SLICE</name></expr>:</case>

                    <expr_stmt pos:start="133:21" pos:end="133:94"><expr pos:start="133:21" pos:end="133:93"><call pos:start="133:21" pos:end="133:93"><name pos:start="133:21" pos:end="133:26">av_log</name><argument_list pos:start="133:27" pos:end="133:93">(<argument pos:start="133:28" pos:end="133:32"><expr pos:start="133:28" pos:end="133:32"><name pos:start="133:28" pos:end="133:32">avctx</name></expr></argument>, <argument pos:start="133:35" pos:end="133:46"><expr pos:start="133:35" pos:end="133:46"><name pos:start="133:35" pos:end="133:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:49" pos:end="133:92"><expr pos:start="133:49" pos:end="133:92"><literal type="string" pos:start="133:49" pos:end="133:92">"Sliced decoding is not implemented (yet)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:34"><expr pos:start="135:21" pos:end="135:33"><call pos:start="135:21" pos:end="135:33"><name pos:start="135:21" pos:end="135:27">av_free</name><argument_list pos:start="135:28" pos:end="135:33">(<argument pos:start="135:29" pos:end="135:32"><expr pos:start="135:29" pos:end="135:32"><name pos:start="135:29" pos:end="135:32">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="137:21" pos:end="137:30">return <expr pos:start="137:28" pos:end="137:29"><operator pos:start="137:28" pos:end="137:28">-</operator><literal type="number" pos:start="137:29" pos:end="137:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

            </block_content>}</block></for>

        </block_content>}</block></if><if type="elseif" pos:start="143:10" pos:end="169:9">else if<condition pos:start="143:17" pos:end="143:59">(<expr pos:start="143:18" pos:end="143:58"><name pos:start="143:18" pos:end="143:29"><name pos:start="143:18" pos:end="143:18">v</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:29">interlace</name></name> <operator pos:start="143:31" pos:end="143:32">&amp;&amp;</operator> <operator pos:start="143:34" pos:end="143:34">(</operator><operator pos:start="143:35" pos:end="143:35">(</operator><name pos:start="143:36" pos:end="143:41"><name pos:start="143:36" pos:end="143:38">buf</name><index pos:start="143:39" pos:end="143:41">[<expr pos:start="143:40" pos:end="143:40"><literal type="number" pos:start="143:40" pos:end="143:40">0</literal></expr>]</index></name> <operator pos:start="143:43" pos:end="143:43">&amp;</operator> <literal type="number" pos:start="143:45" pos:end="143:48">0xC0</literal><operator pos:start="143:49" pos:end="143:49">)</operator> <operator pos:start="143:51" pos:end="143:52">==</operator> <literal type="number" pos:start="143:54" pos:end="143:57">0xC0</literal><operator pos:start="143:58" pos:end="143:58">)</operator></expr>)</condition><block pos:start="143:60" pos:end="169:9">{<block_content pos:start="145:13" pos:end="167:36"> <comment type="block" pos:start="143:62" pos:end="143:119">/* WVC1 interlaced stores both fields divided by marker */</comment>

            <decl_stmt pos:start="145:13" pos:end="145:35"><decl pos:start="145:13" pos:end="145:34"><type pos:start="145:13" pos:end="145:27"><specifier pos:start="145:13" pos:end="145:17">const</specifier> <name pos:start="145:19" pos:end="145:25">uint8_t</name> <modifier pos:start="145:27" pos:end="145:27">*</modifier></type><name pos:start="145:28" pos:end="145:34">divider</name></decl>;</decl_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:60"><expr pos:start="149:13" pos:end="149:59"><name pos:start="149:13" pos:end="149:19">divider</name> <operator pos:start="149:21" pos:end="149:21">=</operator> <call pos:start="149:23" pos:end="149:59"><name pos:start="149:23" pos:end="149:38">find_next_marker</name><argument_list pos:start="149:39" pos:end="149:59">(<argument pos:start="149:40" pos:end="149:42"><expr pos:start="149:40" pos:end="149:42"><name pos:start="149:40" pos:end="149:42">buf</name></expr></argument>, <argument pos:start="149:45" pos:end="149:58"><expr pos:start="149:45" pos:end="149:58"><name pos:start="149:45" pos:end="149:47">buf</name> <operator pos:start="149:49" pos:end="149:49">+</operator> <name pos:start="149:51" pos:end="149:58">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="159:13"><if pos:start="151:13" pos:end="159:13">if<condition pos:start="151:15" pos:end="151:83">(<expr pos:start="151:16" pos:end="151:82"><operator pos:start="151:16" pos:end="151:16">(</operator><name pos:start="151:17" pos:end="151:23">divider</name> <operator pos:start="151:25" pos:end="151:26">==</operator> <operator pos:start="151:28" pos:end="151:28">(</operator><name pos:start="151:29" pos:end="151:31">buf</name> <operator pos:start="151:33" pos:end="151:33">+</operator> <name pos:start="151:35" pos:end="151:42">buf_size</name><operator pos:start="151:43" pos:end="151:43">)</operator><operator pos:start="151:44" pos:end="151:44">)</operator> <operator pos:start="151:46" pos:end="151:47">||</operator> <call pos:start="151:49" pos:end="151:64"><name pos:start="151:49" pos:end="151:55">AV_RB32</name><argument_list pos:start="151:56" pos:end="151:64">(<argument pos:start="151:57" pos:end="151:63"><expr pos:start="151:57" pos:end="151:63"><name pos:start="151:57" pos:end="151:63">divider</name></expr></argument>)</argument_list></call> <operator pos:start="151:66" pos:end="151:67">!=</operator> <name pos:start="151:69" pos:end="151:82">VC1_CODE_FIELD</name></expr>)</condition><block pos:start="151:84" pos:end="159:13">{<block_content pos:start="153:17" pos:end="157:26">

                <expr_stmt pos:start="153:17" pos:end="153:80"><expr pos:start="153:17" pos:end="153:79"><call pos:start="153:17" pos:end="153:79"><name pos:start="153:17" pos:end="153:22">av_log</name><argument_list pos:start="153:23" pos:end="153:79">(<argument pos:start="153:24" pos:end="153:28"><expr pos:start="153:24" pos:end="153:28"><name pos:start="153:24" pos:end="153:28">avctx</name></expr></argument>, <argument pos:start="153:31" pos:end="153:42"><expr pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:45" pos:end="153:78"><expr pos:start="153:45" pos:end="153:78"><literal type="string" pos:start="153:45" pos:end="153:78">"Error in WVC1 interlaced frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:30"><expr pos:start="155:17" pos:end="155:29"><call pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:23">av_free</name><argument_list pos:start="155:24" pos:end="155:29">(<argument pos:start="155:25" pos:end="155:28"><expr pos:start="155:25" pos:end="155:28"><name pos:start="155:25" pos:end="155:28">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="157:17" pos:end="157:26">return <expr pos:start="157:24" pos:end="157:25"><operator pos:start="157:24" pos:end="157:24">-</operator><literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="163:13" pos:end="163:70"><expr pos:start="163:13" pos:end="163:69"><name pos:start="163:13" pos:end="163:21">buf_size2</name> <operator pos:start="163:23" pos:end="163:23">=</operator> <call pos:start="163:25" pos:end="163:69"><name pos:start="163:25" pos:end="163:43">vc1_unescape_buffer</name><argument_list pos:start="163:44" pos:end="163:69">(<argument pos:start="163:45" pos:end="163:47"><expr pos:start="163:45" pos:end="163:47"><name pos:start="163:45" pos:end="163:47">buf</name></expr></argument>, <argument pos:start="163:50" pos:end="163:62"><expr pos:start="163:50" pos:end="163:62"><name pos:start="163:50" pos:end="163:56">divider</name> <operator pos:start="163:58" pos:end="163:58">-</operator> <name pos:start="163:60" pos:end="163:62">buf</name></expr></argument>, <argument pos:start="163:65" pos:end="163:68"><expr pos:start="163:65" pos:end="163:68"><name pos:start="163:65" pos:end="163:68">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="165:13" pos:end="165:19">// TODO</comment>

            <expr_stmt pos:start="167:13" pos:end="167:26"><expr pos:start="167:13" pos:end="167:25"><call pos:start="167:13" pos:end="167:25"><name pos:start="167:13" pos:end="167:19">av_free</name><argument_list pos:start="167:20" pos:end="167:25">(<argument pos:start="167:21" pos:end="167:24"><expr pos:start="167:21" pos:end="167:24"><name pos:start="167:21" pos:end="167:24">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><return pos:start="167:27" pos:end="167:36">return <expr pos:start="167:34" pos:end="167:35"><operator pos:start="167:34" pos:end="167:34">-</operator><literal type="number" pos:start="167:35" pos:end="167:35">1</literal></expr>;</return>

        </block_content>}</block></if><else pos:start="169:10" pos:end="173:9">else<block pos:start="169:14" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:65">

            <expr_stmt pos:start="171:13" pos:end="171:65"><expr pos:start="171:13" pos:end="171:64"><name pos:start="171:13" pos:end="171:21">buf_size2</name> <operator pos:start="171:23" pos:end="171:23">=</operator> <call pos:start="171:25" pos:end="171:64"><name pos:start="171:25" pos:end="171:43">vc1_unescape_buffer</name><argument_list pos:start="171:44" pos:end="171:64">(<argument pos:start="171:45" pos:end="171:47"><expr pos:start="171:45" pos:end="171:47"><name pos:start="171:45" pos:end="171:47">buf</name></expr></argument>, <argument pos:start="171:50" pos:end="171:57"><expr pos:start="171:50" pos:end="171:57"><name pos:start="171:50" pos:end="171:57">buf_size</name></expr></argument>, <argument pos:start="171:60" pos:end="171:63"><expr pos:start="171:60" pos:end="171:63"><name pos:start="171:60" pos:end="171:63">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:49"><expr pos:start="175:9" pos:end="175:48"><call pos:start="175:9" pos:end="175:48"><name pos:start="175:9" pos:end="175:21">init_get_bits</name><argument_list pos:start="175:22" pos:end="175:48">(<argument pos:start="175:23" pos:end="175:28"><expr pos:start="175:23" pos:end="175:28"><operator pos:start="175:23" pos:end="175:23">&amp;</operator><name pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:24">s</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:28">gb</name></name></expr></argument>, <argument pos:start="175:31" pos:end="175:34"><expr pos:start="175:31" pos:end="175:34"><name pos:start="175:31" pos:end="175:34">buf2</name></expr></argument>, <argument pos:start="175:37" pos:end="175:47"><expr pos:start="175:37" pos:end="175:47"><name pos:start="175:37" pos:end="175:45">buf_size2</name><operator pos:start="175:46" pos:end="175:46">*</operator><literal type="number" pos:start="175:47" pos:end="175:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="179:47">else<block type="pseudo" pos:start="179:9" pos:end="179:47"><block_content pos:start="179:9" pos:end="179:47">

        <expr_stmt pos:start="179:9" pos:end="179:47"><expr pos:start="179:9" pos:end="179:46"><call pos:start="179:9" pos:end="179:46"><name pos:start="179:9" pos:end="179:21">init_get_bits</name><argument_list pos:start="179:22" pos:end="179:46">(<argument pos:start="179:23" pos:end="179:28"><expr pos:start="179:23" pos:end="179:28"><operator pos:start="179:23" pos:end="179:23">&amp;</operator><name pos:start="179:24" pos:end="179:28"><name pos:start="179:24" pos:end="179:24">s</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:28">gb</name></name></expr></argument>, <argument pos:start="179:31" pos:end="179:33"><expr pos:start="179:31" pos:end="179:33"><name pos:start="179:31" pos:end="179:33">buf</name></expr></argument>, <argument pos:start="179:36" pos:end="179:45"><expr pos:start="179:36" pos:end="179:45"><name pos:start="179:36" pos:end="179:43">buf_size</name><operator pos:start="179:44" pos:end="179:44">*</operator><literal type="number" pos:start="179:45" pos:end="179:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="line" pos:start="181:5" pos:end="181:28">// do parse frame header</comment>

    <if_stmt pos:start="183:5" pos:end="203:5"><if pos:start="183:5" pos:end="193:5">if<condition pos:start="183:7" pos:end="183:37">(<expr pos:start="183:8" pos:end="183:36"><name pos:start="183:8" pos:end="183:17"><name pos:start="183:8" pos:end="183:8">v</name><operator pos:start="183:9" pos:end="183:10">-&gt;</operator><name pos:start="183:11" pos:end="183:17">profile</name></name> <operator pos:start="183:19" pos:end="183:19">&lt;</operator> <name pos:start="183:21" pos:end="183:36">PROFILE_ADVANCED</name></expr>)</condition> <block pos:start="183:39" pos:end="193:5">{<block_content pos:start="185:9" pos:end="191:9">

        <if_stmt pos:start="185:9" pos:end="191:9"><if pos:start="185:9" pos:end="191:9">if<condition pos:start="185:11" pos:end="185:51">(<expr pos:start="185:12" pos:end="185:50"><call pos:start="185:12" pos:end="185:44"><name pos:start="185:12" pos:end="185:33">vc1_parse_frame_header</name><argument_list pos:start="185:34" pos:end="185:44">(<argument pos:start="185:35" pos:end="185:35"><expr pos:start="185:35" pos:end="185:35"><name pos:start="185:35" pos:end="185:35">v</name></expr></argument>, <argument pos:start="185:38" pos:end="185:43"><expr pos:start="185:38" pos:end="185:43"><operator pos:start="185:38" pos:end="185:38">&amp;</operator><name pos:start="185:39" pos:end="185:43"><name pos:start="185:39" pos:end="185:39">s</name><operator pos:start="185:40" pos:end="185:41">-&gt;</operator><name pos:start="185:42" pos:end="185:43">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="185:46" pos:end="185:47">==</operator> <operator pos:start="185:49" pos:end="185:49">-</operator><literal type="number" pos:start="185:50" pos:end="185:50">1</literal></expr>)</condition> <block pos:start="185:53" pos:end="191:9">{<block_content pos:start="187:13" pos:end="189:22">

            <expr_stmt pos:start="187:13" pos:end="187:26"><expr pos:start="187:13" pos:end="187:25"><call pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:19">av_free</name><argument_list pos:start="187:20" pos:end="187:25">(<argument pos:start="187:21" pos:end="187:24"><expr pos:start="187:21" pos:end="187:24"><name pos:start="187:21" pos:end="187:24">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="189:13" pos:end="189:22">return <expr pos:start="189:20" pos:end="189:21"><operator pos:start="189:20" pos:end="189:20">-</operator><literal type="number" pos:start="189:21" pos:end="189:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="193:7" pos:end="203:5">else <block pos:start="193:12" pos:end="203:5">{<block_content pos:start="195:9" pos:end="201:9">

        <if_stmt pos:start="195:9" pos:end="201:9"><if pos:start="195:9" pos:end="201:9">if<condition pos:start="195:11" pos:end="195:55">(<expr pos:start="195:12" pos:end="195:54"><call pos:start="195:12" pos:end="195:48"><name pos:start="195:12" pos:end="195:37">vc1_parse_frame_header_adv</name><argument_list pos:start="195:38" pos:end="195:48">(<argument pos:start="195:39" pos:end="195:39"><expr pos:start="195:39" pos:end="195:39"><name pos:start="195:39" pos:end="195:39">v</name></expr></argument>, <argument pos:start="195:42" pos:end="195:47"><expr pos:start="195:42" pos:end="195:47"><operator pos:start="195:42" pos:end="195:42">&amp;</operator><name pos:start="195:43" pos:end="195:47"><name pos:start="195:43" pos:end="195:43">s</name><operator pos:start="195:44" pos:end="195:45">-&gt;</operator><name pos:start="195:46" pos:end="195:47">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="195:50" pos:end="195:51">==</operator> <operator pos:start="195:53" pos:end="195:53">-</operator><literal type="number" pos:start="195:54" pos:end="195:54">1</literal></expr>)</condition> <block pos:start="195:57" pos:end="201:9">{<block_content pos:start="197:13" pos:end="199:22">

            <expr_stmt pos:start="197:13" pos:end="197:26"><expr pos:start="197:13" pos:end="197:25"><call pos:start="197:13" pos:end="197:25"><name pos:start="197:13" pos:end="197:19">av_free</name><argument_list pos:start="197:20" pos:end="197:25">(<argument pos:start="197:21" pos:end="197:24"><expr pos:start="197:21" pos:end="197:24"><name pos:start="197:21" pos:end="197:24">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="199:13" pos:end="199:22">return <expr pos:start="199:20" pos:end="199:21"><operator pos:start="199:20" pos:end="199:20">-</operator><literal type="number" pos:start="199:21" pos:end="199:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="207:5" pos:end="213:5"><if pos:start="207:5" pos:end="213:5">if<condition pos:start="207:7" pos:end="207:53">(<expr pos:start="207:8" pos:end="207:52"><name pos:start="207:8" pos:end="207:19"><name pos:start="207:8" pos:end="207:8">s</name><operator pos:start="207:9" pos:end="207:10">-&gt;</operator><name pos:start="207:11" pos:end="207:19">pict_type</name></name> <operator pos:start="207:21" pos:end="207:22">!=</operator> <name pos:start="207:24" pos:end="207:32">FF_I_TYPE</name> <operator pos:start="207:34" pos:end="207:35">&amp;&amp;</operator> <operator pos:start="207:37" pos:end="207:37">!</operator><name pos:start="207:38" pos:end="207:52"><name pos:start="207:38" pos:end="207:38">v</name><operator pos:start="207:39" pos:end="207:40">-&gt;</operator><name pos:start="207:41" pos:end="207:52">res_rtm_flag</name></name></expr>)</condition><block pos:start="207:54" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:18">

        <expr_stmt pos:start="209:9" pos:end="209:22"><expr pos:start="209:9" pos:end="209:21"><call pos:start="209:9" pos:end="209:21"><name pos:start="209:9" pos:end="209:15">av_free</name><argument_list pos:start="209:16" pos:end="209:21">(<argument pos:start="209:17" pos:end="209:20"><expr pos:start="209:17" pos:end="209:20"><name pos:start="209:17" pos:end="209:20">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="211:9" pos:end="211:18">return <expr pos:start="211:16" pos:end="211:17"><operator pos:start="211:16" pos:end="211:16">-</operator><literal type="number" pos:start="211:17" pos:end="211:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="217:5" pos:end="217:22">// for hurry_up==5</comment>

    <expr_stmt pos:start="219:5" pos:end="219:47"><expr pos:start="219:5" pos:end="219:46"><name pos:start="219:5" pos:end="219:32"><name pos:start="219:5" pos:end="219:5">s</name><operator pos:start="219:6" pos:end="219:7">-&gt;</operator><name pos:start="219:8" pos:end="219:22">current_picture</name><operator pos:start="219:23" pos:end="219:23">.</operator><name pos:start="219:24" pos:end="219:32">pict_type</name></name><operator pos:start="219:33" pos:end="219:33">=</operator> <name pos:start="219:35" pos:end="219:46"><name pos:start="219:35" pos:end="219:35">s</name><operator pos:start="219:36" pos:end="219:37">-&gt;</operator><name pos:start="219:38" pos:end="219:46">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:60"><expr pos:start="221:5" pos:end="221:59"><name pos:start="221:5" pos:end="221:32"><name pos:start="221:5" pos:end="221:5">s</name><operator pos:start="221:6" pos:end="221:7">-&gt;</operator><name pos:start="221:8" pos:end="221:22">current_picture</name><operator pos:start="221:23" pos:end="221:23">.</operator><name pos:start="221:24" pos:end="221:32">key_frame</name></name><operator pos:start="221:33" pos:end="221:33">=</operator> <name pos:start="221:35" pos:end="221:46"><name pos:start="221:35" pos:end="221:35">s</name><operator pos:start="221:36" pos:end="221:37">-&gt;</operator><name pos:start="221:38" pos:end="221:46">pict_type</name></name> <operator pos:start="221:48" pos:end="221:49">==</operator> <name pos:start="221:51" pos:end="221:59">FF_I_TYPE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="225:5" pos:end="225:57">/* skip B-frames if we don't have reference frames */</comment>

    <if_stmt pos:start="227:5" pos:end="233:5"><if pos:start="227:5" pos:end="233:5">if<condition pos:start="227:7" pos:end="227:77">(<expr pos:start="227:8" pos:end="227:76"><name pos:start="227:8" pos:end="227:26"><name pos:start="227:8" pos:end="227:8">s</name><operator pos:start="227:9" pos:end="227:10">-&gt;</operator><name pos:start="227:11" pos:end="227:26">last_picture_ptr</name></name><operator pos:start="227:27" pos:end="227:28">==</operator><name pos:start="227:29" pos:end="227:32">NULL</name> <operator pos:start="227:34" pos:end="227:35">&amp;&amp;</operator> <operator pos:start="227:37" pos:end="227:37">(</operator><name pos:start="227:38" pos:end="227:49"><name pos:start="227:38" pos:end="227:38">s</name><operator pos:start="227:39" pos:end="227:40">-&gt;</operator><name pos:start="227:41" pos:end="227:49">pict_type</name></name><operator pos:start="227:50" pos:end="227:51">==</operator><name pos:start="227:52" pos:end="227:60">FF_B_TYPE</name> <operator pos:start="227:62" pos:end="227:63">||</operator> <name pos:start="227:65" pos:end="227:75"><name pos:start="227:65" pos:end="227:65">s</name><operator pos:start="227:66" pos:end="227:67">-&gt;</operator><name pos:start="227:68" pos:end="227:75">dropable</name></name><operator pos:start="227:76" pos:end="227:76">)</operator></expr>)</condition><block pos:start="227:78" pos:end="233:5">{<block_content pos:start="229:9" pos:end="231:18">

        <expr_stmt pos:start="229:9" pos:end="229:22"><expr pos:start="229:9" pos:end="229:21"><call pos:start="229:9" pos:end="229:21"><name pos:start="229:9" pos:end="229:15">av_free</name><argument_list pos:start="229:16" pos:end="229:21">(<argument pos:start="229:17" pos:end="229:20"><expr pos:start="229:17" pos:end="229:20"><name pos:start="229:17" pos:end="229:20">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="231:9" pos:end="231:18">return <expr pos:start="231:16" pos:end="231:17"><operator pos:start="231:16" pos:end="231:16">-</operator><literal type="number" pos:start="231:17" pos:end="231:17">1</literal></expr>;</return><comment type="line" pos:start="231:19" pos:end="231:29">//buf_size;</comment>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="235:5" pos:end="235:44">/* skip b frames if we are in a hurry */</comment>

    <if_stmt pos:start="237:5" pos:end="237:61"><if pos:start="237:5" pos:end="237:61">if<condition pos:start="237:7" pos:end="237:50">(<expr pos:start="237:8" pos:end="237:49"><name pos:start="237:8" pos:end="237:22"><name pos:start="237:8" pos:end="237:12">avctx</name><operator pos:start="237:13" pos:end="237:14">-&gt;</operator><name pos:start="237:15" pos:end="237:22">hurry_up</name></name> <operator pos:start="237:24" pos:end="237:25">&amp;&amp;</operator> <name pos:start="237:27" pos:end="237:38"><name pos:start="237:27" pos:end="237:27">s</name><operator pos:start="237:28" pos:end="237:29">-&gt;</operator><name pos:start="237:30" pos:end="237:38">pict_type</name></name><operator pos:start="237:39" pos:end="237:40">==</operator><name pos:start="237:41" pos:end="237:49">FF_B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="237:52" pos:end="237:61"><block_content pos:start="237:52" pos:end="237:61"> <return pos:start="237:52" pos:end="237:61">return <expr pos:start="237:59" pos:end="237:60"><operator pos:start="237:59" pos:end="237:59">-</operator><literal type="number" pos:start="237:60" pos:end="237:60">1</literal></expr>;</return></block_content></block></if></if_stmt><comment type="line" pos:start="237:62" pos:end="237:72">//buf_size;</comment>

    <if_stmt pos:start="239:5" pos:end="249:5"><if pos:start="239:5" pos:end="249:5">if<condition pos:start="239:7" pos:end="243:46">(   <expr pos:start="239:11" pos:end="243:45"><operator pos:start="239:11" pos:end="239:11">(</operator><name pos:start="239:12" pos:end="239:28"><name pos:start="239:12" pos:end="239:16">avctx</name><operator pos:start="239:17" pos:end="239:18">-&gt;</operator><name pos:start="239:19" pos:end="239:28">skip_frame</name></name> <operator pos:start="239:30" pos:end="239:31">&gt;=</operator> <name pos:start="239:33" pos:end="239:48">AVDISCARD_NONREF</name> <operator pos:start="239:50" pos:end="239:51">&amp;&amp;</operator> <name pos:start="239:53" pos:end="239:64"><name pos:start="239:53" pos:end="239:53">s</name><operator pos:start="239:54" pos:end="239:55">-&gt;</operator><name pos:start="239:56" pos:end="239:64">pict_type</name></name><operator pos:start="239:65" pos:end="239:66">==</operator><name pos:start="239:67" pos:end="239:75">FF_B_TYPE</name><operator pos:start="239:76" pos:end="239:76">)</operator>

       <operator pos:start="241:8" pos:end="241:9">||</operator> <operator pos:start="241:11" pos:end="241:11">(</operator><name pos:start="241:12" pos:end="241:28"><name pos:start="241:12" pos:end="241:16">avctx</name><operator pos:start="241:17" pos:end="241:18">-&gt;</operator><name pos:start="241:19" pos:end="241:28">skip_frame</name></name> <operator pos:start="241:30" pos:end="241:31">&gt;=</operator> <name pos:start="241:33" pos:end="241:48">AVDISCARD_NONKEY</name> <operator pos:start="241:50" pos:end="241:51">&amp;&amp;</operator> <name pos:start="241:53" pos:end="241:64"><name pos:start="241:53" pos:end="241:53">s</name><operator pos:start="241:54" pos:end="241:55">-&gt;</operator><name pos:start="241:56" pos:end="241:64">pict_type</name></name><operator pos:start="241:65" pos:end="241:66">!=</operator><name pos:start="241:67" pos:end="241:75">FF_I_TYPE</name><operator pos:start="241:76" pos:end="241:76">)</operator>

       <operator pos:start="243:8" pos:end="243:9">||</operator>  <name pos:start="243:12" pos:end="243:28"><name pos:start="243:12" pos:end="243:16">avctx</name><operator pos:start="243:17" pos:end="243:18">-&gt;</operator><name pos:start="243:19" pos:end="243:28">skip_frame</name></name> <operator pos:start="243:30" pos:end="243:31">&gt;=</operator> <name pos:start="243:33" pos:end="243:45">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="243:48" pos:end="249:5">{<block_content pos:start="245:9" pos:end="247:24">

        <expr_stmt pos:start="245:9" pos:end="245:22"><expr pos:start="245:9" pos:end="245:21"><call pos:start="245:9" pos:end="245:21"><name pos:start="245:9" pos:end="245:15">av_free</name><argument_list pos:start="245:16" pos:end="245:21">(<argument pos:start="245:17" pos:end="245:20"><expr pos:start="245:17" pos:end="245:20"><name pos:start="245:17" pos:end="245:20">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="247:9" pos:end="247:24">return <expr pos:start="247:16" pos:end="247:23"><name pos:start="247:16" pos:end="247:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="251:5" pos:end="251:49">/* skip everything if we are in a hurry&gt;=5 */</comment>

    <if_stmt pos:start="253:5" pos:end="259:5"><if pos:start="253:5" pos:end="259:5">if<condition pos:start="253:7" pos:end="253:26">(<expr pos:start="253:8" pos:end="253:25"><name pos:start="253:8" pos:end="253:22"><name pos:start="253:8" pos:end="253:12">avctx</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:22">hurry_up</name></name><operator pos:start="253:23" pos:end="253:24">&gt;=</operator><literal type="number" pos:start="253:25" pos:end="253:25">5</literal></expr>)</condition> <block pos:start="253:28" pos:end="259:5">{<block_content pos:start="255:9" pos:end="257:18">

        <expr_stmt pos:start="255:9" pos:end="255:22"><expr pos:start="255:9" pos:end="255:21"><call pos:start="255:9" pos:end="255:21"><name pos:start="255:9" pos:end="255:15">av_free</name><argument_list pos:start="255:16" pos:end="255:21">(<argument pos:start="255:17" pos:end="255:20"><expr pos:start="255:17" pos:end="255:20"><name pos:start="255:17" pos:end="255:20">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="257:9" pos:end="257:18">return <expr pos:start="257:16" pos:end="257:17"><operator pos:start="257:16" pos:end="257:16">-</operator><literal type="number" pos:start="257:17" pos:end="257:17">1</literal></expr>;</return><comment type="line" pos:start="257:19" pos:end="257:29">//buf_size;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="263:5" pos:end="273:5"><if pos:start="263:5" pos:end="273:5">if<condition pos:start="263:7" pos:end="263:31">(<expr pos:start="263:8" pos:end="263:30"><name pos:start="263:8" pos:end="263:30"><name pos:start="263:8" pos:end="263:8">s</name><operator pos:start="263:9" pos:end="263:10">-&gt;</operator><name pos:start="263:11" pos:end="263:30">next_p_frame_damaged</name></name></expr>)</condition><block pos:start="263:32" pos:end="273:5">{<block_content pos:start="265:9" pos:end="271:38">

        <if_stmt pos:start="265:9" pos:end="271:38"><if pos:start="265:9" pos:end="267:28">if<condition pos:start="265:11" pos:end="265:35">(<expr pos:start="265:12" pos:end="265:34"><name pos:start="265:12" pos:end="265:23"><name pos:start="265:12" pos:end="265:12">s</name><operator pos:start="265:13" pos:end="265:14">-&gt;</operator><name pos:start="265:15" pos:end="265:23">pict_type</name></name><operator pos:start="265:24" pos:end="265:25">==</operator><name pos:start="265:26" pos:end="265:34">FF_B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="267:13" pos:end="267:28"><block_content pos:start="267:13" pos:end="267:28">

            <return pos:start="267:13" pos:end="267:28">return <expr pos:start="267:20" pos:end="267:27"><name pos:start="267:20" pos:end="267:27">buf_size</name></expr>;</return></block_content></block></if>

        <else pos:start="269:9" pos:end="271:38">else<block type="pseudo" pos:start="271:13" pos:end="271:38"><block_content pos:start="271:13" pos:end="271:38">

            <expr_stmt pos:start="271:13" pos:end="271:38"><expr pos:start="271:13" pos:end="271:37"><name pos:start="271:13" pos:end="271:35"><name pos:start="271:13" pos:end="271:13">s</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:35">next_p_frame_damaged</name></name><operator pos:start="271:36" pos:end="271:36">=</operator><literal type="number" pos:start="271:37" pos:end="271:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="283:5"><if pos:start="277:5" pos:end="283:5">if<condition pos:start="277:7" pos:end="277:37">(<expr pos:start="277:8" pos:end="277:36"><call pos:start="277:8" pos:end="277:32"><name pos:start="277:8" pos:end="277:22">MPV_frame_start</name><argument_list pos:start="277:23" pos:end="277:32">(<argument pos:start="277:24" pos:end="277:24"><expr pos:start="277:24" pos:end="277:24"><name pos:start="277:24" pos:end="277:24">s</name></expr></argument>, <argument pos:start="277:27" pos:end="277:31"><expr pos:start="277:27" pos:end="277:31"><name pos:start="277:27" pos:end="277:31">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="277:34" pos:end="277:34">&lt;</operator> <literal type="number" pos:start="277:36" pos:end="277:36">0</literal></expr>)</condition> <block pos:start="277:39" pos:end="283:5">{<block_content pos:start="279:9" pos:end="281:18">

        <expr_stmt pos:start="279:9" pos:end="279:22"><expr pos:start="279:9" pos:end="279:21"><call pos:start="279:9" pos:end="279:21"><name pos:start="279:9" pos:end="279:15">av_free</name><argument_list pos:start="279:16" pos:end="279:21">(<argument pos:start="279:17" pos:end="279:20"><expr pos:start="279:17" pos:end="279:20"><name pos:start="279:17" pos:end="279:20">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="281:9" pos:end="281:18">return <expr pos:start="281:16" pos:end="281:17"><operator pos:start="281:16" pos:end="281:16">-</operator><literal type="number" pos:start="281:17" pos:end="281:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="287:5" pos:end="287:47"><expr pos:start="287:5" pos:end="287:46"><name pos:start="287:5" pos:end="287:18"><name pos:start="287:5" pos:end="287:5">s</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:9">me</name><operator pos:start="287:10" pos:end="287:10">.</operator><name pos:start="287:11" pos:end="287:18">qpel_put</name></name><operator pos:start="287:19" pos:end="287:19">=</operator> <name pos:start="287:21" pos:end="287:46"><name pos:start="287:21" pos:end="287:21">s</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:26">dsp</name><operator pos:start="287:27" pos:end="287:27">.</operator><name pos:start="287:28" pos:end="287:46">put_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:47"><expr pos:start="289:5" pos:end="289:46"><name pos:start="289:5" pos:end="289:18"><name pos:start="289:5" pos:end="289:5">s</name><operator pos:start="289:6" pos:end="289:7">-&gt;</operator><name pos:start="289:8" pos:end="289:9">me</name><operator pos:start="289:10" pos:end="289:10">.</operator><name pos:start="289:11" pos:end="289:18">qpel_avg</name></name><operator pos:start="289:19" pos:end="289:19">=</operator> <name pos:start="289:21" pos:end="289:46"><name pos:start="289:21" pos:end="289:21">s</name><operator pos:start="289:22" pos:end="289:23">-&gt;</operator><name pos:start="289:24" pos:end="289:26">dsp</name><operator pos:start="289:27" pos:end="289:27">.</operator><name pos:start="289:28" pos:end="289:46">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="293:5" pos:end="331:5"><if pos:start="293:5" pos:end="297:80">if <condition pos:start="293:8" pos:end="295:64">(<expr pos:start="293:9" pos:end="295:63"><operator pos:start="293:9" pos:end="293:9">(</operator><name pos:start="293:10" pos:end="293:33">CONFIG_VC1_VDPAU_DECODER</name> <operator pos:start="293:35" pos:end="293:36">||</operator> <name pos:start="293:38" pos:end="293:62">CONFIG_WMV3_VDPAU_DECODER</name><operator pos:start="293:63" pos:end="293:63">)</operator>

        <operator pos:start="295:9" pos:end="295:10">&amp;&amp;</operator><name pos:start="295:11" pos:end="295:39"><name pos:start="295:11" pos:end="295:11">s</name><operator pos:start="295:12" pos:end="295:13">-&gt;</operator><name pos:start="295:14" pos:end="295:18">avctx</name><operator pos:start="295:19" pos:end="295:20">-&gt;</operator><name pos:start="295:21" pos:end="295:25">codec</name><operator pos:start="295:26" pos:end="295:27">-&gt;</operator><name pos:start="295:28" pos:end="295:39">capabilities</name></name><operator pos:start="295:40" pos:end="295:40">&amp;</operator><name pos:start="295:41" pos:end="295:63">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="297:9" pos:end="297:80"><block_content pos:start="297:9" pos:end="297:80">

        <expr_stmt pos:start="297:9" pos:end="297:80"><expr pos:start="297:9" pos:end="297:79"><call pos:start="297:9" pos:end="297:79"><name pos:start="297:9" pos:end="297:35">ff_vdpau_vc1_decode_picture</name><argument_list pos:start="297:36" pos:end="297:79">(<argument pos:start="297:37" pos:end="297:37"><expr pos:start="297:37" pos:end="297:37"><name pos:start="297:37" pos:end="297:37">s</name></expr></argument>, <argument pos:start="297:40" pos:end="297:48"><expr pos:start="297:40" pos:end="297:48"><name pos:start="297:40" pos:end="297:48">buf_start</name></expr></argument>, <argument pos:start="297:51" pos:end="297:78"><expr pos:start="297:51" pos:end="297:78"><operator pos:start="297:51" pos:end="297:51">(</operator><name pos:start="297:52" pos:end="297:54">buf</name> <operator pos:start="297:56" pos:end="297:56">+</operator> <name pos:start="297:58" pos:end="297:65">buf_size</name><operator pos:start="297:66" pos:end="297:66">)</operator> <operator pos:start="297:68" pos:end="297:68">-</operator> <name pos:start="297:70" pos:end="297:78">buf_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="299:5" pos:end="313:5">else if <condition pos:start="299:13" pos:end="299:28">(<expr pos:start="299:14" pos:end="299:27"><name pos:start="299:14" pos:end="299:27"><name pos:start="299:14" pos:end="299:18">avctx</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:27">hwaccel</name></name></expr>)</condition> <block pos:start="299:30" pos:end="313:5">{<block_content pos:start="301:9" pos:end="311:22">

        <if_stmt pos:start="301:9" pos:end="303:22"><if pos:start="301:9" pos:end="303:22">if <condition pos:start="301:12" pos:end="301:66">(<expr pos:start="301:13" pos:end="301:65"><call pos:start="301:13" pos:end="301:61"><name pos:start="301:13" pos:end="301:39"><name pos:start="301:13" pos:end="301:17">avctx</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:26">hwaccel</name><operator pos:start="301:27" pos:end="301:28">-&gt;</operator><name pos:start="301:29" pos:end="301:39">start_frame</name></name><argument_list pos:start="301:40" pos:end="301:61">(<argument pos:start="301:41" pos:end="301:45"><expr pos:start="301:41" pos:end="301:45"><name pos:start="301:41" pos:end="301:45">avctx</name></expr></argument>, <argument pos:start="301:48" pos:end="301:50"><expr pos:start="301:48" pos:end="301:50"><name pos:start="301:48" pos:end="301:50">buf</name></expr></argument>, <argument pos:start="301:53" pos:end="301:60"><expr pos:start="301:53" pos:end="301:60"><name pos:start="301:53" pos:end="301:60">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="301:63" pos:end="301:63">&lt;</operator> <literal type="number" pos:start="301:65" pos:end="301:65">0</literal></expr>)</condition><block type="pseudo" pos:start="303:13" pos:end="303:22"><block_content pos:start="303:13" pos:end="303:22">

            <return pos:start="303:13" pos:end="303:22">return <expr pos:start="303:20" pos:end="303:21"><operator pos:start="303:20" pos:end="303:20">-</operator><literal type="number" pos:start="303:21" pos:end="303:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="305:9" pos:end="307:22"><if pos:start="305:9" pos:end="307:22">if <condition pos:start="305:12" pos:end="305:93">(<expr pos:start="305:13" pos:end="305:92"><call pos:start="305:13" pos:end="305:88"><name pos:start="305:13" pos:end="305:40"><name pos:start="305:13" pos:end="305:17">avctx</name><operator pos:start="305:18" pos:end="305:19">-&gt;</operator><name pos:start="305:20" pos:end="305:26">hwaccel</name><operator pos:start="305:27" pos:end="305:28">-&gt;</operator><name pos:start="305:29" pos:end="305:40">decode_slice</name></name><argument_list pos:start="305:41" pos:end="305:88">(<argument pos:start="305:42" pos:end="305:46"><expr pos:start="305:42" pos:end="305:46"><name pos:start="305:42" pos:end="305:46">avctx</name></expr></argument>, <argument pos:start="305:49" pos:end="305:57"><expr pos:start="305:49" pos:end="305:57"><name pos:start="305:49" pos:end="305:57">buf_start</name></expr></argument>, <argument pos:start="305:60" pos:end="305:87"><expr pos:start="305:60" pos:end="305:87"><operator pos:start="305:60" pos:end="305:60">(</operator><name pos:start="305:61" pos:end="305:63">buf</name> <operator pos:start="305:65" pos:end="305:65">+</operator> <name pos:start="305:67" pos:end="305:74">buf_size</name><operator pos:start="305:75" pos:end="305:75">)</operator> <operator pos:start="305:77" pos:end="305:77">-</operator> <name pos:start="305:79" pos:end="305:87">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="305:90" pos:end="305:90">&lt;</operator> <literal type="number" pos:start="305:92" pos:end="305:92">0</literal></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:22"><block_content pos:start="307:13" pos:end="307:22">

            <return pos:start="307:13" pos:end="307:22">return <expr pos:start="307:20" pos:end="307:21"><operator pos:start="307:20" pos:end="307:20">-</operator><literal type="number" pos:start="307:21" pos:end="307:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="309:9" pos:end="311:22"><if pos:start="309:9" pos:end="311:22">if <condition pos:start="309:12" pos:end="309:49">(<expr pos:start="309:13" pos:end="309:48"><call pos:start="309:13" pos:end="309:44"><name pos:start="309:13" pos:end="309:37"><name pos:start="309:13" pos:end="309:17">avctx</name><operator pos:start="309:18" pos:end="309:19">-&gt;</operator><name pos:start="309:20" pos:end="309:26">hwaccel</name><operator pos:start="309:27" pos:end="309:28">-&gt;</operator><name pos:start="309:29" pos:end="309:37">end_frame</name></name><argument_list pos:start="309:38" pos:end="309:44">(<argument pos:start="309:39" pos:end="309:43"><expr pos:start="309:39" pos:end="309:43"><name pos:start="309:39" pos:end="309:43">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="309:46" pos:end="309:46">&lt;</operator> <literal type="number" pos:start="309:48" pos:end="309:48">0</literal></expr>)</condition><block type="pseudo" pos:start="311:13" pos:end="311:22"><block_content pos:start="311:13" pos:end="311:22">

            <return pos:start="311:13" pos:end="311:22">return <expr pos:start="311:20" pos:end="311:21"><operator pos:start="311:20" pos:end="311:20">-</operator><literal type="number" pos:start="311:21" pos:end="311:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="313:7" pos:end="331:5">else <block pos:start="313:12" pos:end="331:5">{<block_content pos:start="315:9" pos:end="329:27">

        <expr_stmt pos:start="315:9" pos:end="315:29"><expr pos:start="315:9" pos:end="315:28"><call pos:start="315:9" pos:end="315:28"><name pos:start="315:9" pos:end="315:25">ff_er_frame_start</name><argument_list pos:start="315:26" pos:end="315:28">(<argument pos:start="315:27" pos:end="315:27"><expr pos:start="315:27" pos:end="315:27"><name pos:start="315:27" pos:end="315:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="319:9" pos:end="319:31"><expr pos:start="319:9" pos:end="319:30"><name pos:start="319:9" pos:end="319:15"><name pos:start="319:9" pos:end="319:9">v</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:15">bits</name></name> <operator pos:start="319:17" pos:end="319:17">=</operator> <name pos:start="319:19" pos:end="319:26">buf_size</name> <operator pos:start="319:28" pos:end="319:28">*</operator> <literal type="number" pos:start="319:30" pos:end="319:30">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:29"><expr pos:start="321:9" pos:end="321:28"><call pos:start="321:9" pos:end="321:28"><name pos:start="321:9" pos:end="321:25">vc1_decode_blocks</name><argument_list pos:start="321:26" pos:end="321:28">(<argument pos:start="321:27" pos:end="321:27"><expr pos:start="321:27" pos:end="321:27"><name pos:start="321:27" pos:end="321:27">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="323:1" pos:end="323:93">//av_log(s-&gt;avctx, AV_LOG_INFO, "Consumed %i/%i bits\n", get_bits_count(&amp;s-&gt;gb), buf_size*8);</comment>

<comment type="line" pos:start="325:1" pos:end="325:45">//  if(get_bits_count(&amp;s-&gt;gb) &gt; buf_size * 8)</comment>

<comment type="line" pos:start="327:1" pos:end="327:18">//      return -1;</comment>

        <expr_stmt pos:start="329:9" pos:end="329:27"><expr pos:start="329:9" pos:end="329:26"><call pos:start="329:9" pos:end="329:26"><name pos:start="329:9" pos:end="329:23">ff_er_frame_end</name><argument_list pos:start="329:24" pos:end="329:26">(<argument pos:start="329:25" pos:end="329:25"><expr pos:start="329:25" pos:end="329:25"><name pos:start="329:25" pos:end="329:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="335:5" pos:end="335:21"><expr pos:start="335:5" pos:end="335:20"><call pos:start="335:5" pos:end="335:20"><name pos:start="335:5" pos:end="335:17">MPV_frame_end</name><argument_list pos:start="335:18" pos:end="335:20">(<argument pos:start="335:19" pos:end="335:19"><expr pos:start="335:19" pos:end="335:19"><name pos:start="335:19" pos:end="335:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt pos:start="339:1" pos:end="339:74"><expr pos:start="339:1" pos:end="339:73"><call pos:start="339:1" pos:end="339:73"><name pos:start="339:1" pos:end="339:6">assert</name><argument_list pos:start="339:7" pos:end="339:73">(<argument pos:start="339:8" pos:end="339:72"><expr pos:start="339:8" pos:end="339:72"><name pos:start="339:8" pos:end="339:35"><name pos:start="339:8" pos:end="339:8">s</name><operator pos:start="339:9" pos:end="339:10">-&gt;</operator><name pos:start="339:11" pos:end="339:25">current_picture</name><operator pos:start="339:26" pos:end="339:26">.</operator><name pos:start="339:27" pos:end="339:35">pict_type</name></name> <operator pos:start="339:37" pos:end="339:38">==</operator> <name pos:start="339:40" pos:end="339:72"><name pos:start="339:40" pos:end="339:40">s</name><operator pos:start="339:41" pos:end="339:42">-&gt;</operator><name pos:start="339:43" pos:end="339:61">current_picture_ptr</name><operator pos:start="339:62" pos:end="339:63">-&gt;</operator><name pos:start="339:64" pos:end="339:72">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt pos:start="341:1" pos:end="341:53"><expr pos:start="341:1" pos:end="341:52"><call pos:start="341:1" pos:end="341:52"><name pos:start="341:1" pos:end="341:6">assert</name><argument_list pos:start="341:7" pos:end="341:52">(<argument pos:start="341:8" pos:end="341:51"><expr pos:start="341:8" pos:end="341:51"><name pos:start="341:8" pos:end="341:35"><name pos:start="341:8" pos:end="341:8">s</name><operator pos:start="341:9" pos:end="341:10">-&gt;</operator><name pos:start="341:11" pos:end="341:25">current_picture</name><operator pos:start="341:26" pos:end="341:26">.</operator><name pos:start="341:27" pos:end="341:35">pict_type</name></name> <operator pos:start="341:37" pos:end="341:38">==</operator> <name pos:start="341:40" pos:end="341:51"><name pos:start="341:40" pos:end="341:40">s</name><operator pos:start="341:41" pos:end="341:42">-&gt;</operator><name pos:start="341:43" pos:end="341:51">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="343:5" pos:end="351:5"><if pos:start="343:5" pos:end="347:5">if <condition pos:start="343:8" pos:end="343:50">(<expr pos:start="343:9" pos:end="343:49"><name pos:start="343:9" pos:end="343:20"><name pos:start="343:9" pos:end="343:9">s</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:20">pict_type</name></name> <operator pos:start="343:22" pos:end="343:23">==</operator> <name pos:start="343:25" pos:end="343:33">FF_B_TYPE</name> <operator pos:start="343:35" pos:end="343:36">||</operator> <name pos:start="343:38" pos:end="343:49"><name pos:start="343:38" pos:end="343:38">s</name><operator pos:start="343:39" pos:end="343:40">-&gt;</operator><name pos:start="343:41" pos:end="343:49">low_delay</name></name></expr>)</condition> <block pos:start="343:52" pos:end="347:5">{<block_content pos:start="345:9" pos:end="345:49">

        <expr_stmt pos:start="345:9" pos:end="345:49"><expr pos:start="345:9" pos:end="345:48"><operator pos:start="345:9" pos:end="345:9">*</operator><name pos:start="345:10" pos:end="345:13">pict</name><operator pos:start="345:14" pos:end="345:14">=</operator> <operator pos:start="345:16" pos:end="345:16">*</operator><operator pos:start="345:17" pos:end="345:17">(</operator><name pos:start="345:18" pos:end="345:24">AVFrame</name><operator pos:start="345:25" pos:end="345:25">*</operator><operator pos:start="345:26" pos:end="345:26">)</operator><name pos:start="345:27" pos:end="345:48"><name pos:start="345:27" pos:end="345:27">s</name><operator pos:start="345:28" pos:end="345:29">-&gt;</operator><name pos:start="345:30" pos:end="345:48">current_picture_ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="347:7" pos:end="351:5">else if <condition pos:start="347:15" pos:end="347:43">(<expr pos:start="347:16" pos:end="347:42"><name pos:start="347:16" pos:end="347:34"><name pos:start="347:16" pos:end="347:16">s</name><operator pos:start="347:17" pos:end="347:18">-&gt;</operator><name pos:start="347:19" pos:end="347:34">last_picture_ptr</name></name> <operator pos:start="347:36" pos:end="347:37">!=</operator> <name pos:start="347:39" pos:end="347:42">NULL</name></expr>)</condition> <block pos:start="347:45" pos:end="351:5">{<block_content pos:start="349:9" pos:end="349:46">

        <expr_stmt pos:start="349:9" pos:end="349:46"><expr pos:start="349:9" pos:end="349:45"><operator pos:start="349:9" pos:end="349:9">*</operator><name pos:start="349:10" pos:end="349:13">pict</name><operator pos:start="349:14" pos:end="349:14">=</operator> <operator pos:start="349:16" pos:end="349:16">*</operator><operator pos:start="349:17" pos:end="349:17">(</operator><name pos:start="349:18" pos:end="349:24">AVFrame</name><operator pos:start="349:25" pos:end="349:25">*</operator><operator pos:start="349:26" pos:end="349:26">)</operator><name pos:start="349:27" pos:end="349:45"><name pos:start="349:27" pos:end="349:27">s</name><operator pos:start="349:28" pos:end="349:29">-&gt;</operator><name pos:start="349:30" pos:end="349:45">last_picture_ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="355:5" pos:end="361:5"><if pos:start="355:5" pos:end="361:5">if<condition pos:start="355:7" pos:end="355:43">(<expr pos:start="355:8" pos:end="355:42"><name pos:start="355:8" pos:end="355:26"><name pos:start="355:8" pos:end="355:8">s</name><operator pos:start="355:9" pos:end="355:10">-&gt;</operator><name pos:start="355:11" pos:end="355:26">last_picture_ptr</name></name> <operator pos:start="355:28" pos:end="355:29">||</operator> <name pos:start="355:31" pos:end="355:42"><name pos:start="355:31" pos:end="355:31">s</name><operator pos:start="355:32" pos:end="355:33">-&gt;</operator><name pos:start="355:34" pos:end="355:42">low_delay</name></name></expr>)</condition><block pos:start="355:44" pos:end="361:5">{<block_content pos:start="357:9" pos:end="359:37">

        <expr_stmt pos:start="357:9" pos:end="357:37"><expr pos:start="357:9" pos:end="357:36"><operator pos:start="357:9" pos:end="357:9">*</operator><name pos:start="357:10" pos:end="357:18">data_size</name> <operator pos:start="357:20" pos:end="357:20">=</operator> <sizeof pos:start="357:22" pos:end="357:36">sizeof<argument_list pos:start="357:28" pos:end="357:36">(<argument pos:start="357:29" pos:end="357:35"><expr pos:start="357:29" pos:end="357:35"><name pos:start="357:29" pos:end="357:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:37"><expr pos:start="359:9" pos:end="359:36"><call pos:start="359:9" pos:end="359:36"><name pos:start="359:9" pos:end="359:27">ff_print_debug_info</name><argument_list pos:start="359:28" pos:end="359:36">(<argument pos:start="359:29" pos:end="359:29"><expr pos:start="359:29" pos:end="359:29"><name pos:start="359:29" pos:end="359:29">s</name></expr></argument>, <argument pos:start="359:32" pos:end="359:35"><expr pos:start="359:32" pos:end="359:35"><name pos:start="359:32" pos:end="359:35">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="365:5" pos:end="365:18"><expr pos:start="365:5" pos:end="365:17"><call pos:start="365:5" pos:end="365:17"><name pos:start="365:5" pos:end="365:11">av_free</name><argument_list pos:start="365:12" pos:end="365:17">(<argument pos:start="365:13" pos:end="365:16"><expr pos:start="365:13" pos:end="365:16"><name pos:start="365:13" pos:end="365:16">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="367:5" pos:end="367:20">return <expr pos:start="367:12" pos:end="367:19"><name pos:start="367:12" pos:end="367:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
