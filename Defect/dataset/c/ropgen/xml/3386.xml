<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3386.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ir2_decode_plane</name><parameter_list pos:start="1:28" pos:end="3:60">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">Ir2Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:54">width</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">height</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:80"><decl pos:start="1:69" pos:end="1:80"><type pos:start="1:69" pos:end="1:80"><name pos:start="1:69" pos:end="1:75">uint8_t</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">dst</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:37"><decl pos:start="3:29" pos:end="3:37"><type pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:37">pitch</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:59"><decl pos:start="3:40" pos:end="3:59"><type pos:start="3:40" pos:end="3:59"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:52">uint8_t</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">table</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">out</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:13">width</name> <operator pos:start="15:15" pos:end="15:15">&amp;</operator> <literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:72">/* first line contain absolute values, other lines contain deltas */</comment>

    <while pos:start="23:5" pos:end="47:5">while <condition pos:start="23:11" pos:end="23:23">(<expr pos:start="23:12" pos:end="23:22"><name pos:start="23:12" pos:end="23:14">out</name> <operator pos:start="23:16" pos:end="23:16">&lt;</operator> <name pos:start="23:18" pos:end="23:22">width</name></expr>)</condition> <block pos:start="23:25" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:9">

        <decl_stmt pos:start="25:9" pos:end="25:39"><decl pos:start="25:9" pos:end="25:38"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">c</name> <init pos:start="25:15" pos:end="25:38">= <expr pos:start="25:17" pos:end="25:38"><call pos:start="25:17" pos:end="25:38"><name pos:start="25:17" pos:end="25:28">ir2_get_code</name><argument_list pos:start="25:29" pos:end="25:38">(<argument pos:start="25:30" pos:end="25:37"><expr pos:start="25:30" pos:end="25:37"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:37"><name pos:start="25:31" pos:end="25:33">ctx</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:37">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="45:9"><if pos:start="27:9" pos:end="39:9">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:13">c</name> <operator pos:start="27:15" pos:end="27:16">&gt;=</operator> <literal type="number" pos:start="27:18" pos:end="27:21">0x80</literal></expr>)</condition> <block pos:start="27:24" pos:end="39:9">{<block_content pos:start="29:13" pos:end="37:34"> <comment type="block" pos:start="27:26" pos:end="27:44">/* we have a run */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:22"><expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:13">c</name> <operator pos:start="29:15" pos:end="29:16">-=</operator> <literal type="number" pos:start="29:18" pos:end="29:21">0x7F</literal></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="33:43"><if pos:start="31:13" pos:end="33:43">if <condition pos:start="31:16" pos:end="31:34">(<expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:19">out</name> <operator pos:start="31:21" pos:end="31:21">+</operator> <name pos:start="31:23" pos:end="31:23">c</name><operator pos:start="31:24" pos:end="31:24">*</operator><literal type="number" pos:start="31:25" pos:end="31:25">2</literal> <operator pos:start="31:27" pos:end="31:27">&gt;</operator> <name pos:start="31:29" pos:end="31:33">width</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:43"><block_content pos:start="33:17" pos:end="33:43">

                <return pos:start="33:17" pos:end="33:43">return <expr pos:start="33:24" pos:end="33:42"><name pos:start="33:24" pos:end="33:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="35:13" pos:end="37:34">for <control pos:start="35:17" pos:end="35:39">(<init pos:start="35:18" pos:end="35:23"><expr pos:start="35:18" pos:end="35:22"><name pos:start="35:18" pos:end="35:18">i</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</init> <condition pos:start="35:25" pos:end="35:34"><expr pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:25">i</name> <operator pos:start="35:27" pos:end="35:27">&lt;</operator> <name pos:start="35:29" pos:end="35:29">c</name> <operator pos:start="35:31" pos:end="35:31">*</operator> <literal type="number" pos:start="35:33" pos:end="35:33">2</literal></expr>;</condition> <incr pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:36">i</name><operator pos:start="35:37" pos:end="35:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:17" pos:end="37:34"><block_content pos:start="37:17" pos:end="37:34">

                <expr_stmt pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:19">dst</name><index pos:start="37:20" pos:end="37:26">[<expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:23">out</name><operator pos:start="37:24" pos:end="37:25">++</operator></expr>]</index></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <literal type="number" pos:start="37:30" pos:end="37:33">0x80</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="45:9">else <block pos:start="39:16" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:44"> <comment type="block" pos:start="39:18" pos:end="39:49">/* copy two values from table */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:15">dst</name><index pos:start="41:16" pos:end="41:22">[<expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:19">out</name><operator pos:start="41:20" pos:end="41:21">++</operator></expr>]</index></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:30">table</name><index pos:start="41:31" pos:end="41:37">[<expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:32">c</name> <operator pos:start="41:34" pos:end="41:34">*</operator> <literal type="number" pos:start="41:36" pos:end="41:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:44"><expr pos:start="43:13" pos:end="43:43"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:15">dst</name><index pos:start="43:16" pos:end="43:22">[<expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:19">out</name><operator pos:start="43:20" pos:end="43:21">++</operator></expr>]</index></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:43"><name pos:start="43:26" pos:end="43:30">table</name><index pos:start="43:31" pos:end="43:43">[<expr pos:start="43:32" pos:end="43:42"><operator pos:start="43:32" pos:end="43:32">(</operator><name pos:start="43:33" pos:end="43:33">c</name> <operator pos:start="43:35" pos:end="43:35">*</operator> <literal type="number" pos:start="43:37" pos:end="43:37">2</literal><operator pos:start="43:38" pos:end="43:38">)</operator> <operator pos:start="43:40" pos:end="43:40">+</operator> <literal type="number" pos:start="43:42" pos:end="43:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="49:5" pos:end="49:17"><expr pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:7">dst</name> <operator pos:start="49:9" pos:end="49:10">+=</operator> <name pos:start="49:12" pos:end="49:16">pitch</name></expr>;</expr_stmt>



    <for pos:start="53:5" pos:end="105:5">for <control pos:start="53:9" pos:end="53:32">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">j</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">1</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:27"><expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:17">j</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:26">height</name></expr>;</condition> <incr pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:29">j</name><operator pos:start="53:30" pos:end="53:31">++</operator></expr></incr>)</control> <block pos:start="53:34" pos:end="105:5">{<block_content pos:start="55:9" pos:end="103:21">

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:11">out</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <literal type="number" pos:start="55:15" pos:end="55:15">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:39"><if pos:start="57:9" pos:end="59:39">if <condition pos:start="57:12" pos:end="57:41">(<expr pos:start="57:13" pos:end="57:40"><call pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:25">get_bits_left</name><argument_list pos:start="57:26" pos:end="57:35">(<argument pos:start="57:27" pos:end="57:34"><expr pos:start="57:27" pos:end="57:34"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:34"><name pos:start="57:28" pos:end="57:30">ctx</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:34">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:37" pos:end="57:38">&lt;=</operator> <literal type="number" pos:start="57:40" pos:end="57:40">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:39"><block_content pos:start="59:13" pos:end="59:39">

            <return pos:start="59:13" pos:end="59:39">return <expr pos:start="59:20" pos:end="59:38"><name pos:start="59:20" pos:end="59:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <while pos:start="61:9" pos:end="101:9">while <condition pos:start="61:15" pos:end="61:27">(<expr pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:18">out</name> <operator pos:start="61:20" pos:end="61:20">&lt;</operator> <name pos:start="61:22" pos:end="61:26">width</name></expr>)</condition> <block pos:start="61:29" pos:end="101:9">{<block_content pos:start="63:13" pos:end="99:13">

            <decl_stmt pos:start="63:13" pos:end="63:43"><decl pos:start="63:13" pos:end="63:42"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:17">c</name> <init pos:start="63:19" pos:end="63:42">= <expr pos:start="63:21" pos:end="63:42"><call pos:start="63:21" pos:end="63:42"><name pos:start="63:21" pos:end="63:32">ir2_get_code</name><argument_list pos:start="63:33" pos:end="63:42">(<argument pos:start="63:34" pos:end="63:41"><expr pos:start="63:34" pos:end="63:41"><operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:41"><name pos:start="63:35" pos:end="63:37">ctx</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:41">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="65:13" pos:end="99:13"><if pos:start="65:13" pos:end="81:13">if <condition pos:start="65:16" pos:end="65:26">(<expr pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:17">c</name> <operator pos:start="65:19" pos:end="65:20">&gt;=</operator> <literal type="number" pos:start="65:22" pos:end="65:25">0x80</literal></expr>)</condition> <block pos:start="65:28" pos:end="81:13">{<block_content pos:start="67:17" pos:end="79:17"> <comment type="block" pos:start="65:30" pos:end="65:49">/* we have a skip */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:26"><expr pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:17">c</name> <operator pos:start="67:19" pos:end="67:20">-=</operator> <literal type="number" pos:start="67:22" pos:end="67:25">0x7F</literal></expr>;</expr_stmt>

                <if_stmt pos:start="69:17" pos:end="71:47"><if pos:start="69:17" pos:end="71:47">if <condition pos:start="69:20" pos:end="69:38">(<expr pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:23">out</name> <operator pos:start="69:25" pos:end="69:25">+</operator> <name pos:start="69:27" pos:end="69:27">c</name><operator pos:start="69:28" pos:end="69:28">*</operator><literal type="number" pos:start="69:29" pos:end="69:29">2</literal> <operator pos:start="69:31" pos:end="69:31">&gt;</operator> <name pos:start="69:33" pos:end="69:37">width</name></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:47"><block_content pos:start="71:21" pos:end="71:47">

                    <return pos:start="71:21" pos:end="71:47">return <expr pos:start="71:28" pos:end="71:46"><name pos:start="71:28" pos:end="71:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <for pos:start="73:17" pos:end="79:17">for <control pos:start="73:21" pos:end="73:43">(<init pos:start="73:22" pos:end="73:27"><expr pos:start="73:22" pos:end="73:26"><name pos:start="73:22" pos:end="73:22">i</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr>;</init> <condition pos:start="73:29" pos:end="73:38"><expr pos:start="73:29" pos:end="73:37"><name pos:start="73:29" pos:end="73:29">i</name> <operator pos:start="73:31" pos:end="73:31">&lt;</operator> <name pos:start="73:33" pos:end="73:33">c</name> <operator pos:start="73:35" pos:end="73:35">*</operator> <literal type="number" pos:start="73:37" pos:end="73:37">2</literal></expr>;</condition> <incr pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:40">i</name><operator pos:start="73:41" pos:end="73:42">++</operator></expr></incr>)</control> <block pos:start="73:45" pos:end="79:17">{<block_content pos:start="75:21" pos:end="77:26">

                    <expr_stmt pos:start="75:21" pos:end="75:48"><expr pos:start="75:21" pos:end="75:47"><name pos:start="75:21" pos:end="75:28"><name pos:start="75:21" pos:end="75:23">dst</name><index pos:start="75:24" pos:end="75:28">[<expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">out</name></expr>]</index></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <name pos:start="75:32" pos:end="75:47"><name pos:start="75:32" pos:end="75:34">dst</name><index pos:start="75:35" pos:end="75:47">[<expr pos:start="75:36" pos:end="75:46"><name pos:start="75:36" pos:end="75:38">out</name> <operator pos:start="75:40" pos:end="75:40">-</operator> <name pos:start="75:42" pos:end="75:46">pitch</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:25"><name pos:start="77:21" pos:end="77:23">out</name><operator pos:start="77:24" pos:end="77:25">++</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="99:13">else <block pos:start="81:20" pos:end="99:13">{<block_content pos:start="83:17" pos:end="97:22"> <comment type="block" pos:start="81:22" pos:end="81:52">/* add two deltas from table */</comment>

                <decl_stmt pos:start="83:17" pos:end="83:67"><decl pos:start="83:17" pos:end="83:66"><type pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:19">int</name></type> <name pos:start="83:21" pos:end="83:21">t</name>    <init pos:start="83:26" pos:end="83:66">= <expr pos:start="83:28" pos:end="83:66"><name pos:start="83:28" pos:end="83:43"><name pos:start="83:28" pos:end="83:30">dst</name><index pos:start="83:31" pos:end="83:43">[<expr pos:start="83:32" pos:end="83:42"><name pos:start="83:32" pos:end="83:34">out</name> <operator pos:start="83:36" pos:end="83:36">-</operator> <name pos:start="83:38" pos:end="83:42">pitch</name></expr>]</index></name> <operator pos:start="83:45" pos:end="83:45">+</operator> <operator pos:start="83:47" pos:end="83:47">(</operator><name pos:start="83:48" pos:end="83:59"><name pos:start="83:48" pos:end="83:52">table</name><index pos:start="83:53" pos:end="83:59">[<expr pos:start="83:54" pos:end="83:58"><name pos:start="83:54" pos:end="83:54">c</name> <operator pos:start="83:56" pos:end="83:56">*</operator> <literal type="number" pos:start="83:58" pos:end="83:58">2</literal></expr>]</index></name> <operator pos:start="83:61" pos:end="83:61">-</operator> <literal type="number" pos:start="83:63" pos:end="83:65">128</literal><operator pos:start="83:66" pos:end="83:66">)</operator></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:44"><expr pos:start="85:17" pos:end="85:43"><name pos:start="85:17" pos:end="85:17">t</name>        <operator pos:start="85:26" pos:end="85:26">=</operator> <call pos:start="85:28" pos:end="85:43"><name pos:start="85:28" pos:end="85:40">av_clip_uint8</name><argument_list pos:start="85:41" pos:end="85:43">(<argument pos:start="85:42" pos:end="85:42"><expr pos:start="85:42" pos:end="85:42"><name pos:start="85:42" pos:end="85:42">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:29"><expr pos:start="87:17" pos:end="87:28"><name pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:19">dst</name><index pos:start="87:20" pos:end="87:24">[<expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">out</name></expr>]</index></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:22"><expr pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:19">out</name><operator pos:start="89:20" pos:end="89:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:73"><expr pos:start="91:17" pos:end="91:72"><name pos:start="91:17" pos:end="91:17">t</name>        <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:43"><name pos:start="91:28" pos:end="91:30">dst</name><index pos:start="91:31" pos:end="91:43">[<expr pos:start="91:32" pos:end="91:42"><name pos:start="91:32" pos:end="91:34">out</name> <operator pos:start="91:36" pos:end="91:36">-</operator> <name pos:start="91:38" pos:end="91:42">pitch</name></expr>]</index></name> <operator pos:start="91:45" pos:end="91:45">+</operator> <operator pos:start="91:47" pos:end="91:47">(</operator><name pos:start="91:48" pos:end="91:65"><name pos:start="91:48" pos:end="91:52">table</name><index pos:start="91:53" pos:end="91:65">[<expr pos:start="91:54" pos:end="91:64"><operator pos:start="91:54" pos:end="91:54">(</operator><name pos:start="91:55" pos:end="91:55">c</name> <operator pos:start="91:57" pos:end="91:57">*</operator> <literal type="number" pos:start="91:59" pos:end="91:59">2</literal><operator pos:start="91:60" pos:end="91:60">)</operator> <operator pos:start="91:62" pos:end="91:62">+</operator> <literal type="number" pos:start="91:64" pos:end="91:64">1</literal></expr>]</index></name> <operator pos:start="91:67" pos:end="91:67">-</operator> <literal type="number" pos:start="91:69" pos:end="91:71">128</literal><operator pos:start="91:72" pos:end="91:72">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:44"><expr pos:start="93:17" pos:end="93:43"><name pos:start="93:17" pos:end="93:17">t</name>        <operator pos:start="93:26" pos:end="93:26">=</operator> <call pos:start="93:28" pos:end="93:43"><name pos:start="93:28" pos:end="93:40">av_clip_uint8</name><argument_list pos:start="93:41" pos:end="93:43">(<argument pos:start="93:42" pos:end="93:42"><expr pos:start="93:42" pos:end="93:42"><name pos:start="93:42" pos:end="93:42">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:29"><expr pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:24"><name pos:start="95:17" pos:end="95:19">dst</name><index pos:start="95:20" pos:end="95:24">[<expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">out</name></expr>]</index></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:22"><expr pos:start="97:17" pos:end="97:21"><name pos:start="97:17" pos:end="97:19">out</name><operator pos:start="97:20" pos:end="97:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="103:9" pos:end="103:21"><expr pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:11">dst</name> <operator pos:start="103:13" pos:end="103:14">+=</operator> <name pos:start="103:16" pos:end="103:20">pitch</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
