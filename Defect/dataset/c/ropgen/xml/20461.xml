<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20461.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">mpeg4_unpack_bframes_filter</name><parameter_list pos:start="1:39" pos:end="1:72">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">AVBSFContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">AVPacket</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">out</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:27">UnpackBFramesBSFContext</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:30">s</name> <init pos:start="5:32" pos:end="5:47">= <expr pos:start="5:34" pos:end="5:47"><name pos:start="5:34" pos:end="5:47"><name pos:start="5:34" pos:end="5:36">ctx</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">pos_p</name> <init pos:start="7:15" pos:end="7:18">= <expr pos:start="7:17" pos:end="7:18"><operator pos:start="7:17" pos:end="7:17">-</operator><literal type="number" pos:start="7:18" pos:end="7:18">1</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:26">nb_vop</name> <init pos:start="7:28" pos:end="7:30">= <expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>, <decl pos:start="7:33" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:33" pos:end="7:40">pos_vop2</name> <init pos:start="7:42" pos:end="7:45">= <expr pos:start="7:44" pos:end="7:45"><operator pos:start="7:44" pos:end="7:44">-</operator><literal type="number" pos:start="7:45" pos:end="7:45">1</literal></expr></init></decl>, <decl pos:start="7:48" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:48" pos:end="7:50">ret</name> <init pos:start="7:52" pos:end="7:54">= <expr pos:start="7:54" pos:end="7:54"><literal type="number" pos:start="7:54" pos:end="7:54">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVPacket</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">in</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:37"><name pos:start="13:11" pos:end="13:27">ff_bsf_get_packet</name><argument_list pos:start="13:28" pos:end="13:37">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">ctx</name></expr></argument>, <argument pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:36">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:19"><if pos:start="15:5" pos:end="17:19">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:64"><expr pos:start="21:5" pos:end="21:63"><call pos:start="21:5" pos:end="21:63"><name pos:start="21:5" pos:end="21:15">scan_buffer</name><argument_list pos:start="21:16" pos:end="21:63">(<argument pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:18">in</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">data</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:28">in</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:34">size</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:42"><expr pos:start="21:37" pos:end="21:42"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:42">pos_p</name></expr></argument>, <argument pos:start="21:45" pos:end="21:51"><expr pos:start="21:45" pos:end="21:51"><operator pos:start="21:45" pos:end="21:45">&amp;</operator><name pos:start="21:46" pos:end="21:51">nb_vop</name></expr></argument>, <argument pos:start="21:54" pos:end="21:62"><expr pos:start="21:54" pos:end="21:62"><operator pos:start="21:54" pos:end="21:54">&amp;</operator><name pos:start="21:55" pos:end="21:62">pos_vop2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:85"><expr pos:start="23:5" pos:end="23:84"><call pos:start="23:5" pos:end="23:84"><name pos:start="23:5" pos:end="23:10">av_log</name><argument_list pos:start="23:11" pos:end="23:84">(<argument pos:start="23:12" pos:end="23:14"><expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">ctx</name></expr></argument>, <argument pos:start="23:17" pos:end="23:28"><expr pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:28">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="23:31" pos:end="23:75"><expr pos:start="23:31" pos:end="23:75"><literal type="string" pos:start="23:31" pos:end="23:75">"Found %d VOP startcode(s) in this packet.\n"</literal></expr></argument>, <argument pos:start="23:78" pos:end="23:83"><expr pos:start="23:78" pos:end="23:83"><name pos:start="23:78" pos:end="23:83">nb_vop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="57:5"><if pos:start="27:5" pos:end="57:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:16">pos_vop2</name> <operator pos:start="27:18" pos:end="27:19">&gt;=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>)</condition> <block pos:start="27:24" pos:end="57:5">{<block_content pos:start="29:9" pos:end="55:9">

        <if_stmt pos:start="29:9" pos:end="39:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:27">(<expr pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:26">b_frame_buf</name></name></expr>)</condition> <block pos:start="29:29" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:36">

            <expr_stmt pos:start="31:13" pos:end="33:74"><expr pos:start="31:13" pos:end="33:73"><call pos:start="31:13" pos:end="33:73"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="33:73">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ctx</name></expr></argument>, <argument pos:start="31:25" pos:end="31:38"><expr pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:38">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="33:20" pos:end="33:72"><expr pos:start="33:20" pos:end="33:72"><literal type="string" pos:start="33:20" pos:end="33:72">"Missing one N-VOP packet, discarding one B-frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:38"><expr pos:start="35:13" pos:end="35:37"><call pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:20">av_freep</name><argument_list pos:start="35:21" pos:end="35:37">(<argument pos:start="35:22" pos:end="35:36"><expr pos:start="35:22" pos:end="35:36"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:36"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:36">b_frame_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:31">b_frame_buf_size</name></name> <operator pos:start="37:33" pos:end="37:33">=</operator> <literal type="number" pos:start="37:35" pos:end="37:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="41:9" pos:end="41:56">/* store the packed B-frame in the BSFContext */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:27">b_frame_buf_size</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:38"><name pos:start="43:31" pos:end="43:32">in</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:38">size</name></name> <operator pos:start="43:40" pos:end="43:40">-</operator> <name pos:start="43:42" pos:end="43:49">pos_vop2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:90"><expr pos:start="45:9" pos:end="45:89"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">b_frame_buf</name></name>      <operator pos:start="45:29" pos:end="45:29">=</operator> <call pos:start="45:31" pos:end="45:89"><name pos:start="45:31" pos:end="45:47">create_new_buffer</name><argument_list pos:start="45:48" pos:end="45:89">(<argument pos:start="45:49" pos:end="45:67"><expr pos:start="45:49" pos:end="45:67"><name pos:start="45:49" pos:end="45:56"><name pos:start="45:49" pos:end="45:50">in</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:56">data</name></name> <operator pos:start="45:58" pos:end="45:58">+</operator> <name pos:start="45:60" pos:end="45:67">pos_vop2</name></expr></argument>, <argument pos:start="45:70" pos:end="45:88"><expr pos:start="45:70" pos:end="45:88"><name pos:start="45:70" pos:end="45:88"><name pos:start="45:70" pos:end="45:70">s</name><operator pos:start="45:71" pos:end="45:72">-&gt;</operator><name pos:start="45:73" pos:end="45:88">b_frame_buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:28">(<expr pos:start="47:13" pos:end="47:27"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:27">b_frame_buf</name></name></expr>)</condition> <block pos:start="47:30" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:35">

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:31">b_frame_buf_size</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><call pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:26">av_packet_free</name><argument_list pos:start="51:27" pos:end="51:31">(<argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:30">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:35">return <expr pos:start="53:20" pos:end="53:34"><call pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:26">AVERROR</name><argument_list pos:start="53:27" pos:end="53:34">(<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:14">nb_vop</name> <operator pos:start="61:16" pos:end="61:16">&gt;</operator> <literal type="number" pos:start="61:18" pos:end="61:18">2</literal></expr>)</condition> <block pos:start="61:21" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:76">

        <expr_stmt pos:start="63:9" pos:end="65:76"><expr pos:start="63:9" pos:end="65:75"><call pos:start="63:9" pos:end="65:75"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="65:75">(<argument pos:start="63:16" pos:end="63:18"><expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ctx</name></expr></argument>, <argument pos:start="63:21" pos:end="63:34"><expr pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:34">AV_LOG_WARNING</name></expr></argument>,

       <argument pos:start="65:8" pos:end="65:66"><expr pos:start="65:8" pos:end="65:66"><literal type="string" pos:start="65:8" pos:end="65:66">"Found %d VOP headers in one packet, only unpacking one.\n"</literal></expr></argument>, <argument pos:start="65:69" pos:end="65:74"><expr pos:start="65:69" pos:end="65:74"><name pos:start="65:69" pos:end="65:74">nb_vop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="145:5"><if pos:start="71:5" pos:end="121:5">if <condition pos:start="71:8" pos:end="71:38">(<expr pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:14">nb_vop</name> <operator pos:start="71:16" pos:end="71:17">==</operator> <literal type="number" pos:start="71:19" pos:end="71:19">1</literal> <operator pos:start="71:21" pos:end="71:22">&amp;&amp;</operator> <name pos:start="71:24" pos:end="71:37"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:37">b_frame_buf</name></name></expr>)</condition> <block pos:start="71:40" pos:end="121:5">{<block_content pos:start="75:9" pos:end="119:9">

        <comment type="block" pos:start="73:9" pos:end="73:39">/* use frame from BSFContext */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:44"><expr pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:43"><name pos:start="75:15" pos:end="75:34">av_packet_copy_props</name><argument_list pos:start="75:35" pos:end="75:43">(<argument pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:38">out</name></expr></argument>, <argument pos:start="75:41" pos:end="75:42"><expr pos:start="75:41" pos:end="75:42"><name pos:start="75:41" pos:end="75:42">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:20">(<expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">&lt;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>)</condition> <block pos:start="77:22" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:23">

            <expr_stmt pos:start="79:13" pos:end="79:32"><expr pos:start="79:13" pos:end="79:31"><call pos:start="79:13" pos:end="79:31"><name pos:start="79:13" pos:end="79:26">av_packet_free</name><argument_list pos:start="79:27" pos:end="79:31">(<argument pos:start="79:28" pos:end="79:30"><expr pos:start="79:28" pos:end="79:30"><operator pos:start="79:28" pos:end="79:28">&amp;</operator><name pos:start="79:29" pos:end="79:30">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:23">return <expr pos:start="81:20" pos:end="81:22"><name pos:start="81:20" pos:end="81:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:70"><expr pos:start="87:9" pos:end="87:69"><call pos:start="87:9" pos:end="87:69"><name pos:start="87:9" pos:end="87:27">av_packet_from_data</name><argument_list pos:start="87:28" pos:end="87:69">(<argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">out</name></expr></argument>, <argument pos:start="87:34" pos:end="87:47"><expr pos:start="87:34" pos:end="87:47"><name pos:start="87:34" pos:end="87:47"><name pos:start="87:34" pos:end="87:34">s</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:47">b_frame_buf</name></name></expr></argument>, <argument pos:start="87:50" pos:end="87:68"><expr pos:start="87:50" pos:end="87:68"><name pos:start="87:50" pos:end="87:68"><name pos:start="87:50" pos:end="87:50">s</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:68">b_frame_buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="119:9"><if pos:start="89:9" pos:end="99:9">if <condition pos:start="89:12" pos:end="89:38">(<expr pos:start="89:13" pos:end="89:37"><name pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:14">in</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:20">size</name></name> <operator pos:start="89:22" pos:end="89:23">&lt;=</operator> <name pos:start="89:25" pos:end="89:37">MAX_NVOP_SIZE</name></expr>)</condition> <block pos:start="89:40" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:36">

            <comment type="block" pos:start="91:13" pos:end="91:23">/* N-VOP */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:59"><expr pos:start="93:13" pos:end="93:58"><call pos:start="93:13" pos:end="93:58"><name pos:start="93:13" pos:end="93:18">av_log</name><argument_list pos:start="93:19" pos:end="93:58">(<argument pos:start="93:20" pos:end="93:22"><expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">ctx</name></expr></argument>, <argument pos:start="93:25" pos:end="93:36"><expr pos:start="93:25" pos:end="93:36"><name pos:start="93:25" pos:end="93:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:39" pos:end="93:57"><expr pos:start="93:39" pos:end="93:57"><literal type="string" pos:start="93:39" pos:end="93:57">"Skipping N-VOP.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:39"><expr pos:start="95:13" pos:end="95:38"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:26">b_frame_buf</name></name>      <operator pos:start="95:33" pos:end="95:33">=</operator> <name pos:start="95:35" pos:end="95:38">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:36"><expr pos:start="97:13" pos:end="97:35"><name pos:start="97:13" pos:end="97:31"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:31">b_frame_buf_size</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <literal type="number" pos:start="97:35" pos:end="97:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="119:9">else <block pos:start="99:16" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:13">

            <comment type="block" pos:start="101:13" pos:end="101:45">/* copy packet into BSFContext */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:43"><expr pos:start="103:13" pos:end="103:42"><name pos:start="103:13" pos:end="103:31"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:31">b_frame_buf_size</name></name> <operator pos:start="103:33" pos:end="103:33">=</operator> <name pos:start="103:35" pos:end="103:42"><name pos:start="103:35" pos:end="103:36">in</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:42">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:72"><expr pos:start="105:13" pos:end="105:71"><name pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:26">b_frame_buf</name></name>      <operator pos:start="105:33" pos:end="105:33">=</operator> <call pos:start="105:35" pos:end="105:71"><name pos:start="105:35" pos:end="105:51">create_new_buffer</name><argument_list pos:start="105:52" pos:end="105:71">(<argument pos:start="105:53" pos:end="105:60"><expr pos:start="105:53" pos:end="105:60"><name pos:start="105:53" pos:end="105:60"><name pos:start="105:53" pos:end="105:54">in</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:60">data</name></name></expr></argument>, <argument pos:start="105:63" pos:end="105:70"><expr pos:start="105:63" pos:end="105:70"><name pos:start="105:63" pos:end="105:70"><name pos:start="105:63" pos:end="105:64">in</name><operator pos:start="105:65" pos:end="105:66">-&gt;</operator><name pos:start="105:67" pos:end="105:70">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="117:13"><if pos:start="107:13" pos:end="117:13">if <condition pos:start="107:16" pos:end="107:32">(<expr pos:start="107:17" pos:end="107:31"><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:31"><name pos:start="107:18" pos:end="107:18">s</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:31">b_frame_buf</name></name></expr>)</condition> <block pos:start="107:34" pos:end="117:13">{<block_content pos:start="109:17" pos:end="115:39">

                <expr_stmt pos:start="109:17" pos:end="109:40"><expr pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:35"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:35">b_frame_buf_size</name></name> <operator pos:start="109:37" pos:end="109:37">=</operator> <literal type="number" pos:start="109:39" pos:end="109:39">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:37"><expr pos:start="111:17" pos:end="111:36"><call pos:start="111:17" pos:end="111:36"><name pos:start="111:17" pos:end="111:31">av_packet_unref</name><argument_list pos:start="111:32" pos:end="111:36">(<argument pos:start="111:33" pos:end="111:35"><expr pos:start="111:33" pos:end="111:35"><name pos:start="111:33" pos:end="111:35">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:36"><expr pos:start="113:17" pos:end="113:35"><call pos:start="113:17" pos:end="113:35"><name pos:start="113:17" pos:end="113:30">av_packet_free</name><argument_list pos:start="113:31" pos:end="113:35">(<argument pos:start="113:32" pos:end="113:34"><expr pos:start="113:32" pos:end="113:34"><operator pos:start="113:32" pos:end="113:32">&amp;</operator><name pos:start="113:33" pos:end="113:34">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="115:17" pos:end="115:39">return <expr pos:start="115:24" pos:end="115:38"><call pos:start="115:24" pos:end="115:38"><name pos:start="115:24" pos:end="115:30">AVERROR</name><argument_list pos:start="115:31" pos:end="115:38">(<argument pos:start="115:32" pos:end="115:37"><expr pos:start="115:32" pos:end="115:37"><name pos:start="115:32" pos:end="115:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="121:7" pos:end="129:5">else if <condition pos:start="121:15" pos:end="121:27">(<expr pos:start="121:16" pos:end="121:26"><name pos:start="121:16" pos:end="121:21">nb_vop</name> <operator pos:start="121:23" pos:end="121:24">&gt;=</operator> <literal type="number" pos:start="121:26" pos:end="121:26">2</literal></expr>)</condition> <block pos:start="121:29" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:29">

        <comment type="block" pos:start="123:9" pos:end="123:43">/* use first frame of the packet */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:36"><expr pos:start="125:9" pos:end="125:35"><call pos:start="125:9" pos:end="125:35"><name pos:start="125:9" pos:end="125:26">av_packet_move_ref</name><argument_list pos:start="125:27" pos:end="125:35">(<argument pos:start="125:28" pos:end="125:30"><expr pos:start="125:28" pos:end="125:30"><name pos:start="125:28" pos:end="125:30">out</name></expr></argument>, <argument pos:start="125:33" pos:end="125:34"><expr pos:start="125:33" pos:end="125:34"><name pos:start="125:33" pos:end="125:34">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:11">out</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:17">size</name></name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:28">pos_vop2</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="129:7" pos:end="139:5">else if <condition pos:start="129:15" pos:end="129:26">(<expr pos:start="129:16" pos:end="129:25"><name pos:start="129:16" pos:end="129:20">pos_p</name> <operator pos:start="129:22" pos:end="129:23">&gt;=</operator> <literal type="number" pos:start="129:25" pos:end="129:25">0</literal></expr>)</condition> <block pos:start="129:28" pos:end="139:5">{<block_content pos:start="131:9" pos:end="137:32">

        <expr_stmt pos:start="131:9" pos:end="131:85"><expr pos:start="131:9" pos:end="131:84"><call pos:start="131:9" pos:end="131:84"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="131:84">(<argument pos:start="131:16" pos:end="131:18"><expr pos:start="131:16" pos:end="131:18"><name pos:start="131:16" pos:end="131:18">ctx</name></expr></argument>, <argument pos:start="131:21" pos:end="131:32"><expr pos:start="131:21" pos:end="131:32"><name pos:start="131:21" pos:end="131:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="131:35" pos:end="131:83"><expr pos:start="131:35" pos:end="131:83"><literal type="string" pos:start="131:35" pos:end="131:83">"Updating DivX userdata (remove trailing 'p').\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:36"><expr pos:start="133:9" pos:end="133:35"><call pos:start="133:9" pos:end="133:35"><name pos:start="133:9" pos:end="133:26">av_packet_move_ref</name><argument_list pos:start="133:27" pos:end="133:35">(<argument pos:start="133:28" pos:end="133:30"><expr pos:start="133:28" pos:end="133:30"><name pos:start="133:28" pos:end="133:30">out</name></expr></argument>, <argument pos:start="133:33" pos:end="133:34"><expr pos:start="133:33" pos:end="133:34"><name pos:start="133:33" pos:end="133:34">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="135:9" pos:end="135:76">/* remove 'p' (packed) from the end of the (DivX) userdata string */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:32"><expr pos:start="137:9" pos:end="137:31"><name pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:11">out</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:17">data</name><index pos:start="137:18" pos:end="137:24">[<expr pos:start="137:19" pos:end="137:23"><name pos:start="137:19" pos:end="137:23">pos_p</name></expr>]</index></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <literal type="char" pos:start="137:28" pos:end="137:31">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="139:7" pos:end="145:5">else <block pos:start="139:12" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:36">

        <comment type="block" pos:start="141:9" pos:end="141:25">/* copy packet */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:36"><expr pos:start="143:9" pos:end="143:35"><call pos:start="143:9" pos:end="143:35"><name pos:start="143:9" pos:end="143:26">av_packet_move_ref</name><argument_list pos:start="143:27" pos:end="143:35">(<argument pos:start="143:28" pos:end="143:30"><expr pos:start="143:28" pos:end="143:30"><name pos:start="143:28" pos:end="143:30">out</name></expr></argument>, <argument pos:start="143:33" pos:end="143:34"><expr pos:start="143:33" pos:end="143:34"><name pos:start="143:33" pos:end="143:34">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:24"><expr pos:start="149:5" pos:end="149:23"><call pos:start="149:5" pos:end="149:23"><name pos:start="149:5" pos:end="149:18">av_packet_free</name><argument_list pos:start="149:19" pos:end="149:23">(<argument pos:start="149:20" pos:end="149:22"><expr pos:start="149:20" pos:end="149:22"><operator pos:start="149:20" pos:end="149:20">&amp;</operator><name pos:start="149:21" pos:end="149:22">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="153:5" pos:end="153:13">return <expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
