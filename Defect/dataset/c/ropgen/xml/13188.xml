<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13188.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">isabus_fdc_realize</name><parameter_list pos:start="1:31" pos:end="1:62">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:42">DeviceState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:54">Error</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ISADevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">isadev</name> <init pos:start="5:23" pos:end="5:39">= <expr pos:start="5:25" pos:end="5:39"><call pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:34">ISA_DEVICE</name><argument_list pos:start="5:35" pos:end="5:39">(<argument pos:start="5:36" pos:end="5:38"><expr pos:start="5:36" pos:end="5:38"><name pos:start="5:36" pos:end="5:38">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">FDCtrlISABus</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">isa</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><call pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:31">ISA_FDC</name><argument_list pos:start="7:32" pos:end="7:36">(<argument pos:start="7:33" pos:end="7:35"><expr pos:start="7:33" pos:end="7:35"><name pos:start="7:33" pos:end="7:35">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">FDCtrl</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:18">fdctrl</name> <init pos:start="9:20" pos:end="9:32">= <expr pos:start="9:22" pos:end="9:32"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:25">isa</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:32">state</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:36"><expr pos:start="15:5" pos:end="17:35"><call pos:start="15:5" pos:end="17:35"><name pos:start="15:5" pos:end="15:28">isa_register_portio_list</name><argument_list pos:start="15:29" pos:end="17:35">(<argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:35">isadev</name></expr></argument>, <argument pos:start="15:38" pos:end="15:48"><expr pos:start="15:38" pos:end="15:48"><name pos:start="15:38" pos:end="15:48"><name pos:start="15:38" pos:end="15:40">isa</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:48">iobase</name></name></expr></argument>, <argument pos:start="15:51" pos:end="15:65"><expr pos:start="15:51" pos:end="15:65"><name pos:start="15:51" pos:end="15:65">fdc_portio_list</name></expr></argument>, <argument pos:start="15:68" pos:end="15:73"><expr pos:start="15:68" pos:end="15:73"><name pos:start="15:68" pos:end="15:73">fdctrl</name></expr></argument>,

                             <argument pos:start="17:30" pos:end="17:34"><expr pos:start="17:30" pos:end="17:34"><literal type="string" pos:start="17:30" pos:end="17:34">"fdc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><call pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:16">isa_init_irq</name><argument_list pos:start="21:17" pos:end="21:48">(<argument pos:start="21:18" pos:end="21:23"><expr pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:23">isadev</name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><operator pos:start="21:26" pos:end="21:26">&amp;</operator><name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:32">fdctrl</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:37">irq</name></name></expr></argument>, <argument pos:start="21:40" pos:end="21:47"><expr pos:start="21:40" pos:end="21:47"><name pos:start="21:40" pos:end="21:47"><name pos:start="21:40" pos:end="21:42">isa</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:47">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:10">fdctrl</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:21">dma_chann</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:27">isa</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:32">dma</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:14">fdctrl</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">dma_chann</name></name> <operator pos:start="25:27" pos:end="25:28">!=</operator> <operator pos:start="25:30" pos:end="25:30">-</operator><literal type="number" pos:start="25:31" pos:end="25:31">1</literal></expr>)</condition> <block pos:start="25:34" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:28">

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:14">fdctrl</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">dma</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:72"><name pos:start="27:23" pos:end="27:33">isa_get_dma</name><argument_list pos:start="27:34" pos:end="27:72">(<argument pos:start="27:35" pos:end="27:61"><expr pos:start="27:35" pos:end="27:61"><call pos:start="27:35" pos:end="27:61"><name pos:start="27:35" pos:end="27:53">isa_bus_from_device</name><argument_list pos:start="27:54" pos:end="27:61">(<argument pos:start="27:55" pos:end="27:60"><expr pos:start="27:55" pos:end="27:60"><name pos:start="27:55" pos:end="27:60">isadev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:64" pos:end="27:71"><expr pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:66">isa</name><operator pos:start="27:67" pos:end="27:68">-&gt;</operator><name pos:start="27:69" pos:end="27:71">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><call pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:14">assert</name><argument_list pos:start="29:15" pos:end="29:27">(<argument pos:start="29:16" pos:end="29:26"><expr pos:start="29:16" pos:end="29:26"><name pos:start="29:16" pos:end="29:26"><name pos:start="29:16" pos:end="29:21">fdctrl</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:26">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><call pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:31">qdev_set_legacy_instance_id</name><argument_list pos:start="35:32" pos:end="35:52">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">dev</name></expr></argument>, <argument pos:start="35:38" pos:end="35:48"><expr pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:40">isa</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:48">iobase</name></name></expr></argument>, <argument pos:start="35:51" pos:end="35:51"><expr pos:start="35:51" pos:end="35:51"><literal type="number" pos:start="35:51" pos:end="35:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:25">fdctrl_realize_common</name><argument_list pos:start="37:26" pos:end="37:39">(<argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><name pos:start="37:27" pos:end="37:32">fdctrl</name></expr></argument>, <argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:38">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:20">(<expr pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:11">err</name> <operator pos:start="39:13" pos:end="39:14">!=</operator> <name pos:start="39:16" pos:end="39:19">NULL</name></expr>)</condition> <block pos:start="39:22" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:15">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><call pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:23">error_propagate</name><argument_list pos:start="41:24" pos:end="41:34">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">errp</name></expr></argument>, <argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
