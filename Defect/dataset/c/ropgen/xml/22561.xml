<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22561.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">count_cow_clusters</name><parameter_list pos:start="1:30" pos:end="3:37">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:44">BDRVQcow2State</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:64">nb_clusters</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:22"><type pos:start="3:5" pos:end="3:22"><name pos:start="3:5" pos:end="3:12">uint64_t</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:22">l2_table</name></decl></parameter>, <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:36">l2_index</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="45:5">for <control pos:start="11:9" pos:end="11:37">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:32"><expr pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:31">nb_clusters</name></expr>;</condition> <incr pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:34">i</name><operator pos:start="11:35" pos:end="11:36">++</operator></expr></incr>)</control> <block pos:start="11:39" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:9">

        <decl_stmt pos:start="13:9" pos:end="13:64"><decl pos:start="13:9" pos:end="13:63"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">uint64_t</name></type> <name pos:start="13:18" pos:end="13:25">l2_entry</name> <init pos:start="13:27" pos:end="13:63">= <expr pos:start="13:29" pos:end="13:63"><call pos:start="13:29" pos:end="13:63"><name pos:start="13:29" pos:end="13:39">be64_to_cpu</name><argument_list pos:start="13:40" pos:end="13:63">(<argument pos:start="13:41" pos:end="13:62"><expr pos:start="13:41" pos:end="13:62"><name pos:start="13:41" pos:end="13:62"><name pos:start="13:41" pos:end="13:48">l2_table</name><index pos:start="13:49" pos:end="13:62">[<expr pos:start="13:50" pos:end="13:61"><name pos:start="13:50" pos:end="13:57">l2_index</name> <operator pos:start="13:59" pos:end="13:59">+</operator> <name pos:start="13:61" pos:end="13:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:73"><decl pos:start="15:9" pos:end="15:72"><type pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:24">QCow2ClusterType</name></type> <name pos:start="15:26" pos:end="15:37">cluster_type</name> <init pos:start="15:39" pos:end="15:72">= <expr pos:start="15:41" pos:end="15:72"><call pos:start="15:41" pos:end="15:72"><name pos:start="15:41" pos:end="15:62">qcow2_get_cluster_type</name><argument_list pos:start="15:63" pos:end="15:72">(<argument pos:start="15:64" pos:end="15:71"><expr pos:start="15:64" pos:end="15:71"><name pos:start="15:64" pos:end="15:71">l2_entry</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <switch pos:start="19:9" pos:end="43:9">switch<condition pos:start="19:15" pos:end="19:28">(<expr pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:27">cluster_type</name></expr>)</condition> <block pos:start="19:30" pos:end="43:9">{<block_content pos:start="21:9" pos:end="41:20">

        <case pos:start="21:9" pos:end="21:34">case <expr pos:start="21:14" pos:end="21:33"><name pos:start="21:14" pos:end="21:33">QCOW2_CLUSTER_NORMAL</name></expr>:</case>

            <if_stmt pos:start="23:13" pos:end="27:13"><if pos:start="23:13" pos:end="27:13">if <condition pos:start="23:16" pos:end="23:45">(<expr pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:24">l2_entry</name> <operator pos:start="23:26" pos:end="23:26">&amp;</operator> <name pos:start="23:28" pos:end="23:44">QCOW_OFLAG_COPIED</name></expr>)</condition> <block pos:start="23:47" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:25">

                <goto pos:start="25:17" pos:end="25:25">goto <name pos:start="25:22" pos:end="25:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:39">case <expr pos:start="31:14" pos:end="31:38"><name pos:start="31:14" pos:end="31:38">QCOW2_CLUSTER_UNALLOCATED</name></expr>:</case>

        <case pos:start="33:9" pos:end="33:38">case <expr pos:start="33:14" pos:end="33:37"><name pos:start="33:14" pos:end="33:37">QCOW2_CLUSTER_COMPRESSED</name></expr>:</case>

        <case pos:start="35:9" pos:end="35:32">case <expr pos:start="35:14" pos:end="35:31"><name pos:start="35:14" pos:end="35:31">QCOW2_CLUSTER_ZERO</name></expr>:</case>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <default pos:start="39:9" pos:end="39:16">default:</default>

            <expr_stmt pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:19"><call pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:17">abort</name><argument_list pos:start="41:18" pos:end="41:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>



<label pos:start="49:1" pos:end="49:4"><name pos:start="49:1" pos:end="49:3">out</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><call pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:10">assert</name><argument_list pos:start="51:11" pos:end="51:28">(<argument pos:start="51:12" pos:end="51:27"><expr pos:start="51:12" pos:end="51:27"><name pos:start="51:12" pos:end="51:12">i</name> <operator pos:start="51:14" pos:end="51:15">&lt;=</operator> <name pos:start="51:17" pos:end="51:27">nb_clusters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><name pos:start="53:12" pos:end="53:12">i</name></expr>;</return>

</block_content>}</block></function>
</unit>
