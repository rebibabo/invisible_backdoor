<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20653.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:36">alloc_cluster_offset</name><parameter_list pos:start="1:37" pos:end="7:46">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:53">BlockDriverState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">bs</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:52"><decl pos:start="3:38" pos:end="3:52"><type pos:start="3:38" pos:end="3:52"><name pos:start="3:38" pos:end="3:45">uint64_t</name></type> <name pos:start="3:47" pos:end="3:52">offset</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:48"><decl pos:start="5:38" pos:end="5:48"><type pos:start="5:38" pos:end="5:48"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:48">n_start</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:59"><decl pos:start="5:51" pos:end="5:59"><type pos:start="5:51" pos:end="5:59"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:59">n_end</name></decl></parameter>,

                                     <parameter pos:start="7:38" pos:end="7:45"><decl pos:start="7:38" pos:end="7:45"><type pos:start="7:38" pos:end="7:45"><name pos:start="7:38" pos:end="7:40">int</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:45">num</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="233:1">{<block_content pos:start="11:5" pos:end="231:26">

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BDRVQcowState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:25">bs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">l2_index</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:22">l2_offset</name></decl>, <decl pos:start="15:25" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:12"><modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:33">l2_table</name></decl>, <decl pos:start="15:36" pos:end="15:49"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:36" pos:end="15:49">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:41"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">nb_available</name></decl>, <decl pos:start="17:23" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:33">nb_clusters</name></decl>, <decl pos:start="17:36" pos:end="17:40"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:36" pos:end="17:36">i</name> <init pos:start="17:38" pos:end="17:40">= <expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:23">start_sect</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:74"><expr pos:start="23:5" pos:end="23:73"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:73"><name pos:start="23:11" pos:end="23:27">get_cluster_table</name><argument_list pos:start="23:28" pos:end="23:73">(<argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">bs</name></expr></argument>, <argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">offset</name></expr></argument>, <argument pos:start="23:41" pos:end="23:49"><expr pos:start="23:41" pos:end="23:49"><operator pos:start="23:41" pos:end="23:41">&amp;</operator><name pos:start="23:42" pos:end="23:49">l2_table</name></expr></argument>, <argument pos:start="23:52" pos:end="23:61"><expr pos:start="23:52" pos:end="23:61"><operator pos:start="23:52" pos:end="23:52">&amp;</operator><name pos:start="23:53" pos:end="23:61">l2_offset</name></expr></argument>, <argument pos:start="23:64" pos:end="23:72"><expr pos:start="23:64" pos:end="23:72"><operator pos:start="23:64" pos:end="23:64">&amp;</operator><name pos:start="23:65" pos:end="23:72">l2_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:50"><expr pos:start="31:5" pos:end="31:49"><name pos:start="31:5" pos:end="31:15">nb_clusters</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:49"><name pos:start="31:19" pos:end="31:34">size_to_clusters</name><argument_list pos:start="31:35" pos:end="31:49">(<argument pos:start="31:36" pos:end="31:36"><expr pos:start="31:36" pos:end="31:36"><name pos:start="31:36" pos:end="31:36">s</name></expr></argument>, <argument pos:start="31:39" pos:end="31:48"><expr pos:start="31:39" pos:end="31:48"><name pos:start="31:39" pos:end="31:43">n_end</name> <operator pos:start="31:45" pos:end="31:46">&lt;&lt;</operator> <literal type="number" pos:start="31:48" pos:end="31:48">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:48"><if pos:start="35:5" pos:end="37:48">if <condition pos:start="35:8" pos:end="35:44">(<expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:19">nb_clusters</name> <operator pos:start="35:21" pos:end="35:21">&gt;</operator> <name pos:start="35:23" pos:end="35:32"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:32">l2_size</name></name> <operator pos:start="35:34" pos:end="35:34">-</operator> <name pos:start="35:36" pos:end="35:43">l2_index</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:48"><block_content pos:start="37:13" pos:end="37:48">

            <expr_stmt pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:23">nb_clusters</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:36"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:36">l2_size</name></name> <operator pos:start="37:38" pos:end="37:38">-</operator> <name pos:start="37:40" pos:end="37:47">l2_index</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:18">cluster_offset</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:52"><name pos:start="41:22" pos:end="41:32">be64_to_cpu</name><argument_list pos:start="41:33" pos:end="41:52">(<argument pos:start="41:34" pos:end="41:51"><expr pos:start="41:34" pos:end="41:51"><name pos:start="41:34" pos:end="41:51"><name pos:start="41:34" pos:end="41:41">l2_table</name><index pos:start="41:42" pos:end="41:51">[<expr pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:48">/* We keep all QCOW_OFLAG_COPIED clusters */</comment>



    <if_stmt pos:start="49:5" pos:end="71:5"><if pos:start="49:5" pos:end="71:5">if <condition pos:start="49:8" pos:end="49:43">(<expr pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:22">cluster_offset</name> <operator pos:start="49:24" pos:end="49:24">&amp;</operator> <name pos:start="49:26" pos:end="49:42">QCOW_OFLAG_COPIED</name></expr>)</condition> <block pos:start="49:45" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:17">

        <expr_stmt pos:start="51:9" pos:end="53:40"><expr pos:start="51:9" pos:end="53:39"><name pos:start="51:9" pos:end="51:19">nb_clusters</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="53:39"><name pos:start="51:23" pos:end="51:47">count_contiguous_clusters</name><argument_list pos:start="51:48" pos:end="53:39">(<argument pos:start="51:49" pos:end="51:59"><expr pos:start="51:49" pos:end="51:59"><name pos:start="51:49" pos:end="51:59">nb_clusters</name></expr></argument>, <argument pos:start="51:62" pos:end="51:76"><expr pos:start="51:62" pos:end="51:76"><name pos:start="51:62" pos:end="51:76"><name pos:start="51:62" pos:end="51:62">s</name><operator pos:start="51:63" pos:end="51:64">-&gt;</operator><name pos:start="51:65" pos:end="51:76">cluster_size</name></name></expr></argument>,

                <argument pos:start="53:17" pos:end="53:35"><expr pos:start="53:17" pos:end="53:35"><operator pos:start="53:17" pos:end="53:17">&amp;</operator><name pos:start="53:18" pos:end="53:35"><name pos:start="53:18" pos:end="53:25">l2_table</name><index pos:start="53:26" pos:end="53:35">[<expr pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:60"><expr pos:start="57:9" pos:end="57:59"><name pos:start="57:9" pos:end="57:20">nb_available</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:34">nb_clusters</name> <operator pos:start="57:36" pos:end="57:37">&lt;&lt;</operator> <operator pos:start="57:39" pos:end="57:39">(</operator><name pos:start="57:40" pos:end="57:54"><name pos:start="57:40" pos:end="57:40">s</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:54">cluster_bits</name></name> <operator pos:start="57:56" pos:end="57:56">-</operator> <literal type="number" pos:start="57:58" pos:end="57:58">9</literal><operator pos:start="57:59" pos:end="57:59">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:33"><if pos:start="59:9" pos:end="61:33">if <condition pos:start="59:12" pos:end="59:33">(<expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:24">nb_available</name> <operator pos:start="59:26" pos:end="59:26">&gt;</operator> <name pos:start="59:28" pos:end="59:32">n_end</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:33"><block_content pos:start="61:13" pos:end="61:33">

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:24">nb_available</name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:32">n_end</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:22">cluster_offset</name> <operator pos:start="65:24" pos:end="65:25">&amp;=</operator> <operator pos:start="65:27" pos:end="65:27">~</operator><name pos:start="65:28" pos:end="65:44">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>



        <goto pos:start="69:9" pos:end="69:17">goto <name pos:start="69:14" pos:end="69:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:70">/* for the moment, multiple compressed clusters are not managed */</comment>



    <if_stmt pos:start="79:5" pos:end="81:24"><if pos:start="79:5" pos:end="81:24">if <condition pos:start="79:8" pos:end="79:47">(<expr pos:start="79:9" pos:end="79:46"><name pos:start="79:9" pos:end="79:22">cluster_offset</name> <operator pos:start="79:24" pos:end="79:24">&amp;</operator> <name pos:start="79:26" pos:end="79:46">QCOW_OFLAG_COMPRESSED</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:24"><block_content pos:start="81:9" pos:end="81:24">

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:19">nb_clusters</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <literal type="number" pos:start="81:23" pos:end="81:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:39">/* how many available clusters ? */</comment>



    <while pos:start="89:5" pos:end="131:5">while <condition pos:start="89:11" pos:end="89:27">(<expr pos:start="89:12" pos:end="89:26"><name pos:start="89:12" pos:end="89:12">i</name> <operator pos:start="89:14" pos:end="89:14">&lt;</operator> <name pos:start="89:16" pos:end="89:26">nb_clusters</name></expr>)</condition> <block pos:start="89:29" pos:end="131:5">{<block_content pos:start="91:9" pos:end="129:18">

        <decl_stmt pos:start="91:9" pos:end="91:14"><decl pos:start="91:9" pos:end="91:13"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:13">j</name></decl>;</decl_stmt>

        <expr_stmt pos:start="93:9" pos:end="95:41"><expr pos:start="93:9" pos:end="95:40"><name pos:start="93:9" pos:end="93:9">i</name> <operator pos:start="93:11" pos:end="93:12">+=</operator> <call pos:start="93:14" pos:end="95:40"><name pos:start="93:14" pos:end="93:43">count_contiguous_free_clusters</name><argument_list pos:start="93:44" pos:end="95:40">(<argument pos:start="93:45" pos:end="93:59"><expr pos:start="93:45" pos:end="93:59"><name pos:start="93:45" pos:end="93:55">nb_clusters</name> <operator pos:start="93:57" pos:end="93:57">-</operator> <name pos:start="93:59" pos:end="93:59">i</name></expr></argument>,

                <argument pos:start="95:17" pos:end="95:39"><expr pos:start="95:17" pos:end="95:39"><operator pos:start="95:17" pos:end="95:17">&amp;</operator><name pos:start="95:18" pos:end="95:39"><name pos:start="95:18" pos:end="95:25">l2_table</name><index pos:start="95:26" pos:end="95:39">[<expr pos:start="95:27" pos:end="95:38"><name pos:start="95:27" pos:end="95:34">l2_index</name> <operator pos:start="95:36" pos:end="95:36">+</operator> <name pos:start="95:38" pos:end="95:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:61"><expr pos:start="99:9" pos:end="99:60"><name pos:start="99:9" pos:end="99:22">cluster_offset</name> <operator pos:start="99:24" pos:end="99:24">=</operator> <call pos:start="99:26" pos:end="99:60"><name pos:start="99:26" pos:end="99:36">be64_to_cpu</name><argument_list pos:start="99:37" pos:end="99:60">(<argument pos:start="99:38" pos:end="99:59"><expr pos:start="99:38" pos:end="99:59"><name pos:start="99:38" pos:end="99:59"><name pos:start="99:38" pos:end="99:45">l2_table</name><index pos:start="99:46" pos:end="99:59">[<expr pos:start="99:47" pos:end="99:58"><name pos:start="99:47" pos:end="99:54">l2_index</name> <operator pos:start="99:56" pos:end="99:56">+</operator> <name pos:start="99:58" pos:end="99:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="107:18"><if pos:start="103:9" pos:end="107:18">if <condition pos:start="103:12" pos:end="105:57">(<expr pos:start="103:13" pos:end="105:56"><operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:27">cluster_offset</name> <operator pos:start="103:29" pos:end="103:29">&amp;</operator> <name pos:start="103:31" pos:end="103:47">QCOW_OFLAG_COPIED</name><operator pos:start="103:48" pos:end="103:48">)</operator> <operator pos:start="103:50" pos:end="103:51">||</operator>

                <operator pos:start="105:17" pos:end="105:17">(</operator><name pos:start="105:18" pos:end="105:31">cluster_offset</name> <operator pos:start="105:33" pos:end="105:33">&amp;</operator> <name pos:start="105:35" pos:end="105:55">QCOW_OFLAG_COMPRESSED</name><operator pos:start="105:56" pos:end="105:56">)</operator></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:18"><block_content pos:start="107:13" pos:end="107:18">

            <break pos:start="107:13" pos:end="107:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="113:44"><expr pos:start="111:9" pos:end="113:43"><name pos:start="111:9" pos:end="111:9">j</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <call pos:start="111:13" pos:end="113:43"><name pos:start="111:13" pos:end="111:37">count_contiguous_clusters</name><argument_list pos:start="111:38" pos:end="113:43">(<argument pos:start="111:39" pos:end="111:53"><expr pos:start="111:39" pos:end="111:53"><name pos:start="111:39" pos:end="111:49">nb_clusters</name> <operator pos:start="111:51" pos:end="111:51">-</operator> <name pos:start="111:53" pos:end="111:53">i</name></expr></argument>, <argument pos:start="111:56" pos:end="111:70"><expr pos:start="111:56" pos:end="111:70"><name pos:start="111:56" pos:end="111:70"><name pos:start="111:56" pos:end="111:56">s</name><operator pos:start="111:57" pos:end="111:58">-&gt;</operator><name pos:start="111:59" pos:end="111:70">cluster_size</name></name></expr></argument>,

                <argument pos:start="113:17" pos:end="113:39"><expr pos:start="113:17" pos:end="113:39"><operator pos:start="113:17" pos:end="113:17">&amp;</operator><name pos:start="113:18" pos:end="113:39"><name pos:start="113:18" pos:end="113:25">l2_table</name><index pos:start="113:26" pos:end="113:39">[<expr pos:start="113:27" pos:end="113:38"><name pos:start="113:27" pos:end="113:34">l2_index</name> <operator pos:start="113:36" pos:end="113:36">+</operator> <name pos:start="113:38" pos:end="113:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="113:42" pos:end="113:42"><expr pos:start="113:42" pos:end="113:42"><literal type="number" pos:start="113:42" pos:end="113:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="117:9" pos:end="119:53"><if pos:start="117:9" pos:end="119:53">if <condition pos:start="117:12" pos:end="117:14">(<expr pos:start="117:13" pos:end="117:13"><name pos:start="117:13" pos:end="117:13">j</name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:53"><block_content pos:start="119:13" pos:end="119:53">

            <expr_stmt pos:start="119:13" pos:end="119:53"><expr pos:start="119:13" pos:end="119:52"><call pos:start="119:13" pos:end="119:52"><name pos:start="119:13" pos:end="119:29">free_any_clusters</name><argument_list pos:start="119:30" pos:end="119:52">(<argument pos:start="119:31" pos:end="119:32"><expr pos:start="119:31" pos:end="119:32"><name pos:start="119:31" pos:end="119:32">bs</name></expr></argument>, <argument pos:start="119:35" pos:end="119:48"><expr pos:start="119:35" pos:end="119:48"><name pos:start="119:35" pos:end="119:48">cluster_offset</name></expr></argument>, <argument pos:start="119:51" pos:end="119:51"><expr pos:start="119:51" pos:end="119:51"><name pos:start="119:51" pos:end="119:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:15"><expr pos:start="123:9" pos:end="123:14"><name pos:start="123:9" pos:end="123:9">i</name> <operator pos:start="123:11" pos:end="123:12">+=</operator> <name pos:start="123:14" pos:end="123:14">j</name></expr>;</expr_stmt>



        <if_stmt pos:start="127:9" pos:end="129:18"><if pos:start="127:9" pos:end="129:18">if<condition pos:start="127:11" pos:end="127:47">(<expr pos:start="127:12" pos:end="127:46"><call pos:start="127:12" pos:end="127:46"><name pos:start="127:12" pos:end="127:22">be64_to_cpu</name><argument_list pos:start="127:23" pos:end="127:46">(<argument pos:start="127:24" pos:end="127:45"><expr pos:start="127:24" pos:end="127:45"><name pos:start="127:24" pos:end="127:45"><name pos:start="127:24" pos:end="127:31">l2_table</name><index pos:start="127:32" pos:end="127:45">[<expr pos:start="127:33" pos:end="127:44"><name pos:start="127:33" pos:end="127:40">l2_index</name> <operator pos:start="127:42" pos:end="127:42">+</operator> <name pos:start="127:44" pos:end="127:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:18"><block_content pos:start="129:13" pos:end="129:18">

            <break pos:start="129:13" pos:end="129:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="133:5" pos:end="133:20"><expr pos:start="133:5" pos:end="133:19"><name pos:start="133:5" pos:end="133:15">nb_clusters</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <name pos:start="133:19" pos:end="133:19">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:32">/* allocate a new cluster */</comment>



    <expr_stmt pos:start="141:5" pos:end="141:71"><expr pos:start="141:5" pos:end="141:70"><name pos:start="141:5" pos:end="141:18">cluster_offset</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <call pos:start="141:22" pos:end="141:70"><name pos:start="141:22" pos:end="141:35">alloc_clusters</name><argument_list pos:start="141:36" pos:end="141:70">(<argument pos:start="141:37" pos:end="141:38"><expr pos:start="141:37" pos:end="141:38"><name pos:start="141:37" pos:end="141:38">bs</name></expr></argument>, <argument pos:start="141:41" pos:end="141:69"><expr pos:start="141:41" pos:end="141:69"><name pos:start="141:41" pos:end="141:51">nb_clusters</name> <operator pos:start="141:53" pos:end="141:53">*</operator> <name pos:start="141:55" pos:end="141:69"><name pos:start="141:55" pos:end="141:55">s</name><operator pos:start="141:56" pos:end="141:57">-&gt;</operator><name pos:start="141:58" pos:end="141:69">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="145:5" pos:end="147:17">/* we must initialize the cluster content which won't be

       written */</comment>



    <expr_stmt pos:start="151:5" pos:end="151:56"><expr pos:start="151:5" pos:end="151:55"><name pos:start="151:5" pos:end="151:16">nb_available</name> <operator pos:start="151:18" pos:end="151:18">=</operator> <name pos:start="151:20" pos:end="151:30">nb_clusters</name> <operator pos:start="151:32" pos:end="151:33">&lt;&lt;</operator> <operator pos:start="151:35" pos:end="151:35">(</operator><name pos:start="151:36" pos:end="151:50"><name pos:start="151:36" pos:end="151:36">s</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:50">cluster_bits</name></name> <operator pos:start="151:52" pos:end="151:52">-</operator> <literal type="number" pos:start="151:54" pos:end="151:54">9</literal><operator pos:start="151:55" pos:end="151:55">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="155:29"><if pos:start="153:5" pos:end="155:29">if <condition pos:start="153:8" pos:end="153:29">(<expr pos:start="153:9" pos:end="153:28"><name pos:start="153:9" pos:end="153:20">nb_available</name> <operator pos:start="153:22" pos:end="153:22">&gt;</operator> <name pos:start="153:24" pos:end="153:28">n_end</name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:29"><block_content pos:start="155:9" pos:end="155:29">

        <expr_stmt pos:start="155:9" pos:end="155:29"><expr pos:start="155:9" pos:end="155:28"><name pos:start="155:9" pos:end="155:20">nb_available</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <name pos:start="155:24" pos:end="155:28">n_end</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="159:5" pos:end="159:44">/* copy content of unmodified sectors */</comment>



    <expr_stmt pos:start="163:5" pos:end="163:56"><expr pos:start="163:5" pos:end="163:55"><name pos:start="163:5" pos:end="163:14">start_sect</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <operator pos:start="163:18" pos:end="163:18">(</operator><name pos:start="163:19" pos:end="163:24">offset</name> <operator pos:start="163:26" pos:end="163:26">&amp;</operator> <operator pos:start="163:28" pos:end="163:28">~</operator><operator pos:start="163:29" pos:end="163:29">(</operator><name pos:start="163:30" pos:end="163:44"><name pos:start="163:30" pos:end="163:30">s</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:44">cluster_size</name></name> <operator pos:start="163:46" pos:end="163:46">-</operator> <literal type="number" pos:start="163:48" pos:end="163:48">1</literal><operator pos:start="163:49" pos:end="163:49">)</operator><operator pos:start="163:50" pos:end="163:50">)</operator> <operator pos:start="163:52" pos:end="163:53">&gt;&gt;</operator> <literal type="number" pos:start="163:55" pos:end="163:55">9</literal></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="173:5"><if pos:start="165:5" pos:end="173:5">if <condition pos:start="165:8" pos:end="165:16">(<expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:15">n_start</name></expr>)</condition> <block pos:start="165:18" pos:end="173:5">{<block_content pos:start="167:9" pos:end="171:21">

        <expr_stmt pos:start="167:9" pos:end="167:71"><expr pos:start="167:9" pos:end="167:70"><name pos:start="167:9" pos:end="167:11">ret</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <call pos:start="167:15" pos:end="167:70"><name pos:start="167:15" pos:end="167:26">copy_sectors</name><argument_list pos:start="167:27" pos:end="167:70">(<argument pos:start="167:28" pos:end="167:29"><expr pos:start="167:28" pos:end="167:29"><name pos:start="167:28" pos:end="167:29">bs</name></expr></argument>, <argument pos:start="167:32" pos:end="167:41"><expr pos:start="167:32" pos:end="167:41"><name pos:start="167:32" pos:end="167:41">start_sect</name></expr></argument>, <argument pos:start="167:44" pos:end="167:57"><expr pos:start="167:44" pos:end="167:57"><name pos:start="167:44" pos:end="167:57">cluster_offset</name></expr></argument>, <argument pos:start="167:60" pos:end="167:60"><expr pos:start="167:60" pos:end="167:60"><literal type="number" pos:start="167:60" pos:end="167:60">0</literal></expr></argument>, <argument pos:start="167:63" pos:end="167:69"><expr pos:start="167:63" pos:end="167:69"><name pos:start="167:63" pos:end="167:69">n_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="171:21"><if pos:start="169:9" pos:end="171:21">if <condition pos:start="169:12" pos:end="169:20">(<expr pos:start="169:13" pos:end="169:19"><name pos:start="169:13" pos:end="169:15">ret</name> <operator pos:start="169:17" pos:end="169:17">&lt;</operator> <literal type="number" pos:start="169:19" pos:end="169:19">0</literal></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:21"><block_content pos:start="171:13" pos:end="171:21">

            <return pos:start="171:13" pos:end="171:21">return <expr pos:start="171:20" pos:end="171:20"><literal type="number" pos:start="171:20" pos:end="171:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="193:5"><if pos:start="177:5" pos:end="193:5">if <condition pos:start="177:8" pos:end="177:48">(<expr pos:start="177:9" pos:end="177:47"><name pos:start="177:9" pos:end="177:20">nb_available</name> <operator pos:start="177:22" pos:end="177:22">&amp;</operator> <operator pos:start="177:24" pos:end="177:24">(</operator><name pos:start="177:25" pos:end="177:42"><name pos:start="177:25" pos:end="177:25">s</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:42">cluster_sectors</name></name> <operator pos:start="177:44" pos:end="177:44">-</operator> <literal type="number" pos:start="177:46" pos:end="177:46">1</literal><operator pos:start="177:47" pos:end="177:47">)</operator></expr>)</condition> <block pos:start="177:50" pos:end="193:5">{<block_content pos:start="179:9" pos:end="191:21">

        <decl_stmt pos:start="179:9" pos:end="179:74"><decl pos:start="179:9" pos:end="179:73"><type pos:start="179:9" pos:end="179:16"><name pos:start="179:9" pos:end="179:16">uint64_t</name></type> <name pos:start="179:18" pos:end="179:20">end</name> <init pos:start="179:22" pos:end="179:73">= <expr pos:start="179:24" pos:end="179:73"><name pos:start="179:24" pos:end="179:35">nb_available</name> <operator pos:start="179:37" pos:end="179:37">&amp;</operator> <operator pos:start="179:39" pos:end="179:39">~</operator><operator pos:start="179:40" pos:end="179:40">(</operator><name pos:start="179:41" pos:end="179:48">uint64_t</name><operator pos:start="179:49" pos:end="179:49">)</operator><operator pos:start="179:50" pos:end="179:50">(</operator><name pos:start="179:51" pos:end="179:68"><name pos:start="179:51" pos:end="179:51">s</name><operator pos:start="179:52" pos:end="179:53">-&gt;</operator><name pos:start="179:54" pos:end="179:68">cluster_sectors</name></name> <operator pos:start="179:70" pos:end="179:70">-</operator> <literal type="number" pos:start="179:72" pos:end="179:72">1</literal><operator pos:start="179:73" pos:end="179:73">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="181:9" pos:end="187:47"><expr pos:start="181:9" pos:end="187:46"><name pos:start="181:9" pos:end="181:11">ret</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="187:46"><name pos:start="181:15" pos:end="181:26">copy_sectors</name><argument_list pos:start="181:27" pos:end="187:46">(<argument pos:start="181:28" pos:end="181:29"><expr pos:start="181:28" pos:end="181:29"><name pos:start="181:28" pos:end="181:29">bs</name></expr></argument>, <argument pos:start="181:32" pos:end="181:47"><expr pos:start="181:32" pos:end="181:47"><name pos:start="181:32" pos:end="181:41">start_sect</name> <operator pos:start="181:43" pos:end="181:43">+</operator> <name pos:start="181:45" pos:end="181:47">end</name></expr></argument>,

                           <argument pos:start="183:28" pos:end="183:54"><expr pos:start="183:28" pos:end="183:54"><name pos:start="183:28" pos:end="183:41">cluster_offset</name> <operator pos:start="183:43" pos:end="183:43">+</operator> <operator pos:start="183:45" pos:end="183:45">(</operator><name pos:start="183:46" pos:end="183:48">end</name> <operator pos:start="183:50" pos:end="183:51">&lt;&lt;</operator> <literal type="number" pos:start="183:53" pos:end="183:53">9</literal><operator pos:start="183:54" pos:end="183:54">)</operator></expr></argument>,

                           <argument pos:start="185:28" pos:end="185:45"><expr pos:start="185:28" pos:end="185:45"><name pos:start="185:28" pos:end="185:39">nb_available</name> <operator pos:start="185:41" pos:end="185:41">-</operator> <name pos:start="185:43" pos:end="185:45">end</name></expr></argument>,

                           <argument pos:start="187:28" pos:end="187:45"><expr pos:start="187:28" pos:end="187:45"><name pos:start="187:28" pos:end="187:45"><name pos:start="187:28" pos:end="187:28">s</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:45">cluster_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="191:21"><if pos:start="189:9" pos:end="191:21">if <condition pos:start="189:12" pos:end="189:20">(<expr pos:start="189:13" pos:end="189:19"><name pos:start="189:13" pos:end="189:15">ret</name> <operator pos:start="189:17" pos:end="189:17">&lt;</operator> <literal type="number" pos:start="189:19" pos:end="189:19">0</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:21"><block_content pos:start="191:13" pos:end="191:21">

            <return pos:start="191:13" pos:end="191:21">return <expr pos:start="191:20" pos:end="191:20"><literal type="number" pos:start="191:20" pos:end="191:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="197:5" pos:end="197:25">/* update L2 table */</comment>



    <for pos:start="201:5" pos:end="207:64">for <control pos:start="201:9" pos:end="201:37">(<init pos:start="201:10" pos:end="201:15"><expr pos:start="201:10" pos:end="201:14"><name pos:start="201:10" pos:end="201:10">i</name> <operator pos:start="201:12" pos:end="201:12">=</operator> <literal type="number" pos:start="201:14" pos:end="201:14">0</literal></expr>;</init> <condition pos:start="201:17" pos:end="201:32"><expr pos:start="201:17" pos:end="201:31"><name pos:start="201:17" pos:end="201:17">i</name> <operator pos:start="201:19" pos:end="201:19">&lt;</operator> <name pos:start="201:21" pos:end="201:31">nb_clusters</name></expr>;</condition> <incr pos:start="201:34" pos:end="201:36"><expr pos:start="201:34" pos:end="201:36"><name pos:start="201:34" pos:end="201:34">i</name><operator pos:start="201:35" pos:end="201:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:9" pos:end="207:64"><block_content pos:start="203:9" pos:end="207:64">

        <expr_stmt pos:start="203:9" pos:end="207:64"><expr pos:start="203:9" pos:end="207:63"><name pos:start="203:9" pos:end="203:30"><name pos:start="203:9" pos:end="203:16">l2_table</name><index pos:start="203:17" pos:end="203:30">[<expr pos:start="203:18" pos:end="203:29"><name pos:start="203:18" pos:end="203:25">l2_index</name> <operator pos:start="203:27" pos:end="203:27">+</operator> <name pos:start="203:29" pos:end="203:29">i</name></expr>]</index></name> <operator pos:start="203:32" pos:end="203:32">=</operator> <call pos:start="203:34" pos:end="207:63"><name pos:start="203:34" pos:end="203:44">cpu_to_be64</name><argument_list pos:start="203:45" pos:end="207:63">(<argument pos:start="203:46" pos:end="207:62"><expr pos:start="203:46" pos:end="207:62"><operator pos:start="203:46" pos:end="203:46">(</operator><name pos:start="203:47" pos:end="203:60">cluster_offset</name> <operator pos:start="203:62" pos:end="203:62">+</operator>

                                             <operator pos:start="205:46" pos:end="205:46">(</operator><name pos:start="205:47" pos:end="205:47">i</name> <operator pos:start="205:49" pos:end="205:50">&lt;&lt;</operator> <name pos:start="205:52" pos:end="205:66"><name pos:start="205:52" pos:end="205:52">s</name><operator pos:start="205:53" pos:end="205:54">-&gt;</operator><name pos:start="205:55" pos:end="205:66">cluster_bits</name></name><operator pos:start="205:67" pos:end="205:67">)</operator><operator pos:start="205:68" pos:end="205:68">)</operator> <operator pos:start="205:70" pos:end="205:70">|</operator>

                                             <name pos:start="207:46" pos:end="207:62">QCOW_OFLAG_COPIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="211:5" pos:end="221:17"><if pos:start="211:5" pos:end="221:17">if <condition pos:start="211:8" pos:end="219:51">(<expr pos:start="211:9" pos:end="219:50"><call pos:start="211:9" pos:end="217:51"><name pos:start="211:9" pos:end="211:19">bdrv_pwrite</name><argument_list pos:start="211:20" pos:end="217:51">(<argument pos:start="211:21" pos:end="211:25"><expr pos:start="211:21" pos:end="211:25"><name pos:start="211:21" pos:end="211:25"><name pos:start="211:21" pos:end="211:21">s</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:25">hd</name></name></expr></argument>,

                    <argument pos:start="213:21" pos:end="213:59"><expr pos:start="213:21" pos:end="213:59"><name pos:start="213:21" pos:end="213:29">l2_offset</name> <operator pos:start="213:31" pos:end="213:31">+</operator> <name pos:start="213:33" pos:end="213:40">l2_index</name> <operator pos:start="213:42" pos:end="213:42">*</operator> <sizeof pos:start="213:44" pos:end="213:59">sizeof<argument_list pos:start="213:50" pos:end="213:59">(<argument pos:start="213:51" pos:end="213:58"><expr pos:start="213:51" pos:end="213:58"><name pos:start="213:51" pos:end="213:58">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="215:21" pos:end="215:39"><expr pos:start="215:21" pos:end="215:39"><name pos:start="215:21" pos:end="215:28">l2_table</name> <operator pos:start="215:30" pos:end="215:30">+</operator> <name pos:start="215:32" pos:end="215:39">l2_index</name></expr></argument>,

                    <argument pos:start="217:21" pos:end="217:50"><expr pos:start="217:21" pos:end="217:50"><name pos:start="217:21" pos:end="217:31">nb_clusters</name> <operator pos:start="217:33" pos:end="217:33">*</operator> <sizeof pos:start="217:35" pos:end="217:50">sizeof<argument_list pos:start="217:41" pos:end="217:50">(<argument pos:start="217:42" pos:end="217:49"><expr pos:start="217:42" pos:end="217:49"><name pos:start="217:42" pos:end="217:49">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="217:53" pos:end="217:54">!=</operator>

                    <name pos:start="219:21" pos:end="219:31">nb_clusters</name> <operator pos:start="219:33" pos:end="219:33">*</operator> <sizeof pos:start="219:35" pos:end="219:50">sizeof<argument_list pos:start="219:41" pos:end="219:50">(<argument pos:start="219:42" pos:end="219:49"><expr pos:start="219:42" pos:end="219:49"><name pos:start="219:42" pos:end="219:49">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:17"><block_content pos:start="221:9" pos:end="221:17">

        <return pos:start="221:9" pos:end="221:17">return <expr pos:start="221:16" pos:end="221:16"><literal type="number" pos:start="221:16" pos:end="221:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



<label pos:start="225:1" pos:end="225:4"><name pos:start="225:1" pos:end="225:3">out</name>:</label>

    <expr_stmt pos:start="227:5" pos:end="227:34"><expr pos:start="227:5" pos:end="227:33"><operator pos:start="227:5" pos:end="227:5">*</operator><name pos:start="227:6" pos:end="227:8">num</name> <operator pos:start="227:10" pos:end="227:10">=</operator> <name pos:start="227:12" pos:end="227:23">nb_available</name> <operator pos:start="227:25" pos:end="227:25">-</operator> <name pos:start="227:27" pos:end="227:33">n_start</name></expr>;</expr_stmt>



    <return pos:start="231:5" pos:end="231:26">return <expr pos:start="231:12" pos:end="231:25"><name pos:start="231:12" pos:end="231:25">cluster_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
