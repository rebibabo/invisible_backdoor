<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10344.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">contextidr_write</name><parameter_list pos:start="1:29" pos:end="3:44">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUARMState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:65">ARMCPRegInfo</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">ri</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:43">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:37">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">ARMCPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:38">= <expr pos:start="7:19" pos:end="7:38"><call pos:start="7:19" pos:end="7:38"><name pos:start="7:19" pos:end="7:33">arm_env_get_cpu</name><argument_list pos:start="7:34" pos:end="7:38">(<argument pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:37">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="13:44">(<expr pos:start="11:9" pos:end="13:43"><name pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:11">env</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:17">cp15</name><operator pos:start="11:18" pos:end="11:18">.</operator><name pos:start="11:19" pos:end="11:32">contextidr_el1</name></name> <operator pos:start="11:34" pos:end="11:35">!=</operator> <name pos:start="11:37" pos:end="11:41">value</name> <operator pos:start="11:43" pos:end="11:44">&amp;&amp;</operator> <operator pos:start="11:46" pos:end="11:46">!</operator><call pos:start="11:47" pos:end="11:79"><name pos:start="11:47" pos:end="11:57">arm_feature</name><argument_list pos:start="11:58" pos:end="11:79">(<argument pos:start="11:59" pos:end="11:61"><expr pos:start="11:59" pos:end="11:61"><name pos:start="11:59" pos:end="11:61">env</name></expr></argument>, <argument pos:start="11:64" pos:end="11:78"><expr pos:start="11:64" pos:end="11:78"><name pos:start="11:64" pos:end="11:78">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call>

        <operator pos:start="13:9" pos:end="13:10">&amp;&amp;</operator> <operator pos:start="13:12" pos:end="13:12">!</operator><call pos:start="13:13" pos:end="13:43"><name pos:start="13:13" pos:end="13:38">extended_addresses_enabled</name><argument_list pos:start="13:39" pos:end="13:43">(<argument pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><name pos:start="13:40" pos:end="13:42">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:46" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <comment type="block" pos:start="15:9" pos:end="21:11">/* For VMSA (when not using the LPAE long descriptor page table

         * format) this register includes the ASID, so do a TLB flush.

         * For PMSA it is purely a process ID and no action is needed.

         */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:17">tlb_flush</name><argument_list pos:start="23:18" pos:end="23:30">(<argument pos:start="23:19" pos:end="23:26"><expr pos:start="23:19" pos:end="23:26"><call pos:start="23:19" pos:end="23:26"><name pos:start="23:19" pos:end="23:21">CPU</name><argument_list pos:start="23:22" pos:end="23:26">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:29" pos:end="23:29"><expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">cp15</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:28">contextidr_el1</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <name pos:start="27:32" pos:end="27:36">value</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
