<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26339.c" pos:tabs="8"><function pos:start="1:1" pos:end="100:62"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">usb_uas_task</name><parameter_list pos:start="1:25" pos:end="1:52">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:34">UASDevice</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">uas</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:47">uas_ui</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">ui</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="100:62">{<block_content pos:start="5:5" pos:end="100:62">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:16">tag</name> <init pos:start="5:18" pos:end="5:43">= <expr pos:start="5:20" pos:end="5:43"><call pos:start="5:20" pos:end="5:43"><name pos:start="5:20" pos:end="5:30">be16_to_cpu</name><argument_list pos:start="5:31" pos:end="5:43">(<argument pos:start="5:32" pos:end="5:42"><expr pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:33">ui</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">hdr</name><operator pos:start="5:39" pos:end="5:39">.</operator><name pos:start="5:40" pos:end="5:42">tag</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:18">lun64</name> <init pos:start="7:20" pos:end="7:46">= <expr pos:start="7:22" pos:end="7:46"><call pos:start="7:22" pos:end="7:46"><name pos:start="7:22" pos:end="7:32">be64_to_cpu</name><argument_list pos:start="7:33" pos:end="7:46">(<argument pos:start="7:34" pos:end="7:45"><expr pos:start="7:34" pos:end="7:45"><name pos:start="7:34" pos:end="7:45"><name pos:start="7:34" pos:end="7:35">ui</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:41">task</name><operator pos:start="7:42" pos:end="7:42">.</operator><name pos:start="7:43" pos:end="7:45">lun</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">SCSIDevice</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">dev</name> <init pos:start="9:21" pos:end="9:49">= <expr pos:start="9:23" pos:end="9:49"><call pos:start="9:23" pos:end="9:49"><name pos:start="9:23" pos:end="9:37">usb_uas_get_dev</name><argument_list pos:start="9:38" pos:end="9:49">(<argument pos:start="9:39" pos:end="9:41"><expr pos:start="9:39" pos:end="9:41"><name pos:start="9:39" pos:end="9:41">uas</name></expr></argument>, <argument pos:start="9:44" pos:end="9:48"><expr pos:start="9:44" pos:end="9:48"><name pos:start="9:44" pos:end="9:48">lun64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">lun</name> <init pos:start="11:13" pos:end="11:36">= <expr pos:start="11:15" pos:end="11:36"><call pos:start="11:15" pos:end="11:36"><name pos:start="11:15" pos:end="11:29">usb_uas_get_lun</name><argument_list pos:start="11:30" pos:end="11:36">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">lun64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">UASRequest</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:19">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:21">task_tag</name></decl>;</decl_stmt>






    <expr_stmt pos:start="22:5" pos:end="22:62"><expr pos:start="22:5" pos:end="22:61"><name pos:start="22:5" pos:end="22:7">req</name> <operator pos:start="22:9" pos:end="22:9">=</operator> <call pos:start="22:11" pos:end="22:61"><name pos:start="22:11" pos:end="22:30">usb_uas_find_request</name><argument_list pos:start="22:31" pos:end="22:61">(<argument pos:start="22:32" pos:end="22:34"><expr pos:start="22:32" pos:end="22:34"><name pos:start="22:32" pos:end="22:34">uas</name></expr></argument>, <argument pos:start="22:37" pos:end="22:60"><expr pos:start="22:37" pos:end="22:60"><call pos:start="22:37" pos:end="22:60"><name pos:start="22:37" pos:end="22:47">be16_to_cpu</name><argument_list pos:start="22:48" pos:end="22:60">(<argument pos:start="22:49" pos:end="22:59"><expr pos:start="22:49" pos:end="22:59"><name pos:start="22:49" pos:end="22:59"><name pos:start="22:49" pos:end="22:50">ui</name><operator pos:start="22:51" pos:end="22:52">-&gt;</operator><name pos:start="22:53" pos:end="22:55">hdr</name><operator pos:start="22:56" pos:end="22:56">.</operator><name pos:start="22:57" pos:end="22:59">tag</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="24:5" pos:end="100:62"><if pos:start="24:5" pos:end="100:62">if <condition pos:start="24:8" pos:end="24:12">(<expr pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">req</name></expr>)</condition> <block pos:start="24:14" pos:end="100:62">{<block_content pos:start="26:9" pos:end="100:62">

        <goto pos:start="26:9" pos:end="26:28">goto <name pos:start="26:14" pos:end="26:27">overlapped_tag</name>;</goto>


    <if_stmt pos:start="29:5" pos:end="100:62"><if pos:start="29:5" pos:end="100:62">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:11">dev</name> <operator pos:start="29:13" pos:end="29:14">==</operator> <name pos:start="29:16" pos:end="29:19">NULL</name></expr>)</condition> <block pos:start="29:22" pos:end="100:62">{<block_content pos:start="31:9" pos:end="100:62">

        <goto pos:start="31:9" pos:end="31:27">goto <name pos:start="31:14" pos:end="31:26">incorrect_lun</name>;</goto>




    <switch pos:start="36:5" pos:end="100:62">switch <condition pos:start="36:12" pos:end="36:30">(<expr pos:start="36:13" pos:end="36:29"><name pos:start="36:13" pos:end="36:29"><name pos:start="36:13" pos:end="36:14">ui</name><operator pos:start="36:15" pos:end="36:16">-&gt;</operator><name pos:start="36:17" pos:end="36:20">task</name><operator pos:start="36:21" pos:end="36:21">.</operator><name pos:start="36:22" pos:end="36:29">function</name></name></expr>)</condition> <block pos:start="36:32" pos:end="100:62">{<block_content pos:start="38:5" pos:end="100:62">

    <case pos:start="38:5" pos:end="38:28">case <expr pos:start="38:10" pos:end="38:27"><name pos:start="38:10" pos:end="38:27">UAS_TMF_ABORT_TASK</name></expr>:</case>

        <expr_stmt pos:start="40:9" pos:end="40:50"><expr pos:start="40:9" pos:end="40:49"><name pos:start="40:9" pos:end="40:16">task_tag</name> <operator pos:start="40:18" pos:end="40:18">=</operator> <call pos:start="40:20" pos:end="40:49"><name pos:start="40:20" pos:end="40:30">be16_to_cpu</name><argument_list pos:start="40:31" pos:end="40:49">(<argument pos:start="40:32" pos:end="40:48"><expr pos:start="40:32" pos:end="40:48"><name pos:start="40:32" pos:end="40:48"><name pos:start="40:32" pos:end="40:33">ui</name><operator pos:start="40:34" pos:end="40:35">-&gt;</operator><name pos:start="40:36" pos:end="40:39">task</name><operator pos:start="40:40" pos:end="40:40">.</operator><name pos:start="40:41" pos:end="40:48">task_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="42:9" pos:end="42:67"><expr pos:start="42:9" pos:end="42:66"><call pos:start="42:9" pos:end="42:66"><name pos:start="42:9" pos:end="42:36">trace_usb_uas_tmf_abort_task</name><argument_list pos:start="42:37" pos:end="42:66">(<argument pos:start="42:38" pos:end="42:50"><expr pos:start="42:38" pos:end="42:50"><name pos:start="42:38" pos:end="42:50"><name pos:start="42:38" pos:end="42:40">uas</name><operator pos:start="42:41" pos:end="42:42">-&gt;</operator><name pos:start="42:43" pos:end="42:45">dev</name><operator pos:start="42:46" pos:end="42:46">.</operator><name pos:start="42:47" pos:end="42:50">addr</name></name></expr></argument>, <argument pos:start="42:53" pos:end="42:55"><expr pos:start="42:53" pos:end="42:55"><name pos:start="42:53" pos:end="42:55">tag</name></expr></argument>, <argument pos:start="42:58" pos:end="42:65"><expr pos:start="42:58" pos:end="42:65"><name pos:start="42:58" pos:end="42:65">task_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="44:9" pos:end="44:50"><expr pos:start="44:9" pos:end="44:49"><name pos:start="44:9" pos:end="44:11">req</name> <operator pos:start="44:13" pos:end="44:13">=</operator> <call pos:start="44:15" pos:end="44:49"><name pos:start="44:15" pos:end="44:34">usb_uas_find_request</name><argument_list pos:start="44:35" pos:end="44:49">(<argument pos:start="44:36" pos:end="44:38"><expr pos:start="44:36" pos:end="44:38"><name pos:start="44:36" pos:end="44:38">uas</name></expr></argument>, <argument pos:start="44:41" pos:end="44:48"><expr pos:start="44:41" pos:end="44:48"><name pos:start="44:41" pos:end="44:48">task_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="46:9" pos:end="100:62"><if pos:start="46:9" pos:end="100:62">if <condition pos:start="46:12" pos:end="46:35">(<expr pos:start="46:13" pos:end="46:34"><name pos:start="46:13" pos:end="46:15">req</name> <operator pos:start="46:17" pos:end="46:18">&amp;&amp;</operator> <name pos:start="46:20" pos:end="46:27"><name pos:start="46:20" pos:end="46:22">req</name><operator pos:start="46:23" pos:end="46:24">-&gt;</operator><name pos:start="46:25" pos:end="46:27">dev</name></name> <operator pos:start="46:29" pos:end="46:30">==</operator> <name pos:start="46:32" pos:end="46:34">dev</name></expr>)</condition> <block pos:start="46:37" pos:end="100:62">{<block_content pos:start="48:13" pos:end="100:62">

            <expr_stmt pos:start="48:13" pos:end="48:38"><expr pos:start="48:13" pos:end="48:37"><call pos:start="48:13" pos:end="48:37"><name pos:start="48:13" pos:end="48:27">scsi_req_cancel</name><argument_list pos:start="48:28" pos:end="48:37">(<argument pos:start="48:29" pos:end="48:36"><expr pos:start="48:29" pos:end="48:36"><name pos:start="48:29" pos:end="48:36"><name pos:start="48:29" pos:end="48:31">req</name><operator pos:start="48:32" pos:end="48:33">-&gt;</operator><name pos:start="48:34" pos:end="48:36">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><call pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:30">usb_uas_queue_response</name><argument_list pos:start="51:31" pos:end="51:64">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">uas</name></expr></argument>, <argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">tag</name></expr></argument>, <argument pos:start="51:42" pos:end="51:60"><expr pos:start="51:42" pos:end="51:60"><name pos:start="51:42" pos:end="51:60">UAS_RC_TMF_COMPLETE</name></expr></argument>, <argument pos:start="51:63" pos:end="51:63"><expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>



    <case pos:start="57:5" pos:end="57:36">case <expr pos:start="57:10" pos:end="57:35"><name pos:start="57:10" pos:end="57:35">UAS_TMF_LOGICAL_UNIT_RESET</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><call pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:44">trace_usb_uas_tmf_logical_unit_reset</name><argument_list pos:start="59:45" pos:end="59:69">(<argument pos:start="59:46" pos:end="59:58"><expr pos:start="59:46" pos:end="59:58"><name pos:start="59:46" pos:end="59:58"><name pos:start="59:46" pos:end="59:48">uas</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:53">dev</name><operator pos:start="59:54" pos:end="59:54">.</operator><name pos:start="59:55" pos:end="59:58">addr</name></name></expr></argument>, <argument pos:start="59:61" pos:end="59:63"><expr pos:start="59:61" pos:end="59:63"><name pos:start="59:61" pos:end="59:63">tag</name></expr></argument>, <argument pos:start="59:66" pos:end="59:68"><expr pos:start="59:66" pos:end="59:68"><name pos:start="59:66" pos:end="59:68">lun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><call pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:22">qdev_reset_all</name><argument_list pos:start="61:23" pos:end="61:34">(<argument pos:start="61:24" pos:end="61:33"><expr pos:start="61:24" pos:end="61:33"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:33"><name pos:start="61:25" pos:end="61:27">dev</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:33">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:65"><expr pos:start="63:9" pos:end="63:64"><call pos:start="63:9" pos:end="63:64"><name pos:start="63:9" pos:end="63:30">usb_uas_queue_response</name><argument_list pos:start="63:31" pos:end="63:64">(<argument pos:start="63:32" pos:end="63:34"><expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:34">uas</name></expr></argument>, <argument pos:start="63:37" pos:end="63:39"><expr pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:39">tag</name></expr></argument>, <argument pos:start="63:42" pos:end="63:60"><expr pos:start="63:42" pos:end="63:60"><name pos:start="63:42" pos:end="63:60">UAS_RC_TMF_COMPLETE</name></expr></argument>, <argument pos:start="63:63" pos:end="63:63"><expr pos:start="63:63" pos:end="63:63"><literal type="number" pos:start="63:63" pos:end="63:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>



    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="71:77"><expr pos:start="71:9" pos:end="71:76"><call pos:start="71:9" pos:end="71:76"><name pos:start="71:9" pos:end="71:37">trace_usb_uas_tmf_unsupported</name><argument_list pos:start="71:38" pos:end="71:76">(<argument pos:start="71:39" pos:end="71:51"><expr pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:41">uas</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:46">dev</name><operator pos:start="71:47" pos:end="71:47">.</operator><name pos:start="71:48" pos:end="71:51">addr</name></name></expr></argument>, <argument pos:start="71:54" pos:end="71:56"><expr pos:start="71:54" pos:end="71:56"><name pos:start="71:54" pos:end="71:56">tag</name></expr></argument>, <argument pos:start="71:59" pos:end="71:75"><expr pos:start="71:59" pos:end="71:75"><name pos:start="71:59" pos:end="71:75"><name pos:start="71:59" pos:end="71:60">ui</name><operator pos:start="71:61" pos:end="71:62">-&gt;</operator><name pos:start="71:63" pos:end="71:66">task</name><operator pos:start="71:67" pos:end="71:67">.</operator><name pos:start="71:68" pos:end="71:75">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:70"><expr pos:start="73:9" pos:end="73:69"><call pos:start="73:9" pos:end="73:69"><name pos:start="73:9" pos:end="73:30">usb_uas_queue_response</name><argument_list pos:start="73:31" pos:end="73:69">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">uas</name></expr></argument>, <argument pos:start="73:37" pos:end="73:39"><expr pos:start="73:37" pos:end="73:39"><name pos:start="73:37" pos:end="73:39">tag</name></expr></argument>, <argument pos:start="73:42" pos:end="73:65"><expr pos:start="73:42" pos:end="73:65"><name pos:start="73:42" pos:end="73:65">UAS_RC_TMF_NOT_SUPPORTED</name></expr></argument>, <argument pos:start="73:68" pos:end="73:68"><expr pos:start="73:68" pos:end="73:68"><literal type="number" pos:start="73:68" pos:end="73:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>


    <return pos:start="78:5" pos:end="78:11">return;</return>



<label pos:start="82:1" pos:end="82:12"><name pos:start="82:1" pos:end="82:11">invalid_tag</name>:</label>

    <expr_stmt pos:start="84:5" pos:end="84:66"><expr pos:start="84:5" pos:end="84:65"><call pos:start="84:5" pos:end="84:65"><name pos:start="84:5" pos:end="84:26">usb_uas_queue_response</name><argument_list pos:start="84:27" pos:end="84:65">(<argument pos:start="84:28" pos:end="84:30"><expr pos:start="84:28" pos:end="84:30"><name pos:start="84:28" pos:end="84:30">uas</name></expr></argument>, <argument pos:start="84:33" pos:end="84:35"><expr pos:start="84:33" pos:end="84:35"><name pos:start="84:33" pos:end="84:35">tag</name></expr></argument>, <argument pos:start="84:38" pos:end="84:61"><expr pos:start="84:38" pos:end="84:61"><name pos:start="84:38" pos:end="84:61">UAS_RC_INVALID_INFO_UNIT</name></expr></argument>, <argument pos:start="84:64" pos:end="84:64"><expr pos:start="84:64" pos:end="84:64"><literal type="number" pos:start="84:64" pos:end="84:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="86:5" pos:end="86:11">return;</return>



<label pos:start="90:1" pos:end="90:15"><name pos:start="90:1" pos:end="90:14">overlapped_tag</name>:</label>

    <expr_stmt pos:start="92:5" pos:end="92:68"><expr pos:start="92:5" pos:end="92:67"><call pos:start="92:5" pos:end="92:67"><name pos:start="92:5" pos:end="92:26">usb_uas_queue_response</name><argument_list pos:start="92:27" pos:end="92:67">(<argument pos:start="92:28" pos:end="92:30"><expr pos:start="92:28" pos:end="92:30"><name pos:start="92:28" pos:end="92:30">uas</name></expr></argument>, <argument pos:start="92:33" pos:end="92:40"><expr pos:start="92:33" pos:end="92:40"><name pos:start="92:33" pos:end="92:40"><name pos:start="92:33" pos:end="92:35">req</name><operator pos:start="92:36" pos:end="92:37">-&gt;</operator><name pos:start="92:38" pos:end="92:40">tag</name></name></expr></argument>, <argument pos:start="92:43" pos:end="92:63"><expr pos:start="92:43" pos:end="92:63"><name pos:start="92:43" pos:end="92:63">UAS_RC_OVERLAPPED_TAG</name></expr></argument>, <argument pos:start="92:66" pos:end="92:66"><expr pos:start="92:66" pos:end="92:66"><literal type="number" pos:start="92:66" pos:end="92:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="94:5" pos:end="94:11">return;</return>



<label pos:start="98:1" pos:end="98:14"><name pos:start="98:1" pos:end="98:13">incorrect_lun</name>:</label>

    <expr_stmt pos:start="100:5" pos:end="100:62"><expr pos:start="100:5" pos:end="100:61"><call pos:start="100:5" pos:end="100:61"><name pos:start="100:5" pos:end="100:26">usb_uas_queue_response</name><argument_list pos:start="100:27" pos:end="100:61">(<argument pos:start="100:28" pos:end="100:30"><expr pos:start="100:28" pos:end="100:30"><name pos:start="100:28" pos:end="100:30">uas</name></expr></argument>, <argument pos:start="100:33" pos:end="100:35"><expr pos:start="100:33" pos:end="100:35"><name pos:start="100:33" pos:end="100:35">tag</name></expr></argument>, <argument pos:start="100:38" pos:end="100:57"><expr pos:start="100:38" pos:end="100:57"><name pos:start="100:38" pos:end="100:57">UAS_RC_INCORRECT_LUN</name></expr></argument>, <argument pos:start="100:60" pos:end="100:60"><expr pos:start="100:60" pos:end="100:60"><literal type="number" pos:start="100:60" pos:end="100:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
