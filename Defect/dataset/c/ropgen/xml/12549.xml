<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12549.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">av_read_frame</name><parameter_list pos:start="1:18" pos:end="1:52">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:33">AVFormatContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">AVPacket</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="191:1">{<block_content pos:start="5:5" pos:end="189:15">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:20">genpts</name> <init pos:start="5:22" pos:end="5:51">= <expr pos:start="5:24" pos:end="5:51"><name pos:start="5:24" pos:end="5:31"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:31">flags</name></name> <operator pos:start="5:33" pos:end="5:33">&amp;</operator> <name pos:start="5:35" pos:end="5:51">AVFMT_FLAG_GENPTS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>          <name pos:start="7:18" pos:end="7:20">eof</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="29:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:15">genpts</name></expr>)</condition> <block pos:start="15:18" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:27">

        <expr_stmt pos:start="17:9" pos:end="21:40"><expr pos:start="17:9" pos:end="21:39"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <ternary pos:start="17:15" pos:end="21:39"><condition pos:start="17:15" pos:end="17:32"><expr pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:30">packet_buffer</name></name></expr> ?</condition><then pos:start="19:13" pos:end="19:82">

            <expr pos:start="19:13" pos:end="19:82"><call pos:start="19:13" pos:end="19:82"><name pos:start="19:13" pos:end="19:35">read_from_packet_buffer</name><argument_list pos:start="19:36" pos:end="19:82">(<argument pos:start="19:37" pos:end="19:53"><expr pos:start="19:37" pos:end="19:53"><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="19:53"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:53">packet_buffer</name></name></expr></argument>, <argument pos:start="19:56" pos:end="19:76"><expr pos:start="19:56" pos:end="19:76"><operator pos:start="19:56" pos:end="19:56">&amp;</operator><name pos:start="19:57" pos:end="19:76"><name pos:start="19:57" pos:end="19:57">s</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:76">packet_buffer_end</name></name></expr></argument>, <argument pos:start="19:79" pos:end="19:81"><expr pos:start="19:79" pos:end="19:81"><name pos:start="19:79" pos:end="19:81">pkt</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="19:84" pos:end="21:39">:

            <expr pos:start="21:13" pos:end="21:39"><call pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:31">read_frame_internal</name><argument_list pos:start="21:32" pos:end="21:39">(<argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>, <argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">pkt</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:23"><if pos:start="23:9" pos:end="25:23">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:23"><block_content pos:start="25:13" pos:end="25:23">

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <goto pos:start="27:9" pos:end="27:27">goto <name pos:start="27:14" pos:end="27:26">return_packet</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="33:5" pos:end="145:5">for <control pos:start="33:9" pos:end="33:12">(<init pos:start="33:10" pos:end="33:10">;</init><condition pos:start="33:11" pos:end="33:11">;</condition><incr/>)</control> <block pos:start="33:14" pos:end="145:5">{<block_content pos:start="35:9" pos:end="143:35">

        <decl_stmt pos:start="35:9" pos:end="35:46"><decl pos:start="35:9" pos:end="35:45"><type pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:20">AVPacketList</name> <modifier pos:start="35:22" pos:end="35:22">*</modifier></type><name pos:start="35:23" pos:end="35:26">pktl</name> <init pos:start="35:28" pos:end="35:45">= <expr pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:30">s</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:45">packet_buffer</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="39:9" pos:end="117:9"><if pos:start="39:9" pos:end="117:9">if <condition pos:start="39:12" pos:end="39:17">(<expr pos:start="39:13" pos:end="39:16"><name pos:start="39:13" pos:end="39:16">pktl</name></expr>)</condition> <block pos:start="39:19" pos:end="117:9">{<block_content pos:start="41:13" pos:end="115:13">

            <decl_stmt pos:start="41:13" pos:end="41:44"><decl pos:start="41:13" pos:end="41:43"><type pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:20">AVPacket</name> <modifier pos:start="41:22" pos:end="41:22">*</modifier></type><name pos:start="41:23" pos:end="41:30">next_pkt</name> <init pos:start="41:32" pos:end="41:43">= <expr pos:start="41:34" pos:end="41:43"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:38">pktl</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:43">pkt</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="99:13"><if pos:start="45:13" pos:end="99:13">if <condition pos:start="45:16" pos:end="45:48">(<expr pos:start="45:17" pos:end="45:47"><name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:24">next_pkt</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">dts</name></name> <operator pos:start="45:31" pos:end="45:32">!=</operator> <name pos:start="45:34" pos:end="45:47">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="45:50" pos:end="99:13">{<block_content pos:start="47:17" pos:end="97:40">

                <decl_stmt pos:start="47:17" pos:end="47:82"><decl pos:start="47:17" pos:end="47:81"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:29">wrap_bits</name> <init pos:start="47:31" pos:end="47:81">= <expr pos:start="47:33" pos:end="47:81"><name pos:start="47:33" pos:end="47:66"><name pos:start="47:33" pos:end="47:33">s</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:42">streams</name><index pos:start="47:43" pos:end="47:66">[<expr pos:start="47:44" pos:end="47:65"><name pos:start="47:44" pos:end="47:65"><name pos:start="47:44" pos:end="47:51">next_pkt</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:65">stream_index</name></name></expr>]</index></name><operator pos:start="47:67" pos:end="47:68">-&gt;</operator><name pos:start="47:69" pos:end="47:81">pts_wrap_bits</name></expr></init></decl>;</decl_stmt>

                <comment type="line" pos:start="49:17" pos:end="49:77">// last dts seen for this stream. if any of packets following</comment>

                <comment type="line" pos:start="51:17" pos:end="51:78">// current one had no dts, we will set this to AV_NOPTS_VALUE.</comment>

                <decl_stmt pos:start="53:17" pos:end="53:49"><decl pos:start="53:17" pos:end="53:48"><type pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:23">int64_t</name></type> <name pos:start="53:25" pos:end="53:32">last_dts</name> <init pos:start="53:34" pos:end="53:48">= <expr pos:start="53:36" pos:end="53:48"><name pos:start="53:36" pos:end="53:48"><name pos:start="53:36" pos:end="53:43">next_pkt</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:48">dts</name></name></expr></init></decl>;</decl_stmt>

                <while pos:start="55:17" pos:end="79:17">while <condition pos:start="55:23" pos:end="55:63">(<expr pos:start="55:24" pos:end="55:62"><name pos:start="55:24" pos:end="55:27">pktl</name> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator> <name pos:start="55:32" pos:end="55:44"><name pos:start="55:32" pos:end="55:39">next_pkt</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:44">pts</name></name> <operator pos:start="55:46" pos:end="55:47">==</operator> <name pos:start="55:49" pos:end="55:62">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="55:65" pos:end="79:17">{<block_content pos:start="57:21" pos:end="77:38">

                    <if_stmt pos:start="57:21" pos:end="75:21"><if pos:start="57:21" pos:end="75:21">if <condition pos:start="57:24" pos:end="59:99">(<expr pos:start="57:25" pos:end="59:98"><name pos:start="57:25" pos:end="57:46"><name pos:start="57:25" pos:end="57:28">pktl</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:33">pkt</name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:46">stream_index</name></name> <operator pos:start="57:48" pos:end="57:49">==</operator> <name pos:start="57:51" pos:end="57:72"><name pos:start="57:51" pos:end="57:58">next_pkt</name><operator pos:start="57:59" pos:end="57:60">-&gt;</operator><name pos:start="57:61" pos:end="57:72">stream_index</name></name> <operator pos:start="57:74" pos:end="57:75">&amp;&amp;</operator>

                        <operator pos:start="59:25" pos:end="59:25">(</operator><call pos:start="59:26" pos:end="59:93"><name pos:start="59:26" pos:end="59:39">av_compare_mod</name><argument_list pos:start="59:40" pos:end="59:93">(<argument pos:start="59:41" pos:end="59:53"><expr pos:start="59:41" pos:end="59:53"><name pos:start="59:41" pos:end="59:53"><name pos:start="59:41" pos:end="59:48">next_pkt</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:53">dts</name></name></expr></argument>, <argument pos:start="59:56" pos:end="59:68"><expr pos:start="59:56" pos:end="59:68"><name pos:start="59:56" pos:end="59:68"><name pos:start="59:56" pos:end="59:59">pktl</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:64">pkt</name><operator pos:start="59:65" pos:end="59:65">.</operator><name pos:start="59:66" pos:end="59:68">dts</name></name></expr></argument>, <argument pos:start="59:71" pos:end="59:92"><expr pos:start="59:71" pos:end="59:92"><literal type="number" pos:start="59:71" pos:end="59:73">2LL</literal> <operator pos:start="59:75" pos:end="59:76">&lt;&lt;</operator> <operator pos:start="59:78" pos:end="59:78">(</operator><name pos:start="59:79" pos:end="59:87">wrap_bits</name> <operator pos:start="59:89" pos:end="59:89">-</operator> <literal type="number" pos:start="59:91" pos:end="59:91">1</literal><operator pos:start="59:92" pos:end="59:92">)</operator></expr></argument>)</argument_list></call> <operator pos:start="59:95" pos:end="59:95">&lt;</operator> <literal type="number" pos:start="59:97" pos:end="59:97">0</literal><operator pos:start="59:98" pos:end="59:98">)</operator></expr>)</condition> <block pos:start="59:101" pos:end="75:21">{<block_content pos:start="61:25" pos:end="73:25">

                        <if_stmt pos:start="61:25" pos:end="65:25"><if pos:start="61:25" pos:end="65:25">if <condition pos:start="61:28" pos:end="61:97">(<expr pos:start="61:29" pos:end="61:96"><call pos:start="61:29" pos:end="61:96"><name pos:start="61:29" pos:end="61:42">av_compare_mod</name><argument_list pos:start="61:43" pos:end="61:96">(<argument pos:start="61:44" pos:end="61:56"><expr pos:start="61:44" pos:end="61:56"><name pos:start="61:44" pos:end="61:56"><name pos:start="61:44" pos:end="61:47">pktl</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:52">pkt</name><operator pos:start="61:53" pos:end="61:53">.</operator><name pos:start="61:54" pos:end="61:56">pts</name></name></expr></argument>, <argument pos:start="61:59" pos:end="61:71"><expr pos:start="61:59" pos:end="61:71"><name pos:start="61:59" pos:end="61:71"><name pos:start="61:59" pos:end="61:62">pktl</name><operator pos:start="61:63" pos:end="61:64">-&gt;</operator><name pos:start="61:65" pos:end="61:67">pkt</name><operator pos:start="61:68" pos:end="61:68">.</operator><name pos:start="61:69" pos:end="61:71">dts</name></name></expr></argument>, <argument pos:start="61:74" pos:end="61:95"><expr pos:start="61:74" pos:end="61:95"><literal type="number" pos:start="61:74" pos:end="61:76">2LL</literal> <operator pos:start="61:78" pos:end="61:79">&lt;&lt;</operator> <operator pos:start="61:81" pos:end="61:81">(</operator><name pos:start="61:82" pos:end="61:90">wrap_bits</name> <operator pos:start="61:92" pos:end="61:92">-</operator> <literal type="number" pos:start="61:94" pos:end="61:94">1</literal><operator pos:start="61:95" pos:end="61:95">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:99" pos:end="65:25">{<block_content pos:start="63:29" pos:end="63:58"> <comment type="line" pos:start="61:101" pos:end="61:113">//not b frame</comment>

                            <expr_stmt pos:start="63:29" pos:end="63:58"><expr pos:start="63:29" pos:end="63:57"><name pos:start="63:29" pos:end="63:41"><name pos:start="63:29" pos:end="63:36">next_pkt</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:41">pts</name></name> <operator pos:start="63:43" pos:end="63:43">=</operator> <name pos:start="63:45" pos:end="63:57"><name pos:start="63:45" pos:end="63:48">pktl</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:53">pkt</name><operator pos:start="63:54" pos:end="63:54">.</operator><name pos:start="63:55" pos:end="63:57">dts</name></name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="67:25" pos:end="73:25"><if pos:start="67:25" pos:end="73:25">if <condition pos:start="67:28" pos:end="67:55">(<expr pos:start="67:29" pos:end="67:54"><name pos:start="67:29" pos:end="67:36">last_dts</name> <operator pos:start="67:38" pos:end="67:39">!=</operator> <name pos:start="67:41" pos:end="67:54">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="67:57" pos:end="73:25">{<block_content pos:start="71:29" pos:end="71:53">

                            <comment type="line" pos:start="69:29" pos:end="69:91">// Once last dts was set to AV_NOPTS_VALUE, we don't change it.</comment>

                            <expr_stmt pos:start="71:29" pos:end="71:53"><expr pos:start="71:29" pos:end="71:52"><name pos:start="71:29" pos:end="71:36">last_dts</name> <operator pos:start="71:38" pos:end="71:38">=</operator> <name pos:start="71:40" pos:end="71:52"><name pos:start="71:40" pos:end="71:43">pktl</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:48">pkt</name><operator pos:start="71:49" pos:end="71:49">.</operator><name pos:start="71:50" pos:end="71:52">dts</name></name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:38"><expr pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:24">pktl</name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:37"><name pos:start="77:28" pos:end="77:31">pktl</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:37">next</name></name></expr>;</expr_stmt>

                </block_content>}</block></while>

                <if_stmt pos:start="81:17" pos:end="95:17"><if pos:start="81:17" pos:end="95:17">if <condition pos:start="81:20" pos:end="81:89">(<expr pos:start="81:21" pos:end="81:88"><name pos:start="81:21" pos:end="81:23">eof</name> <operator pos:start="81:25" pos:end="81:26">&amp;&amp;</operator> <name pos:start="81:28" pos:end="81:40"><name pos:start="81:28" pos:end="81:35">next_pkt</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:40">pts</name></name> <operator pos:start="81:42" pos:end="81:43">==</operator> <name pos:start="81:45" pos:end="81:58">AV_NOPTS_VALUE</name> <operator pos:start="81:60" pos:end="81:61">&amp;&amp;</operator> <name pos:start="81:63" pos:end="81:70">last_dts</name> <operator pos:start="81:72" pos:end="81:73">!=</operator> <name pos:start="81:75" pos:end="81:88">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="81:91" pos:end="95:17">{<block_content pos:start="93:21" pos:end="93:66">

                    <comment type="line" pos:start="83:21" pos:end="83:88">// Fixing the last reference frame had none pts issue (For MXF etc).</comment>

                    <comment type="line" pos:start="85:21" pos:end="85:43">// We only do this when</comment>

                    <comment type="line" pos:start="87:21" pos:end="87:30">// 1. eof.</comment>

                    <comment type="line" pos:start="89:21" pos:end="89:84">// 2. we are not able to resolve a pts value for current packet.</comment>

                    <comment type="line" pos:start="91:21" pos:end="91:92">// 3. the packets for this stream at the end of the files had valid dts.</comment>

                    <expr_stmt pos:start="93:21" pos:end="93:66"><expr pos:start="93:21" pos:end="93:65"><name pos:start="93:21" pos:end="93:33"><name pos:start="93:21" pos:end="93:28">next_pkt</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:33">pts</name></name> <operator pos:start="93:35" pos:end="93:35">=</operator> <name pos:start="93:37" pos:end="93:44">last_dts</name> <operator pos:start="93:46" pos:end="93:46">+</operator> <name pos:start="93:48" pos:end="93:65"><name pos:start="93:48" pos:end="93:55">next_pkt</name><operator pos:start="93:56" pos:end="93:57">-&gt;</operator><name pos:start="93:58" pos:end="93:65">duration</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:40"><expr pos:start="97:17" pos:end="97:39"><name pos:start="97:17" pos:end="97:20">pktl</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:39"><name pos:start="97:24" pos:end="97:24">s</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:39">packet_buffer</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="103:13" pos:end="103:66">/* read packet from packet buffer, if there is data */</comment>

            <if_stmt pos:start="105:13" pos:end="115:13"><if pos:start="105:13" pos:end="115:13">if <condition pos:start="105:16" pos:end="107:59">(<expr pos:start="105:17" pos:end="107:58"><operator pos:start="105:17" pos:end="105:17">!</operator><operator pos:start="105:18" pos:end="105:18">(</operator><name pos:start="105:19" pos:end="105:31"><name pos:start="105:19" pos:end="105:26">next_pkt</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:31">pts</name></name> <operator pos:start="105:33" pos:end="105:34">==</operator> <name pos:start="105:36" pos:end="105:49">AV_NOPTS_VALUE</name> <operator pos:start="105:51" pos:end="105:52">&amp;&amp;</operator>

                  <name pos:start="107:19" pos:end="107:31"><name pos:start="107:19" pos:end="107:26">next_pkt</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:31">dts</name></name> <operator pos:start="107:33" pos:end="107:34">!=</operator> <name pos:start="107:36" pos:end="107:49">AV_NOPTS_VALUE</name> <operator pos:start="107:51" pos:end="107:52">&amp;&amp;</operator> <operator pos:start="107:54" pos:end="107:54">!</operator><name pos:start="107:55" pos:end="107:57">eof</name><operator pos:start="107:58" pos:end="107:58">)</operator></expr>)</condition> <block pos:start="107:61" pos:end="115:13">{<block_content pos:start="109:17" pos:end="113:35">

                <expr_stmt pos:start="109:17" pos:end="111:75"><expr pos:start="109:17" pos:end="111:74"><name pos:start="109:17" pos:end="109:19">ret</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <call pos:start="109:23" pos:end="111:74"><name pos:start="109:23" pos:end="109:45">read_from_packet_buffer</name><argument_list pos:start="109:46" pos:end="111:74">(<argument pos:start="109:47" pos:end="109:63"><expr pos:start="109:47" pos:end="109:63"><operator pos:start="109:47" pos:end="109:47">&amp;</operator><name pos:start="109:48" pos:end="109:63"><name pos:start="109:48" pos:end="109:48">s</name><operator pos:start="109:49" pos:end="109:50">-&gt;</operator><name pos:start="109:51" pos:end="109:63">packet_buffer</name></name></expr></argument>,

                                               <argument pos:start="111:48" pos:end="111:68"><expr pos:start="111:48" pos:end="111:68"><operator pos:start="111:48" pos:end="111:48">&amp;</operator><name pos:start="111:49" pos:end="111:68"><name pos:start="111:49" pos:end="111:49">s</name><operator pos:start="111:50" pos:end="111:51">-&gt;</operator><name pos:start="111:52" pos:end="111:68">packet_buffer_end</name></name></expr></argument>, <argument pos:start="111:71" pos:end="111:73"><expr pos:start="111:71" pos:end="111:73"><name pos:start="111:71" pos:end="111:73">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="113:17" pos:end="113:35">goto <name pos:start="113:22" pos:end="113:34">return_packet</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:42"><expr pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <call pos:start="121:15" pos:end="121:41"><name pos:start="121:15" pos:end="121:33">read_frame_internal</name><argument_list pos:start="121:34" pos:end="121:41">(<argument pos:start="121:35" pos:end="121:35"><expr pos:start="121:35" pos:end="121:35"><name pos:start="121:35" pos:end="121:35">s</name></expr></argument>, <argument pos:start="121:38" pos:end="121:40"><expr pos:start="121:38" pos:end="121:40"><name pos:start="121:38" pos:end="121:40">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="135:9"><if pos:start="123:9" pos:end="135:9">if <condition pos:start="123:12" pos:end="123:20">(<expr pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:17">&lt;</operator> <literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>)</condition> <block pos:start="123:22" pos:end="135:9">{<block_content pos:start="125:13" pos:end="133:27">

            <if_stmt pos:start="125:13" pos:end="133:27"><if pos:start="125:13" pos:end="131:13">if <condition pos:start="125:16" pos:end="125:47">(<expr pos:start="125:17" pos:end="125:46"><name pos:start="125:17" pos:end="125:20">pktl</name> <operator pos:start="125:22" pos:end="125:23">&amp;&amp;</operator> <name pos:start="125:25" pos:end="125:27">ret</name> <operator pos:start="125:29" pos:end="125:30">!=</operator> <call pos:start="125:32" pos:end="125:46"><name pos:start="125:32" pos:end="125:38">AVERROR</name><argument_list pos:start="125:39" pos:end="125:46">(<argument pos:start="125:40" pos:end="125:45"><expr pos:start="125:40" pos:end="125:45"><name pos:start="125:40" pos:end="125:45">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:49" pos:end="131:13">{<block_content pos:start="127:17" pos:end="129:25">

                <expr_stmt pos:start="127:17" pos:end="127:24"><expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">eof</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <literal type="number" pos:start="127:23" pos:end="127:23">1</literal></expr>;</expr_stmt>

                <continue pos:start="129:17" pos:end="129:25">continue;</continue>

            </block_content>}</block></if> <else pos:start="131:15" pos:end="133:27">else<block type="pseudo" pos:start="133:17" pos:end="133:27"><block_content pos:start="133:17" pos:end="133:27">

                <return pos:start="133:17" pos:end="133:27">return <expr pos:start="133:24" pos:end="133:26"><name pos:start="133:24" pos:end="133:26">ret</name></expr>;</return></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="143:35"><if pos:start="139:9" pos:end="143:35">if <condition pos:start="139:12" pos:end="141:54">(<expr pos:start="139:13" pos:end="141:53"><call pos:start="139:13" pos:end="141:49"><name pos:start="139:13" pos:end="139:25">av_dup_packet</name><argument_list pos:start="139:26" pos:end="141:49">(<argument pos:start="139:27" pos:end="141:48"><expr pos:start="139:27" pos:end="141:48"><call pos:start="139:27" pos:end="141:48"><name pos:start="139:27" pos:end="139:39">add_to_pktbuf</name><argument_list pos:start="139:40" pos:end="141:48">(<argument pos:start="139:41" pos:end="139:57"><expr pos:start="139:41" pos:end="139:57"><operator pos:start="139:41" pos:end="139:41">&amp;</operator><name pos:start="139:42" pos:end="139:57"><name pos:start="139:42" pos:end="139:42">s</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:57">packet_buffer</name></name></expr></argument>, <argument pos:start="139:60" pos:end="139:62"><expr pos:start="139:60" pos:end="139:62"><name pos:start="139:60" pos:end="139:62">pkt</name></expr></argument>,

                          <argument pos:start="141:27" pos:end="141:47"><expr pos:start="141:27" pos:end="141:47"><operator pos:start="141:27" pos:end="141:27">&amp;</operator><name pos:start="141:28" pos:end="141:47"><name pos:start="141:28" pos:end="141:28">s</name><operator pos:start="141:29" pos:end="141:30">-&gt;</operator><name pos:start="141:31" pos:end="141:47">packet_buffer_end</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="141:51" pos:end="141:51">&lt;</operator> <literal type="number" pos:start="141:53" pos:end="141:53">0</literal></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:35"><block_content pos:start="143:13" pos:end="143:35">

            <return pos:start="143:13" pos:end="143:35">return <expr pos:start="143:20" pos:end="143:34"><call pos:start="143:20" pos:end="143:34"><name pos:start="143:20" pos:end="143:26">AVERROR</name><argument_list pos:start="143:27" pos:end="143:34">(<argument pos:start="143:28" pos:end="143:33"><expr pos:start="143:28" pos:end="143:33"><name pos:start="143:28" pos:end="143:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="149:1" pos:end="149:14"><name pos:start="149:1" pos:end="149:13">return_packet</name>:</label>



    <expr_stmt pos:start="153:5" pos:end="153:39"><expr pos:start="153:5" pos:end="153:38"><name pos:start="153:5" pos:end="153:6">st</name> <operator pos:start="153:8" pos:end="153:8">=</operator> <name pos:start="153:10" pos:end="153:38"><name pos:start="153:10" pos:end="153:10">s</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:19">streams</name><index pos:start="153:20" pos:end="153:38">[<expr pos:start="153:21" pos:end="153:37"><name pos:start="153:21" pos:end="153:37"><name pos:start="153:21" pos:end="153:23">pkt</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:37">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="165:5"><if pos:start="155:5" pos:end="165:5">if <condition pos:start="155:8" pos:end="155:25">(<expr pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:10">st</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:24">skip_samples</name></name></expr>)</condition> <block pos:start="155:27" pos:end="165:5">{<block_content pos:start="157:9" pos:end="163:29">

        <decl_stmt pos:start="157:9" pos:end="157:80"><decl pos:start="157:9" pos:end="157:79"><type pos:start="157:9" pos:end="157:17"><name pos:start="157:9" pos:end="157:15">uint8_t</name> <modifier pos:start="157:17" pos:end="157:17">*</modifier></type><name pos:start="157:18" pos:end="157:18">p</name> <init pos:start="157:20" pos:end="157:79">= <expr pos:start="157:22" pos:end="157:79"><call pos:start="157:22" pos:end="157:79"><name pos:start="157:22" pos:end="157:44">av_packet_new_side_data</name><argument_list pos:start="157:45" pos:end="157:79">(<argument pos:start="157:46" pos:end="157:48"><expr pos:start="157:46" pos:end="157:48"><name pos:start="157:46" pos:end="157:48">pkt</name></expr></argument>, <argument pos:start="157:51" pos:end="157:74"><expr pos:start="157:51" pos:end="157:74"><name pos:start="157:51" pos:end="157:74">AV_PKT_DATA_SKIP_SAMPLES</name></expr></argument>, <argument pos:start="157:77" pos:end="157:78"><expr pos:start="157:77" pos:end="157:78"><literal type="number" pos:start="157:77" pos:end="157:78">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:37"><expr pos:start="159:9" pos:end="159:36"><call pos:start="159:9" pos:end="159:36"><name pos:start="159:9" pos:end="159:15">AV_WL32</name><argument_list pos:start="159:16" pos:end="159:36">(<argument pos:start="159:17" pos:end="159:17"><expr pos:start="159:17" pos:end="159:17"><name pos:start="159:17" pos:end="159:17">p</name></expr></argument>, <argument pos:start="159:20" pos:end="159:35"><expr pos:start="159:20" pos:end="159:35"><name pos:start="159:20" pos:end="159:35"><name pos:start="159:20" pos:end="159:21">st</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:35">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:81"><expr pos:start="161:9" pos:end="161:80"><call pos:start="161:9" pos:end="161:80"><name pos:start="161:9" pos:end="161:14">av_log</name><argument_list pos:start="161:15" pos:end="161:80">(<argument pos:start="161:16" pos:end="161:16"><expr pos:start="161:16" pos:end="161:16"><name pos:start="161:16" pos:end="161:16">s</name></expr></argument>, <argument pos:start="161:19" pos:end="161:30"><expr pos:start="161:19" pos:end="161:30"><name pos:start="161:19" pos:end="161:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="161:33" pos:end="161:61"><expr pos:start="161:33" pos:end="161:61"><literal type="string" pos:start="161:33" pos:end="161:61">"demuxer injecting skip %d\n"</literal></expr></argument>, <argument pos:start="161:64" pos:end="161:79"><expr pos:start="161:64" pos:end="161:79"><name pos:start="161:64" pos:end="161:79"><name pos:start="161:64" pos:end="161:65">st</name><operator pos:start="161:66" pos:end="161:67">-&gt;</operator><name pos:start="161:68" pos:end="161:79">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:29"><expr pos:start="163:9" pos:end="163:28"><name pos:start="163:9" pos:end="163:24"><name pos:start="163:9" pos:end="163:10">st</name><operator pos:start="163:11" pos:end="163:12">-&gt;</operator><name pos:start="163:13" pos:end="163:24">skip_samples</name></name> <operator pos:start="163:26" pos:end="163:26">=</operator> <literal type="number" pos:start="163:28" pos:end="163:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="169:5" pos:end="175:5"><if pos:start="169:5" pos:end="175:5">if <condition pos:start="169:8" pos:end="169:82">(<expr pos:start="169:9" pos:end="169:81"><operator pos:start="169:9" pos:end="169:9">(</operator><name pos:start="169:10" pos:end="169:26"><name pos:start="169:10" pos:end="169:10">s</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:19">iformat</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:26">flags</name></name> <operator pos:start="169:28" pos:end="169:28">&amp;</operator> <name pos:start="169:30" pos:end="169:48">AVFMT_GENERIC_INDEX</name><operator pos:start="169:49" pos:end="169:49">)</operator> <operator pos:start="169:51" pos:end="169:52">&amp;&amp;</operator> <name pos:start="169:54" pos:end="169:63"><name pos:start="169:54" pos:end="169:56">pkt</name><operator pos:start="169:57" pos:end="169:58">-&gt;</operator><name pos:start="169:59" pos:end="169:63">flags</name></name> <operator pos:start="169:65" pos:end="169:65">&amp;</operator> <name pos:start="169:67" pos:end="169:81">AV_PKT_FLAG_KEY</name></expr>)</condition> <block pos:start="169:84" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:75">

        <expr_stmt pos:start="171:9" pos:end="171:38"><expr pos:start="171:9" pos:end="171:37"><call pos:start="171:9" pos:end="171:37"><name pos:start="171:9" pos:end="171:23">ff_reduce_index</name><argument_list pos:start="171:24" pos:end="171:37">(<argument pos:start="171:25" pos:end="171:25"><expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">s</name></expr></argument>, <argument pos:start="171:28" pos:end="171:36"><expr pos:start="171:28" pos:end="171:36"><name pos:start="171:28" pos:end="171:36"><name pos:start="171:28" pos:end="171:29">st</name><operator pos:start="171:30" pos:end="171:31">-&gt;</operator><name pos:start="171:32" pos:end="171:36">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:75"><expr pos:start="173:9" pos:end="173:74"><call pos:start="173:9" pos:end="173:74"><name pos:start="173:9" pos:end="173:26">av_add_index_entry</name><argument_list pos:start="173:27" pos:end="173:74">(<argument pos:start="173:28" pos:end="173:29"><expr pos:start="173:28" pos:end="173:29"><name pos:start="173:28" pos:end="173:29">st</name></expr></argument>, <argument pos:start="173:32" pos:end="173:39"><expr pos:start="173:32" pos:end="173:39"><name pos:start="173:32" pos:end="173:39"><name pos:start="173:32" pos:end="173:34">pkt</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:39">pos</name></name></expr></argument>, <argument pos:start="173:42" pos:end="173:49"><expr pos:start="173:42" pos:end="173:49"><name pos:start="173:42" pos:end="173:49"><name pos:start="173:42" pos:end="173:44">pkt</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:49">dts</name></name></expr></argument>, <argument pos:start="173:52" pos:end="173:52"><expr pos:start="173:52" pos:end="173:52"><literal type="number" pos:start="173:52" pos:end="173:52">0</literal></expr></argument>, <argument pos:start="173:55" pos:end="173:55"><expr pos:start="173:55" pos:end="173:55"><literal type="number" pos:start="173:55" pos:end="173:55">0</literal></expr></argument>, <argument pos:start="173:58" pos:end="173:73"><expr pos:start="173:58" pos:end="173:73"><name pos:start="173:58" pos:end="173:73">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="179:5" pos:end="181:37"><if pos:start="179:5" pos:end="181:37">if <condition pos:start="179:8" pos:end="179:30">(<expr pos:start="179:9" pos:end="179:29"><call pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:19">is_relative</name><argument_list pos:start="179:20" pos:end="179:29">(<argument pos:start="179:21" pos:end="179:28"><expr pos:start="179:21" pos:end="179:28"><name pos:start="179:21" pos:end="179:28"><name pos:start="179:21" pos:end="179:23">pkt</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:28">dts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:37"><block_content pos:start="181:9" pos:end="181:37">

        <expr_stmt pos:start="181:9" pos:end="181:37"><expr pos:start="181:9" pos:end="181:36"><name pos:start="181:9" pos:end="181:16"><name pos:start="181:9" pos:end="181:11">pkt</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:16">dts</name></name> <operator pos:start="181:18" pos:end="181:19">-=</operator> <name pos:start="181:21" pos:end="181:36">RELATIVE_TS_BASE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="183:5" pos:end="185:37"><if pos:start="183:5" pos:end="185:37">if <condition pos:start="183:8" pos:end="183:30">(<expr pos:start="183:9" pos:end="183:29"><call pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:19">is_relative</name><argument_list pos:start="183:20" pos:end="183:29">(<argument pos:start="183:21" pos:end="183:28"><expr pos:start="183:21" pos:end="183:28"><name pos:start="183:21" pos:end="183:28"><name pos:start="183:21" pos:end="183:23">pkt</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:28">pts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:37"><block_content pos:start="185:9" pos:end="185:37">

        <expr_stmt pos:start="185:9" pos:end="185:37"><expr pos:start="185:9" pos:end="185:36"><name pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:11">pkt</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:16">pts</name></name> <operator pos:start="185:18" pos:end="185:19">-=</operator> <name pos:start="185:21" pos:end="185:36">RELATIVE_TS_BASE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="189:5" pos:end="189:15">return <expr pos:start="189:12" pos:end="189:14"><name pos:start="189:12" pos:end="189:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
