<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6607.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">dvbsub_parse_clut_segment</name><parameter_list pos:start="1:37" pos:end="3:70">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:58"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:55"><decl pos:start="3:38" pos:end="3:55"><type pos:start="3:38" pos:end="3:55"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:50">uint8_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:55">buf</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:69"><decl pos:start="3:58" pos:end="3:69"><type pos:start="3:58" pos:end="3:69"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:69">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="195:1">{<block_content pos:start="7:5" pos:end="193:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">DVBSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">buf_end</name> <init pos:start="11:28" pos:end="11:43">= <expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">buf</name> <operator pos:start="11:34" pos:end="11:34">+</operator> <name pos:start="11:36" pos:end="11:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:18">clut_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">DVBSubCLUT</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:20">clut</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">entry_id</name></decl>, <decl pos:start="19:19" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:23">depth</name></decl> , <decl pos:start="19:27" pos:end="19:36"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:27" pos:end="19:36">full_range</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">y</name></decl>, <decl pos:start="21:12" pos:end="21:13"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:13">cr</name></decl>, <decl pos:start="21:16" pos:end="21:17"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:17">cb</name></decl>, <decl pos:start="21:20" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:20" pos:end="21:24">alpha</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">r</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">g</name></decl>, <decl pos:start="23:15" pos:end="23:15"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:15">b</name></decl>, <decl pos:start="23:18" pos:end="23:22"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:18" pos:end="23:22">r_add</name></decl>, <decl pos:start="23:25" pos:end="23:29"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:25" pos:end="23:29">g_add</name></decl>, <decl pos:start="23:32" pos:end="23:36"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:32" pos:end="23:36">b_add</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><call pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:11">ff_dlog</name><argument_list pos:start="27:12" pos:end="27:40">(<argument pos:start="27:13" pos:end="27:17"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:17">avctx</name></expr></argument>, <argument pos:start="27:20" pos:end="27:39"><expr pos:start="27:20" pos:end="27:39"><literal type="string" pos:start="27:20" pos:end="27:39">"DVB clut packet:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="39:5">for <control pos:start="31:9" pos:end="31:32">(<init pos:start="31:10" pos:end="31:13"><expr pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:10">i</name><operator pos:start="31:11" pos:end="31:11">=</operator><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</init> <condition pos:start="31:15" pos:end="31:27"><expr pos:start="31:15" pos:end="31:26"><name pos:start="31:15" pos:end="31:15">i</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <name pos:start="31:19" pos:end="31:26">buf_size</name></expr>;</condition> <incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">i</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr>)</control> <block pos:start="31:34" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:33">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:15">ff_dlog</name><argument_list pos:start="33:16" pos:end="33:39">(<argument pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">avctx</name></expr></argument>, <argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><literal type="string" pos:start="33:24" pos:end="33:30">"%02x "</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:38"><expr pos:start="33:33" pos:end="33:38"><name pos:start="33:33" pos:end="33:38"><name pos:start="33:33" pos:end="33:35">buf</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:33"><if pos:start="35:9" pos:end="37:33">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:13">i</name> <operator pos:start="35:15" pos:end="35:15">%</operator> <literal type="number" pos:start="35:17" pos:end="35:18">16</literal> <operator pos:start="35:20" pos:end="35:21">==</operator> <literal type="number" pos:start="35:23" pos:end="35:24">15</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:33"><block_content pos:start="37:13" pos:end="37:33">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><call pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:19">ff_dlog</name><argument_list pos:start="37:20" pos:end="37:32">(<argument pos:start="37:21" pos:end="37:25"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:25">avctx</name></expr></argument>, <argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><literal type="string" pos:start="37:28" pos:end="37:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="43:5" pos:end="45:29"><if pos:start="43:5" pos:end="45:29">if <condition pos:start="43:8" pos:end="43:15">(<expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:11">%</operator> <literal type="number" pos:start="43:13" pos:end="43:14">16</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:29"><block_content pos:start="45:9" pos:end="45:29">

        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><call pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:15">ff_dlog</name><argument_list pos:start="45:16" pos:end="45:28">(<argument pos:start="45:17" pos:end="45:21"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:21">avctx</name></expr></argument>, <argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><literal type="string" pos:start="45:24" pos:end="45:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:11">clut_id</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">*</operator><name pos:start="49:16" pos:end="49:18">buf</name><operator pos:start="49:19" pos:end="49:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:11">version</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">(</operator><operator pos:start="51:16" pos:end="51:16">(</operator><operator pos:start="51:17" pos:end="51:17">*</operator><name pos:start="51:18" pos:end="51:20">buf</name><operator pos:start="51:21" pos:end="51:21">)</operator><operator pos:start="51:22" pos:end="51:23">&gt;&gt;</operator><literal type="number" pos:start="51:24" pos:end="51:24">4</literal><operator pos:start="51:25" pos:end="51:25">)</operator><operator pos:start="51:26" pos:end="51:26">&amp;</operator><literal type="number" pos:start="51:27" pos:end="51:28">15</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:13"><expr pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:7">buf</name> <operator pos:start="53:9" pos:end="53:10">+=</operator> <literal type="number" pos:start="53:12" pos:end="53:12">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:8">clut</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <call pos:start="57:12" pos:end="57:33"><name pos:start="57:12" pos:end="57:19">get_clut</name><argument_list pos:start="57:20" pos:end="57:33">(<argument pos:start="57:21" pos:end="57:23"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">ctx</name></expr></argument>, <argument pos:start="57:26" pos:end="57:32"><expr pos:start="57:26" pos:end="57:32"><name pos:start="57:26" pos:end="57:32">clut_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="85:5"><if pos:start="61:5" pos:end="85:5">if <condition pos:start="61:8" pos:end="61:14">(<expr pos:start="61:9" pos:end="61:13"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:13">clut</name></expr>)</condition> <block pos:start="61:16" pos:end="85:5">{<block_content pos:start="63:9" pos:end="83:30">

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:12">clut</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <call pos:start="63:16" pos:end="63:44"><name pos:start="63:16" pos:end="63:24">av_malloc</name><argument_list pos:start="63:25" pos:end="63:44">(<argument pos:start="63:26" pos:end="63:43"><expr pos:start="63:26" pos:end="63:43"><sizeof pos:start="63:26" pos:end="63:43">sizeof<argument_list pos:start="63:32" pos:end="63:43">(<argument pos:start="63:33" pos:end="63:42"><expr pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:42">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:35"><if pos:start="65:9" pos:end="67:35">if <condition pos:start="65:12" pos:end="65:18">(<expr pos:start="65:13" pos:end="65:17"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:17">clut</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:35"><block_content pos:start="67:13" pos:end="67:35">

            <return pos:start="67:13" pos:end="67:35">return <expr pos:start="67:20" pos:end="67:34"><call pos:start="67:20" pos:end="67:34"><name pos:start="67:20" pos:end="67:26">AVERROR</name><argument_list pos:start="67:27" pos:end="67:34">(<argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><name pos:start="67:28" pos:end="67:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><call pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:14">memcpy</name><argument_list pos:start="71:15" pos:end="71:55">(<argument pos:start="71:16" pos:end="71:19"><expr pos:start="71:16" pos:end="71:19"><name pos:start="71:16" pos:end="71:19">clut</name></expr></argument>, <argument pos:start="71:22" pos:end="71:34"><expr pos:start="71:22" pos:end="71:34"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:34">default_clut</name></expr></argument>, <argument pos:start="71:37" pos:end="71:54"><expr pos:start="71:37" pos:end="71:54"><sizeof pos:start="71:37" pos:end="71:54">sizeof<argument_list pos:start="71:43" pos:end="71:54">(<argument pos:start="71:44" pos:end="71:53"><expr pos:start="71:44" pos:end="71:53"><name pos:start="71:44" pos:end="71:53">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:27"><expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:12">clut</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:16">id</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:26">clut_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:27"><expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:12">clut</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:21">version</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <operator pos:start="77:25" pos:end="77:25">-</operator><literal type="number" pos:start="77:26" pos:end="77:26">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:12">clut</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:18">next</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:35"><name pos:start="81:22" pos:end="81:24">ctx</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:35">clut_list</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:30"><expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:11">ctx</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:22">clut_list</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:29">clut</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="189:5"><if pos:start="89:5" pos:end="189:5">if <condition pos:start="89:8" pos:end="89:33">(<expr pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:12">clut</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:21">version</name></name> <operator pos:start="89:23" pos:end="89:24">!=</operator> <name pos:start="89:26" pos:end="89:32">version</name></expr>)</condition> <block pos:start="89:35" pos:end="189:5">{<block_content pos:start="93:5" pos:end="187:5">



    <expr_stmt pos:start="93:5" pos:end="93:28"><expr pos:start="93:5" pos:end="93:27"><name pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:8">clut</name><operator pos:start="93:9" pos:end="93:10">-&gt;</operator><name pos:start="93:11" pos:end="93:17">version</name></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:27">version</name></expr>;</expr_stmt>



    <while pos:start="97:5" pos:end="187:5">while <condition pos:start="97:11" pos:end="97:29">(<expr pos:start="97:12" pos:end="97:28"><name pos:start="97:12" pos:end="97:14">buf</name> <operator pos:start="97:16" pos:end="97:16">+</operator> <literal type="number" pos:start="97:18" pos:end="97:18">4</literal> <operator pos:start="97:20" pos:end="97:20">&lt;</operator> <name pos:start="97:22" pos:end="97:28">buf_end</name></expr>)</condition> <block pos:start="97:31" pos:end="187:5">{<block_content pos:start="99:9" pos:end="185:62">

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:16">entry_id</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <operator pos:start="99:20" pos:end="99:20">*</operator><name pos:start="99:21" pos:end="99:23">buf</name><operator pos:start="99:24" pos:end="99:25">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:30"><expr pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:13">depth</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <operator pos:start="103:17" pos:end="103:17">(</operator><operator pos:start="103:18" pos:end="103:18">*</operator><name pos:start="103:19" pos:end="103:21">buf</name><operator pos:start="103:22" pos:end="103:22">)</operator> <operator pos:start="103:24" pos:end="103:24">&amp;</operator> <literal type="number" pos:start="103:26" pos:end="103:29">0xe0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="107:9" pos:end="113:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:23">(<expr pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:17">depth</name> <operator pos:start="107:19" pos:end="107:20">==</operator> <literal type="number" pos:start="107:22" pos:end="107:22">0</literal></expr>)</condition> <block pos:start="107:25" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:21">

            <expr_stmt pos:start="109:13" pos:end="109:76"><expr pos:start="109:13" pos:end="109:75"><call pos:start="109:13" pos:end="109:75"><name pos:start="109:13" pos:end="109:18">av_log</name><argument_list pos:start="109:19" pos:end="109:75">(<argument pos:start="109:20" pos:end="109:24"><expr pos:start="109:20" pos:end="109:24"><name pos:start="109:20" pos:end="109:24">avctx</name></expr></argument>, <argument pos:start="109:27" pos:end="109:38"><expr pos:start="109:27" pos:end="109:38"><name pos:start="109:27" pos:end="109:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:41" pos:end="109:68"><expr pos:start="109:41" pos:end="109:68"><literal type="string" pos:start="109:41" pos:end="109:68">"Invalid clut depth 0x%x!\n"</literal></expr></argument>, <argument pos:start="109:71" pos:end="109:74"><expr pos:start="109:71" pos:end="109:74"><operator pos:start="109:71" pos:end="109:71">*</operator><name pos:start="109:72" pos:end="109:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="111:13" pos:end="111:21">return <expr pos:start="111:20" pos:end="111:20"><literal type="number" pos:start="111:20" pos:end="111:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:18">full_range</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <operator pos:start="117:22" pos:end="117:22">(</operator><operator pos:start="117:23" pos:end="117:23">*</operator><name pos:start="117:24" pos:end="117:26">buf</name><operator pos:start="117:27" pos:end="117:28">++</operator><operator pos:start="117:29" pos:end="117:29">)</operator> <operator pos:start="117:31" pos:end="117:31">&amp;</operator> <literal type="number" pos:start="117:33" pos:end="117:33">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="145:9"><if pos:start="121:9" pos:end="131:9">if <condition pos:start="121:12" pos:end="121:23">(<expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:22">full_range</name></expr>)</condition> <block pos:start="121:25" pos:end="131:9">{<block_content pos:start="123:13" pos:end="129:27">

            <expr_stmt pos:start="123:13" pos:end="123:23"><expr pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:13">y</name> <operator pos:start="123:15" pos:end="123:15">=</operator> <operator pos:start="123:17" pos:end="123:17">*</operator><name pos:start="123:18" pos:end="123:20">buf</name><operator pos:start="123:21" pos:end="123:22">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:24"><expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:14">cr</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <operator pos:start="125:18" pos:end="125:18">*</operator><name pos:start="125:19" pos:end="125:21">buf</name><operator pos:start="125:22" pos:end="125:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:24"><expr pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:14">cb</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <operator pos:start="127:18" pos:end="127:18">*</operator><name pos:start="127:19" pos:end="127:21">buf</name><operator pos:start="127:22" pos:end="127:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:27"><expr pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:17">alpha</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <operator pos:start="129:21" pos:end="129:21">*</operator><name pos:start="129:22" pos:end="129:24">buf</name><operator pos:start="129:25" pos:end="129:26">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="145:9">else <block pos:start="131:16" pos:end="145:9">{<block_content pos:start="133:13" pos:end="143:21">

            <expr_stmt pos:start="133:13" pos:end="133:30"><expr pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:13">y</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <name pos:start="133:17" pos:end="133:22"><name pos:start="133:17" pos:end="133:19">buf</name><index pos:start="133:20" pos:end="133:22">[<expr pos:start="133:21" pos:end="133:21"><literal type="number" pos:start="133:21" pos:end="133:21">0</literal></expr>]</index></name> <operator pos:start="133:24" pos:end="133:24">&amp;</operator> <literal type="number" pos:start="133:26" pos:end="133:29">0xfc</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:66"><expr pos:start="135:13" pos:end="135:65"><name pos:start="135:13" pos:end="135:14">cr</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <operator pos:start="135:18" pos:end="135:18">(</operator><operator pos:start="135:19" pos:end="135:19">(</operator><operator pos:start="135:20" pos:end="135:20">(</operator><name pos:start="135:21" pos:end="135:26"><name pos:start="135:21" pos:end="135:23">buf</name><index pos:start="135:24" pos:end="135:26">[<expr pos:start="135:25" pos:end="135:25"><literal type="number" pos:start="135:25" pos:end="135:25">0</literal></expr>]</index></name> <operator pos:start="135:28" pos:end="135:28">&amp;</operator> <literal type="number" pos:start="135:30" pos:end="135:30">3</literal><operator pos:start="135:31" pos:end="135:31">)</operator> <operator pos:start="135:33" pos:end="135:34">&lt;&lt;</operator> <literal type="number" pos:start="135:36" pos:end="135:36">2</literal><operator pos:start="135:37" pos:end="135:37">)</operator> <operator pos:start="135:39" pos:end="135:39">|</operator> <operator pos:start="135:41" pos:end="135:41">(</operator><operator pos:start="135:42" pos:end="135:42">(</operator><name pos:start="135:43" pos:end="135:48"><name pos:start="135:43" pos:end="135:45">buf</name><index pos:start="135:46" pos:end="135:48">[<expr pos:start="135:47" pos:end="135:47"><literal type="number" pos:start="135:47" pos:end="135:47">1</literal></expr>]</index></name> <operator pos:start="135:50" pos:end="135:51">&gt;&gt;</operator> <literal type="number" pos:start="135:53" pos:end="135:53">6</literal><operator pos:start="135:54" pos:end="135:54">)</operator> <operator pos:start="135:56" pos:end="135:56">&amp;</operator> <literal type="number" pos:start="135:58" pos:end="135:58">3</literal><operator pos:start="135:59" pos:end="135:59">)</operator><operator pos:start="135:60" pos:end="135:60">)</operator> <operator pos:start="135:62" pos:end="135:63">&lt;&lt;</operator> <literal type="number" pos:start="135:65" pos:end="135:65">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:38"><expr pos:start="137:13" pos:end="137:37"><name pos:start="137:13" pos:end="137:14">cb</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <operator pos:start="137:18" pos:end="137:18">(</operator><name pos:start="137:19" pos:end="137:24"><name pos:start="137:19" pos:end="137:21">buf</name><index pos:start="137:22" pos:end="137:24">[<expr pos:start="137:23" pos:end="137:23"><literal type="number" pos:start="137:23" pos:end="137:23">1</literal></expr>]</index></name> <operator pos:start="137:26" pos:end="137:27">&lt;&lt;</operator> <literal type="number" pos:start="137:29" pos:end="137:29">2</literal><operator pos:start="137:30" pos:end="137:30">)</operator> <operator pos:start="137:32" pos:end="137:32">&amp;</operator> <literal type="number" pos:start="137:34" pos:end="137:37">0xf0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:17">alpha</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <operator pos:start="139:21" pos:end="139:21">(</operator><name pos:start="139:22" pos:end="139:27"><name pos:start="139:22" pos:end="139:24">buf</name><index pos:start="139:25" pos:end="139:27">[<expr pos:start="139:26" pos:end="139:26"><literal type="number" pos:start="139:26" pos:end="139:26">1</literal></expr>]</index></name> <operator pos:start="139:29" pos:end="139:30">&lt;&lt;</operator> <literal type="number" pos:start="139:32" pos:end="139:32">6</literal><operator pos:start="139:33" pos:end="139:33">)</operator> <operator pos:start="139:35" pos:end="139:35">&amp;</operator> <literal type="number" pos:start="139:37" pos:end="139:40">0xc0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:21"><expr pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:15">buf</name> <operator pos:start="143:17" pos:end="143:18">+=</operator> <literal type="number" pos:start="143:20" pos:end="143:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="149:9" pos:end="151:25"><if pos:start="149:9" pos:end="151:25">if <condition pos:start="149:12" pos:end="149:19">(<expr pos:start="149:13" pos:end="149:18"><name pos:start="149:13" pos:end="149:13">y</name> <operator pos:start="149:15" pos:end="149:16">==</operator> <literal type="number" pos:start="149:18" pos:end="149:18">0</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:25"><block_content pos:start="151:13" pos:end="151:25">

            <expr_stmt pos:start="151:13" pos:end="151:25"><expr pos:start="151:13" pos:end="151:24"><name pos:start="151:13" pos:end="151:17">alpha</name> <operator pos:start="151:19" pos:end="151:19">=</operator> <literal type="number" pos:start="151:21" pos:end="151:24">0xff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:33"><expr pos:start="155:9" pos:end="155:32"><call pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:24">YUV_TO_RGB1_CCIR</name><argument_list pos:start="155:25" pos:end="155:32">(<argument pos:start="155:26" pos:end="155:27"><expr pos:start="155:26" pos:end="155:27"><name pos:start="155:26" pos:end="155:27">cb</name></expr></argument>, <argument pos:start="155:30" pos:end="155:31"><expr pos:start="155:30" pos:end="155:31"><name pos:start="155:30" pos:end="155:31">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:37"><expr pos:start="157:9" pos:end="157:36"><call pos:start="157:9" pos:end="157:36"><name pos:start="157:9" pos:end="157:24">YUV_TO_RGB2_CCIR</name><argument_list pos:start="157:25" pos:end="157:36">(<argument pos:start="157:26" pos:end="157:26"><expr pos:start="157:26" pos:end="157:26"><name pos:start="157:26" pos:end="157:26">r</name></expr></argument>, <argument pos:start="157:29" pos:end="157:29"><expr pos:start="157:29" pos:end="157:29"><name pos:start="157:29" pos:end="157:29">g</name></expr></argument>, <argument pos:start="157:32" pos:end="157:32"><expr pos:start="157:32" pos:end="157:32"><name pos:start="157:32" pos:end="157:32">b</name></expr></argument>, <argument pos:start="157:35" pos:end="157:35"><expr pos:start="157:35" pos:end="157:35"><name pos:start="157:35" pos:end="157:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:79"><expr pos:start="161:9" pos:end="161:78"><call pos:start="161:9" pos:end="161:78"><name pos:start="161:9" pos:end="161:15">ff_dlog</name><argument_list pos:start="161:16" pos:end="161:78">(<argument pos:start="161:17" pos:end="161:21"><expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:21">avctx</name></expr></argument>, <argument pos:start="161:24" pos:end="161:51"><expr pos:start="161:24" pos:end="161:51"><literal type="string" pos:start="161:24" pos:end="161:51">"clut %d := (%d,%d,%d,%d)\n"</literal></expr></argument>, <argument pos:start="161:54" pos:end="161:61"><expr pos:start="161:54" pos:end="161:61"><name pos:start="161:54" pos:end="161:61">entry_id</name></expr></argument>, <argument pos:start="161:64" pos:end="161:64"><expr pos:start="161:64" pos:end="161:64"><name pos:start="161:64" pos:end="161:64">r</name></expr></argument>, <argument pos:start="161:67" pos:end="161:67"><expr pos:start="161:67" pos:end="161:67"><name pos:start="161:67" pos:end="161:67">g</name></expr></argument>, <argument pos:start="161:70" pos:end="161:70"><expr pos:start="161:70" pos:end="161:70"><name pos:start="161:70" pos:end="161:70">b</name></expr></argument>, <argument pos:start="161:73" pos:end="161:77"><expr pos:start="161:73" pos:end="161:77"><name pos:start="161:73" pos:end="161:77">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="171:9"><if pos:start="163:9" pos:end="171:9">if <condition pos:start="163:12" pos:end="163:71">(<expr pos:start="163:13" pos:end="163:70"><operator pos:start="163:13" pos:end="163:13">!</operator><operator pos:start="163:14" pos:end="163:14">!</operator><operator pos:start="163:15" pos:end="163:15">(</operator><name pos:start="163:16" pos:end="163:20">depth</name> <operator pos:start="163:22" pos:end="163:22">&amp;</operator> <literal type="number" pos:start="163:24" pos:end="163:27">0x80</literal><operator pos:start="163:28" pos:end="163:28">)</operator> <operator pos:start="163:30" pos:end="163:30">+</operator> <operator pos:start="163:32" pos:end="163:32">!</operator><operator pos:start="163:33" pos:end="163:33">!</operator><operator pos:start="163:34" pos:end="163:34">(</operator><name pos:start="163:35" pos:end="163:39">depth</name> <operator pos:start="163:41" pos:end="163:41">&amp;</operator> <literal type="number" pos:start="163:43" pos:end="163:46">0x40</literal><operator pos:start="163:47" pos:end="163:47">)</operator> <operator pos:start="163:49" pos:end="163:49">+</operator> <operator pos:start="163:51" pos:end="163:51">!</operator><operator pos:start="163:52" pos:end="163:52">!</operator><operator pos:start="163:53" pos:end="163:53">(</operator><name pos:start="163:54" pos:end="163:58">depth</name> <operator pos:start="163:60" pos:end="163:60">&amp;</operator> <literal type="number" pos:start="163:62" pos:end="163:65">0x20</literal><operator pos:start="163:66" pos:end="163:66">)</operator> <operator pos:start="163:68" pos:end="163:68">&gt;</operator> <literal type="number" pos:start="163:70" pos:end="163:70">1</literal></expr>)</condition> <block pos:start="163:73" pos:end="171:9">{<block_content pos:start="165:13" pos:end="169:43">

            <expr_stmt pos:start="165:13" pos:end="165:74"><expr pos:start="165:13" pos:end="165:73"><call pos:start="165:13" pos:end="165:73"><name pos:start="165:13" pos:end="165:19">ff_dlog</name><argument_list pos:start="165:20" pos:end="165:73">(<argument pos:start="165:21" pos:end="165:25"><expr pos:start="165:21" pos:end="165:25"><name pos:start="165:21" pos:end="165:25">avctx</name></expr></argument>, <argument pos:start="165:28" pos:end="165:65"><expr pos:start="165:28" pos:end="165:65"><literal type="string" pos:start="165:28" pos:end="165:65">"More than one bit level marked: %x\n"</literal></expr></argument>, <argument pos:start="165:68" pos:end="165:72"><expr pos:start="165:68" pos:end="165:72"><name pos:start="165:68" pos:end="165:72">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="169:43"><if pos:start="167:13" pos:end="169:43">if <condition pos:start="167:16" pos:end="167:68">(<expr pos:start="167:17" pos:end="167:67"><name pos:start="167:17" pos:end="167:44"><name pos:start="167:17" pos:end="167:21">avctx</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:44">strict_std_compliance</name></name> <operator pos:start="167:46" pos:end="167:46">&gt;</operator> <name pos:start="167:48" pos:end="167:67">FF_COMPLIANCE_NORMAL</name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:43"><block_content pos:start="169:17" pos:end="169:43">

                <return pos:start="169:17" pos:end="169:43">return <expr pos:start="169:24" pos:end="169:42"><name pos:start="169:24" pos:end="169:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="175:9" pos:end="185:62"><if pos:start="175:9" pos:end="177:60">if <condition pos:start="175:12" pos:end="175:25">(<expr pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:17">depth</name> <operator pos:start="175:19" pos:end="175:19">&amp;</operator> <literal type="number" pos:start="175:21" pos:end="175:24">0x80</literal></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:60"><block_content pos:start="177:13" pos:end="177:60">

            <expr_stmt pos:start="177:13" pos:end="177:60"><expr pos:start="177:13" pos:end="177:59"><name pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:16">clut</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:23">clut4</name><index pos:start="177:24" pos:end="177:33">[<expr pos:start="177:25" pos:end="177:32"><name pos:start="177:25" pos:end="177:32">entry_id</name></expr>]</index></name> <operator pos:start="177:35" pos:end="177:35">=</operator> <call pos:start="177:37" pos:end="177:59"><name pos:start="177:37" pos:end="177:40">RGBA</name><argument_list pos:start="177:41" pos:end="177:59">(<argument pos:start="177:42" pos:end="177:42"><expr pos:start="177:42" pos:end="177:42"><name pos:start="177:42" pos:end="177:42">r</name></expr></argument>,<argument pos:start="177:44" pos:end="177:44"><expr pos:start="177:44" pos:end="177:44"><name pos:start="177:44" pos:end="177:44">g</name></expr></argument>,<argument pos:start="177:46" pos:end="177:46"><expr pos:start="177:46" pos:end="177:46"><name pos:start="177:46" pos:end="177:46">b</name></expr></argument>,<argument pos:start="177:48" pos:end="177:58"><expr pos:start="177:48" pos:end="177:58"><literal type="number" pos:start="177:48" pos:end="177:52">255</literal> <operator pos:start="177:52" pos:end="177:52">-</operator> <name pos:start="177:54" pos:end="177:58">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="179:9" pos:end="181:61">else if <condition pos:start="179:17" pos:end="179:30">(<expr pos:start="179:18" pos:end="179:29"><name pos:start="179:18" pos:end="179:22">depth</name> <operator pos:start="179:24" pos:end="179:24">&amp;</operator> <literal type="number" pos:start="179:26" pos:end="179:29">0x40</literal></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:61"><block_content pos:start="181:13" pos:end="181:61">

            <expr_stmt pos:start="181:13" pos:end="181:61"><expr pos:start="181:13" pos:end="181:60"><name pos:start="181:13" pos:end="181:34"><name pos:start="181:13" pos:end="181:16">clut</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:24">clut16</name><index pos:start="181:25" pos:end="181:34">[<expr pos:start="181:26" pos:end="181:33"><name pos:start="181:26" pos:end="181:33">entry_id</name></expr>]</index></name> <operator pos:start="181:36" pos:end="181:36">=</operator> <call pos:start="181:38" pos:end="181:60"><name pos:start="181:38" pos:end="181:41">RGBA</name><argument_list pos:start="181:42" pos:end="181:60">(<argument pos:start="181:43" pos:end="181:43"><expr pos:start="181:43" pos:end="181:43"><name pos:start="181:43" pos:end="181:43">r</name></expr></argument>,<argument pos:start="181:45" pos:end="181:45"><expr pos:start="181:45" pos:end="181:45"><name pos:start="181:45" pos:end="181:45">g</name></expr></argument>,<argument pos:start="181:47" pos:end="181:47"><expr pos:start="181:47" pos:end="181:47"><name pos:start="181:47" pos:end="181:47">b</name></expr></argument>,<argument pos:start="181:49" pos:end="181:59"><expr pos:start="181:49" pos:end="181:59"><literal type="number" pos:start="181:49" pos:end="181:53">255</literal> <operator pos:start="181:53" pos:end="181:53">-</operator> <name pos:start="181:55" pos:end="181:59">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="183:9" pos:end="185:62">else if <condition pos:start="183:17" pos:end="183:30">(<expr pos:start="183:18" pos:end="183:29"><name pos:start="183:18" pos:end="183:22">depth</name> <operator pos:start="183:24" pos:end="183:24">&amp;</operator> <literal type="number" pos:start="183:26" pos:end="183:29">0x20</literal></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:62"><block_content pos:start="185:13" pos:end="185:62">

            <expr_stmt pos:start="185:13" pos:end="185:62"><expr pos:start="185:13" pos:end="185:61"><name pos:start="185:13" pos:end="185:35"><name pos:start="185:13" pos:end="185:16">clut</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:25">clut256</name><index pos:start="185:26" pos:end="185:35">[<expr pos:start="185:27" pos:end="185:34"><name pos:start="185:27" pos:end="185:34">entry_id</name></expr>]</index></name> <operator pos:start="185:37" pos:end="185:37">=</operator> <call pos:start="185:39" pos:end="185:61"><name pos:start="185:39" pos:end="185:42">RGBA</name><argument_list pos:start="185:43" pos:end="185:61">(<argument pos:start="185:44" pos:end="185:44"><expr pos:start="185:44" pos:end="185:44"><name pos:start="185:44" pos:end="185:44">r</name></expr></argument>,<argument pos:start="185:46" pos:end="185:46"><expr pos:start="185:46" pos:end="185:46"><name pos:start="185:46" pos:end="185:46">g</name></expr></argument>,<argument pos:start="185:48" pos:end="185:48"><expr pos:start="185:48" pos:end="185:48"><name pos:start="185:48" pos:end="185:48">b</name></expr></argument>,<argument pos:start="185:50" pos:end="185:60"><expr pos:start="185:50" pos:end="185:60"><literal type="number" pos:start="185:50" pos:end="185:54">255</literal> <operator pos:start="185:54" pos:end="185:54">-</operator> <name pos:start="185:56" pos:end="185:60">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <return pos:start="193:5" pos:end="193:13">return <expr pos:start="193:12" pos:end="193:12"><literal type="number" pos:start="193:12" pos:end="193:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
