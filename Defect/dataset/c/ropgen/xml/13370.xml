<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13370.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">omap_mpuio_read</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:13">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">omap_mpuio_s</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:59">= <expr pos:start="7:30" pos:end="7:59"><operator pos:start="7:30" pos:end="7:30">(</operator>struct <name pos:start="7:38" pos:end="7:49">omap_mpuio_s</name> <operator pos:start="7:51" pos:end="7:51">*</operator><operator pos:start="7:52" pos:end="7:52">)</operator> <name pos:start="7:54" pos:end="7:59">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:42">= <expr pos:start="9:18" pos:end="9:42"><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:42">OMAP_MPUI_REG_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:16">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">size</name> <operator pos:start="15:14" pos:end="15:15">!=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">2</literal></expr>)</condition> <block pos:start="15:20" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:50">

        <return pos:start="17:9" pos:end="17:50">return <expr pos:start="17:16" pos:end="17:49"><call pos:start="17:16" pos:end="17:49"><name pos:start="17:16" pos:end="17:35">omap_badwidth_read16</name><argument_list pos:start="17:36" pos:end="17:49">(<argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><name pos:start="17:37" pos:end="17:42">opaque</name></expr></argument>, <argument pos:start="17:45" pos:end="17:48"><expr pos:start="17:45" pos:end="17:48"><name pos:start="17:45" pos:end="17:48">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="23:5" pos:end="109:5">switch <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:18">offset</name></expr>)</condition> <block pos:start="23:21" pos:end="109:5">{<block_content pos:start="25:5" pos:end="107:24">

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="25:17" pos:end="25:33">/* INPUT_LATCH */</comment>

        <return pos:start="27:9" pos:end="27:25">return <expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:24">inputs</name></name></expr>;</return>



    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="31:17" pos:end="31:32">/* OUTPUT_REG */</comment>

        <return pos:start="33:9" pos:end="33:26">return <expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:25">outputs</name></name></expr>;</return>



    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:29">/* IO_CNTL */</comment>

        <return pos:start="39:9" pos:end="39:22">return <expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:21">dir</name></name></expr>;</return>



    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="43:17" pos:end="43:31">/* KBR_LATCH */</comment>

        <return pos:start="45:9" pos:end="45:28">return <expr pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:27">row_latch</name></name></expr>;</return>



    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><literal type="number" pos:start="49:10" pos:end="49:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="49:17" pos:end="49:29">/* KBC_REG */</comment>

        <return pos:start="51:9" pos:end="51:23">return <expr pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:22">cols</name></name></expr>;</return>



    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="55:17" pos:end="55:41">/* GPIO_EVENT_MODE_REG */</comment>

        <return pos:start="57:9" pos:end="57:24">return <expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">event</name></name></expr>;</return>



    <case pos:start="61:5" pos:end="61:14">case <expr pos:start="61:10" pos:end="61:13"><literal type="number" pos:start="61:10" pos:end="61:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="61:17" pos:end="61:39">/* GPIO_INT_EDGE_REG */</comment>

        <return pos:start="63:9" pos:end="63:23">return <expr pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:22">edge</name></name></expr>;</return>



    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x20</literal></expr>:</case>	<comment type="block" pos:start="67:17" pos:end="67:29">/* KBD_INT */</comment>

        <return pos:start="69:9" pos:end="69:54">return <expr pos:start="69:16" pos:end="69:53"><operator pos:start="69:16" pos:end="69:16">(</operator><operator pos:start="69:17" pos:end="69:17">~</operator><name pos:start="69:18" pos:end="69:29"><name pos:start="69:18" pos:end="69:18">s</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:29">row_latch</name></name> <operator pos:start="69:31" pos:end="69:31">&amp;</operator> <literal type="number" pos:start="69:33" pos:end="69:36">0x1f</literal><operator pos:start="69:37" pos:end="69:37">)</operator> <operator pos:start="69:39" pos:end="69:40">&amp;&amp;</operator> <operator pos:start="69:42" pos:end="69:42">!</operator><name pos:start="69:43" pos:end="69:53"><name pos:start="69:43" pos:end="69:43">s</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:53">kbd_mask</name></name></expr>;</return>



    <case pos:start="73:5" pos:end="73:14">case <expr pos:start="73:10" pos:end="73:13"><literal type="number" pos:start="73:10" pos:end="73:13">0x24</literal></expr>:</case>	<comment type="block" pos:start="73:17" pos:end="73:30">/* GPIO_INT */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:21"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">ints</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:27"><expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">ints</name></name> <operator pos:start="77:17" pos:end="77:18">&amp;=</operator> <name pos:start="77:20" pos:end="77:26"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:26">mask</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:35"><if pos:start="79:9" pos:end="81:35">if <condition pos:start="79:12" pos:end="79:16">(<expr pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:15">ret</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:35"><block_content pos:start="81:13" pos:end="81:35">

            <expr_stmt pos:start="81:13" pos:end="81:35"><expr pos:start="81:13" pos:end="81:34"><call pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:26">qemu_irq_lower</name><argument_list pos:start="81:27" pos:end="81:34">(<argument pos:start="81:28" pos:end="81:33"><expr pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:33">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return>



    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x28</literal></expr>:</case>	<comment type="block" pos:start="87:17" pos:end="87:32">/* KBD_MASKIT */</comment>

        <return pos:start="89:9" pos:end="89:27">return <expr pos:start="89:16" pos:end="89:26"><name pos:start="89:16" pos:end="89:26"><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:26">kbd_mask</name></name></expr>;</return>



    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x2c</literal></expr>:</case>	<comment type="block" pos:start="93:17" pos:end="93:33">/* GPIO_MASKIT */</comment>

        <return pos:start="95:9" pos:end="95:23">return <expr pos:start="95:16" pos:end="95:22"><name pos:start="95:16" pos:end="95:22"><name pos:start="95:16" pos:end="95:16">s</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:22">mask</name></name></expr>;</return>



    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x30</literal></expr>:</case>	<comment type="block" pos:start="99:17" pos:end="99:41">/* GPIO_DEBOUNCING_REG */</comment>

        <return pos:start="101:9" pos:end="101:27">return <expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:26">debounce</name></name></expr>;</return>



    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x34</literal></expr>:</case>	<comment type="block" pos:start="105:17" pos:end="105:36">/* GPIO_LATCH_REG */</comment>

        <return pos:start="107:9" pos:end="107:24">return <expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:16">s</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">latch</name></name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><call pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:16">OMAP_BAD_REG</name><argument_list pos:start="113:17" pos:end="113:22">(<argument pos:start="113:18" pos:end="113:21"><expr pos:start="113:18" pos:end="113:21"><name pos:start="113:18" pos:end="113:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
