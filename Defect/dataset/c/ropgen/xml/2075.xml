<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2075.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:33"><name pos:start="1:1" pos:end="1:22">sd_co_get_block_status</name><argument_list pos:start="1:23" pos:end="3:33">(<argument pos:start="1:24" pos:end="1:43">BlockDriverState *bs</argument>, <argument pos:start="1:46" pos:end="1:63">int64_t sector_num</argument>, <argument pos:start="1:66" pos:end="1:79">int nb_sectors</argument>,

                       <argument pos:start="3:24" pos:end="3:32">int *pnum</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:15">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BDRVSheepdogState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:37">= <expr pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:29">bs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">SheepdogInode</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:24">inode</name> <init pos:start="9:26" pos:end="9:36">= <expr pos:start="9:28" pos:end="9:36"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:36"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:36">inode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:68"><decl pos:start="11:5" pos:end="11:67"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:24">object_size</name> <init pos:start="11:26" pos:end="11:67">= <expr pos:start="11:28" pos:end="11:67"><operator pos:start="11:28" pos:end="11:28">(</operator><call pos:start="11:29" pos:end="11:39"><name pos:start="11:29" pos:end="11:36">UINT32_C</name><argument_list pos:start="11:37" pos:end="11:39">(<argument pos:start="11:38" pos:end="11:38"><expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="11:41" pos:end="11:42">&lt;&lt;</operator> <name pos:start="11:44" pos:end="11:66"><name pos:start="11:44" pos:end="11:48">inode</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:66">block_size_shift</name></name><operator pos:start="11:67" pos:end="11:67">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:19">offset</name> <init pos:start="13:21" pos:end="13:51">= <expr pos:start="13:23" pos:end="13:51"><name pos:start="13:23" pos:end="13:32">sector_num</name> <operator pos:start="13:34" pos:end="13:34">*</operator> <name pos:start="13:36" pos:end="13:51">BDRV_SECTOR_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="19:68"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">long</name></type> <name pos:start="15:19" pos:end="15:23">start</name> <init pos:start="15:25" pos:end="15:46">= <expr pos:start="15:27" pos:end="15:46"><name pos:start="15:27" pos:end="15:32">offset</name> <operator pos:start="15:34" pos:end="15:34">/</operator> <name pos:start="15:36" pos:end="15:46">object_size</name></expr></init></decl>,

                  <decl pos:start="17:19" pos:end="19:67"><type ref="prev" pos:start="15:5" pos:end="15:17"/><name pos:start="17:19" pos:end="17:21">end</name> <init pos:start="17:23" pos:end="19:67">= <expr pos:start="17:25" pos:end="19:67"><call pos:start="17:25" pos:end="19:67"><name pos:start="17:25" pos:end="17:36">DIV_ROUND_UP</name><argument_list pos:start="17:37" pos:end="19:67">(<argument pos:start="17:38" pos:end="19:53"><expr pos:start="17:38" pos:end="19:53"><operator pos:start="17:38" pos:end="17:38">(</operator><name pos:start="17:39" pos:end="17:48">sector_num</name> <operator pos:start="17:50" pos:end="17:50">+</operator> <name pos:start="17:52" pos:end="17:61">nb_sectors</name><operator pos:start="17:62" pos:end="17:62">)</operator> <operator pos:start="17:64" pos:end="17:64">*</operator>

                                     <name pos:start="19:38" pos:end="19:53">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="19:56" pos:end="19:66"><expr pos:start="19:56" pos:end="19:66"><name pos:start="19:56" pos:end="19:66">object_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">long</name></type> <name pos:start="21:19" pos:end="21:21">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:69"><decl pos:start="23:5" pos:end="23:68"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:15">ret</name> <init pos:start="23:17" pos:end="23:68">= <expr pos:start="23:19" pos:end="23:68"><name pos:start="23:19" pos:end="23:33">BDRV_BLOCK_DATA</name> <operator pos:start="23:35" pos:end="23:35">|</operator> <name pos:start="23:37" pos:end="23:59">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="23:61" pos:end="23:61">|</operator> <name pos:start="23:63" pos:end="23:68">offset</name></expr></init></decl>;</decl_stmt>



    <for pos:start="27:5" pos:end="35:5">for <control pos:start="27:9" pos:end="27:39">(<init pos:start="27:10" pos:end="27:21"><expr pos:start="27:10" pos:end="27:20"><name pos:start="27:10" pos:end="27:12">idx</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:20">start</name></expr>;</init> <condition pos:start="27:23" pos:end="27:32"><expr pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:25">idx</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <name pos:start="27:29" pos:end="27:31">end</name></expr>;</condition> <incr pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:36">idx</name><operator pos:start="27:37" pos:end="27:38">++</operator></expr></incr>)</control> <block pos:start="27:41" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:9">

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:17">inode</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:30">data_vdi_id</name><index pos:start="29:31" pos:end="29:35">[<expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:34">idx</name></expr>]</index></name> <operator pos:start="29:37" pos:end="29:38">==</operator> <literal type="number" pos:start="29:40" pos:end="29:40">0</literal></expr>)</condition> <block pos:start="29:43" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">idx</name> <operator pos:start="37:13" pos:end="37:14">==</operator> <name pos:start="37:16" pos:end="37:20">start</name></expr>)</condition> <block pos:start="37:23" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <comment type="block" pos:start="39:9" pos:end="39:59">/* Get the longest length of unallocated sectors */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:16"><expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</expr_stmt>

        <for pos:start="43:9" pos:end="51:9">for <control pos:start="43:13" pos:end="43:47">(<init pos:start="43:14" pos:end="43:29"><expr pos:start="43:14" pos:end="43:28"><name pos:start="43:14" pos:end="43:16">idx</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:24">start</name> <operator pos:start="43:26" pos:end="43:26">+</operator> <literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr>;</init> <condition pos:start="43:31" pos:end="43:40"><expr pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:33">idx</name> <operator pos:start="43:35" pos:end="43:35">&lt;</operator> <name pos:start="43:37" pos:end="43:39">end</name></expr>;</condition> <incr pos:start="43:42" pos:end="43:46"><expr pos:start="43:42" pos:end="43:46"><name pos:start="43:42" pos:end="43:44">idx</name><operator pos:start="43:45" pos:end="43:46">++</operator></expr></incr>)</control> <block pos:start="43:49" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:13">

            <if_stmt pos:start="45:13" pos:end="49:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:45">(<expr pos:start="45:17" pos:end="45:44"><name pos:start="45:17" pos:end="45:39"><name pos:start="45:17" pos:end="45:21">inode</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:34">data_vdi_id</name><index pos:start="45:35" pos:end="45:39">[<expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:38">idx</name></expr>]</index></name> <operator pos:start="45:41" pos:end="45:42">!=</operator> <literal type="number" pos:start="45:44" pos:end="45:44">0</literal></expr>)</condition> <block pos:start="45:47" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:22">

                <break pos:start="47:17" pos:end="47:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:59"><expr pos:start="57:5" pos:end="57:58"><operator pos:start="57:5" pos:end="57:5">*</operator><name pos:start="57:6" pos:end="57:9">pnum</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:16">idx</name> <operator pos:start="57:18" pos:end="57:18">-</operator> <name pos:start="57:20" pos:end="57:24">start</name><operator pos:start="57:25" pos:end="57:25">)</operator> <operator pos:start="57:27" pos:end="57:27">*</operator> <name pos:start="57:29" pos:end="57:39">object_size</name> <operator pos:start="57:41" pos:end="57:41">/</operator> <name pos:start="57:43" pos:end="57:58">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:27">(<expr pos:start="59:9" pos:end="59:26"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:13">pnum</name> <operator pos:start="59:15" pos:end="59:15">&gt;</operator> <name pos:start="59:17" pos:end="59:26">nb_sectors</name></expr>)</condition> <block pos:start="59:29" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:27">

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:13">pnum</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:26">nb_sectors</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
