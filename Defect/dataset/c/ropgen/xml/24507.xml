<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24507.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">vscsi_command_complete</name><parameter_list pos:start="1:35" pos:end="1:70">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:46">SCSIRequest</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">sreq</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:69">status</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:23">

    <decl_stmt pos:start="5:5" pos:end="5:77"><decl pos:start="5:5" pos:end="5:76"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VSCSIState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:76">= <expr pos:start="5:21" pos:end="5:76"><call pos:start="5:21" pos:end="5:76"><name pos:start="5:21" pos:end="5:29">DO_UPCAST</name><argument_list pos:start="5:30" pos:end="5:76">(<argument pos:start="5:31" pos:end="5:40"><expr pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:40">VSCSIState</name></expr></argument>, <argument pos:start="5:43" pos:end="5:51"><expr pos:start="5:43" pos:end="5:51"><name pos:start="5:43" pos:end="5:51"><name pos:start="5:43" pos:end="5:46">vdev</name><operator pos:start="5:47" pos:end="5:47">.</operator><name pos:start="5:48" pos:end="5:51">qdev</name></name></expr></argument>, <argument pos:start="5:54" pos:end="5:75"><expr pos:start="5:54" pos:end="5:75"><name pos:start="5:54" pos:end="5:75"><name pos:start="5:54" pos:end="5:57">sreq</name><operator pos:start="5:58" pos:end="5:59">-&gt;</operator><name pos:start="5:60" pos:end="5:62">bus</name><operator pos:start="5:63" pos:end="5:64">-&gt;</operator><name pos:start="5:65" pos:end="5:68">qbus</name><operator pos:start="5:69" pos:end="5:69">.</operator><name pos:start="5:70" pos:end="5:75">parent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">vscsi_req</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">req</name> <init pos:start="7:20" pos:end="7:38">= <expr pos:start="7:22" pos:end="7:38"><name pos:start="7:22" pos:end="7:38"><name pos:start="7:22" pos:end="7:25">sreq</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:38">hba_private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:18">res_in</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>, <decl pos:start="9:25" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:25" pos:end="9:31">res_out</name> <init pos:start="9:33" pos:end="9:35">= <expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:44"><expr pos:start="13:5" pos:end="15:43"><call pos:start="13:5" pos:end="15:43"><name pos:start="13:5" pos:end="13:11">dprintf</name><argument_list pos:start="13:12" pos:end="15:43">(<argument pos:start="13:13" pos:end="13:77"><expr pos:start="13:13" pos:end="13:77"><literal type="string" pos:start="13:13" pos:end="13:77">"VSCSI: SCSI cmd complete, r=0x%x tag=0x%x status=0x%x, req=%p\n"</literal></expr></argument>,

            <argument pos:start="15:13" pos:end="15:18"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">reason</name></expr></argument>, <argument pos:start="15:21" pos:end="15:29"><expr pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:24">sreq</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:29">tag</name></name></expr></argument>, <argument pos:start="15:32" pos:end="15:37"><expr pos:start="15:32" pos:end="15:37"><name pos:start="15:32" pos:end="15:37">status</name></expr></argument>, <argument pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><name pos:start="15:40" pos:end="15:42">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">req</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <name pos:start="17:16" pos:end="17:19">NULL</name></expr>)</condition> <block pos:start="17:22" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:79"><expr pos:start="19:9" pos:end="19:78"><call pos:start="19:9" pos:end="19:78"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="19:78">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>, <argument pos:start="19:25" pos:end="19:66"><expr pos:start="19:25" pos:end="19:66"><literal type="string" pos:start="19:25" pos:end="19:66">"VSCSI: Can't find request for tag 0x%x\n"</literal></expr></argument>, <argument pos:start="19:69" pos:end="19:77"><expr pos:start="19:69" pos:end="19:77"><name pos:start="19:69" pos:end="19:77"><name pos:start="19:69" pos:end="19:72">sreq</name><operator pos:start="19:73" pos:end="19:74">-&gt;</operator><name pos:start="19:75" pos:end="19:77">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="49:5"><if pos:start="27:5" pos:end="49:5">if <condition pos:start="27:8" pos:end="27:34">(<expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:14">status</name> <operator pos:start="27:16" pos:end="27:17">==</operator> <name pos:start="27:19" pos:end="27:33">CHECK_CONDITION</name></expr>)</condition> <block pos:start="27:36" pos:end="49:5">{<block_content pos:start="29:9" pos:end="47:80">

        <expr_stmt pos:start="29:9" pos:end="31:63"><expr pos:start="29:9" pos:end="31:62"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:11">req</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:21">senselen</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="31:62"><name pos:start="29:25" pos:end="29:42">scsi_req_get_sense</name><argument_list pos:start="29:43" pos:end="31:62">(<argument pos:start="29:44" pos:end="29:52"><expr pos:start="29:44" pos:end="29:52"><name pos:start="29:44" pos:end="29:52"><name pos:start="29:44" pos:end="29:46">req</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:52">sreq</name></name></expr></argument>, <argument pos:start="29:55" pos:end="29:64"><expr pos:start="29:55" pos:end="29:64"><name pos:start="29:55" pos:end="29:64"><name pos:start="29:55" pos:end="29:57">req</name><operator pos:start="29:58" pos:end="29:59">-&gt;</operator><name pos:start="29:60" pos:end="29:64">sense</name></name></expr></argument>,

                                           <argument pos:start="31:44" pos:end="31:61"><expr pos:start="31:44" pos:end="31:61"><sizeof pos:start="31:44" pos:end="31:61">sizeof<argument_list pos:start="31:50" pos:end="31:61">(<argument pos:start="31:51" pos:end="31:60"><expr pos:start="31:51" pos:end="31:60"><name pos:start="31:51" pos:end="31:60"><name pos:start="31:51" pos:end="31:53">req</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:60">sense</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:14">status</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><call pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:15">dprintf</name><argument_list pos:start="35:16" pos:end="35:54">(<argument pos:start="35:17" pos:end="35:48"><expr pos:start="35:17" pos:end="35:48"><literal type="string" pos:start="35:17" pos:end="35:48">"VSCSI: Sense data, %d bytes:\n"</literal></expr></argument>, <argument pos:start="35:51" pos:end="35:53"><expr pos:start="35:51" pos:end="35:53"><name pos:start="35:51" pos:end="35:53">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="41:76"><expr pos:start="37:9" pos:end="41:75"><call pos:start="37:9" pos:end="41:75"><name pos:start="37:9" pos:end="37:15">dprintf</name><argument_list pos:start="37:16" pos:end="41:75">(<argument pos:start="37:17" pos:end="37:73"><expr pos:start="37:17" pos:end="37:73"><literal type="string" pos:start="37:17" pos:end="37:73">"       %02x  %02x  %02x  %02x  %02x  %02x  %02x  %02x\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:29"><expr pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:19">req</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:26">sense</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><literal type="number" pos:start="39:28" pos:end="39:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:32" pos:end="39:44"><expr pos:start="39:32" pos:end="39:44"><name pos:start="39:32" pos:end="39:44"><name pos:start="39:32" pos:end="39:34">req</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:41">sense</name><index pos:start="39:42" pos:end="39:44">[<expr pos:start="39:43" pos:end="39:43"><literal type="number" pos:start="39:43" pos:end="39:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:47" pos:end="39:59"><expr pos:start="39:47" pos:end="39:59"><name pos:start="39:47" pos:end="39:59"><name pos:start="39:47" pos:end="39:49">req</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:56">sense</name><index pos:start="39:57" pos:end="39:59">[<expr pos:start="39:58" pos:end="39:58"><literal type="number" pos:start="39:58" pos:end="39:58">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:62" pos:end="39:74"><expr pos:start="39:62" pos:end="39:74"><name pos:start="39:62" pos:end="39:74"><name pos:start="39:62" pos:end="39:64">req</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:71">sense</name><index pos:start="39:72" pos:end="39:74">[<expr pos:start="39:73" pos:end="39:73"><literal type="number" pos:start="39:73" pos:end="39:73">3</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="41:17" pos:end="41:29"><expr pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:19">req</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:26">sense</name><index pos:start="41:27" pos:end="41:29">[<expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:32" pos:end="41:44"><expr pos:start="41:32" pos:end="41:44"><name pos:start="41:32" pos:end="41:44"><name pos:start="41:32" pos:end="41:34">req</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:41">sense</name><index pos:start="41:42" pos:end="41:44">[<expr pos:start="41:43" pos:end="41:43"><literal type="number" pos:start="41:43" pos:end="41:43">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:47" pos:end="41:59"><expr pos:start="41:47" pos:end="41:59"><name pos:start="41:47" pos:end="41:59"><name pos:start="41:47" pos:end="41:49">req</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:56">sense</name><index pos:start="41:57" pos:end="41:59">[<expr pos:start="41:58" pos:end="41:58"><literal type="number" pos:start="41:58" pos:end="41:58">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:62" pos:end="41:74"><expr pos:start="41:62" pos:end="41:74"><name pos:start="41:62" pos:end="41:74"><name pos:start="41:62" pos:end="41:64">req</name><operator pos:start="41:65" pos:end="41:66">-&gt;</operator><name pos:start="41:67" pos:end="41:71">sense</name><index pos:start="41:72" pos:end="41:74">[<expr pos:start="41:73" pos:end="41:73"><literal type="number" pos:start="41:73" pos:end="41:73">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="47:80"><expr pos:start="43:9" pos:end="47:79"><call pos:start="43:9" pos:end="47:79"><name pos:start="43:9" pos:end="43:15">dprintf</name><argument_list pos:start="43:16" pos:end="47:79">(<argument pos:start="43:17" pos:end="43:73"><expr pos:start="43:17" pos:end="43:73"><literal type="string" pos:start="43:17" pos:end="43:73">"       %02x  %02x  %02x  %02x  %02x  %02x  %02x  %02x\n"</literal></expr></argument>,

                <argument pos:start="45:17" pos:end="45:29"><expr pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:19">req</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">sense</name><index pos:start="45:27" pos:end="45:29">[<expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:32" pos:end="45:44"><expr pos:start="45:32" pos:end="45:44"><name pos:start="45:32" pos:end="45:44"><name pos:start="45:32" pos:end="45:34">req</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:41">sense</name><index pos:start="45:42" pos:end="45:44">[<expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">9</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:47" pos:end="45:60"><expr pos:start="45:47" pos:end="45:60"><name pos:start="45:47" pos:end="45:60"><name pos:start="45:47" pos:end="45:49">req</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:56">sense</name><index pos:start="45:57" pos:end="45:60">[<expr pos:start="45:58" pos:end="45:59"><literal type="number" pos:start="45:58" pos:end="45:59">10</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:63" pos:end="45:76"><expr pos:start="45:63" pos:end="45:76"><name pos:start="45:63" pos:end="45:76"><name pos:start="45:63" pos:end="45:65">req</name><operator pos:start="45:66" pos:end="45:67">-&gt;</operator><name pos:start="45:68" pos:end="45:72">sense</name><index pos:start="45:73" pos:end="45:76">[<expr pos:start="45:74" pos:end="45:75"><literal type="number" pos:start="45:74" pos:end="45:75">11</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">req</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:26">sense</name><index pos:start="47:27" pos:end="47:30">[<expr pos:start="47:28" pos:end="47:29"><literal type="number" pos:start="47:28" pos:end="47:29">12</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:33" pos:end="47:46"><expr pos:start="47:33" pos:end="47:46"><name pos:start="47:33" pos:end="47:46"><name pos:start="47:33" pos:end="47:35">req</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:42">sense</name><index pos:start="47:43" pos:end="47:46">[<expr pos:start="47:44" pos:end="47:45"><literal type="number" pos:start="47:44" pos:end="47:45">13</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:49" pos:end="47:62"><expr pos:start="47:49" pos:end="47:62"><name pos:start="47:49" pos:end="47:62"><name pos:start="47:49" pos:end="47:51">req</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:58">sense</name><index pos:start="47:59" pos:end="47:62">[<expr pos:start="47:60" pos:end="47:61"><literal type="number" pos:start="47:60" pos:end="47:61">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:65" pos:end="47:78"><expr pos:start="47:65" pos:end="47:78"><name pos:start="47:65" pos:end="47:78"><name pos:start="47:65" pos:end="47:67">req</name><operator pos:start="47:68" pos:end="47:69">-&gt;</operator><name pos:start="47:70" pos:end="47:74">sense</name><index pos:start="47:75" pos:end="47:78">[<expr pos:start="47:76" pos:end="47:77"><literal type="number" pos:start="47:76" pos:end="47:77">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:56"><expr pos:start="53:5" pos:end="53:55"><call pos:start="53:5" pos:end="53:55"><name pos:start="53:5" pos:end="53:11">dprintf</name><argument_list pos:start="53:12" pos:end="53:55">(<argument pos:start="53:13" pos:end="53:46"><expr pos:start="53:13" pos:end="53:46"><literal type="string" pos:start="53:13" pos:end="53:46">"VSCSI: Command complete err=%d\n"</literal></expr></argument>, <argument pos:start="53:49" pos:end="53:54"><expr pos:start="53:49" pos:end="53:54"><name pos:start="53:49" pos:end="53:54">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="73:5"><if pos:start="55:5" pos:end="73:5">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:14">status</name> <operator pos:start="55:16" pos:end="55:17">==</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>)</condition> <block pos:start="55:22" pos:end="73:5">{<block_content pos:start="63:9" pos:end="71:9">

        <comment type="block" pos:start="57:9" pos:end="61:11">/* We handle overflows, not underflows for normal commands,

         * but hopefully nobody cares

         */</comment>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:25">(<expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:15">req</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:24">writing</name></name></expr>)</condition> <block pos:start="63:27" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:36">

            <expr_stmt pos:start="65:13" pos:end="65:36"><expr pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:19">res_out</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:35"><name pos:start="65:23" pos:end="65:25">req</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:35">data_len</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:35">

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:18">res_in</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:34"><name pos:start="69:22" pos:end="69:24">req</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:34">data_len</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:52"><expr pos:start="75:5" pos:end="75:51"><call pos:start="75:5" pos:end="75:51"><name pos:start="75:5" pos:end="75:18">vscsi_send_rsp</name><argument_list pos:start="75:19" pos:end="75:51">(<argument pos:start="75:20" pos:end="75:20"><expr pos:start="75:20" pos:end="75:20"><name pos:start="75:20" pos:end="75:20">s</name></expr></argument>, <argument pos:start="75:23" pos:end="75:25"><expr pos:start="75:23" pos:end="75:25"><name pos:start="75:23" pos:end="75:25">req</name></expr></argument>, <argument pos:start="75:28" pos:end="75:33"><expr pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:33">status</name></expr></argument>, <argument pos:start="75:36" pos:end="75:41"><expr pos:start="75:36" pos:end="75:41"><name pos:start="75:36" pos:end="75:41">res_in</name></expr></argument>, <argument pos:start="75:44" pos:end="75:50"><expr pos:start="75:44" pos:end="75:50"><name pos:start="75:44" pos:end="75:50">res_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:17">vscsi_put_req</name><argument_list pos:start="77:18" pos:end="77:22">(<argument pos:start="77:19" pos:end="77:21"><expr pos:start="77:19" pos:end="77:21"><name pos:start="77:19" pos:end="77:21">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
