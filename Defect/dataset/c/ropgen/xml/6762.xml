<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6762.c" pos:tabs="8"><function pos:start="1:1" pos:end="323:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">dash_init</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="323:1">{<block_content pos:start="5:5" pos:end="321:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DASHContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:17">basename</name><index pos:start="11:18" pos:end="11:23">[<expr pos:start="11:19" pos:end="11:22"><literal type="number" pos:start="11:19" pos:end="11:22">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:27"><if pos:start="15:5" pos:end="17:27">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:9">c</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:27">single_file_name</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:27"><block_content pos:start="17:9" pos:end="17:27">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">single_file</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:28"><if pos:start="19:5" pos:end="21:28">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">single_file</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:23">use_template</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><call pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:14">av_strlcpy</name><argument_list pos:start="25:15" pos:end="25:59">(<argument pos:start="25:16" pos:end="25:25"><expr pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:16">c</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:25">dirname</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:38"><expr pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:38">filename</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:58"><expr pos:start="25:41" pos:end="25:58"><sizeof pos:start="25:41" pos:end="25:58">sizeof<argument_list pos:start="25:47" pos:end="25:58">(<argument pos:start="25:48" pos:end="25:57"><expr pos:start="25:48" pos:end="25:57"><name pos:start="25:48" pos:end="25:57"><name pos:start="25:48" pos:end="25:48">c</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:57">dirname</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:7">ptr</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:34"><name pos:start="27:11" pos:end="27:17">strrchr</name><argument_list pos:start="27:18" pos:end="27:34">(<argument pos:start="27:19" pos:end="27:28"><expr pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:19">c</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:28">dirname</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><literal type="char" pos:start="27:31" pos:end="27:33">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">ptr</name></expr>)</condition> <block pos:start="29:14" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:22">

        <expr_stmt pos:start="31:9" pos:end="31:56"><expr pos:start="31:9" pos:end="31:55"><call pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:18">av_strlcpy</name><argument_list pos:start="31:19" pos:end="31:55">(<argument pos:start="31:20" pos:end="31:27"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:27">basename</name></expr></argument>, <argument pos:start="31:30" pos:end="31:36"><expr pos:start="31:30" pos:end="31:36"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:33">ptr</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:39" pos:end="31:54"><expr pos:start="31:39" pos:end="31:54"><sizeof pos:start="31:39" pos:end="31:54">sizeof<argument_list pos:start="31:45" pos:end="31:54">(<argument pos:start="31:46" pos:end="31:53"><expr pos:start="31:46" pos:end="31:53"><name pos:start="31:46" pos:end="31:53">basename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:11">ptr</name><index pos:start="33:12" pos:end="33:14">[<expr pos:start="33:13" pos:end="33:13"><literal type="number" pos:start="33:13" pos:end="33:13">1</literal></expr>]</index></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="char" pos:start="33:18" pos:end="33:21">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="41:5">else <block pos:start="35:12" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:60">

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:9">c</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">dirname</name><index pos:start="37:19" pos:end="37:21">[<expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>]</index></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="char" pos:start="37:25" pos:end="37:28">'\0'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:60"><expr pos:start="39:9" pos:end="39:59"><call pos:start="39:9" pos:end="39:59"><name pos:start="39:9" pos:end="39:18">av_strlcpy</name><argument_list pos:start="39:19" pos:end="39:59">(<argument pos:start="39:20" pos:end="39:27"><expr pos:start="39:20" pos:end="39:27"><name pos:start="39:20" pos:end="39:27">basename</name></expr></argument>, <argument pos:start="39:30" pos:end="39:40"><expr pos:start="39:30" pos:end="39:40"><name pos:start="39:30" pos:end="39:40"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:40">filename</name></name></expr></argument>, <argument pos:start="39:43" pos:end="39:58"><expr pos:start="39:43" pos:end="39:58"><sizeof pos:start="39:43" pos:end="39:58">sizeof<argument_list pos:start="39:49" pos:end="39:58">(<argument pos:start="39:50" pos:end="39:57"><expr pos:start="39:50" pos:end="39:57"><name pos:start="39:50" pos:end="39:57">basename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:7">ptr</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:32"><name pos:start="45:11" pos:end="45:17">strrchr</name><argument_list pos:start="45:18" pos:end="45:32">(<argument pos:start="45:19" pos:end="45:26"><expr pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:26">basename</name></expr></argument>, <argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><literal type="char" pos:start="45:29" pos:end="45:31">'.'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:20"><if pos:start="47:5" pos:end="49:20">if <condition pos:start="47:8" pos:end="47:12">(<expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">ptr</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:20"><block_content pos:start="49:9" pos:end="49:20">

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:12">ptr</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <literal type="char" pos:start="49:16" pos:end="49:19">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:65"><expr pos:start="53:5" pos:end="53:64"><name pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:5">c</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:14">streams</name></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:64"><name pos:start="53:18" pos:end="53:27">av_mallocz</name><argument_list pos:start="53:28" pos:end="53:64">(<argument pos:start="53:29" pos:end="53:63"><expr pos:start="53:29" pos:end="53:63"><sizeof pos:start="53:29" pos:end="53:47">sizeof<argument_list pos:start="53:35" pos:end="53:47">(<argument pos:start="53:36" pos:end="53:46"><expr pos:start="53:36" pos:end="53:46"><operator pos:start="53:36" pos:end="53:36">*</operator><name pos:start="53:37" pos:end="53:46"><name pos:start="53:37" pos:end="53:37">c</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:46">streams</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="53:49" pos:end="53:49">*</operator> <name pos:start="53:51" pos:end="53:63"><name pos:start="53:51" pos:end="53:51">s</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:63">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:31"><if pos:start="55:5" pos:end="57:31">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:19"><name pos:start="55:10" pos:end="55:10">c</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:19">streams</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:31"><block_content pos:start="57:9" pos:end="57:31">

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="63:19"><if pos:start="61:5" pos:end="63:19">if <condition pos:start="61:8" pos:end="61:45">(<expr pos:start="61:9" pos:end="61:44"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:12">ret</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:39"><name pos:start="61:16" pos:end="61:36">parse_adaptation_sets</name><argument_list pos:start="61:37" pos:end="61:39">(<argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">s</name></expr></argument>)</argument_list></call><operator pos:start="61:40" pos:end="61:40">)</operator> <operator pos:start="61:42" pos:end="61:42">&lt;</operator> <literal type="number" pos:start="61:44" pos:end="61:44">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:19"><block_content pos:start="63:9" pos:end="63:19">

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="67:5" pos:end="309:5">for <control pos:start="67:9" pos:end="67:39">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:34"><expr pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:33"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:33">nb_streams</name></name></expr>;</condition> <incr pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><name pos:start="67:36" pos:end="67:36">i</name><operator pos:start="67:37" pos:end="67:38">++</operator></expr></incr>)</control> <block pos:start="67:41" pos:end="309:5">{<block_content pos:start="69:9" pos:end="307:30">

        <decl_stmt pos:start="69:9" pos:end="69:42"><decl pos:start="69:9" pos:end="69:41"><type pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:20">OutputStream</name> <modifier pos:start="69:22" pos:end="69:22">*</modifier></type><name pos:start="69:23" pos:end="69:24">os</name> <init pos:start="69:26" pos:end="69:41">= <expr pos:start="69:28" pos:end="69:41"><operator pos:start="69:28" pos:end="69:28">&amp;</operator><name pos:start="69:29" pos:end="69:41"><name pos:start="69:29" pos:end="69:29">c</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:38">streams</name><index pos:start="69:39" pos:end="69:41">[<expr pos:start="69:40" pos:end="69:40"><name pos:start="69:40" pos:end="69:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:51"><decl pos:start="71:9" pos:end="71:50"><type pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:21">AdaptationSet</name> <modifier pos:start="71:23" pos:end="71:23">*</modifier></type><name pos:start="71:24" pos:end="71:25">as</name> <init pos:start="71:27" pos:end="71:50">= <expr pos:start="71:29" pos:end="71:50"><operator pos:start="71:29" pos:end="71:29">&amp;</operator><name pos:start="71:30" pos:end="71:50"><name pos:start="71:30" pos:end="71:30">c</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:34">as</name><index pos:start="71:35" pos:end="71:50">[<expr pos:start="71:36" pos:end="71:49"><name pos:start="71:36" pos:end="71:45"><name pos:start="71:36" pos:end="71:37">os</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:45">as_idx</name></name> <operator pos:start="71:47" pos:end="71:47">-</operator> <literal type="number" pos:start="71:49" pos:end="71:49">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:29"><decl pos:start="73:9" pos:end="73:28"><type pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:23">AVFormatContext</name> <modifier pos:start="73:25" pos:end="73:25">*</modifier></type><name pos:start="73:26" pos:end="73:28">ctx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:21"><decl pos:start="75:9" pos:end="75:20"><type pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:16">AVStream</name> <modifier pos:start="75:18" pos:end="75:18">*</modifier></type><name pos:start="75:19" pos:end="75:20">st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:34"><decl pos:start="77:9" pos:end="77:33"><type pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:20">AVDictionary</name> <modifier pos:start="77:22" pos:end="77:22">*</modifier></type><name pos:start="77:23" pos:end="77:26">opts</name> <init pos:start="77:28" pos:end="77:33">= <expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:28"><decl pos:start="79:9" pos:end="79:27"><type pos:start="79:9" pos:end="79:12"><name pos:start="79:9" pos:end="79:12">char</name></type> <name pos:start="79:14" pos:end="79:27"><name pos:start="79:14" pos:end="79:21">filename</name><index pos:start="79:22" pos:end="79:27">[<expr pos:start="79:23" pos:end="79:26"><literal type="number" pos:start="79:23" pos:end="79:26">1024</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:57"><expr pos:start="83:9" pos:end="83:56"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:10">os</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">bit_rate</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:36"><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:33">streams</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">i</name></expr>]</index></name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:56"><name pos:start="83:39" pos:end="83:46">codecpar</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:56">bit_rate</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="103:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:25">(<expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:14">os</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:24">bit_rate</name></name></expr>)</condition> <block pos:start="85:27" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:56">

            <expr_stmt pos:start="87:13" pos:end="89:56"><expr pos:start="87:13" pos:end="89:55"><call pos:start="87:13" pos:end="89:55"><name pos:start="87:13" pos:end="87:20">snprintf</name><argument_list pos:start="87:21" pos:end="89:55">(<argument pos:start="87:22" pos:end="87:38"><expr pos:start="87:22" pos:end="87:38"><name pos:start="87:22" pos:end="87:38"><name pos:start="87:22" pos:end="87:23">os</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:38">bandwidth_str</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:65"><expr pos:start="87:41" pos:end="87:65"><sizeof pos:start="87:41" pos:end="87:65">sizeof<argument_list pos:start="87:47" pos:end="87:65">(<argument pos:start="87:48" pos:end="87:64"><expr pos:start="87:48" pos:end="87:64"><name pos:start="87:48" pos:end="87:64"><name pos:start="87:48" pos:end="87:49">os</name><operator pos:start="87:50" pos:end="87:51">-&gt;</operator><name pos:start="87:52" pos:end="87:64">bandwidth_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="89:22" pos:end="89:40"><expr pos:start="89:22" pos:end="89:40"><literal type="string" pos:start="89:22" pos:end="89:40">" bandwidth=\"%d\""</literal></expr></argument>, <argument pos:start="89:43" pos:end="89:54"><expr pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:44">os</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:54">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="103:9">else <block pos:start="91:16" pos:end="103:9">{<block_content pos:start="93:13" pos:end="101:39">

            <decl_stmt pos:start="93:13" pos:end="95:54"><decl pos:start="93:13" pos:end="95:53"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:21">level</name> <init pos:start="93:23" pos:end="95:53">= <expr pos:start="93:25" pos:end="95:53"><ternary pos:start="93:25" pos:end="95:53"><condition pos:start="93:25" pos:end="93:74"><expr pos:start="93:25" pos:end="93:72"><name pos:start="93:25" pos:end="93:48"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:48">strict_std_compliance</name></name> <operator pos:start="93:50" pos:end="93:51">&gt;=</operator> <name pos:start="93:53" pos:end="93:72">FF_COMPLIANCE_STRICT</name></expr> ?</condition><then pos:start="95:25" pos:end="95:36">

                        <expr pos:start="95:25" pos:end="95:36"><name pos:start="95:25" pos:end="95:36">AV_LOG_ERROR</name></expr> </then><else pos:start="95:38" pos:end="95:53">: <expr pos:start="95:40" pos:end="95:53"><name pos:start="95:40" pos:end="95:53">AV_LOG_WARNING</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:67"><expr pos:start="97:13" pos:end="97:66"><call pos:start="97:13" pos:end="97:66"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="97:66">(<argument pos:start="97:20" pos:end="97:20"><expr pos:start="97:20" pos:end="97:20"><name pos:start="97:20" pos:end="97:20">s</name></expr></argument>, <argument pos:start="97:23" pos:end="97:27"><expr pos:start="97:23" pos:end="97:27"><name pos:start="97:23" pos:end="97:27">level</name></expr></argument>, <argument pos:start="97:30" pos:end="97:62"><expr pos:start="97:30" pos:end="97:62"><literal type="string" pos:start="97:30" pos:end="97:62">"No bit rate set for stream %d\n"</literal></expr></argument>, <argument pos:start="97:65" pos:end="97:65"><expr pos:start="97:65" pos:end="97:65"><name pos:start="97:65" pos:end="97:65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="101:39"><if pos:start="99:13" pos:end="101:39">if <condition pos:start="99:16" pos:end="99:65">(<expr pos:start="99:17" pos:end="99:64"><name pos:start="99:17" pos:end="99:40"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:40">strict_std_compliance</name></name> <operator pos:start="99:42" pos:end="99:43">&gt;=</operator> <name pos:start="99:45" pos:end="99:64">FF_COMPLIANCE_STRICT</name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:39"><block_content pos:start="101:17" pos:end="101:39">

                <return pos:start="101:17" pos:end="101:39">return <expr pos:start="101:24" pos:end="101:38"><call pos:start="101:24" pos:end="101:38"><name pos:start="101:24" pos:end="101:30">AVERROR</name><argument_list pos:start="101:31" pos:end="101:38">(<argument pos:start="101:32" pos:end="101:37"><expr pos:start="101:32" pos:end="101:37"><name pos:start="101:32" pos:end="101:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="line" pos:start="107:9" pos:end="107:68">// copy AdaptationSet language and role from stream metadata</comment>

        <expr_stmt pos:start="109:9" pos:end="109:76"><expr pos:start="109:9" pos:end="109:75"><call pos:start="109:9" pos:end="109:75"><name pos:start="109:9" pos:end="109:23">dict_copy_entry</name><argument_list pos:start="109:24" pos:end="109:75">(<argument pos:start="109:25" pos:end="109:37"><expr pos:start="109:25" pos:end="109:37"><operator pos:start="109:25" pos:end="109:25">&amp;</operator><name pos:start="109:26" pos:end="109:37"><name pos:start="109:26" pos:end="109:27">as</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:37">metadata</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:62"><expr pos:start="109:40" pos:end="109:62"><name pos:start="109:40" pos:end="109:52"><name pos:start="109:40" pos:end="109:40">s</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:49">streams</name><index pos:start="109:50" pos:end="109:52">[<expr pos:start="109:51" pos:end="109:51"><name pos:start="109:51" pos:end="109:51">i</name></expr>]</index></name><operator pos:start="109:53" pos:end="109:54">-&gt;</operator><name pos:start="109:55" pos:end="109:62">metadata</name></expr></argument>, <argument pos:start="109:65" pos:end="109:74"><expr pos:start="109:65" pos:end="109:74"><literal type="string" pos:start="109:65" pos:end="109:74">"language"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:72"><expr pos:start="111:9" pos:end="111:71"><call pos:start="111:9" pos:end="111:71"><name pos:start="111:9" pos:end="111:23">dict_copy_entry</name><argument_list pos:start="111:24" pos:end="111:71">(<argument pos:start="111:25" pos:end="111:37"><expr pos:start="111:25" pos:end="111:37"><operator pos:start="111:25" pos:end="111:25">&amp;</operator><name pos:start="111:26" pos:end="111:37"><name pos:start="111:26" pos:end="111:27">as</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:37">metadata</name></name></expr></argument>, <argument pos:start="111:40" pos:end="111:62"><expr pos:start="111:40" pos:end="111:62"><name pos:start="111:40" pos:end="111:52"><name pos:start="111:40" pos:end="111:40">s</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:49">streams</name><index pos:start="111:50" pos:end="111:52">[<expr pos:start="111:51" pos:end="111:51"><name pos:start="111:51" pos:end="111:51">i</name></expr>]</index></name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:62">metadata</name></expr></argument>, <argument pos:start="111:65" pos:end="111:70"><expr pos:start="111:65" pos:end="111:70"><literal type="string" pos:start="111:65" pos:end="111:70">"role"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:39"><expr pos:start="115:9" pos:end="115:38"><name pos:start="115:9" pos:end="115:11">ctx</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:38"><name pos:start="115:15" pos:end="115:36">avformat_alloc_context</name><argument_list pos:start="115:37" pos:end="115:38">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:35"><if pos:start="117:9" pos:end="119:35">if <condition pos:start="117:12" pos:end="117:17">(<expr pos:start="117:13" pos:end="117:16"><operator pos:start="117:13" pos:end="117:13">!</operator><name pos:start="117:14" pos:end="117:16">ctx</name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:35"><block_content pos:start="119:13" pos:end="119:35">

            <return pos:start="119:13" pos:end="119:35">return <expr pos:start="119:20" pos:end="119:34"><call pos:start="119:20" pos:end="119:34"><name pos:start="119:20" pos:end="119:26">AVERROR</name><argument_list pos:start="119:27" pos:end="119:34">(<argument pos:start="119:28" pos:end="119:33"><expr pos:start="119:28" pos:end="119:33"><name pos:start="119:28" pos:end="119:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="line" pos:start="123:9" pos:end="123:78">// choose muxer based on codec: webm for VP8/9 and opus, mp4 otherwise</comment>

        <comment type="line" pos:start="125:9" pos:end="125:76">// note: os-&gt;format_name is also used as part of the mimetype of the</comment>

        <comment type="line" pos:start="127:9" pos:end="127:57">//       representation, e.g. video/&lt;format_name&gt;</comment>

        <if_stmt pos:start="129:9" pos:end="143:9"><if pos:start="129:9" pos:end="139:9">if <condition pos:start="129:12" pos:end="135:68">(<expr pos:start="129:13" pos:end="135:67"><name pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:22">streams</name><index pos:start="129:23" pos:end="129:25">[<expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">i</name></expr>]</index></name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:45"><name pos:start="129:28" pos:end="129:35">codecpar</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:45">codec_id</name></name> <operator pos:start="129:47" pos:end="129:48">==</operator> <name pos:start="129:50" pos:end="129:64">AV_CODEC_ID_VP8</name> <operator pos:start="129:66" pos:end="129:67">||</operator>

            <name pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:22">streams</name><index pos:start="131:23" pos:end="131:25">[<expr pos:start="131:24" pos:end="131:24"><name pos:start="131:24" pos:end="131:24">i</name></expr>]</index></name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:45"><name pos:start="131:28" pos:end="131:35">codecpar</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:45">codec_id</name></name> <operator pos:start="131:47" pos:end="131:48">==</operator> <name pos:start="131:50" pos:end="131:64">AV_CODEC_ID_VP9</name> <operator pos:start="131:66" pos:end="131:67">||</operator>

            <name pos:start="133:13" pos:end="133:25"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:22">streams</name><index pos:start="133:23" pos:end="133:25">[<expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">i</name></expr>]</index></name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:45"><name pos:start="133:28" pos:end="133:35">codecpar</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:45">codec_id</name></name> <operator pos:start="133:47" pos:end="133:48">==</operator> <name pos:start="133:50" pos:end="133:65">AV_CODEC_ID_OPUS</name> <operator pos:start="133:67" pos:end="133:68">||</operator>

            <name pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:22">streams</name><index pos:start="135:23" pos:end="135:25">[<expr pos:start="135:24" pos:end="135:24"><name pos:start="135:24" pos:end="135:24">i</name></expr>]</index></name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:45"><name pos:start="135:28" pos:end="135:35">codecpar</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:45">codec_id</name></name> <operator pos:start="135:47" pos:end="135:48">==</operator> <name pos:start="135:50" pos:end="135:67">AV_CODEC_ID_VORBIS</name></expr>)</condition> <block pos:start="135:70" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:71">

            <expr_stmt pos:start="137:13" pos:end="137:71"><expr pos:start="137:13" pos:end="137:70"><call pos:start="137:13" pos:end="137:70"><name pos:start="137:13" pos:end="137:20">snprintf</name><argument_list pos:start="137:21" pos:end="137:70">(<argument pos:start="137:22" pos:end="137:36"><expr pos:start="137:22" pos:end="137:36"><name pos:start="137:22" pos:end="137:36"><name pos:start="137:22" pos:end="137:23">os</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:36">format_name</name></name></expr></argument>, <argument pos:start="137:39" pos:end="137:61"><expr pos:start="137:39" pos:end="137:61"><sizeof pos:start="137:39" pos:end="137:61">sizeof<argument_list pos:start="137:45" pos:end="137:61">(<argument pos:start="137:46" pos:end="137:60"><expr pos:start="137:46" pos:end="137:60"><name pos:start="137:46" pos:end="137:60"><name pos:start="137:46" pos:end="137:47">os</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:60">format_name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="137:64" pos:end="137:69"><expr pos:start="137:64" pos:end="137:69"><literal type="string" pos:start="137:64" pos:end="137:69">"webm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="143:9">else <block pos:start="139:16" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:70">

            <expr_stmt pos:start="141:13" pos:end="141:70"><expr pos:start="141:13" pos:end="141:69"><call pos:start="141:13" pos:end="141:69"><name pos:start="141:13" pos:end="141:20">snprintf</name><argument_list pos:start="141:21" pos:end="141:69">(<argument pos:start="141:22" pos:end="141:36"><expr pos:start="141:22" pos:end="141:36"><name pos:start="141:22" pos:end="141:36"><name pos:start="141:22" pos:end="141:23">os</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:36">format_name</name></name></expr></argument>, <argument pos:start="141:39" pos:end="141:61"><expr pos:start="141:39" pos:end="141:61"><sizeof pos:start="141:39" pos:end="141:61">sizeof<argument_list pos:start="141:45" pos:end="141:61">(<argument pos:start="141:46" pos:end="141:60"><expr pos:start="141:46" pos:end="141:60"><name pos:start="141:46" pos:end="141:60"><name pos:start="141:46" pos:end="141:47">os</name><operator pos:start="141:48" pos:end="141:49">-&gt;</operator><name pos:start="141:50" pos:end="141:60">format_name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="141:64" pos:end="141:68"><expr pos:start="141:64" pos:end="141:68"><literal type="string" pos:start="141:64" pos:end="141:68">"mp4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:68"><expr pos:start="145:9" pos:end="145:67"><name pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:11">ctx</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:20">oformat</name></name> <operator pos:start="145:22" pos:end="145:22">=</operator> <call pos:start="145:24" pos:end="145:67"><name pos:start="145:24" pos:end="145:38">av_guess_format</name><argument_list pos:start="145:39" pos:end="145:67">(<argument pos:start="145:40" pos:end="145:54"><expr pos:start="145:40" pos:end="145:54"><name pos:start="145:40" pos:end="145:54"><name pos:start="145:40" pos:end="145:41">os</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:54">format_name</name></name></expr></argument>, <argument pos:start="145:57" pos:end="145:60"><expr pos:start="145:57" pos:end="145:60"><name pos:start="145:57" pos:end="145:60">NULL</name></expr></argument>, <argument pos:start="145:63" pos:end="145:66"><expr pos:start="145:63" pos:end="145:66"><name pos:start="145:63" pos:end="145:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:43"><if pos:start="147:9" pos:end="149:43">if <condition pos:start="147:12" pos:end="147:26">(<expr pos:start="147:13" pos:end="147:25"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:25"><name pos:start="147:14" pos:end="147:16">ctx</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:25">oformat</name></name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:43"><block_content pos:start="149:13" pos:end="149:43">

            <return pos:start="149:13" pos:end="149:43">return <expr pos:start="149:20" pos:end="149:42"><name pos:start="149:20" pos:end="149:42">AVERROR_MUXER_NOT_FOUND</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:22"><expr pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:10">os</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:15">ctx</name></name> <operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:21">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:56"><expr pos:start="153:9" pos:end="153:55"><name pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:11">ctx</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:31">interrupt_callback</name></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <name pos:start="153:35" pos:end="153:55"><name pos:start="153:35" pos:end="153:35">s</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:55">interrupt_callback</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:44"><expr pos:start="155:9" pos:end="155:43"><name pos:start="155:9" pos:end="155:19"><name pos:start="155:9" pos:end="155:11">ctx</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:19">opaque</name></name>             <operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:43"><name pos:start="155:35" pos:end="155:35">s</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:43">opaque</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:46"><expr pos:start="157:9" pos:end="157:45"><name pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:11">ctx</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:21">io_close</name></name>           <operator pos:start="157:33" pos:end="157:33">=</operator> <name pos:start="157:35" pos:end="157:45"><name pos:start="157:35" pos:end="157:35">s</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:45">io_close</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:45"><expr pos:start="159:9" pos:end="159:44"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:11">ctx</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:20">io_open</name></name>            <operator pos:start="159:33" pos:end="159:33">=</operator> <name pos:start="159:35" pos:end="159:44"><name pos:start="159:35" pos:end="159:35">s</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:44">io_open</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="163:9" pos:end="165:35"><if pos:start="163:9" pos:end="165:35">if <condition pos:start="163:12" pos:end="163:51">(<expr pos:start="163:13" pos:end="163:50"><operator pos:start="163:13" pos:end="163:13">!</operator><operator pos:start="163:14" pos:end="163:14">(</operator><name pos:start="163:15" pos:end="163:16">st</name> <operator pos:start="163:18" pos:end="163:18">=</operator> <call pos:start="163:20" pos:end="163:49"><name pos:start="163:20" pos:end="163:38">avformat_new_stream</name><argument_list pos:start="163:39" pos:end="163:49">(<argument pos:start="163:40" pos:end="163:42"><expr pos:start="163:40" pos:end="163:42"><name pos:start="163:40" pos:end="163:42">ctx</name></expr></argument>, <argument pos:start="163:45" pos:end="163:48"><expr pos:start="163:45" pos:end="163:48"><name pos:start="163:45" pos:end="163:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="163:50" pos:end="163:50">)</operator></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:35"><block_content pos:start="165:13" pos:end="165:35">

            <return pos:start="165:13" pos:end="165:35">return <expr pos:start="165:20" pos:end="165:34"><call pos:start="165:20" pos:end="165:34"><name pos:start="165:20" pos:end="165:26">AVERROR</name><argument_list pos:start="165:27" pos:end="165:34">(<argument pos:start="165:28" pos:end="165:33"><expr pos:start="165:28" pos:end="165:33"><name pos:start="165:28" pos:end="165:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:71"><expr pos:start="167:9" pos:end="167:70"><call pos:start="167:9" pos:end="167:70"><name pos:start="167:9" pos:end="167:31">avcodec_parameters_copy</name><argument_list pos:start="167:32" pos:end="167:70">(<argument pos:start="167:33" pos:end="167:44"><expr pos:start="167:33" pos:end="167:44"><name pos:start="167:33" pos:end="167:44"><name pos:start="167:33" pos:end="167:34">st</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:44">codecpar</name></name></expr></argument>, <argument pos:start="167:47" pos:end="167:69"><expr pos:start="167:47" pos:end="167:69"><name pos:start="167:47" pos:end="167:59"><name pos:start="167:47" pos:end="167:47">s</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:56">streams</name><index pos:start="167:57" pos:end="167:59">[<expr pos:start="167:58" pos:end="167:58"><name pos:start="167:58" pos:end="167:58">i</name></expr>]</index></name><operator pos:start="167:60" pos:end="167:61">-&gt;</operator><name pos:start="167:62" pos:end="167:69">codecpar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:69"><expr pos:start="169:9" pos:end="169:68"><name pos:start="169:9" pos:end="169:31"><name pos:start="169:9" pos:end="169:10">st</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:31">sample_aspect_ratio</name></name> <operator pos:start="169:33" pos:end="169:33">=</operator> <name pos:start="169:35" pos:end="169:47"><name pos:start="169:35" pos:end="169:35">s</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:44">streams</name><index pos:start="169:45" pos:end="169:47">[<expr pos:start="169:46" pos:end="169:46"><name pos:start="169:46" pos:end="169:46">i</name></expr>]</index></name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:68">sample_aspect_ratio</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:49"><expr pos:start="171:9" pos:end="171:48"><name pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:10">st</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:21">time_base</name></name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:37"><name pos:start="171:25" pos:end="171:25">s</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:34">streams</name><index pos:start="171:35" pos:end="171:37">[<expr pos:start="171:36" pos:end="171:36"><name pos:start="171:36" pos:end="171:36">i</name></expr>]</index></name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:48">time_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:59"><expr pos:start="173:9" pos:end="173:58"><name pos:start="173:9" pos:end="173:26"><name pos:start="173:9" pos:end="173:10">st</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:26">avg_frame_rate</name></name> <operator pos:start="173:28" pos:end="173:28">=</operator> <name pos:start="173:30" pos:end="173:42"><name pos:start="173:30" pos:end="173:30">s</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:39">streams</name><index pos:start="173:40" pos:end="173:42">[<expr pos:start="173:41" pos:end="173:41"><name pos:start="173:41" pos:end="173:41">i</name></expr>]</index></name><operator pos:start="173:43" pos:end="173:44">-&gt;</operator><name pos:start="173:45" pos:end="173:58">avg_frame_rate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:54"><expr pos:start="175:9" pos:end="175:53"><name pos:start="175:9" pos:end="175:30"><name pos:start="175:9" pos:end="175:11">ctx</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:30">avoid_negative_ts</name></name> <operator pos:start="175:32" pos:end="175:32">=</operator> <name pos:start="175:34" pos:end="175:53"><name pos:start="175:34" pos:end="175:34">s</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:53">avoid_negative_ts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:30"><expr pos:start="177:9" pos:end="177:29"><name pos:start="177:9" pos:end="177:18"><name pos:start="177:9" pos:end="177:11">ctx</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:18">flags</name></name> <operator pos:start="177:20" pos:end="177:20">=</operator> <name pos:start="177:22" pos:end="177:29"><name pos:start="177:22" pos:end="177:22">s</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:29">flags</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="181:9" pos:end="183:23"><if pos:start="181:9" pos:end="183:23">if <condition pos:start="181:12" pos:end="181:52">(<expr pos:start="181:13" pos:end="181:51"><operator pos:start="181:13" pos:end="181:13">(</operator><name pos:start="181:14" pos:end="181:16">ret</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <call pos:start="181:20" pos:end="181:46"><name pos:start="181:20" pos:end="181:36">avio_open_dyn_buf</name><argument_list pos:start="181:37" pos:end="181:46">(<argument pos:start="181:38" pos:end="181:45"><expr pos:start="181:38" pos:end="181:45"><operator pos:start="181:38" pos:end="181:38">&amp;</operator><name pos:start="181:39" pos:end="181:45"><name pos:start="181:39" pos:end="181:41">ctx</name><operator pos:start="181:42" pos:end="181:43">-&gt;</operator><name pos:start="181:44" pos:end="181:45">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="181:47" pos:end="181:47">)</operator> <operator pos:start="181:49" pos:end="181:49">&lt;</operator> <literal type="number" pos:start="181:51" pos:end="181:51">0</literal></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:23"><block_content pos:start="183:13" pos:end="183:23">

            <return pos:start="183:13" pos:end="183:23">return <expr pos:start="183:20" pos:end="183:22"><name pos:start="183:20" pos:end="183:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="187:9" pos:end="201:9"><if pos:start="187:9" pos:end="197:9">if <condition pos:start="187:12" pos:end="187:27">(<expr pos:start="187:13" pos:end="187:26"><name pos:start="187:13" pos:end="187:26"><name pos:start="187:13" pos:end="187:13">c</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:26">single_file</name></name></expr>)</condition> <block pos:start="187:29" pos:end="197:9">{<block_content pos:start="189:13" pos:end="195:93">

            <if_stmt pos:start="189:13" pos:end="195:93"><if pos:start="189:13" pos:end="191:121">if <condition pos:start="189:16" pos:end="189:36">(<expr pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:17">c</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:35">single_file_name</name></name></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:121"><block_content pos:start="191:17" pos:end="191:121">

                <expr_stmt pos:start="191:17" pos:end="191:121"><expr pos:start="191:17" pos:end="191:120"><call pos:start="191:17" pos:end="191:120"><name pos:start="191:17" pos:end="191:40">ff_dash_fill_tmpl_params</name><argument_list pos:start="191:41" pos:end="191:120">(<argument pos:start="191:42" pos:end="191:53"><expr pos:start="191:42" pos:end="191:53"><name pos:start="191:42" pos:end="191:53"><name pos:start="191:42" pos:end="191:43">os</name><operator pos:start="191:44" pos:end="191:45">-&gt;</operator><name pos:start="191:46" pos:end="191:53">initfile</name></name></expr></argument>, <argument pos:start="191:56" pos:end="191:75"><expr pos:start="191:56" pos:end="191:75"><sizeof pos:start="191:56" pos:end="191:75">sizeof<argument_list pos:start="191:62" pos:end="191:75">(<argument pos:start="191:63" pos:end="191:74"><expr pos:start="191:63" pos:end="191:74"><name pos:start="191:63" pos:end="191:74"><name pos:start="191:63" pos:end="191:64">os</name><operator pos:start="191:65" pos:end="191:66">-&gt;</operator><name pos:start="191:67" pos:end="191:74">initfile</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="191:78" pos:end="191:96"><expr pos:start="191:78" pos:end="191:96"><name pos:start="191:78" pos:end="191:96"><name pos:start="191:78" pos:end="191:78">c</name><operator pos:start="191:79" pos:end="191:80">-&gt;</operator><name pos:start="191:81" pos:end="191:96">single_file_name</name></name></expr></argument>, <argument pos:start="191:99" pos:end="191:99"><expr pos:start="191:99" pos:end="191:99"><name pos:start="191:99" pos:end="191:99">i</name></expr></argument>, <argument pos:start="191:102" pos:end="191:102"><expr pos:start="191:102" pos:end="191:102"><literal type="number" pos:start="191:102" pos:end="191:102">0</literal></expr></argument>, <argument pos:start="191:105" pos:end="191:116"><expr pos:start="191:105" pos:end="191:116"><name pos:start="191:105" pos:end="191:116"><name pos:start="191:105" pos:end="191:106">os</name><operator pos:start="191:107" pos:end="191:108">-&gt;</operator><name pos:start="191:109" pos:end="191:116">bit_rate</name></name></expr></argument>, <argument pos:start="191:119" pos:end="191:119"><expr pos:start="191:119" pos:end="191:119"><literal type="number" pos:start="191:119" pos:end="191:119">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="193:13" pos:end="195:93">else<block type="pseudo" pos:start="195:17" pos:end="195:93"><block_content pos:start="195:17" pos:end="195:93">

                <expr_stmt pos:start="195:17" pos:end="195:93"><expr pos:start="195:17" pos:end="195:92"><call pos:start="195:17" pos:end="195:92"><name pos:start="195:17" pos:end="195:24">snprintf</name><argument_list pos:start="195:25" pos:end="195:92">(<argument pos:start="195:26" pos:end="195:37"><expr pos:start="195:26" pos:end="195:37"><name pos:start="195:26" pos:end="195:37"><name pos:start="195:26" pos:end="195:27">os</name><operator pos:start="195:28" pos:end="195:29">-&gt;</operator><name pos:start="195:30" pos:end="195:37">initfile</name></name></expr></argument>, <argument pos:start="195:40" pos:end="195:59"><expr pos:start="195:40" pos:end="195:59"><sizeof pos:start="195:40" pos:end="195:59">sizeof<argument_list pos:start="195:46" pos:end="195:59">(<argument pos:start="195:47" pos:end="195:58"><expr pos:start="195:47" pos:end="195:58"><name pos:start="195:47" pos:end="195:58"><name pos:start="195:47" pos:end="195:48">os</name><operator pos:start="195:49" pos:end="195:50">-&gt;</operator><name pos:start="195:51" pos:end="195:58">initfile</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="195:62" pos:end="195:78"><expr pos:start="195:62" pos:end="195:78"><literal type="string" pos:start="195:62" pos:end="195:78">"%s-stream%d.m4s"</literal></expr></argument>, <argument pos:start="195:81" pos:end="195:88"><expr pos:start="195:81" pos:end="195:88"><name pos:start="195:81" pos:end="195:88">basename</name></expr></argument>, <argument pos:start="195:91" pos:end="195:91"><expr pos:start="195:91" pos:end="195:91"><name pos:start="195:91" pos:end="195:91">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="197:11" pos:end="201:9">else <block pos:start="197:16" pos:end="201:9">{<block_content pos:start="199:13" pos:end="199:114">

            <expr_stmt pos:start="199:13" pos:end="199:114"><expr pos:start="199:13" pos:end="199:113"><call pos:start="199:13" pos:end="199:113"><name pos:start="199:13" pos:end="199:36">ff_dash_fill_tmpl_params</name><argument_list pos:start="199:37" pos:end="199:113">(<argument pos:start="199:38" pos:end="199:49"><expr pos:start="199:38" pos:end="199:49"><name pos:start="199:38" pos:end="199:49"><name pos:start="199:38" pos:end="199:39">os</name><operator pos:start="199:40" pos:end="199:41">-&gt;</operator><name pos:start="199:42" pos:end="199:49">initfile</name></name></expr></argument>, <argument pos:start="199:52" pos:end="199:71"><expr pos:start="199:52" pos:end="199:71"><sizeof pos:start="199:52" pos:end="199:71">sizeof<argument_list pos:start="199:58" pos:end="199:71">(<argument pos:start="199:59" pos:end="199:70"><expr pos:start="199:59" pos:end="199:70"><name pos:start="199:59" pos:end="199:70"><name pos:start="199:59" pos:end="199:60">os</name><operator pos:start="199:61" pos:end="199:62">-&gt;</operator><name pos:start="199:63" pos:end="199:70">initfile</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="199:74" pos:end="199:89"><expr pos:start="199:74" pos:end="199:89"><name pos:start="199:74" pos:end="199:89"><name pos:start="199:74" pos:end="199:74">c</name><operator pos:start="199:75" pos:end="199:76">-&gt;</operator><name pos:start="199:77" pos:end="199:89">init_seg_name</name></name></expr></argument>, <argument pos:start="199:92" pos:end="199:92"><expr pos:start="199:92" pos:end="199:92"><name pos:start="199:92" pos:end="199:92">i</name></expr></argument>, <argument pos:start="199:95" pos:end="199:95"><expr pos:start="199:95" pos:end="199:95"><literal type="number" pos:start="199:95" pos:end="199:95">0</literal></expr></argument>, <argument pos:start="199:98" pos:end="199:109"><expr pos:start="199:98" pos:end="199:109"><name pos:start="199:98" pos:end="199:109"><name pos:start="199:98" pos:end="199:99">os</name><operator pos:start="199:100" pos:end="199:101">-&gt;</operator><name pos:start="199:102" pos:end="199:109">bit_rate</name></name></expr></argument>, <argument pos:start="199:112" pos:end="199:112"><expr pos:start="199:112" pos:end="199:112"><literal type="number" pos:start="199:112" pos:end="199:112">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:79"><expr pos:start="203:9" pos:end="203:78"><call pos:start="203:9" pos:end="203:78"><name pos:start="203:9" pos:end="203:16">snprintf</name><argument_list pos:start="203:17" pos:end="203:78">(<argument pos:start="203:18" pos:end="203:25"><expr pos:start="203:18" pos:end="203:25"><name pos:start="203:18" pos:end="203:25">filename</name></expr></argument>, <argument pos:start="203:28" pos:end="203:43"><expr pos:start="203:28" pos:end="203:43"><sizeof pos:start="203:28" pos:end="203:43">sizeof<argument_list pos:start="203:34" pos:end="203:43">(<argument pos:start="203:35" pos:end="203:42"><expr pos:start="203:35" pos:end="203:42"><name pos:start="203:35" pos:end="203:42">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="203:46" pos:end="203:51"><expr pos:start="203:46" pos:end="203:51"><literal type="string" pos:start="203:46" pos:end="203:51">"%s%s"</literal></expr></argument>, <argument pos:start="203:54" pos:end="203:63"><expr pos:start="203:54" pos:end="203:63"><name pos:start="203:54" pos:end="203:63"><name pos:start="203:54" pos:end="203:54">c</name><operator pos:start="203:55" pos:end="203:56">-&gt;</operator><name pos:start="203:57" pos:end="203:63">dirname</name></name></expr></argument>, <argument pos:start="203:66" pos:end="203:77"><expr pos:start="203:66" pos:end="203:77"><name pos:start="203:66" pos:end="203:77"><name pos:start="203:66" pos:end="203:67">os</name><operator pos:start="203:68" pos:end="203:69">-&gt;</operator><name pos:start="203:70" pos:end="203:77">initfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:71"><expr pos:start="205:9" pos:end="205:70"><name pos:start="205:9" pos:end="205:11">ret</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <call pos:start="205:15" pos:end="205:70"><name pos:start="205:15" pos:end="205:24"><name pos:start="205:15" pos:end="205:15">s</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:24">io_open</name></name><argument_list pos:start="205:25" pos:end="205:70">(<argument pos:start="205:26" pos:end="205:26"><expr pos:start="205:26" pos:end="205:26"><name pos:start="205:26" pos:end="205:26">s</name></expr></argument>, <argument pos:start="205:29" pos:end="205:36"><expr pos:start="205:29" pos:end="205:36"><operator pos:start="205:29" pos:end="205:29">&amp;</operator><name pos:start="205:30" pos:end="205:36"><name pos:start="205:30" pos:end="205:31">os</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:36">out</name></name></expr></argument>, <argument pos:start="205:39" pos:end="205:46"><expr pos:start="205:39" pos:end="205:46"><name pos:start="205:39" pos:end="205:46">filename</name></expr></argument>, <argument pos:start="205:49" pos:end="205:63"><expr pos:start="205:49" pos:end="205:63"><name pos:start="205:49" pos:end="205:63">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="205:66" pos:end="205:69"><expr pos:start="205:66" pos:end="205:69"><name pos:start="205:66" pos:end="205:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="209:23"><if pos:start="207:9" pos:end="209:23">if <condition pos:start="207:12" pos:end="207:20">(<expr pos:start="207:13" pos:end="207:19"><name pos:start="207:13" pos:end="207:15">ret</name> <operator pos:start="207:17" pos:end="207:17">&lt;</operator> <literal type="number" pos:start="207:19" pos:end="207:19">0</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:23"><block_content pos:start="209:13" pos:end="209:23">

            <return pos:start="209:13" pos:end="209:23">return <expr pos:start="209:20" pos:end="209:22"><name pos:start="209:20" pos:end="209:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:31"><expr pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:26"><name pos:start="211:9" pos:end="211:10">os</name><operator pos:start="211:11" pos:end="211:12">-&gt;</operator><name pos:start="211:13" pos:end="211:26">init_start_pos</name></name> <operator pos:start="211:28" pos:end="211:28">=</operator> <literal type="number" pos:start="211:30" pos:end="211:30">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="215:9" pos:end="231:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:44">(<expr pos:start="215:13" pos:end="215:43"><operator pos:start="215:13" pos:end="215:13">!</operator><call pos:start="215:14" pos:end="215:43"><name pos:start="215:14" pos:end="215:19">strcmp</name><argument_list pos:start="215:20" pos:end="215:43">(<argument pos:start="215:21" pos:end="215:35"><expr pos:start="215:21" pos:end="215:35"><name pos:start="215:21" pos:end="215:35"><name pos:start="215:21" pos:end="215:22">os</name><operator pos:start="215:23" pos:end="215:24">-&gt;</operator><name pos:start="215:25" pos:end="215:35">format_name</name></name></expr></argument>, <argument pos:start="215:38" pos:end="215:42"><expr pos:start="215:38" pos:end="215:42"><literal type="string" pos:start="215:38" pos:end="215:42">"mp4"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="215:46" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:77">

            <expr_stmt pos:start="217:13" pos:end="217:77"><expr pos:start="217:13" pos:end="217:76"><call pos:start="217:13" pos:end="217:76"><name pos:start="217:13" pos:end="217:23">av_dict_set</name><argument_list pos:start="217:24" pos:end="217:76">(<argument pos:start="217:25" pos:end="217:29"><expr pos:start="217:25" pos:end="217:29"><operator pos:start="217:25" pos:end="217:25">&amp;</operator><name pos:start="217:26" pos:end="217:29">opts</name></expr></argument>, <argument pos:start="217:32" pos:end="217:41"><expr pos:start="217:32" pos:end="217:41"><literal type="string" pos:start="217:32" pos:end="217:41">"movflags"</literal></expr></argument>, <argument pos:start="217:44" pos:end="217:72"><expr pos:start="217:44" pos:end="217:72"><literal type="string" pos:start="217:44" pos:end="217:72">"frag_custom+dash+delay_moov"</literal></expr></argument>, <argument pos:start="217:75" pos:end="217:75"><expr pos:start="217:75" pos:end="217:75"><literal type="number" pos:start="217:75" pos:end="217:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="219:11" pos:end="231:9">else <block pos:start="219:16" pos:end="231:9">{<block_content pos:start="221:13" pos:end="229:49">

            <expr_stmt pos:start="221:13" pos:end="221:88"><expr pos:start="221:13" pos:end="221:87"><call pos:start="221:13" pos:end="221:87"><name pos:start="221:13" pos:end="221:27">av_dict_set_int</name><argument_list pos:start="221:28" pos:end="221:87">(<argument pos:start="221:29" pos:end="221:33"><expr pos:start="221:29" pos:end="221:33"><operator pos:start="221:29" pos:end="221:29">&amp;</operator><name pos:start="221:30" pos:end="221:33">opts</name></expr></argument>, <argument pos:start="221:36" pos:end="221:55"><expr pos:start="221:36" pos:end="221:55"><literal type="string" pos:start="221:36" pos:end="221:55">"cluster_time_limit"</literal></expr></argument>, <argument pos:start="221:58" pos:end="221:83"><expr pos:start="221:58" pos:end="221:83"><name pos:start="221:58" pos:end="221:76"><name pos:start="221:58" pos:end="221:58">c</name><operator pos:start="221:59" pos:end="221:60">-&gt;</operator><name pos:start="221:61" pos:end="221:76">min_seg_duration</name></name> <operator pos:start="221:78" pos:end="221:78">/</operator> <literal type="number" pos:start="221:80" pos:end="221:83">1000</literal></expr></argument>, <argument pos:start="221:86" pos:end="221:86"><expr pos:start="221:86" pos:end="221:86"><literal type="number" pos:start="221:86" pos:end="221:86">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:77"><expr pos:start="223:13" pos:end="223:76"><call pos:start="223:13" pos:end="223:76"><name pos:start="223:13" pos:end="223:27">av_dict_set_int</name><argument_list pos:start="223:28" pos:end="223:76">(<argument pos:start="223:29" pos:end="223:33"><expr pos:start="223:29" pos:end="223:33"><operator pos:start="223:29" pos:end="223:29">&amp;</operator><name pos:start="223:30" pos:end="223:33">opts</name></expr></argument>, <argument pos:start="223:36" pos:end="223:55"><expr pos:start="223:36" pos:end="223:55"><literal type="string" pos:start="223:36" pos:end="223:55">"cluster_size_limit"</literal></expr></argument>, <argument pos:start="223:58" pos:end="223:72"><expr pos:start="223:58" pos:end="223:72"><literal type="number" pos:start="223:58" pos:end="223:58">5</literal> <operator pos:start="223:60" pos:end="223:60">*</operator> <literal type="number" pos:start="223:62" pos:end="223:65">1024</literal> <operator pos:start="223:67" pos:end="223:67">*</operator> <literal type="number" pos:start="223:69" pos:end="223:72">1024</literal></expr></argument>, <argument pos:start="223:75" pos:end="223:75"><expr pos:start="223:75" pos:end="223:75"><literal type="number" pos:start="223:75" pos:end="223:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="223:79" pos:end="223:111">// set a large cluster size limit</comment>

            <expr_stmt pos:start="225:13" pos:end="225:49"><expr pos:start="225:13" pos:end="225:48"><call pos:start="225:13" pos:end="225:48"><name pos:start="225:13" pos:end="225:27">av_dict_set_int</name><argument_list pos:start="225:28" pos:end="225:48">(<argument pos:start="225:29" pos:end="225:33"><expr pos:start="225:29" pos:end="225:33"><operator pos:start="225:29" pos:end="225:29">&amp;</operator><name pos:start="225:30" pos:end="225:33">opts</name></expr></argument>, <argument pos:start="225:36" pos:end="225:41"><expr pos:start="225:36" pos:end="225:41"><literal type="string" pos:start="225:36" pos:end="225:41">"dash"</literal></expr></argument>, <argument pos:start="225:44" pos:end="225:44"><expr pos:start="225:44" pos:end="225:44"><literal type="number" pos:start="225:44" pos:end="225:44">1</literal></expr></argument>, <argument pos:start="225:47" pos:end="225:47"><expr pos:start="225:47" pos:end="225:47"><literal type="number" pos:start="225:47" pos:end="225:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:66"><expr pos:start="227:13" pos:end="227:65"><call pos:start="227:13" pos:end="227:65"><name pos:start="227:13" pos:end="227:27">av_dict_set_int</name><argument_list pos:start="227:28" pos:end="227:65">(<argument pos:start="227:29" pos:end="227:33"><expr pos:start="227:29" pos:end="227:33"><operator pos:start="227:29" pos:end="227:29">&amp;</operator><name pos:start="227:30" pos:end="227:33">opts</name></expr></argument>, <argument pos:start="227:36" pos:end="227:54"><expr pos:start="227:36" pos:end="227:54"><literal type="string" pos:start="227:36" pos:end="227:54">"dash_track_number"</literal></expr></argument>, <argument pos:start="227:57" pos:end="227:61"><expr pos:start="227:57" pos:end="227:61"><name pos:start="227:57" pos:end="227:57">i</name> <operator pos:start="227:59" pos:end="227:59">+</operator> <literal type="number" pos:start="227:61" pos:end="227:61">1</literal></expr></argument>, <argument pos:start="227:64" pos:end="227:64"><expr pos:start="227:64" pos:end="227:64"><literal type="number" pos:start="227:64" pos:end="227:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:49"><expr pos:start="229:13" pos:end="229:48"><call pos:start="229:13" pos:end="229:48"><name pos:start="229:13" pos:end="229:27">av_dict_set_int</name><argument_list pos:start="229:28" pos:end="229:48">(<argument pos:start="229:29" pos:end="229:33"><expr pos:start="229:29" pos:end="229:33"><operator pos:start="229:29" pos:end="229:29">&amp;</operator><name pos:start="229:30" pos:end="229:33">opts</name></expr></argument>, <argument pos:start="229:36" pos:end="229:41"><expr pos:start="229:36" pos:end="229:41"><literal type="string" pos:start="229:36" pos:end="229:41">"live"</literal></expr></argument>, <argument pos:start="229:44" pos:end="229:44"><expr pos:start="229:44" pos:end="229:44"><literal type="number" pos:start="229:44" pos:end="229:44">1</literal></expr></argument>, <argument pos:start="229:47" pos:end="229:47"><expr pos:start="229:47" pos:end="229:47"><literal type="number" pos:start="229:47" pos:end="229:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="233:9" pos:end="235:23"><if pos:start="233:9" pos:end="235:23">if <condition pos:start="233:12" pos:end="233:57">(<expr pos:start="233:13" pos:end="233:56"><operator pos:start="233:13" pos:end="233:13">(</operator><name pos:start="233:14" pos:end="233:16">ret</name> <operator pos:start="233:18" pos:end="233:18">=</operator> <call pos:start="233:20" pos:end="233:51"><name pos:start="233:20" pos:end="233:39">avformat_init_output</name><argument_list pos:start="233:40" pos:end="233:51">(<argument pos:start="233:41" pos:end="233:43"><expr pos:start="233:41" pos:end="233:43"><name pos:start="233:41" pos:end="233:43">ctx</name></expr></argument>, <argument pos:start="233:46" pos:end="233:50"><expr pos:start="233:46" pos:end="233:50"><operator pos:start="233:46" pos:end="233:46">&amp;</operator><name pos:start="233:47" pos:end="233:50">opts</name></expr></argument>)</argument_list></call><operator pos:start="233:52" pos:end="233:52">)</operator> <operator pos:start="233:54" pos:end="233:54">&lt;</operator> <literal type="number" pos:start="233:56" pos:end="233:56">0</literal></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:23"><block_content pos:start="235:13" pos:end="235:23">

            <return pos:start="235:13" pos:end="235:23">return <expr pos:start="235:20" pos:end="235:22"><name pos:start="235:20" pos:end="235:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:27"><expr pos:start="237:9" pos:end="237:26"><name pos:start="237:9" pos:end="237:22"><name pos:start="237:9" pos:end="237:10">os</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:22">ctx_inited</name></name> <operator pos:start="237:24" pos:end="237:24">=</operator> <literal type="number" pos:start="237:26" pos:end="237:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:28"><expr pos:start="239:9" pos:end="239:27"><call pos:start="239:9" pos:end="239:27"><name pos:start="239:9" pos:end="239:18">avio_flush</name><argument_list pos:start="239:19" pos:end="239:27">(<argument pos:start="239:20" pos:end="239:26"><expr pos:start="239:20" pos:end="239:26"><name pos:start="239:20" pos:end="239:26"><name pos:start="239:20" pos:end="239:22">ctx</name><operator pos:start="239:23" pos:end="239:24">-&gt;</operator><name pos:start="239:25" pos:end="239:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:28"><expr pos:start="241:9" pos:end="241:27"><call pos:start="241:9" pos:end="241:27"><name pos:start="241:9" pos:end="241:20">av_dict_free</name><argument_list pos:start="241:21" pos:end="241:27">(<argument pos:start="241:22" pos:end="241:26"><expr pos:start="241:22" pos:end="241:26"><operator pos:start="241:22" pos:end="241:22">&amp;</operator><name pos:start="241:23" pos:end="241:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:106"><expr pos:start="245:9" pos:end="245:105"><call pos:start="245:9" pos:end="245:105"><name pos:start="245:9" pos:end="245:14">av_log</name><argument_list pos:start="245:15" pos:end="245:105">(<argument pos:start="245:16" pos:end="245:16"><expr pos:start="245:16" pos:end="245:16"><name pos:start="245:16" pos:end="245:16">s</name></expr></argument>, <argument pos:start="245:19" pos:end="245:32"><expr pos:start="245:19" pos:end="245:32"><name pos:start="245:19" pos:end="245:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="245:35" pos:end="245:91"><expr pos:start="245:35" pos:end="245:91"><literal type="string" pos:start="245:35" pos:end="245:91">"Representation %d init segment will be written to: %s\n"</literal></expr></argument>, <argument pos:start="245:94" pos:end="245:94"><expr pos:start="245:94" pos:end="245:94"><name pos:start="245:94" pos:end="245:94">i</name></expr></argument>, <argument pos:start="245:97" pos:end="245:104"><expr pos:start="245:97" pos:end="245:104"><name pos:start="245:97" pos:end="245:104">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="249:9" pos:end="249:29">// Flush init segment</comment>

        <comment type="line" pos:start="251:9" pos:end="251:71">// except for mp4, since delay_moov is set and the init segment</comment>

        <comment type="line" pos:start="253:9" pos:end="253:50">// is then flushed after the first packets</comment>

        <if_stmt pos:start="255:9" pos:end="259:9"><if pos:start="255:9" pos:end="259:9">if <condition pos:start="255:12" pos:end="255:43">(<expr pos:start="255:13" pos:end="255:42"><call pos:start="255:13" pos:end="255:42"><name pos:start="255:13" pos:end="255:18">strcmp</name><argument_list pos:start="255:19" pos:end="255:42">(<argument pos:start="255:20" pos:end="255:34"><expr pos:start="255:20" pos:end="255:34"><name pos:start="255:20" pos:end="255:34"><name pos:start="255:20" pos:end="255:21">os</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:34">format_name</name></name></expr></argument>, <argument pos:start="255:37" pos:end="255:41"><expr pos:start="255:37" pos:end="255:41"><literal type="string" pos:start="255:37" pos:end="255:41">"mp4"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:45" pos:end="259:9">{<block_content pos:start="257:13" pos:end="257:38">

            <expr_stmt pos:start="257:13" pos:end="257:38"><expr pos:start="257:13" pos:end="257:37"><call pos:start="257:13" pos:end="257:37"><name pos:start="257:13" pos:end="257:30">flush_init_segment</name><argument_list pos:start="257:31" pos:end="257:37">(<argument pos:start="257:32" pos:end="257:32"><expr pos:start="257:32" pos:end="257:32"><name pos:start="257:32" pos:end="257:32">s</name></expr></argument>, <argument pos:start="257:35" pos:end="257:36"><expr pos:start="257:35" pos:end="257:36"><name pos:start="257:35" pos:end="257:36">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="263:9" pos:end="263:49"><expr pos:start="263:9" pos:end="263:48"><name pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:9">s</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:18">streams</name><index pos:start="263:19" pos:end="263:21">[<expr pos:start="263:20" pos:end="263:20"><name pos:start="263:20" pos:end="263:20">i</name></expr>]</index></name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:32">time_base</name> <operator pos:start="263:34" pos:end="263:34">=</operator> <name pos:start="263:36" pos:end="263:48"><name pos:start="263:36" pos:end="263:37">st</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:48">time_base</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="265:9" pos:end="265:79">// If the muxer wants to shift timestamps, request to have them shifted</comment>

        <comment type="line" pos:start="267:9" pos:end="267:81">// already before being handed to this muxer, so we don't have mismatches</comment>

        <comment type="line" pos:start="269:9" pos:end="269:51">// between the MPD and the actual segments.</comment>

        <expr_stmt pos:start="271:9" pos:end="271:54"><expr pos:start="271:9" pos:end="271:53"><name pos:start="271:9" pos:end="271:28"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:28">avoid_negative_ts</name></name> <operator pos:start="271:30" pos:end="271:30">=</operator> <name pos:start="271:32" pos:end="271:53"><name pos:start="271:32" pos:end="271:34">ctx</name><operator pos:start="271:35" pos:end="271:36">-&gt;</operator><name pos:start="271:37" pos:end="271:53">avoid_negative_ts</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="273:9" pos:end="295:9"><if pos:start="273:9" pos:end="295:9">if <condition pos:start="273:12" pos:end="273:59">(<expr pos:start="273:13" pos:end="273:58"><name pos:start="273:13" pos:end="273:36"><name pos:start="273:13" pos:end="273:14">st</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:24">codecpar</name><operator pos:start="273:25" pos:end="273:26">-&gt;</operator><name pos:start="273:27" pos:end="273:36">codec_type</name></name> <operator pos:start="273:38" pos:end="273:39">==</operator> <name pos:start="273:41" pos:end="273:58">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="273:61" pos:end="295:9">{<block_content pos:start="275:13" pos:end="293:29">

            <decl_stmt pos:start="275:13" pos:end="275:70"><decl pos:start="275:13" pos:end="275:69"><type pos:start="275:13" pos:end="275:22"><name pos:start="275:13" pos:end="275:22">AVRational</name></type> <name pos:start="275:24" pos:end="275:37">avg_frame_rate</name> <init pos:start="275:39" pos:end="275:69">= <expr pos:start="275:41" pos:end="275:69"><name pos:start="275:41" pos:end="275:53"><name pos:start="275:41" pos:end="275:41">s</name><operator pos:start="275:42" pos:end="275:43">-&gt;</operator><name pos:start="275:44" pos:end="275:50">streams</name><index pos:start="275:51" pos:end="275:53">[<expr pos:start="275:52" pos:end="275:52"><name pos:start="275:52" pos:end="275:52">i</name></expr>]</index></name><operator pos:start="275:54" pos:end="275:55">-&gt;</operator><name pos:start="275:56" pos:end="275:69">avg_frame_rate</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="277:13" pos:end="291:13"><if pos:start="277:13" pos:end="287:13">if <condition pos:start="277:16" pos:end="277:39">(<expr pos:start="277:17" pos:end="277:38"><name pos:start="277:17" pos:end="277:34"><name pos:start="277:17" pos:end="277:30">avg_frame_rate</name><operator pos:start="277:31" pos:end="277:31">.</operator><name pos:start="277:32" pos:end="277:34">num</name></name> <operator pos:start="277:36" pos:end="277:36">&gt;</operator> <literal type="number" pos:start="277:38" pos:end="277:38">0</literal></expr>)</condition> <block pos:start="277:41" pos:end="287:13">{<block_content pos:start="279:17" pos:end="285:56">

                <if_stmt pos:start="279:17" pos:end="281:56"><if pos:start="279:17" pos:end="281:56">if <condition pos:start="279:20" pos:end="279:69">(<expr pos:start="279:21" pos:end="279:68"><call pos:start="279:21" pos:end="279:64"><name pos:start="279:21" pos:end="279:28">av_cmp_q</name><argument_list pos:start="279:29" pos:end="279:64">(<argument pos:start="279:30" pos:end="279:43"><expr pos:start="279:30" pos:end="279:43"><name pos:start="279:30" pos:end="279:43">avg_frame_rate</name></expr></argument>, <argument pos:start="279:46" pos:end="279:63"><expr pos:start="279:46" pos:end="279:63"><name pos:start="279:46" pos:end="279:63"><name pos:start="279:46" pos:end="279:47">as</name><operator pos:start="279:48" pos:end="279:49">-&gt;</operator><name pos:start="279:50" pos:end="279:63">min_frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="279:66" pos:end="279:66">&lt;</operator> <literal type="number" pos:start="279:68" pos:end="279:68">0</literal></expr>)</condition><block type="pseudo" pos:start="281:21" pos:end="281:56"><block_content pos:start="281:21" pos:end="281:56">

                    <expr_stmt pos:start="281:21" pos:end="281:56"><expr pos:start="281:21" pos:end="281:55"><name pos:start="281:21" pos:end="281:38"><name pos:start="281:21" pos:end="281:22">as</name><operator pos:start="281:23" pos:end="281:24">-&gt;</operator><name pos:start="281:25" pos:end="281:38">min_frame_rate</name></name> <operator pos:start="281:40" pos:end="281:40">=</operator> <name pos:start="281:42" pos:end="281:55">avg_frame_rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="283:17" pos:end="285:56"><if pos:start="283:17" pos:end="285:56">if <condition pos:start="283:20" pos:end="283:69">(<expr pos:start="283:21" pos:end="283:68"><call pos:start="283:21" pos:end="283:64"><name pos:start="283:21" pos:end="283:28">av_cmp_q</name><argument_list pos:start="283:29" pos:end="283:64">(<argument pos:start="283:30" pos:end="283:47"><expr pos:start="283:30" pos:end="283:47"><name pos:start="283:30" pos:end="283:47"><name pos:start="283:30" pos:end="283:31">as</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:47">max_frame_rate</name></name></expr></argument>, <argument pos:start="283:50" pos:end="283:63"><expr pos:start="283:50" pos:end="283:63"><name pos:start="283:50" pos:end="283:63">avg_frame_rate</name></expr></argument>)</argument_list></call> <operator pos:start="283:66" pos:end="283:66">&lt;</operator> <literal type="number" pos:start="283:68" pos:end="283:68">0</literal></expr>)</condition><block type="pseudo" pos:start="285:21" pos:end="285:56"><block_content pos:start="285:21" pos:end="285:56">

                    <expr_stmt pos:start="285:21" pos:end="285:56"><expr pos:start="285:21" pos:end="285:55"><name pos:start="285:21" pos:end="285:38"><name pos:start="285:21" pos:end="285:22">as</name><operator pos:start="285:23" pos:end="285:24">-&gt;</operator><name pos:start="285:25" pos:end="285:38">max_frame_rate</name></name> <operator pos:start="285:40" pos:end="285:40">=</operator> <name pos:start="285:42" pos:end="285:55">avg_frame_rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="287:15" pos:end="291:13">else <block pos:start="287:20" pos:end="291:13">{<block_content pos:start="289:17" pos:end="289:45">

                <expr_stmt pos:start="289:17" pos:end="289:45"><expr pos:start="289:17" pos:end="289:44"><name pos:start="289:17" pos:end="289:40"><name pos:start="289:17" pos:end="289:18">as</name><operator pos:start="289:19" pos:end="289:20">-&gt;</operator><name pos:start="289:21" pos:end="289:40">ambiguous_frame_rate</name></name> <operator pos:start="289:42" pos:end="289:42">=</operator> <literal type="number" pos:start="289:44" pos:end="289:44">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:29"><expr pos:start="293:13" pos:end="293:28"><name pos:start="293:13" pos:end="293:24"><name pos:start="293:13" pos:end="293:13">c</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:24">has_video</name></name> <operator pos:start="293:26" pos:end="293:26">=</operator> <literal type="number" pos:start="293:28" pos:end="293:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="299:9" pos:end="299:77"><expr pos:start="299:9" pos:end="299:76"><call pos:start="299:9" pos:end="299:76"><name pos:start="299:9" pos:end="299:21">set_codec_str</name><argument_list pos:start="299:22" pos:end="299:76">(<argument pos:start="299:23" pos:end="299:23"><expr pos:start="299:23" pos:end="299:23"><name pos:start="299:23" pos:end="299:23">s</name></expr></argument>, <argument pos:start="299:26" pos:end="299:37"><expr pos:start="299:26" pos:end="299:37"><name pos:start="299:26" pos:end="299:37"><name pos:start="299:26" pos:end="299:27">st</name><operator pos:start="299:28" pos:end="299:29">-&gt;</operator><name pos:start="299:30" pos:end="299:37">codecpar</name></name></expr></argument>, <argument pos:start="299:40" pos:end="299:52"><expr pos:start="299:40" pos:end="299:52"><name pos:start="299:40" pos:end="299:52"><name pos:start="299:40" pos:end="299:41">os</name><operator pos:start="299:42" pos:end="299:43">-&gt;</operator><name pos:start="299:44" pos:end="299:52">codec_str</name></name></expr></argument>, <argument pos:start="299:55" pos:end="299:75"><expr pos:start="299:55" pos:end="299:75"><sizeof pos:start="299:55" pos:end="299:75">sizeof<argument_list pos:start="299:61" pos:end="299:75">(<argument pos:start="299:62" pos:end="299:74"><expr pos:start="299:62" pos:end="299:74"><name pos:start="299:62" pos:end="299:74"><name pos:start="299:62" pos:end="299:63">os</name><operator pos:start="299:64" pos:end="299:65">-&gt;</operator><name pos:start="299:66" pos:end="299:74">codec_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:39"><expr pos:start="301:9" pos:end="301:38"><name pos:start="301:9" pos:end="301:21"><name pos:start="301:9" pos:end="301:10">os</name><operator pos:start="301:11" pos:end="301:12">-&gt;</operator><name pos:start="301:13" pos:end="301:21">first_pts</name></name> <operator pos:start="301:23" pos:end="301:23">=</operator> <name pos:start="301:25" pos:end="301:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:37"><expr pos:start="303:9" pos:end="303:36"><name pos:start="303:9" pos:end="303:19"><name pos:start="303:9" pos:end="303:10">os</name><operator pos:start="303:11" pos:end="303:12">-&gt;</operator><name pos:start="303:13" pos:end="303:19">max_pts</name></name> <operator pos:start="303:21" pos:end="303:21">=</operator> <name pos:start="303:23" pos:end="303:36">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:38"><expr pos:start="305:9" pos:end="305:37"><name pos:start="305:9" pos:end="305:20"><name pos:start="305:9" pos:end="305:10">os</name><operator pos:start="305:11" pos:end="305:12">-&gt;</operator><name pos:start="305:13" pos:end="305:20">last_dts</name></name> <operator pos:start="305:22" pos:end="305:22">=</operator> <name pos:start="305:24" pos:end="305:37">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:30"><expr pos:start="307:9" pos:end="307:29"><name pos:start="307:9" pos:end="307:25"><name pos:start="307:9" pos:end="307:10">os</name><operator pos:start="307:11" pos:end="307:12">-&gt;</operator><name pos:start="307:13" pos:end="307:25">segment_index</name></name> <operator pos:start="307:27" pos:end="307:27">=</operator> <literal type="number" pos:start="307:29" pos:end="307:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="313:5" pos:end="319:5"><if pos:start="313:5" pos:end="319:5">if <condition pos:start="313:8" pos:end="313:50">(<expr pos:start="313:9" pos:end="313:49"><operator pos:start="313:9" pos:end="313:9">!</operator><name pos:start="313:10" pos:end="313:21"><name pos:start="313:10" pos:end="313:10">c</name><operator pos:start="313:11" pos:end="313:12">-&gt;</operator><name pos:start="313:13" pos:end="313:21">has_video</name></name> <operator pos:start="313:23" pos:end="313:24">&amp;&amp;</operator> <name pos:start="313:26" pos:end="313:44"><name pos:start="313:26" pos:end="313:26">c</name><operator pos:start="313:27" pos:end="313:28">-&gt;</operator><name pos:start="313:29" pos:end="313:44">min_seg_duration</name></name> <operator pos:start="313:46" pos:end="313:47">&lt;=</operator> <literal type="number" pos:start="313:49" pos:end="313:49">0</literal></expr>)</condition> <block pos:start="313:52" pos:end="319:5">{<block_content pos:start="315:9" pos:end="317:31">

        <expr_stmt pos:start="315:9" pos:end="315:83"><expr pos:start="315:9" pos:end="315:82"><call pos:start="315:9" pos:end="315:82"><name pos:start="315:9" pos:end="315:14">av_log</name><argument_list pos:start="315:15" pos:end="315:82">(<argument pos:start="315:16" pos:end="315:16"><expr pos:start="315:16" pos:end="315:16"><name pos:start="315:16" pos:end="315:16">s</name></expr></argument>, <argument pos:start="315:19" pos:end="315:32"><expr pos:start="315:19" pos:end="315:32"><name pos:start="315:19" pos:end="315:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="315:35" pos:end="315:81"><expr pos:start="315:35" pos:end="315:81"><literal type="string" pos:start="315:35" pos:end="315:81">"no video stream and no min seg duration set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="317:9" pos:end="317:31">return <expr pos:start="317:16" pos:end="317:30"><call pos:start="317:16" pos:end="317:30"><name pos:start="317:16" pos:end="317:22">AVERROR</name><argument_list pos:start="317:23" pos:end="317:30">(<argument pos:start="317:24" pos:end="317:29"><expr pos:start="317:24" pos:end="317:29"><name pos:start="317:24" pos:end="317:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="321:5" pos:end="321:13">return <expr pos:start="321:12" pos:end="321:12"><literal type="number" pos:start="321:12" pos:end="321:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
