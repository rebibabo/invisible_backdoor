<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7126.c" pos:tabs="8"><function pos:start="1:1" pos:end="409:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_gop_header</name><parameter_list pos:start="1:29" pos:end="1:72">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:43">IVI5DecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:71"><decl pos:start="1:51" pos:end="1:71"><type pos:start="1:51" pos:end="1:71"><name pos:start="1:51" pos:end="1:64">AVCodecContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="409:1">{<block_content pos:start="5:5" pos:end="407:13">

    <decl_stmt pos:start="5:5" pos:end="5:78"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type>             <name pos:start="5:21" pos:end="5:26">result</name></decl>, <decl pos:start="5:29" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:29">i</name></decl>, <decl pos:start="5:32" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:32">p</name></decl>, <decl pos:start="5:35" pos:end="5:43"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:35" pos:end="5:43">tile_size</name></decl>, <decl pos:start="5:46" pos:end="5:58"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:46" pos:end="5:58">pic_size_indx</name></decl>, <decl pos:start="5:61" pos:end="5:67"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:61" pos:end="5:67">mb_size</name></decl>, <decl pos:start="5:70" pos:end="5:77"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:70" pos:end="5:77">blk_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>             <name pos:start="7:21" pos:end="7:29">quant_mat</name></decl>, <decl pos:start="7:32" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:47">blk_size_changed</name> <init pos:start="7:49" pos:end="7:51">= <expr pos:start="7:51" pos:end="7:51"><literal type="number" pos:start="7:51" pos:end="7:51">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:15">IVIBandDesc</name>     <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:25">band</name></decl>, <decl pos:start="9:28" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:33">band1</name></decl>, <decl pos:start="9:36" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:41">band2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">IVIPicConfig</name></type>    <name pos:start="11:21" pos:end="11:28">pic_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:18">gop_flags</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <call pos:start="15:22" pos:end="15:42"><name pos:start="15:22" pos:end="15:29">get_bits</name><argument_list pos:start="15:30" pos:end="15:42">(<argument pos:start="15:31" pos:end="15:38"><expr pos:start="15:31" pos:end="15:38"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:34">ctx</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:38">gb</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:74"><expr pos:start="19:5" pos:end="19:73"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">ctx</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:21">gop_hdr_size</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <ternary pos:start="19:25" pos:end="19:73"><condition pos:start="19:25" pos:end="19:46"><expr pos:start="19:25" pos:end="19:44"><operator pos:start="19:25" pos:end="19:25">(</operator><name pos:start="19:26" pos:end="19:39"><name pos:start="19:26" pos:end="19:28">ctx</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:39">gop_flags</name></name> <operator pos:start="19:41" pos:end="19:41">&amp;</operator> <literal type="number" pos:start="19:43" pos:end="19:43">1</literal><operator pos:start="19:44" pos:end="19:44">)</operator></expr> ?</condition><then pos:start="19:48" pos:end="19:69"> <expr pos:start="19:48" pos:end="19:69"><call pos:start="19:48" pos:end="19:69"><name pos:start="19:48" pos:end="19:55">get_bits</name><argument_list pos:start="19:56" pos:end="19:69">(<argument pos:start="19:57" pos:end="19:64"><expr pos:start="19:57" pos:end="19:64"><operator pos:start="19:57" pos:end="19:57">&amp;</operator><name pos:start="19:58" pos:end="19:64"><name pos:start="19:58" pos:end="19:60">ctx</name><operator pos:start="19:61" pos:end="19:62">-&gt;</operator><name pos:start="19:63" pos:end="19:64">gb</name></name></expr></argument>, <argument pos:start="19:67" pos:end="19:68"><expr pos:start="19:67" pos:end="19:68"><literal type="number" pos:start="19:67" pos:end="19:68">16</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="19:71" pos:end="19:73">: <expr pos:start="19:73" pos:end="19:73"><literal type="number" pos:start="19:73" pos:end="19:73">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:53"><if pos:start="23:5" pos:end="25:53">if <condition pos:start="23:8" pos:end="23:43">(<expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">ctx</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">gop_flags</name></name> <operator pos:start="23:24" pos:end="23:24">&amp;</operator> <name pos:start="23:26" pos:end="23:42">IVI5_IS_PROTECTED</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:53"><block_content pos:start="25:9" pos:end="25:53">

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">ctx</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:22">lock_word</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:52"><name pos:start="25:26" pos:end="25:38">get_bits_long</name><argument_list pos:start="25:39" pos:end="25:52">(<argument pos:start="25:40" pos:end="25:47"><expr pos:start="25:40" pos:end="25:47"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:43">ctx</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:47">gb</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:51"><expr pos:start="25:50" pos:end="25:51"><literal type="number" pos:start="25:50" pos:end="25:51">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:74"><expr pos:start="29:5" pos:end="29:73"><name pos:start="29:5" pos:end="29:13">tile_size</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <ternary pos:start="29:17" pos:end="29:73"><condition pos:start="29:17" pos:end="29:41"><expr pos:start="29:17" pos:end="29:39"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:31"><name pos:start="29:18" pos:end="29:20">ctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:31">gop_flags</name></name> <operator pos:start="29:33" pos:end="29:33">&amp;</operator> <literal type="number" pos:start="29:35" pos:end="29:38">0x40</literal><operator pos:start="29:39" pos:end="29:39">)</operator></expr> ?</condition><then pos:start="29:43" pos:end="29:69"> <expr pos:start="29:43" pos:end="29:69"><literal type="number" pos:start="29:43" pos:end="29:44">64</literal> <operator pos:start="29:46" pos:end="29:47">&lt;&lt;</operator> <call pos:start="29:49" pos:end="29:69"><name pos:start="29:49" pos:end="29:56">get_bits</name><argument_list pos:start="29:57" pos:end="29:69">(<argument pos:start="29:58" pos:end="29:65"><expr pos:start="29:58" pos:end="29:65"><operator pos:start="29:58" pos:end="29:58">&amp;</operator><name pos:start="29:59" pos:end="29:65"><name pos:start="29:59" pos:end="29:61">ctx</name><operator pos:start="29:62" pos:end="29:63">-&gt;</operator><name pos:start="29:64" pos:end="29:65">gb</name></name></expr></argument>, <argument pos:start="29:68" pos:end="29:68"><expr pos:start="29:68" pos:end="29:68"><literal type="number" pos:start="29:68" pos:end="29:68">2</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="29:71" pos:end="29:73">: <expr pos:start="29:73" pos:end="29:73"><literal type="number" pos:start="29:73" pos:end="29:73">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:17">tile_size</name> <operator pos:start="31:19" pos:end="31:19">&gt;</operator> <literal type="number" pos:start="31:21" pos:end="31:23">256</literal></expr>)</condition> <block pos:start="31:26" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:74"><expr pos:start="33:9" pos:end="33:73"><call pos:start="33:9" pos:end="33:73"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:73">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:61"><expr pos:start="33:37" pos:end="33:61"><literal type="string" pos:start="33:37" pos:end="33:61">"Invalid tile size: %d\n"</literal></expr></argument>, <argument pos:start="33:64" pos:end="33:72"><expr pos:start="33:64" pos:end="33:72"><name pos:start="33:64" pos:end="33:72">tile_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:40">/* decode number of wavelet bands */</comment>

    <comment type="block" pos:start="43:5" pos:end="43:28">/* num_levels * 3 + 1 */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:12">pic_conf</name><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:23">luma_bands</name></name>   <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:49"><name pos:start="45:29" pos:end="45:36">get_bits</name><argument_list pos:start="45:37" pos:end="45:49">(<argument pos:start="45:38" pos:end="45:45"><expr pos:start="45:38" pos:end="45:45"><operator pos:start="45:38" pos:end="45:38">&amp;</operator><name pos:start="45:39" pos:end="45:45"><name pos:start="45:39" pos:end="45:41">ctx</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:45">gb</name></name></expr></argument>, <argument pos:start="45:48" pos:end="45:48"><expr pos:start="45:48" pos:end="45:48"><literal type="number" pos:start="45:48" pos:end="45:48">2</literal></expr></argument>)</argument_list></call> <operator pos:start="45:51" pos:end="45:51">*</operator> <literal type="number" pos:start="45:53" pos:end="45:55">3</literal> <operator pos:start="45:55" pos:end="45:55">+</operator> <literal type="number" pos:start="45:57" pos:end="45:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:58"><expr pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:12">pic_conf</name><operator pos:start="47:13" pos:end="47:13">.</operator><name pos:start="47:14" pos:end="47:25">chroma_bands</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <call pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:37">get_bits1</name><argument_list pos:start="47:38" pos:end="47:47">(<argument pos:start="47:39" pos:end="47:46"><expr pos:start="47:39" pos:end="47:46"><operator pos:start="47:39" pos:end="47:39">&amp;</operator><name pos:start="47:40" pos:end="47:46"><name pos:start="47:40" pos:end="47:42">ctx</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:46">gb</name></name></expr></argument>)</argument_list></call>   <operator pos:start="47:51" pos:end="47:51">*</operator> <literal type="number" pos:start="47:53" pos:end="47:55">3</literal> <operator pos:start="47:55" pos:end="47:55">+</operator> <literal type="number" pos:start="47:57" pos:end="47:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:78"><expr pos:start="49:5" pos:end="49:77"><name pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:7">ctx</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:20">is_scalable</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:42"><name pos:start="49:24" pos:end="49:31">pic_conf</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:42">luma_bands</name></name> <operator pos:start="49:44" pos:end="49:45">!=</operator> <literal type="number" pos:start="49:47" pos:end="49:47">1</literal> <operator pos:start="49:49" pos:end="49:50">||</operator> <name pos:start="49:52" pos:end="49:72"><name pos:start="49:52" pos:end="49:59">pic_conf</name><operator pos:start="49:60" pos:end="49:60">.</operator><name pos:start="49:61" pos:end="49:72">chroma_bands</name></name> <operator pos:start="49:74" pos:end="49:75">!=</operator> <literal type="number" pos:start="49:77" pos:end="49:77">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:85">(<expr pos:start="51:9" pos:end="51:84"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:11">ctx</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:24">is_scalable</name></name> <operator pos:start="51:26" pos:end="51:27">&amp;&amp;</operator> <operator pos:start="51:29" pos:end="51:29">(</operator><name pos:start="51:30" pos:end="51:48"><name pos:start="51:30" pos:end="51:37">pic_conf</name><operator pos:start="51:38" pos:end="51:38">.</operator><name pos:start="51:39" pos:end="51:48">luma_bands</name></name> <operator pos:start="51:50" pos:end="51:51">!=</operator> <literal type="number" pos:start="51:53" pos:end="51:53">4</literal> <operator pos:start="51:55" pos:end="51:56">||</operator> <name pos:start="51:58" pos:end="51:78"><name pos:start="51:58" pos:end="51:65">pic_conf</name><operator pos:start="51:66" pos:end="51:66">.</operator><name pos:start="51:67" pos:end="51:78">chroma_bands</name></name> <operator pos:start="51:80" pos:end="51:81">!=</operator> <literal type="number" pos:start="51:83" pos:end="51:83">1</literal><operator pos:start="51:84" pos:end="51:84">)</operator></expr>)</condition> <block pos:start="51:87" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:18">

        <expr_stmt pos:start="53:9" pos:end="55:59"><expr pos:start="53:9" pos:end="55:58"><call pos:start="53:9" pos:end="55:58"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:58">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:110"><expr pos:start="53:37" pos:end="53:110"><literal type="string" pos:start="53:37" pos:end="53:110">"Scalability: unsupported subdivision! Luma bands: %d, chroma bands: %d\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:34"><expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:23">pic_conf</name><operator pos:start="55:24" pos:end="55:24">.</operator><name pos:start="55:25" pos:end="55:34">luma_bands</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:57"><expr pos:start="55:37" pos:end="55:57"><name pos:start="55:37" pos:end="55:57"><name pos:start="55:37" pos:end="55:44">pic_conf</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:57">chroma_bands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:17">pic_size_indx</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:41"><name pos:start="63:21" pos:end="63:28">get_bits</name><argument_list pos:start="63:29" pos:end="63:41">(<argument pos:start="63:30" pos:end="63:37"><expr pos:start="63:30" pos:end="63:37"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:37"><name pos:start="63:31" pos:end="63:33">ctx</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:37">gb</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><literal type="number" pos:start="63:40" pos:end="63:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="77:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:43">(<expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:21">pic_size_indx</name> <operator pos:start="65:23" pos:end="65:24">==</operator> <name pos:start="65:26" pos:end="65:42">IVI5_PIC_SIZE_ESC</name></expr>)</condition> <block pos:start="65:45" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:53">

        <expr_stmt pos:start="67:9" pos:end="67:53"><expr pos:start="67:9" pos:end="67:52"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:16">pic_conf</name><operator pos:start="67:17" pos:end="67:17">.</operator><name pos:start="67:18" pos:end="67:27">pic_height</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <call pos:start="67:31" pos:end="67:52"><name pos:start="67:31" pos:end="67:38">get_bits</name><argument_list pos:start="67:39" pos:end="67:52">(<argument pos:start="67:40" pos:end="67:47"><expr pos:start="67:40" pos:end="67:47"><operator pos:start="67:40" pos:end="67:40">&amp;</operator><name pos:start="67:41" pos:end="67:47"><name pos:start="67:41" pos:end="67:43">ctx</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:47">gb</name></name></expr></argument>, <argument pos:start="67:50" pos:end="67:51"><expr pos:start="67:50" pos:end="67:51"><literal type="number" pos:start="67:50" pos:end="67:51">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:53"><expr pos:start="69:9" pos:end="69:52"><name pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:16">pic_conf</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:26">pic_width</name></name>  <operator pos:start="69:29" pos:end="69:29">=</operator> <call pos:start="69:31" pos:end="69:52"><name pos:start="69:31" pos:end="69:38">get_bits</name><argument_list pos:start="69:39" pos:end="69:52">(<argument pos:start="69:40" pos:end="69:47"><expr pos:start="69:40" pos:end="69:47"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:47"><name pos:start="69:41" pos:end="69:43">ctx</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:47">gb</name></name></expr></argument>, <argument pos:start="69:50" pos:end="69:51"><expr pos:start="69:50" pos:end="69:51"><literal type="number" pos:start="69:50" pos:end="69:51">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="77:5">else <block pos:start="71:12" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:80">

        <expr_stmt pos:start="73:9" pos:end="73:80"><expr pos:start="73:9" pos:end="73:79"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:16">pic_conf</name><operator pos:start="73:17" pos:end="73:17">.</operator><name pos:start="73:18" pos:end="73:27">pic_height</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:74"><name pos:start="73:31" pos:end="73:51">ivi5_common_pic_sizes</name><index pos:start="73:52" pos:end="73:74">[<expr pos:start="73:53" pos:end="73:73"><name pos:start="73:53" pos:end="73:65">pic_size_indx</name> <operator pos:start="73:67" pos:end="73:67">*</operator> <literal type="number" pos:start="73:69" pos:end="73:71">2</literal> <operator pos:start="73:71" pos:end="73:71">+</operator> <literal type="number" pos:start="73:73" pos:end="73:73">1</literal></expr>]</index></name> <operator pos:start="73:76" pos:end="73:77">&lt;&lt;</operator> <literal type="number" pos:start="73:79" pos:end="73:79">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:80"><expr pos:start="75:9" pos:end="75:79"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:16">pic_conf</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:26">pic_width</name></name>  <operator pos:start="75:29" pos:end="75:29">=</operator> <name pos:start="75:31" pos:end="75:74"><name pos:start="75:31" pos:end="75:51">ivi5_common_pic_sizes</name><index pos:start="75:52" pos:end="75:74">[<expr pos:start="75:53" pos:end="75:69"><name pos:start="75:53" pos:end="75:65">pic_size_indx</name> <operator pos:start="75:67" pos:end="75:67">*</operator> <literal type="number" pos:start="75:69" pos:end="75:69">2</literal></expr>    ]</index></name> <operator pos:start="75:76" pos:end="75:77">&lt;&lt;</operator> <literal type="number" pos:start="75:79" pos:end="75:79">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:27">(<expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">ctx</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:22">gop_flags</name></name> <operator pos:start="81:24" pos:end="81:24">&amp;</operator> <literal type="number" pos:start="81:26" pos:end="81:26">2</literal></expr>)</condition> <block pos:start="81:29" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:18">

        <expr_stmt pos:start="83:9" pos:end="83:76"><expr pos:start="83:9" pos:end="83:75"><call pos:start="83:9" pos:end="83:75"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:75">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20">avctx</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:37" pos:end="83:74"><expr pos:start="83:37" pos:end="83:74"><literal type="string" pos:start="83:37" pos:end="83:74">"YV12 picture format not supported!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:18">return <expr pos:start="85:16" pos:end="85:17"><operator pos:start="85:16" pos:end="85:16">-</operator><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:60"><expr pos:start="91:5" pos:end="91:59"><name pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:12">pic_conf</name><operator pos:start="91:13" pos:end="91:13">.</operator><name pos:start="91:14" pos:end="91:26">chroma_height</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <operator pos:start="91:30" pos:end="91:30">(</operator><name pos:start="91:31" pos:end="91:49"><name pos:start="91:31" pos:end="91:38">pic_conf</name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:49">pic_height</name></name> <operator pos:start="91:51" pos:end="91:51">+</operator> <literal type="number" pos:start="91:53" pos:end="91:53">3</literal><operator pos:start="91:54" pos:end="91:54">)</operator> <operator pos:start="91:56" pos:end="91:57">&gt;&gt;</operator> <literal type="number" pos:start="91:59" pos:end="91:59">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:60"><expr pos:start="93:5" pos:end="93:59"><name pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:12">pic_conf</name><operator pos:start="93:13" pos:end="93:13">.</operator><name pos:start="93:14" pos:end="93:25">chroma_width</name></name>  <operator pos:start="93:28" pos:end="93:28">=</operator> <operator pos:start="93:30" pos:end="93:30">(</operator><name pos:start="93:31" pos:end="93:48"><name pos:start="93:31" pos:end="93:38">pic_conf</name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:48">pic_width</name></name>  <operator pos:start="93:51" pos:end="93:51">+</operator> <literal type="number" pos:start="93:53" pos:end="93:53">3</literal><operator pos:start="93:54" pos:end="93:54">)</operator> <operator pos:start="93:56" pos:end="93:57">&gt;&gt;</operator> <literal type="number" pos:start="93:59" pos:end="93:59">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="107:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:19">(<expr pos:start="97:9" pos:end="97:18"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:18">tile_size</name></expr>)</condition> <block pos:start="97:21" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:50">

        <expr_stmt pos:start="99:9" pos:end="99:51"><expr pos:start="99:9" pos:end="99:50"><name pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:16">pic_conf</name><operator pos:start="99:17" pos:end="99:17">.</operator><name pos:start="99:18" pos:end="99:28">tile_height</name></name> <operator pos:start="99:30" pos:end="99:30">=</operator> <name pos:start="99:32" pos:end="99:50"><name pos:start="99:32" pos:end="99:39">pic_conf</name><operator pos:start="99:40" pos:end="99:40">.</operator><name pos:start="99:41" pos:end="99:50">pic_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:50"><expr pos:start="101:9" pos:end="101:49"><name pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:16">pic_conf</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:27">tile_width</name></name>  <operator pos:start="101:30" pos:end="101:30">=</operator> <name pos:start="101:32" pos:end="101:49"><name pos:start="101:32" pos:end="101:39">pic_conf</name><operator pos:start="101:40" pos:end="101:40">.</operator><name pos:start="101:41" pos:end="101:49">pic_width</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="107:5">else <block pos:start="103:12" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:63">

        <expr_stmt pos:start="105:9" pos:end="105:63"><expr pos:start="105:9" pos:end="105:62"><name pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:16">pic_conf</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:28">tile_height</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:50"><name pos:start="105:32" pos:end="105:39">pic_conf</name><operator pos:start="105:40" pos:end="105:40">.</operator><name pos:start="105:41" pos:end="105:50">tile_width</name></name> <operator pos:start="105:52" pos:end="105:52">=</operator> <name pos:start="105:54" pos:end="105:62">tile_size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:68">/* check if picture layout was changed and reallocate buffers */</comment>

    <if_stmt pos:start="113:5" pos:end="129:5"><if pos:start="113:5" pos:end="129:5">if <condition pos:start="113:8" pos:end="113:54">(<expr pos:start="113:9" pos:end="113:53"><call pos:start="113:9" pos:end="113:53"><name pos:start="113:9" pos:end="113:26">ivi_pic_config_cmp</name><argument_list pos:start="113:27" pos:end="113:53">(<argument pos:start="113:28" pos:end="113:36"><expr pos:start="113:28" pos:end="113:36"><operator pos:start="113:28" pos:end="113:28">&amp;</operator><name pos:start="113:29" pos:end="113:36">pic_conf</name></expr></argument>, <argument pos:start="113:39" pos:end="113:52"><expr pos:start="113:39" pos:end="113:52"><operator pos:start="113:39" pos:end="113:39">&amp;</operator><name pos:start="113:40" pos:end="113:52"><name pos:start="113:40" pos:end="113:42">ctx</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:52">pic_conf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:56" pos:end="129:5">{<block_content pos:start="115:9" pos:end="127:29">

        <expr_stmt pos:start="115:9" pos:end="115:60"><expr pos:start="115:9" pos:end="115:59"><name pos:start="115:9" pos:end="115:14">result</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <call pos:start="115:18" pos:end="115:59"><name pos:start="115:18" pos:end="115:35">ff_ivi_init_planes</name><argument_list pos:start="115:36" pos:end="115:59">(<argument pos:start="115:37" pos:end="115:47"><expr pos:start="115:37" pos:end="115:47"><name pos:start="115:37" pos:end="115:47"><name pos:start="115:37" pos:end="115:39">ctx</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:47">planes</name></name></expr></argument>, <argument pos:start="115:50" pos:end="115:58"><expr pos:start="115:50" pos:end="115:58"><operator pos:start="115:50" pos:end="115:50">&amp;</operator><name pos:start="115:51" pos:end="115:58">pic_conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:19">(<expr pos:start="117:13" pos:end="117:18"><name pos:start="117:13" pos:end="117:18">result</name></expr>)</condition> <block pos:start="117:21" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:22">

            <expr_stmt pos:start="119:13" pos:end="119:79"><expr pos:start="119:13" pos:end="119:78"><call pos:start="119:13" pos:end="119:78"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="119:78">(<argument pos:start="119:20" pos:end="119:24"><expr pos:start="119:20" pos:end="119:24"><name pos:start="119:20" pos:end="119:24">avctx</name></expr></argument>, <argument pos:start="119:27" pos:end="119:38"><expr pos:start="119:27" pos:end="119:38"><name pos:start="119:27" pos:end="119:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:41" pos:end="119:77"><expr pos:start="119:41" pos:end="119:77"><literal type="string" pos:start="119:41" pos:end="119:77">"Couldn't reallocate color planes!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:22">return <expr pos:start="121:20" pos:end="121:21"><operator pos:start="121:20" pos:end="121:20">-</operator><literal type="number" pos:start="121:21" pos:end="121:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:11">ctx</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:21">pic_conf</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:32">pic_conf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:24">blk_size_changed</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <literal type="number" pos:start="127:28" pos:end="127:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="127:31" pos:end="127:81">/* force reallocation of the internal structures */</comment>

    </block_content>}</block></if></if_stmt>



    <for pos:start="133:5" pos:end="295:5">for <control pos:start="133:9" pos:end="133:28">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">p</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:23"><expr pos:start="133:17" pos:end="133:22"><name pos:start="133:17" pos:end="133:17">p</name> <operator pos:start="133:19" pos:end="133:20">&lt;=</operator> <literal type="number" pos:start="133:22" pos:end="133:22">1</literal></expr>;</condition> <incr pos:start="133:25" pos:end="133:27"><expr pos:start="133:25" pos:end="133:27"><name pos:start="133:25" pos:end="133:25">p</name><operator pos:start="133:26" pos:end="133:27">++</operator></expr></incr>)</control> <block pos:start="133:30" pos:end="295:5">{<block_content pos:start="135:9" pos:end="293:9">

        <for pos:start="135:9" pos:end="293:9">for <control pos:start="135:13" pos:end="135:80">(<init pos:start="135:14" pos:end="135:19"><expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:14">i</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>;</init> <condition pos:start="135:21" pos:end="135:75"><expr pos:start="135:21" pos:end="135:74"><name pos:start="135:21" pos:end="135:21">i</name> <operator pos:start="135:23" pos:end="135:23">&lt;</operator> <operator pos:start="135:25" pos:end="135:25">(</operator><ternary pos:start="135:26" pos:end="135:73"><condition pos:start="135:26" pos:end="135:29"><expr pos:start="135:26" pos:end="135:27"><operator pos:start="135:26" pos:end="135:26">!</operator><name pos:start="135:27" pos:end="135:27">p</name></expr> ?</condition><then pos:start="135:31" pos:end="135:49"> <expr pos:start="135:31" pos:end="135:49"><name pos:start="135:31" pos:end="135:49"><name pos:start="135:31" pos:end="135:38">pic_conf</name><operator pos:start="135:39" pos:end="135:39">.</operator><name pos:start="135:40" pos:end="135:49">luma_bands</name></name></expr> </then><else pos:start="135:51" pos:end="135:73">: <expr pos:start="135:53" pos:end="135:73"><name pos:start="135:53" pos:end="135:73"><name pos:start="135:53" pos:end="135:60">pic_conf</name><operator pos:start="135:61" pos:end="135:61">.</operator><name pos:start="135:62" pos:end="135:73">chroma_bands</name></name></expr></else></ternary><operator pos:start="135:74" pos:end="135:74">)</operator></expr>;</condition> <incr pos:start="135:77" pos:end="135:79"><expr pos:start="135:77" pos:end="135:79"><name pos:start="135:77" pos:end="135:77">i</name><operator pos:start="135:78" pos:end="135:79">++</operator></expr></incr>)</control> <block pos:start="135:82" pos:end="293:9">{<block_content pos:start="137:13" pos:end="291:13">

            <expr_stmt pos:start="137:13" pos:end="137:44"><expr pos:start="137:13" pos:end="137:43"><name pos:start="137:13" pos:end="137:16">band</name> <operator pos:start="137:18" pos:end="137:18">=</operator> <operator pos:start="137:20" pos:end="137:20">&amp;</operator><name pos:start="137:21" pos:end="137:34"><name pos:start="137:21" pos:end="137:23">ctx</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:31">planes</name><index pos:start="137:32" pos:end="137:34">[<expr pos:start="137:33" pos:end="137:33"><name pos:start="137:33" pos:end="137:33">p</name></expr>]</index></name><operator pos:start="137:35" pos:end="137:35">.</operator><name pos:start="137:36" pos:end="137:43"><name pos:start="137:36" pos:end="137:40">bands</name><index pos:start="137:41" pos:end="137:43">[<expr pos:start="137:42" pos:end="137:42"><name pos:start="137:42" pos:end="137:42">i</name></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="141:13" pos:end="141:51"><expr pos:start="141:13" pos:end="141:50"><name pos:start="141:13" pos:end="141:28"><name pos:start="141:13" pos:end="141:16">band</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:28">is_halfpel</name></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <call pos:start="141:32" pos:end="141:50"><name pos:start="141:32" pos:end="141:40">get_bits1</name><argument_list pos:start="141:41" pos:end="141:50">(<argument pos:start="141:42" pos:end="141:49"><expr pos:start="141:42" pos:end="141:49"><operator pos:start="141:42" pos:end="141:42">&amp;</operator><name pos:start="141:43" pos:end="141:49"><name pos:start="141:43" pos:end="141:45">ctx</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:43"><expr pos:start="145:13" pos:end="145:42"><name pos:start="145:13" pos:end="145:19">mb_size</name>  <operator pos:start="145:22" pos:end="145:22">=</operator> <call pos:start="145:24" pos:end="145:42"><name pos:start="145:24" pos:end="145:32">get_bits1</name><argument_list pos:start="145:33" pos:end="145:42">(<argument pos:start="145:34" pos:end="145:41"><expr pos:start="145:34" pos:end="145:41"><operator pos:start="145:34" pos:end="145:34">&amp;</operator><name pos:start="145:35" pos:end="145:41"><name pos:start="145:35" pos:end="145:37">ctx</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:48"><expr pos:start="147:13" pos:end="147:47"><name pos:start="147:13" pos:end="147:20">blk_size</name> <operator pos:start="147:22" pos:end="147:22">=</operator> <literal type="number" pos:start="147:24" pos:end="147:24">8</literal> <operator pos:start="147:26" pos:end="147:27">&gt;&gt;</operator> <call pos:start="147:29" pos:end="147:47"><name pos:start="147:29" pos:end="147:37">get_bits1</name><argument_list pos:start="147:38" pos:end="147:47">(<argument pos:start="147:39" pos:end="147:46"><expr pos:start="147:39" pos:end="147:46"><operator pos:start="147:39" pos:end="147:39">&amp;</operator><name pos:start="147:40" pos:end="147:46"><name pos:start="147:40" pos:end="147:42">ctx</name><operator pos:start="147:43" pos:end="147:44">-&gt;</operator><name pos:start="147:45" pos:end="147:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:44"><expr pos:start="149:13" pos:end="149:43"><name pos:start="149:13" pos:end="149:19">mb_size</name>  <operator pos:start="149:22" pos:end="149:22">=</operator> <name pos:start="149:24" pos:end="149:31">blk_size</name> <operator pos:start="149:33" pos:end="149:34">&lt;&lt;</operator> <operator pos:start="149:36" pos:end="149:36">!</operator><name pos:start="149:37" pos:end="149:43">mb_size</name></expr>;</expr_stmt>



            <expr_stmt pos:start="153:13" pos:end="153:86"><expr pos:start="153:13" pos:end="153:85"><name pos:start="153:13" pos:end="153:28">blk_size_changed</name> <operator pos:start="153:30" pos:end="153:30">=</operator> <name pos:start="153:32" pos:end="153:38">mb_size</name> <operator pos:start="153:40" pos:end="153:41">!=</operator> <name pos:start="153:43" pos:end="153:55"><name pos:start="153:43" pos:end="153:46">band</name><operator pos:start="153:47" pos:end="153:48">-&gt;</operator><name pos:start="153:49" pos:end="153:55">mb_size</name></name> <operator pos:start="153:57" pos:end="153:58">||</operator> <name pos:start="153:60" pos:end="153:67">blk_size</name> <operator pos:start="153:69" pos:end="153:70">!=</operator> <name pos:start="153:72" pos:end="153:85"><name pos:start="153:72" pos:end="153:75">band</name><operator pos:start="153:76" pos:end="153:77">-&gt;</operator><name pos:start="153:78" pos:end="153:85">blk_size</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="161:13"><if pos:start="155:13" pos:end="161:13">if <condition pos:start="155:16" pos:end="155:33">(<expr pos:start="155:17" pos:end="155:32"><name pos:start="155:17" pos:end="155:32">blk_size_changed</name></expr>)</condition> <block pos:start="155:35" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:42">

                <expr_stmt pos:start="157:17" pos:end="157:41"><expr pos:start="157:17" pos:end="157:40"><name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:20">band</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:29">mb_size</name></name>  <operator pos:start="157:32" pos:end="157:32">=</operator> <name pos:start="157:34" pos:end="157:40">mb_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:42"><expr pos:start="159:17" pos:end="159:41"><name pos:start="159:17" pos:end="159:30"><name pos:start="159:17" pos:end="159:20">band</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:30">blk_size</name></name> <operator pos:start="159:32" pos:end="159:32">=</operator> <name pos:start="159:34" pos:end="159:41">blk_size</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="165:13" pos:end="171:13"><if pos:start="165:13" pos:end="171:13">if <condition pos:start="165:16" pos:end="165:36">(<expr pos:start="165:17" pos:end="165:35"><call pos:start="165:17" pos:end="165:35"><name pos:start="165:17" pos:end="165:25">get_bits1</name><argument_list pos:start="165:26" pos:end="165:35">(<argument pos:start="165:27" pos:end="165:34"><expr pos:start="165:27" pos:end="165:34"><operator pos:start="165:27" pos:end="165:27">&amp;</operator><name pos:start="165:28" pos:end="165:34"><name pos:start="165:28" pos:end="165:30">ctx</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:34">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:38" pos:end="171:13">{<block_content pos:start="167:17" pos:end="169:26">

                <expr_stmt pos:start="167:17" pos:end="167:86"><expr pos:start="167:17" pos:end="167:85"><call pos:start="167:17" pos:end="167:85"><name pos:start="167:17" pos:end="167:22">av_log</name><argument_list pos:start="167:23" pos:end="167:85">(<argument pos:start="167:24" pos:end="167:28"><expr pos:start="167:24" pos:end="167:28"><name pos:start="167:24" pos:end="167:28">avctx</name></expr></argument>, <argument pos:start="167:31" pos:end="167:42"><expr pos:start="167:31" pos:end="167:42"><name pos:start="167:31" pos:end="167:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:45" pos:end="167:84"><expr pos:start="167:45" pos:end="167:84"><literal type="string" pos:start="167:45" pos:end="167:84">"Extended transform info encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="169:17" pos:end="169:26">return <expr pos:start="169:24" pos:end="169:25"><operator pos:start="169:24" pos:end="169:24">-</operator><literal type="number" pos:start="169:25" pos:end="169:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="175:13" pos:end="175:95">/* select transform function and scan pattern according to plane and band number */</comment>

            <switch pos:start="177:13" pos:end="237:13">switch <condition pos:start="177:20" pos:end="177:33">(<expr pos:start="177:21" pos:end="177:32"><operator pos:start="177:21" pos:end="177:21">(</operator><name pos:start="177:22" pos:end="177:22">p</name> <operator pos:start="177:24" pos:end="177:25">&lt;&lt;</operator> <literal type="number" pos:start="177:27" pos:end="177:27">2</literal><operator pos:start="177:28" pos:end="177:28">)</operator> <operator pos:start="177:30" pos:end="177:30">+</operator> <name pos:start="177:32" pos:end="177:32">i</name></expr>)</condition> <block pos:start="177:35" pos:end="237:13">{<block_content pos:start="179:13" pos:end="235:22">

            <case pos:start="179:13" pos:end="179:19">case <expr pos:start="179:18" pos:end="179:18"><literal type="number" pos:start="179:18" pos:end="179:18">0</literal></expr>:</case>

                <expr_stmt pos:start="181:17" pos:end="181:63"><expr pos:start="181:17" pos:end="181:62"><name pos:start="181:17" pos:end="181:35"><name pos:start="181:17" pos:end="181:20">band</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:35">inv_transform</name></name> <operator pos:start="181:37" pos:end="181:37">=</operator> <name pos:start="181:39" pos:end="181:62">ff_ivi_inverse_slant_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:57"><expr pos:start="183:17" pos:end="183:56"><name pos:start="183:17" pos:end="183:34"><name pos:start="183:17" pos:end="183:20">band</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:34">dc_transform</name></name>  <operator pos:start="183:37" pos:end="183:37">=</operator> <name pos:start="183:39" pos:end="183:56">ff_ivi_dc_slant_2d</name></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:55"><expr pos:start="185:17" pos:end="185:54"><name pos:start="185:17" pos:end="185:26"><name pos:start="185:17" pos:end="185:20">band</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:26">scan</name></name>          <operator pos:start="185:37" pos:end="185:37">=</operator> <name pos:start="185:39" pos:end="185:54">ff_zigzag_direct</name></expr>;</expr_stmt>

                <break pos:start="187:17" pos:end="187:22">break;</break>



            <case pos:start="191:13" pos:end="191:19">case <expr pos:start="191:18" pos:end="191:18"><literal type="number" pos:start="191:18" pos:end="191:18">1</literal></expr>:</case>

                <expr_stmt pos:start="193:17" pos:end="193:56"><expr pos:start="193:17" pos:end="193:55"><name pos:start="193:17" pos:end="193:35"><name pos:start="193:17" pos:end="193:20">band</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:35">inv_transform</name></name> <operator pos:start="193:37" pos:end="193:37">=</operator> <name pos:start="193:39" pos:end="193:55">ff_ivi_row_slant8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:58"><expr pos:start="195:17" pos:end="195:57"><name pos:start="195:17" pos:end="195:34"><name pos:start="195:17" pos:end="195:20">band</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:34">dc_transform</name></name>  <operator pos:start="195:37" pos:end="195:37">=</operator> <name pos:start="195:39" pos:end="195:57">ff_ivi_dc_row_slant</name></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:63"><expr pos:start="197:17" pos:end="197:62"><name pos:start="197:17" pos:end="197:26"><name pos:start="197:17" pos:end="197:20">band</name><operator pos:start="197:21" pos:end="197:22">-&gt;</operator><name pos:start="197:23" pos:end="197:26">scan</name></name>          <operator pos:start="197:37" pos:end="197:37">=</operator> <name pos:start="197:39" pos:end="197:62">ff_ivi_vertical_scan_8x8</name></expr>;</expr_stmt>

                <break pos:start="199:17" pos:end="199:22">break;</break>



            <case pos:start="203:13" pos:end="203:19">case <expr pos:start="203:18" pos:end="203:18"><literal type="number" pos:start="203:18" pos:end="203:18">2</literal></expr>:</case>

                <expr_stmt pos:start="205:17" pos:end="205:56"><expr pos:start="205:17" pos:end="205:55"><name pos:start="205:17" pos:end="205:35"><name pos:start="205:17" pos:end="205:20">band</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:35">inv_transform</name></name> <operator pos:start="205:37" pos:end="205:37">=</operator> <name pos:start="205:39" pos:end="205:55">ff_ivi_col_slant8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:58"><expr pos:start="207:17" pos:end="207:57"><name pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:20">band</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:34">dc_transform</name></name>  <operator pos:start="207:37" pos:end="207:37">=</operator> <name pos:start="207:39" pos:end="207:57">ff_ivi_dc_col_slant</name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:65"><expr pos:start="209:17" pos:end="209:64"><name pos:start="209:17" pos:end="209:26"><name pos:start="209:17" pos:end="209:20">band</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:26">scan</name></name>          <operator pos:start="209:37" pos:end="209:37">=</operator> <name pos:start="209:39" pos:end="209:64">ff_ivi_horizontal_scan_8x8</name></expr>;</expr_stmt>

                <break pos:start="211:17" pos:end="211:22">break;</break>



            <case pos:start="215:13" pos:end="215:19">case <expr pos:start="215:18" pos:end="215:18"><literal type="number" pos:start="215:18" pos:end="215:18">3</literal></expr>:</case>

                <expr_stmt pos:start="217:17" pos:end="217:60"><expr pos:start="217:17" pos:end="217:59"><name pos:start="217:17" pos:end="217:35"><name pos:start="217:17" pos:end="217:20">band</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:35">inv_transform</name></name> <operator pos:start="217:37" pos:end="217:37">=</operator> <name pos:start="217:39" pos:end="217:59">ff_ivi_put_pixels_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:62"><expr pos:start="219:17" pos:end="219:61"><name pos:start="219:17" pos:end="219:34"><name pos:start="219:17" pos:end="219:20">band</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:34">dc_transform</name></name>  <operator pos:start="219:37" pos:end="219:37">=</operator> <name pos:start="219:39" pos:end="219:61">ff_ivi_put_dc_pixel_8x8</name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:65"><expr pos:start="221:17" pos:end="221:64"><name pos:start="221:17" pos:end="221:26"><name pos:start="221:17" pos:end="221:20">band</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:26">scan</name></name>          <operator pos:start="221:37" pos:end="221:37">=</operator> <name pos:start="221:39" pos:end="221:64">ff_ivi_horizontal_scan_8x8</name></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>



            <case pos:start="227:13" pos:end="227:19">case <expr pos:start="227:18" pos:end="227:18"><literal type="number" pos:start="227:18" pos:end="227:18">4</literal></expr>:</case>

                <expr_stmt pos:start="229:17" pos:end="229:63"><expr pos:start="229:17" pos:end="229:62"><name pos:start="229:17" pos:end="229:35"><name pos:start="229:17" pos:end="229:20">band</name><operator pos:start="229:21" pos:end="229:22">-&gt;</operator><name pos:start="229:23" pos:end="229:35">inv_transform</name></name> <operator pos:start="229:37" pos:end="229:37">=</operator> <name pos:start="229:39" pos:end="229:62">ff_ivi_inverse_slant_4x4</name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:57"><expr pos:start="231:17" pos:end="231:56"><name pos:start="231:17" pos:end="231:34"><name pos:start="231:17" pos:end="231:20">band</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:34">dc_transform</name></name>  <operator pos:start="231:37" pos:end="231:37">=</operator> <name pos:start="231:39" pos:end="231:56">ff_ivi_dc_slant_2d</name></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:61"><expr pos:start="233:17" pos:end="233:60"><name pos:start="233:17" pos:end="233:26"><name pos:start="233:17" pos:end="233:20">band</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:26">scan</name></name>          <operator pos:start="233:37" pos:end="233:37">=</operator> <name pos:start="233:39" pos:end="233:60">ff_ivi_direct_scan_4x4</name></expr>;</expr_stmt>

                <break pos:start="235:17" pos:end="235:22">break;</break>

            </block_content>}</block></switch>



            <expr_stmt pos:start="241:13" pos:end="243:80"><expr pos:start="241:13" pos:end="243:79"><name pos:start="241:13" pos:end="241:29"><name pos:start="241:13" pos:end="241:16">band</name><operator pos:start="241:17" pos:end="241:18">-&gt;</operator><name pos:start="241:19" pos:end="241:29">is_2d_trans</name></name> <operator pos:start="241:31" pos:end="241:31">=</operator> <name pos:start="241:33" pos:end="241:51"><name pos:start="241:33" pos:end="241:36">band</name><operator pos:start="241:37" pos:end="241:38">-&gt;</operator><name pos:start="241:39" pos:end="241:51">inv_transform</name></name> <operator pos:start="241:53" pos:end="241:54">==</operator> <name pos:start="241:56" pos:end="241:79">ff_ivi_inverse_slant_8x8</name> <operator pos:start="241:81" pos:end="241:82">||</operator>

                                <name pos:start="243:33" pos:end="243:51"><name pos:start="243:33" pos:end="243:36">band</name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:51">inv_transform</name></name> <operator pos:start="243:53" pos:end="243:54">==</operator> <name pos:start="243:56" pos:end="243:79">ff_ivi_inverse_slant_4x4</name></expr>;</expr_stmt>



            <comment type="block" pos:start="247:13" pos:end="247:74">/* select dequant matrix according to plane and band number */</comment>

            <if_stmt pos:start="249:13" pos:end="257:13"><if pos:start="249:13" pos:end="253:13">if <condition pos:start="249:16" pos:end="249:19">(<expr pos:start="249:17" pos:end="249:18"><operator pos:start="249:17" pos:end="249:17">!</operator><name pos:start="249:18" pos:end="249:18">p</name></expr>)</condition> <block pos:start="249:21" pos:end="253:13">{<block_content pos:start="251:17" pos:end="251:64">

                <expr_stmt pos:start="251:17" pos:end="251:64"><expr pos:start="251:17" pos:end="251:63"><name pos:start="251:17" pos:end="251:25">quant_mat</name> <operator pos:start="251:27" pos:end="251:27">=</operator> <ternary pos:start="251:29" pos:end="251:63"><condition pos:start="251:29" pos:end="251:55"><expr pos:start="251:29" pos:end="251:53"><operator pos:start="251:29" pos:end="251:29">(</operator><name pos:start="251:30" pos:end="251:48"><name pos:start="251:30" pos:end="251:37">pic_conf</name><operator pos:start="251:38" pos:end="251:38">.</operator><name pos:start="251:39" pos:end="251:48">luma_bands</name></name> <operator pos:start="251:50" pos:end="251:50">&gt;</operator> <literal type="number" pos:start="251:52" pos:end="251:52">1</literal><operator pos:start="251:53" pos:end="251:53">)</operator></expr> ?</condition><then pos:start="251:57" pos:end="251:59"> <expr pos:start="251:57" pos:end="251:59"><name pos:start="251:57" pos:end="251:57">i</name><operator pos:start="251:58" pos:end="251:58">+</operator><literal type="number" pos:start="251:59" pos:end="251:59">1</literal></expr> </then><else pos:start="251:61" pos:end="251:63">: <expr pos:start="251:63" pos:end="251:63"><literal type="number" pos:start="251:63" pos:end="251:63">0</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="253:15" pos:end="257:13">else <block pos:start="253:20" pos:end="257:13">{<block_content pos:start="255:17" pos:end="255:30">

                <expr_stmt pos:start="255:17" pos:end="255:30"><expr pos:start="255:17" pos:end="255:29"><name pos:start="255:17" pos:end="255:25">quant_mat</name> <operator pos:start="255:27" pos:end="255:27">=</operator> <literal type="number" pos:start="255:29" pos:end="255:29">5</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="261:13" pos:end="281:13"><if pos:start="261:13" pos:end="271:13">if <condition pos:start="261:16" pos:end="261:36">(<expr pos:start="261:17" pos:end="261:35"><name pos:start="261:17" pos:end="261:30"><name pos:start="261:17" pos:end="261:20">band</name><operator pos:start="261:21" pos:end="261:22">-&gt;</operator><name pos:start="261:23" pos:end="261:30">blk_size</name></name> <operator pos:start="261:32" pos:end="261:33">==</operator> <literal type="number" pos:start="261:35" pos:end="261:35">8</literal></expr>)</condition> <block pos:start="261:38" pos:end="271:13">{<block_content pos:start="263:17" pos:end="269:78">

                <expr_stmt pos:start="263:17" pos:end="263:77"><expr pos:start="263:17" pos:end="263:76"><name pos:start="263:17" pos:end="263:32"><name pos:start="263:17" pos:end="263:20">band</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:32">intra_base</name></name>  <operator pos:start="263:35" pos:end="263:35">=</operator> <operator pos:start="263:37" pos:end="263:37">&amp;</operator><name pos:start="263:38" pos:end="263:76"><name pos:start="263:38" pos:end="263:62">ivi5_base_quant_8x8_intra</name><index pos:start="263:63" pos:end="263:73">[<expr pos:start="263:64" pos:end="263:72"><name pos:start="263:64" pos:end="263:72">quant_mat</name></expr>]</index><index pos:start="263:74" pos:end="263:76">[<expr pos:start="263:75" pos:end="263:75"><literal type="number" pos:start="263:75" pos:end="263:75">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:77"><expr pos:start="265:17" pos:end="265:76"><name pos:start="265:17" pos:end="265:32"><name pos:start="265:17" pos:end="265:20">band</name><operator pos:start="265:21" pos:end="265:22">-&gt;</operator><name pos:start="265:23" pos:end="265:32">inter_base</name></name>  <operator pos:start="265:35" pos:end="265:35">=</operator> <operator pos:start="265:37" pos:end="265:37">&amp;</operator><name pos:start="265:38" pos:end="265:76"><name pos:start="265:38" pos:end="265:62">ivi5_base_quant_8x8_inter</name><index pos:start="265:63" pos:end="265:73">[<expr pos:start="265:64" pos:end="265:72"><name pos:start="265:64" pos:end="265:72">quant_mat</name></expr>]</index><index pos:start="265:74" pos:end="265:76">[<expr pos:start="265:75" pos:end="265:75"><literal type="number" pos:start="265:75" pos:end="265:75">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:78"><expr pos:start="267:17" pos:end="267:77"><name pos:start="267:17" pos:end="267:33"><name pos:start="267:17" pos:end="267:20">band</name><operator pos:start="267:21" pos:end="267:22">-&gt;</operator><name pos:start="267:23" pos:end="267:33">intra_scale</name></name> <operator pos:start="267:35" pos:end="267:35">=</operator> <operator pos:start="267:37" pos:end="267:37">&amp;</operator><name pos:start="267:38" pos:end="267:77"><name pos:start="267:38" pos:end="267:63">ivi5_scale_quant_8x8_intra</name><index pos:start="267:64" pos:end="267:74">[<expr pos:start="267:65" pos:end="267:73"><name pos:start="267:65" pos:end="267:73">quant_mat</name></expr>]</index><index pos:start="267:75" pos:end="267:77">[<expr pos:start="267:76" pos:end="267:76"><literal type="number" pos:start="267:76" pos:end="267:76">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:78"><expr pos:start="269:17" pos:end="269:77"><name pos:start="269:17" pos:end="269:33"><name pos:start="269:17" pos:end="269:20">band</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:33">inter_scale</name></name> <operator pos:start="269:35" pos:end="269:35">=</operator> <operator pos:start="269:37" pos:end="269:37">&amp;</operator><name pos:start="269:38" pos:end="269:77"><name pos:start="269:38" pos:end="269:63">ivi5_scale_quant_8x8_inter</name><index pos:start="269:64" pos:end="269:74">[<expr pos:start="269:65" pos:end="269:73"><name pos:start="269:65" pos:end="269:73">quant_mat</name></expr>]</index><index pos:start="269:75" pos:end="269:77">[<expr pos:start="269:76" pos:end="269:76"><literal type="number" pos:start="269:76" pos:end="269:76">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="271:15" pos:end="281:13">else <block pos:start="271:20" pos:end="281:13">{<block_content pos:start="273:17" pos:end="279:63">

                <expr_stmt pos:start="273:17" pos:end="273:62"><expr pos:start="273:17" pos:end="273:61"><name pos:start="273:17" pos:end="273:32"><name pos:start="273:17" pos:end="273:20">band</name><operator pos:start="273:21" pos:end="273:22">-&gt;</operator><name pos:start="273:23" pos:end="273:32">intra_base</name></name>  <operator pos:start="273:35" pos:end="273:35">=</operator> <name pos:start="273:37" pos:end="273:61">ivi5_base_quant_4x4_intra</name></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:62"><expr pos:start="275:17" pos:end="275:61"><name pos:start="275:17" pos:end="275:32"><name pos:start="275:17" pos:end="275:20">band</name><operator pos:start="275:21" pos:end="275:22">-&gt;</operator><name pos:start="275:23" pos:end="275:32">inter_base</name></name>  <operator pos:start="275:35" pos:end="275:35">=</operator> <name pos:start="275:37" pos:end="275:61">ivi5_base_quant_4x4_inter</name></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:63"><expr pos:start="277:17" pos:end="277:62"><name pos:start="277:17" pos:end="277:33"><name pos:start="277:17" pos:end="277:20">band</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:33">intra_scale</name></name> <operator pos:start="277:35" pos:end="277:35">=</operator> <name pos:start="277:37" pos:end="277:62">ivi5_scale_quant_4x4_intra</name></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:63"><expr pos:start="279:17" pos:end="279:62"><name pos:start="279:17" pos:end="279:33"><name pos:start="279:17" pos:end="279:20">band</name><operator pos:start="279:21" pos:end="279:22">-&gt;</operator><name pos:start="279:23" pos:end="279:33">inter_scale</name></name> <operator pos:start="279:35" pos:end="279:35">=</operator> <name pos:start="279:37" pos:end="279:62">ivi5_scale_quant_4x4_inter</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="285:13" pos:end="291:13"><if pos:start="285:13" pos:end="291:13">if <condition pos:start="285:16" pos:end="285:38">(<expr pos:start="285:17" pos:end="285:37"><call pos:start="285:17" pos:end="285:37"><name pos:start="285:17" pos:end="285:24">get_bits</name><argument_list pos:start="285:25" pos:end="285:37">(<argument pos:start="285:26" pos:end="285:33"><expr pos:start="285:26" pos:end="285:33"><operator pos:start="285:26" pos:end="285:26">&amp;</operator><name pos:start="285:27" pos:end="285:33"><name pos:start="285:27" pos:end="285:29">ctx</name><operator pos:start="285:30" pos:end="285:31">-&gt;</operator><name pos:start="285:32" pos:end="285:33">gb</name></name></expr></argument>, <argument pos:start="285:36" pos:end="285:36"><expr pos:start="285:36" pos:end="285:36"><literal type="number" pos:start="285:36" pos:end="285:36">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="285:40" pos:end="291:13">{<block_content pos:start="287:17" pos:end="289:26">

                <expr_stmt pos:start="287:17" pos:end="287:69"><expr pos:start="287:17" pos:end="287:68"><call pos:start="287:17" pos:end="287:68"><name pos:start="287:17" pos:end="287:22">av_log</name><argument_list pos:start="287:23" pos:end="287:68">(<argument pos:start="287:24" pos:end="287:28"><expr pos:start="287:24" pos:end="287:28"><name pos:start="287:24" pos:end="287:28">avctx</name></expr></argument>, <argument pos:start="287:31" pos:end="287:42"><expr pos:start="287:31" pos:end="287:42"><name pos:start="287:31" pos:end="287:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:45" pos:end="287:67"><expr pos:start="287:45" pos:end="287:67"><literal type="string" pos:start="287:45" pos:end="287:67">"End marker missing!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="289:17" pos:end="289:26">return <expr pos:start="289:24" pos:end="289:25"><operator pos:start="289:24" pos:end="289:24">-</operator><literal type="number" pos:start="289:25" pos:end="289:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="299:5" pos:end="299:58">/* copy chroma parameters into the 2nd chroma plane */</comment>

    <for pos:start="301:5" pos:end="335:5">for <control pos:start="301:9" pos:end="301:47">(<init pos:start="301:10" pos:end="301:15"><expr pos:start="301:10" pos:end="301:14"><name pos:start="301:10" pos:end="301:10">i</name> <operator pos:start="301:12" pos:end="301:12">=</operator> <literal type="number" pos:start="301:14" pos:end="301:14">0</literal></expr>;</init> <condition pos:start="301:17" pos:end="301:42"><expr pos:start="301:17" pos:end="301:41"><name pos:start="301:17" pos:end="301:17">i</name> <operator pos:start="301:19" pos:end="301:19">&lt;</operator> <name pos:start="301:21" pos:end="301:41"><name pos:start="301:21" pos:end="301:28">pic_conf</name><operator pos:start="301:29" pos:end="301:29">.</operator><name pos:start="301:30" pos:end="301:41">chroma_bands</name></name></expr>;</condition> <incr pos:start="301:44" pos:end="301:46"><expr pos:start="301:44" pos:end="301:46"><name pos:start="301:44" pos:end="301:44">i</name><operator pos:start="301:45" pos:end="301:46">++</operator></expr></incr>)</control> <block pos:start="301:49" pos:end="335:5">{<block_content pos:start="303:9" pos:end="333:50">

        <expr_stmt pos:start="303:9" pos:end="303:41"><expr pos:start="303:9" pos:end="303:40"><name pos:start="303:9" pos:end="303:13">band1</name> <operator pos:start="303:15" pos:end="303:15">=</operator> <operator pos:start="303:17" pos:end="303:17">&amp;</operator><name pos:start="303:18" pos:end="303:31"><name pos:start="303:18" pos:end="303:20">ctx</name><operator pos:start="303:21" pos:end="303:22">-&gt;</operator><name pos:start="303:23" pos:end="303:28">planes</name><index pos:start="303:29" pos:end="303:31">[<expr pos:start="303:30" pos:end="303:30"><literal type="number" pos:start="303:30" pos:end="303:30">1</literal></expr>]</index></name><operator pos:start="303:32" pos:end="303:32">.</operator><name pos:start="303:33" pos:end="303:40"><name pos:start="303:33" pos:end="303:37">bands</name><index pos:start="303:38" pos:end="303:40">[<expr pos:start="303:39" pos:end="303:39"><name pos:start="303:39" pos:end="303:39">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:41"><expr pos:start="305:9" pos:end="305:40"><name pos:start="305:9" pos:end="305:13">band2</name> <operator pos:start="305:15" pos:end="305:15">=</operator> <operator pos:start="305:17" pos:end="305:17">&amp;</operator><name pos:start="305:18" pos:end="305:31"><name pos:start="305:18" pos:end="305:20">ctx</name><operator pos:start="305:21" pos:end="305:22">-&gt;</operator><name pos:start="305:23" pos:end="305:28">planes</name><index pos:start="305:29" pos:end="305:31">[<expr pos:start="305:30" pos:end="305:30"><literal type="number" pos:start="305:30" pos:end="305:30">2</literal></expr>]</index></name><operator pos:start="305:32" pos:end="305:32">.</operator><name pos:start="305:33" pos:end="305:40"><name pos:start="305:33" pos:end="305:37">bands</name><index pos:start="305:38" pos:end="305:40">[<expr pos:start="305:39" pos:end="305:39"><name pos:start="305:39" pos:end="305:39">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="309:9" pos:end="309:44"><expr pos:start="309:9" pos:end="309:43"><name pos:start="309:9" pos:end="309:20"><name pos:start="309:9" pos:end="309:13">band2</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:20">width</name></name>         <operator pos:start="309:30" pos:end="309:30">=</operator> <name pos:start="309:32" pos:end="309:43"><name pos:start="309:32" pos:end="309:36">band1</name><operator pos:start="309:37" pos:end="309:38">-&gt;</operator><name pos:start="309:39" pos:end="309:43">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:45"><expr pos:start="311:9" pos:end="311:44"><name pos:start="311:9" pos:end="311:21"><name pos:start="311:9" pos:end="311:13">band2</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:21">height</name></name>        <operator pos:start="311:30" pos:end="311:30">=</operator> <name pos:start="311:32" pos:end="311:44"><name pos:start="311:32" pos:end="311:36">band1</name><operator pos:start="311:37" pos:end="311:38">-&gt;</operator><name pos:start="311:39" pos:end="311:44">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:46"><expr pos:start="313:9" pos:end="313:45"><name pos:start="313:9" pos:end="313:22"><name pos:start="313:9" pos:end="313:13">band2</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:22">mb_size</name></name>       <operator pos:start="313:30" pos:end="313:30">=</operator> <name pos:start="313:32" pos:end="313:45"><name pos:start="313:32" pos:end="313:36">band1</name><operator pos:start="313:37" pos:end="313:38">-&gt;</operator><name pos:start="313:39" pos:end="313:45">mb_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:47"><expr pos:start="315:9" pos:end="315:46"><name pos:start="315:9" pos:end="315:23"><name pos:start="315:9" pos:end="315:13">band2</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:23">blk_size</name></name>      <operator pos:start="315:30" pos:end="315:30">=</operator> <name pos:start="315:32" pos:end="315:46"><name pos:start="315:32" pos:end="315:36">band1</name><operator pos:start="315:37" pos:end="315:38">-&gt;</operator><name pos:start="315:39" pos:end="315:46">blk_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:49"><expr pos:start="317:9" pos:end="317:48"><name pos:start="317:9" pos:end="317:25"><name pos:start="317:9" pos:end="317:13">band2</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:25">is_halfpel</name></name>    <operator pos:start="317:30" pos:end="317:30">=</operator> <name pos:start="317:32" pos:end="317:48"><name pos:start="317:32" pos:end="317:36">band1</name><operator pos:start="317:37" pos:end="317:38">-&gt;</operator><name pos:start="317:39" pos:end="317:48">is_halfpel</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:49"><expr pos:start="319:9" pos:end="319:48"><name pos:start="319:9" pos:end="319:25"><name pos:start="319:9" pos:end="319:13">band2</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:25">intra_base</name></name>    <operator pos:start="319:30" pos:end="319:30">=</operator> <name pos:start="319:32" pos:end="319:48"><name pos:start="319:32" pos:end="319:36">band1</name><operator pos:start="319:37" pos:end="319:38">-&gt;</operator><name pos:start="319:39" pos:end="319:48">intra_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:49"><expr pos:start="321:9" pos:end="321:48"><name pos:start="321:9" pos:end="321:25"><name pos:start="321:9" pos:end="321:13">band2</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:25">inter_base</name></name>    <operator pos:start="321:30" pos:end="321:30">=</operator> <name pos:start="321:32" pos:end="321:48"><name pos:start="321:32" pos:end="321:36">band1</name><operator pos:start="321:37" pos:end="321:38">-&gt;</operator><name pos:start="321:39" pos:end="321:48">inter_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:50"><expr pos:start="323:9" pos:end="323:49"><name pos:start="323:9" pos:end="323:26"><name pos:start="323:9" pos:end="323:13">band2</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:26">intra_scale</name></name>   <operator pos:start="323:30" pos:end="323:30">=</operator> <name pos:start="323:32" pos:end="323:49"><name pos:start="323:32" pos:end="323:36">band1</name><operator pos:start="323:37" pos:end="323:38">-&gt;</operator><name pos:start="323:39" pos:end="323:49">intra_scale</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:50"><expr pos:start="325:9" pos:end="325:49"><name pos:start="325:9" pos:end="325:26"><name pos:start="325:9" pos:end="325:13">band2</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:26">inter_scale</name></name>   <operator pos:start="325:30" pos:end="325:30">=</operator> <name pos:start="325:32" pos:end="325:49"><name pos:start="325:32" pos:end="325:36">band1</name><operator pos:start="325:37" pos:end="325:38">-&gt;</operator><name pos:start="325:39" pos:end="325:49">inter_scale</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:43"><expr pos:start="327:9" pos:end="327:42"><name pos:start="327:9" pos:end="327:19"><name pos:start="327:9" pos:end="327:13">band2</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:19">scan</name></name>          <operator pos:start="327:30" pos:end="327:30">=</operator> <name pos:start="327:32" pos:end="327:42"><name pos:start="327:32" pos:end="327:36">band1</name><operator pos:start="327:37" pos:end="327:38">-&gt;</operator><name pos:start="327:39" pos:end="327:42">scan</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:52"><expr pos:start="329:9" pos:end="329:51"><name pos:start="329:9" pos:end="329:28"><name pos:start="329:9" pos:end="329:13">band2</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:28">inv_transform</name></name> <operator pos:start="329:30" pos:end="329:30">=</operator> <name pos:start="329:32" pos:end="329:51"><name pos:start="329:32" pos:end="329:36">band1</name><operator pos:start="329:37" pos:end="329:38">-&gt;</operator><name pos:start="329:39" pos:end="329:51">inv_transform</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:51"><expr pos:start="331:9" pos:end="331:50"><name pos:start="331:9" pos:end="331:27"><name pos:start="331:9" pos:end="331:13">band2</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:27">dc_transform</name></name>  <operator pos:start="331:30" pos:end="331:30">=</operator> <name pos:start="331:32" pos:end="331:50"><name pos:start="331:32" pos:end="331:36">band1</name><operator pos:start="331:37" pos:end="331:38">-&gt;</operator><name pos:start="331:39" pos:end="331:50">dc_transform</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:50"><expr pos:start="333:9" pos:end="333:49"><name pos:start="333:9" pos:end="333:26"><name pos:start="333:9" pos:end="333:13">band2</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:26">is_2d_trans</name></name>   <operator pos:start="333:30" pos:end="333:30">=</operator> <name pos:start="333:32" pos:end="333:49"><name pos:start="333:32" pos:end="333:36">band1</name><operator pos:start="333:37" pos:end="333:38">-&gt;</operator><name pos:start="333:39" pos:end="333:49">is_2d_trans</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="339:5" pos:end="339:50">/* reallocate internal structures if needed */</comment>

    <if_stmt pos:start="341:5" pos:end="357:5"><if pos:start="341:5" pos:end="357:5">if <condition pos:start="341:8" pos:end="341:25">(<expr pos:start="341:9" pos:end="341:24"><name pos:start="341:9" pos:end="341:24">blk_size_changed</name></expr>)</condition> <block pos:start="341:27" pos:end="357:5">{<block_content pos:start="343:9" pos:end="355:9">

        <expr_stmt pos:start="343:9" pos:end="345:57"><expr pos:start="343:9" pos:end="345:56"><name pos:start="343:9" pos:end="343:14">result</name> <operator pos:start="343:16" pos:end="343:16">=</operator> <call pos:start="343:18" pos:end="345:56"><name pos:start="343:18" pos:end="343:34">ff_ivi_init_tiles</name><argument_list pos:start="343:35" pos:end="345:56">(<argument pos:start="343:36" pos:end="343:46"><expr pos:start="343:36" pos:end="343:46"><name pos:start="343:36" pos:end="343:46"><name pos:start="343:36" pos:end="343:38">ctx</name><operator pos:start="343:39" pos:end="343:40">-&gt;</operator><name pos:start="343:41" pos:end="343:46">planes</name></name></expr></argument>, <argument pos:start="343:49" pos:end="343:67"><expr pos:start="343:49" pos:end="343:67"><name pos:start="343:49" pos:end="343:67"><name pos:start="343:49" pos:end="343:56">pic_conf</name><operator pos:start="343:57" pos:end="343:57">.</operator><name pos:start="343:58" pos:end="343:67">tile_width</name></name></expr></argument>,

                                   <argument pos:start="345:36" pos:end="345:55"><expr pos:start="345:36" pos:end="345:55"><name pos:start="345:36" pos:end="345:55"><name pos:start="345:36" pos:end="345:43">pic_conf</name><operator pos:start="345:44" pos:end="345:44">.</operator><name pos:start="345:45" pos:end="345:55">tile_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="347:9" pos:end="355:9"><if pos:start="347:9" pos:end="355:9">if <condition pos:start="347:12" pos:end="347:19">(<expr pos:start="347:13" pos:end="347:18"><name pos:start="347:13" pos:end="347:18">result</name></expr>)</condition> <block pos:start="347:21" pos:end="355:9">{<block_content pos:start="349:13" pos:end="353:22">

            <expr_stmt pos:start="349:13" pos:end="351:65"><expr pos:start="349:13" pos:end="351:64"><call pos:start="349:13" pos:end="351:64"><name pos:start="349:13" pos:end="349:18">av_log</name><argument_list pos:start="349:19" pos:end="351:64">(<argument pos:start="349:20" pos:end="349:24"><expr pos:start="349:20" pos:end="349:24"><name pos:start="349:20" pos:end="349:24">avctx</name></expr></argument>, <argument pos:start="349:27" pos:end="349:38"><expr pos:start="349:27" pos:end="349:38"><name pos:start="349:27" pos:end="349:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="351:20" pos:end="351:63"><expr pos:start="351:20" pos:end="351:63"><literal type="string" pos:start="351:20" pos:end="351:63">"Couldn't reallocate internal structures!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="353:13" pos:end="353:22">return <expr pos:start="353:20" pos:end="353:21"><operator pos:start="353:20" pos:end="353:20">-</operator><literal type="number" pos:start="353:21" pos:end="353:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="361:5" pos:end="377:5"><if pos:start="361:5" pos:end="377:5">if <condition pos:start="361:8" pos:end="361:27">(<expr pos:start="361:9" pos:end="361:26"><name pos:start="361:9" pos:end="361:22"><name pos:start="361:9" pos:end="361:11">ctx</name><operator pos:start="361:12" pos:end="361:13">-&gt;</operator><name pos:start="361:14" pos:end="361:22">gop_flags</name></name> <operator pos:start="361:24" pos:end="361:24">&amp;</operator> <literal type="number" pos:start="361:26" pos:end="361:26">8</literal></expr>)</condition> <block pos:start="361:29" pos:end="377:5">{<block_content pos:start="363:9" pos:end="375:41">

        <if_stmt pos:start="363:9" pos:end="369:9"><if pos:start="363:9" pos:end="369:9">if <condition pos:start="363:12" pos:end="363:34">(<expr pos:start="363:13" pos:end="363:33"><call pos:start="363:13" pos:end="363:33"><name pos:start="363:13" pos:end="363:20">get_bits</name><argument_list pos:start="363:21" pos:end="363:33">(<argument pos:start="363:22" pos:end="363:29"><expr pos:start="363:22" pos:end="363:29"><operator pos:start="363:22" pos:end="363:22">&amp;</operator><name pos:start="363:23" pos:end="363:29"><name pos:start="363:23" pos:end="363:25">ctx</name><operator pos:start="363:26" pos:end="363:27">-&gt;</operator><name pos:start="363:28" pos:end="363:29">gb</name></name></expr></argument>, <argument pos:start="363:32" pos:end="363:32"><expr pos:start="363:32" pos:end="363:32"><literal type="number" pos:start="363:32" pos:end="363:32">3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="363:36" pos:end="369:9">{<block_content pos:start="365:13" pos:end="367:22">

            <expr_stmt pos:start="365:13" pos:end="365:74"><expr pos:start="365:13" pos:end="365:73"><call pos:start="365:13" pos:end="365:73"><name pos:start="365:13" pos:end="365:18">av_log</name><argument_list pos:start="365:19" pos:end="365:73">(<argument pos:start="365:20" pos:end="365:24"><expr pos:start="365:20" pos:end="365:24"><name pos:start="365:20" pos:end="365:24">avctx</name></expr></argument>, <argument pos:start="365:27" pos:end="365:38"><expr pos:start="365:27" pos:end="365:38"><name pos:start="365:27" pos:end="365:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="365:41" pos:end="365:72"><expr pos:start="365:41" pos:end="365:72"><literal type="string" pos:start="365:41" pos:end="365:72">"Alignment bits are not zero!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="367:13" pos:end="367:22">return <expr pos:start="367:20" pos:end="367:21"><operator pos:start="367:20" pos:end="367:20">-</operator><literal type="number" pos:start="367:21" pos:end="367:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="373:9" pos:end="375:41"><if pos:start="373:9" pos:end="375:41">if <condition pos:start="373:12" pos:end="373:32">(<expr pos:start="373:13" pos:end="373:31"><call pos:start="373:13" pos:end="373:31"><name pos:start="373:13" pos:end="373:21">get_bits1</name><argument_list pos:start="373:22" pos:end="373:31">(<argument pos:start="373:23" pos:end="373:30"><expr pos:start="373:23" pos:end="373:30"><operator pos:start="373:23" pos:end="373:23">&amp;</operator><name pos:start="373:24" pos:end="373:30"><name pos:start="373:24" pos:end="373:26">ctx</name><operator pos:start="373:27" pos:end="373:28">-&gt;</operator><name pos:start="373:29" pos:end="373:30">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="375:13" pos:end="375:41"><block_content pos:start="375:13" pos:end="375:41">

            <expr_stmt pos:start="375:13" pos:end="375:41"><expr pos:start="375:13" pos:end="375:40"><call pos:start="375:13" pos:end="375:40"><name pos:start="375:13" pos:end="375:26">skip_bits_long</name><argument_list pos:start="375:27" pos:end="375:40">(<argument pos:start="375:28" pos:end="375:35"><expr pos:start="375:28" pos:end="375:35"><operator pos:start="375:28" pos:end="375:28">&amp;</operator><name pos:start="375:29" pos:end="375:35"><name pos:start="375:29" pos:end="375:31">ctx</name><operator pos:start="375:32" pos:end="375:33">-&gt;</operator><name pos:start="375:34" pos:end="375:35">gb</name></name></expr></argument>, <argument pos:start="375:38" pos:end="375:39"><expr pos:start="375:38" pos:end="375:39"><literal type="number" pos:start="375:38" pos:end="375:39">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="375:43" pos:end="375:76">/* skip transparency fill color */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="381:5" pos:end="381:29"><expr pos:start="381:5" pos:end="381:28"><call pos:start="381:5" pos:end="381:28"><name pos:start="381:5" pos:end="381:18">align_get_bits</name><argument_list pos:start="381:19" pos:end="381:28">(<argument pos:start="381:20" pos:end="381:27"><expr pos:start="381:20" pos:end="381:27"><operator pos:start="381:20" pos:end="381:20">&amp;</operator><name pos:start="381:21" pos:end="381:27"><name pos:start="381:21" pos:end="381:23">ctx</name><operator pos:start="381:24" pos:end="381:25">-&gt;</operator><name pos:start="381:26" pos:end="381:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="385:5" pos:end="385:28"><expr pos:start="385:5" pos:end="385:27"><call pos:start="385:5" pos:end="385:27"><name pos:start="385:5" pos:end="385:13">skip_bits</name><argument_list pos:start="385:14" pos:end="385:27">(<argument pos:start="385:15" pos:end="385:22"><expr pos:start="385:15" pos:end="385:22"><operator pos:start="385:15" pos:end="385:15">&amp;</operator><name pos:start="385:16" pos:end="385:22"><name pos:start="385:16" pos:end="385:18">ctx</name><operator pos:start="385:19" pos:end="385:20">-&gt;</operator><name pos:start="385:21" pos:end="385:22">gb</name></name></expr></argument>, <argument pos:start="385:25" pos:end="385:26"><expr pos:start="385:25" pos:end="385:26"><literal type="number" pos:start="385:25" pos:end="385:26">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="385:30" pos:end="385:57">/* FIXME: unknown meaning */</comment>



    <comment type="block" pos:start="389:5" pos:end="389:35">/* skip GOP extension if any */</comment>

    <if_stmt pos:start="391:5" pos:end="399:5"><if pos:start="391:5" pos:end="399:5">if <condition pos:start="391:8" pos:end="391:28">(<expr pos:start="391:9" pos:end="391:27"><call pos:start="391:9" pos:end="391:27"><name pos:start="391:9" pos:end="391:17">get_bits1</name><argument_list pos:start="391:18" pos:end="391:27">(<argument pos:start="391:19" pos:end="391:26"><expr pos:start="391:19" pos:end="391:26"><operator pos:start="391:19" pos:end="391:19">&amp;</operator><name pos:start="391:20" pos:end="391:26"><name pos:start="391:20" pos:end="391:22">ctx</name><operator pos:start="391:23" pos:end="391:24">-&gt;</operator><name pos:start="391:25" pos:end="391:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="391:30" pos:end="399:5">{<block_content pos:start="393:9" pos:end="397:29">

        <do pos:start="393:9" pos:end="397:29">do <block pos:start="393:12" pos:end="397:9">{<block_content pos:start="395:13" pos:end="395:39">

            <expr_stmt pos:start="395:13" pos:end="395:39"><expr pos:start="395:13" pos:end="395:38"><name pos:start="395:13" pos:end="395:13">i</name> <operator pos:start="395:15" pos:end="395:15">=</operator> <call pos:start="395:17" pos:end="395:38"><name pos:start="395:17" pos:end="395:24">get_bits</name><argument_list pos:start="395:25" pos:end="395:38">(<argument pos:start="395:26" pos:end="395:33"><expr pos:start="395:26" pos:end="395:33"><operator pos:start="395:26" pos:end="395:26">&amp;</operator><name pos:start="395:27" pos:end="395:33"><name pos:start="395:27" pos:end="395:29">ctx</name><operator pos:start="395:30" pos:end="395:31">-&gt;</operator><name pos:start="395:32" pos:end="395:33">gb</name></name></expr></argument>, <argument pos:start="395:36" pos:end="395:37"><expr pos:start="395:36" pos:end="395:37"><literal type="number" pos:start="395:36" pos:end="395:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="397:17" pos:end="397:28">(<expr pos:start="397:18" pos:end="397:27"><name pos:start="397:18" pos:end="397:18">i</name> <operator pos:start="397:20" pos:end="397:20">&amp;</operator> <literal type="number" pos:start="397:22" pos:end="397:27">0x8000</literal></expr>)</condition>;</do>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="403:5" pos:end="403:29"><expr pos:start="403:5" pos:end="403:28"><call pos:start="403:5" pos:end="403:28"><name pos:start="403:5" pos:end="403:18">align_get_bits</name><argument_list pos:start="403:19" pos:end="403:28">(<argument pos:start="403:20" pos:end="403:27"><expr pos:start="403:20" pos:end="403:27"><operator pos:start="403:20" pos:end="403:20">&amp;</operator><name pos:start="403:21" pos:end="403:27"><name pos:start="403:21" pos:end="403:23">ctx</name><operator pos:start="403:24" pos:end="403:25">-&gt;</operator><name pos:start="403:26" pos:end="403:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="407:5" pos:end="407:13">return <expr pos:start="407:12" pos:end="407:12"><literal type="number" pos:start="407:12" pos:end="407:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
