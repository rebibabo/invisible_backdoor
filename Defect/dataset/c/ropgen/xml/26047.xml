<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26047.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_mpeg4audio_get_config</name><parameter_list pos:start="1:29" pos:end="1:83">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:45">MPEG4AudioConfig</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:82">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:36">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:32">specific_config_bitindex</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:17">init_get_bits</name><argument_list pos:start="11:18" pos:end="11:39">(<argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><operator pos:start="11:19" pos:end="11:19">&amp;</operator><name pos:start="11:20" pos:end="11:21">gb</name></expr></argument>, <argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">buf</name></expr></argument>, <argument pos:start="11:29" pos:end="11:38"><expr pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:36">buf_size</name><operator pos:start="11:37" pos:end="11:37">*</operator><literal type="number" pos:start="11:38" pos:end="11:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:5">c</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:18">object_type</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:41"><name pos:start="13:22" pos:end="13:36">get_object_type</name><argument_list pos:start="13:37" pos:end="13:41">(<argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><operator pos:start="13:38" pos:end="13:38">&amp;</operator><name pos:start="13:39" pos:end="13:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:5">c</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:18">sample_rate</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <call pos:start="15:22" pos:end="15:61"><name pos:start="15:22" pos:end="15:36">get_sample_rate</name><argument_list pos:start="15:37" pos:end="15:61">(<argument pos:start="15:38" pos:end="15:40"><expr pos:start="15:38" pos:end="15:40"><operator pos:start="15:38" pos:end="15:38">&amp;</operator><name pos:start="15:39" pos:end="15:40">gb</name></expr></argument>, <argument pos:start="15:43" pos:end="15:60"><expr pos:start="15:43" pos:end="15:60"><operator pos:start="15:43" pos:end="15:43">&amp;</operator><name pos:start="15:44" pos:end="15:60"><name pos:start="15:44" pos:end="15:44">c</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:60">sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">c</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">chan_config</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:37"><name pos:start="17:22" pos:end="17:29">get_bits</name><argument_list pos:start="17:30" pos:end="17:37">(<argument pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:33">gb</name></expr></argument>, <argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:61"><if pos:start="19:5" pos:end="21:61">if <condition pos:start="19:8" pos:end="19:64">(<expr pos:start="19:9" pos:end="19:63"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">chan_config</name></name> <operator pos:start="19:24" pos:end="19:24">&lt;</operator> <call pos:start="19:26" pos:end="19:63"><name pos:start="19:26" pos:end="19:39">FF_ARRAY_ELEMS</name><argument_list pos:start="19:40" pos:end="19:63">(<argument pos:start="19:41" pos:end="19:62"><expr pos:start="19:41" pos:end="19:62"><name pos:start="19:41" pos:end="19:62">ff_mpeg4audio_channels</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:61"><block_content pos:start="21:9" pos:end="21:61">

        <expr_stmt pos:start="21:9" pos:end="21:61"><expr pos:start="21:9" pos:end="21:60"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">channels</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:60"><name pos:start="21:23" pos:end="21:44">ff_mpeg4audio_channels</name><index pos:start="21:45" pos:end="21:60">[<expr pos:start="21:46" pos:end="21:59"><name pos:start="21:46" pos:end="21:59"><name pos:start="21:46" pos:end="21:46">c</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:59">chan_config</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:5">c</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:10">sbr</name></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">-</operator><literal type="number" pos:start="23:15" pos:end="23:15">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="49:5"><if pos:start="25:5" pos:end="43:5">if <condition pos:start="25:8" pos:end="29:68">(<expr pos:start="25:9" pos:end="29:67"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">c</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">object_type</name></name> <operator pos:start="25:24" pos:end="25:25">==</operator> <name pos:start="25:27" pos:end="25:33">AOT_SBR</name> <operator pos:start="25:35" pos:end="25:36">||</operator> <operator pos:start="25:38" pos:end="25:38">(</operator><name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:39">c</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:52">object_type</name></name> <operator pos:start="25:54" pos:end="25:55">==</operator> <name pos:start="25:57" pos:end="25:62">AOT_PS</name> <operator pos:start="25:64" pos:end="25:65">&amp;&amp;</operator>

        <comment type="line" pos:start="27:9" pos:end="27:52">// check for W6132 Annex YYYY draft MP3onMP4</comment>

        <operator pos:start="29:9" pos:end="29:9">!</operator><operator pos:start="29:10" pos:end="29:10">(</operator><call pos:start="29:11" pos:end="29:27"><name pos:start="29:11" pos:end="29:19">show_bits</name><argument_list pos:start="29:20" pos:end="29:27">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:23">gb</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">3</literal></expr></argument>)</argument_list></call> <operator pos:start="29:29" pos:end="29:29">&amp;</operator> <literal type="number" pos:start="29:31" pos:end="29:34">0x03</literal> <operator pos:start="29:36" pos:end="29:37">&amp;&amp;</operator> <operator pos:start="29:39" pos:end="29:39">!</operator><operator pos:start="29:40" pos:end="29:40">(</operator><call pos:start="29:41" pos:end="29:57"><name pos:start="29:41" pos:end="29:49">show_bits</name><argument_list pos:start="29:50" pos:end="29:57">(<argument pos:start="29:51" pos:end="29:53"><expr pos:start="29:51" pos:end="29:53"><operator pos:start="29:51" pos:end="29:51">&amp;</operator><name pos:start="29:52" pos:end="29:53">gb</name></expr></argument>, <argument pos:start="29:56" pos:end="29:56"><expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">9</literal></expr></argument>)</argument_list></call> <operator pos:start="29:59" pos:end="29:59">&amp;</operator> <literal type="number" pos:start="29:61" pos:end="29:64">0x3F</literal><operator pos:start="29:65" pos:end="29:65">)</operator><operator pos:start="29:66" pos:end="29:66">)</operator><operator pos:start="29:67" pos:end="29:67">)</operator></expr>)</condition> <block pos:start="29:70" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:50">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:9">c</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:26">ext_object_type</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:36">AOT_SBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">c</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">sbr</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:74"><expr pos:start="35:9" pos:end="35:73"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:26">ext_sample_rate</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:73"><name pos:start="35:30" pos:end="35:44">get_sample_rate</name><argument_list pos:start="35:45" pos:end="35:73">(<argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:48">gb</name></expr></argument>, <argument pos:start="35:51" pos:end="35:72"><expr pos:start="35:51" pos:end="35:72"><operator pos:start="35:51" pos:end="35:51">&amp;</operator><name pos:start="35:52" pos:end="35:72"><name pos:start="35:52" pos:end="35:52">c</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:72">ext_sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:9">c</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:22">object_type</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:45"><name pos:start="37:26" pos:end="37:40">get_object_type</name><argument_list pos:start="37:41" pos:end="37:45">(<argument pos:start="37:42" pos:end="37:44"><expr pos:start="37:42" pos:end="37:44"><operator pos:start="37:42" pos:end="37:42">&amp;</operator><name pos:start="37:43" pos:end="37:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:50"><if pos:start="39:9" pos:end="41:50">if <condition pos:start="39:12" pos:end="39:42">(<expr pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:13">c</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:26">object_type</name></name> <operator pos:start="39:28" pos:end="39:29">==</operator> <name pos:start="39:31" pos:end="39:41">AOT_ER_BSAC</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:50"><block_content pos:start="41:13" pos:end="41:50">

            <expr_stmt pos:start="41:13" pos:end="41:50"><expr pos:start="41:13" pos:end="41:49"><name pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:13">c</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:30">ext_chan_config</name></name> <operator pos:start="41:32" pos:end="41:32">=</operator> <call pos:start="41:34" pos:end="41:49"><name pos:start="41:34" pos:end="41:41">get_bits</name><argument_list pos:start="41:42" pos:end="41:49">(<argument pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><operator pos:start="41:43" pos:end="41:43">&amp;</operator><name pos:start="41:44" pos:end="41:45">gb</name></expr></argument>, <argument pos:start="41:48" pos:end="41:48"><expr pos:start="41:48" pos:end="41:48"><literal type="number" pos:start="41:48" pos:end="41:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="49:5">else <block pos:start="43:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:31">

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:9">c</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:26">ext_object_type</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:37">AOT_NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:26">ext_sample_rate</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:28">specific_config_bitindex</name> <operator pos:start="51:30" pos:end="51:30">=</operator> <call pos:start="51:32" pos:end="51:50"><name pos:start="51:32" pos:end="51:45">get_bits_count</name><argument_list pos:start="51:46" pos:end="51:50">(<argument pos:start="51:47" pos:end="51:49"><expr pos:start="51:47" pos:end="51:49"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="73:5"><if pos:start="55:5" pos:end="73:5">if <condition pos:start="55:8" pos:end="55:34">(<expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:9">c</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:22">object_type</name></name> <operator pos:start="55:24" pos:end="55:25">==</operator> <name pos:start="55:27" pos:end="55:33">AOT_ALS</name></expr>)</condition> <block pos:start="55:36" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:22">

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><call pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:17">skip_bits</name><argument_list pos:start="57:18" pos:end="57:25">(<argument pos:start="57:19" pos:end="57:21"><expr pos:start="57:19" pos:end="57:21"><operator pos:start="57:19" pos:end="57:19">&amp;</operator><name pos:start="57:20" pos:end="57:21">gb</name></expr></argument>, <argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:36"><if pos:start="59:9" pos:end="61:36">if <condition pos:start="59:12" pos:end="59:65">(<expr pos:start="59:13" pos:end="59:64"><call pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:26">show_bits_long</name><argument_list pos:start="59:27" pos:end="59:35">(<argument pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:30">gb</name></expr></argument>, <argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><literal type="number" pos:start="59:33" pos:end="59:34">24</literal></expr></argument>)</argument_list></call> <operator pos:start="59:37" pos:end="59:38">!=</operator> <call pos:start="59:40" pos:end="59:64"><name pos:start="59:40" pos:end="59:46">MKBETAG</name><argument_list pos:start="59:47" pos:end="59:64">(<argument pos:start="59:48" pos:end="59:51"><expr pos:start="59:48" pos:end="59:51"><literal type="char" pos:start="59:48" pos:end="59:51">'\0'</literal></expr></argument>,<argument pos:start="59:53" pos:end="59:55"><expr pos:start="59:53" pos:end="59:55"><literal type="char" pos:start="59:53" pos:end="59:55">'A'</literal></expr></argument>,<argument pos:start="59:57" pos:end="59:59"><expr pos:start="59:57" pos:end="59:59"><literal type="char" pos:start="59:57" pos:end="59:59">'L'</literal></expr></argument>,<argument pos:start="59:61" pos:end="59:63"><expr pos:start="59:61" pos:end="59:63"><literal type="char" pos:start="59:61" pos:end="59:63">'S'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:36"><block_content pos:start="61:13" pos:end="61:36">

            <expr_stmt pos:start="61:13" pos:end="61:36"><expr pos:start="61:13" pos:end="61:35"><call pos:start="61:13" pos:end="61:35"><name pos:start="61:13" pos:end="61:26">skip_bits_long</name><argument_list pos:start="61:27" pos:end="61:35">(<argument pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><operator pos:start="61:28" pos:end="61:28">&amp;</operator><name pos:start="61:29" pos:end="61:30">gb</name></expr></argument>, <argument pos:start="61:33" pos:end="61:34"><expr pos:start="61:33" pos:end="61:34"><literal type="number" pos:start="61:33" pos:end="61:34">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:55"><expr pos:start="65:9" pos:end="65:54"><name pos:start="65:9" pos:end="65:32">specific_config_bitindex</name> <operator pos:start="65:34" pos:end="65:34">=</operator> <call pos:start="65:36" pos:end="65:54"><name pos:start="65:36" pos:end="65:49">get_bits_count</name><argument_list pos:start="65:50" pos:end="65:54">(<argument pos:start="65:51" pos:end="65:53"><expr pos:start="65:51" pos:end="65:53"><operator pos:start="65:51" pos:end="65:51">&amp;</operator><name pos:start="65:52" pos:end="65:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="71:22"><if pos:start="69:9" pos:end="71:22">if <condition pos:start="69:12" pos:end="69:37">(<expr pos:start="69:13" pos:end="69:36"><call pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:28">parse_config_ALS</name><argument_list pos:start="69:29" pos:end="69:36">(<argument pos:start="69:30" pos:end="69:32"><expr pos:start="69:30" pos:end="69:32"><operator pos:start="69:30" pos:end="69:30">&amp;</operator><name pos:start="69:31" pos:end="69:32">gb</name></expr></argument>, <argument pos:start="69:35" pos:end="69:35"><expr pos:start="69:35" pos:end="69:35"><name pos:start="69:35" pos:end="69:35">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:22"><block_content pos:start="71:13" pos:end="71:22">

            <return pos:start="71:13" pos:end="71:22">return <expr pos:start="71:20" pos:end="71:21"><operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="101:5"><if pos:start="77:5" pos:end="101:5">if <condition pos:start="77:8" pos:end="77:38">(<expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:9">c</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:26">ext_object_type</name></name> <operator pos:start="77:28" pos:end="77:29">!=</operator> <name pos:start="77:31" pos:end="77:37">AOT_SBR</name></expr>)</condition> <block pos:start="77:40" pos:end="101:5">{<block_content pos:start="79:9" pos:end="99:9">

        <decl_stmt pos:start="79:9" pos:end="79:57"><decl pos:start="79:9" pos:end="79:56"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:21">bits_left</name> <init pos:start="79:23" pos:end="79:56">= <expr pos:start="79:25" pos:end="79:56"><name pos:start="79:25" pos:end="79:32">buf_size</name><operator pos:start="79:33" pos:end="79:33">*</operator><literal type="number" pos:start="79:34" pos:end="79:36">8</literal> <operator pos:start="79:36" pos:end="79:36">-</operator> <call pos:start="79:38" pos:end="79:56"><name pos:start="79:38" pos:end="79:51">get_bits_count</name><argument_list pos:start="79:52" pos:end="79:56">(<argument pos:start="79:53" pos:end="79:55"><expr pos:start="79:53" pos:end="79:55"><operator pos:start="79:53" pos:end="79:53">&amp;</operator><name pos:start="79:54" pos:end="79:55">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <for pos:start="81:9" pos:end="99:9">for <control pos:start="81:13" pos:end="81:43">(<init pos:start="81:14" pos:end="81:14">;</init> <condition pos:start="81:16" pos:end="81:30"><expr pos:start="81:16" pos:end="81:29"><name pos:start="81:16" pos:end="81:24">bits_left</name> <operator pos:start="81:26" pos:end="81:26">&gt;</operator> <literal type="number" pos:start="81:28" pos:end="81:29">15</literal></expr>;</condition> <incr pos:start="81:32" pos:end="81:42"><expr pos:start="81:32" pos:end="81:42"><name pos:start="81:32" pos:end="81:40">bits_left</name><operator pos:start="81:41" pos:end="81:42">--</operator></expr></incr>)</control> <block pos:start="81:45" pos:end="99:9">{<block_content pos:start="83:13" pos:end="97:31">

            <if_stmt pos:start="83:13" pos:end="97:31"><if pos:start="83:13" pos:end="95:13">if <condition pos:start="83:16" pos:end="83:44">(<expr pos:start="83:17" pos:end="83:43"><call pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:25">show_bits</name><argument_list pos:start="83:26" pos:end="83:34">(<argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:29">gb</name></expr></argument>, <argument pos:start="83:32" pos:end="83:33"><expr pos:start="83:32" pos:end="83:33"><literal type="number" pos:start="83:32" pos:end="83:33">11</literal></expr></argument>)</argument_list></call> <operator pos:start="83:36" pos:end="83:37">==</operator> <literal type="number" pos:start="83:39" pos:end="83:43">0x2b7</literal></expr>)</condition> <block pos:start="83:46" pos:end="95:13">{<block_content pos:start="85:17" pos:end="93:22"> <comment type="line" pos:start="83:48" pos:end="83:64">// sync extension</comment>

                <expr_stmt pos:start="85:17" pos:end="85:34"><expr pos:start="85:17" pos:end="85:33"><call pos:start="85:17" pos:end="85:33"><name pos:start="85:17" pos:end="85:24">get_bits</name><argument_list pos:start="85:25" pos:end="85:33">(<argument pos:start="85:26" pos:end="85:28"><expr pos:start="85:26" pos:end="85:28"><operator pos:start="85:26" pos:end="85:26">&amp;</operator><name pos:start="85:27" pos:end="85:28">gb</name></expr></argument>, <argument pos:start="85:31" pos:end="85:32"><expr pos:start="85:31" pos:end="85:32"><literal type="number" pos:start="85:31" pos:end="85:32">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:58"><expr pos:start="87:17" pos:end="87:57"><name pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:17">c</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:34">ext_object_type</name></name> <operator pos:start="87:36" pos:end="87:36">=</operator> <call pos:start="87:38" pos:end="87:57"><name pos:start="87:38" pos:end="87:52">get_object_type</name><argument_list pos:start="87:53" pos:end="87:57">(<argument pos:start="87:54" pos:end="87:56"><expr pos:start="87:54" pos:end="87:56"><operator pos:start="87:54" pos:end="87:54">&amp;</operator><name pos:start="87:55" pos:end="87:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="91:86"><if pos:start="89:17" pos:end="91:86">if <condition pos:start="89:20" pos:end="89:84">(<expr pos:start="89:21" pos:end="89:83"><name pos:start="89:21" pos:end="89:38"><name pos:start="89:21" pos:end="89:21">c</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:38">ext_object_type</name></name> <operator pos:start="89:40" pos:end="89:41">==</operator> <name pos:start="89:43" pos:end="89:49">AOT_SBR</name> <operator pos:start="89:51" pos:end="89:52">&amp;&amp;</operator> <operator pos:start="89:54" pos:end="89:54">(</operator><name pos:start="89:55" pos:end="89:60"><name pos:start="89:55" pos:end="89:55">c</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:60">sbr</name></name> <operator pos:start="89:62" pos:end="89:62">=</operator> <call pos:start="89:64" pos:end="89:77"><name pos:start="89:64" pos:end="89:72">get_bits1</name><argument_list pos:start="89:73" pos:end="89:77">(<argument pos:start="89:74" pos:end="89:76"><expr pos:start="89:74" pos:end="89:76"><operator pos:start="89:74" pos:end="89:74">&amp;</operator><name pos:start="89:75" pos:end="89:76">gb</name></expr></argument>)</argument_list></call><operator pos:start="89:78" pos:end="89:78">)</operator> <operator pos:start="89:80" pos:end="89:81">==</operator> <literal type="number" pos:start="89:83" pos:end="89:83">1</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:86"><block_content pos:start="91:21" pos:end="91:86">

                    <expr_stmt pos:start="91:21" pos:end="91:86"><expr pos:start="91:21" pos:end="91:85"><name pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:21">c</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:38">ext_sample_rate</name></name> <operator pos:start="91:40" pos:end="91:40">=</operator> <call pos:start="91:42" pos:end="91:85"><name pos:start="91:42" pos:end="91:56">get_sample_rate</name><argument_list pos:start="91:57" pos:end="91:85">(<argument pos:start="91:58" pos:end="91:60"><expr pos:start="91:58" pos:end="91:60"><operator pos:start="91:58" pos:end="91:58">&amp;</operator><name pos:start="91:59" pos:end="91:60">gb</name></expr></argument>, <argument pos:start="91:63" pos:end="91:84"><expr pos:start="91:63" pos:end="91:84"><operator pos:start="91:63" pos:end="91:63">&amp;</operator><name pos:start="91:64" pos:end="91:84"><name pos:start="91:64" pos:end="91:64">c</name><operator pos:start="91:65" pos:end="91:66">-&gt;</operator><name pos:start="91:67" pos:end="91:84">ext_sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="93:17" pos:end="93:22">break;</break>

            </block_content>}</block></if> <else pos:start="95:15" pos:end="97:31">else<block type="pseudo" pos:start="97:17" pos:end="97:31"><block_content pos:start="97:17" pos:end="97:31">

                <expr_stmt pos:start="97:17" pos:end="97:31"><expr pos:start="97:17" pos:end="97:30"><call pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:25">get_bits1</name><argument_list pos:start="97:26" pos:end="97:30">(<argument pos:start="97:27" pos:end="97:29"><expr pos:start="97:27" pos:end="97:29"><operator pos:start="97:27" pos:end="97:27">&amp;</operator><name pos:start="97:28" pos:end="97:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="97:33" pos:end="97:45">// skip 1 bit</comment>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="103:5" pos:end="103:36">return <expr pos:start="103:12" pos:end="103:35"><name pos:start="103:12" pos:end="103:35">specific_config_bitindex</name></expr>;</return>

</block_content>}</block></function>
</unit>
