<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17582.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:50"><name pos:start="1:1" pos:end="1:20">read_insn_microblaze</name> <argument_list pos:start="1:22" pos:end="5:50">(<argument pos:start="1:23" pos:end="1:37">bfd_vma memaddr</argument>, 

		      <argument pos:start="3:23" pos:end="3:51">struct disassemble_info *info</argument>,

		      <argument pos:start="5:23" pos:end="5:49">struct op_code_struct **opr</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="63:1">{<block_content pos:start="9:3" pos:end="61:14">

  <decl_stmt pos:start="9:3" pos:end="9:32"><decl pos:start="9:3" pos:end="9:31"><type pos:start="9:3" pos:end="9:15"><name pos:start="9:3" pos:end="9:10">unsigned</name> <name pos:start="9:12" pos:end="9:15">char</name></type>       <name pos:start="9:23" pos:end="9:31"><name pos:start="9:23" pos:end="9:28">ibytes</name><index pos:start="9:29" pos:end="9:31">[<expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">4</literal></expr>]</index></name></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:29"><decl pos:start="11:3" pos:end="11:28"><type pos:start="11:3" pos:end="11:5"><name pos:start="11:3" pos:end="11:5">int</name></type>                 <name pos:start="11:23" pos:end="11:28">status</name></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:29"><decl pos:start="13:3" pos:end="13:28"><type pos:start="13:3" pos:end="13:25"><name pos:start="13:3" pos:end="13:23"><name pos:start="13:3" pos:end="13:8">struct</name> <name pos:start="13:10" pos:end="13:23">op_code_struct</name></name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type> <name pos:start="13:27" pos:end="13:28">op</name></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:21"><decl pos:start="15:3" pos:end="15:20"><type pos:start="15:3" pos:end="15:15"><name pos:start="15:3" pos:end="15:10">unsigned</name> <name pos:start="15:12" pos:end="15:15">long</name></type> <name pos:start="15:17" pos:end="15:20">inst</name></decl>;</decl_stmt>



  <expr_stmt pos:start="19:3" pos:end="19:61"><expr pos:start="19:3" pos:end="19:60"><name pos:start="19:3" pos:end="19:8">status</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:60"><name pos:start="19:12" pos:end="19:33"><name pos:start="19:12" pos:end="19:15">info</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:33">read_memory_func</name></name> <argument_list pos:start="19:35" pos:end="19:60">(<argument pos:start="19:36" pos:end="19:42"><expr pos:start="19:36" pos:end="19:42"><name pos:start="19:36" pos:end="19:42">memaddr</name></expr></argument>, <argument pos:start="19:45" pos:end="19:50"><expr pos:start="19:45" pos:end="19:50"><name pos:start="19:45" pos:end="19:50">ibytes</name></expr></argument>, <argument pos:start="19:53" pos:end="19:53"><expr pos:start="19:53" pos:end="19:53"><literal type="number" pos:start="19:53" pos:end="19:53">4</literal></expr></argument>, <argument pos:start="19:56" pos:end="19:59"><expr pos:start="19:56" pos:end="19:59"><name pos:start="19:56" pos:end="19:59">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="23:3" pos:end="31:5"><if pos:start="23:3" pos:end="31:5">if <condition pos:start="23:6" pos:end="23:18">(<expr pos:start="23:7" pos:end="23:17"><name pos:start="23:7" pos:end="23:12">status</name> <operator pos:start="23:14" pos:end="23:15">!=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>)</condition> 

    <block pos:start="25:5" pos:end="31:5">{<block_content pos:start="27:7" pos:end="29:15">

      <expr_stmt pos:start="27:7" pos:end="27:54"><expr pos:start="27:7" pos:end="27:53"><call pos:start="27:7" pos:end="27:53"><name pos:start="27:7" pos:end="27:29"><name pos:start="27:7" pos:end="27:10">info</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:29">memory_error_func</name></name> <argument_list pos:start="27:31" pos:end="27:53">(<argument pos:start="27:32" pos:end="27:37"><expr pos:start="27:32" pos:end="27:37"><name pos:start="27:32" pos:end="27:37">status</name></expr></argument>, <argument pos:start="27:40" pos:end="27:46"><expr pos:start="27:40" pos:end="27:46"><name pos:start="27:40" pos:end="27:46">memaddr</name></expr></argument>, <argument pos:start="27:49" pos:end="27:52"><expr pos:start="27:49" pos:end="27:52"><name pos:start="27:49" pos:end="27:52">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="29:7" pos:end="29:15">return <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="35:3" pos:end="45:13"><if pos:start="35:3" pos:end="37:80">if <condition pos:start="35:6" pos:end="35:37">(<expr pos:start="35:7" pos:end="35:36"><name pos:start="35:7" pos:end="35:18"><name pos:start="35:7" pos:end="35:10">info</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:18">endian</name></name> <operator pos:start="35:20" pos:end="35:21">==</operator> <name pos:start="35:23" pos:end="35:36">BFD_ENDIAN_BIG</name></expr>)</condition><block type="pseudo" pos:start="37:5" pos:end="37:80"><block_content pos:start="37:5" pos:end="37:80">

    <expr_stmt pos:start="37:5" pos:end="37:80"><expr pos:start="37:5" pos:end="37:79"><name pos:start="37:5" pos:end="37:8">inst</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <operator pos:start="37:12" pos:end="37:12">(</operator><name pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:18">ibytes</name><index pos:start="37:19" pos:end="37:21">[<expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>]</index></name> <operator pos:start="37:23" pos:end="37:24">&lt;&lt;</operator> <literal type="number" pos:start="37:26" pos:end="37:27">24</literal><operator pos:start="37:28" pos:end="37:28">)</operator> <operator pos:start="37:30" pos:end="37:30">|</operator> <operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:38">ibytes</name><index pos:start="37:39" pos:end="37:41">[<expr pos:start="37:40" pos:end="37:40"><literal type="number" pos:start="37:40" pos:end="37:40">1</literal></expr>]</index></name> <operator pos:start="37:43" pos:end="37:44">&lt;&lt;</operator> <literal type="number" pos:start="37:46" pos:end="37:47">16</literal><operator pos:start="37:48" pos:end="37:48">)</operator> <operator pos:start="37:50" pos:end="37:50">|</operator> <operator pos:start="37:52" pos:end="37:52">(</operator><name pos:start="37:53" pos:end="37:61"><name pos:start="37:53" pos:end="37:58">ibytes</name><index pos:start="37:59" pos:end="37:61">[<expr pos:start="37:60" pos:end="37:60"><literal type="number" pos:start="37:60" pos:end="37:60">2</literal></expr>]</index></name> <operator pos:start="37:63" pos:end="37:64">&lt;&lt;</operator> <literal type="number" pos:start="37:66" pos:end="37:66">8</literal><operator pos:start="37:67" pos:end="37:67">)</operator> <operator pos:start="37:69" pos:end="37:69">|</operator> <name pos:start="37:71" pos:end="37:79"><name pos:start="37:71" pos:end="37:76">ibytes</name><index pos:start="37:77" pos:end="37:79">[<expr pos:start="37:78" pos:end="37:78"><literal type="number" pos:start="37:78" pos:end="37:78">3</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

  <if type="elseif" pos:start="39:3" pos:end="41:80">else if <condition pos:start="39:11" pos:end="39:45">(<expr pos:start="39:12" pos:end="39:44"><name pos:start="39:12" pos:end="39:23"><name pos:start="39:12" pos:end="39:15">info</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:23">endian</name></name> <operator pos:start="39:25" pos:end="39:26">==</operator> <name pos:start="39:28" pos:end="39:44">BFD_ENDIAN_LITTLE</name></expr>)</condition><block type="pseudo" pos:start="41:5" pos:end="41:80"><block_content pos:start="41:5" pos:end="41:80">

    <expr_stmt pos:start="41:5" pos:end="41:80"><expr pos:start="41:5" pos:end="41:79"><name pos:start="41:5" pos:end="41:8">inst</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:18">ibytes</name><index pos:start="41:19" pos:end="41:21">[<expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">3</literal></expr>]</index></name> <operator pos:start="41:23" pos:end="41:24">&lt;&lt;</operator> <literal type="number" pos:start="41:26" pos:end="41:27">24</literal><operator pos:start="41:28" pos:end="41:28">)</operator> <operator pos:start="41:30" pos:end="41:30">|</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:41"><name pos:start="41:33" pos:end="41:38">ibytes</name><index pos:start="41:39" pos:end="41:41">[<expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">2</literal></expr>]</index></name> <operator pos:start="41:43" pos:end="41:44">&lt;&lt;</operator> <literal type="number" pos:start="41:46" pos:end="41:47">16</literal><operator pos:start="41:48" pos:end="41:48">)</operator> <operator pos:start="41:50" pos:end="41:50">|</operator> <operator pos:start="41:52" pos:end="41:52">(</operator><name pos:start="41:53" pos:end="41:61"><name pos:start="41:53" pos:end="41:58">ibytes</name><index pos:start="41:59" pos:end="41:61">[<expr pos:start="41:60" pos:end="41:60"><literal type="number" pos:start="41:60" pos:end="41:60">1</literal></expr>]</index></name> <operator pos:start="41:63" pos:end="41:64">&lt;&lt;</operator> <literal type="number" pos:start="41:66" pos:end="41:66">8</literal><operator pos:start="41:67" pos:end="41:67">)</operator> <operator pos:start="41:69" pos:end="41:69">|</operator> <name pos:start="41:71" pos:end="41:79"><name pos:start="41:71" pos:end="41:76">ibytes</name><index pos:start="41:77" pos:end="41:79">[<expr pos:start="41:78" pos:end="41:78"><literal type="number" pos:start="41:78" pos:end="41:78">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

  <else pos:start="43:3" pos:end="45:13">else<block type="pseudo" pos:start="45:5" pos:end="45:13"><block_content pos:start="45:5" pos:end="45:13">

    <expr_stmt pos:start="45:5" pos:end="45:13"><expr pos:start="45:5" pos:end="45:12"><call pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:9">abort</name> <argument_list pos:start="45:11" pos:end="45:12">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



  <comment type="block" pos:start="49:3" pos:end="49:43">/* Just a linear search of the table.  */</comment>

  <for pos:start="51:3" pos:end="55:12">for <control pos:start="51:7" pos:end="51:42">(<init pos:start="51:8" pos:end="51:20"><expr pos:start="51:8" pos:end="51:19"><name pos:start="51:8" pos:end="51:9">op</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <name pos:start="51:13" pos:end="51:19">opcodes</name></expr>;</init> <condition pos:start="51:22" pos:end="51:35"><expr pos:start="51:22" pos:end="51:34"><name pos:start="51:22" pos:end="51:29"><name pos:start="51:22" pos:end="51:23">op</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:29">name</name></name> <operator pos:start="51:31" pos:end="51:32">!=</operator> <literal type="number" pos:start="51:34" pos:end="51:34">0</literal></expr>;</condition> <incr pos:start="51:37" pos:end="51:41"><expr pos:start="51:37" pos:end="51:41"><name pos:start="51:37" pos:end="51:38">op</name> <operator pos:start="51:40" pos:end="51:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:5" pos:end="55:12"><block_content pos:start="53:5" pos:end="55:12">

    <if_stmt pos:start="53:5" pos:end="55:12"><if pos:start="53:5" pos:end="55:12">if <condition pos:start="53:8" pos:end="53:53">(<expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:10">op</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:24">bit_sequence</name></name> <operator pos:start="53:26" pos:end="53:27">==</operator> <operator pos:start="53:29" pos:end="53:29">(</operator><name pos:start="53:30" pos:end="53:33">inst</name> <operator pos:start="53:35" pos:end="53:35">&amp;</operator> <name pos:start="53:37" pos:end="53:51"><name pos:start="53:37" pos:end="53:38">op</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:51">opcode_mask</name></name><operator pos:start="53:52" pos:end="53:52">)</operator></expr>)</condition><block type="pseudo" pos:start="55:7" pos:end="55:12"><block_content pos:start="55:7" pos:end="55:12">

      <break pos:start="55:7" pos:end="55:12">break;</break></block_content></block></if></if_stmt></block_content></block></for>



  <expr_stmt pos:start="59:3" pos:end="59:12"><expr pos:start="59:3" pos:end="59:11"><operator pos:start="59:3" pos:end="59:3">*</operator><name pos:start="59:4" pos:end="59:6">opr</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <name pos:start="59:10" pos:end="59:11">op</name></expr>;</expr_stmt>

  <return pos:start="61:3" pos:end="61:14">return <expr pos:start="61:10" pos:end="61:13"><name pos:start="61:10" pos:end="61:13">inst</name></expr>;</return>

</block_content>}</block>
</unit>
