<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26034.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:32">wv_unpack_mono</name><parameter_list pos:start="1:33" pos:end="3:59">(<parameter pos:start="1:34" pos:end="1:55"><decl pos:start="1:34" pos:end="1:55"><type pos:start="1:34" pos:end="1:55"><name pos:start="1:34" pos:end="1:52">WavpackFrameContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:74"><decl pos:start="1:58" pos:end="1:74"><type pos:start="1:58" pos:end="1:74"><name pos:start="1:58" pos:end="1:70">GetBitContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:74">gb</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:42"><decl pos:start="3:34" pos:end="3:42"><type pos:start="3:34" pos:end="3:42"><name pos:start="3:34" pos:end="3:37">void</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:42">dst</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:58"><decl pos:start="3:45" pos:end="3:58"><type pos:start="3:45" pos:end="3:58"><specifier pos:start="3:45" pos:end="3:49">const</specifier> <name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:58">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="135:1">{<block_content pos:start="7:5" pos:end="133:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">count</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">last</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">A</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">S</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">T</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">pos</name>                  <init pos:start="13:30" pos:end="13:37">= <expr pos:start="13:32" pos:end="13:37"><name pos:start="13:32" pos:end="13:37"><name pos:start="13:32" pos:end="13:32">s</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:37">pos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">crc</name>             <init pos:start="15:30" pos:end="15:40">= <expr pos:start="15:32" pos:end="15:40"><name pos:start="15:32" pos:end="15:40"><name pos:start="15:32" pos:end="15:32">s</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:36">sc</name><operator pos:start="15:37" pos:end="15:37">.</operator><name pos:start="15:38" pos:end="15:40">crc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:47"><decl pos:start="17:5" pos:end="17:46"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:27">crc_extra_bits</name>  <init pos:start="17:30" pos:end="17:46">= <expr pos:start="17:32" pos:end="17:46"><name pos:start="17:32" pos:end="17:46"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:42">extra_sc</name><operator pos:start="17:43" pos:end="17:43">.</operator><name pos:start="17:44" pos:end="17:46">crc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">int16_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:18">dst16</name>           <init pos:start="19:30" pos:end="19:34">= <expr pos:start="19:32" pos:end="19:34"><name pos:start="19:32" pos:end="19:34">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">int32_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:18">dst32</name>           <init pos:start="21:30" pos:end="21:34">= <expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:35"><decl pos:start="23:5" pos:end="23:34"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">float</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:16">dstfl</name>             <init pos:start="23:30" pos:end="23:34">= <expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">dst</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">one</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:20"><name pos:start="27:14" pos:end="27:14">s</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">zero</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:32">zeroes</name></name> <operator pos:start="27:34" pos:end="27:34">=</operator> <literal type="number" pos:start="27:36" pos:end="27:36">0</literal></expr>;</expr_stmt>

    <do pos:start="29:5" pos:end="103:42">do <block pos:start="29:8" pos:end="103:5">{<block_content pos:start="31:9" pos:end="101:16">

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:9">T</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:41"><name pos:start="31:13" pos:end="31:24">wv_get_value</name><argument_list pos:start="31:25" pos:end="31:41">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">s</name></expr></argument>, <argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><name pos:start="31:29" pos:end="31:30">gb</name></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr></argument>, <argument pos:start="31:36" pos:end="31:40"><expr pos:start="31:36" pos:end="31:40"><operator pos:start="31:36" pos:end="31:36">&amp;</operator><name pos:start="31:37" pos:end="31:40">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">S</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:18"><if pos:start="35:9" pos:end="37:18">if <condition pos:start="35:12" pos:end="35:17">(<expr pos:start="35:13" pos:end="35:16"><name pos:start="35:13" pos:end="35:16">last</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:18"><block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break></block_content></block></if></if_stmt>

        <for pos:start="39:9" pos:end="79:9">for <control pos:start="39:13" pos:end="39:38">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:33"><expr pos:start="39:21" pos:end="39:32"><name pos:start="39:21" pos:end="39:21">i</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:32"><name pos:start="39:25" pos:end="39:25">s</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:32">terms</name></name></expr>;</condition> <incr pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><name pos:start="39:35" pos:end="39:35">i</name><operator pos:start="39:36" pos:end="39:37">++</operator></expr></incr>)</control> <block pos:start="39:40" pos:end="79:9">{<block_content pos:start="41:13" pos:end="77:45">

            <expr_stmt pos:start="41:13" pos:end="41:35"><expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:13">t</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">decorr</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">i</name></expr>]</index></name><operator pos:start="41:29" pos:end="41:29">.</operator><name pos:start="41:30" pos:end="41:34">value</name></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="63:13"><if pos:start="43:13" pos:end="57:13">if <condition pos:start="43:16" pos:end="43:22">(<expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:17">t</name> <operator pos:start="43:19" pos:end="43:19">&gt;</operator> <literal type="number" pos:start="43:21" pos:end="43:21">8</literal></expr>)</condition> <block pos:start="43:24" pos:end="57:13">{<block_content pos:start="45:17" pos:end="55:45">

                <if_stmt pos:start="45:17" pos:end="51:93"><if pos:start="45:17" pos:end="47:82">if <condition pos:start="45:20" pos:end="45:26">(<expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:21">t</name> <operator pos:start="45:23" pos:end="45:23">&amp;</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:82"><block_content pos:start="47:21" pos:end="47:82">

                    <expr_stmt pos:start="47:21" pos:end="47:82"><expr pos:start="47:21" pos:end="47:81"><name pos:start="47:21" pos:end="47:21">A</name> <operator pos:start="47:23" pos:end="47:23">=</operator>  <literal type="number" pos:start="47:26" pos:end="47:27">2U</literal> <operator pos:start="47:29" pos:end="47:29">*</operator> <name pos:start="47:31" pos:end="47:42"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:39">decorr</name><index pos:start="47:40" pos:end="47:42">[<expr pos:start="47:41" pos:end="47:41"><name pos:start="47:41" pos:end="47:41">i</name></expr>]</index></name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:54"><name pos:start="47:44" pos:end="47:51">samplesA</name><index pos:start="47:52" pos:end="47:54">[<expr pos:start="47:53" pos:end="47:53"><literal type="number" pos:start="47:53" pos:end="47:53">0</literal></expr>]</index></name> <operator pos:start="47:56" pos:end="47:56">-</operator> <name pos:start="47:58" pos:end="47:69"><name pos:start="47:58" pos:end="47:58">s</name><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:66">decorr</name><index pos:start="47:67" pos:end="47:69">[<expr pos:start="47:68" pos:end="47:68"><name pos:start="47:68" pos:end="47:68">i</name></expr>]</index></name><operator pos:start="47:70" pos:end="47:70">.</operator><name pos:start="47:71" pos:end="47:81"><name pos:start="47:71" pos:end="47:78">samplesA</name><index pos:start="47:79" pos:end="47:81">[<expr pos:start="47:80" pos:end="47:80"><literal type="number" pos:start="47:80" pos:end="47:80">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="49:17" pos:end="51:93">else<block type="pseudo" pos:start="51:21" pos:end="51:93"><block_content pos:start="51:21" pos:end="51:93">

                    <expr_stmt pos:start="51:21" pos:end="51:93"><expr pos:start="51:21" pos:end="51:92"><name pos:start="51:21" pos:end="51:21">A</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:28">int</name><operator pos:start="51:29" pos:end="51:29">)</operator><operator pos:start="51:30" pos:end="51:30">(</operator><literal type="number" pos:start="51:31" pos:end="51:32">3U</literal> <operator pos:start="51:34" pos:end="51:34">*</operator> <name pos:start="51:36" pos:end="51:47"><name pos:start="51:36" pos:end="51:36">s</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:44">decorr</name><index pos:start="51:45" pos:end="51:47">[<expr pos:start="51:46" pos:end="51:46"><name pos:start="51:46" pos:end="51:46">i</name></expr>]</index></name><operator pos:start="51:48" pos:end="51:48">.</operator><name pos:start="51:49" pos:end="51:59"><name pos:start="51:49" pos:end="51:56">samplesA</name><index pos:start="51:57" pos:end="51:59">[<expr pos:start="51:58" pos:end="51:58"><literal type="number" pos:start="51:58" pos:end="51:58">0</literal></expr>]</index></name> <operator pos:start="51:61" pos:end="51:61">-</operator> <name pos:start="51:63" pos:end="51:74"><name pos:start="51:63" pos:end="51:63">s</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:71">decorr</name><index pos:start="51:72" pos:end="51:74">[<expr pos:start="51:73" pos:end="51:73"><name pos:start="51:73" pos:end="51:73">i</name></expr>]</index></name><operator pos:start="51:75" pos:end="51:75">.</operator><name pos:start="51:76" pos:end="51:86"><name pos:start="51:76" pos:end="51:83">samplesA</name><index pos:start="51:84" pos:end="51:86">[<expr pos:start="51:85" pos:end="51:85"><literal type="number" pos:start="51:85" pos:end="51:85">1</literal></expr>]</index></name><operator pos:start="51:87" pos:end="51:87">)</operator> <operator pos:start="51:89" pos:end="51:90">&gt;&gt;</operator> <literal type="number" pos:start="51:92" pos:end="51:92">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:68"><expr pos:start="53:17" pos:end="53:67"><name pos:start="53:17" pos:end="53:28"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:25">decorr</name><index pos:start="53:26" pos:end="53:28">[<expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">i</name></expr>]</index></name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:40"><name pos:start="53:30" pos:end="53:37">samplesA</name><index pos:start="53:38" pos:end="53:40">[<expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">1</literal></expr>]</index></name> <operator pos:start="53:42" pos:end="53:42">=</operator> <name pos:start="53:44" pos:end="53:55"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:52">decorr</name><index pos:start="53:53" pos:end="53:55">[<expr pos:start="53:54" pos:end="53:54"><name pos:start="53:54" pos:end="53:54">i</name></expr>]</index></name><operator pos:start="53:56" pos:end="53:56">.</operator><name pos:start="53:57" pos:end="53:67"><name pos:start="53:57" pos:end="53:64">samplesA</name><index pos:start="53:65" pos:end="53:67">[<expr pos:start="53:66" pos:end="53:66"><literal type="number" pos:start="53:66" pos:end="53:66">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:45"><expr pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:17">j</name>                        <operator pos:start="55:42" pos:end="55:42">=</operator> <literal type="number" pos:start="55:44" pos:end="55:44">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="63:13">else <block pos:start="57:20" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:34">

                <expr_stmt pos:start="59:17" pos:end="59:47"><expr pos:start="59:17" pos:end="59:46"><name pos:start="59:17" pos:end="59:17">A</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:29">decorr</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><name pos:start="59:31" pos:end="59:31">i</name></expr>]</index></name><operator pos:start="59:33" pos:end="59:33">.</operator><name pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:41">samplesA</name><index pos:start="59:42" pos:end="59:46">[<expr pos:start="59:43" pos:end="59:45"><name pos:start="59:43" pos:end="59:45">pos</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:34"><expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">j</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <operator pos:start="61:21" pos:end="61:21">(</operator><name pos:start="61:22" pos:end="61:24">pos</name> <operator pos:start="61:26" pos:end="61:26">+</operator> <name pos:start="61:28" pos:end="61:28">t</name><operator pos:start="61:29" pos:end="61:29">)</operator> <operator pos:start="61:31" pos:end="61:31">&amp;</operator> <literal type="number" pos:start="61:33" pos:end="61:33">7</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="65:13" pos:end="71:65"><if pos:start="65:13" pos:end="67:74">if <condition pos:start="65:16" pos:end="65:43">(<expr pos:start="65:17" pos:end="65:42"><name pos:start="65:17" pos:end="65:20">type</name> <operator pos:start="65:22" pos:end="65:23">!=</operator> <name pos:start="65:25" pos:end="65:42">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:74"><block_content pos:start="67:17" pos:end="67:74">

                <expr_stmt pos:start="67:17" pos:end="67:74"><expr pos:start="67:17" pos:end="67:73"><name pos:start="67:17" pos:end="67:17">S</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:21">T</name> <operator pos:start="67:23" pos:end="67:23">+</operator> <operator pos:start="67:25" pos:end="67:25">(</operator><operator pos:start="67:26" pos:end="67:26">(</operator><name pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:27">s</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:35">decorr</name><index pos:start="67:36" pos:end="67:38">[<expr pos:start="67:37" pos:end="67:37"><name pos:start="67:37" pos:end="67:37">i</name></expr>]</index></name><operator pos:start="67:39" pos:end="67:39">.</operator><name pos:start="67:40" pos:end="67:46">weightA</name> <operator pos:start="67:48" pos:end="67:48">*</operator> <operator pos:start="67:50" pos:end="67:50">(</operator><name pos:start="67:51" pos:end="67:57">int64_t</name><operator pos:start="67:58" pos:end="67:58">)</operator><name pos:start="67:59" pos:end="67:59">A</name> <operator pos:start="67:61" pos:end="67:61">+</operator> <literal type="number" pos:start="67:63" pos:end="67:65">512</literal><operator pos:start="67:66" pos:end="67:66">)</operator> <operator pos:start="67:68" pos:end="67:69">&gt;&gt;</operator> <literal type="number" pos:start="67:71" pos:end="67:72">10</literal><operator pos:start="67:73" pos:end="67:73">)</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="69:13" pos:end="71:65">else<block type="pseudo" pos:start="71:17" pos:end="71:65"><block_content pos:start="71:17" pos:end="71:65">

                <expr_stmt pos:start="71:17" pos:end="71:65"><expr pos:start="71:17" pos:end="71:64"><name pos:start="71:17" pos:end="71:17">S</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:21">T</name> <operator pos:start="71:23" pos:end="71:23">+</operator> <operator pos:start="71:25" pos:end="71:25">(</operator><operator pos:start="71:26" pos:end="71:26">(</operator><name pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:35">decorr</name><index pos:start="71:36" pos:end="71:38">[<expr pos:start="71:37" pos:end="71:37"><name pos:start="71:37" pos:end="71:37">i</name></expr>]</index></name><operator pos:start="71:39" pos:end="71:39">.</operator><name pos:start="71:40" pos:end="71:46">weightA</name> <operator pos:start="71:48" pos:end="71:48">*</operator> <name pos:start="71:50" pos:end="71:50">A</name> <operator pos:start="71:52" pos:end="71:52">+</operator> <literal type="number" pos:start="71:54" pos:end="71:56">512</literal><operator pos:start="71:57" pos:end="71:57">)</operator> <operator pos:start="71:59" pos:end="71:60">&gt;&gt;</operator> <literal type="number" pos:start="71:62" pos:end="71:63">10</literal><operator pos:start="71:64" pos:end="71:64">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="73:13" pos:end="75:89"><if pos:start="73:13" pos:end="75:89">if <condition pos:start="73:16" pos:end="73:23">(<expr pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:17">A</name> <operator pos:start="73:19" pos:end="73:20">&amp;&amp;</operator> <name pos:start="73:22" pos:end="73:22">T</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:89"><block_content pos:start="75:17" pos:end="75:89">

                <expr_stmt pos:start="75:17" pos:end="75:89"><expr pos:start="75:17" pos:end="75:88"><name pos:start="75:17" pos:end="75:28"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:25">decorr</name><index pos:start="75:26" pos:end="75:28">[<expr pos:start="75:27" pos:end="75:27"><name pos:start="75:27" pos:end="75:27">i</name></expr>]</index></name><operator pos:start="75:29" pos:end="75:29">.</operator><name pos:start="75:30" pos:end="75:36">weightA</name> <operator pos:start="75:38" pos:end="75:39">-=</operator> <operator pos:start="75:41" pos:end="75:41">(</operator><operator pos:start="75:42" pos:end="75:42">(</operator><operator pos:start="75:43" pos:end="75:43">(</operator><operator pos:start="75:44" pos:end="75:44">(</operator><name pos:start="75:45" pos:end="75:45">T</name> <operator pos:start="75:47" pos:end="75:47">^</operator> <name pos:start="75:49" pos:end="75:49">A</name><operator pos:start="75:50" pos:end="75:50">)</operator> <operator pos:start="75:52" pos:end="75:53">&gt;&gt;</operator> <literal type="number" pos:start="75:55" pos:end="75:56">30</literal><operator pos:start="75:57" pos:end="75:57">)</operator> <operator pos:start="75:59" pos:end="75:59">&amp;</operator> <literal type="number" pos:start="75:61" pos:end="75:61">2</literal><operator pos:start="75:62" pos:end="75:62">)</operator> <operator pos:start="75:64" pos:end="75:64">-</operator> <literal type="number" pos:start="75:66" pos:end="75:66">1</literal><operator pos:start="75:67" pos:end="75:67">)</operator> <operator pos:start="75:69" pos:end="75:69">*</operator> <name pos:start="75:71" pos:end="75:82"><name pos:start="75:71" pos:end="75:71">s</name><operator pos:start="75:72" pos:end="75:73">-&gt;</operator><name pos:start="75:74" pos:end="75:79">decorr</name><index pos:start="75:80" pos:end="75:82">[<expr pos:start="75:81" pos:end="75:81"><name pos:start="75:81" pos:end="75:81">i</name></expr>]</index></name><operator pos:start="75:83" pos:end="75:83">.</operator><name pos:start="75:84" pos:end="75:88">delta</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:45"><expr pos:start="77:13" pos:end="77:44"><name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:21">decorr</name><index pos:start="77:22" pos:end="77:24">[<expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">i</name></expr>]</index></name><operator pos:start="77:25" pos:end="77:25">.</operator><name pos:start="77:26" pos:end="77:36"><name pos:start="77:26" pos:end="77:33">samplesA</name><index pos:start="77:34" pos:end="77:36">[<expr pos:start="77:35" pos:end="77:35"><name pos:start="77:35" pos:end="77:35">j</name></expr>]</index></name> <operator pos:start="77:38" pos:end="77:38">=</operator> <name pos:start="77:40" pos:end="77:40">T</name> <operator pos:start="77:42" pos:end="77:42">=</operator> <name pos:start="77:44" pos:end="77:44">S</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:11">pos</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <operator pos:start="81:15" pos:end="81:15">(</operator><name pos:start="81:16" pos:end="81:18">pos</name> <operator pos:start="81:20" pos:end="81:20">+</operator> <literal type="number" pos:start="81:22" pos:end="81:22">1</literal><operator pos:start="81:23" pos:end="81:23">)</operator> <operator pos:start="81:25" pos:end="81:25">&amp;</operator> <literal type="number" pos:start="81:27" pos:end="81:27">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:26"><expr pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:11">crc</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:17">crc</name> <operator pos:start="83:19" pos:end="83:19">*</operator> <literal type="number" pos:start="83:21" pos:end="83:23">3</literal> <operator pos:start="83:23" pos:end="83:23">+</operator> <name pos:start="83:25" pos:end="83:25">S</name></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="99:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:39">(<expr pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:16">type</name> <operator pos:start="87:18" pos:end="87:19">==</operator> <name pos:start="87:21" pos:end="87:38">AV_SAMPLE_FMT_FLTP</name></expr>)</condition> <block pos:start="87:41" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:65">

            <expr_stmt pos:start="89:13" pos:end="89:65"><expr pos:start="89:13" pos:end="89:64"><operator pos:start="89:13" pos:end="89:13">*</operator><name pos:start="89:14" pos:end="89:18">dstfl</name><operator pos:start="89:19" pos:end="89:20">++</operator> <operator pos:start="89:22" pos:end="89:22">=</operator> <call pos:start="89:24" pos:end="89:64"><name pos:start="89:24" pos:end="89:41">wv_get_value_float</name><argument_list pos:start="89:42" pos:end="89:64">(<argument pos:start="89:43" pos:end="89:43"><expr pos:start="89:43" pos:end="89:43"><name pos:start="89:43" pos:end="89:43">s</name></expr></argument>, <argument pos:start="89:46" pos:end="89:60"><expr pos:start="89:46" pos:end="89:60"><operator pos:start="89:46" pos:end="89:46">&amp;</operator><name pos:start="89:47" pos:end="89:60">crc_extra_bits</name></expr></argument>, <argument pos:start="89:63" pos:end="89:63"><expr pos:start="89:63" pos:end="89:63"><name pos:start="89:63" pos:end="89:63">S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="91:11" pos:end="95:9">else if <condition pos:start="91:19" pos:end="91:46">(<expr pos:start="91:20" pos:end="91:45"><name pos:start="91:20" pos:end="91:23">type</name> <operator pos:start="91:25" pos:end="91:26">==</operator> <name pos:start="91:28" pos:end="91:45">AV_SAMPLE_FMT_S32P</name></expr>)</condition> <block pos:start="91:48" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:67">

            <expr_stmt pos:start="93:13" pos:end="93:67"><expr pos:start="93:13" pos:end="93:66"><operator pos:start="93:13" pos:end="93:13">*</operator><name pos:start="93:14" pos:end="93:18">dst32</name><operator pos:start="93:19" pos:end="93:20">++</operator> <operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:66"><name pos:start="93:24" pos:end="93:43">wv_get_value_integer</name><argument_list pos:start="93:44" pos:end="93:66">(<argument pos:start="93:45" pos:end="93:45"><expr pos:start="93:45" pos:end="93:45"><name pos:start="93:45" pos:end="93:45">s</name></expr></argument>, <argument pos:start="93:48" pos:end="93:62"><expr pos:start="93:48" pos:end="93:62"><operator pos:start="93:48" pos:end="93:48">&amp;</operator><name pos:start="93:49" pos:end="93:62">crc_extra_bits</name></expr></argument>, <argument pos:start="93:65" pos:end="93:65"><expr pos:start="93:65" pos:end="93:65"><name pos:start="93:65" pos:end="93:65">S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="99:9">else <block pos:start="95:16" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:67">

            <expr_stmt pos:start="97:13" pos:end="97:67"><expr pos:start="97:13" pos:end="97:66"><operator pos:start="97:13" pos:end="97:13">*</operator><name pos:start="97:14" pos:end="97:18">dst16</name><operator pos:start="97:19" pos:end="97:20">++</operator> <operator pos:start="97:22" pos:end="97:22">=</operator> <call pos:start="97:24" pos:end="97:66"><name pos:start="97:24" pos:end="97:43">wv_get_value_integer</name><argument_list pos:start="97:44" pos:end="97:66">(<argument pos:start="97:45" pos:end="97:45"><expr pos:start="97:45" pos:end="97:45"><name pos:start="97:45" pos:end="97:45">s</name></expr></argument>, <argument pos:start="97:48" pos:end="97:62"><expr pos:start="97:48" pos:end="97:62"><operator pos:start="97:48" pos:end="97:48">&amp;</operator><name pos:start="97:49" pos:end="97:62">crc_extra_bits</name></expr></argument>, <argument pos:start="97:65" pos:end="97:65"><expr pos:start="97:65" pos:end="97:65"><name pos:start="97:65" pos:end="97:65">S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:16"><expr pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:13">count</name><operator pos:start="101:14" pos:end="101:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="103:13" pos:end="103:41">(<expr pos:start="103:14" pos:end="103:40"><operator pos:start="103:14" pos:end="103:14">!</operator><name pos:start="103:15" pos:end="103:18">last</name> <operator pos:start="103:20" pos:end="103:21">&amp;&amp;</operator> <name pos:start="103:23" pos:end="103:27">count</name> <operator pos:start="103:29" pos:end="103:29">&lt;</operator> <name pos:start="103:31" pos:end="103:40"><name pos:start="103:31" pos:end="103:31">s</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:40">samples</name></name></expr>)</condition>;</do>



    <expr_stmt pos:start="107:5" pos:end="107:30"><expr pos:start="107:5" pos:end="107:29"><call pos:start="107:5" pos:end="107:29"><name pos:start="107:5" pos:end="107:26">wv_reset_saved_context</name><argument_list pos:start="107:27" pos:end="107:29">(<argument pos:start="107:28" pos:end="107:28"><expr pos:start="107:28" pos:end="107:28"><name pos:start="107:28" pos:end="107:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="111:35">(<expr pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:12">last</name> <operator pos:start="111:14" pos:end="111:15">&amp;&amp;</operator> <name pos:start="111:17" pos:end="111:21">count</name> <operator pos:start="111:23" pos:end="111:23">&lt;</operator> <name pos:start="111:25" pos:end="111:34"><name pos:start="111:25" pos:end="111:25">s</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:34">samples</name></name></expr>)</condition> <block pos:start="111:37" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:71">

        <decl_stmt pos:start="113:9" pos:end="113:49"><decl pos:start="113:9" pos:end="113:48"><type pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">int</name></type> <name pos:start="113:13" pos:end="113:16">size</name> <init pos:start="113:18" pos:end="113:48">= <expr pos:start="113:20" pos:end="113:48"><call pos:start="113:20" pos:end="113:48"><name pos:start="113:20" pos:end="113:42">av_get_bytes_per_sample</name><argument_list pos:start="113:43" pos:end="113:48">(<argument pos:start="113:44" pos:end="113:47"><expr pos:start="113:44" pos:end="113:47"><name pos:start="113:44" pos:end="113:47">type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:71"><expr pos:start="115:9" pos:end="115:70"><call pos:start="115:9" pos:end="115:70"><name pos:start="115:9" pos:end="115:14">memset</name><argument_list pos:start="115:15" pos:end="115:70">(<argument pos:start="115:16" pos:end="115:41"><expr pos:start="115:16" pos:end="115:41"><operator pos:start="115:16" pos:end="115:16">(</operator><name pos:start="115:17" pos:end="115:23">uint8_t</name><operator pos:start="115:24" pos:end="115:24">*</operator><operator pos:start="115:25" pos:end="115:25">)</operator><name pos:start="115:26" pos:end="115:28">dst</name> <operator pos:start="115:30" pos:end="115:30">+</operator> <name pos:start="115:32" pos:end="115:36">count</name><operator pos:start="115:37" pos:end="115:37">*</operator><name pos:start="115:38" pos:end="115:41">size</name></expr></argument>, <argument pos:start="115:44" pos:end="115:44"><expr pos:start="115:44" pos:end="115:44"><literal type="number" pos:start="115:44" pos:end="115:44">0</literal></expr></argument>, <argument pos:start="115:47" pos:end="115:69"><expr pos:start="115:47" pos:end="115:69"><operator pos:start="115:47" pos:end="115:47">(</operator><name pos:start="115:48" pos:end="115:57"><name pos:start="115:48" pos:end="115:48">s</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:57">samples</name></name><operator pos:start="115:58" pos:end="115:58">-</operator><name pos:start="115:59" pos:end="115:63">count</name><operator pos:start="115:64" pos:end="115:64">)</operator><operator pos:start="115:65" pos:end="115:65">*</operator><name pos:start="115:66" pos:end="115:69">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="129:5"><if pos:start="121:5" pos:end="129:5">if <condition pos:start="121:8" pos:end="121:51">(<expr pos:start="121:9" pos:end="121:50"><name pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:16">avctx</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:33">err_recognition</name></name> <operator pos:start="121:35" pos:end="121:35">&amp;</operator> <name pos:start="121:37" pos:end="121:50">AV_EF_CRCCHECK</name></expr>)</condition> <block pos:start="121:53" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:23">

        <decl_stmt pos:start="123:9" pos:end="123:55"><decl pos:start="123:9" pos:end="123:54"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:15">ret</name> <init pos:start="123:17" pos:end="123:54">= <expr pos:start="123:19" pos:end="123:54"><call pos:start="123:19" pos:end="123:54"><name pos:start="123:19" pos:end="123:30">wv_check_crc</name><argument_list pos:start="123:31" pos:end="123:54">(<argument pos:start="123:32" pos:end="123:32"><expr pos:start="123:32" pos:end="123:32"><name pos:start="123:32" pos:end="123:32">s</name></expr></argument>, <argument pos:start="123:35" pos:end="123:37"><expr pos:start="123:35" pos:end="123:37"><name pos:start="123:35" pos:end="123:37">crc</name></expr></argument>, <argument pos:start="123:40" pos:end="123:53"><expr pos:start="123:40" pos:end="123:53"><name pos:start="123:40" pos:end="123:53">crc_extra_bits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="125:9" pos:end="127:23"><if pos:start="125:9" pos:end="127:23">if <condition pos:start="125:12" pos:end="125:65">(<expr pos:start="125:13" pos:end="125:64"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">&lt;</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal> <operator pos:start="125:21" pos:end="125:22">&amp;&amp;</operator> <name pos:start="125:24" pos:end="125:48"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:31">avctx</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:48">err_recognition</name></name> <operator pos:start="125:50" pos:end="125:50">&amp;</operator> <name pos:start="125:52" pos:end="125:64">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:23"><block_content pos:start="127:13" pos:end="127:23">

            <return pos:start="127:13" pos:end="127:23">return <expr pos:start="127:20" pos:end="127:22"><name pos:start="127:20" pos:end="127:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
