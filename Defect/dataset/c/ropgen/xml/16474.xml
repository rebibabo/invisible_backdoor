<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16474.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">seg_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="253:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SegmentContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">seg</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVDictionary</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:25">options</name> <init pos:start="9:27" pos:end="9:32">= <expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">seg</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:22">segment_count</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:43"><if pos:start="17:5" pos:end="19:43">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:34"><name pos:start="17:10" pos:end="17:12">seg</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:34">write_header_trailer</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:43"><block_content pos:start="19:9" pos:end="19:43">

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:11">seg</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:38">individual_header_trailer</name></name> <operator pos:start="19:40" pos:end="19:40">=</operator> <literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:67">(<expr pos:start="23:9" pos:end="23:66"><operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">!</operator><name pos:start="23:11" pos:end="23:23"><name pos:start="23:11" pos:end="23:13">seg</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:23">time_str</name></name> <operator pos:start="23:25" pos:end="23:25">+</operator> <operator pos:start="23:27" pos:end="23:27">!</operator><operator pos:start="23:28" pos:end="23:28">!</operator><name pos:start="23:29" pos:end="23:42"><name pos:start="23:29" pos:end="23:31">seg</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:42">times_str</name></name> <operator pos:start="23:44" pos:end="23:44">+</operator> <operator pos:start="23:46" pos:end="23:46">!</operator><operator pos:start="23:47" pos:end="23:47">!</operator><name pos:start="23:48" pos:end="23:62"><name pos:start="23:48" pos:end="23:50">seg</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:62">frames_str</name></name> <operator pos:start="23:64" pos:end="23:64">&gt;</operator> <literal type="number" pos:start="23:66" pos:end="23:66">1</literal></expr>)</condition> <block pos:start="23:69" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:31">

        <expr_stmt pos:start="25:9" pos:end="29:68"><expr pos:start="25:9" pos:end="29:67"><call pos:start="25:9" pos:end="29:67"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="29:67">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">s</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="27:16" pos:end="29:66"><expr pos:start="27:16" pos:end="29:66"><literal type="string" pos:start="27:16" pos:end="27:73">"segment_time, segment_times, and segment_frames options "</literal>

               <literal type="string" pos:start="29:16" pos:end="29:66">"are mutually exclusive, select just one of them\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="69:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">seg</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:22">times_str</name></name></expr>)</condition> <block pos:start="37:25" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:23">

        <if_stmt pos:start="39:9" pos:end="41:23"><if pos:start="39:9" pos:end="41:23">if <condition pos:start="39:12" pos:end="39:84">(<expr pos:start="39:13" pos:end="39:83"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:78"><name pos:start="39:20" pos:end="39:30">parse_times</name><argument_list pos:start="39:31" pos:end="39:78">(<argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">s</name></expr></argument>, <argument pos:start="39:35" pos:end="39:45"><expr pos:start="39:35" pos:end="39:45"><operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:45"><name pos:start="39:36" pos:end="39:38">seg</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:45">times</name></name></expr></argument>, <argument pos:start="39:48" pos:end="39:61"><expr pos:start="39:48" pos:end="39:61"><operator pos:start="39:48" pos:end="39:48">&amp;</operator><name pos:start="39:49" pos:end="39:61"><name pos:start="39:49" pos:end="39:51">seg</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:61">nb_times</name></name></expr></argument>, <argument pos:start="39:64" pos:end="39:77"><expr pos:start="39:64" pos:end="39:77"><name pos:start="39:64" pos:end="39:77"><name pos:start="39:64" pos:end="39:66">seg</name><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:77">times_str</name></name></expr></argument>)</argument_list></call><operator pos:start="39:79" pos:end="39:79">)</operator> <operator pos:start="39:81" pos:end="39:81">&lt;</operator> <literal type="number" pos:start="39:83" pos:end="39:83">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="49:5">else if <condition pos:start="43:15" pos:end="43:31">(<expr pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:18">seg</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:30">frames_str</name></name></expr>)</condition> <block pos:start="43:33" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:23">

        <if_stmt pos:start="45:9" pos:end="47:23"><if pos:start="45:9" pos:end="47:23">if <condition pos:start="45:12" pos:end="45:88">(<expr pos:start="45:13" pos:end="45:87"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:16">ret</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:82"><name pos:start="45:20" pos:end="45:31">parse_frames</name><argument_list pos:start="45:32" pos:end="45:82">(<argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><name pos:start="45:33" pos:end="45:33">s</name></expr></argument>, <argument pos:start="45:36" pos:end="45:47"><expr pos:start="45:36" pos:end="45:47"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:47"><name pos:start="45:37" pos:end="45:39">seg</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:47">frames</name></name></expr></argument>, <argument pos:start="45:50" pos:end="45:64"><expr pos:start="45:50" pos:end="45:64"><operator pos:start="45:50" pos:end="45:50">&amp;</operator><name pos:start="45:51" pos:end="45:64"><name pos:start="45:51" pos:end="45:53">seg</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:64">nb_frames</name></name></expr></argument>, <argument pos:start="45:67" pos:end="45:81"><expr pos:start="45:67" pos:end="45:81"><name pos:start="45:67" pos:end="45:81"><name pos:start="45:67" pos:end="45:69">seg</name><operator pos:start="45:70" pos:end="45:71">-&gt;</operator><name pos:start="45:72" pos:end="45:81">frames_str</name></name></expr></argument>)</argument_list></call><operator pos:start="45:83" pos:end="45:83">)</operator> <operator pos:start="45:85" pos:end="45:85">&lt;</operator> <literal type="number" pos:start="45:87" pos:end="45:87">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:23"><block_content pos:start="47:13" pos:end="47:23">

            <return pos:start="47:13" pos:end="47:23">return <expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="69:5">else <block pos:start="49:12" pos:end="69:5">{<block_content pos:start="53:9" pos:end="67:9">

        <comment type="block" pos:start="51:9" pos:end="51:48">/* set default value if not specified */</comment>

        <if_stmt pos:start="53:9" pos:end="55:43"><if pos:start="53:9" pos:end="55:43">if <condition pos:start="53:12" pos:end="53:27">(<expr pos:start="53:13" pos:end="53:26"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:16">seg</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:26">time_str</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:43"><block_content pos:start="55:13" pos:end="55:43">

            <expr_stmt pos:start="55:13" pos:end="55:43"><expr pos:start="55:13" pos:end="55:42"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">seg</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:25">time_str</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <call pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:37">av_strdup</name><argument_list pos:start="55:38" pos:end="55:42">(<argument pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><literal type="string" pos:start="55:39" pos:end="55:41">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:68">(<expr pos:start="57:13" pos:end="57:67"><operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:16">ret</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:62"><name pos:start="57:20" pos:end="57:32">av_parse_time</name><argument_list pos:start="57:33" pos:end="57:62">(<argument pos:start="57:34" pos:end="57:43"><expr pos:start="57:34" pos:end="57:43"><operator pos:start="57:34" pos:end="57:34">&amp;</operator><name pos:start="57:35" pos:end="57:43"><name pos:start="57:35" pos:end="57:37">seg</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:43">time</name></name></expr></argument>, <argument pos:start="57:46" pos:end="57:58"><expr pos:start="57:46" pos:end="57:58"><name pos:start="57:46" pos:end="57:58"><name pos:start="57:46" pos:end="57:48">seg</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:58">time_str</name></name></expr></argument>, <argument pos:start="57:61" pos:end="57:61"><expr pos:start="57:61" pos:end="57:61"><literal type="number" pos:start="57:61" pos:end="57:61">1</literal></expr></argument>)</argument_list></call><operator pos:start="57:63" pos:end="57:63">)</operator> <operator pos:start="57:65" pos:end="57:65">&lt;</operator> <literal type="number" pos:start="57:67" pos:end="57:67">0</literal></expr>)</condition> <block pos:start="57:70" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:23">

            <expr_stmt pos:start="59:13" pos:end="63:34"><expr pos:start="59:13" pos:end="63:33"><call pos:start="59:13" pos:end="63:33"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="63:33">(<argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">s</name></expr></argument>, <argument pos:start="59:23" pos:end="59:34"><expr pos:start="59:23" pos:end="59:34"><name pos:start="59:23" pos:end="59:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="61:20" pos:end="61:87"><expr pos:start="61:20" pos:end="61:87"><literal type="string" pos:start="61:20" pos:end="61:87">"Invalid time duration specification '%s' for segment_time option\n"</literal></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:32"><expr pos:start="63:20" pos:end="63:32"><name pos:start="63:20" pos:end="63:32"><name pos:start="63:20" pos:end="63:22">seg</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:32">time_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="73:5" pos:end="87:5"><if pos:start="73:5" pos:end="87:5">if <condition pos:start="73:8" pos:end="73:32">(<expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:11">seg</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:31">format_options_str</name></name></expr>)</condition> <block pos:start="73:34" pos:end="87:5">{<block_content pos:start="75:9" pos:end="85:9">

        <expr_stmt pos:start="75:9" pos:end="75:95"><expr pos:start="75:9" pos:end="75:94"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:94"><name pos:start="75:15" pos:end="75:34">av_dict_parse_string</name><argument_list pos:start="75:35" pos:end="75:94">(<argument pos:start="75:36" pos:end="75:55"><expr pos:start="75:36" pos:end="75:55"><operator pos:start="75:36" pos:end="75:36">&amp;</operator><name pos:start="75:37" pos:end="75:55"><name pos:start="75:37" pos:end="75:39">seg</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:55">format_options</name></name></expr></argument>, <argument pos:start="75:58" pos:end="75:80"><expr pos:start="75:58" pos:end="75:80"><name pos:start="75:58" pos:end="75:80"><name pos:start="75:58" pos:end="75:60">seg</name><operator pos:start="75:61" pos:end="75:62">-&gt;</operator><name pos:start="75:63" pos:end="75:80">format_options_str</name></name></expr></argument>, <argument pos:start="75:83" pos:end="75:85"><expr pos:start="75:83" pos:end="75:85"><literal type="string" pos:start="75:83" pos:end="75:85">"="</literal></expr></argument>, <argument pos:start="75:88" pos:end="75:90"><expr pos:start="75:88" pos:end="75:90"><literal type="string" pos:start="75:88" pos:end="75:90">":"</literal></expr></argument>, <argument pos:start="75:93" pos:end="75:93"><expr pos:start="75:93" pos:end="75:93"><literal type="number" pos:start="75:93" pos:end="75:93">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="85:9"><if pos:start="77:9" pos:end="85:9">if <condition pos:start="77:12" pos:end="77:20">(<expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">&lt;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>)</condition> <block pos:start="77:22" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:22">

            <expr_stmt pos:start="79:13" pos:end="81:44"><expr pos:start="79:13" pos:end="81:43"><call pos:start="79:13" pos:end="81:43"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="81:43">(<argument pos:start="79:20" pos:end="79:20"><expr pos:start="79:20" pos:end="79:20"><name pos:start="79:20" pos:end="79:20">s</name></expr></argument>, <argument pos:start="79:23" pos:end="79:34"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:37" pos:end="79:80"><expr pos:start="79:37" pos:end="79:80"><literal type="string" pos:start="79:37" pos:end="79:80">"Could not parse format options list '%s'\n"</literal></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:42"><expr pos:start="81:20" pos:end="81:42"><name pos:start="81:20" pos:end="81:42"><name pos:start="81:20" pos:end="81:22">seg</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:42">format_options_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="83:13" pos:end="83:22">goto <name pos:start="83:18" pos:end="83:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="111:5"><if pos:start="91:5" pos:end="111:5">if <condition pos:start="91:8" pos:end="91:18">(<expr pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:11">seg</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">list</name></name></expr>)</condition> <block pos:start="91:20" pos:end="111:5">{<block_content pos:start="93:9" pos:end="109:22">

        <if_stmt pos:start="93:9" pos:end="105:9"><if pos:start="93:9" pos:end="105:9">if <condition pos:start="93:12" pos:end="93:50">(<expr pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:15">seg</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:26">list_type</name></name> <operator pos:start="93:28" pos:end="93:29">==</operator> <name pos:start="93:31" pos:end="93:49">LIST_TYPE_UNDEFINED</name></expr>)</condition> <block pos:start="93:52" pos:end="105:9">{<block_content pos:start="95:13" pos:end="103:86">

            <if_stmt pos:start="95:13" pos:end="103:86"><if pos:start="95:13" pos:end="95:85">if      <condition pos:start="95:21" pos:end="95:53">(<expr pos:start="95:22" pos:end="95:52"><call pos:start="95:22" pos:end="95:52"><name pos:start="95:22" pos:end="95:33">av_match_ext</name><argument_list pos:start="95:34" pos:end="95:52">(<argument pos:start="95:35" pos:end="95:43"><expr pos:start="95:35" pos:end="95:43"><name pos:start="95:35" pos:end="95:43"><name pos:start="95:35" pos:end="95:37">seg</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:43">list</name></name></expr></argument>, <argument pos:start="95:46" pos:end="95:50"><expr pos:start="95:46" pos:end="95:50"><literal type="string" pos:start="95:46" pos:end="95:50">"csv"</literal></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:55" pos:end="95:85"><block_content pos:start="95:55" pos:end="95:85"> <expr_stmt pos:start="95:55" pos:end="95:85"><expr pos:start="95:55" pos:end="95:84"><name pos:start="95:55" pos:end="95:68"><name pos:start="95:55" pos:end="95:57">seg</name><operator pos:start="95:58" pos:end="95:59">-&gt;</operator><name pos:start="95:60" pos:end="95:68">list_type</name></name> <operator pos:start="95:70" pos:end="95:70">=</operator> <name pos:start="95:72" pos:end="95:84">LIST_TYPE_CSV</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="97:13" pos:end="97:85">else if <condition pos:start="97:21" pos:end="97:53">(<expr pos:start="97:22" pos:end="97:52"><call pos:start="97:22" pos:end="97:52"><name pos:start="97:22" pos:end="97:33">av_match_ext</name><argument_list pos:start="97:34" pos:end="97:52">(<argument pos:start="97:35" pos:end="97:43"><expr pos:start="97:35" pos:end="97:43"><name pos:start="97:35" pos:end="97:43"><name pos:start="97:35" pos:end="97:37">seg</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:43">list</name></name></expr></argument>, <argument pos:start="97:46" pos:end="97:50"><expr pos:start="97:46" pos:end="97:50"><literal type="string" pos:start="97:46" pos:end="97:50">"ext"</literal></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:55" pos:end="97:85"><block_content pos:start="97:55" pos:end="97:85"> <expr_stmt pos:start="97:55" pos:end="97:85"><expr pos:start="97:55" pos:end="97:84"><name pos:start="97:55" pos:end="97:68"><name pos:start="97:55" pos:end="97:57">seg</name><operator pos:start="97:58" pos:end="97:59">-&gt;</operator><name pos:start="97:60" pos:end="97:68">list_type</name></name> <operator pos:start="97:70" pos:end="97:70">=</operator> <name pos:start="97:72" pos:end="97:84">LIST_TYPE_EXT</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="99:13" pos:end="99:86">else if <condition pos:start="99:21" pos:end="99:53">(<expr pos:start="99:22" pos:end="99:52"><call pos:start="99:22" pos:end="99:52"><name pos:start="99:22" pos:end="99:33">av_match_ext</name><argument_list pos:start="99:34" pos:end="99:52">(<argument pos:start="99:35" pos:end="99:43"><expr pos:start="99:35" pos:end="99:43"><name pos:start="99:35" pos:end="99:43"><name pos:start="99:35" pos:end="99:37">seg</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:43">list</name></name></expr></argument>, <argument pos:start="99:46" pos:end="99:51"><expr pos:start="99:46" pos:end="99:51"><literal type="string" pos:start="99:46" pos:end="99:51">"m3u8"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:55" pos:end="99:86"><block_content pos:start="99:55" pos:end="99:86"> <expr_stmt pos:start="99:55" pos:end="99:86"><expr pos:start="99:55" pos:end="99:85"><name pos:start="99:55" pos:end="99:68"><name pos:start="99:55" pos:end="99:57">seg</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:68">list_type</name></name> <operator pos:start="99:70" pos:end="99:70">=</operator> <name pos:start="99:72" pos:end="99:85">LIST_TYPE_M3U8</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="101:13" pos:end="101:100">else if <condition pos:start="101:21" pos:end="101:63">(<expr pos:start="101:22" pos:end="101:62"><call pos:start="101:22" pos:end="101:62"><name pos:start="101:22" pos:end="101:33">av_match_ext</name><argument_list pos:start="101:34" pos:end="101:62">(<argument pos:start="101:35" pos:end="101:43"><expr pos:start="101:35" pos:end="101:43"><name pos:start="101:35" pos:end="101:43"><name pos:start="101:35" pos:end="101:37">seg</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:43">list</name></name></expr></argument>, <argument pos:start="101:46" pos:end="101:61"><expr pos:start="101:46" pos:end="101:61"><literal type="string" pos:start="101:46" pos:end="101:61">"ffcat,ffconcat"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="101:65" pos:end="101:100"><block_content pos:start="101:65" pos:end="101:100"> <expr_stmt pos:start="101:65" pos:end="101:100"><expr pos:start="101:65" pos:end="101:99"><name pos:start="101:65" pos:end="101:78"><name pos:start="101:65" pos:end="101:67">seg</name><operator pos:start="101:68" pos:end="101:69">-&gt;</operator><name pos:start="101:70" pos:end="101:78">list_type</name></name> <operator pos:start="101:80" pos:end="101:80">=</operator> <name pos:start="101:82" pos:end="101:99">LIST_TYPE_FFCONCAT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="103:13" pos:end="103:86">else<block type="pseudo" pos:start="103:55" pos:end="103:86"><block_content pos:start="103:55" pos:end="103:86">                                      <expr_stmt pos:start="103:55" pos:end="103:86"><expr pos:start="103:55" pos:end="103:85"><name pos:start="103:55" pos:end="103:68"><name pos:start="103:55" pos:end="103:57">seg</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:68">list_type</name></name> <operator pos:start="103:70" pos:end="103:70">=</operator> <name pos:start="103:72" pos:end="103:85">LIST_TYPE_FLAT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="109:22"><if pos:start="107:9" pos:end="109:22">if <condition pos:start="107:12" pos:end="107:45">(<expr pos:start="107:13" pos:end="107:44"><operator pos:start="107:13" pos:end="107:13">(</operator><name pos:start="107:14" pos:end="107:16">ret</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <call pos:start="107:20" pos:end="107:39"><name pos:start="107:20" pos:end="107:36">segment_list_open</name><argument_list pos:start="107:37" pos:end="107:39">(<argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">s</name></expr></argument>)</argument_list></call><operator pos:start="107:40" pos:end="107:40">)</operator> <operator pos:start="107:42" pos:end="107:42">&lt;</operator> <literal type="number" pos:start="107:44" pos:end="107:44">0</literal></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:22"><block_content pos:start="109:13" pos:end="109:22">

            <goto pos:start="109:13" pos:end="109:22">goto <name pos:start="109:18" pos:end="109:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="115:94"><if pos:start="113:5" pos:end="115:94">if <condition pos:start="113:8" pos:end="113:40">(<expr pos:start="113:9" pos:end="113:39"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:11">seg</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:22">list_type</name></name> <operator pos:start="113:24" pos:end="113:25">==</operator> <name pos:start="113:27" pos:end="113:39">LIST_TYPE_EXT</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:94"><block_content pos:start="115:9" pos:end="115:94">

        <expr_stmt pos:start="115:9" pos:end="115:94"><expr pos:start="115:9" pos:end="115:93"><call pos:start="115:9" pos:end="115:93"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="115:93">(<argument pos:start="115:16" pos:end="115:16"><expr pos:start="115:16" pos:end="115:16"><name pos:start="115:16" pos:end="115:16">s</name></expr></argument>, <argument pos:start="115:19" pos:end="115:32"><expr pos:start="115:19" pos:end="115:32"><name pos:start="115:19" pos:end="115:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="115:35" pos:end="115:92"><expr pos:start="115:35" pos:end="115:92"><literal type="string" pos:start="115:35" pos:end="115:92">"'ext' list type option is deprecated in favor of 'csv'\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="121:18"><if pos:start="119:5" pos:end="121:18">if <condition pos:start="119:8" pos:end="119:47">(<expr pos:start="119:9" pos:end="119:46"><operator pos:start="119:9" pos:end="119:9">(</operator><name pos:start="119:10" pos:end="119:12">ret</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <call pos:start="119:16" pos:end="119:41"><name pos:start="119:16" pos:end="119:38">select_reference_stream</name><argument_list pos:start="119:39" pos:end="119:41">(<argument pos:start="119:40" pos:end="119:40"><expr pos:start="119:40" pos:end="119:40"><name pos:start="119:40" pos:end="119:40">s</name></expr></argument>)</argument_list></call><operator pos:start="119:42" pos:end="119:42">)</operator> <operator pos:start="119:44" pos:end="119:44">&lt;</operator> <literal type="number" pos:start="119:46" pos:end="119:46">0</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:18"><block_content pos:start="121:9" pos:end="121:18">

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="127:97"><expr pos:start="123:5" pos:end="127:96"><call pos:start="123:5" pos:end="127:96"><name pos:start="123:5" pos:end="123:10">av_log</name><argument_list pos:start="123:11" pos:end="127:96">(<argument pos:start="123:12" pos:end="123:12"><expr pos:start="123:12" pos:end="123:12"><name pos:start="123:12" pos:end="123:12">s</name></expr></argument>, <argument pos:start="123:15" pos:end="123:28"><expr pos:start="123:15" pos:end="123:28"><name pos:start="123:15" pos:end="123:28">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="123:31" pos:end="123:63"><expr pos:start="123:31" pos:end="123:63"><literal type="string" pos:start="123:31" pos:end="123:63">"Selected stream id:%d type:%s\n"</literal></expr></argument>,

           <argument pos:start="125:12" pos:end="125:38"><expr pos:start="125:12" pos:end="125:38"><name pos:start="125:12" pos:end="125:38"><name pos:start="125:12" pos:end="125:14">seg</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:38">reference_stream_index</name></name></expr></argument>,

           <argument pos:start="127:12" pos:end="127:95"><expr pos:start="127:12" pos:end="127:95"><call pos:start="127:12" pos:end="127:95"><name pos:start="127:12" pos:end="127:35">av_get_media_type_string</name><argument_list pos:start="127:36" pos:end="127:95">(<argument pos:start="127:37" pos:end="127:94"><expr pos:start="127:37" pos:end="127:94"><name pos:start="127:37" pos:end="127:75"><name pos:start="127:37" pos:end="127:37">s</name><operator pos:start="127:38" pos:end="127:39">-&gt;</operator><name pos:start="127:40" pos:end="127:46">streams</name><index pos:start="127:47" pos:end="127:75">[<expr pos:start="127:48" pos:end="127:74"><name pos:start="127:48" pos:end="127:74"><name pos:start="127:48" pos:end="127:50">seg</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:74">reference_stream_index</name></name></expr>]</index></name><operator pos:start="127:76" pos:end="127:77">-&gt;</operator><name pos:start="127:78" pos:end="127:94"><name pos:start="127:78" pos:end="127:82">codec</name><operator pos:start="127:83" pos:end="127:84">-&gt;</operator><name pos:start="127:85" pos:end="127:94">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:67"><expr pos:start="131:5" pos:end="131:66"><name pos:start="131:5" pos:end="131:16"><name pos:start="131:5" pos:end="131:7">seg</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:16">oformat</name></name> <operator pos:start="131:18" pos:end="131:18">=</operator> <call pos:start="131:20" pos:end="131:66"><name pos:start="131:20" pos:end="131:34">av_guess_format</name><argument_list pos:start="131:35" pos:end="131:66">(<argument pos:start="131:36" pos:end="131:46"><expr pos:start="131:36" pos:end="131:46"><name pos:start="131:36" pos:end="131:46"><name pos:start="131:36" pos:end="131:38">seg</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:46">format</name></name></expr></argument>, <argument pos:start="131:49" pos:end="131:59"><expr pos:start="131:49" pos:end="131:59"><name pos:start="131:49" pos:end="131:59"><name pos:start="131:49" pos:end="131:49">s</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:59">filename</name></name></expr></argument>, <argument pos:start="131:62" pos:end="131:65"><expr pos:start="131:62" pos:end="131:65"><name pos:start="131:62" pos:end="131:65">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="135:5" pos:end="141:5"><if pos:start="135:5" pos:end="141:5">if <condition pos:start="135:8" pos:end="135:22">(<expr pos:start="135:9" pos:end="135:21"><operator pos:start="135:9" pos:end="135:9">!</operator><name pos:start="135:10" pos:end="135:21"><name pos:start="135:10" pos:end="135:12">seg</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:21">oformat</name></name></expr>)</condition> <block pos:start="135:24" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:18">

        <expr_stmt pos:start="137:9" pos:end="137:38"><expr pos:start="137:9" pos:end="137:37"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <name pos:start="137:15" pos:end="137:37">AVERROR_MUXER_NOT_FOUND</name></expr>;</expr_stmt>

        <goto pos:start="139:9" pos:end="139:18">goto <name pos:start="139:14" pos:end="139:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="143:5" pos:end="153:5"><if pos:start="143:5" pos:end="153:5">if <condition pos:start="143:8" pos:end="143:43">(<expr pos:start="143:9" pos:end="143:42"><name pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:11">seg</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:20">oformat</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:27">flags</name></name> <operator pos:start="143:29" pos:end="143:29">&amp;</operator> <name pos:start="143:31" pos:end="143:42">AVFMT_NOFILE</name></expr>)</condition> <block pos:start="143:45" pos:end="153:5">{<block_content pos:start="145:9" pos:end="151:18">

        <expr_stmt pos:start="145:9" pos:end="147:35"><expr pos:start="145:9" pos:end="147:34"><call pos:start="145:9" pos:end="147:34"><name pos:start="145:9" pos:end="145:14">av_log</name><argument_list pos:start="145:15" pos:end="147:34">(<argument pos:start="145:16" pos:end="145:16"><expr pos:start="145:16" pos:end="145:16"><name pos:start="145:16" pos:end="145:16">s</name></expr></argument>, <argument pos:start="145:19" pos:end="145:30"><expr pos:start="145:19" pos:end="145:30"><name pos:start="145:19" pos:end="145:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:33" pos:end="145:60"><expr pos:start="145:33" pos:end="145:60"><literal type="string" pos:start="145:33" pos:end="145:60">"format %s not supported.\n"</literal></expr></argument>,

               <argument pos:start="147:16" pos:end="147:33"><expr pos:start="147:16" pos:end="147:33"><name pos:start="147:16" pos:end="147:33"><name pos:start="147:16" pos:end="147:18">seg</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:27">oformat</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:33">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:30"><expr pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <call pos:start="149:15" pos:end="149:29"><name pos:start="149:15" pos:end="149:21">AVERROR</name><argument_list pos:start="149:22" pos:end="149:29">(<argument pos:start="149:23" pos:end="149:28"><expr pos:start="149:23" pos:end="149:28"><name pos:start="149:23" pos:end="149:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="151:9" pos:end="151:18">goto <name pos:start="151:14" pos:end="151:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="157:5" pos:end="159:18"><if pos:start="157:5" pos:end="159:18">if <condition pos:start="157:8" pos:end="157:40">(<expr pos:start="157:9" pos:end="157:39"><operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:12">ret</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <call pos:start="157:16" pos:end="157:34"><name pos:start="157:16" pos:end="157:31">segment_mux_init</name><argument_list pos:start="157:32" pos:end="157:34">(<argument pos:start="157:33" pos:end="157:33"><expr pos:start="157:33" pos:end="157:33"><name pos:start="157:33" pos:end="157:33">s</name></expr></argument>)</argument_list></call><operator pos:start="157:35" pos:end="157:35">)</operator> <operator pos:start="157:37" pos:end="157:37">&lt;</operator> <literal type="number" pos:start="157:39" pos:end="157:39">0</literal></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:18"><block_content pos:start="159:9" pos:end="159:18">

        <goto pos:start="159:9" pos:end="159:18">goto <name pos:start="159:14" pos:end="159:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:18"><expr pos:start="161:5" pos:end="161:17"><name pos:start="161:5" pos:end="161:6">oc</name> <operator pos:start="161:8" pos:end="161:8">=</operator> <name pos:start="161:10" pos:end="161:17"><name pos:start="161:10" pos:end="161:12">seg</name><operator pos:start="161:13" pos:end="161:14">-&gt;</operator><name pos:start="161:15" pos:end="161:17">avf</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="165:5" pos:end="167:18"><if pos:start="165:5" pos:end="167:18">if <condition pos:start="165:8" pos:end="165:44">(<expr pos:start="165:9" pos:end="165:43"><operator pos:start="165:9" pos:end="165:9">(</operator><name pos:start="165:10" pos:end="165:12">ret</name> <operator pos:start="165:14" pos:end="165:14">=</operator> <call pos:start="165:16" pos:end="165:38"><name pos:start="165:16" pos:end="165:35">set_segment_filename</name><argument_list pos:start="165:36" pos:end="165:38">(<argument pos:start="165:37" pos:end="165:37"><expr pos:start="165:37" pos:end="165:37"><name pos:start="165:37" pos:end="165:37">s</name></expr></argument>)</argument_list></call><operator pos:start="165:39" pos:end="165:39">)</operator> <operator pos:start="165:41" pos:end="165:41">&lt;</operator> <literal type="number" pos:start="165:43" pos:end="165:43">0</literal></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:18"><block_content pos:start="167:9" pos:end="167:18">

        <goto pos:start="167:9" pos:end="167:18">goto <name pos:start="167:14" pos:end="167:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="171:5" pos:end="189:5"><if pos:start="171:5" pos:end="183:5">if <condition pos:start="171:8" pos:end="171:34">(<expr pos:start="171:9" pos:end="171:33"><name pos:start="171:9" pos:end="171:33"><name pos:start="171:9" pos:end="171:11">seg</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:33">write_header_trailer</name></name></expr>)</condition> <block pos:start="171:36" pos:end="183:5">{<block_content pos:start="173:9" pos:end="181:9">

        <if_stmt pos:start="173:9" pos:end="181:9"><if pos:start="173:9" pos:end="181:9">if <condition pos:start="173:12" pos:end="175:65">(<expr pos:start="173:13" pos:end="175:64"><operator pos:start="173:13" pos:end="173:13">(</operator><name pos:start="173:14" pos:end="173:16">ret</name> <operator pos:start="173:18" pos:end="173:18">=</operator> <call pos:start="173:20" pos:end="175:59"><name pos:start="173:20" pos:end="173:29">avio_open2</name><argument_list pos:start="173:30" pos:end="175:59">(<argument pos:start="173:31" pos:end="173:37"><expr pos:start="173:31" pos:end="173:37"><operator pos:start="173:31" pos:end="173:31">&amp;</operator><name pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:33">oc</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:37">pb</name></name></expr></argument>, <argument pos:start="173:40" pos:end="173:51"><expr pos:start="173:40" pos:end="173:51"><name pos:start="173:40" pos:end="173:51"><name pos:start="173:40" pos:end="173:41">oc</name><operator pos:start="173:42" pos:end="173:43">-&gt;</operator><name pos:start="173:44" pos:end="173:51">filename</name></name></expr></argument>, <argument pos:start="173:54" pos:end="173:68"><expr pos:start="173:54" pos:end="173:68"><name pos:start="173:54" pos:end="173:68">AVIO_FLAG_WRITE</name></expr></argument>,

                              <argument pos:start="175:31" pos:end="175:52"><expr pos:start="175:31" pos:end="175:52"><operator pos:start="175:31" pos:end="175:31">&amp;</operator><name pos:start="175:32" pos:end="175:52"><name pos:start="175:32" pos:end="175:32">s</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:52">interrupt_callback</name></name></expr></argument>, <argument pos:start="175:55" pos:end="175:58"><expr pos:start="175:55" pos:end="175:58"><name pos:start="175:55" pos:end="175:58">NULL</name></expr></argument>)</argument_list></call><operator pos:start="175:60" pos:end="175:60">)</operator> <operator pos:start="175:62" pos:end="175:62">&lt;</operator> <literal type="number" pos:start="175:64" pos:end="175:64">0</literal></expr>)</condition> <block pos:start="175:67" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:22">

            <expr_stmt pos:start="177:13" pos:end="177:83"><expr pos:start="177:13" pos:end="177:82"><call pos:start="177:13" pos:end="177:82"><name pos:start="177:13" pos:end="177:18">av_log</name><argument_list pos:start="177:19" pos:end="177:82">(<argument pos:start="177:20" pos:end="177:20"><expr pos:start="177:20" pos:end="177:20"><name pos:start="177:20" pos:end="177:20">s</name></expr></argument>, <argument pos:start="177:23" pos:end="177:34"><expr pos:start="177:23" pos:end="177:34"><name pos:start="177:23" pos:end="177:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:37" pos:end="177:67"><expr pos:start="177:37" pos:end="177:67"><literal type="string" pos:start="177:37" pos:end="177:67">"Failed to open segment '%s'\n"</literal></expr></argument>, <argument pos:start="177:70" pos:end="177:81"><expr pos:start="177:70" pos:end="177:81"><name pos:start="177:70" pos:end="177:81"><name pos:start="177:70" pos:end="177:71">oc</name><operator pos:start="177:72" pos:end="177:73">-&gt;</operator><name pos:start="177:74" pos:end="177:81">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="179:13" pos:end="179:22">goto <name pos:start="179:18" pos:end="179:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="183:7" pos:end="189:5">else <block pos:start="183:12" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:22">

        <if_stmt pos:start="185:9" pos:end="187:22"><if pos:start="185:9" pos:end="187:22">if <condition pos:start="185:12" pos:end="185:47">(<expr pos:start="185:13" pos:end="185:46"><operator pos:start="185:13" pos:end="185:13">(</operator><name pos:start="185:14" pos:end="185:16">ret</name> <operator pos:start="185:18" pos:end="185:18">=</operator> <call pos:start="185:20" pos:end="185:41"><name pos:start="185:20" pos:end="185:32">open_null_ctx</name><argument_list pos:start="185:33" pos:end="185:41">(<argument pos:start="185:34" pos:end="185:40"><expr pos:start="185:34" pos:end="185:40"><operator pos:start="185:34" pos:end="185:34">&amp;</operator><name pos:start="185:35" pos:end="185:40"><name pos:start="185:35" pos:end="185:36">oc</name><operator pos:start="185:37" pos:end="185:38">-&gt;</operator><name pos:start="185:39" pos:end="185:40">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="185:42" pos:end="185:42">)</operator> <operator pos:start="185:44" pos:end="185:44">&lt;</operator> <literal type="number" pos:start="185:46" pos:end="185:46">0</literal></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:22"><block_content pos:start="187:13" pos:end="187:22">

            <goto pos:start="187:13" pos:end="187:22">goto <name pos:start="187:18" pos:end="187:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:51"><expr pos:start="193:5" pos:end="193:50"><call pos:start="193:5" pos:end="193:50"><name pos:start="193:5" pos:end="193:16">av_dict_copy</name><argument_list pos:start="193:17" pos:end="193:50">(<argument pos:start="193:18" pos:end="193:25"><expr pos:start="193:18" pos:end="193:25"><operator pos:start="193:18" pos:end="193:18">&amp;</operator><name pos:start="193:19" pos:end="193:25">options</name></expr></argument>, <argument pos:start="193:28" pos:end="193:46"><expr pos:start="193:28" pos:end="193:46"><name pos:start="193:28" pos:end="193:46"><name pos:start="193:28" pos:end="193:30">seg</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:46">format_options</name></name></expr></argument>, <argument pos:start="193:49" pos:end="193:49"><expr pos:start="193:49" pos:end="193:49"><literal type="number" pos:start="193:49" pos:end="193:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:46"><expr pos:start="195:5" pos:end="195:45"><name pos:start="195:5" pos:end="195:7">ret</name> <operator pos:start="195:9" pos:end="195:9">=</operator> <call pos:start="195:11" pos:end="195:45"><name pos:start="195:11" pos:end="195:31">avformat_write_header</name><argument_list pos:start="195:32" pos:end="195:45">(<argument pos:start="195:33" pos:end="195:34"><expr pos:start="195:33" pos:end="195:34"><name pos:start="195:33" pos:end="195:34">oc</name></expr></argument>, <argument pos:start="195:37" pos:end="195:44"><expr pos:start="195:37" pos:end="195:44"><operator pos:start="195:37" pos:end="195:37">&amp;</operator><name pos:start="195:38" pos:end="195:44">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if <condition pos:start="197:8" pos:end="197:31">(<expr pos:start="197:9" pos:end="197:30"><call pos:start="197:9" pos:end="197:30"><name pos:start="197:9" pos:end="197:21">av_dict_count</name><argument_list pos:start="197:22" pos:end="197:30">(<argument pos:start="197:23" pos:end="197:29"><expr pos:start="197:23" pos:end="197:29"><name pos:start="197:23" pos:end="197:29">options</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="197:33" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:108">

        <expr_stmt pos:start="199:9" pos:end="201:108"><expr pos:start="199:9" pos:end="201:107"><call pos:start="199:9" pos:end="201:107"><name pos:start="199:9" pos:end="199:14">av_log</name><argument_list pos:start="199:15" pos:end="201:107">(<argument pos:start="199:16" pos:end="199:16"><expr pos:start="199:16" pos:end="199:16"><name pos:start="199:16" pos:end="199:16">s</name></expr></argument>, <argument pos:start="199:19" pos:end="199:30"><expr pos:start="199:19" pos:end="199:30"><name pos:start="199:19" pos:end="199:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="201:16" pos:end="201:81"><expr pos:start="201:16" pos:end="201:81"><literal type="string" pos:start="201:16" pos:end="201:81">"Some of the provided format options in '%s' are not recognized\n"</literal></expr></argument>, <argument pos:start="201:84" pos:end="201:106"><expr pos:start="201:84" pos:end="201:106"><name pos:start="201:84" pos:end="201:106"><name pos:start="201:84" pos:end="201:86">seg</name><operator pos:start="201:87" pos:end="201:88">-&gt;</operator><name pos:start="201:89" pos:end="201:106">format_options_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:27"><expr pos:start="205:5" pos:end="205:26"><call pos:start="205:5" pos:end="205:26"><name pos:start="205:5" pos:end="205:16">av_dict_free</name><argument_list pos:start="205:17" pos:end="205:26">(<argument pos:start="205:18" pos:end="205:25"><expr pos:start="205:18" pos:end="205:25"><operator pos:start="205:18" pos:end="205:18">&amp;</operator><name pos:start="205:19" pos:end="205:25">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="213:5"><if pos:start="207:5" pos:end="213:5">if <condition pos:start="207:8" pos:end="207:16">(<expr pos:start="207:9" pos:end="207:15"><name pos:start="207:9" pos:end="207:11">ret</name> <operator pos:start="207:13" pos:end="207:13">&lt;</operator> <literal type="number" pos:start="207:15" pos:end="207:15">0</literal></expr>)</condition> <block pos:start="207:18" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:18">

        <expr_stmt pos:start="209:9" pos:end="209:27"><expr pos:start="209:9" pos:end="209:26"><call pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:18">avio_close</name><argument_list pos:start="209:19" pos:end="209:26">(<argument pos:start="209:20" pos:end="209:25"><expr pos:start="209:20" pos:end="209:25"><name pos:start="209:20" pos:end="209:25"><name pos:start="209:20" pos:end="209:21">oc</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="211:9" pos:end="211:18">goto <name pos:start="211:14" pos:end="211:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:33"><expr pos:start="215:5" pos:end="215:32"><name pos:start="215:5" pos:end="215:28"><name pos:start="215:5" pos:end="215:7">seg</name><operator pos:start="215:8" pos:end="215:9">-&gt;</operator><name pos:start="215:10" pos:end="215:28">segment_frame_count</name></name> <operator pos:start="215:30" pos:end="215:30">=</operator> <literal type="number" pos:start="215:32" pos:end="215:32">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="219:5" pos:end="221:33"><if pos:start="219:5" pos:end="221:33">if <condition pos:start="219:8" pos:end="219:62">(<expr pos:start="219:9" pos:end="219:61"><name pos:start="219:9" pos:end="219:29"><name pos:start="219:9" pos:end="219:10">oc</name><operator pos:start="219:11" pos:end="219:12">-&gt;</operator><name pos:start="219:13" pos:end="219:29">avoid_negative_ts</name></name> <operator pos:start="219:31" pos:end="219:31">&gt;</operator> <literal type="number" pos:start="219:33" pos:end="219:33">0</literal> <operator pos:start="219:35" pos:end="219:36">&amp;&amp;</operator> <name pos:start="219:38" pos:end="219:57"><name pos:start="219:38" pos:end="219:38">s</name><operator pos:start="219:39" pos:end="219:40">-&gt;</operator><name pos:start="219:41" pos:end="219:57">avoid_negative_ts</name></name> <operator pos:start="219:59" pos:end="219:59">&lt;</operator> <literal type="number" pos:start="219:61" pos:end="219:61">0</literal></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:33"><block_content pos:start="221:9" pos:end="221:33">

        <expr_stmt pos:start="221:9" pos:end="221:33"><expr pos:start="221:9" pos:end="221:32"><name pos:start="221:9" pos:end="221:28"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:28">avoid_negative_ts</name></name> <operator pos:start="221:30" pos:end="221:30">=</operator> <literal type="number" pos:start="221:32" pos:end="221:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="225:5" pos:end="235:5"><if pos:start="225:5" pos:end="235:5">if <condition pos:start="225:8" pos:end="225:35">(<expr pos:start="225:9" pos:end="225:34"><operator pos:start="225:9" pos:end="225:9">!</operator><name pos:start="225:10" pos:end="225:34"><name pos:start="225:10" pos:end="225:12">seg</name><operator pos:start="225:13" pos:end="225:14">-&gt;</operator><name pos:start="225:15" pos:end="225:34">write_header_trailer</name></name></expr>)</condition> <block pos:start="225:37" pos:end="235:5">{<block_content pos:start="227:9" pos:end="233:22">

        <expr_stmt pos:start="227:9" pos:end="227:31"><expr pos:start="227:9" pos:end="227:30"><call pos:start="227:9" pos:end="227:30"><name pos:start="227:9" pos:end="227:22">close_null_ctx</name><argument_list pos:start="227:23" pos:end="227:30">(<argument pos:start="227:24" pos:end="227:29"><expr pos:start="227:24" pos:end="227:29"><name pos:start="227:24" pos:end="227:29"><name pos:start="227:24" pos:end="227:25">oc</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="233:22"><if pos:start="229:9" pos:end="233:22">if <condition pos:start="229:12" pos:end="231:65">(<expr pos:start="229:13" pos:end="231:64"><operator pos:start="229:13" pos:end="229:13">(</operator><name pos:start="229:14" pos:end="229:16">ret</name> <operator pos:start="229:18" pos:end="229:18">=</operator> <call pos:start="229:20" pos:end="231:59"><name pos:start="229:20" pos:end="229:29">avio_open2</name><argument_list pos:start="229:30" pos:end="231:59">(<argument pos:start="229:31" pos:end="229:37"><expr pos:start="229:31" pos:end="229:37"><operator pos:start="229:31" pos:end="229:31">&amp;</operator><name pos:start="229:32" pos:end="229:37"><name pos:start="229:32" pos:end="229:33">oc</name><operator pos:start="229:34" pos:end="229:35">-&gt;</operator><name pos:start="229:36" pos:end="229:37">pb</name></name></expr></argument>, <argument pos:start="229:40" pos:end="229:51"><expr pos:start="229:40" pos:end="229:51"><name pos:start="229:40" pos:end="229:51"><name pos:start="229:40" pos:end="229:41">oc</name><operator pos:start="229:42" pos:end="229:43">-&gt;</operator><name pos:start="229:44" pos:end="229:51">filename</name></name></expr></argument>, <argument pos:start="229:54" pos:end="229:68"><expr pos:start="229:54" pos:end="229:68"><name pos:start="229:54" pos:end="229:68">AVIO_FLAG_WRITE</name></expr></argument>,

                              <argument pos:start="231:31" pos:end="231:52"><expr pos:start="231:31" pos:end="231:52"><operator pos:start="231:31" pos:end="231:31">&amp;</operator><name pos:start="231:32" pos:end="231:52"><name pos:start="231:32" pos:end="231:32">s</name><operator pos:start="231:33" pos:end="231:34">-&gt;</operator><name pos:start="231:35" pos:end="231:52">interrupt_callback</name></name></expr></argument>, <argument pos:start="231:55" pos:end="231:58"><expr pos:start="231:55" pos:end="231:58"><name pos:start="231:55" pos:end="231:58">NULL</name></expr></argument>)</argument_list></call><operator pos:start="231:60" pos:end="231:60">)</operator> <operator pos:start="231:62" pos:end="231:62">&lt;</operator> <literal type="number" pos:start="231:64" pos:end="231:64">0</literal></expr>)</condition><block type="pseudo" pos:start="233:13" pos:end="233:22"><block_content pos:start="233:13" pos:end="233:22">

            <goto pos:start="233:13" pos:end="233:22">goto <name pos:start="233:18" pos:end="233:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="239:1" pos:end="239:5"><name pos:start="239:1" pos:end="239:4">fail</name>:</label>

    <if_stmt pos:start="241:5" pos:end="251:5"><if pos:start="241:5" pos:end="251:5">if <condition pos:start="241:8" pos:end="241:12">(<expr pos:start="241:9" pos:end="241:11"><name pos:start="241:9" pos:end="241:11">ret</name></expr>)</condition> <block pos:start="241:14" pos:end="251:5">{<block_content pos:start="243:9" pos:end="249:44">

        <if_stmt pos:start="243:9" pos:end="245:37"><if pos:start="243:9" pos:end="245:37">if <condition pos:start="243:12" pos:end="243:22">(<expr pos:start="243:13" pos:end="243:21"><name pos:start="243:13" pos:end="243:21"><name pos:start="243:13" pos:end="243:15">seg</name><operator pos:start="243:16" pos:end="243:17">-&gt;</operator><name pos:start="243:18" pos:end="243:21">list</name></name></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:37"><block_content pos:start="245:13" pos:end="245:37">

            <expr_stmt pos:start="245:13" pos:end="245:37"><expr pos:start="245:13" pos:end="245:36"><call pos:start="245:13" pos:end="245:36"><name pos:start="245:13" pos:end="245:22">avio_close</name><argument_list pos:start="245:23" pos:end="245:36">(<argument pos:start="245:24" pos:end="245:35"><expr pos:start="245:24" pos:end="245:35"><name pos:start="245:24" pos:end="245:35"><name pos:start="245:24" pos:end="245:26">seg</name><operator pos:start="245:27" pos:end="245:28">-&gt;</operator><name pos:start="245:29" pos:end="245:35">list_pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="247:9" pos:end="249:44"><if pos:start="247:9" pos:end="249:44">if <condition pos:start="247:12" pos:end="247:21">(<expr pos:start="247:13" pos:end="247:20"><name pos:start="247:13" pos:end="247:20"><name pos:start="247:13" pos:end="247:15">seg</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:20">avf</name></name></expr>)</condition><block type="pseudo" pos:start="249:13" pos:end="249:44"><block_content pos:start="249:13" pos:end="249:44">

            <expr_stmt pos:start="249:13" pos:end="249:44"><expr pos:start="249:13" pos:end="249:43"><call pos:start="249:13" pos:end="249:43"><name pos:start="249:13" pos:end="249:33">avformat_free_context</name><argument_list pos:start="249:34" pos:end="249:43">(<argument pos:start="249:35" pos:end="249:42"><expr pos:start="249:35" pos:end="249:42"><name pos:start="249:35" pos:end="249:42"><name pos:start="249:35" pos:end="249:37">seg</name><operator pos:start="249:38" pos:end="249:39">-&gt;</operator><name pos:start="249:40" pos:end="249:42">avf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="253:5" pos:end="253:15">return <expr pos:start="253:12" pos:end="253:14"><name pos:start="253:12" pos:end="253:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
