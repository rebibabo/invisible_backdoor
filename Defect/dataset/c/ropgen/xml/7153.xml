<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7153.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:31">onenand_erase</name><parameter_list pos:start="1:32" pos:end="1:66">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:44">OneNANDState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:56"><decl pos:start="1:50" pos:end="1:56"><type pos:start="1:50" pos:end="1:56"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:56">sec</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:65"><decl pos:start="1:59" pos:end="1:65"><type pos:start="1:59" pos:end="1:65"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:65">num</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:21">blankbuf</name></decl>, <decl pos:start="5:24" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:30">tmpbuf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:29"><expr pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:12">blankbuf</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:28"><name pos:start="9:16" pos:end="9:23">g_malloc</name><argument_list pos:start="9:24" pos:end="9:28">(<argument pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><literal type="number" pos:start="9:25" pos:end="9:27">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">tmpbuf</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="11:26"><name pos:start="11:14" pos:end="11:21">g_malloc</name><argument_list pos:start="11:22" pos:end="11:26">(<argument pos:start="11:23" pos:end="11:25"><expr pos:start="11:23" pos:end="11:25"><literal type="number" pos:start="11:23" pos:end="11:25">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><call pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:31">(<argument pos:start="13:12" pos:end="13:19"><expr pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:19">blankbuf</name></expr></argument>, <argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><literal type="number" pos:start="13:22" pos:end="13:25">0xff</literal></expr></argument>, <argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><literal type="number" pos:start="13:28" pos:end="13:30">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="57:5">for <control pos:start="15:9" pos:end="15:33">(<init pos:start="15:10" pos:end="15:10">;</init> <condition pos:start="15:12" pos:end="15:19"><expr pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:14">num</name> <operator pos:start="15:16" pos:end="15:16">&gt;</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</condition> <incr pos:start="15:21" pos:end="15:32"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:23">num</name><operator pos:start="15:24" pos:end="15:25">--</operator></expr><operator pos:start="15:26" pos:end="15:26">,</operator> <expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:30">sec</name><operator pos:start="15:31" pos:end="15:32">++</operator></expr></incr>)</control> <block pos:start="15:35" pos:end="57:5">{<block_content pos:start="17:9" pos:end="55:9">

        <if_stmt pos:start="17:9" pos:end="55:9"><if pos:start="17:9" pos:end="41:9">if <condition pos:start="17:12" pos:end="17:23">(<expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:22">blk_cur</name></name></expr>)</condition> <block pos:start="17:25" pos:end="41:9">{<block_content pos:start="19:13" pos:end="39:13">

            <decl_stmt pos:start="19:13" pos:end="19:52"><decl pos:start="19:13" pos:end="19:51"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:24">erasesec</name> <init pos:start="19:26" pos:end="19:51">= <expr pos:start="19:28" pos:end="19:51"><name pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:38">secs_cur</name></name> <operator pos:start="19:40" pos:end="19:40">+</operator> <operator pos:start="19:42" pos:end="19:42">(</operator><name pos:start="19:43" pos:end="19:45">sec</name> <operator pos:start="19:47" pos:end="19:48">&gt;&gt;</operator> <literal type="number" pos:start="19:50" pos:end="19:50">5</literal><operator pos:start="19:51" pos:end="19:51">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="21:13" pos:end="25:13"><if pos:start="21:13" pos:end="25:13">if <condition pos:start="21:16" pos:end="21:60">(<expr pos:start="21:17" pos:end="21:59"><call pos:start="21:17" pos:end="21:55"><name pos:start="21:17" pos:end="21:25">blk_write</name><argument_list pos:start="21:26" pos:end="21:55">(<argument pos:start="21:27" pos:end="21:36"><expr pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:36">blk_cur</name></name></expr></argument>, <argument pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:41">sec</name></expr></argument>, <argument pos:start="21:44" pos:end="21:51"><expr pos:start="21:44" pos:end="21:51"><name pos:start="21:44" pos:end="21:51">blankbuf</name></expr></argument>, <argument pos:start="21:54" pos:end="21:54"><expr pos:start="21:54" pos:end="21:54"><literal type="number" pos:start="21:54" pos:end="21:54">1</literal></expr></argument>)</argument_list></call> <operator pos:start="21:57" pos:end="21:57">&lt;</operator> <literal type="number" pos:start="21:59" pos:end="21:59">0</literal></expr>)</condition> <block pos:start="21:62" pos:end="25:13">{<block_content pos:start="23:17" pos:end="23:26">

                <goto pos:start="23:17" pos:end="23:26">goto <name pos:start="23:22" pos:end="23:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="27:13" pos:end="31:13"><if pos:start="27:13" pos:end="31:13">if <condition pos:start="27:16" pos:end="27:62">(<expr pos:start="27:17" pos:end="27:61"><call pos:start="27:17" pos:end="27:57"><name pos:start="27:17" pos:end="27:24">blk_read</name><argument_list pos:start="27:25" pos:end="27:57">(<argument pos:start="27:26" pos:end="27:35"><expr pos:start="27:26" pos:end="27:35"><name pos:start="27:26" pos:end="27:35"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:35">blk_cur</name></name></expr></argument>, <argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:45">erasesec</name></expr></argument>, <argument pos:start="27:48" pos:end="27:53"><expr pos:start="27:48" pos:end="27:53"><name pos:start="27:48" pos:end="27:53">tmpbuf</name></expr></argument>, <argument pos:start="27:56" pos:end="27:56"><expr pos:start="27:56" pos:end="27:56"><literal type="number" pos:start="27:56" pos:end="27:56">1</literal></expr></argument>)</argument_list></call> <operator pos:start="27:59" pos:end="27:59">&lt;</operator> <literal type="number" pos:start="27:61" pos:end="27:61">0</literal></expr>)</condition> <block pos:start="27:64" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:26">

                <goto pos:start="29:17" pos:end="29:26">goto <name pos:start="29:22" pos:end="29:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:65"><expr pos:start="33:13" pos:end="33:64"><call pos:start="33:13" pos:end="33:64"><name pos:start="33:13" pos:end="33:18">memcpy</name><argument_list pos:start="33:19" pos:end="33:64">(<argument pos:start="33:20" pos:end="33:45"><expr pos:start="33:20" pos:end="33:45"><name pos:start="33:20" pos:end="33:25">tmpbuf</name> <operator pos:start="33:27" pos:end="33:27">+</operator> <operator pos:start="33:29" pos:end="33:29">(</operator><operator pos:start="33:30" pos:end="33:30">(</operator><name pos:start="33:31" pos:end="33:33">sec</name> <operator pos:start="33:35" pos:end="33:35">&amp;</operator> <literal type="number" pos:start="33:37" pos:end="33:38">31</literal><operator pos:start="33:39" pos:end="33:39">)</operator> <operator pos:start="33:41" pos:end="33:42">&lt;&lt;</operator> <literal type="number" pos:start="33:44" pos:end="33:44">4</literal><operator pos:start="33:45" pos:end="33:45">)</operator></expr></argument>, <argument pos:start="33:48" pos:end="33:55"><expr pos:start="33:48" pos:end="33:55"><name pos:start="33:48" pos:end="33:55">blankbuf</name></expr></argument>, <argument pos:start="33:58" pos:end="33:63"><expr pos:start="33:58" pos:end="33:63"><literal type="number" pos:start="33:58" pos:end="33:58">1</literal> <operator pos:start="33:60" pos:end="33:61">&lt;&lt;</operator> <literal type="number" pos:start="33:63" pos:end="33:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:63">(<expr pos:start="35:17" pos:end="35:62"><call pos:start="35:17" pos:end="35:58"><name pos:start="35:17" pos:end="35:25">blk_write</name><argument_list pos:start="35:26" pos:end="35:58">(<argument pos:start="35:27" pos:end="35:36"><expr pos:start="35:27" pos:end="35:36"><name pos:start="35:27" pos:end="35:36"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:36">blk_cur</name></name></expr></argument>, <argument pos:start="35:39" pos:end="35:46"><expr pos:start="35:39" pos:end="35:46"><name pos:start="35:39" pos:end="35:46">erasesec</name></expr></argument>, <argument pos:start="35:49" pos:end="35:54"><expr pos:start="35:49" pos:end="35:54"><name pos:start="35:49" pos:end="35:54">tmpbuf</name></expr></argument>, <argument pos:start="35:57" pos:end="35:57"><expr pos:start="35:57" pos:end="35:57"><literal type="number" pos:start="35:57" pos:end="35:57">1</literal></expr></argument>)</argument_list></call> <operator pos:start="35:60" pos:end="35:60">&lt;</operator> <literal type="number" pos:start="35:62" pos:end="35:62">0</literal></expr>)</condition> <block pos:start="35:65" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:26">

                <goto pos:start="37:17" pos:end="37:26">goto <name pos:start="37:22" pos:end="37:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="55:9">else <block pos:start="41:16" pos:end="55:9">{<block_content pos:start="43:13" pos:end="53:37">

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:38">(<expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:19">sec</name> <operator pos:start="43:21" pos:end="43:21">+</operator> <literal type="number" pos:start="43:23" pos:end="43:23">1</literal> <operator pos:start="43:25" pos:end="43:25">&gt;</operator> <name pos:start="43:27" pos:end="43:37"><name pos:start="43:27" pos:end="43:27">s</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:37">secs_cur</name></name></expr>)</condition> <block pos:start="43:40" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:26">

                <goto pos:start="45:17" pos:end="45:26">goto <name pos:start="45:22" pos:end="45:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:59"><expr pos:start="49:13" pos:end="49:58"><call pos:start="49:13" pos:end="49:58"><name pos:start="49:13" pos:end="49:18">memcpy</name><argument_list pos:start="49:19" pos:end="49:58">(<argument pos:start="49:20" pos:end="49:42"><expr pos:start="49:20" pos:end="49:42"><name pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:29">current</name></name> <operator pos:start="49:31" pos:end="49:31">+</operator> <operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:36">sec</name> <operator pos:start="49:38" pos:end="49:39">&lt;&lt;</operator> <literal type="number" pos:start="49:41" pos:end="49:41">9</literal><operator pos:start="49:42" pos:end="49:42">)</operator></expr></argument>, <argument pos:start="49:45" pos:end="49:52"><expr pos:start="49:45" pos:end="49:52"><name pos:start="49:45" pos:end="49:52">blankbuf</name></expr></argument>, <argument pos:start="49:55" pos:end="49:57"><expr pos:start="49:55" pos:end="49:57"><literal type="number" pos:start="49:55" pos:end="49:57">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="53:37"><expr pos:start="51:13" pos:end="53:36"><call pos:start="51:13" pos:end="53:36"><name pos:start="51:13" pos:end="51:18">memcpy</name><argument_list pos:start="51:19" pos:end="53:36">(<argument pos:start="51:20" pos:end="51:63"><expr pos:start="51:20" pos:end="51:63"><name pos:start="51:20" pos:end="51:29"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:29">current</name></name> <operator pos:start="51:31" pos:end="51:31">+</operator> <operator pos:start="51:33" pos:end="51:33">(</operator><name pos:start="51:34" pos:end="51:44"><name pos:start="51:34" pos:end="51:34">s</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:44">secs_cur</name></name> <operator pos:start="51:46" pos:end="51:47">&lt;&lt;</operator> <literal type="number" pos:start="51:49" pos:end="51:49">9</literal><operator pos:start="51:50" pos:end="51:50">)</operator> <operator pos:start="51:52" pos:end="51:52">+</operator> <operator pos:start="51:54" pos:end="51:54">(</operator><name pos:start="51:55" pos:end="51:57">sec</name> <operator pos:start="51:59" pos:end="51:60">&lt;&lt;</operator> <literal type="number" pos:start="51:62" pos:end="51:62">4</literal><operator pos:start="51:63" pos:end="51:63">)</operator></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:27"><expr pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:27">blankbuf</name></expr></argument>, <argument pos:start="53:30" pos:end="53:35"><expr pos:start="53:30" pos:end="53:35"><literal type="number" pos:start="53:30" pos:end="53:30">1</literal> <operator pos:start="53:32" pos:end="53:33">&lt;&lt;</operator> <literal type="number" pos:start="53:35" pos:end="53:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><call pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:10">g_free</name><argument_list pos:start="61:11" pos:end="61:18">(<argument pos:start="61:12" pos:end="61:17"><expr pos:start="61:12" pos:end="61:17"><name pos:start="61:12" pos:end="61:17">tmpbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><call pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:10">g_free</name><argument_list pos:start="63:11" pos:end="63:20">(<argument pos:start="63:12" pos:end="63:19"><expr pos:start="63:12" pos:end="63:19"><name pos:start="63:12" pos:end="63:19">blankbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>



<label pos:start="69:1" pos:end="69:5"><name pos:start="69:1" pos:end="69:4">fail</name>:</label>

    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><call pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:10">g_free</name><argument_list pos:start="71:11" pos:end="71:18">(<argument pos:start="71:12" pos:end="71:17"><expr pos:start="71:12" pos:end="71:17"><name pos:start="71:12" pos:end="71:17">tmpbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><call pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:10">g_free</name><argument_list pos:start="73:11" pos:end="73:20">(<argument pos:start="73:12" pos:end="73:19"><expr pos:start="73:12" pos:end="73:19"><name pos:start="73:12" pos:end="73:19">blankbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
