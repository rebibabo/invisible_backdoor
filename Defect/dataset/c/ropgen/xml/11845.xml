<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11845.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:20">set_cp15</name>)<parameter_list pos:start="1:22" pos:end="1:68">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:33">CPUARMState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">uint32_t</name></type> <name pos:start="1:50" pos:end="1:53">insn</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:63">uint32_t</name></type> <name pos:start="1:65" pos:end="1:67">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="261:1">{<block_content pos:start="5:5" pos:end="259:49">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">op1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">crm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">op1</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:15">insn</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <literal type="number" pos:start="13:20" pos:end="13:21">21</literal><operator pos:start="13:22" pos:end="13:22">)</operator> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <literal type="number" pos:start="13:26" pos:end="13:26">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">op2</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:15">insn</name> <operator pos:start="15:17" pos:end="15:18">&gt;&gt;</operator> <literal type="number" pos:start="15:20" pos:end="15:20">5</literal><operator pos:start="15:21" pos:end="15:21">)</operator> <operator pos:start="15:23" pos:end="15:23">&amp;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">crm</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:14">insn</name> <operator pos:start="17:16" pos:end="17:16">&amp;</operator> <literal type="number" pos:start="17:18" pos:end="17:20">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="249:5">switch <condition pos:start="19:12" pos:end="19:31">(<expr pos:start="19:13" pos:end="19:30"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:17">insn</name> <operator pos:start="19:19" pos:end="19:20">&gt;&gt;</operator> <literal type="number" pos:start="19:22" pos:end="19:23">16</literal><operator pos:start="19:24" pos:end="19:24">)</operator> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <literal type="number" pos:start="19:28" pos:end="19:30">0xf</literal></expr>)</condition> <block pos:start="19:33" pos:end="249:5">{<block_content pos:start="21:5" pos:end="247:21">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case>

        <comment type="block" pos:start="23:9" pos:end="23:24">/* ID codes.  */</comment>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:49">(<expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:23">arm_feature</name><argument_list pos:start="25:24" pos:end="25:48">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">env</name></expr></argument>, <argument pos:start="25:30" pos:end="25:47"><expr pos:start="25:30" pos:end="25:47"><name pos:start="25:30" pos:end="25:47">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:49">(<expr pos:start="29:13" pos:end="29:48"><call pos:start="29:13" pos:end="29:48"><name pos:start="29:13" pos:end="29:23">arm_feature</name><argument_list pos:start="29:24" pos:end="29:48">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">env</name></expr></argument>, <argument pos:start="29:30" pos:end="29:47"><expr pos:start="29:30" pos:end="29:47"><name pos:start="29:30" pos:end="29:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="35:52">(<expr pos:start="33:13" pos:end="35:51"><call pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:23">arm_feature</name><argument_list pos:start="33:24" pos:end="33:44">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">env</name></expr></argument>, <argument pos:start="33:30" pos:end="33:43"><expr pos:start="33:30" pos:end="33:43"><name pos:start="33:30" pos:end="33:43">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call>

                <operator pos:start="35:17" pos:end="35:18">&amp;&amp;</operator> <name pos:start="35:20" pos:end="35:22">op1</name> <operator pos:start="35:24" pos:end="35:25">==</operator> <literal type="number" pos:start="35:27" pos:end="35:27">2</literal> <operator pos:start="35:29" pos:end="35:30">&amp;&amp;</operator> <name pos:start="35:32" pos:end="35:34">crm</name> <operator pos:start="35:36" pos:end="35:37">==</operator> <literal type="number" pos:start="35:39" pos:end="35:39">0</literal> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator> <name pos:start="35:44" pos:end="35:46">op2</name> <operator pos:start="35:48" pos:end="35:49">==</operator> <literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr>)</condition> <block pos:start="35:54" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:18">

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:15">env</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:21">cp15</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:30">c0_cssel</name></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:36">val</name> <operator pos:start="37:38" pos:end="37:38">&amp;</operator> <literal type="number" pos:start="37:40" pos:end="37:42">0xf</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">bad_reg</name>;</goto>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">1</literal></expr>:</case> <comment type="block" pos:start="45:13" pos:end="45:40">/* System configuration.  */</comment>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="49:52">(<expr pos:start="47:13" pos:end="49:51"><call pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:23">arm_feature</name><argument_list pos:start="47:24" pos:end="47:44">(<argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><name pos:start="47:25" pos:end="47:27">env</name></expr></argument>, <argument pos:start="47:30" pos:end="47:43"><expr pos:start="47:30" pos:end="47:43"><name pos:start="47:30" pos:end="47:43">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call>

                <operator pos:start="49:17" pos:end="49:18">&amp;&amp;</operator> <name pos:start="49:20" pos:end="49:22">op1</name> <operator pos:start="49:24" pos:end="49:25">==</operator> <literal type="number" pos:start="49:27" pos:end="49:27">0</literal> <operator pos:start="49:29" pos:end="49:30">&amp;&amp;</operator> <name pos:start="49:32" pos:end="49:34">crm</name> <operator pos:start="49:36" pos:end="49:37">==</operator> <literal type="number" pos:start="49:39" pos:end="49:39">1</literal> <operator pos:start="49:41" pos:end="49:42">&amp;&amp;</operator> <name pos:start="49:44" pos:end="49:46">op2</name> <operator pos:start="49:48" pos:end="49:49">==</operator> <literal type="number" pos:start="49:51" pos:end="49:51">0</literal></expr>)</condition> <block pos:start="49:54" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:18">

            <expr_stmt pos:start="51:13" pos:end="51:35"><expr pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:15">env</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:21">cp15</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:28">c1_scr</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <name pos:start="51:32" pos:end="51:34">val</name></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="59:20"><if pos:start="57:9" pos:end="59:20">if <condition pos:start="57:12" pos:end="57:49">(<expr pos:start="57:13" pos:end="57:48"><call pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:23">arm_feature</name><argument_list pos:start="57:24" pos:end="57:48">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">env</name></expr></argument>, <argument pos:start="57:30" pos:end="57:47"><expr pos:start="57:30" pos:end="57:47"><name pos:start="57:30" pos:end="57:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:20"><block_content pos:start="59:13" pos:end="59:20">

            <expr_stmt pos:start="59:13" pos:end="59:20"><expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">op2</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="61:9" pos:end="113:9">switch <condition pos:start="61:16" pos:end="61:20">(<expr pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">op2</name></expr>)</condition> <block pos:start="61:22" pos:end="113:9">{<block_content pos:start="63:9" pos:end="111:25">

        <case pos:start="63:9" pos:end="63:15">case <expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>:</case>

            <if_stmt pos:start="65:13" pos:end="67:39"><if pos:start="65:13" pos:end="67:39">if <condition pos:start="65:16" pos:end="65:66">(<expr pos:start="65:17" pos:end="65:65"><operator pos:start="65:17" pos:end="65:17">!</operator><call pos:start="65:18" pos:end="65:53"><name pos:start="65:18" pos:end="65:28">arm_feature</name><argument_list pos:start="65:29" pos:end="65:53">(<argument pos:start="65:30" pos:end="65:32"><expr pos:start="65:30" pos:end="65:32"><name pos:start="65:30" pos:end="65:32">env</name></expr></argument>, <argument pos:start="65:35" pos:end="65:52"><expr pos:start="65:35" pos:end="65:52"><name pos:start="65:35" pos:end="65:52">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call> <operator pos:start="65:55" pos:end="65:56">||</operator> <name pos:start="65:58" pos:end="65:60">crm</name> <operator pos:start="65:62" pos:end="65:63">==</operator> <literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:39"><block_content pos:start="67:17" pos:end="67:39">

                <expr_stmt pos:start="67:17" pos:end="67:39"><expr pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:32"><name pos:start="67:17" pos:end="67:19">env</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:25">cp15</name><operator pos:start="67:26" pos:end="67:26">.</operator><name pos:start="67:27" pos:end="67:32">c1_sys</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:38">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="69:13" pos:end="69:62">/* ??? Lots of these bits are not implemented.  */</comment>

            <comment type="block" pos:start="71:13" pos:end="71:70">/* This may enable/disable the MMU, so do a TLB flush.  */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:30"><expr pos:start="73:13" pos:end="73:29"><call pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:21">tlb_flush</name><argument_list pos:start="73:22" pos:end="73:29">(<argument pos:start="73:23" pos:end="73:25"><expr pos:start="73:23" pos:end="73:25"><name pos:start="73:23" pos:end="73:25">env</name></expr></argument>, <argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">1</literal></expr>:</case> <comment type="block" pos:start="77:17" pos:end="77:50">/* Auxiliary control register.  */</comment>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:53">(<expr pos:start="79:17" pos:end="79:52"><call pos:start="79:17" pos:end="79:52"><name pos:start="79:17" pos:end="79:27">arm_feature</name><argument_list pos:start="79:28" pos:end="79:52">(<argument pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><name pos:start="79:29" pos:end="79:31">env</name></expr></argument>, <argument pos:start="79:34" pos:end="79:51"><expr pos:start="79:34" pos:end="79:51"><name pos:start="79:34" pos:end="79:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:55" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:22">

                <expr_stmt pos:start="81:17" pos:end="81:47"><expr pos:start="81:17" pos:end="81:46"><name pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:19">env</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:25">cp15</name><operator pos:start="81:26" pos:end="81:26">.</operator><name pos:start="81:27" pos:end="81:40">c1_xscaleauxcr</name></name> <operator pos:start="81:42" pos:end="81:42">=</operator> <name pos:start="81:44" pos:end="81:46">val</name></expr>;</expr_stmt>

                <break pos:start="83:17" pos:end="83:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="87:13" pos:end="87:35">/* Not implemented.  */</comment>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:15">case <expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">2</literal></expr>:</case>

            <if_stmt pos:start="93:13" pos:end="95:29"><if pos:start="93:13" pos:end="95:29">if <condition pos:start="93:16" pos:end="93:53">(<expr pos:start="93:17" pos:end="93:52"><call pos:start="93:17" pos:end="93:52"><name pos:start="93:17" pos:end="93:27">arm_feature</name><argument_list pos:start="93:28" pos:end="93:52">(<argument pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:31">env</name></expr></argument>, <argument pos:start="93:34" pos:end="93:51"><expr pos:start="93:34" pos:end="93:51"><name pos:start="93:34" pos:end="93:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:29"><block_content pos:start="95:17" pos:end="95:29">

                <goto pos:start="95:17" pos:end="95:29">goto <name pos:start="95:22" pos:end="95:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="97:13" pos:end="105:13"><if pos:start="97:13" pos:end="105:13">if <condition pos:start="97:16" pos:end="97:43">(<expr pos:start="97:17" pos:end="97:42"><name pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:19">env</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:25">cp15</name><operator pos:start="97:26" pos:end="97:26">.</operator><name pos:start="97:27" pos:end="97:35">c1_coproc</name></name> <operator pos:start="97:37" pos:end="97:38">!=</operator> <name pos:start="97:40" pos:end="97:42">val</name></expr>)</condition> <block pos:start="97:45" pos:end="105:13">{<block_content pos:start="99:17" pos:end="103:30">

                <expr_stmt pos:start="99:17" pos:end="99:42"><expr pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:35"><name pos:start="99:17" pos:end="99:19">env</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:25">cp15</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:35">c1_coproc</name></name> <operator pos:start="99:37" pos:end="99:37">=</operator> <name pos:start="99:39" pos:end="99:41">val</name></expr>;</expr_stmt>

                <comment type="block" pos:start="101:17" pos:end="101:69">/* ??? Is this safe when called from within a TB?  */</comment>

                <expr_stmt pos:start="103:17" pos:end="103:30"><expr pos:start="103:17" pos:end="103:29"><call pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:24">tb_flush</name><argument_list pos:start="103:25" pos:end="103:29">(<argument pos:start="103:26" pos:end="103:28"><expr pos:start="103:26" pos:end="103:28"><name pos:start="103:26" pos:end="103:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <default pos:start="109:9" pos:end="109:16">default:</default>

            <goto pos:start="111:13" pos:end="111:25">goto <name pos:start="111:18" pos:end="111:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:11">case <expr pos:start="117:10" pos:end="117:10"><literal type="number" pos:start="117:10" pos:end="117:10">4</literal></expr>:</case> <comment type="block" pos:start="117:13" pos:end="117:28">/* Reserved.  */</comment>

        <goto pos:start="119:9" pos:end="119:21">goto <name pos:start="119:14" pos:end="119:20">bad_reg</name>;</goto>

    <case pos:start="121:5" pos:end="121:11">case <expr pos:start="121:10" pos:end="121:10"><literal type="number" pos:start="121:10" pos:end="121:10">6</literal></expr>:</case> <comment type="block" pos:start="121:13" pos:end="121:53">/* MMU Fault address / MPU base/size.  */</comment>

        <if_stmt pos:start="123:9" pos:end="159:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:46">(<expr pos:start="123:13" pos:end="123:45"><call pos:start="123:13" pos:end="123:45"><name pos:start="123:13" pos:end="123:23">arm_feature</name><argument_list pos:start="123:24" pos:end="123:45">(<argument pos:start="123:25" pos:end="123:27"><expr pos:start="123:25" pos:end="123:27"><name pos:start="123:25" pos:end="123:27">env</name></expr></argument>, <argument pos:start="123:30" pos:end="123:44"><expr pos:start="123:30" pos:end="123:44"><name pos:start="123:30" pos:end="123:44">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:48" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:43">

            <if_stmt pos:start="125:13" pos:end="127:29"><if pos:start="125:13" pos:end="127:29">if <condition pos:start="125:16" pos:end="125:25">(<expr pos:start="125:17" pos:end="125:24"><name pos:start="125:17" pos:end="125:19">crm</name> <operator pos:start="125:21" pos:end="125:22">&gt;=</operator> <literal type="number" pos:start="125:24" pos:end="125:24">8</literal></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:29"><block_content pos:start="127:17" pos:end="127:29">

                <goto pos:start="127:17" pos:end="127:29">goto <name pos:start="127:22" pos:end="127:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:43"><expr pos:start="129:13" pos:end="129:42"><name pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:15">env</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:21">cp15</name><operator pos:start="129:22" pos:end="129:22">.</operator><name pos:start="129:23" pos:end="129:31">c6_region</name><index pos:start="129:32" pos:end="129:36">[<expr pos:start="129:33" pos:end="129:35"><name pos:start="129:33" pos:end="129:35">crm</name></expr>]</index></name> <operator pos:start="129:38" pos:end="129:38">=</operator> <name pos:start="129:40" pos:end="129:42">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="159:9">else <block pos:start="131:16" pos:end="159:9">{<block_content pos:start="133:13" pos:end="157:13">

            <if_stmt pos:start="133:13" pos:end="135:24"><if pos:start="133:13" pos:end="135:24">if <condition pos:start="133:16" pos:end="133:53">(<expr pos:start="133:17" pos:end="133:52"><call pos:start="133:17" pos:end="133:52"><name pos:start="133:17" pos:end="133:27">arm_feature</name><argument_list pos:start="133:28" pos:end="133:52">(<argument pos:start="133:29" pos:end="133:31"><expr pos:start="133:29" pos:end="133:31"><name pos:start="133:29" pos:end="133:31">env</name></expr></argument>, <argument pos:start="133:34" pos:end="133:51"><expr pos:start="133:34" pos:end="133:51"><name pos:start="133:34" pos:end="133:51">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:24"><block_content pos:start="135:17" pos:end="135:24">

                <expr_stmt pos:start="135:17" pos:end="135:24"><expr pos:start="135:17" pos:end="135:23"><name pos:start="135:17" pos:end="135:19">op2</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <literal type="number" pos:start="135:23" pos:end="135:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="137:13" pos:end="157:13">switch <condition pos:start="137:20" pos:end="137:24">(<expr pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:23">op2</name></expr>)</condition> <block pos:start="137:26" pos:end="157:13">{<block_content pos:start="139:13" pos:end="155:29">

            <case pos:start="139:13" pos:end="139:19">case <expr pos:start="139:18" pos:end="139:18"><literal type="number" pos:start="139:18" pos:end="139:18">0</literal></expr>:</case>

                <expr_stmt pos:start="141:17" pos:end="141:40"><expr pos:start="141:17" pos:end="141:39"><name pos:start="141:17" pos:end="141:33"><name pos:start="141:17" pos:end="141:19">env</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:25">cp15</name><operator pos:start="141:26" pos:end="141:26">.</operator><name pos:start="141:27" pos:end="141:33">c6_data</name></name> <operator pos:start="141:35" pos:end="141:35">=</operator> <name pos:start="141:37" pos:end="141:39">val</name></expr>;</expr_stmt>

                <break pos:start="143:17" pos:end="143:22">break;</break>

            <case pos:start="145:13" pos:end="145:19">case <expr pos:start="145:18" pos:end="145:18"><literal type="number" pos:start="145:18" pos:end="145:18">1</literal></expr>:</case> <comment type="block" pos:start="145:21" pos:end="145:51">/* ??? This is WFAR on armv6 */</comment>

            <case pos:start="147:13" pos:end="147:19">case <expr pos:start="147:18" pos:end="147:18"><literal type="number" pos:start="147:18" pos:end="147:18">2</literal></expr>:</case>

                <expr_stmt pos:start="149:17" pos:end="149:40"><expr pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:33"><name pos:start="149:17" pos:end="149:19">env</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:25">cp15</name><operator pos:start="149:26" pos:end="149:26">.</operator><name pos:start="149:27" pos:end="149:33">c6_insn</name></name> <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:39">val</name></expr>;</expr_stmt>

                <break pos:start="151:17" pos:end="151:22">break;</break>

            <default pos:start="153:13" pos:end="153:20">default:</default>

                <goto pos:start="155:17" pos:end="155:29">goto <name pos:start="155:22" pos:end="155:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:11">case <expr pos:start="163:10" pos:end="163:10"><literal type="number" pos:start="163:10" pos:end="163:10">7</literal></expr>:</case> <comment type="block" pos:start="163:13" pos:end="163:33">/* Cache control.  */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:36"><expr pos:start="165:9" pos:end="165:35"><name pos:start="165:9" pos:end="165:27"><name pos:start="165:9" pos:end="165:11">env</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:17">cp15</name><operator pos:start="165:18" pos:end="165:18">.</operator><name pos:start="165:19" pos:end="165:27">c15_i_max</name></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <literal type="number" pos:start="165:31" pos:end="165:35">0x000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:36"><expr pos:start="167:9" pos:end="167:35"><name pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:11">env</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:17">cp15</name><operator pos:start="167:18" pos:end="167:18">.</operator><name pos:start="167:19" pos:end="167:27">c15_i_min</name></name> <operator pos:start="167:29" pos:end="167:29">=</operator> <literal type="number" pos:start="167:31" pos:end="167:35">0xff0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="173:9"><if pos:start="169:9" pos:end="173:9">if <condition pos:start="169:12" pos:end="169:21">(<expr pos:start="169:13" pos:end="169:20"><name pos:start="169:13" pos:end="169:15">op1</name> <operator pos:start="169:17" pos:end="169:18">!=</operator> <literal type="number" pos:start="169:20" pos:end="169:20">0</literal></expr>)</condition> <block pos:start="169:23" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:25">

            <goto pos:start="171:13" pos:end="171:25">goto <name pos:start="171:18" pos:end="171:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:11">case <expr pos:start="177:10" pos:end="177:10"><literal type="number" pos:start="177:10" pos:end="177:10">9</literal></expr>:</case>

        <if_stmt pos:start="179:9" pos:end="181:18"><if pos:start="179:9" pos:end="181:18">if <condition pos:start="179:12" pos:end="179:49">(<expr pos:start="179:13" pos:end="179:48"><call pos:start="179:13" pos:end="179:48"><name pos:start="179:13" pos:end="179:23">arm_feature</name><argument_list pos:start="179:24" pos:end="179:48">(<argument pos:start="179:25" pos:end="179:27"><expr pos:start="179:25" pos:end="179:27"><name pos:start="179:25" pos:end="179:27">env</name></expr></argument>, <argument pos:start="179:30" pos:end="179:47"><expr pos:start="179:30" pos:end="179:47"><name pos:start="179:30" pos:end="179:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:18"><block_content pos:start="181:13" pos:end="181:18">

            <break pos:start="181:13" pos:end="181:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="183:9" pos:end="185:18"><if pos:start="183:9" pos:end="185:18">if <condition pos:start="183:12" pos:end="183:52">(<expr pos:start="183:13" pos:end="183:51"><call pos:start="183:13" pos:end="183:51"><name pos:start="183:13" pos:end="183:23">arm_feature</name><argument_list pos:start="183:24" pos:end="183:51">(<argument pos:start="183:25" pos:end="183:27"><expr pos:start="183:25" pos:end="183:27"><name pos:start="183:25" pos:end="183:27">env</name></expr></argument>, <argument pos:start="183:30" pos:end="183:50"><expr pos:start="183:30" pos:end="183:50"><name pos:start="183:30" pos:end="183:50">ARM_FEATURE_STRONGARM</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:18"><block_content pos:start="185:13" pos:end="185:18">

            <break pos:start="185:13" pos:end="185:18">break;</break></block_content></block></if></if_stmt> <comment type="block" pos:start="185:20" pos:end="185:49">/* Ignore ReadBuffer access */</comment>

        <switch pos:start="187:9" pos:end="241:9">switch <condition pos:start="187:16" pos:end="187:20">(<expr pos:start="187:17" pos:end="187:19"><name pos:start="187:17" pos:end="187:19">crm</name></expr>)</condition> <block pos:start="187:22" pos:end="241:9">{<block_content pos:start="189:9" pos:end="239:25">

        <case pos:start="189:9" pos:end="189:15">case <expr pos:start="189:14" pos:end="189:14"><literal type="number" pos:start="189:14" pos:end="189:14">0</literal></expr>:</case> <comment type="block" pos:start="189:17" pos:end="189:38">/* Cache lockdown.  */</comment>

	    <switch pos:start="191:13" pos:end="227:13">switch <condition pos:start="191:20" pos:end="191:24">(<expr pos:start="191:21" pos:end="191:23"><name pos:start="191:21" pos:end="191:23">op1</name></expr>)</condition> <block pos:start="191:26" pos:end="227:13">{<block_content pos:start="193:13" pos:end="225:29">

	    <case pos:start="193:13" pos:end="193:19">case <expr pos:start="193:18" pos:end="193:18"><literal type="number" pos:start="193:18" pos:end="193:18">0</literal></expr>:</case> <comment type="block" pos:start="193:21" pos:end="193:36">/* L1 cache.  */</comment>

		<switch pos:start="195:17" pos:end="213:17">switch <condition pos:start="195:24" pos:end="195:28">(<expr pos:start="195:25" pos:end="195:27"><name pos:start="195:25" pos:end="195:27">op2</name></expr>)</condition> <block pos:start="195:30" pos:end="213:17">{<block_content pos:start="197:17" pos:end="211:33">

		<case pos:start="197:17" pos:end="197:23">case <expr pos:start="197:22" pos:end="197:22"><literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>:</case>

		    <expr_stmt pos:start="199:21" pos:end="199:44"><expr pos:start="199:21" pos:end="199:43"><name pos:start="199:21" pos:end="199:37"><name pos:start="199:21" pos:end="199:23">env</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:29">cp15</name><operator pos:start="199:30" pos:end="199:30">.</operator><name pos:start="199:31" pos:end="199:37">c9_data</name></name> <operator pos:start="199:39" pos:end="199:39">=</operator> <name pos:start="199:41" pos:end="199:43">val</name></expr>;</expr_stmt>

		    <break pos:start="201:21" pos:end="201:26">break;</break>

		<case pos:start="203:17" pos:end="203:23">case <expr pos:start="203:22" pos:end="203:22"><literal type="number" pos:start="203:22" pos:end="203:22">1</literal></expr>:</case>

		    <expr_stmt pos:start="205:21" pos:end="205:44"><expr pos:start="205:21" pos:end="205:43"><name pos:start="205:21" pos:end="205:37"><name pos:start="205:21" pos:end="205:23">env</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:29">cp15</name><operator pos:start="205:30" pos:end="205:30">.</operator><name pos:start="205:31" pos:end="205:37">c9_insn</name></name> <operator pos:start="205:39" pos:end="205:39">=</operator> <name pos:start="205:41" pos:end="205:43">val</name></expr>;</expr_stmt>

		    <break pos:start="207:21" pos:end="207:26">break;</break>

		<default pos:start="209:17" pos:end="209:24">default:</default>

		    <goto pos:start="211:21" pos:end="211:33">goto <name pos:start="211:26" pos:end="211:32">bad_reg</name>;</goto>

		</block_content>}</block></switch>

		<break pos:start="215:17" pos:end="215:22">break;</break>

	    <case pos:start="217:13" pos:end="217:19">case <expr pos:start="217:18" pos:end="217:18"><literal type="number" pos:start="217:18" pos:end="217:18">1</literal></expr>:</case> <comment type="block" pos:start="217:21" pos:end="217:36">/* L2 cache.  */</comment>

		<comment type="block" pos:start="219:17" pos:end="219:72">/* Ignore writes to L2 lockdown/auxiliary registers.  */</comment>

		<break pos:start="221:17" pos:end="221:22">break;</break>

	    <default pos:start="223:13" pos:end="223:20">default:</default>

		<goto pos:start="225:17" pos:end="225:29">goto <name pos:start="225:22" pos:end="225:28">bad_reg</name>;</goto>

	    </block_content>}</block></switch>

	    <break pos:start="229:13" pos:end="229:18">break;</break>

        <case pos:start="231:9" pos:end="231:15">case <expr pos:start="231:14" pos:end="231:14"><literal type="number" pos:start="231:14" pos:end="231:14">1</literal></expr>:</case> <comment type="block" pos:start="231:17" pos:end="231:51">/* TCM memory region registers.  */</comment>

            <comment type="block" pos:start="233:13" pos:end="233:35">/* Not implemented.  */</comment>

            <goto pos:start="235:13" pos:end="235:25">goto <name pos:start="235:18" pos:end="235:24">bad_reg</name>;</goto>

        <default pos:start="237:9" pos:end="237:16">default:</default>

            <goto pos:start="239:13" pos:end="239:25">goto <name pos:start="239:18" pos:end="239:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:12">case <expr pos:start="245:10" pos:end="245:11"><literal type="number" pos:start="245:10" pos:end="245:11">12</literal></expr>:</case> <comment type="block" pos:start="245:14" pos:end="245:29">/* Reserved.  */</comment>

        <goto pos:start="247:9" pos:end="247:21">goto <name pos:start="247:14" pos:end="247:20">bad_reg</name>;</goto>

    </block_content>}</block></switch>

    <return pos:start="251:5" pos:end="251:11">return;</return>

<label pos:start="253:1" pos:end="253:8"><name pos:start="253:1" pos:end="253:7">bad_reg</name>:</label>

    <comment type="block" pos:start="255:5" pos:end="255:79">/* ??? For debugging only.  Should raise illegal instruction exception.  */</comment>

    <expr_stmt pos:start="257:5" pos:end="259:49"><expr pos:start="257:5" pos:end="259:48"><call pos:start="257:5" pos:end="259:48"><name pos:start="257:5" pos:end="257:13">cpu_abort</name><argument_list pos:start="257:14" pos:end="259:48">(<argument pos:start="257:15" pos:end="257:17"><expr pos:start="257:15" pos:end="257:17"><name pos:start="257:15" pos:end="257:17">env</name></expr></argument>, <argument pos:start="257:20" pos:end="257:77"><expr pos:start="257:20" pos:end="257:77"><literal type="string" pos:start="257:20" pos:end="257:77">"Unimplemented cp15 register write (c%d, c%d, {%d, %d})\n"</literal></expr></argument>,

              <argument pos:start="259:15" pos:end="259:32"><expr pos:start="259:15" pos:end="259:32"><operator pos:start="259:15" pos:end="259:15">(</operator><name pos:start="259:16" pos:end="259:19">insn</name> <operator pos:start="259:21" pos:end="259:22">&gt;&gt;</operator> <literal type="number" pos:start="259:24" pos:end="259:25">16</literal><operator pos:start="259:26" pos:end="259:26">)</operator> <operator pos:start="259:28" pos:end="259:28">&amp;</operator> <literal type="number" pos:start="259:30" pos:end="259:32">0xf</literal></expr></argument>, <argument pos:start="259:35" pos:end="259:37"><expr pos:start="259:35" pos:end="259:37"><name pos:start="259:35" pos:end="259:37">crm</name></expr></argument>, <argument pos:start="259:40" pos:end="259:42"><expr pos:start="259:40" pos:end="259:42"><name pos:start="259:40" pos:end="259:42">op1</name></expr></argument>, <argument pos:start="259:45" pos:end="259:47"><expr pos:start="259:45" pos:end="259:47"><name pos:start="259:45" pos:end="259:47">op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
