<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8730.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">fill_buffer</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:35">AVIOContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:5">

    <decl_stmt pos:start="5:5" pos:end="7:62"><decl pos:start="5:5" pos:end="7:61"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:23">max_buffer_size</name> <init pos:start="5:25" pos:end="7:61">= <expr pos:start="5:27" pos:end="7:61"><ternary pos:start="5:27" pos:end="7:61"><condition pos:start="5:27" pos:end="5:46"><expr pos:start="5:27" pos:end="5:44"><name pos:start="5:27" pos:end="5:44"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:44">max_packet_size</name></name></expr> ?</condition><then pos:start="7:27" pos:end="7:44">

                          <expr pos:start="7:27" pos:end="7:44"><name pos:start="7:27" pos:end="7:44"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:44">max_packet_size</name></name></expr> </then><else pos:start="7:46" pos:end="7:61">: <expr pos:start="7:48" pos:end="7:61"><name pos:start="7:48" pos:end="7:61">IO_BUFFER_SIZE</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="11:49"><decl pos:start="9:5" pos:end="11:48"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">dst</name>        <init pos:start="9:25" pos:end="11:48">= <expr pos:start="9:27" pos:end="11:48"><ternary pos:start="9:27" pos:end="11:48"><condition pos:start="9:27" pos:end="9:85"><expr pos:start="9:27" pos:end="9:83"><name pos:start="9:27" pos:end="9:36"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:36">buf_end</name></name> <operator pos:start="9:38" pos:end="9:38">-</operator> <name pos:start="9:40" pos:end="9:48"><name pos:start="9:40" pos:end="9:40">s</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:48">buffer</name></name> <operator pos:start="9:50" pos:end="9:50">+</operator> <name pos:start="9:52" pos:end="9:66">max_buffer_size</name> <operator pos:start="9:68" pos:end="9:68">&lt;</operator> <name pos:start="9:70" pos:end="9:83"><name pos:start="9:70" pos:end="9:70">s</name><operator pos:start="9:71" pos:end="9:72">-&gt;</operator><name pos:start="9:73" pos:end="9:83">buffer_size</name></name></expr> ?</condition><then pos:start="11:27" pos:end="11:36">

                          <expr pos:start="11:27" pos:end="11:36"><name pos:start="11:27" pos:end="11:36"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:36">buf_end</name></name></expr> </then><else pos:start="11:38" pos:end="11:48">: <expr pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:40">s</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:48">buffer</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:60"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">len</name>             <init pos:start="13:25" pos:end="13:60">= <expr pos:start="13:27" pos:end="13:60"><name pos:start="13:27" pos:end="13:40"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:40">buffer_size</name></name> <operator pos:start="13:42" pos:end="13:42">-</operator> <operator pos:start="13:44" pos:end="13:44">(</operator><name pos:start="13:45" pos:end="13:47">dst</name> <operator pos:start="13:49" pos:end="13:49">-</operator> <name pos:start="13:51" pos:end="13:59"><name pos:start="13:51" pos:end="13:51">s</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:59">buffer</name></name><operator pos:start="13:60" pos:end="13:60">)</operator></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:80">/* can't fill the buffer without read_packet, just set EOF if appropriate */</comment>

    <if_stmt pos:start="19:5" pos:end="21:27"><if pos:start="19:5" pos:end="21:27">if <condition pos:start="19:8" pos:end="19:52">(<expr pos:start="19:9" pos:end="19:51"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:23"><name pos:start="19:10" pos:end="19:10">s</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:23">read_packet</name></name> <operator pos:start="19:25" pos:end="19:26">&amp;&amp;</operator> <name pos:start="19:28" pos:end="19:37"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:37">buf_ptr</name></name> <operator pos:start="19:39" pos:end="19:40">&gt;=</operator> <name pos:start="19:42" pos:end="19:51"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:51">buf_end</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:27"><block_content pos:start="21:9" pos:end="21:27">

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">eof_reached</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:55">/* no need to do anything if EOF already reached */</comment>

    <if_stmt pos:start="27:5" pos:end="29:15"><if pos:start="27:5" pos:end="29:15">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:22">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:15"><block_content pos:start="29:9" pos:end="29:15">

        <return pos:start="29:9" pos:end="29:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:47">(<expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:26">update_checksum</name></name> <operator pos:start="33:28" pos:end="33:29">&amp;&amp;</operator> <name pos:start="33:31" pos:end="33:33">dst</name> <operator pos:start="33:35" pos:end="33:36">==</operator> <name pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:38">s</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:46">buffer</name></name></expr>)</condition> <block pos:start="33:49" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:36">

        <if_stmt pos:start="35:9" pos:end="39:75"><if pos:start="35:9" pos:end="39:75">if <condition pos:start="35:12" pos:end="35:41">(<expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">buf_end</name></name> <operator pos:start="35:24" pos:end="35:24">&gt;</operator> <name pos:start="35:26" pos:end="35:40"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:40">checksum_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="39:75"><block_content pos:start="37:13" pos:end="39:75">

            <expr_stmt pos:start="37:13" pos:end="39:75"><expr pos:start="37:13" pos:end="39:74"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:23">checksum</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="39:74"><name pos:start="37:27" pos:end="37:44"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:44">update_checksum</name></name><argument_list pos:start="37:45" pos:end="39:74">(<argument pos:start="37:46" pos:end="37:56"><expr pos:start="37:46" pos:end="37:56"><name pos:start="37:46" pos:end="37:56"><name pos:start="37:46" pos:end="37:46">s</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:56">checksum</name></name></expr></argument>, <argument pos:start="37:59" pos:end="37:73"><expr pos:start="37:59" pos:end="37:73"><name pos:start="37:59" pos:end="37:73"><name pos:start="37:59" pos:end="37:59">s</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:73">checksum_ptr</name></name></expr></argument>,

                                             <argument pos:start="39:46" pos:end="39:73"><expr pos:start="39:46" pos:end="39:73"><name pos:start="39:46" pos:end="39:55"><name pos:start="39:46" pos:end="39:46">s</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:55">buf_end</name></name> <operator pos:start="39:57" pos:end="39:57">-</operator> <name pos:start="39:59" pos:end="39:73"><name pos:start="39:59" pos:end="39:59">s</name><operator pos:start="39:60" pos:end="39:61">-&gt;</operator><name pos:start="39:62" pos:end="39:73">checksum_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:36"><expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:23">checksum_ptr</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:35"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:35">buffer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:69">/* make buffer smaller in case it ended up large after probing */</comment>

    <if_stmt pos:start="49:5" pos:end="69:5"><if pos:start="49:5" pos:end="69:5">if <condition pos:start="49:8" pos:end="49:86">(<expr pos:start="49:9" pos:end="49:85"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:22">read_packet</name></name> <operator pos:start="49:24" pos:end="49:25">&amp;&amp;</operator> <name pos:start="49:27" pos:end="49:45"><name pos:start="49:27" pos:end="49:27">s</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:45">orig_buffer_size</name></name> <operator pos:start="49:47" pos:end="49:48">&amp;&amp;</operator> <name pos:start="49:50" pos:end="49:63"><name pos:start="49:50" pos:end="49:50">s</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:63">buffer_size</name></name> <operator pos:start="49:65" pos:end="49:65">&gt;</operator> <name pos:start="49:67" pos:end="49:85"><name pos:start="49:67" pos:end="49:67">s</name><operator pos:start="49:68" pos:end="49:69">-&gt;</operator><name pos:start="49:70" pos:end="49:85">orig_buffer_size</name></name></expr>)</condition> <block pos:start="49:88" pos:end="69:5">{<block_content pos:start="51:9" pos:end="67:34">

        <if_stmt pos:start="51:9" pos:end="63:9"><if pos:start="51:9" pos:end="63:9">if <condition pos:start="51:12" pos:end="51:50">(<expr pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:15">dst</name> <operator pos:start="51:17" pos:end="51:18">==</operator> <name pos:start="51:20" pos:end="51:28"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:28">buffer</name></name> <operator pos:start="51:30" pos:end="51:31">&amp;&amp;</operator> <name pos:start="51:33" pos:end="51:42"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:42">buf_ptr</name></name> <operator pos:start="51:44" pos:end="51:45">!=</operator> <name pos:start="51:47" pos:end="51:49">dst</name></expr>)</condition> <block pos:start="51:52" pos:end="63:9">{<block_content pos:start="53:13" pos:end="61:46">

            <decl_stmt pos:start="53:13" pos:end="53:64"><decl pos:start="53:13" pos:end="53:63"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:19">ret</name> <init pos:start="53:21" pos:end="53:63">= <expr pos:start="53:23" pos:end="53:63"><call pos:start="53:23" pos:end="53:63"><name pos:start="53:23" pos:end="53:39">ffio_set_buf_size</name><argument_list pos:start="53:40" pos:end="53:63">(<argument pos:start="53:41" pos:end="53:41"><expr pos:start="53:41" pos:end="53:41"><name pos:start="53:41" pos:end="53:41">s</name></expr></argument>, <argument pos:start="53:44" pos:end="53:62"><expr pos:start="53:44" pos:end="53:62"><name pos:start="53:44" pos:end="53:62"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:62">orig_buffer_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="55:13" pos:end="57:78"><if pos:start="55:13" pos:end="57:78">if <condition pos:start="55:16" pos:end="55:24">(<expr pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:19">ret</name> <operator pos:start="55:21" pos:end="55:21">&lt;</operator> <literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:78"><block_content pos:start="57:17" pos:end="57:78">

                <expr_stmt pos:start="57:17" pos:end="57:78"><expr pos:start="57:17" pos:end="57:77"><call pos:start="57:17" pos:end="57:77"><name pos:start="57:17" pos:end="57:22">av_log</name><argument_list pos:start="57:23" pos:end="57:77">(<argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">s</name></expr></argument>, <argument pos:start="57:27" pos:end="57:40"><expr pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="57:43" pos:end="57:76"><expr pos:start="57:43" pos:end="57:76"><literal type="string" pos:start="57:43" pos:end="57:76">"Failed to decrease buffer size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:46"><expr pos:start="61:13" pos:end="61:45"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:27">checksum_ptr</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:33">dst</name> <operator pos:start="61:35" pos:end="61:35">=</operator> <name pos:start="61:37" pos:end="61:45"><name pos:start="61:37" pos:end="61:37">s</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:45">buffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:47"><expr pos:start="65:9" pos:end="65:46"><call pos:start="65:9" pos:end="65:46"><name pos:start="65:9" pos:end="65:18">av_assert0</name><argument_list pos:start="65:19" pos:end="65:46">(<argument pos:start="65:20" pos:end="65:45"><expr pos:start="65:20" pos:end="65:45"><name pos:start="65:20" pos:end="65:22">len</name> <operator pos:start="65:24" pos:end="65:25">&gt;=</operator> <name pos:start="65:27" pos:end="65:45"><name pos:start="65:27" pos:end="65:27">s</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:45">orig_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:11">len</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:33"><name pos:start="67:15" pos:end="67:15">s</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:33">orig_buffer_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="79:26"><if pos:start="73:5" pos:end="75:50">if <condition pos:start="73:8" pos:end="73:23">(<expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:22">read_packet</name></name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:50"><block_content pos:start="75:9" pos:end="75:50">

        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:11">len</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:49"><name pos:start="75:15" pos:end="75:28"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:28">read_packet</name></name><argument_list pos:start="75:29" pos:end="75:49">(<argument pos:start="75:30" pos:end="75:38"><expr pos:start="75:30" pos:end="75:38"><name pos:start="75:30" pos:end="75:38"><name pos:start="75:30" pos:end="75:30">s</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:38">opaque</name></name></expr></argument>, <argument pos:start="75:41" pos:end="75:43"><expr pos:start="75:41" pos:end="75:43"><name pos:start="75:41" pos:end="75:43">dst</name></expr></argument>, <argument pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="77:5" pos:end="79:26">else<block type="pseudo" pos:start="79:9" pos:end="79:26"><block_content pos:start="79:9" pos:end="79:26">

        <expr_stmt pos:start="79:9" pos:end="79:26"><expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:11">len</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:25">AVERROR_EOF</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="81:5" pos:end="105:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:27">(<expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:11">len</name> <operator pos:start="81:13" pos:end="81:14">==</operator> <name pos:start="81:16" pos:end="81:26">AVERROR_EOF</name></expr>)</condition> <block pos:start="81:29" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:27">

        <comment type="block" pos:start="83:9" pos:end="85:44">/* do not modify buffer if EOF reached so that a seek back can

           be done without rereading data */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:27"><expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:22">eof_reached</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="95:5">else if <condition pos:start="89:15" pos:end="89:23">(<expr pos:start="89:16" pos:end="89:22"><name pos:start="89:16" pos:end="89:18">len</name> <operator pos:start="89:20" pos:end="89:20">&lt;</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>)</condition> <block pos:start="89:25" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:22">

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:22">eof_reached</name></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <literal type="number" pos:start="91:26" pos:end="91:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">error</name></name><operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:21">len</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="105:5">else <block pos:start="95:12" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:29">

        <expr_stmt pos:start="97:9" pos:end="97:22"><expr pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:14">pos</name></name> <operator pos:start="97:16" pos:end="97:17">+=</operator> <name pos:start="97:19" pos:end="97:21">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:18"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:18">buf_ptr</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <name pos:start="99:22" pos:end="99:24">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:18">buf_end</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:24">dst</name> <operator pos:start="101:26" pos:end="101:26">+</operator> <name pos:start="101:28" pos:end="101:30">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:21">bytes_read</name></name> <operator pos:start="103:23" pos:end="103:24">+=</operator> <name pos:start="103:26" pos:end="103:28">len</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
