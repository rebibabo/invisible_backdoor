<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7240.c" pos:tabs="8"><function pos:start="1:1" pos:end="140:14"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">parallels_create</name><parameter_list pos:start="1:28" pos:end="1:79">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:48">filename</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:58">QemuOpts</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">opts</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:71">Error</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier><modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="140:14">{<block_content pos:start="5:5" pos:end="140:14">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:22">total_size</name></decl>, <decl pos:start="5:25" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:25" pos:end="5:31">cl_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:33"><name pos:start="7:13" pos:end="7:15">tmp</name><index pos:start="7:16" pos:end="7:33">[<expr pos:start="7:17" pos:end="7:32"><name pos:start="7:17" pos:end="7:32">BDRV_SECTOR_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">BlockBackend</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:24">bat_entries</name></decl>, <decl pos:start="13:27" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:27" pos:end="13:37">bat_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:19">ParallelsHeader</name></type> <name pos:start="15:21" pos:end="15:26">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:44"><expr pos:start="21:5" pos:end="23:43"><name pos:start="21:5" pos:end="21:14">total_size</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="23:43"><name pos:start="21:18" pos:end="21:25">ROUND_UP</name><argument_list pos:start="21:26" pos:end="23:43">(<argument pos:start="21:27" pos:end="21:72"><expr pos:start="21:27" pos:end="21:72"><call pos:start="21:27" pos:end="21:72"><name pos:start="21:27" pos:end="21:47">qemu_opt_get_size_del</name><argument_list pos:start="21:48" pos:end="21:72">(<argument pos:start="21:49" pos:end="21:52"><expr pos:start="21:49" pos:end="21:52"><name pos:start="21:49" pos:end="21:52">opts</name></expr></argument>, <argument pos:start="21:55" pos:end="21:68"><expr pos:start="21:55" pos:end="21:68"><name pos:start="21:55" pos:end="21:68">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="21:71" pos:end="21:71"><expr pos:start="21:71" pos:end="21:71"><literal type="number" pos:start="21:71" pos:end="21:71">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="23:27" pos:end="23:42"><expr pos:start="23:27" pos:end="23:42"><name pos:start="23:27" pos:end="23:42">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:67"><expr pos:start="25:5" pos:end="27:66"><name pos:start="25:5" pos:end="25:11">cl_size</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="27:66"><name pos:start="25:15" pos:end="25:22">ROUND_UP</name><argument_list pos:start="25:23" pos:end="27:66">(<argument pos:start="25:24" pos:end="27:47"><expr pos:start="25:24" pos:end="27:47"><call pos:start="25:24" pos:end="27:47"><name pos:start="25:24" pos:end="25:44">qemu_opt_get_size_del</name><argument_list pos:start="25:45" pos:end="27:47">(<argument pos:start="25:46" pos:end="25:49"><expr pos:start="25:46" pos:end="25:49"><name pos:start="25:46" pos:end="25:49">opts</name></expr></argument>, <argument pos:start="25:52" pos:end="25:73"><expr pos:start="25:52" pos:end="25:73"><name pos:start="25:52" pos:end="25:73">BLOCK_OPT_CLUSTER_SIZE</name></expr></argument>,

                          <argument pos:start="27:27" pos:end="27:46"><expr pos:start="27:27" pos:end="27:46"><name pos:start="27:27" pos:end="27:46">DEFAULT_CLUSTER_SIZE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:50" pos:end="27:65"><expr pos:start="27:50" pos:end="27:65"><name pos:start="27:50" pos:end="27:65">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <expr_stmt pos:start="35:5" pos:end="35:55"><expr pos:start="35:5" pos:end="35:54"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:54"><name pos:start="35:11" pos:end="35:26">bdrv_create_file</name><argument_list pos:start="35:27" pos:end="35:54">(<argument pos:start="35:28" pos:end="35:35"><expr pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:35">filename</name></expr></argument>, <argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">opts</name></expr></argument>, <argument pos:start="35:44" pos:end="35:53"><expr pos:start="35:44" pos:end="35:53"><operator pos:start="35:44" pos:end="35:44">&amp;</operator><name pos:start="35:45" pos:end="35:53">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="140:14"><if pos:start="37:5" pos:end="140:14">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition> <block pos:start="37:18" pos:end="140:14">{<block_content pos:start="40:9" pos:end="140:14">


        <return pos:start="40:9" pos:end="40:19">return <expr pos:start="40:16" pos:end="40:18"><name pos:start="40:16" pos:end="40:18">ret</name></expr>;</return>




    <expr_stmt pos:start="45:5" pos:end="47:67"><expr pos:start="45:5" pos:end="47:66"><name pos:start="45:5" pos:end="45:8">file</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="47:66"><name pos:start="45:12" pos:end="45:23">blk_new_open</name><argument_list pos:start="45:24" pos:end="47:66">(<argument pos:start="45:25" pos:end="45:32"><expr pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:32">filename</name></expr></argument>, <argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">NULL</name></expr></argument>, <argument pos:start="45:41" pos:end="45:44"><expr pos:start="45:41" pos:end="45:44"><name pos:start="45:41" pos:end="45:44">NULL</name></expr></argument>,

                        <argument pos:start="47:25" pos:end="47:53"><expr pos:start="47:25" pos:end="47:53"><name pos:start="47:25" pos:end="47:35">BDRV_O_RDWR</name> <operator pos:start="47:37" pos:end="47:37">|</operator> <name pos:start="47:39" pos:end="47:53">BDRV_O_PROTOCOL</name></expr></argument>, <argument pos:start="47:56" pos:end="47:65"><expr pos:start="47:56" pos:end="47:65"><operator pos:start="47:56" pos:end="47:56">&amp;</operator><name pos:start="47:57" pos:end="47:65">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="140:14"><if pos:start="49:5" pos:end="140:14">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:12">file</name> <operator pos:start="49:14" pos:end="49:15">==</operator> <name pos:start="49:17" pos:end="49:20">NULL</name></expr>)</condition> <block pos:start="49:23" pos:end="140:14">{<block_content pos:start="52:9" pos:end="140:14">


        <return pos:start="52:9" pos:end="52:20">return <expr pos:start="52:16" pos:end="52:19"><operator pos:start="52:16" pos:end="52:16">-</operator><name pos:start="52:17" pos:end="52:19">EIO</name></expr>;</return>




    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><call pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:34">blk_set_allow_write_beyond_eof</name><argument_list pos:start="57:35" pos:end="57:46">(<argument pos:start="57:36" pos:end="57:39"><expr pos:start="57:36" pos:end="57:39"><name pos:start="57:36" pos:end="57:39">file</name></expr></argument>, <argument pos:start="57:42" pos:end="57:45"><expr pos:start="57:42" pos:end="57:45"><name pos:start="57:42" pos:end="57:45">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:32"><expr pos:start="61:5" pos:end="61:31"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:31"><name pos:start="61:11" pos:end="61:22">blk_truncate</name><argument_list pos:start="61:23" pos:end="61:31">(<argument pos:start="61:24" pos:end="61:27"><expr pos:start="61:24" pos:end="61:27"><name pos:start="61:24" pos:end="61:27">file</name></expr></argument>, <argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="140:14"><if pos:start="63:5" pos:end="140:14">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="140:14">{<block_content pos:start="65:9" pos:end="140:14">

        <goto pos:start="65:9" pos:end="65:18">goto <name pos:start="65:14" pos:end="65:17">exit</name>;</goto>




    <expr_stmt pos:start="70:5" pos:end="70:52"><expr pos:start="70:5" pos:end="70:51"><name pos:start="70:5" pos:end="70:15">bat_entries</name> <operator pos:start="70:17" pos:end="70:17">=</operator> <call pos:start="70:19" pos:end="70:51"><name pos:start="70:19" pos:end="70:30">DIV_ROUND_UP</name><argument_list pos:start="70:31" pos:end="70:51">(<argument pos:start="70:32" pos:end="70:41"><expr pos:start="70:32" pos:end="70:41"><name pos:start="70:32" pos:end="70:41">total_size</name></expr></argument>, <argument pos:start="70:44" pos:end="70:50"><expr pos:start="70:44" pos:end="70:50"><name pos:start="70:44" pos:end="70:50">cl_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="72:68"><expr pos:start="72:5" pos:end="72:67"><name pos:start="72:5" pos:end="72:15">bat_sectors</name> <operator pos:start="72:17" pos:end="72:17">=</operator> <call pos:start="72:19" pos:end="72:67"><name pos:start="72:19" pos:end="72:30">DIV_ROUND_UP</name><argument_list pos:start="72:31" pos:end="72:67">(<argument pos:start="72:32" pos:end="72:57"><expr pos:start="72:32" pos:end="72:57"><call pos:start="72:32" pos:end="72:57"><name pos:start="72:32" pos:end="72:44">bat_entry_off</name><argument_list pos:start="72:45" pos:end="72:57">(<argument pos:start="72:46" pos:end="72:56"><expr pos:start="72:46" pos:end="72:56"><name pos:start="72:46" pos:end="72:56">bat_entries</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="72:60" pos:end="72:66"><expr pos:start="72:60" pos:end="72:66"><name pos:start="72:60" pos:end="72:66">cl_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="74:63"><expr pos:start="74:5" pos:end="74:62"><name pos:start="74:5" pos:end="74:15">bat_sectors</name> <operator pos:start="74:17" pos:end="74:17">=</operator> <operator pos:start="74:19" pos:end="74:19">(</operator><name pos:start="74:20" pos:end="74:30">bat_sectors</name> <operator pos:start="74:32" pos:end="74:32">*</operator>  <name pos:start="74:35" pos:end="74:41">cl_size</name><operator pos:start="74:42" pos:end="74:42">)</operator> <operator pos:start="74:44" pos:end="74:45">&gt;&gt;</operator> <name pos:start="74:47" pos:end="74:62">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>



    <expr_stmt pos:start="78:5" pos:end="78:39"><expr pos:start="78:5" pos:end="78:38"><call pos:start="78:5" pos:end="78:38"><name pos:start="78:5" pos:end="78:10">memset</name><argument_list pos:start="78:11" pos:end="78:38">(<argument pos:start="78:12" pos:end="78:18"><expr pos:start="78:12" pos:end="78:18"><operator pos:start="78:12" pos:end="78:12">&amp;</operator><name pos:start="78:13" pos:end="78:18">header</name></expr></argument>, <argument pos:start="78:21" pos:end="78:21"><expr pos:start="78:21" pos:end="78:21"><literal type="number" pos:start="78:21" pos:end="78:21">0</literal></expr></argument>, <argument pos:start="78:24" pos:end="78:37"><expr pos:start="78:24" pos:end="78:37"><sizeof pos:start="78:24" pos:end="78:37">sizeof<argument_list pos:start="78:30" pos:end="78:37">(<argument pos:start="78:31" pos:end="78:36"><expr pos:start="78:31" pos:end="78:36"><name pos:start="78:31" pos:end="78:36">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="80:5" pos:end="80:62"><expr pos:start="80:5" pos:end="80:61"><call pos:start="80:5" pos:end="80:61"><name pos:start="80:5" pos:end="80:10">memcpy</name><argument_list pos:start="80:11" pos:end="80:61">(<argument pos:start="80:12" pos:end="80:23"><expr pos:start="80:12" pos:end="80:23"><name pos:start="80:12" pos:end="80:23"><name pos:start="80:12" pos:end="80:17">header</name><operator pos:start="80:18" pos:end="80:18">.</operator><name pos:start="80:19" pos:end="80:23">magic</name></name></expr></argument>, <argument pos:start="80:26" pos:end="80:38"><expr pos:start="80:26" pos:end="80:38"><name pos:start="80:26" pos:end="80:38">HEADER_MAGIC2</name></expr></argument>, <argument pos:start="80:41" pos:end="80:60"><expr pos:start="80:41" pos:end="80:60"><sizeof pos:start="80:41" pos:end="80:60">sizeof<argument_list pos:start="80:47" pos:end="80:60">(<argument pos:start="80:48" pos:end="80:59"><expr pos:start="80:48" pos:end="80:59"><name pos:start="80:48" pos:end="80:59"><name pos:start="80:48" pos:end="80:53">header</name><operator pos:start="80:54" pos:end="80:54">.</operator><name pos:start="80:55" pos:end="80:59">magic</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="82:5" pos:end="82:49"><expr pos:start="82:5" pos:end="82:48"><name pos:start="82:5" pos:end="82:18"><name pos:start="82:5" pos:end="82:10">header</name><operator pos:start="82:11" pos:end="82:11">.</operator><name pos:start="82:12" pos:end="82:18">version</name></name> <operator pos:start="82:20" pos:end="82:20">=</operator> <call pos:start="82:22" pos:end="82:48"><name pos:start="82:22" pos:end="82:32">cpu_to_le32</name><argument_list pos:start="82:33" pos:end="82:48">(<argument pos:start="82:34" pos:end="82:47"><expr pos:start="82:34" pos:end="82:47"><name pos:start="82:34" pos:end="82:47">HEADER_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="84:5" pos:end="84:71">/* don't care much about geometry, it is not used on image level */</comment>

    <expr_stmt pos:start="86:5" pos:end="86:35"><expr pos:start="86:5" pos:end="86:34"><name pos:start="86:5" pos:end="86:16"><name pos:start="86:5" pos:end="86:10">header</name><operator pos:start="86:11" pos:end="86:11">.</operator><name pos:start="86:12" pos:end="86:16">heads</name></name> <operator pos:start="86:18" pos:end="86:18">=</operator> <call pos:start="86:20" pos:end="86:34"><name pos:start="86:20" pos:end="86:30">cpu_to_le32</name><argument_list pos:start="86:31" pos:end="86:34">(<argument pos:start="86:32" pos:end="86:33"><expr pos:start="86:32" pos:end="86:33"><literal type="number" pos:start="86:32" pos:end="86:33">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="88:5" pos:end="88:76"><expr pos:start="88:5" pos:end="88:75"><name pos:start="88:5" pos:end="88:20"><name pos:start="88:5" pos:end="88:10">header</name><operator pos:start="88:11" pos:end="88:11">.</operator><name pos:start="88:12" pos:end="88:20">cylinders</name></name> <operator pos:start="88:22" pos:end="88:22">=</operator> <call pos:start="88:24" pos:end="88:75"><name pos:start="88:24" pos:end="88:34">cpu_to_le32</name><argument_list pos:start="88:35" pos:end="88:75">(<argument pos:start="88:36" pos:end="88:74"><expr pos:start="88:36" pos:end="88:74"><name pos:start="88:36" pos:end="88:45">total_size</name> <operator pos:start="88:47" pos:end="88:47">/</operator> <name pos:start="88:49" pos:end="88:64">BDRV_SECTOR_SIZE</name> <operator pos:start="88:66" pos:end="88:66">/</operator> <literal type="number" pos:start="88:68" pos:end="88:69">16</literal> <operator pos:start="88:71" pos:end="88:71">/</operator> <literal type="number" pos:start="88:73" pos:end="88:74">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="90:5" pos:end="90:61"><expr pos:start="90:5" pos:end="90:60"><name pos:start="90:5" pos:end="90:17"><name pos:start="90:5" pos:end="90:10">header</name><operator pos:start="90:11" pos:end="90:11">.</operator><name pos:start="90:12" pos:end="90:17">tracks</name></name> <operator pos:start="90:19" pos:end="90:19">=</operator> <call pos:start="90:21" pos:end="90:60"><name pos:start="90:21" pos:end="90:31">cpu_to_le32</name><argument_list pos:start="90:32" pos:end="90:60">(<argument pos:start="90:33" pos:end="90:59"><expr pos:start="90:33" pos:end="90:59"><name pos:start="90:33" pos:end="90:39">cl_size</name> <operator pos:start="90:41" pos:end="90:42">&gt;&gt;</operator> <name pos:start="90:44" pos:end="90:59">BDRV_SECTOR_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:50"><expr pos:start="92:5" pos:end="92:49"><name pos:start="92:5" pos:end="92:22"><name pos:start="92:5" pos:end="92:10">header</name><operator pos:start="92:11" pos:end="92:11">.</operator><name pos:start="92:12" pos:end="92:22">bat_entries</name></name> <operator pos:start="92:24" pos:end="92:24">=</operator> <call pos:start="92:26" pos:end="92:49"><name pos:start="92:26" pos:end="92:36">cpu_to_le32</name><argument_list pos:start="92:37" pos:end="92:49">(<argument pos:start="92:38" pos:end="92:48"><expr pos:start="92:38" pos:end="92:48"><name pos:start="92:38" pos:end="92:48">bat_entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="94:5" pos:end="94:80"><expr pos:start="94:5" pos:end="94:79"><name pos:start="94:5" pos:end="94:21"><name pos:start="94:5" pos:end="94:10">header</name><operator pos:start="94:11" pos:end="94:11">.</operator><name pos:start="94:12" pos:end="94:21">nb_sectors</name></name> <operator pos:start="94:23" pos:end="94:23">=</operator> <call pos:start="94:25" pos:end="94:79"><name pos:start="94:25" pos:end="94:35">cpu_to_le64</name><argument_list pos:start="94:36" pos:end="94:79">(<argument pos:start="94:37" pos:end="94:78"><expr pos:start="94:37" pos:end="94:78"><call pos:start="94:37" pos:end="94:78"><name pos:start="94:37" pos:end="94:48">DIV_ROUND_UP</name><argument_list pos:start="94:49" pos:end="94:78">(<argument pos:start="94:50" pos:end="94:59"><expr pos:start="94:50" pos:end="94:59"><name pos:start="94:50" pos:end="94:59">total_size</name></expr></argument>, <argument pos:start="94:62" pos:end="94:77"><expr pos:start="94:62" pos:end="94:77"><name pos:start="94:62" pos:end="94:77">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="96:5" pos:end="96:47"><expr pos:start="96:5" pos:end="96:46"><name pos:start="96:5" pos:end="96:19"><name pos:start="96:5" pos:end="96:10">header</name><operator pos:start="96:11" pos:end="96:11">.</operator><name pos:start="96:12" pos:end="96:19">data_off</name></name> <operator pos:start="96:21" pos:end="96:21">=</operator> <call pos:start="96:23" pos:end="96:46"><name pos:start="96:23" pos:end="96:33">cpu_to_le32</name><argument_list pos:start="96:34" pos:end="96:46">(<argument pos:start="96:35" pos:end="96:45"><expr pos:start="96:35" pos:end="96:45"><name pos:start="96:35" pos:end="96:45">bat_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="100:5" pos:end="100:28">/* write all the data */</comment>

    <expr_stmt pos:start="102:5" pos:end="102:32"><expr pos:start="102:5" pos:end="102:31"><call pos:start="102:5" pos:end="102:31"><name pos:start="102:5" pos:end="102:10">memset</name><argument_list pos:start="102:11" pos:end="102:31">(<argument pos:start="102:12" pos:end="102:14"><expr pos:start="102:12" pos:end="102:14"><name pos:start="102:12" pos:end="102:14">tmp</name></expr></argument>, <argument pos:start="102:17" pos:end="102:17"><expr pos:start="102:17" pos:end="102:17"><literal type="number" pos:start="102:17" pos:end="102:17">0</literal></expr></argument>, <argument pos:start="102:20" pos:end="102:30"><expr pos:start="102:20" pos:end="102:30"><sizeof pos:start="102:20" pos:end="102:30">sizeof<argument_list pos:start="102:26" pos:end="102:30">(<argument pos:start="102:27" pos:end="102:29"><expr pos:start="102:27" pos:end="102:29"><name pos:start="102:27" pos:end="102:29">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="104:5" pos:end="104:41"><expr pos:start="104:5" pos:end="104:40"><call pos:start="104:5" pos:end="104:40"><name pos:start="104:5" pos:end="104:10">memcpy</name><argument_list pos:start="104:11" pos:end="104:40">(<argument pos:start="104:12" pos:end="104:14"><expr pos:start="104:12" pos:end="104:14"><name pos:start="104:12" pos:end="104:14">tmp</name></expr></argument>, <argument pos:start="104:17" pos:end="104:23"><expr pos:start="104:17" pos:end="104:23"><operator pos:start="104:17" pos:end="104:17">&amp;</operator><name pos:start="104:18" pos:end="104:23">header</name></expr></argument>, <argument pos:start="104:26" pos:end="104:39"><expr pos:start="104:26" pos:end="104:39"><sizeof pos:start="104:26" pos:end="104:39">sizeof<argument_list pos:start="104:32" pos:end="104:39">(<argument pos:start="104:33" pos:end="104:38"><expr pos:start="104:33" pos:end="104:38"><name pos:start="104:33" pos:end="104:38">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="108:5" pos:end="108:56"><expr pos:start="108:5" pos:end="108:55"><name pos:start="108:5" pos:end="108:7">ret</name> <operator pos:start="108:9" pos:end="108:9">=</operator> <call pos:start="108:11" pos:end="108:55"><name pos:start="108:11" pos:end="108:20">blk_pwrite</name><argument_list pos:start="108:21" pos:end="108:55">(<argument pos:start="108:22" pos:end="108:25"><expr pos:start="108:22" pos:end="108:25"><name pos:start="108:22" pos:end="108:25">file</name></expr></argument>, <argument pos:start="108:28" pos:end="108:28"><expr pos:start="108:28" pos:end="108:28"><literal type="number" pos:start="108:28" pos:end="108:28">0</literal></expr></argument>, <argument pos:start="108:31" pos:end="108:33"><expr pos:start="108:31" pos:end="108:33"><name pos:start="108:31" pos:end="108:33">tmp</name></expr></argument>, <argument pos:start="108:36" pos:end="108:51"><expr pos:start="108:36" pos:end="108:51"><name pos:start="108:36" pos:end="108:51">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="108:54" pos:end="108:54"><expr pos:start="108:54" pos:end="108:54"><literal type="number" pos:start="108:54" pos:end="108:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="110:5" pos:end="140:14"><if pos:start="110:5" pos:end="140:14">if <condition pos:start="110:8" pos:end="110:16">(<expr pos:start="110:9" pos:end="110:15"><name pos:start="110:9" pos:end="110:11">ret</name> <operator pos:start="110:13" pos:end="110:13">&lt;</operator> <literal type="number" pos:start="110:15" pos:end="110:15">0</literal></expr>)</condition> <block pos:start="110:18" pos:end="140:14">{<block_content pos:start="112:9" pos:end="140:14">

        <goto pos:start="112:9" pos:end="112:18">goto <name pos:start="112:14" pos:end="112:17">exit</name>;</goto>


    <expr_stmt pos:start="115:5" pos:end="117:70"><expr pos:start="115:5" pos:end="117:69"><name pos:start="115:5" pos:end="115:7">ret</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <call pos:start="115:11" pos:end="117:69"><name pos:start="115:11" pos:end="115:27">blk_pwrite_zeroes</name><argument_list pos:start="115:28" pos:end="117:69">(<argument pos:start="115:29" pos:end="115:32"><expr pos:start="115:29" pos:end="115:32"><name pos:start="115:29" pos:end="115:32">file</name></expr></argument>, <argument pos:start="115:35" pos:end="115:50"><expr pos:start="115:35" pos:end="115:50"><name pos:start="115:35" pos:end="115:50">BDRV_SECTOR_SIZE</name></expr></argument>,

                            <argument pos:start="117:29" pos:end="117:65"><expr pos:start="117:29" pos:end="117:65"><operator pos:start="117:29" pos:end="117:29">(</operator><name pos:start="117:30" pos:end="117:40">bat_sectors</name> <operator pos:start="117:42" pos:end="117:42">-</operator> <literal type="number" pos:start="117:44" pos:end="117:44">1</literal><operator pos:start="117:45" pos:end="117:45">)</operator> <operator pos:start="117:47" pos:end="117:48">&lt;&lt;</operator> <name pos:start="117:50" pos:end="117:65">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="117:68" pos:end="117:68"><expr pos:start="117:68" pos:end="117:68"><literal type="number" pos:start="117:68" pos:end="117:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="140:14"><if pos:start="119:5" pos:end="140:14">if <condition pos:start="119:8" pos:end="119:16">(<expr pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">&lt;</operator> <literal type="number" pos:start="119:15" pos:end="119:15">0</literal></expr>)</condition> <block pos:start="119:18" pos:end="140:14">{<block_content pos:start="121:9" pos:end="140:14">

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">exit</name>;</goto>


    <expr_stmt pos:start="124:5" pos:end="124:12"><expr pos:start="124:5" pos:end="124:11"><name pos:start="124:5" pos:end="124:7">ret</name> <operator pos:start="124:9" pos:end="124:9">=</operator> <literal type="number" pos:start="124:11" pos:end="124:11">0</literal></expr>;</expr_stmt>



<label pos:start="128:1" pos:end="128:5"><name pos:start="128:1" pos:end="128:4">done</name>:</label>

    <expr_stmt pos:start="130:5" pos:end="130:20"><expr pos:start="130:5" pos:end="130:19"><call pos:start="130:5" pos:end="130:19"><name pos:start="130:5" pos:end="130:13">blk_unref</name><argument_list pos:start="130:14" pos:end="130:19">(<argument pos:start="130:15" pos:end="130:18"><expr pos:start="130:15" pos:end="130:18"><name pos:start="130:15" pos:end="130:18">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="132:5" pos:end="132:15">return <expr pos:start="132:12" pos:end="132:14"><name pos:start="132:12" pos:end="132:14">ret</name></expr>;</return>



<label pos:start="136:1" pos:end="136:5"><name pos:start="136:1" pos:end="136:4">exit</name>:</label>

    <expr_stmt pos:start="138:5" pos:end="138:69"><expr pos:start="138:5" pos:end="138:68"><call pos:start="138:5" pos:end="138:68"><name pos:start="138:5" pos:end="138:20">error_setg_errno</name><argument_list pos:start="138:21" pos:end="138:68">(<argument pos:start="138:22" pos:end="138:25"><expr pos:start="138:22" pos:end="138:25"><name pos:start="138:22" pos:end="138:25">errp</name></expr></argument>, <argument pos:start="138:28" pos:end="138:31"><expr pos:start="138:28" pos:end="138:31"><operator pos:start="138:28" pos:end="138:28">-</operator><name pos:start="138:29" pos:end="138:31">ret</name></expr></argument>, <argument pos:start="138:34" pos:end="138:67"><expr pos:start="138:34" pos:end="138:67"><literal type="string" pos:start="138:34" pos:end="138:67">"Failed to create Parallels image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <goto pos:start="140:5" pos:end="140:14">goto <name pos:start="140:10" pos:end="140:13">done</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
