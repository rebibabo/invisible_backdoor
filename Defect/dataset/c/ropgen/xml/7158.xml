<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7158.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:34">rdma_start_outgoing_migration</name><parameter_list pos:start="1:35" pos:end="3:64">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:49"><decl pos:start="3:29" pos:end="3:49"><type pos:start="3:29" pos:end="3:49"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:49">host_port</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:63"><decl pos:start="3:52" pos:end="3:63"><type pos:start="3:52" pos:end="3:63"><name pos:start="3:52" pos:end="3:56">Error</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier><modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:24">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MigrationState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>, <decl pos:start="9:30" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:30" pos:end="9:30">*</modifier><modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:35">temp</name> <init pos:start="9:37" pos:end="9:48">= <expr pos:start="9:39" pos:end="9:48"><operator pos:start="9:39" pos:end="9:39">&amp;</operator><name pos:start="9:40" pos:end="9:48">local_err</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:67"><decl pos:start="11:5" pos:end="11:66"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">RDMAContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:21">rdma</name> <init pos:start="11:23" pos:end="11:66">= <expr pos:start="11:25" pos:end="11:66"><call pos:start="11:25" pos:end="11:66"><name pos:start="11:25" pos:end="11:43">qemu_rdma_data_init</name><argument_list pos:start="11:44" pos:end="11:66">(<argument pos:start="11:45" pos:end="11:53"><expr pos:start="11:45" pos:end="11:53"><name pos:start="11:45" pos:end="11:53">host_port</name></expr></argument>, <argument pos:start="11:56" pos:end="11:65"><expr pos:start="11:56" pos:end="11:65"><operator pos:start="11:56" pos:end="11:56">&amp;</operator><name pos:start="11:57" pos:end="11:65">local_err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:12">rdma</name> <operator pos:start="17:14" pos:end="17:15">==</operator> <name pos:start="17:17" pos:end="17:20">NULL</name></expr>)</condition> <block pos:start="17:23" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:74"><expr pos:start="19:9" pos:end="19:73"><call pos:start="19:9" pos:end="19:73"><name pos:start="19:9" pos:end="19:13">ERROR</name><argument_list pos:start="19:14" pos:end="19:73">(<argument pos:start="19:15" pos:end="19:18"><expr pos:start="19:15" pos:end="19:18"><name pos:start="19:15" pos:end="19:18">temp</name></expr></argument>, <argument pos:start="19:21" pos:end="19:67"><expr pos:start="19:21" pos:end="19:67"><literal type="string" pos:start="19:21" pos:end="19:67">"Failed to initialize RDMA data structures! %d"</literal></expr></argument>, <argument pos:start="19:70" pos:end="19:72"><expr pos:start="19:70" pos:end="19:72"><name pos:start="19:70" pos:end="19:72">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:68"><expr pos:start="27:5" pos:end="29:67"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="29:67"><name pos:start="27:11" pos:end="27:31">qemu_rdma_source_init</name><argument_list pos:start="27:32" pos:end="29:67">(<argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">rdma</name></expr></argument>, <argument pos:start="27:39" pos:end="27:48"><expr pos:start="27:39" pos:end="27:48"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:48">local_err</name></expr></argument>,

        <argument pos:start="29:9" pos:end="29:66"><expr pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:31">enabled_capabilities</name><index pos:start="29:32" pos:end="29:66">[<expr pos:start="29:33" pos:end="29:65"><name pos:start="29:33" pos:end="29:65">MIGRATION_CAPABILITY_RDMA_PIN_ALL</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:12">(<expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">ret</name></expr>)</condition> <block pos:start="33:14" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:65"><expr pos:start="41:5" pos:end="41:64"><call pos:start="41:5" pos:end="41:64"><name pos:start="41:5" pos:end="41:62">trace_rdma_start_outgoing_migration_after_rdma_source_init</name><argument_list pos:start="41:63" pos:end="41:64">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:45"><name pos:start="43:11" pos:end="43:27">qemu_rdma_connect</name><argument_list pos:start="43:28" pos:end="43:45">(<argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">rdma</name></expr></argument>, <argument pos:start="43:35" pos:end="43:44"><expr pos:start="43:35" pos:end="43:44"><operator pos:start="43:35" pos:end="43:35">&amp;</operator><name pos:start="43:36" pos:end="43:44">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:12">(<expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">ret</name></expr>)</condition> <block pos:start="47:14" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:17">

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:61"><expr pos:start="55:5" pos:end="55:60"><call pos:start="55:5" pos:end="55:60"><name pos:start="55:5" pos:end="55:58">trace_rdma_start_outgoing_migration_after_rdma_connect</name><argument_list pos:start="55:59" pos:end="55:60">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:18">to_dst_file</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:48"><name pos:start="59:22" pos:end="59:36">qemu_fopen_rdma</name><argument_list pos:start="59:37" pos:end="59:48">(<argument pos:start="59:38" pos:end="59:41"><expr pos:start="59:38" pos:end="59:41"><name pos:start="59:38" pos:end="59:41">rdma</name></expr></argument>, <argument pos:start="59:44" pos:end="59:47"><expr pos:start="59:44" pos:end="59:47"><literal type="string" pos:start="59:44" pos:end="59:47">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><call pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:22">migrate_fd_connect</name><argument_list pos:start="61:23" pos:end="61:25">(<argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:11">return;</return>

<label pos:start="65:1" pos:end="65:4"><name pos:start="65:1" pos:end="65:3">err</name>:</label>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><call pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:19">error_propagate</name><argument_list pos:start="67:20" pos:end="67:36">(<argument pos:start="67:21" pos:end="67:24"><expr pos:start="67:21" pos:end="67:24"><name pos:start="67:21" pos:end="67:24">errp</name></expr></argument>, <argument pos:start="67:27" pos:end="67:35"><expr pos:start="67:27" pos:end="67:35"><name pos:start="67:27" pos:end="67:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><call pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:10">g_free</name><argument_list pos:start="69:11" pos:end="69:16">(<argument pos:start="69:12" pos:end="69:15"><expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">rdma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><call pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:20">migrate_fd_error</name><argument_list pos:start="71:21" pos:end="71:23">(<argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><name pos:start="71:22" pos:end="71:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
