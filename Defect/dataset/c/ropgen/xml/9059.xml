<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9059.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">pit_set_gate</name><parameter_list pos:start="1:18" pos:end="1:54">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:26">PITState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">pit</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:44">channel</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:53"><decl pos:start="1:47" pos:end="1:53"><type pos:start="1:47" pos:end="1:53"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:53">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:18">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">PITChannelState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:48">= <expr pos:start="5:26" pos:end="5:48"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:48"><name pos:start="5:27" pos:end="5:29">pit</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:39">channels</name><index pos:start="5:40" pos:end="5:48">[<expr pos:start="5:41" pos:end="5:47"><name pos:start="5:41" pos:end="5:47">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="55:5">switch<condition pos:start="9:11" pos:end="9:19">(<expr pos:start="9:12" pos:end="9:18"><name pos:start="9:12" pos:end="9:18"><name pos:start="9:12" pos:end="9:12">s</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:18">mode</name></name></expr>)</condition> <block pos:start="9:21" pos:end="55:5">{<block_content pos:start="11:5" pos:end="53:14">

    <default pos:start="11:5" pos:end="11:12">default:</default>

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">0</literal></expr>:</case>

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">4</literal></expr>:</case>

        <comment type="block" pos:start="17:9" pos:end="17:47">/* XXX: just disable/enable counting */</comment>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">1</literal></expr>:</case>

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">5</literal></expr>:</case>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:26">(<expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:19">gate</name></name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <name pos:start="25:23" pos:end="25:25">val</name></expr>)</condition> <block pos:start="25:28" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:56">

            <comment type="block" pos:start="27:13" pos:end="27:49">/* restart counting on rising edge */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:58"><expr pos:start="29:13" pos:end="29:57"><name pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:30">count_load_time</name></name> <operator pos:start="29:32" pos:end="29:32">=</operator> <call pos:start="29:34" pos:end="29:57"><name pos:start="29:34" pos:end="29:47">qemu_get_clock</name><argument_list pos:start="29:48" pos:end="29:57">(<argument pos:start="29:49" pos:end="29:56"><expr pos:start="29:49" pos:end="29:56"><name pos:start="29:49" pos:end="29:56">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:56"><expr pos:start="31:13" pos:end="31:55"><call pos:start="31:13" pos:end="31:55"><name pos:start="31:13" pos:end="31:32">pit_irq_timer_update</name><argument_list pos:start="31:33" pos:end="31:55">(<argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">s</name></expr></argument>, <argument pos:start="31:37" pos:end="31:54"><expr pos:start="31:37" pos:end="31:54"><name pos:start="31:37" pos:end="31:54"><name pos:start="31:37" pos:end="31:37">s</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:54">count_load_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">2</literal></expr>:</case>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">3</literal></expr>:</case>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:26">(<expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">gate</name></name> <operator pos:start="41:21" pos:end="41:21">&lt;</operator> <name pos:start="41:23" pos:end="41:25">val</name></expr>)</condition> <block pos:start="41:28" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:56">

            <comment type="block" pos:start="43:13" pos:end="43:49">/* restart counting on rising edge */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:58"><expr pos:start="45:13" pos:end="45:57"><name pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:30">count_load_time</name></name> <operator pos:start="45:32" pos:end="45:32">=</operator> <call pos:start="45:34" pos:end="45:57"><name pos:start="45:34" pos:end="45:47">qemu_get_clock</name><argument_list pos:start="45:48" pos:end="45:57">(<argument pos:start="45:49" pos:end="45:56"><expr pos:start="45:49" pos:end="45:56"><name pos:start="45:49" pos:end="45:56">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:56"><expr pos:start="47:13" pos:end="47:55"><call pos:start="47:13" pos:end="47:55"><name pos:start="47:13" pos:end="47:32">pit_irq_timer_update</name><argument_list pos:start="47:33" pos:end="47:55">(<argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">s</name></expr></argument>, <argument pos:start="47:37" pos:end="47:54"><expr pos:start="47:37" pos:end="47:54"><name pos:start="47:37" pos:end="47:54"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:54">count_load_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:42">/* XXX: disable/enable counting */</comment>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:11">gate</name></name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:17">val</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
