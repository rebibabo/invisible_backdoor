<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25226.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">update_max_chunk_size</name><parameter_list pos:start="1:34" pos:end="5:66">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:46">BDRVDMGState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:65">chunk</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:63"><decl pos:start="3:35" pos:end="3:63"><type pos:start="3:35" pos:end="3:63"><name pos:start="3:35" pos:end="3:42">uint32_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:63">max_compressed_size</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:65"><decl pos:start="5:35" pos:end="5:65"><type pos:start="5:35" pos:end="5:65"><name pos:start="5:35" pos:end="5:42">uint32_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:65">max_sectors_per_chunk</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="55:1">{<block_content pos:start="9:5" pos:end="53:5">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:28">compressed_size</name> <init pos:start="9:30" pos:end="9:32">= <expr pos:start="9:32" pos:end="9:32"><literal type="number" pos:start="9:32" pos:end="9:32">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:33">uncompressed_sectors</name> <init pos:start="11:35" pos:end="11:37">= <expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="15:5" pos:end="39:5">switch <condition pos:start="15:12" pos:end="15:28">(<expr pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">types</name><index pos:start="15:21" pos:end="15:27">[<expr pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:26">chunk</name></expr>]</index></name></expr>)</condition> <block pos:start="15:30" pos:end="39:5">{<block_content pos:start="17:5" pos:end="37:14">

    <case pos:start="17:5" pos:end="17:20">case <expr pos:start="17:10" pos:end="17:19"><literal type="number" pos:start="17:10" pos:end="17:19">0x80000005</literal></expr>:</case> <comment type="block" pos:start="17:22" pos:end="17:42">/* zlib compressed */</comment>

    <case pos:start="19:5" pos:end="19:20">case <expr pos:start="19:10" pos:end="19:19"><literal type="number" pos:start="19:10" pos:end="19:19">0x80000006</literal></expr>:</case> <comment type="block" pos:start="19:22" pos:end="19:43">/* bzip2 compressed */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:23">compressed_size</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:43"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:36">lengths</name><index pos:start="21:37" pos:end="21:43">[<expr pos:start="21:38" pos:end="21:42"><name pos:start="21:38" pos:end="21:42">chunk</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:54"><expr pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:28">uncompressed_sectors</name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:53"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:46">sectorcounts</name><index pos:start="23:47" pos:end="23:53">[<expr pos:start="23:48" pos:end="23:52"><name pos:start="23:48" pos:end="23:52">chunk</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">1</literal></expr>:</case> <comment type="block" pos:start="27:13" pos:end="27:22">/* copy */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:28">uncompressed_sectors</name> <operator pos:start="29:30" pos:end="29:30">=</operator> <operator pos:start="29:32" pos:end="29:32">(</operator><name pos:start="29:33" pos:end="29:49"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">lengths</name><index pos:start="29:43" pos:end="29:49">[<expr pos:start="29:44" pos:end="29:48"><name pos:start="29:44" pos:end="29:48">chunk</name></expr>]</index></name> <operator pos:start="29:51" pos:end="29:51">+</operator> <literal type="number" pos:start="29:53" pos:end="29:55">511</literal><operator pos:start="29:56" pos:end="29:56">)</operator> <operator pos:start="29:58" pos:end="29:58">/</operator> <literal type="number" pos:start="29:60" pos:end="29:62">512</literal></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">2</literal></expr>:</case> <comment type="block" pos:start="33:13" pos:end="33:22">/* zero */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:28">uncompressed_sectors</name> <operator pos:start="35:30" pos:end="35:30">=</operator> <name pos:start="35:32" pos:end="35:53"><name pos:start="35:32" pos:end="35:32">s</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:46">sectorcounts</name><index pos:start="35:47" pos:end="35:53">[<expr pos:start="35:48" pos:end="35:52"><name pos:start="35:48" pos:end="35:52">chunk</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:47">(<expr pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:23">compressed_size</name> <operator pos:start="43:25" pos:end="43:25">&gt;</operator> <operator pos:start="43:27" pos:end="43:27">*</operator><name pos:start="43:28" pos:end="43:46">max_compressed_size</name></expr>)</condition> <block pos:start="43:49" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:47">

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:28">max_compressed_size</name> <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:46">compressed_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:54">(<expr pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:28">uncompressed_sectors</name> <operator pos:start="49:30" pos:end="49:30">&gt;</operator> <operator pos:start="49:32" pos:end="49:32">*</operator><name pos:start="49:33" pos:end="49:53">max_sectors_per_chunk</name></expr>)</condition> <block pos:start="49:56" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:54">

        <expr_stmt pos:start="51:9" pos:end="51:54"><expr pos:start="51:9" pos:end="51:53"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:30">max_sectors_per_chunk</name> <operator pos:start="51:32" pos:end="51:32">=</operator> <name pos:start="51:34" pos:end="51:53">uncompressed_sectors</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
