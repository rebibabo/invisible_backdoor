<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17254.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">kvm_virtio_pci_vq_vector_release</name><parameter_list pos:start="1:45" pos:end="5:65">(<parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:66"><name pos:start="1:46" pos:end="1:59">VirtIOPCIProxy</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">proxy</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:66"><decl pos:start="3:46" pos:end="3:66"><type pos:start="3:46" pos:end="3:66"><name pos:start="3:46" pos:end="3:53">unsigned</name> <name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:66">queue_no</name></decl></parameter>,

                                             <parameter pos:start="5:46" pos:end="5:64"><decl pos:start="5:46" pos:end="5:64"><type pos:start="5:46" pos:end="5:64"><name pos:start="5:46" pos:end="5:53">unsigned</name> <name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:64">vector</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="35:1">{<block_content pos:start="9:5" pos:end="33:64">

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">VirtQueue</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">vq</name> <init pos:start="9:19" pos:end="9:59">= <expr pos:start="9:21" pos:end="9:59"><call pos:start="9:21" pos:end="9:59"><name pos:start="9:21" pos:end="9:36">virtio_get_queue</name><argument_list pos:start="9:37" pos:end="9:59">(<argument pos:start="9:38" pos:end="9:48"><expr pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:42">proxy</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:48">vdev</name></name></expr></argument>, <argument pos:start="9:51" pos:end="9:58"><expr pos:start="9:51" pos:end="9:58"><name pos:start="9:51" pos:end="9:58">queue_no</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">EventNotifier</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">n</name> <init pos:start="11:22" pos:end="11:58">= <expr pos:start="11:24" pos:end="11:58"><call pos:start="11:24" pos:end="11:58"><name pos:start="11:24" pos:end="11:54">virtio_queue_get_guest_notifier</name><argument_list pos:start="11:55" pos:end="11:58">(<argument pos:start="11:56" pos:end="11:57"><expr pos:start="11:56" pos:end="11:57"><name pos:start="11:56" pos:end="11:57">vq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:54"><decl pos:start="13:5" pos:end="13:53"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">VirtIOIRQFD</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:22">irqfd</name> <init pos:start="13:24" pos:end="13:53">= <expr pos:start="13:26" pos:end="13:53"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:53"><name pos:start="13:27" pos:end="13:31">proxy</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:45">vector_irqfd</name><index pos:start="13:46" pos:end="13:53">[<expr pos:start="13:47" pos:end="13:52"><name pos:start="13:47" pos:end="13:52">vector</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:68"><name pos:start="19:11" pos:end="19:41">kvm_irqchip_remove_irq_notifier</name><argument_list pos:start="19:42" pos:end="19:68">(<argument pos:start="19:43" pos:end="19:51"><expr pos:start="19:43" pos:end="19:51"><name pos:start="19:43" pos:end="19:51">kvm_state</name></expr></argument>, <argument pos:start="19:54" pos:end="19:54"><expr pos:start="19:54" pos:end="19:54"><name pos:start="19:54" pos:end="19:54">n</name></expr></argument>, <argument pos:start="19:57" pos:end="19:67"><expr pos:start="19:57" pos:end="19:67"><name pos:start="19:57" pos:end="19:67"><name pos:start="19:57" pos:end="19:61">irqfd</name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:67">virq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><call pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:20">(<argument pos:start="21:12" pos:end="21:19"><expr pos:start="21:12" pos:end="21:19"><name pos:start="21:12" pos:end="21:14">ret</name> <operator pos:start="21:16" pos:end="21:17">==</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:28">(<expr pos:start="25:9" pos:end="25:27"><operator pos:start="25:9" pos:end="25:10">--</operator><name pos:start="25:11" pos:end="25:22"><name pos:start="25:11" pos:end="25:15">irqfd</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">users</name></name> <operator pos:start="25:24" pos:end="25:25">==</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>)</condition> <block pos:start="25:30" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:57">

        <expr_stmt pos:start="27:9" pos:end="27:57"><expr pos:start="27:9" pos:end="27:56"><call pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:32">kvm_irqchip_release_virq</name><argument_list pos:start="27:33" pos:end="27:56">(<argument pos:start="27:34" pos:end="27:42"><expr pos:start="27:34" pos:end="27:42"><name pos:start="27:34" pos:end="27:42">kvm_state</name></expr></argument>, <argument pos:start="27:45" pos:end="27:55"><expr pos:start="27:45" pos:end="27:55"><name pos:start="27:45" pos:end="27:55"><name pos:start="27:45" pos:end="27:49">irqfd</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:55">virq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:64"><expr pos:start="33:5" pos:end="33:63"><call pos:start="33:5" pos:end="33:63"><name pos:start="33:5" pos:end="33:46">virtio_queue_set_guest_notifier_fd_handler</name><argument_list pos:start="33:47" pos:end="33:63">(<argument pos:start="33:48" pos:end="33:49"><expr pos:start="33:48" pos:end="33:49"><name pos:start="33:48" pos:end="33:49">vq</name></expr></argument>, <argument pos:start="33:52" pos:end="33:55"><expr pos:start="33:52" pos:end="33:55"><name pos:start="33:52" pos:end="33:55">true</name></expr></argument>, <argument pos:start="33:58" pos:end="33:62"><expr pos:start="33:58" pos:end="33:62"><name pos:start="33:58" pos:end="33:62">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
