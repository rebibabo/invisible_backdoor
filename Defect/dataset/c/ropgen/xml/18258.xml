<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18258.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">sclp_execute</name><parameter_list pos:start="1:25" pos:end="1:69">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:35">SCLPDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">sclp</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:47">SCCB</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">sccb</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:63">uint32_t</name></type> <name pos:start="1:65" pos:end="1:68">code</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:5">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">SCLPDeviceClass</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:27">sclp_c</name> <init pos:start="5:29" pos:end="5:50">= <expr pos:start="5:31" pos:end="5:50"><call pos:start="5:31" pos:end="5:50"><name pos:start="5:31" pos:end="5:44">SCLP_GET_CLASS</name><argument_list pos:start="5:45" pos:end="5:50">(<argument pos:start="5:46" pos:end="5:49"><expr pos:start="5:46" pos:end="5:49"><name pos:start="5:46" pos:end="5:49">sclp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">SCLPEventFacility</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:25">ef</name> <init pos:start="7:27" pos:end="7:48">= <expr pos:start="7:29" pos:end="7:48"><name pos:start="7:29" pos:end="7:48"><name pos:start="7:29" pos:end="7:32">sclp</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:48">event_facility</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:26">SCLPEventFacilityClass</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">efc</name> <init pos:start="9:33" pos:end="9:62">= <expr pos:start="9:35" pos:end="9:62"><call pos:start="9:35" pos:end="9:62"><name pos:start="9:35" pos:end="9:58">EVENT_FACILITY_GET_CLASS</name><argument_list pos:start="9:59" pos:end="9:62">(<argument pos:start="9:60" pos:end="9:61"><expr pos:start="9:60" pos:end="9:61"><name pos:start="9:60" pos:end="9:61">ef</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="79:5">switch <condition pos:start="13:12" pos:end="13:38">(<expr pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:16">code</name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <name pos:start="13:20" pos:end="13:37">SCLP_CMD_CODE_MASK</name></expr>)</condition> <block pos:start="13:40" pos:end="79:5">{<block_content pos:start="15:5" pos:end="77:14">

    <case pos:start="15:5" pos:end="15:33">case <expr pos:start="15:10" pos:end="15:32"><name pos:start="15:10" pos:end="15:32">SCLP_CMDW_READ_SCP_INFO</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:40">case <expr pos:start="17:10" pos:end="17:39"><name pos:start="17:10" pos:end="17:39">SCLP_CMDW_READ_SCP_INFO_FORCED</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:14">sclp_c</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:29">read_SCP_info</name></name><argument_list pos:start="19:30" pos:end="19:41">(<argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">sclp</name></expr></argument>, <argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><name pos:start="19:37" pos:end="19:40">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:33">case <expr pos:start="23:10" pos:end="23:32"><name pos:start="23:10" pos:end="23:32">SCLP_CMDW_READ_CPU_INFO</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:14">sclp_c</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:29">read_cpu_info</name></name><argument_list pos:start="25:30" pos:end="25:41">(<argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">sclp</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:40">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:40">case <expr pos:start="29:10" pos:end="29:39"><name pos:start="29:10" pos:end="29:39">SCLP_READ_STORAGE_ELEMENT_INFO</name></expr>:</case>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:26">(<expr pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:16">code</name> <operator pos:start="31:18" pos:end="31:18">&amp;</operator> <literal type="number" pos:start="31:20" pos:end="31:25">0xff00</literal></expr>)</condition> <block pos:start="31:28" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:59">

            <expr_stmt pos:start="33:13" pos:end="33:59"><expr pos:start="33:13" pos:end="33:58"><call pos:start="33:13" pos:end="33:58"><name pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:18">sclp_c</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:46">read_storage_element1_info</name></name><argument_list pos:start="33:47" pos:end="33:58">(<argument pos:start="33:48" pos:end="33:51"><expr pos:start="33:48" pos:end="33:51"><name pos:start="33:48" pos:end="33:51">sclp</name></expr></argument>, <argument pos:start="33:54" pos:end="33:57"><expr pos:start="33:54" pos:end="33:57"><name pos:start="33:54" pos:end="33:57">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:9">else <block pos:start="35:16" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:59">

            <expr_stmt pos:start="37:13" pos:end="37:59"><expr pos:start="37:13" pos:end="37:58"><call pos:start="37:13" pos:end="37:58"><name pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:18">sclp_c</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:46">read_storage_element0_info</name></name><argument_list pos:start="37:47" pos:end="37:58">(<argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">sclp</name></expr></argument>, <argument pos:start="37:54" pos:end="37:57"><expr pos:start="37:54" pos:end="37:57"><name pos:start="37:54" pos:end="37:57">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:37">case <expr pos:start="43:10" pos:end="43:36"><name pos:start="43:10" pos:end="43:36">SCLP_ATTACH_STORAGE_ELEMENT</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><call pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:14">sclp_c</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:38">attach_storage_element</name></name><argument_list pos:start="45:39" pos:end="45:72">(<argument pos:start="45:40" pos:end="45:43"><expr pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:43">sclp</name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">sccb</name></expr></argument>, <argument pos:start="45:52" pos:end="45:71"><expr pos:start="45:52" pos:end="45:71"><operator pos:start="45:52" pos:end="45:52">(</operator><name pos:start="45:53" pos:end="45:56">code</name> <operator pos:start="45:58" pos:end="45:58">&amp;</operator> <literal type="number" pos:start="45:60" pos:end="45:65">0xff00</literal><operator pos:start="45:66" pos:end="45:66">)</operator> <operator pos:start="45:68" pos:end="45:69">&gt;&gt;</operator> <literal type="number" pos:start="45:71" pos:end="45:71">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:29">case <expr pos:start="49:10" pos:end="49:28"><name pos:start="49:10" pos:end="49:28">SCLP_ASSIGN_STORAGE</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><call pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:14">sclp_c</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:30">assign_storage</name></name><argument_list pos:start="51:31" pos:end="51:42">(<argument pos:start="51:32" pos:end="51:35"><expr pos:start="51:32" pos:end="51:35"><name pos:start="51:32" pos:end="51:35">sclp</name></expr></argument>, <argument pos:start="51:38" pos:end="51:41"><expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:31">case <expr pos:start="55:10" pos:end="55:30"><name pos:start="55:10" pos:end="55:30">SCLP_UNASSIGN_STORAGE</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:45"><expr pos:start="57:9" pos:end="57:44"><call pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:14">sclp_c</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:32">unassign_storage</name></name><argument_list pos:start="57:33" pos:end="57:44">(<argument pos:start="57:34" pos:end="57:37"><expr pos:start="57:34" pos:end="57:37"><name pos:start="57:34" pos:end="57:37">sclp</name></expr></argument>, <argument pos:start="57:40" pos:end="57:43"><expr pos:start="57:40" pos:end="57:43"><name pos:start="57:40" pos:end="57:43">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:33">case <expr pos:start="61:10" pos:end="61:32"><name pos:start="61:10" pos:end="61:32">SCLP_CMDW_CONFIGURE_PCI</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><call pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:31">s390_pci_sclp_configure</name><argument_list pos:start="63:32" pos:end="63:37">(<argument pos:start="63:33" pos:end="63:36"><expr pos:start="63:33" pos:end="63:36"><name pos:start="63:33" pos:end="63:36">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:35">case <expr pos:start="67:10" pos:end="67:34"><name pos:start="67:10" pos:end="67:34">SCLP_CMDW_DECONFIGURE_PCI</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><call pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:33">s390_pci_sclp_deconfigure</name><argument_list pos:start="69:34" pos:end="69:39">(<argument pos:start="69:35" pos:end="69:38"><expr pos:start="69:35" pos:end="69:38"><name pos:start="69:35" pos:end="69:38">sccb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <default pos:start="73:5" pos:end="73:12">default:</default>

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><call pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:11">efc</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:28">command_handler</name></name><argument_list pos:start="75:29" pos:end="75:44">(<argument pos:start="75:30" pos:end="75:31"><expr pos:start="75:30" pos:end="75:31"><name pos:start="75:30" pos:end="75:31">ef</name></expr></argument>, <argument pos:start="75:34" pos:end="75:37"><expr pos:start="75:34" pos:end="75:37"><name pos:start="75:34" pos:end="75:37">sccb</name></expr></argument>, <argument pos:start="75:40" pos:end="75:43"><expr pos:start="75:40" pos:end="75:43"><name pos:start="75:40" pos:end="75:43">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
