<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7454.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">read_write_object</name><parameter_list pos:start="1:29" pos:end="5:65">(<parameter pos:start="1:30" pos:end="1:35"><decl pos:start="1:30" pos:end="1:35"><type pos:start="1:30" pos:end="1:35"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:35">fd</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">buf</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:60">oid</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:72"><decl pos:start="1:63" pos:end="1:72"><type pos:start="1:63" pos:end="1:72"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:72">copies</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><name pos:start="3:30" pos:end="3:37">unsigned</name> <name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:49">datalen</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:59">uint64_t</name></type> <name pos:start="3:61" pos:end="3:66">offset</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:39"><decl pos:start="5:30" pos:end="5:39"><type pos:start="5:30" pos:end="5:39"><name pos:start="5:30" pos:end="5:33">bool</name></type> <name pos:start="5:35" pos:end="5:39">write</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:52"><decl pos:start="5:42" pos:end="5:52"><type pos:start="5:42" pos:end="5:52"><name pos:start="5:42" pos:end="5:45">bool</name></type> <name pos:start="5:47" pos:end="5:52">create</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:64"><decl pos:start="5:55" pos:end="5:64"><type pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:58">bool</name></type> <name pos:start="5:60" pos:end="5:64">cache</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="97:1">{<block_content pos:start="9:5" pos:end="95:5">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">SheepdogObjReq</name></type> <name pos:start="9:20" pos:end="9:22">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">SheepdogObjRsp</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">rsp</name> <init pos:start="11:25" pos:end="11:48">= <expr pos:start="11:27" pos:end="11:48"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:41">SheepdogObjRsp</name> <operator pos:start="11:43" pos:end="11:43">*</operator><operator pos:start="11:44" pos:end="11:44">)</operator><operator pos:start="11:45" pos:end="11:45">&amp;</operator><name pos:start="11:46" pos:end="11:48">hdr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">wlen</name></decl>, <decl pos:start="13:24" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:24" pos:end="13:27">rlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:32">(<argument pos:start="19:12" pos:end="19:15"><expr pos:start="19:12" pos:end="19:15"><operator pos:start="19:12" pos:end="19:12">&amp;</operator><name pos:start="19:13" pos:end="19:15">hdr</name></expr></argument>, <argument pos:start="19:18" pos:end="19:18"><expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr></argument>, <argument pos:start="19:21" pos:end="19:31"><expr pos:start="19:21" pos:end="19:31"><sizeof pos:start="19:21" pos:end="19:31">sizeof<argument_list pos:start="19:27" pos:end="19:31">(<argument pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:30">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="49:5"><if pos:start="23:5" pos:end="41:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:13">write</name></expr>)</condition> <block pos:start="23:16" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:9">

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:12">wlen</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:22">datalen</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:12">rlen</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">hdr</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:17">flags</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:37">SD_FLAG_CMD_WRITE</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:19">(<expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:18">create</name></expr>)</condition> <block pos:start="31:21" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:52">

            <expr_stmt pos:start="33:13" pos:end="33:52"><expr pos:start="33:13" pos:end="33:51"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:15">hdr</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:22">opcode</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:51">SD_OP_CREATE_AND_WRITE_OBJ</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:9">else <block pos:start="35:16" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:41">

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:15">hdr</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:22">opcode</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:40">SD_OP_WRITE_OBJ</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="49:5">else <block pos:start="41:12" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:36">

        <expr_stmt pos:start="43:9" pos:end="43:17"><expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:12">wlen</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:12">rlen</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:22">datalen</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">hdr</name><operator pos:start="47:12" pos:end="47:12">.</operator><name pos:start="47:13" pos:end="47:18">opcode</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:35">SD_OP_READ_OBJ</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:14">(<expr pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:13">cache</name></expr>)</condition> <block pos:start="53:16" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:39">

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">hdr</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:17">flags</name></name> <operator pos:start="55:19" pos:end="55:20">|=</operator> <name pos:start="55:22" pos:end="55:38">SD_FLAG_CMD_CACHE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:18"><expr pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:11"><name pos:start="61:5" pos:end="61:7">hdr</name><operator pos:start="61:8" pos:end="61:8">.</operator><name pos:start="61:9" pos:end="61:11">oid</name></name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:17">oid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:7">hdr</name><operator pos:start="63:8" pos:end="63:8">.</operator><name pos:start="63:9" pos:end="63:19">data_length</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:29">datalen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:7">hdr</name><operator pos:start="65:8" pos:end="65:8">.</operator><name pos:start="65:9" pos:end="65:14">offset</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:23">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">hdr</name><operator pos:start="67:8" pos:end="67:8">.</operator><name pos:start="67:9" pos:end="67:14">copies</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:23">copies</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:61"><expr pos:start="71:5" pos:end="71:60"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:60"><name pos:start="71:11" pos:end="71:16">do_req</name><argument_list pos:start="71:17" pos:end="71:60">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">fd</name></expr></argument>, <argument pos:start="71:22" pos:end="71:40"><expr pos:start="71:22" pos:end="71:40"><operator pos:start="71:22" pos:end="71:22">(</operator><name pos:start="71:23" pos:end="71:33">SheepdogReq</name> <operator pos:start="71:35" pos:end="71:35">*</operator><operator pos:start="71:36" pos:end="71:36">)</operator><operator pos:start="71:37" pos:end="71:37">&amp;</operator><name pos:start="71:38" pos:end="71:40">hdr</name></expr></argument>, <argument pos:start="71:43" pos:end="71:45"><expr pos:start="71:43" pos:end="71:45"><name pos:start="71:43" pos:end="71:45">buf</name></expr></argument>, <argument pos:start="71:48" pos:end="71:52"><expr pos:start="71:48" pos:end="71:52"><operator pos:start="71:48" pos:end="71:48">&amp;</operator><name pos:start="71:49" pos:end="71:52">wlen</name></expr></argument>, <argument pos:start="71:55" pos:end="71:59"><expr pos:start="71:55" pos:end="71:59"><operator pos:start="71:55" pos:end="71:55">&amp;</operator><name pos:start="71:56" pos:end="71:59">rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">ret</name></expr>)</condition> <block pos:start="73:14" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:19">

        <expr_stmt pos:start="75:9" pos:end="75:62"><expr pos:start="75:9" pos:end="75:61"><call pos:start="75:9" pos:end="75:61"><name pos:start="75:9" pos:end="75:20">error_report</name><argument_list pos:start="75:21" pos:end="75:61">(<argument pos:start="75:22" pos:end="75:60"><expr pos:start="75:22" pos:end="75:60"><literal type="string" pos:start="75:22" pos:end="75:60">"failed to send a request to the sheep"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:19">return <expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="83:5" pos:end="95:5">switch <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:15">rsp</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:23">result</name></name></expr>)</condition> <block pos:start="83:26" pos:end="95:5">{<block_content pos:start="85:5" pos:end="93:20">

    <case pos:start="85:5" pos:end="85:24">case <expr pos:start="85:10" pos:end="85:23"><name pos:start="85:10" pos:end="85:23">SD_RES_SUCCESS</name></expr>:</case>

        <return pos:start="87:9" pos:end="87:17">return <expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</return>

    <default pos:start="89:5" pos:end="89:12">default:</default>

        <expr_stmt pos:start="91:9" pos:end="91:53"><expr pos:start="91:9" pos:end="91:52"><call pos:start="91:9" pos:end="91:52"><name pos:start="91:9" pos:end="91:20">error_report</name><argument_list pos:start="91:21" pos:end="91:52">(<argument pos:start="91:22" pos:end="91:25"><expr pos:start="91:22" pos:end="91:25"><literal type="string" pos:start="91:22" pos:end="91:25">"%s"</literal></expr></argument>, <argument pos:start="91:28" pos:end="91:51"><expr pos:start="91:28" pos:end="91:51"><call pos:start="91:28" pos:end="91:51"><name pos:start="91:28" pos:end="91:38">sd_strerror</name><argument_list pos:start="91:39" pos:end="91:51">(<argument pos:start="91:40" pos:end="91:50"><expr pos:start="91:40" pos:end="91:50"><name pos:start="91:40" pos:end="91:50"><name pos:start="91:40" pos:end="91:42">rsp</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:50">result</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:20">return <expr pos:start="93:16" pos:end="93:19"><operator pos:start="93:16" pos:end="93:16">-</operator><name pos:start="93:17" pos:end="93:19">EIO</name></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
