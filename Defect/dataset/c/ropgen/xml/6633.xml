<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6633.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:22"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_key_event</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:33">VncState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">vs</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:47"><decl pos:start="1:40" pos:end="1:47"><type pos:start="1:40" pos:end="1:47"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:47">down</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:60"><decl pos:start="1:50" pos:end="1:60"><type pos:start="1:50" pos:end="1:60"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:60">keycode</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:69"><decl pos:start="1:63" pos:end="1:69"><type pos:start="1:63" pos:end="1:69"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:69">sym</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="133:22">{<block_content pos:start="4:5" pos:end="133:22">
    <comment type="block" pos:start="3:5" pos:end="3:29">/* QEMU console switch */</comment>
    <switch pos:start="4:5" pos:end="133:22">switch<condition pos:start="4:11" pos:end="4:19">(<expr pos:start="4:12" pos:end="4:18"><name pos:start="4:12" pos:end="4:18">keycode</name></expr>)</condition> <block pos:start="4:21" pos:end="133:22">{<block_content pos:start="5:5" pos:end="133:22">
    <case pos:start="5:5" pos:end="5:14">case <expr pos:start="5:10" pos:end="5:13"><literal type="number" pos:start="5:10" pos:end="5:13">0x2a</literal></expr>:</case>                          <comment type="block" pos:start="5:41" pos:end="5:56">/* Left Shift */</comment>
    <case pos:start="6:5" pos:end="6:14">case <expr pos:start="6:10" pos:end="6:13"><literal type="number" pos:start="6:10" pos:end="6:13">0x36</literal></expr>:</case>                          <comment type="block" pos:start="6:41" pos:end="6:57">/* Right Shift */</comment>
    <case pos:start="7:5" pos:end="7:14">case <expr pos:start="7:10" pos:end="7:13"><literal type="number" pos:start="7:10" pos:end="7:13">0x1d</literal></expr>:</case>                          <comment type="block" pos:start="7:41" pos:end="7:55">/* Left CTRL */</comment>
    <case pos:start="8:5" pos:end="8:14">case <expr pos:start="8:10" pos:end="8:13"><literal type="number" pos:start="8:10" pos:end="8:13">0x9d</literal></expr>:</case>                          <comment type="block" pos:start="8:41" pos:end="8:56">/* Right CTRL */</comment>
    <case pos:start="9:5" pos:end="9:14">case <expr pos:start="9:10" pos:end="9:13"><literal type="number" pos:start="9:10" pos:end="9:13">0x38</literal></expr>:</case>                          <comment type="block" pos:start="9:41" pos:end="9:54">/* Left ALT */</comment>
    <case pos:start="10:5" pos:end="10:14">case <expr pos:start="10:10" pos:end="10:13"><literal type="number" pos:start="10:10" pos:end="10:13">0xb8</literal></expr>:</case>                          <comment type="block" pos:start="10:41" pos:end="10:55">/* Right ALT */</comment>
        <if_stmt pos:start="11:9" pos:end="14:45"><if pos:start="11:9" pos:end="12:45">if <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">down</name></expr>)</condition><block type="pseudo" pos:start="12:13" pos:end="12:45"><block_content pos:start="12:13" pos:end="12:45">
            <expr_stmt pos:start="12:13" pos:end="12:45"><expr pos:start="12:13" pos:end="12:44"><name pos:start="12:13" pos:end="12:40"><name pos:start="12:13" pos:end="12:14">vs</name><operator pos:start="12:15" pos:end="12:16">-&gt;</operator><name pos:start="12:17" pos:end="12:31">modifiers_state</name><index pos:start="12:32" pos:end="12:40">[<expr pos:start="12:33" pos:end="12:39"><name pos:start="12:33" pos:end="12:39">keycode</name></expr>]</index></name> <operator pos:start="12:42" pos:end="12:42">=</operator> <literal type="number" pos:start="12:44" pos:end="12:44">1</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="13:9" pos:end="14:45">else<block type="pseudo" pos:start="14:13" pos:end="14:45"><block_content pos:start="14:13" pos:end="14:45">
            <expr_stmt pos:start="14:13" pos:end="14:45"><expr pos:start="14:13" pos:end="14:44"><name pos:start="14:13" pos:end="14:40"><name pos:start="14:13" pos:end="14:14">vs</name><operator pos:start="14:15" pos:end="14:16">-&gt;</operator><name pos:start="14:17" pos:end="14:31">modifiers_state</name><index pos:start="14:32" pos:end="14:40">[<expr pos:start="14:33" pos:end="14:39"><name pos:start="14:33" pos:end="14:39">keycode</name></expr>]</index></name> <operator pos:start="14:42" pos:end="14:42">=</operator> <literal type="number" pos:start="14:44" pos:end="14:44">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <break pos:start="15:9" pos:end="15:14">break;</break>
    <case pos:start="16:5" pos:end="16:23">case <expr pos:start="16:10" pos:end="16:22"><literal type="number" pos:start="16:10" pos:end="16:13">0x02</literal> <operator pos:start="16:15" pos:end="16:17">...</operator> <literal type="number" pos:start="16:19" pos:end="16:22">0x0a</literal></expr>:</case> <comment type="block" pos:start="16:25" pos:end="16:45">/* '1' to '9' keys */</comment>
        <if_stmt pos:start="17:9" pos:end="133:22"><if pos:start="17:9" pos:end="133:22">if <condition pos:start="17:12" pos:end="17:75">(<expr pos:start="17:13" pos:end="17:74"><name pos:start="17:13" pos:end="17:16">down</name> <operator pos:start="17:18" pos:end="17:19">&amp;&amp;</operator> <name pos:start="17:21" pos:end="17:45"><name pos:start="17:21" pos:end="17:22">vs</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:39">modifiers_state</name><index pos:start="17:40" pos:end="17:45">[<expr pos:start="17:41" pos:end="17:44"><literal type="number" pos:start="17:41" pos:end="17:44">0x1d</literal></expr>]</index></name> <operator pos:start="17:47" pos:end="17:48">&amp;&amp;</operator> <name pos:start="17:50" pos:end="17:74"><name pos:start="17:50" pos:end="17:51">vs</name><operator pos:start="17:52" pos:end="17:53">-&gt;</operator><name pos:start="17:54" pos:end="17:68">modifiers_state</name><index pos:start="17:69" pos:end="17:74">[<expr pos:start="17:70" pos:end="17:73"><literal type="number" pos:start="17:70" pos:end="17:73">0x38</literal></expr>]</index></name></expr>)</condition> <block pos:start="17:77" pos:end="133:22">{<block_content pos:start="19:13" pos:end="133:22">
            <comment type="block" pos:start="18:13" pos:end="18:65">/* Reset the modifiers sent to the current console */</comment>
            <expr_stmt pos:start="19:13" pos:end="19:27"><expr pos:start="19:13" pos:end="19:26"><call pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:22">reset_keys</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:43"><expr pos:start="20:13" pos:end="20:42"><call pos:start="20:13" pos:end="20:42"><name pos:start="20:13" pos:end="20:26">console_select</name><argument_list pos:start="20:27" pos:end="20:42">(<argument pos:start="20:28" pos:end="20:41"><expr pos:start="20:28" pos:end="20:41"><name pos:start="20:28" pos:end="20:34">keycode</name> <operator pos:start="20:36" pos:end="20:36">-</operator> <literal type="number" pos:start="20:38" pos:end="20:41">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="21:13" pos:end="21:19">return;</return>
        <break pos:start="22:9" pos:end="22:14">break;</break>
    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x3a</literal></expr>:</case>                        <comment type="block" pos:start="23:39" pos:end="23:52">/* CapsLock */</comment>
    <case pos:start="24:5" pos:end="24:14">case <expr pos:start="24:10" pos:end="24:13"><literal type="number" pos:start="24:10" pos:end="24:13">0x45</literal></expr>:</case>                        <comment type="block" pos:start="24:39" pos:end="24:51">/* NumLock */</comment>
        <if_stmt pos:start="25:9" pos:end="26:46"><if pos:start="25:9" pos:end="26:46">if <condition pos:start="25:12" pos:end="25:18">(<expr pos:start="25:13" pos:end="25:17"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:17">down</name></expr>)</condition><block type="pseudo" pos:start="26:13" pos:end="26:46"><block_content pos:start="26:13" pos:end="26:46">
            <expr_stmt pos:start="26:13" pos:end="26:46"><expr pos:start="26:13" pos:end="26:45"><name pos:start="26:13" pos:end="26:40"><name pos:start="26:13" pos:end="26:14">vs</name><operator pos:start="26:15" pos:end="26:16">-&gt;</operator><name pos:start="26:17" pos:end="26:31">modifiers_state</name><index pos:start="26:32" pos:end="26:40">[<expr pos:start="26:33" pos:end="26:39"><name pos:start="26:33" pos:end="26:39">keycode</name></expr>]</index></name> <operator pos:start="26:42" pos:end="26:43">^=</operator> <literal type="number" pos:start="26:45" pos:end="26:45">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <break pos:start="27:9" pos:end="27:14">break;</break>
    <if_stmt pos:start="28:5" pos:end="133:22"><if pos:start="28:5" pos:end="133:22">if <condition pos:start="28:8" pos:end="28:55">(<expr pos:start="28:9" pos:end="28:54"><call pos:start="28:9" pos:end="28:54"><name pos:start="28:9" pos:end="28:25">keycode_is_keypad</name><argument_list pos:start="28:26" pos:end="28:54">(<argument pos:start="28:27" pos:end="28:44"><expr pos:start="28:27" pos:end="28:44"><name pos:start="28:27" pos:end="28:44"><name pos:start="28:27" pos:end="28:28">vs</name><operator pos:start="28:29" pos:end="28:30">-&gt;</operator><name pos:start="28:31" pos:end="28:32">vd</name><operator pos:start="28:33" pos:end="28:34">-&gt;</operator><name pos:start="28:35" pos:end="28:44">kbd_layout</name></name></expr></argument>, <argument pos:start="28:47" pos:end="28:53"><expr pos:start="28:47" pos:end="28:53"><name pos:start="28:47" pos:end="28:53">keycode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="28:57" pos:end="133:22">{<block_content pos:start="46:9" pos:end="133:22">
        <comment type="block" pos:start="29:9" pos:end="45:36">/* If the numlock state needs to change then simulate an additional
           toggles numlock away from the VNC window.
        if (keysym_is_numlock(vs-&gt;vd-&gt;kbd_layout, sym &amp; 0xFFFF)) {
            if (!vs-&gt;modifiers_state[0x45]) {
                vs-&gt;modifiers_state[0x45] = 1;
                press_key(vs, 0xff7f);
            if (vs-&gt;modifiers_state[0x45]) {
                vs-&gt;modifiers_state[0x45] = 0;
                press_key(vs, 0xff7f);
    if (is_graphic_console()) {
        if (keycode &amp; 0x80)
            kbd_put_keycode(0xe0);
        if (down)
            kbd_put_keycode(keycode &amp; 0x7f);
        else
            kbd_put_keycode(keycode | 0x80);
        /* QEMU console emulation */</comment>
        <if_stmt pos:start="46:9" pos:end="133:22"><if pos:start="46:9" pos:end="133:22">if <condition pos:start="46:12" pos:end="46:17">(<expr pos:start="46:13" pos:end="46:16"><name pos:start="46:13" pos:end="46:16">down</name></expr>)</condition> <block pos:start="46:19" pos:end="133:22">{<block_content pos:start="47:13" pos:end="133:22">
            <decl_stmt pos:start="47:13" pos:end="47:52"><decl pos:start="47:13" pos:end="47:51"><type pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">int</name></type> <name pos:start="47:17" pos:end="47:23">numlock</name> <init pos:start="47:25" pos:end="47:51">= <expr pos:start="47:27" pos:end="47:51"><name pos:start="47:27" pos:end="47:51"><name pos:start="47:27" pos:end="47:28">vs</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:45">modifiers_state</name><index pos:start="47:46" pos:end="47:51">[<expr pos:start="47:47" pos:end="47:50"><literal type="number" pos:start="47:47" pos:end="47:50">0x45</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <switch pos:start="48:13" pos:end="133:22">switch <condition pos:start="48:20" pos:end="48:28">(<expr pos:start="48:21" pos:end="48:27"><name pos:start="48:21" pos:end="48:27">keycode</name></expr>)</condition> <block pos:start="48:30" pos:end="133:22">{<block_content pos:start="49:13" pos:end="133:22">
            <case pos:start="49:13" pos:end="49:22">case <expr pos:start="49:18" pos:end="49:21"><literal type="number" pos:start="49:18" pos:end="49:21">0x2a</literal></expr>:</case>                          <comment type="block" pos:start="49:49" pos:end="49:64">/* Left Shift */</comment>
            <case pos:start="50:13" pos:end="50:22">case <expr pos:start="50:18" pos:end="50:21"><literal type="number" pos:start="50:18" pos:end="50:21">0x36</literal></expr>:</case>                          <comment type="block" pos:start="50:49" pos:end="50:65">/* Right Shift */</comment>
            <case pos:start="51:13" pos:end="51:22">case <expr pos:start="51:18" pos:end="51:21"><literal type="number" pos:start="51:18" pos:end="51:21">0x1d</literal></expr>:</case>                          <comment type="block" pos:start="51:49" pos:end="51:63">/* Left CTRL */</comment>
            <case pos:start="52:13" pos:end="52:22">case <expr pos:start="52:18" pos:end="52:21"><literal type="number" pos:start="52:18" pos:end="52:21">0x9d</literal></expr>:</case>                          <comment type="block" pos:start="52:49" pos:end="52:64">/* Right CTRL */</comment>
            <case pos:start="53:13" pos:end="53:22">case <expr pos:start="53:18" pos:end="53:21"><literal type="number" pos:start="53:18" pos:end="53:21">0x38</literal></expr>:</case>                          <comment type="block" pos:start="53:49" pos:end="53:62">/* Left ALT */</comment>
            <case pos:start="54:13" pos:end="54:22">case <expr pos:start="54:18" pos:end="54:21"><literal type="number" pos:start="54:18" pos:end="54:21">0xb8</literal></expr>:</case>                          <comment type="block" pos:start="54:49" pos:end="54:63">/* Right ALT */</comment>
                <break pos:start="55:17" pos:end="55:22">break;</break>
            <case pos:start="56:13" pos:end="56:22">case <expr pos:start="56:18" pos:end="56:21"><literal type="number" pos:start="56:18" pos:end="56:21">0xc8</literal></expr>:</case>
                <expr_stmt pos:start="57:17" pos:end="57:44"><expr pos:start="57:17" pos:end="57:43"><call pos:start="57:17" pos:end="57:43"><name pos:start="57:17" pos:end="57:30">kbd_put_keysym</name><argument_list pos:start="57:31" pos:end="57:43">(<argument pos:start="57:32" pos:end="57:42"><expr pos:start="57:32" pos:end="57:42"><name pos:start="57:32" pos:end="57:42">QEMU_KEY_UP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="58:17" pos:end="58:22">break;</break>
            <case pos:start="59:13" pos:end="59:22">case <expr pos:start="59:18" pos:end="59:21"><literal type="number" pos:start="59:18" pos:end="59:21">0xd0</literal></expr>:</case>
                <expr_stmt pos:start="60:17" pos:end="60:46"><expr pos:start="60:17" pos:end="60:45"><call pos:start="60:17" pos:end="60:45"><name pos:start="60:17" pos:end="60:30">kbd_put_keysym</name><argument_list pos:start="60:31" pos:end="60:45">(<argument pos:start="60:32" pos:end="60:44"><expr pos:start="60:32" pos:end="60:44"><name pos:start="60:32" pos:end="60:44">QEMU_KEY_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="61:17" pos:end="61:22">break;</break>
            <case pos:start="62:13" pos:end="62:22">case <expr pos:start="62:18" pos:end="62:21"><literal type="number" pos:start="62:18" pos:end="62:21">0xcb</literal></expr>:</case>
                <expr_stmt pos:start="63:17" pos:end="63:46"><expr pos:start="63:17" pos:end="63:45"><call pos:start="63:17" pos:end="63:45"><name pos:start="63:17" pos:end="63:30">kbd_put_keysym</name><argument_list pos:start="63:31" pos:end="63:45">(<argument pos:start="63:32" pos:end="63:44"><expr pos:start="63:32" pos:end="63:44"><name pos:start="63:32" pos:end="63:44">QEMU_KEY_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="64:17" pos:end="64:22">break;</break>
            <case pos:start="65:13" pos:end="65:22">case <expr pos:start="65:18" pos:end="65:21"><literal type="number" pos:start="65:18" pos:end="65:21">0xcd</literal></expr>:</case>
                <expr_stmt pos:start="66:17" pos:end="66:47"><expr pos:start="66:17" pos:end="66:46"><call pos:start="66:17" pos:end="66:46"><name pos:start="66:17" pos:end="66:30">kbd_put_keysym</name><argument_list pos:start="66:31" pos:end="66:46">(<argument pos:start="66:32" pos:end="66:45"><expr pos:start="66:32" pos:end="66:45"><name pos:start="66:32" pos:end="66:45">QEMU_KEY_RIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="67:17" pos:end="67:22">break;</break>
            <case pos:start="68:13" pos:end="68:22">case <expr pos:start="68:18" pos:end="68:21"><literal type="number" pos:start="68:18" pos:end="68:21">0xd3</literal></expr>:</case>
                <expr_stmt pos:start="69:17" pos:end="69:48"><expr pos:start="69:17" pos:end="69:47"><call pos:start="69:17" pos:end="69:47"><name pos:start="69:17" pos:end="69:30">kbd_put_keysym</name><argument_list pos:start="69:31" pos:end="69:47">(<argument pos:start="69:32" pos:end="69:46"><expr pos:start="69:32" pos:end="69:46"><name pos:start="69:32" pos:end="69:46">QEMU_KEY_DELETE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="70:17" pos:end="70:22">break;</break>
            <case pos:start="71:13" pos:end="71:22">case <expr pos:start="71:18" pos:end="71:21"><literal type="number" pos:start="71:18" pos:end="71:21">0xc7</literal></expr>:</case>
                <expr_stmt pos:start="72:17" pos:end="72:46"><expr pos:start="72:17" pos:end="72:45"><call pos:start="72:17" pos:end="72:45"><name pos:start="72:17" pos:end="72:30">kbd_put_keysym</name><argument_list pos:start="72:31" pos:end="72:45">(<argument pos:start="72:32" pos:end="72:44"><expr pos:start="72:32" pos:end="72:44"><name pos:start="72:32" pos:end="72:44">QEMU_KEY_HOME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="73:17" pos:end="73:22">break;</break>
            <case pos:start="74:13" pos:end="74:22">case <expr pos:start="74:18" pos:end="74:21"><literal type="number" pos:start="74:18" pos:end="74:21">0xcf</literal></expr>:</case>
                <expr_stmt pos:start="75:17" pos:end="75:45"><expr pos:start="75:17" pos:end="75:44"><call pos:start="75:17" pos:end="75:44"><name pos:start="75:17" pos:end="75:30">kbd_put_keysym</name><argument_list pos:start="75:31" pos:end="75:44">(<argument pos:start="75:32" pos:end="75:43"><expr pos:start="75:32" pos:end="75:43"><name pos:start="75:32" pos:end="75:43">QEMU_KEY_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="76:17" pos:end="76:22">break;</break>
            <case pos:start="77:13" pos:end="77:22">case <expr pos:start="77:18" pos:end="77:21"><literal type="number" pos:start="77:18" pos:end="77:21">0xc9</literal></expr>:</case>
                <expr_stmt pos:start="78:17" pos:end="78:48"><expr pos:start="78:17" pos:end="78:47"><call pos:start="78:17" pos:end="78:47"><name pos:start="78:17" pos:end="78:30">kbd_put_keysym</name><argument_list pos:start="78:31" pos:end="78:47">(<argument pos:start="78:32" pos:end="78:46"><expr pos:start="78:32" pos:end="78:46"><name pos:start="78:32" pos:end="78:46">QEMU_KEY_PAGEUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="79:17" pos:end="79:22">break;</break>
            <case pos:start="80:13" pos:end="80:22">case <expr pos:start="80:18" pos:end="80:21"><literal type="number" pos:start="80:18" pos:end="80:21">0xd1</literal></expr>:</case>
                <expr_stmt pos:start="81:17" pos:end="81:50"><expr pos:start="81:17" pos:end="81:49"><call pos:start="81:17" pos:end="81:49"><name pos:start="81:17" pos:end="81:30">kbd_put_keysym</name><argument_list pos:start="81:31" pos:end="81:49">(<argument pos:start="81:32" pos:end="81:48"><expr pos:start="81:32" pos:end="81:48"><name pos:start="81:32" pos:end="81:48">QEMU_KEY_PAGEDOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="82:17" pos:end="82:22">break;</break>
            <case pos:start="83:13" pos:end="83:22">case <expr pos:start="83:18" pos:end="83:21"><literal type="number" pos:start="83:18" pos:end="83:21">0x47</literal></expr>:</case>
                <expr_stmt pos:start="84:17" pos:end="84:62"><expr pos:start="84:17" pos:end="84:61"><call pos:start="84:17" pos:end="84:61"><name pos:start="84:17" pos:end="84:30">kbd_put_keysym</name><argument_list pos:start="84:31" pos:end="84:61">(<argument pos:start="84:32" pos:end="84:60"><expr pos:start="84:32" pos:end="84:60"><ternary pos:start="84:32" pos:end="84:60"><condition pos:start="84:32" pos:end="84:40"><expr pos:start="84:32" pos:end="84:38"><name pos:start="84:32" pos:end="84:38">numlock</name></expr> ?</condition><then pos:start="84:42" pos:end="84:44"> <expr pos:start="84:42" pos:end="84:44"><literal type="char" pos:start="84:42" pos:end="84:44">'7'</literal></expr> </then><else pos:start="84:46" pos:end="84:60">: <expr pos:start="84:48" pos:end="84:60"><name pos:start="84:48" pos:end="84:60">QEMU_KEY_HOME</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="85:17" pos:end="85:22">break;</break>
            <case pos:start="86:13" pos:end="86:22">case <expr pos:start="86:18" pos:end="86:21"><literal type="number" pos:start="86:18" pos:end="86:21">0x48</literal></expr>:</case>
                <expr_stmt pos:start="87:17" pos:end="87:60"><expr pos:start="87:17" pos:end="87:59"><call pos:start="87:17" pos:end="87:59"><name pos:start="87:17" pos:end="87:30">kbd_put_keysym</name><argument_list pos:start="87:31" pos:end="87:59">(<argument pos:start="87:32" pos:end="87:58"><expr pos:start="87:32" pos:end="87:58"><ternary pos:start="87:32" pos:end="87:58"><condition pos:start="87:32" pos:end="87:40"><expr pos:start="87:32" pos:end="87:38"><name pos:start="87:32" pos:end="87:38">numlock</name></expr> ?</condition><then pos:start="87:42" pos:end="87:44"> <expr pos:start="87:42" pos:end="87:44"><literal type="char" pos:start="87:42" pos:end="87:44">'8'</literal></expr> </then><else pos:start="87:46" pos:end="87:58">: <expr pos:start="87:48" pos:end="87:58"><name pos:start="87:48" pos:end="87:58">QEMU_KEY_UP</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="88:17" pos:end="88:22">break;</break>
            <case pos:start="89:13" pos:end="89:22">case <expr pos:start="89:18" pos:end="89:21"><literal type="number" pos:start="89:18" pos:end="89:21">0x49</literal></expr>:</case>
                <expr_stmt pos:start="90:17" pos:end="90:64"><expr pos:start="90:17" pos:end="90:63"><call pos:start="90:17" pos:end="90:63"><name pos:start="90:17" pos:end="90:30">kbd_put_keysym</name><argument_list pos:start="90:31" pos:end="90:63">(<argument pos:start="90:32" pos:end="90:62"><expr pos:start="90:32" pos:end="90:62"><ternary pos:start="90:32" pos:end="90:62"><condition pos:start="90:32" pos:end="90:40"><expr pos:start="90:32" pos:end="90:38"><name pos:start="90:32" pos:end="90:38">numlock</name></expr> ?</condition><then pos:start="90:42" pos:end="90:44"> <expr pos:start="90:42" pos:end="90:44"><literal type="char" pos:start="90:42" pos:end="90:44">'9'</literal></expr> </then><else pos:start="90:46" pos:end="90:62">: <expr pos:start="90:48" pos:end="90:62"><name pos:start="90:48" pos:end="90:62">QEMU_KEY_PAGEUP</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="91:17" pos:end="91:22">break;</break>
            <case pos:start="92:13" pos:end="92:22">case <expr pos:start="92:18" pos:end="92:21"><literal type="number" pos:start="92:18" pos:end="92:21">0x4b</literal></expr>:</case>
                <expr_stmt pos:start="93:17" pos:end="93:62"><expr pos:start="93:17" pos:end="93:61"><call pos:start="93:17" pos:end="93:61"><name pos:start="93:17" pos:end="93:30">kbd_put_keysym</name><argument_list pos:start="93:31" pos:end="93:61">(<argument pos:start="93:32" pos:end="93:60"><expr pos:start="93:32" pos:end="93:60"><ternary pos:start="93:32" pos:end="93:60"><condition pos:start="93:32" pos:end="93:40"><expr pos:start="93:32" pos:end="93:38"><name pos:start="93:32" pos:end="93:38">numlock</name></expr> ?</condition><then pos:start="93:42" pos:end="93:44"> <expr pos:start="93:42" pos:end="93:44"><literal type="char" pos:start="93:42" pos:end="93:44">'4'</literal></expr> </then><else pos:start="93:46" pos:end="93:60">: <expr pos:start="93:48" pos:end="93:60"><name pos:start="93:48" pos:end="93:60">QEMU_KEY_LEFT</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="94:17" pos:end="94:22">break;</break>
            <case pos:start="95:13" pos:end="95:22">case <expr pos:start="95:18" pos:end="95:21"><literal type="number" pos:start="95:18" pos:end="95:21">0x4c</literal></expr>:</case>
                <expr_stmt pos:start="96:17" pos:end="96:36"><expr pos:start="96:17" pos:end="96:35"><call pos:start="96:17" pos:end="96:35"><name pos:start="96:17" pos:end="96:30">kbd_put_keysym</name><argument_list pos:start="96:31" pos:end="96:35">(<argument pos:start="96:32" pos:end="96:34"><expr pos:start="96:32" pos:end="96:34"><literal type="char" pos:start="96:32" pos:end="96:34">'5'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="97:17" pos:end="97:22">break;</break>
            <case pos:start="98:13" pos:end="98:22">case <expr pos:start="98:18" pos:end="98:21"><literal type="number" pos:start="98:18" pos:end="98:21">0x4d</literal></expr>:</case>
                <expr_stmt pos:start="99:17" pos:end="99:63"><expr pos:start="99:17" pos:end="99:62"><call pos:start="99:17" pos:end="99:62"><name pos:start="99:17" pos:end="99:30">kbd_put_keysym</name><argument_list pos:start="99:31" pos:end="99:62">(<argument pos:start="99:32" pos:end="99:61"><expr pos:start="99:32" pos:end="99:61"><ternary pos:start="99:32" pos:end="99:61"><condition pos:start="99:32" pos:end="99:40"><expr pos:start="99:32" pos:end="99:38"><name pos:start="99:32" pos:end="99:38">numlock</name></expr> ?</condition><then pos:start="99:42" pos:end="99:44"> <expr pos:start="99:42" pos:end="99:44"><literal type="char" pos:start="99:42" pos:end="99:44">'6'</literal></expr> </then><else pos:start="99:46" pos:end="99:61">: <expr pos:start="99:48" pos:end="99:61"><name pos:start="99:48" pos:end="99:61">QEMU_KEY_RIGHT</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="100:17" pos:end="100:22">break;</break>
            <case pos:start="101:13" pos:end="101:22">case <expr pos:start="101:18" pos:end="101:21"><literal type="number" pos:start="101:18" pos:end="101:21">0x4f</literal></expr>:</case>
                <expr_stmt pos:start="102:17" pos:end="102:61"><expr pos:start="102:17" pos:end="102:60"><call pos:start="102:17" pos:end="102:60"><name pos:start="102:17" pos:end="102:30">kbd_put_keysym</name><argument_list pos:start="102:31" pos:end="102:60">(<argument pos:start="102:32" pos:end="102:59"><expr pos:start="102:32" pos:end="102:59"><ternary pos:start="102:32" pos:end="102:59"><condition pos:start="102:32" pos:end="102:40"><expr pos:start="102:32" pos:end="102:38"><name pos:start="102:32" pos:end="102:38">numlock</name></expr> ?</condition><then pos:start="102:42" pos:end="102:44"> <expr pos:start="102:42" pos:end="102:44"><literal type="char" pos:start="102:42" pos:end="102:44">'1'</literal></expr> </then><else pos:start="102:46" pos:end="102:59">: <expr pos:start="102:48" pos:end="102:59"><name pos:start="102:48" pos:end="102:59">QEMU_KEY_END</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="103:17" pos:end="103:22">break;</break>
            <case pos:start="104:13" pos:end="104:22">case <expr pos:start="104:18" pos:end="104:21"><literal type="number" pos:start="104:18" pos:end="104:21">0x50</literal></expr>:</case>
                <expr_stmt pos:start="105:17" pos:end="105:62"><expr pos:start="105:17" pos:end="105:61"><call pos:start="105:17" pos:end="105:61"><name pos:start="105:17" pos:end="105:30">kbd_put_keysym</name><argument_list pos:start="105:31" pos:end="105:61">(<argument pos:start="105:32" pos:end="105:60"><expr pos:start="105:32" pos:end="105:60"><ternary pos:start="105:32" pos:end="105:60"><condition pos:start="105:32" pos:end="105:40"><expr pos:start="105:32" pos:end="105:38"><name pos:start="105:32" pos:end="105:38">numlock</name></expr> ?</condition><then pos:start="105:42" pos:end="105:44"> <expr pos:start="105:42" pos:end="105:44"><literal type="char" pos:start="105:42" pos:end="105:44">'2'</literal></expr> </then><else pos:start="105:46" pos:end="105:60">: <expr pos:start="105:48" pos:end="105:60"><name pos:start="105:48" pos:end="105:60">QEMU_KEY_DOWN</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="106:17" pos:end="106:22">break;</break>
            <case pos:start="107:13" pos:end="107:22">case <expr pos:start="107:18" pos:end="107:21"><literal type="number" pos:start="107:18" pos:end="107:21">0x51</literal></expr>:</case>
                <expr_stmt pos:start="108:17" pos:end="108:66"><expr pos:start="108:17" pos:end="108:65"><call pos:start="108:17" pos:end="108:65"><name pos:start="108:17" pos:end="108:30">kbd_put_keysym</name><argument_list pos:start="108:31" pos:end="108:65">(<argument pos:start="108:32" pos:end="108:64"><expr pos:start="108:32" pos:end="108:64"><ternary pos:start="108:32" pos:end="108:64"><condition pos:start="108:32" pos:end="108:40"><expr pos:start="108:32" pos:end="108:38"><name pos:start="108:32" pos:end="108:38">numlock</name></expr> ?</condition><then pos:start="108:42" pos:end="108:44"> <expr pos:start="108:42" pos:end="108:44"><literal type="char" pos:start="108:42" pos:end="108:44">'3'</literal></expr> </then><else pos:start="108:46" pos:end="108:64">: <expr pos:start="108:48" pos:end="108:64"><name pos:start="108:48" pos:end="108:64">QEMU_KEY_PAGEDOWN</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="109:17" pos:end="109:22">break;</break>
            <case pos:start="110:13" pos:end="110:22">case <expr pos:start="110:18" pos:end="110:21"><literal type="number" pos:start="110:18" pos:end="110:21">0x52</literal></expr>:</case>
                <expr_stmt pos:start="111:17" pos:end="111:36"><expr pos:start="111:17" pos:end="111:35"><call pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:30">kbd_put_keysym</name><argument_list pos:start="111:31" pos:end="111:35">(<argument pos:start="111:32" pos:end="111:34"><expr pos:start="111:32" pos:end="111:34"><literal type="char" pos:start="111:32" pos:end="111:34">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="112:17" pos:end="112:22">break;</break>
            <case pos:start="113:13" pos:end="113:22">case <expr pos:start="113:18" pos:end="113:21"><literal type="number" pos:start="113:18" pos:end="113:21">0x53</literal></expr>:</case>
                <expr_stmt pos:start="114:17" pos:end="114:64"><expr pos:start="114:17" pos:end="114:63"><call pos:start="114:17" pos:end="114:63"><name pos:start="114:17" pos:end="114:30">kbd_put_keysym</name><argument_list pos:start="114:31" pos:end="114:63">(<argument pos:start="114:32" pos:end="114:62"><expr pos:start="114:32" pos:end="114:62"><ternary pos:start="114:32" pos:end="114:62"><condition pos:start="114:32" pos:end="114:40"><expr pos:start="114:32" pos:end="114:38"><name pos:start="114:32" pos:end="114:38">numlock</name></expr> ?</condition><then pos:start="114:42" pos:end="114:44"> <expr pos:start="114:42" pos:end="114:44"><literal type="char" pos:start="114:42" pos:end="114:44">'.'</literal></expr> </then><else pos:start="114:46" pos:end="114:62">: <expr pos:start="114:48" pos:end="114:62"><name pos:start="114:48" pos:end="114:62">QEMU_KEY_DELETE</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="115:17" pos:end="115:22">break;</break>
            <case pos:start="116:13" pos:end="116:22">case <expr pos:start="116:18" pos:end="116:21"><literal type="number" pos:start="116:18" pos:end="116:21">0xb5</literal></expr>:</case>
                <expr_stmt pos:start="117:17" pos:end="117:36"><expr pos:start="117:17" pos:end="117:35"><call pos:start="117:17" pos:end="117:35"><name pos:start="117:17" pos:end="117:30">kbd_put_keysym</name><argument_list pos:start="117:31" pos:end="117:35">(<argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><literal type="char" pos:start="117:32" pos:end="117:34">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="118:17" pos:end="118:22">break;</break>
            <case pos:start="119:13" pos:end="119:22">case <expr pos:start="119:18" pos:end="119:21"><literal type="number" pos:start="119:18" pos:end="119:21">0x37</literal></expr>:</case>
                <expr_stmt pos:start="120:17" pos:end="120:36"><expr pos:start="120:17" pos:end="120:35"><call pos:start="120:17" pos:end="120:35"><name pos:start="120:17" pos:end="120:30">kbd_put_keysym</name><argument_list pos:start="120:31" pos:end="120:35">(<argument pos:start="120:32" pos:end="120:34"><expr pos:start="120:32" pos:end="120:34"><literal type="char" pos:start="120:32" pos:end="120:34">'*'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="121:17" pos:end="121:22">break;</break>
            <case pos:start="122:13" pos:end="122:22">case <expr pos:start="122:18" pos:end="122:21"><literal type="number" pos:start="122:18" pos:end="122:21">0x4a</literal></expr>:</case>
                <expr_stmt pos:start="123:17" pos:end="123:36"><expr pos:start="123:17" pos:end="123:35"><call pos:start="123:17" pos:end="123:35"><name pos:start="123:17" pos:end="123:30">kbd_put_keysym</name><argument_list pos:start="123:31" pos:end="123:35">(<argument pos:start="123:32" pos:end="123:34"><expr pos:start="123:32" pos:end="123:34"><literal type="char" pos:start="123:32" pos:end="123:34">'-'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="124:17" pos:end="124:22">break;</break>
            <case pos:start="125:13" pos:end="125:22">case <expr pos:start="125:18" pos:end="125:21"><literal type="number" pos:start="125:18" pos:end="125:21">0x4e</literal></expr>:</case>
                <expr_stmt pos:start="126:17" pos:end="126:36"><expr pos:start="126:17" pos:end="126:35"><call pos:start="126:17" pos:end="126:35"><name pos:start="126:17" pos:end="126:30">kbd_put_keysym</name><argument_list pos:start="126:31" pos:end="126:35">(<argument pos:start="126:32" pos:end="126:34"><expr pos:start="126:32" pos:end="126:34"><literal type="char" pos:start="126:32" pos:end="126:34">'+'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="127:17" pos:end="127:22">break;</break>
            <case pos:start="128:13" pos:end="128:22">case <expr pos:start="128:18" pos:end="128:21"><literal type="number" pos:start="128:18" pos:end="128:21">0x9c</literal></expr>:</case>
                <expr_stmt pos:start="129:17" pos:end="129:37"><expr pos:start="129:17" pos:end="129:36"><call pos:start="129:17" pos:end="129:36"><name pos:start="129:17" pos:end="129:30">kbd_put_keysym</name><argument_list pos:start="129:31" pos:end="129:36">(<argument pos:start="129:32" pos:end="129:35"><expr pos:start="129:32" pos:end="129:35"><literal type="char" pos:start="129:32" pos:end="129:35">'\n'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="130:17" pos:end="130:22">break;</break>
            <default pos:start="131:13" pos:end="131:20">default:</default>
                <expr_stmt pos:start="132:17" pos:end="132:36"><expr pos:start="132:17" pos:end="132:35"><call pos:start="132:17" pos:end="132:35"><name pos:start="132:17" pos:end="132:30">kbd_put_keysym</name><argument_list pos:start="132:31" pos:end="132:35">(<argument pos:start="132:32" pos:end="132:34"><expr pos:start="132:32" pos:end="132:34"><name pos:start="132:32" pos:end="132:34">sym</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="133:17" pos:end="133:22">break;</break></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></function></unit>
