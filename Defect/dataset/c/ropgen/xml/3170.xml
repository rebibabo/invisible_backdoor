<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3170.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ffmpeg_cleanup</name><parameter_list pos:start="1:27" pos:end="1:35">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:30"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">ret</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="103:1">{<block_content pos:start="3:5" pos:end="102:22">
    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>;</decl_stmt>
    <if_stmt pos:start="4:5" pos:end="7:5"><if pos:start="4:5" pos:end="7:5">if <condition pos:start="4:8" pos:end="4:21">(<expr pos:start="4:9" pos:end="4:20"><name pos:start="4:9" pos:end="4:20">do_benchmark</name></expr>)</condition> <block pos:start="4:23" pos:end="7:5">{<block_content pos:start="5:9" pos:end="6:66">
        <decl_stmt pos:start="5:9" pos:end="5:40"><decl pos:start="5:9" pos:end="5:39"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:18">maxrss</name> <init pos:start="5:20" pos:end="5:39">= <expr pos:start="5:22" pos:end="5:39"><call pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:30">getmaxrss</name><argument_list pos:start="5:31" pos:end="5:32">()</argument_list></call> <operator pos:start="5:34" pos:end="5:34">/</operator> <literal type="number" pos:start="5:36" pos:end="5:39">1024</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="6:9" pos:end="6:66"><expr pos:start="6:9" pos:end="6:65"><call pos:start="6:9" pos:end="6:65"><name pos:start="6:9" pos:end="6:14">av_log</name><argument_list pos:start="6:15" pos:end="6:65">(<argument pos:start="6:16" pos:end="6:19"><expr pos:start="6:16" pos:end="6:19"><name pos:start="6:16" pos:end="6:19">NULL</name></expr></argument>, <argument pos:start="6:22" pos:end="6:32"><expr pos:start="6:22" pos:end="6:32"><name pos:start="6:22" pos:end="6:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="6:35" pos:end="6:56"><expr pos:start="6:35" pos:end="6:56"><literal type="string" pos:start="6:35" pos:end="6:56">"bench: maxrss=%ikB\n"</literal></expr></argument>, <argument pos:start="6:59" pos:end="6:64"><expr pos:start="6:59" pos:end="6:64"><name pos:start="6:59" pos:end="6:64">maxrss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="8:5" pos:end="23:5">for <control pos:start="8:9" pos:end="8:41">(<init pos:start="8:10" pos:end="8:15"><expr pos:start="8:10" pos:end="8:14"><name pos:start="8:10" pos:end="8:10">i</name> <operator pos:start="8:12" pos:end="8:12">=</operator> <literal type="number" pos:start="8:14" pos:end="8:14">0</literal></expr>;</init> <condition pos:start="8:17" pos:end="8:36"><expr pos:start="8:17" pos:end="8:35"><name pos:start="8:17" pos:end="8:17">i</name> <operator pos:start="8:19" pos:end="8:19">&lt;</operator> <name pos:start="8:21" pos:end="8:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="8:38" pos:end="8:40"><expr pos:start="8:38" pos:end="8:40"><name pos:start="8:38" pos:end="8:38">i</name><operator pos:start="8:39" pos:end="8:40">++</operator></expr></incr>)</control> <block pos:start="8:43" pos:end="23:5">{<block_content pos:start="9:9" pos:end="22:35">
        <decl_stmt pos:start="9:9" pos:end="9:42"><decl pos:start="9:9" pos:end="9:41"><type pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:19">FilterGraph</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">fg</name> <init pos:start="9:25" pos:end="9:41">= <expr pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:38">filtergraphs</name><index pos:start="9:39" pos:end="9:41">[<expr pos:start="9:40" pos:end="9:40"><name pos:start="9:40" pos:end="9:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:40"><expr pos:start="10:9" pos:end="10:39"><call pos:start="10:9" pos:end="10:39"><name pos:start="10:9" pos:end="10:27">avfilter_graph_free</name><argument_list pos:start="10:28" pos:end="10:39">(<argument pos:start="10:29" pos:end="10:38"><expr pos:start="10:29" pos:end="10:38"><operator pos:start="10:29" pos:end="10:29">&amp;</operator><name pos:start="10:30" pos:end="10:38"><name pos:start="10:30" pos:end="10:31">fg</name><operator pos:start="10:32" pos:end="10:33">-&gt;</operator><name pos:start="10:34" pos:end="10:38">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="11:9" pos:end="14:9">for <control pos:start="11:13" pos:end="11:43">(<init pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">j</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:38"><expr pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:21">j</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <name pos:start="11:25" pos:end="11:37"><name pos:start="11:25" pos:end="11:26">fg</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:37">nb_inputs</name></name></expr>;</condition> <incr pos:start="11:40" pos:end="11:42"><expr pos:start="11:40" pos:end="11:42"><name pos:start="11:40" pos:end="11:40">j</name><operator pos:start="11:41" pos:end="11:42">++</operator></expr></incr>)</control> <block pos:start="11:45" pos:end="14:9">{<block_content pos:start="12:13" pos:end="13:37">
            <expr_stmt pos:start="12:13" pos:end="12:43"><expr pos:start="12:13" pos:end="12:42"><call pos:start="12:13" pos:end="12:42"><name pos:start="12:13" pos:end="12:20">av_freep</name><argument_list pos:start="12:21" pos:end="12:42">(<argument pos:start="12:22" pos:end="12:41"><expr pos:start="12:22" pos:end="12:41"><operator pos:start="12:22" pos:end="12:22">&amp;</operator><name pos:start="12:23" pos:end="12:35"><name pos:start="12:23" pos:end="12:24">fg</name><operator pos:start="12:25" pos:end="12:26">-&gt;</operator><name pos:start="12:27" pos:end="12:32">inputs</name><index pos:start="12:33" pos:end="12:35">[<expr pos:start="12:34" pos:end="12:34"><name pos:start="12:34" pos:end="12:34">j</name></expr>]</index></name><operator pos:start="12:36" pos:end="12:37">-&gt;</operator><name pos:start="12:38" pos:end="12:41">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:37"><expr pos:start="13:13" pos:end="13:36"><call pos:start="13:13" pos:end="13:36"><name pos:start="13:13" pos:end="13:20">av_freep</name><argument_list pos:start="13:21" pos:end="13:36">(<argument pos:start="13:22" pos:end="13:35"><expr pos:start="13:22" pos:end="13:35"><operator pos:start="13:22" pos:end="13:22">&amp;</operator><name pos:start="13:23" pos:end="13:35"><name pos:start="13:23" pos:end="13:24">fg</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:32">inputs</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><name pos:start="13:34" pos:end="13:34">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:16">av_freep</name><argument_list pos:start="15:17" pos:end="15:29">(<argument pos:start="15:18" pos:end="15:28"><expr pos:start="15:18" pos:end="15:28"><operator pos:start="15:18" pos:end="15:18">&amp;</operator><name pos:start="15:19" pos:end="15:28"><name pos:start="15:19" pos:end="15:20">fg</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:28">inputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="16:9" pos:end="19:9">for <control pos:start="16:13" pos:end="16:44">(<init pos:start="16:14" pos:end="16:19"><expr pos:start="16:14" pos:end="16:18"><name pos:start="16:14" pos:end="16:14">j</name> <operator pos:start="16:16" pos:end="16:16">=</operator> <literal type="number" pos:start="16:18" pos:end="16:18">0</literal></expr>;</init> <condition pos:start="16:21" pos:end="16:39"><expr pos:start="16:21" pos:end="16:38"><name pos:start="16:21" pos:end="16:21">j</name> <operator pos:start="16:23" pos:end="16:23">&lt;</operator> <name pos:start="16:25" pos:end="16:38"><name pos:start="16:25" pos:end="16:26">fg</name><operator pos:start="16:27" pos:end="16:28">-&gt;</operator><name pos:start="16:29" pos:end="16:38">nb_outputs</name></name></expr>;</condition> <incr pos:start="16:41" pos:end="16:43"><expr pos:start="16:41" pos:end="16:43"><name pos:start="16:41" pos:end="16:41">j</name><operator pos:start="16:42" pos:end="16:43">++</operator></expr></incr>)</control> <block pos:start="16:46" pos:end="19:9">{<block_content pos:start="17:13" pos:end="18:38">
            <expr_stmt pos:start="17:13" pos:end="17:44"><expr pos:start="17:13" pos:end="17:43"><call pos:start="17:13" pos:end="17:43"><name pos:start="17:13" pos:end="17:20">av_freep</name><argument_list pos:start="17:21" pos:end="17:43">(<argument pos:start="17:22" pos:end="17:42"><expr pos:start="17:22" pos:end="17:42"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:36"><name pos:start="17:23" pos:end="17:24">fg</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:33">outputs</name><index pos:start="17:34" pos:end="17:36">[<expr pos:start="17:35" pos:end="17:35"><name pos:start="17:35" pos:end="17:35">j</name></expr>]</index></name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:42">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:38"><expr pos:start="18:13" pos:end="18:37"><call pos:start="18:13" pos:end="18:37"><name pos:start="18:13" pos:end="18:20">av_freep</name><argument_list pos:start="18:21" pos:end="18:37">(<argument pos:start="18:22" pos:end="18:36"><expr pos:start="18:22" pos:end="18:36"><operator pos:start="18:22" pos:end="18:22">&amp;</operator><name pos:start="18:23" pos:end="18:36"><name pos:start="18:23" pos:end="18:24">fg</name><operator pos:start="18:25" pos:end="18:26">-&gt;</operator><name pos:start="18:27" pos:end="18:33">outputs</name><index pos:start="18:34" pos:end="18:36">[<expr pos:start="18:35" pos:end="18:35"><name pos:start="18:35" pos:end="18:35">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="20:9" pos:end="20:31"><expr pos:start="20:9" pos:end="20:30"><call pos:start="20:9" pos:end="20:30"><name pos:start="20:9" pos:end="20:16">av_freep</name><argument_list pos:start="20:17" pos:end="20:30">(<argument pos:start="20:18" pos:end="20:29"><expr pos:start="20:18" pos:end="20:29"><operator pos:start="20:18" pos:end="20:18">&amp;</operator><name pos:start="20:19" pos:end="20:29"><name pos:start="20:19" pos:end="20:20">fg</name><operator pos:start="20:21" pos:end="20:22">-&gt;</operator><name pos:start="20:23" pos:end="20:29">outputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:16">av_freep</name><argument_list pos:start="21:17" pos:end="21:33">(<argument pos:start="21:18" pos:end="21:32"><expr pos:start="21:18" pos:end="21:32"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:32"><name pos:start="21:19" pos:end="21:20">fg</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:32">graph_desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:35"><expr pos:start="22:9" pos:end="22:34"><call pos:start="22:9" pos:end="22:34"><name pos:start="22:9" pos:end="22:16">av_freep</name><argument_list pos:start="22:17" pos:end="22:34">(<argument pos:start="22:18" pos:end="22:33"><expr pos:start="22:18" pos:end="22:33"><operator pos:start="22:18" pos:end="22:18">&amp;</operator><name pos:start="22:19" pos:end="22:33"><name pos:start="22:19" pos:end="22:30">filtergraphs</name><index pos:start="22:31" pos:end="22:33">[<expr pos:start="22:32" pos:end="22:32"><name pos:start="22:32" pos:end="22:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="24:5" pos:end="24:28"><expr pos:start="24:5" pos:end="24:27"><call pos:start="24:5" pos:end="24:27"><name pos:start="24:5" pos:end="24:12">av_freep</name><argument_list pos:start="24:13" pos:end="24:27">(<argument pos:start="24:14" pos:end="24:26"><expr pos:start="24:14" pos:end="24:26"><operator pos:start="24:14" pos:end="24:14">&amp;</operator><name pos:start="24:15" pos:end="24:26">filtergraphs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><call pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:12">av_freep</name><argument_list pos:start="25:13" pos:end="25:27">(<argument pos:start="25:14" pos:end="25:26"><expr pos:start="25:14" pos:end="25:26"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:26">subtitle_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="26:5" pos:end="26:21">/* close files */</comment>
    <for pos:start="27:5" pos:end="38:5">for <control pos:start="27:9" pos:end="27:41">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:36"><expr pos:start="27:17" pos:end="27:35"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:35">nb_output_files</name></expr>;</condition> <incr pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:38">i</name><operator pos:start="27:39" pos:end="27:40">++</operator></expr></incr>)</control> <block pos:start="27:43" pos:end="38:5">{<block_content pos:start="28:9" pos:end="37:35">
        <decl_stmt pos:start="28:9" pos:end="28:41"><decl pos:start="28:9" pos:end="28:40"><type pos:start="28:9" pos:end="28:20"><name pos:start="28:9" pos:end="28:18">OutputFile</name> <modifier pos:start="28:20" pos:end="28:20">*</modifier></type><name pos:start="28:21" pos:end="28:22">of</name> <init pos:start="28:24" pos:end="28:40">= <expr pos:start="28:26" pos:end="28:40"><name pos:start="28:26" pos:end="28:40"><name pos:start="28:26" pos:end="28:37">output_files</name><index pos:start="28:38" pos:end="28:40">[<expr pos:start="28:39" pos:end="28:39"><name pos:start="28:39" pos:end="28:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="29:9" pos:end="29:27"><decl pos:start="29:9" pos:end="29:26"><type pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:23">AVFormatContext</name> <modifier pos:start="29:25" pos:end="29:25">*</modifier></type><name pos:start="29:26" pos:end="29:26">s</name></decl>;</decl_stmt>
        <if_stmt pos:start="30:9" pos:end="31:21"><if pos:start="30:9" pos:end="31:21">if <condition pos:start="30:12" pos:end="30:16">(<expr pos:start="30:13" pos:end="30:15"><operator pos:start="30:13" pos:end="30:13">!</operator><name pos:start="30:14" pos:end="30:15">of</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:21"><block_content pos:start="31:13" pos:end="31:21">
            <continue pos:start="31:13" pos:end="31:21">continue;</continue></block_content></block></if></if_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:20"><expr pos:start="32:9" pos:end="32:19"><name pos:start="32:9" pos:end="32:9">s</name> <operator pos:start="32:11" pos:end="32:11">=</operator> <name pos:start="32:13" pos:end="32:19"><name pos:start="32:13" pos:end="32:14">of</name><operator pos:start="32:15" pos:end="32:16">-&gt;</operator><name pos:start="32:17" pos:end="32:19">ctx</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="33:9" pos:end="34:32"><if pos:start="33:9" pos:end="34:32">if <condition pos:start="33:12" pos:end="33:67">(<expr pos:start="33:13" pos:end="33:66"><name pos:start="33:13" pos:end="33:13">s</name> <operator pos:start="33:15" pos:end="33:16">&amp;&amp;</operator> <name pos:start="33:18" pos:end="33:27"><name pos:start="33:18" pos:end="33:18">s</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:27">oformat</name></name> <operator pos:start="33:29" pos:end="33:30">&amp;&amp;</operator> <operator pos:start="33:32" pos:end="33:32">!</operator><operator pos:start="33:33" pos:end="33:33">(</operator><name pos:start="33:34" pos:end="33:50"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:43">oformat</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:50">flags</name></name> <operator pos:start="33:52" pos:end="33:52">&amp;</operator> <name pos:start="33:54" pos:end="33:65">AVFMT_NOFILE</name><operator pos:start="33:66" pos:end="33:66">)</operator></expr>)</condition><block type="pseudo" pos:start="34:13" pos:end="34:32"><block_content pos:start="34:13" pos:end="34:32">
            <expr_stmt pos:start="34:13" pos:end="34:32"><expr pos:start="34:13" pos:end="34:31"><call pos:start="34:13" pos:end="34:31"><name pos:start="34:13" pos:end="34:23">avio_closep</name><argument_list pos:start="34:24" pos:end="34:31">(<argument pos:start="34:25" pos:end="34:30"><expr pos:start="34:25" pos:end="34:30"><operator pos:start="34:25" pos:end="34:25">&amp;</operator><name pos:start="34:26" pos:end="34:30"><name pos:start="34:26" pos:end="34:26">s</name><operator pos:start="34:27" pos:end="34:28">-&gt;</operator><name pos:start="34:29" pos:end="34:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:29">avformat_free_context</name><argument_list pos:start="35:30" pos:end="35:32">(<argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:32"><expr pos:start="36:9" pos:end="36:31"><call pos:start="36:9" pos:end="36:31"><name pos:start="36:9" pos:end="36:20">av_dict_free</name><argument_list pos:start="36:21" pos:end="36:31">(<argument pos:start="36:22" pos:end="36:30"><expr pos:start="36:22" pos:end="36:30"><operator pos:start="36:22" pos:end="36:22">&amp;</operator><name pos:start="36:23" pos:end="36:30"><name pos:start="36:23" pos:end="36:24">of</name><operator pos:start="36:25" pos:end="36:26">-&gt;</operator><name pos:start="36:27" pos:end="36:30">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:16">av_freep</name><argument_list pos:start="37:17" pos:end="37:34">(<argument pos:start="37:18" pos:end="37:33"><expr pos:start="37:18" pos:end="37:33"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:33"><name pos:start="37:19" pos:end="37:30">output_files</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="39:5" pos:end="64:0">for <control pos:start="39:9" pos:end="39:43">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:38"><expr pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:37">nb_output_streams</name></expr>;</condition> <incr pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:40">i</name><operator pos:start="39:41" pos:end="39:42">++</operator></expr></incr>)</control> <block pos:start="39:45" pos:end="64:0">{<block_content pos:start="40:9" pos:end="61:37">
        <decl_stmt pos:start="40:9" pos:end="40:46"><decl pos:start="40:9" pos:end="40:45"><type pos:start="40:9" pos:end="40:22"><name pos:start="40:9" pos:end="40:20">OutputStream</name> <modifier pos:start="40:22" pos:end="40:22">*</modifier></type><name pos:start="40:23" pos:end="40:25">ost</name> <init pos:start="40:27" pos:end="40:45">= <expr pos:start="40:29" pos:end="40:45"><name pos:start="40:29" pos:end="40:45"><name pos:start="40:29" pos:end="40:42">output_streams</name><index pos:start="40:43" pos:end="40:45">[<expr pos:start="40:44" pos:end="40:44"><name pos:start="40:44" pos:end="40:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="41:9" pos:end="41:39"><decl pos:start="41:9" pos:end="41:38"><type pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:32">AVBitStreamFilterContext</name> <modifier pos:start="41:34" pos:end="41:34">*</modifier></type><name pos:start="41:35" pos:end="41:38">bsfc</name></decl>;</decl_stmt>
        <if_stmt pos:start="42:9" pos:end="43:21"><if pos:start="42:9" pos:end="43:21">if <condition pos:start="42:12" pos:end="42:17">(<expr pos:start="42:13" pos:end="42:16"><operator pos:start="42:13" pos:end="42:13">!</operator><name pos:start="42:14" pos:end="42:16">ost</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">
            <continue pos:start="43:13" pos:end="43:21">continue;</continue></block_content></block></if></if_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:38"><expr pos:start="44:9" pos:end="44:37"><name pos:start="44:9" pos:end="44:12">bsfc</name> <operator pos:start="44:14" pos:end="44:14">=</operator> <name pos:start="44:16" pos:end="44:37"><name pos:start="44:16" pos:end="44:18">ost</name><operator pos:start="44:19" pos:end="44:20">-&gt;</operator><name pos:start="44:21" pos:end="44:37">bitstream_filters</name></name></expr>;</expr_stmt>
        <while pos:start="45:9" pos:end="49:9">while <condition pos:start="45:15" pos:end="45:20">(<expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">bsfc</name></expr>)</condition> <block pos:start="45:22" pos:end="49:9">{<block_content pos:start="46:13" pos:end="48:24">
            <decl_stmt pos:start="46:13" pos:end="46:56"><decl pos:start="46:13" pos:end="46:55"><type pos:start="46:13" pos:end="46:38"><name pos:start="46:13" pos:end="46:36">AVBitStreamFilterContext</name> <modifier pos:start="46:38" pos:end="46:38">*</modifier></type><name pos:start="46:39" pos:end="46:42">next</name> <init pos:start="46:44" pos:end="46:55">= <expr pos:start="46:46" pos:end="46:55"><name pos:start="46:46" pos:end="46:55"><name pos:start="46:46" pos:end="46:49">bsfc</name><operator pos:start="46:50" pos:end="46:51">-&gt;</operator><name pos:start="46:52" pos:end="46:55">next</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><call pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:37">av_bitstream_filter_close</name><argument_list pos:start="47:38" pos:end="47:43">(<argument pos:start="47:39" pos:end="47:42"><expr pos:start="47:39" pos:end="47:42"><name pos:start="47:39" pos:end="47:42">bsfc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:24"><expr pos:start="48:13" pos:end="48:23"><name pos:start="48:13" pos:end="48:16">bsfc</name> <operator pos:start="48:18" pos:end="48:18">=</operator> <name pos:start="48:20" pos:end="48:23">next</name></expr>;</expr_stmt>
        </block_content>}</block></while>
        <expr_stmt pos:start="50:9" pos:end="50:38"><expr pos:start="50:9" pos:end="50:37"><name pos:start="50:9" pos:end="50:30"><name pos:start="50:9" pos:end="50:11">ost</name><operator pos:start="50:12" pos:end="50:13">-&gt;</operator><name pos:start="50:14" pos:end="50:30">bitstream_filters</name></name> <operator pos:start="50:32" pos:end="50:32">=</operator> <name pos:start="50:34" pos:end="50:37">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><call pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:21">av_frame_free</name><argument_list pos:start="51:22" pos:end="51:43">(<argument pos:start="51:23" pos:end="51:42"><expr pos:start="51:23" pos:end="51:42"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:42"><name pos:start="51:24" pos:end="51:26">ost</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:42">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:40"><expr pos:start="52:9" pos:end="52:39"><call pos:start="52:9" pos:end="52:39"><name pos:start="52:9" pos:end="52:21">av_frame_free</name><argument_list pos:start="52:22" pos:end="52:39">(<argument pos:start="52:23" pos:end="52:38"><expr pos:start="52:23" pos:end="52:38"><operator pos:start="52:23" pos:end="52:23">&amp;</operator><name pos:start="52:24" pos:end="52:38"><name pos:start="52:24" pos:end="52:26">ost</name><operator pos:start="52:27" pos:end="52:28">-&gt;</operator><name pos:start="52:29" pos:end="52:38">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><call pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:23">av_parser_close</name><argument_list pos:start="53:24" pos:end="53:36">(<argument pos:start="53:25" pos:end="53:35"><expr pos:start="53:25" pos:end="53:35"><name pos:start="53:25" pos:end="53:35"><name pos:start="53:25" pos:end="53:27">ost</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:35">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:41"><expr pos:start="54:9" pos:end="54:40"><call pos:start="54:9" pos:end="54:40"><name pos:start="54:9" pos:end="54:16">av_freep</name><argument_list pos:start="54:17" pos:end="54:40">(<argument pos:start="54:18" pos:end="54:39"><expr pos:start="54:18" pos:end="54:39"><operator pos:start="54:18" pos:end="54:18">&amp;</operator><name pos:start="54:19" pos:end="54:39"><name pos:start="54:19" pos:end="54:21">ost</name><operator pos:start="54:22" pos:end="54:23">-&gt;</operator><name pos:start="54:24" pos:end="54:39">forced_keyframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><call pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:20">av_expr_free</name><argument_list pos:start="55:21" pos:end="55:49">(<argument pos:start="55:22" pos:end="55:48"><expr pos:start="55:22" pos:end="55:48"><name pos:start="55:22" pos:end="55:48"><name pos:start="55:22" pos:end="55:24">ost</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:48">forced_keyframes_pexpr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:33"><expr pos:start="56:9" pos:end="56:32"><call pos:start="56:9" pos:end="56:32"><name pos:start="56:9" pos:end="56:16">av_freep</name><argument_list pos:start="56:17" pos:end="56:32">(<argument pos:start="56:18" pos:end="56:31"><expr pos:start="56:18" pos:end="56:31"><operator pos:start="56:18" pos:end="56:18">&amp;</operator><name pos:start="56:19" pos:end="56:31"><name pos:start="56:19" pos:end="56:21">ost</name><operator pos:start="56:22" pos:end="56:23">-&gt;</operator><name pos:start="56:24" pos:end="56:31">avfilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><call pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:16">av_freep</name><argument_list pos:start="57:17" pos:end="57:38">(<argument pos:start="57:18" pos:end="57:37"><expr pos:start="57:18" pos:end="57:37"><operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:37"><name pos:start="57:19" pos:end="57:21">ost</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:37">logfile_prefix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="58:9" pos:end="58:43"><expr pos:start="58:9" pos:end="58:42"><call pos:start="58:9" pos:end="58:42"><name pos:start="58:9" pos:end="58:16">av_freep</name><argument_list pos:start="58:17" pos:end="58:42">(<argument pos:start="58:18" pos:end="58:41"><expr pos:start="58:18" pos:end="58:41"><operator pos:start="58:18" pos:end="58:18">&amp;</operator><name pos:start="58:19" pos:end="58:41"><name pos:start="58:19" pos:end="58:21">ost</name><operator pos:start="58:22" pos:end="58:23">-&gt;</operator><name pos:start="58:24" pos:end="58:41">audio_channels_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:11">ost</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:34">audio_channels_mapped</name></name> <operator pos:start="59:36" pos:end="59:36">=</operator> <literal type="number" pos:start="59:38" pos:end="59:38">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:44"><expr pos:start="60:9" pos:end="60:43"><call pos:start="60:9" pos:end="60:43"><name pos:start="60:9" pos:end="60:28">avcodec_free_context</name><argument_list pos:start="60:29" pos:end="60:43">(<argument pos:start="60:30" pos:end="60:42"><expr pos:start="60:30" pos:end="60:42"><operator pos:start="60:30" pos:end="60:30">&amp;</operator><name pos:start="60:31" pos:end="60:42"><name pos:start="60:31" pos:end="60:33">ost</name><operator pos:start="60:34" pos:end="60:35">-&gt;</operator><name pos:start="60:36" pos:end="60:42">enc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:16">av_freep</name><argument_list pos:start="61:17" pos:end="61:36">(<argument pos:start="61:18" pos:end="61:35"><expr pos:start="61:18" pos:end="61:35"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:35"><name pos:start="61:19" pos:end="61:32">output_streams</name><index pos:start="61:33" pos:end="61:35">[<expr pos:start="61:34" pos:end="61:34"><name pos:start="61:34" pos:end="61:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
<cpp:if pos:start="63:1" pos:end="63:17">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:17">HAVE_PTHREADS</name></expr></cpp:if>
    <expr_stmt pos:start="64:5" pos:end="66:0"><expr pos:start="64:5" pos:end="64:24"><call pos:start="64:5" pos:end="64:24"><name pos:start="64:5" pos:end="64:22">free_input_threads</name><argument_list pos:start="64:23" pos:end="64:24">()</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>
    <for pos:start="66:5" pos:end="69:5">for <control pos:start="66:9" pos:end="66:40">(<init pos:start="66:10" pos:end="66:15"><expr pos:start="66:10" pos:end="66:14"><name pos:start="66:10" pos:end="66:10">i</name> <operator pos:start="66:12" pos:end="66:12">=</operator> <literal type="number" pos:start="66:14" pos:end="66:14">0</literal></expr>;</init> <condition pos:start="66:17" pos:end="66:35"><expr pos:start="66:17" pos:end="66:34"><name pos:start="66:17" pos:end="66:17">i</name> <operator pos:start="66:19" pos:end="66:19">&lt;</operator> <name pos:start="66:21" pos:end="66:34">nb_input_files</name></expr>;</condition> <incr pos:start="66:37" pos:end="66:39"><expr pos:start="66:37" pos:end="66:39"><name pos:start="66:37" pos:end="66:37">i</name><operator pos:start="66:38" pos:end="66:39">++</operator></expr></incr>)</control> <block pos:start="66:42" pos:end="69:5">{<block_content pos:start="67:9" pos:end="68:34">
        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><call pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:28">avformat_close_input</name><argument_list pos:start="67:29" pos:end="67:50">(<argument pos:start="67:30" pos:end="67:49"><expr pos:start="67:30" pos:end="67:49"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:44"><name pos:start="67:31" pos:end="67:41">input_files</name><index pos:start="67:42" pos:end="67:44">[<expr pos:start="67:43" pos:end="67:43"><name pos:start="67:43" pos:end="67:43">i</name></expr>]</index></name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:49">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:34"><expr pos:start="68:9" pos:end="68:33"><call pos:start="68:9" pos:end="68:33"><name pos:start="68:9" pos:end="68:16">av_freep</name><argument_list pos:start="68:17" pos:end="68:33">(<argument pos:start="68:18" pos:end="68:32"><expr pos:start="68:18" pos:end="68:32"><operator pos:start="68:18" pos:end="68:18">&amp;</operator><name pos:start="68:19" pos:end="68:32"><name pos:start="68:19" pos:end="68:29">input_files</name><index pos:start="68:30" pos:end="68:32">[<expr pos:start="68:31" pos:end="68:31"><name pos:start="68:31" pos:end="68:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <for pos:start="70:5" pos:end="81:5">for <control pos:start="70:9" pos:end="70:42">(<init pos:start="70:10" pos:end="70:15"><expr pos:start="70:10" pos:end="70:14"><name pos:start="70:10" pos:end="70:10">i</name> <operator pos:start="70:12" pos:end="70:12">=</operator> <literal type="number" pos:start="70:14" pos:end="70:14">0</literal></expr>;</init> <condition pos:start="70:17" pos:end="70:37"><expr pos:start="70:17" pos:end="70:36"><name pos:start="70:17" pos:end="70:17">i</name> <operator pos:start="70:19" pos:end="70:19">&lt;</operator> <name pos:start="70:21" pos:end="70:36">nb_input_streams</name></expr>;</condition> <incr pos:start="70:39" pos:end="70:41"><expr pos:start="70:39" pos:end="70:41"><name pos:start="70:39" pos:end="70:39">i</name><operator pos:start="70:40" pos:end="70:41">++</operator></expr></incr>)</control> <block pos:start="70:44" pos:end="81:5">{<block_content pos:start="71:9" pos:end="80:36">
        <decl_stmt pos:start="71:9" pos:end="71:44"><decl pos:start="71:9" pos:end="71:43"><type pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:19">InputStream</name> <modifier pos:start="71:21" pos:end="71:21">*</modifier></type><name pos:start="71:22" pos:end="71:24">ist</name> <init pos:start="71:26" pos:end="71:43">= <expr pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:40">input_streams</name><index pos:start="71:41" pos:end="71:43">[<expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="72:9" pos:end="72:43"><expr pos:start="72:9" pos:end="72:42"><call pos:start="72:9" pos:end="72:42"><name pos:start="72:9" pos:end="72:21">av_frame_free</name><argument_list pos:start="72:22" pos:end="72:42">(<argument pos:start="72:23" pos:end="72:41"><expr pos:start="72:23" pos:end="72:41"><operator pos:start="72:23" pos:end="72:23">&amp;</operator><name pos:start="72:24" pos:end="72:41"><name pos:start="72:24" pos:end="72:26">ist</name><operator pos:start="72:27" pos:end="72:28">-&gt;</operator><name pos:start="72:29" pos:end="72:41">decoded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><call pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:21">av_frame_free</name><argument_list pos:start="73:22" pos:end="73:41">(<argument pos:start="73:23" pos:end="73:40"><expr pos:start="73:23" pos:end="73:40"><operator pos:start="73:23" pos:end="73:23">&amp;</operator><name pos:start="73:24" pos:end="73:40"><name pos:start="73:24" pos:end="73:26">ist</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:40">filter_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:41"><expr pos:start="74:9" pos:end="74:40"><call pos:start="74:9" pos:end="74:40"><name pos:start="74:9" pos:end="74:20">av_dict_free</name><argument_list pos:start="74:21" pos:end="74:40">(<argument pos:start="74:22" pos:end="74:39"><expr pos:start="74:22" pos:end="74:39"><operator pos:start="74:22" pos:end="74:22">&amp;</operator><name pos:start="74:23" pos:end="74:39"><name pos:start="74:23" pos:end="74:25">ist</name><operator pos:start="74:26" pos:end="74:27">-&gt;</operator><name pos:start="74:28" pos:end="74:39">decoder_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><call pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:23">avsubtitle_free</name><argument_list pos:start="75:24" pos:end="75:48">(<argument pos:start="75:25" pos:end="75:47"><expr pos:start="75:25" pos:end="75:47"><operator pos:start="75:25" pos:end="75:25">&amp;</operator><name pos:start="75:26" pos:end="75:47"><name pos:start="75:26" pos:end="75:28">ist</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:38">prev_sub</name><operator pos:start="75:39" pos:end="75:39">.</operator><name pos:start="75:40" pos:end="75:47">subtitle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="76:9" pos:end="76:45"><expr pos:start="76:9" pos:end="76:44"><call pos:start="76:9" pos:end="76:44"><name pos:start="76:9" pos:end="76:21">av_frame_free</name><argument_list pos:start="76:22" pos:end="76:44">(<argument pos:start="76:23" pos:end="76:43"><expr pos:start="76:23" pos:end="76:43"><operator pos:start="76:23" pos:end="76:23">&amp;</operator><name pos:start="76:24" pos:end="76:43"><name pos:start="76:24" pos:end="76:26">ist</name><operator pos:start="76:27" pos:end="76:28">-&gt;</operator><name pos:start="76:29" pos:end="76:37">sub2video</name><operator pos:start="76:38" pos:end="76:38">.</operator><name pos:start="76:39" pos:end="76:43">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><call pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:16">av_freep</name><argument_list pos:start="77:17" pos:end="77:31">(<argument pos:start="77:18" pos:end="77:30"><expr pos:start="77:18" pos:end="77:30"><operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:30"><name pos:start="77:19" pos:end="77:21">ist</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:30">filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="78:9" pos:end="78:39"><expr pos:start="78:9" pos:end="78:38"><call pos:start="78:9" pos:end="78:38"><name pos:start="78:9" pos:end="78:16">av_freep</name><argument_list pos:start="78:17" pos:end="78:38">(<argument pos:start="78:18" pos:end="78:37"><expr pos:start="78:18" pos:end="78:37"><operator pos:start="78:18" pos:end="78:18">&amp;</operator><name pos:start="78:19" pos:end="78:37"><name pos:start="78:19" pos:end="78:21">ist</name><operator pos:start="78:22" pos:end="78:23">-&gt;</operator><name pos:start="78:24" pos:end="78:37">hwaccel_device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="79:9" pos:end="79:44"><expr pos:start="79:9" pos:end="79:43"><call pos:start="79:9" pos:end="79:43"><name pos:start="79:9" pos:end="79:28">avcodec_free_context</name><argument_list pos:start="79:29" pos:end="79:43">(<argument pos:start="79:30" pos:end="79:42"><expr pos:start="79:30" pos:end="79:42"><operator pos:start="79:30" pos:end="79:30">&amp;</operator><name pos:start="79:31" pos:end="79:42"><name pos:start="79:31" pos:end="79:33">ist</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:42">dec_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:36"><expr pos:start="80:9" pos:end="80:35"><call pos:start="80:9" pos:end="80:35"><name pos:start="80:9" pos:end="80:16">av_freep</name><argument_list pos:start="80:17" pos:end="80:35">(<argument pos:start="80:18" pos:end="80:34"><expr pos:start="80:18" pos:end="80:34"><operator pos:start="80:18" pos:end="80:18">&amp;</operator><name pos:start="80:19" pos:end="80:34"><name pos:start="80:19" pos:end="80:31">input_streams</name><index pos:start="80:32" pos:end="80:34">[<expr pos:start="80:33" pos:end="80:33"><name pos:start="80:33" pos:end="80:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="82:5" pos:end="87:5"><if pos:start="82:5" pos:end="87:5">if <condition pos:start="82:8" pos:end="82:20">(<expr pos:start="82:9" pos:end="82:19"><name pos:start="82:9" pos:end="82:19">vstats_file</name></expr>)</condition> <block pos:start="82:22" pos:end="87:5">{<block_content pos:start="83:9" pos:end="86:47">
        <if_stmt pos:start="83:9" pos:end="86:47"><if pos:start="83:9" pos:end="86:47">if <condition pos:start="83:12" pos:end="83:32">(<expr pos:start="83:13" pos:end="83:31"><call pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:18">fclose</name><argument_list pos:start="83:19" pos:end="83:31">(<argument pos:start="83:20" pos:end="83:30"><expr pos:start="83:20" pos:end="83:30"><name pos:start="83:20" pos:end="83:30">vstats_file</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="84:13" pos:end="86:47"><block_content pos:start="84:13" pos:end="86:47">
            <expr_stmt pos:start="84:13" pos:end="86:47"><expr pos:start="84:13" pos:end="86:46"><call pos:start="84:13" pos:end="86:46"><name pos:start="84:13" pos:end="84:18">av_log</name><argument_list pos:start="84:19" pos:end="86:46">(<argument pos:start="84:20" pos:end="84:23"><expr pos:start="84:20" pos:end="84:23"><name pos:start="84:20" pos:end="84:23">NULL</name></expr></argument>, <argument pos:start="84:26" pos:end="84:37"><expr pos:start="84:26" pos:end="84:37"><name pos:start="84:26" pos:end="84:37">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="85:20" pos:end="85:82"><expr pos:start="85:20" pos:end="85:82"><literal type="string" pos:start="85:20" pos:end="85:82">"Error closing vstats file, loss of information possible: %s\n"</literal></expr></argument>,
                   <argument pos:start="86:20" pos:end="86:45"><expr pos:start="86:20" pos:end="86:45"><call pos:start="86:20" pos:end="86:45"><name pos:start="86:20" pos:end="86:29">av_err2str</name><argument_list pos:start="86:30" pos:end="86:45">(<argument pos:start="86:31" pos:end="86:44"><expr pos:start="86:31" pos:end="86:44"><call pos:start="86:31" pos:end="86:44"><name pos:start="86:31" pos:end="86:37">AVERROR</name><argument_list pos:start="86:38" pos:end="86:44">(<argument pos:start="86:39" pos:end="86:43"><expr pos:start="86:39" pos:end="86:43"><name pos:start="86:39" pos:end="86:43">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="88:5" pos:end="88:31"><expr pos:start="88:5" pos:end="88:30"><call pos:start="88:5" pos:end="88:30"><name pos:start="88:5" pos:end="88:12">av_freep</name><argument_list pos:start="88:13" pos:end="88:30">(<argument pos:start="88:14" pos:end="88:29"><expr pos:start="88:14" pos:end="88:29"><operator pos:start="88:14" pos:end="88:14">&amp;</operator><name pos:start="88:15" pos:end="88:29">vstats_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="89:5" pos:end="89:29"><expr pos:start="89:5" pos:end="89:28"><call pos:start="89:5" pos:end="89:28"><name pos:start="89:5" pos:end="89:12">av_freep</name><argument_list pos:start="89:13" pos:end="89:28">(<argument pos:start="89:14" pos:end="89:27"><expr pos:start="89:14" pos:end="89:27"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:27">input_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="90:5" pos:end="90:27"><expr pos:start="90:5" pos:end="90:26"><call pos:start="90:5" pos:end="90:26"><name pos:start="90:5" pos:end="90:12">av_freep</name><argument_list pos:start="90:13" pos:end="90:26">(<argument pos:start="90:14" pos:end="90:25"><expr pos:start="90:14" pos:end="90:25"><operator pos:start="90:14" pos:end="90:14">&amp;</operator><name pos:start="90:15" pos:end="90:25">input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="91:5" pos:end="91:30"><expr pos:start="91:5" pos:end="91:29"><call pos:start="91:5" pos:end="91:29"><name pos:start="91:5" pos:end="91:12">av_freep</name><argument_list pos:start="91:13" pos:end="91:29">(<argument pos:start="91:14" pos:end="91:28"><expr pos:start="91:14" pos:end="91:28"><operator pos:start="91:14" pos:end="91:14">&amp;</operator><name pos:start="91:15" pos:end="91:28">output_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="92:5" pos:end="92:28"><expr pos:start="92:5" pos:end="92:27"><call pos:start="92:5" pos:end="92:27"><name pos:start="92:5" pos:end="92:12">av_freep</name><argument_list pos:start="92:13" pos:end="92:27">(<argument pos:start="92:14" pos:end="92:26"><expr pos:start="92:14" pos:end="92:26"><operator pos:start="92:14" pos:end="92:14">&amp;</operator><name pos:start="92:15" pos:end="92:26">output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="93:5" pos:end="93:18"><expr pos:start="93:5" pos:end="93:17"><call pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:15">uninit_opts</name><argument_list pos:start="93:16" pos:end="93:17">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="94:5" pos:end="94:30"><expr pos:start="94:5" pos:end="94:29"><call pos:start="94:5" pos:end="94:29"><name pos:start="94:5" pos:end="94:27">avformat_network_deinit</name><argument_list pos:start="94:28" pos:end="94:29">()</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="95:5" pos:end="100:5"><if pos:start="95:5" pos:end="98:5">if <condition pos:start="95:8" pos:end="95:25">(<expr pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:24">received_sigterm</name></expr>)</condition> <block pos:start="95:27" pos:end="98:5">{<block_content pos:start="96:9" pos:end="97:39">
        <expr_stmt pos:start="96:9" pos:end="97:39"><expr pos:start="96:9" pos:end="97:38"><call pos:start="96:9" pos:end="97:38"><name pos:start="96:9" pos:end="96:14">av_log</name><argument_list pos:start="96:15" pos:end="97:38">(<argument pos:start="96:16" pos:end="96:19"><expr pos:start="96:16" pos:end="96:19"><name pos:start="96:16" pos:end="96:19">NULL</name></expr></argument>, <argument pos:start="96:22" pos:end="96:32"><expr pos:start="96:22" pos:end="96:32"><name pos:start="96:22" pos:end="96:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="96:35" pos:end="96:75"><expr pos:start="96:35" pos:end="96:75"><literal type="string" pos:start="96:35" pos:end="96:75">"Exiting normally, received signal %d.\n"</literal></expr></argument>,
               <argument pos:start="97:16" pos:end="97:37"><expr pos:start="97:16" pos:end="97:37"><operator pos:start="97:16" pos:end="97:16">(</operator><name pos:start="97:17" pos:end="97:19">int</name><operator pos:start="97:20" pos:end="97:20">)</operator> <name pos:start="97:22" pos:end="97:37">received_sigterm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="98:7" pos:end="100:5">else if <condition pos:start="98:15" pos:end="98:42">(<expr pos:start="98:16" pos:end="98:41"><name pos:start="98:16" pos:end="98:18">ret</name> <operator pos:start="98:20" pos:end="98:21">&amp;&amp;</operator> <name pos:start="98:23" pos:end="98:41">transcode_init_done</name></expr>)</condition> <block pos:start="98:44" pos:end="100:5">{<block_content pos:start="99:9" pos:end="99:58">
        <expr_stmt pos:start="99:9" pos:end="99:58"><expr pos:start="99:9" pos:end="99:57"><call pos:start="99:9" pos:end="99:57"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:57">(<argument pos:start="99:16" pos:end="99:19"><expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">NULL</name></expr></argument>, <argument pos:start="99:22" pos:end="99:32"><expr pos:start="99:22" pos:end="99:32"><name pos:start="99:22" pos:end="99:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="99:35" pos:end="99:56"><expr pos:start="99:35" pos:end="99:56"><literal type="string" pos:start="99:35" pos:end="99:56">"Conversion failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="101:5" pos:end="101:16"><expr pos:start="101:5" pos:end="101:15"><call pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:13">term_exit</name><argument_list pos:start="101:14" pos:end="101:15">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="102:5" pos:end="102:22"><expr pos:start="102:5" pos:end="102:21"><name pos:start="102:5" pos:end="102:17">ffmpeg_exited</name> <operator pos:start="102:19" pos:end="102:19">=</operator> <literal type="number" pos:start="102:21" pos:end="102:21">1</literal></expr>;</expr_stmt>
</block_content>}</block></function></unit>
