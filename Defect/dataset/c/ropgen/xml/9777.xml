<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9777.c" pos:tabs="8"><function pos:start="1:1" pos:end="315:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:30">nfs_client_open</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:40">NFSClient</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">client</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:55">QDict</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">options</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:40">flags</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:56">open_flags</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:63">Error</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier><modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="315:1">{<block_content pos:start="7:5" pos:end="313:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><operator pos:start="7:15" pos:end="7:15">-</operator><name pos:start="7:16" pos:end="7:21">EINVAL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:15">stat</name></name></type> <name pos:start="13:17" pos:end="13:18">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:14">file</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>, <decl pos:start="15:24" pos:end="15:35"><type ref="prev" pos:start="15:5" pos:end="15:10"><modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:28">strp</name> <init pos:start="15:30" pos:end="15:35">= <expr pos:start="15:32" pos:end="15:35"><name pos:start="15:32" pos:end="15:35">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:19">qemu_mutex_init</name><argument_list pos:start="19:20" pos:end="19:35">(<argument pos:start="19:21" pos:end="19:34"><expr pos:start="19:21" pos:end="19:34"><operator pos:start="19:21" pos:end="19:21">&amp;</operator><name pos:start="19:22" pos:end="19:34"><name pos:start="19:22" pos:end="19:27">client</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:34">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:8">opts</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:65"><name pos:start="21:12" pos:end="21:27">qemu_opts_create</name><argument_list pos:start="21:28" pos:end="21:65">(<argument pos:start="21:29" pos:end="21:41"><expr pos:start="21:29" pos:end="21:41"><operator pos:start="21:29" pos:end="21:29">&amp;</operator><name pos:start="21:30" pos:end="21:41">runtime_opts</name></expr></argument>, <argument pos:start="21:44" pos:end="21:47"><expr pos:start="21:44" pos:end="21:47"><name pos:start="21:44" pos:end="21:47">NULL</name></expr></argument>, <argument pos:start="21:50" pos:end="21:50"><expr pos:start="21:50" pos:end="21:50"><literal type="number" pos:start="21:50" pos:end="21:50">0</literal></expr></argument>, <argument pos:start="21:53" pos:end="21:64"><expr pos:start="21:53" pos:end="21:64"><operator pos:start="21:53" pos:end="21:53">&amp;</operator><name pos:start="21:54" pos:end="21:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:26">qemu_opts_absorb_qdict</name><argument_list pos:start="23:27" pos:end="23:53">(<argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">opts</name></expr></argument>, <argument pos:start="23:34" pos:end="23:40"><expr pos:start="23:34" pos:end="23:40"><name pos:start="23:34" pos:end="23:40">options</name></expr></argument>, <argument pos:start="23:43" pos:end="23:52"><expr pos:start="23:43" pos:end="23:52"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:17">local_err</name></expr>)</condition> <block pos:start="25:20" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:18">

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:23">error_propagate</name><argument_list pos:start="27:24" pos:end="27:40">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">errp</name></expr></argument>, <argument pos:start="27:31" pos:end="27:39"><expr pos:start="27:31" pos:end="27:39"><name pos:start="27:31" pos:end="27:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><name pos:start="29:16" pos:end="29:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:10">client</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:16">path</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:55"><name pos:start="37:20" pos:end="37:27">g_strdup</name><argument_list pos:start="37:28" pos:end="37:55">(<argument pos:start="37:29" pos:end="37:54"><expr pos:start="37:29" pos:end="37:54"><call pos:start="37:29" pos:end="37:54"><name pos:start="37:29" pos:end="37:40">qemu_opt_get</name><argument_list pos:start="37:41" pos:end="37:54">(<argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">opts</name></expr></argument>, <argument pos:start="37:48" pos:end="37:53"><expr pos:start="37:48" pos:end="37:53"><literal type="string" pos:start="37:48" pos:end="37:53">"path"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:21"><name pos:start="39:10" pos:end="39:15">client</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:21">path</name></name></expr>)</condition> <block pos:start="39:24" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:18">

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><name pos:start="41:16" pos:end="41:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><call pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:18">error_setg</name><argument_list pos:start="43:19" pos:end="43:49">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">errp</name></expr></argument>, <argument pos:start="43:26" pos:end="43:48"><expr pos:start="43:26" pos:end="43:48"><literal type="string" pos:start="43:26" pos:end="43:48">"No path was specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:8">strp</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:37"><name pos:start="51:12" pos:end="51:18">strrchr</name><argument_list pos:start="51:19" pos:end="51:37">(<argument pos:start="51:20" pos:end="51:31"><expr pos:start="51:20" pos:end="51:31"><name pos:start="51:20" pos:end="51:31"><name pos:start="51:20" pos:end="51:25">client</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:31">path</name></name></expr></argument>, <argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><literal type="char" pos:start="51:34" pos:end="51:36">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:21">(<expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">strp</name> <operator pos:start="53:14" pos:end="53:15">==</operator> <name pos:start="53:17" pos:end="53:20">NULL</name></expr>)</condition> <block pos:start="53:23" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><call pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:18">error_setg</name><argument_list pos:start="55:19" pos:end="55:49">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">errp</name></expr></argument>, <argument pos:start="55:26" pos:end="55:48"><expr pos:start="55:26" pos:end="55:48"><literal type="string" pos:start="55:26" pos:end="55:48">"Invalid URL specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:18">goto <name pos:start="57:14" pos:end="57:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:8">file</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="61:25"><name pos:start="61:12" pos:end="61:19">g_strdup</name><argument_list pos:start="61:20" pos:end="61:25">(<argument pos:start="61:21" pos:end="61:24"><expr pos:start="61:21" pos:end="61:24"><name pos:start="61:21" pos:end="61:24">strp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:14"><expr pos:start="63:5" pos:end="63:13"><operator pos:start="63:5" pos:end="63:5">*</operator><name pos:start="63:6" pos:end="63:9">strp</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <literal type="number" pos:start="63:13" pos:end="63:13">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:63">/* Pop the config into our state object, Exit if invalid */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:47"><expr pos:start="69:5" pos:end="69:46"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:10">client</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:18">server</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:46"><name pos:start="69:22" pos:end="69:31">nfs_config</name><argument_list pos:start="69:32" pos:end="69:46">(<argument pos:start="69:33" pos:end="69:39"><expr pos:start="69:33" pos:end="69:39"><name pos:start="69:33" pos:end="69:39">options</name></expr></argument>, <argument pos:start="69:42" pos:end="69:45"><expr pos:start="69:42" pos:end="69:45"><name pos:start="69:42" pos:end="69:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:24">(<expr pos:start="71:9" pos:end="71:23"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:15">client</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:23">server</name></name></expr>)</condition> <block pos:start="71:26" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">-</operator><name pos:start="73:16" pos:end="73:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:41"><expr pos:start="81:5" pos:end="81:40"><name pos:start="81:5" pos:end="81:19"><name pos:start="81:5" pos:end="81:10">client</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:19">context</name></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:40"><name pos:start="81:23" pos:end="81:38">nfs_init_context</name><argument_list pos:start="81:39" pos:end="81:40">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:32">(<expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:14">client</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:23">context</name></name> <operator pos:start="83:25" pos:end="83:26">==</operator> <name pos:start="83:28" pos:end="83:31">NULL</name></expr>)</condition> <block pos:start="83:34" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:18">

        <expr_stmt pos:start="85:9" pos:end="85:55"><expr pos:start="85:9" pos:end="85:54"><call pos:start="85:9" pos:end="85:54"><name pos:start="85:9" pos:end="85:18">error_setg</name><argument_list pos:start="85:19" pos:end="85:54">(<argument pos:start="85:20" pos:end="85:23"><expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">errp</name></expr></argument>, <argument pos:start="85:26" pos:end="85:53"><expr pos:start="85:26" pos:end="85:53"><literal type="string" pos:start="85:26" pos:end="85:53">"Failed to init NFS context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:18">goto <name pos:start="87:14" pos:end="87:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:35">(<expr pos:start="93:9" pos:end="93:34"><call pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:20">qemu_opt_get</name><argument_list pos:start="93:21" pos:end="93:34">(<argument pos:start="93:22" pos:end="93:25"><expr pos:start="93:22" pos:end="93:25"><name pos:start="93:22" pos:end="93:25">opts</name></expr></argument>, <argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><literal type="string" pos:start="93:28" pos:end="93:33">"user"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:37" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:50">

        <expr_stmt pos:start="95:9" pos:end="95:59"><expr pos:start="95:9" pos:end="95:58"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:14">client</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:19">uid</name></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <call pos:start="95:23" pos:end="95:58"><name pos:start="95:23" pos:end="95:41">qemu_opt_get_number</name><argument_list pos:start="95:42" pos:end="95:58">(<argument pos:start="95:43" pos:end="95:46"><expr pos:start="95:43" pos:end="95:46"><name pos:start="95:43" pos:end="95:46">opts</name></expr></argument>, <argument pos:start="95:49" pos:end="95:54"><expr pos:start="95:49" pos:end="95:54"><literal type="string" pos:start="95:49" pos:end="95:54">"user"</literal></expr></argument>, <argument pos:start="95:57" pos:end="95:57"><expr pos:start="95:57" pos:end="95:57"><literal type="number" pos:start="95:57" pos:end="95:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:50"><expr pos:start="97:9" pos:end="97:49"><call pos:start="97:9" pos:end="97:49"><name pos:start="97:9" pos:end="97:19">nfs_set_uid</name><argument_list pos:start="97:20" pos:end="97:49">(<argument pos:start="97:21" pos:end="97:35"><expr pos:start="97:21" pos:end="97:35"><name pos:start="97:21" pos:end="97:35"><name pos:start="97:21" pos:end="97:26">client</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:35">context</name></name></expr></argument>, <argument pos:start="97:38" pos:end="97:48"><expr pos:start="97:38" pos:end="97:48"><name pos:start="97:38" pos:end="97:48"><name pos:start="97:38" pos:end="97:43">client</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:48">uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:36">(<expr pos:start="103:9" pos:end="103:35"><call pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:20">qemu_opt_get</name><argument_list pos:start="103:21" pos:end="103:35">(<argument pos:start="103:22" pos:end="103:25"><expr pos:start="103:22" pos:end="103:25"><name pos:start="103:22" pos:end="103:25">opts</name></expr></argument>, <argument pos:start="103:28" pos:end="103:34"><expr pos:start="103:28" pos:end="103:34"><literal type="string" pos:start="103:28" pos:end="103:34">"group"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:38" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:50">

        <expr_stmt pos:start="105:9" pos:end="105:60"><expr pos:start="105:9" pos:end="105:59"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:14">client</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:19">gid</name></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <call pos:start="105:23" pos:end="105:59"><name pos:start="105:23" pos:end="105:41">qemu_opt_get_number</name><argument_list pos:start="105:42" pos:end="105:59">(<argument pos:start="105:43" pos:end="105:46"><expr pos:start="105:43" pos:end="105:46"><name pos:start="105:43" pos:end="105:46">opts</name></expr></argument>, <argument pos:start="105:49" pos:end="105:55"><expr pos:start="105:49" pos:end="105:55"><literal type="string" pos:start="105:49" pos:end="105:55">"group"</literal></expr></argument>, <argument pos:start="105:58" pos:end="105:58"><expr pos:start="105:58" pos:end="105:58"><literal type="number" pos:start="105:58" pos:end="105:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:50"><expr pos:start="107:9" pos:end="107:49"><call pos:start="107:9" pos:end="107:49"><name pos:start="107:9" pos:end="107:19">nfs_set_gid</name><argument_list pos:start="107:20" pos:end="107:49">(<argument pos:start="107:21" pos:end="107:35"><expr pos:start="107:21" pos:end="107:35"><name pos:start="107:21" pos:end="107:35"><name pos:start="107:21" pos:end="107:26">client</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:35">context</name></name></expr></argument>, <argument pos:start="107:38" pos:end="107:48"><expr pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:43">client</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:48">gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="124:0"><if pos:start="113:5" pos:end="124:0">if <condition pos:start="113:8" pos:end="113:44">(<expr pos:start="113:9" pos:end="113:43"><call pos:start="113:9" pos:end="113:43"><name pos:start="113:9" pos:end="113:20">qemu_opt_get</name><argument_list pos:start="113:21" pos:end="113:43">(<argument pos:start="113:22" pos:end="113:25"><expr pos:start="113:22" pos:end="113:25"><name pos:start="113:22" pos:end="113:25">opts</name></expr></argument>, <argument pos:start="113:28" pos:end="113:42"><expr pos:start="113:28" pos:end="113:42"><literal type="string" pos:start="113:28" pos:end="113:42">"tcp-syn-count"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:46" pos:end="124:0">{<block_content pos:start="115:9" pos:end="117:64">

        <expr_stmt pos:start="115:9" pos:end="115:75"><expr pos:start="115:9" pos:end="115:74"><name pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:14">client</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:26">tcp_syncnt</name></name> <operator pos:start="115:28" pos:end="115:28">=</operator> <call pos:start="115:30" pos:end="115:74"><name pos:start="115:30" pos:end="115:48">qemu_opt_get_number</name><argument_list pos:start="115:49" pos:end="115:74">(<argument pos:start="115:50" pos:end="115:53"><expr pos:start="115:50" pos:end="115:53"><name pos:start="115:50" pos:end="115:53">opts</name></expr></argument>, <argument pos:start="115:56" pos:end="115:70"><expr pos:start="115:56" pos:end="115:70"><literal type="string" pos:start="115:56" pos:end="115:70">"tcp-syn-count"</literal></expr></argument>, <argument pos:start="115:73" pos:end="115:73"><expr pos:start="115:73" pos:end="115:73"><literal type="number" pos:start="115:73" pos:end="115:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:64"><expr pos:start="117:9" pos:end="117:63"><call pos:start="117:9" pos:end="117:63"><name pos:start="117:9" pos:end="117:26">nfs_set_tcp_syncnt</name><argument_list pos:start="117:27" pos:end="117:63">(<argument pos:start="117:28" pos:end="117:42"><expr pos:start="117:28" pos:end="117:42"><name pos:start="117:28" pos:end="117:42"><name pos:start="117:28" pos:end="117:33">client</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:42">context</name></name></expr></argument>, <argument pos:start="117:45" pos:end="117:62"><expr pos:start="117:45" pos:end="117:62"><name pos:start="117:45" pos:end="117:62"><name pos:start="117:45" pos:end="117:50">client</name><operator pos:start="117:51" pos:end="117:52">-&gt;</operator><name pos:start="117:53" pos:end="117:62">tcp_syncnt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="123:1" pos:end="123:31">#<cpp:directive pos:start="123:2" pos:end="123:6">ifdef</cpp:directive> <name pos:start="123:8" pos:end="123:31">LIBNFS_FEATURE_READAHEAD</name></cpp:ifdef>

    <if_stmt pos:start="125:5" pos:end="166:0"><if pos:start="125:5" pos:end="166:0">if <condition pos:start="125:8" pos:end="125:45">(<expr pos:start="125:9" pos:end="125:44"><call pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:20">qemu_opt_get</name><argument_list pos:start="125:21" pos:end="125:44">(<argument pos:start="125:22" pos:end="125:25"><expr pos:start="125:22" pos:end="125:25"><name pos:start="125:22" pos:end="125:25">opts</name></expr></argument>, <argument pos:start="125:28" pos:end="125:43"><expr pos:start="125:28" pos:end="125:43"><literal type="string" pos:start="125:28" pos:end="125:43">"readahead-size"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:47" pos:end="166:0">{<block_content pos:start="127:9" pos:end="157:34">

        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="127:40">(<expr pos:start="127:13" pos:end="127:39"><name pos:start="127:13" pos:end="127:22">open_flags</name> <operator pos:start="127:24" pos:end="127:24">&amp;</operator> <name pos:start="127:26" pos:end="127:39">BDRV_O_NOCACHE</name></expr>)</condition> <block pos:start="127:42" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:22">

            <expr_stmt pos:start="129:13" pos:end="131:53"><expr pos:start="129:13" pos:end="131:52"><call pos:start="129:13" pos:end="131:52"><name pos:start="129:13" pos:end="129:22">error_setg</name><argument_list pos:start="129:23" pos:end="131:52">(<argument pos:start="129:24" pos:end="129:27"><expr pos:start="129:24" pos:end="129:27"><name pos:start="129:24" pos:end="129:27">errp</name></expr></argument>, <argument pos:start="129:30" pos:end="131:51"><expr pos:start="129:30" pos:end="131:51"><literal type="string" pos:start="129:30" pos:end="129:59">"Cannot enable NFS readahead "</literal>

                             <literal type="string" pos:start="131:30" pos:end="131:51">"if cache.direct = on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="133:13" pos:end="133:22">goto <name pos:start="133:18" pos:end="133:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:75"><expr pos:start="137:9" pos:end="137:74"><name pos:start="137:9" pos:end="137:25"><name pos:start="137:9" pos:end="137:14">client</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:25">readahead</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <call pos:start="137:29" pos:end="137:74"><name pos:start="137:29" pos:end="137:47">qemu_opt_get_number</name><argument_list pos:start="137:48" pos:end="137:74">(<argument pos:start="137:49" pos:end="137:52"><expr pos:start="137:49" pos:end="137:52"><name pos:start="137:49" pos:end="137:52">opts</name></expr></argument>, <argument pos:start="137:55" pos:end="137:70"><expr pos:start="137:55" pos:end="137:70"><literal type="string" pos:start="137:55" pos:end="137:70">"readahead-size"</literal></expr></argument>, <argument pos:start="137:73" pos:end="137:73"><expr pos:start="137:73" pos:end="137:73"><literal type="number" pos:start="137:73" pos:end="137:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="147:9"><if pos:start="139:9" pos:end="147:9">if <condition pos:start="139:12" pos:end="139:60">(<expr pos:start="139:13" pos:end="139:59"><name pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:18">client</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:29">readahead</name></name> <operator pos:start="139:31" pos:end="139:31">&gt;</operator> <name pos:start="139:33" pos:end="139:59">QEMU_NFS_MAX_READAHEAD_SIZE</name></expr>)</condition> <block pos:start="139:62" pos:end="147:9">{<block_content pos:start="141:13" pos:end="145:60">

            <expr_stmt pos:start="141:13" pos:end="143:53"><expr pos:start="141:13" pos:end="143:52"><call pos:start="141:13" pos:end="143:52"><name pos:start="141:13" pos:end="141:23">warn_report</name><argument_list pos:start="141:24" pos:end="143:52">(<argument pos:start="141:25" pos:end="141:61"><expr pos:start="141:25" pos:end="141:61"><literal type="string" pos:start="141:25" pos:end="141:61">"Truncating NFS readahead size to %d"</literal></expr></argument>,

                        <argument pos:start="143:25" pos:end="143:51"><expr pos:start="143:25" pos:end="143:51"><name pos:start="143:25" pos:end="143:51">QEMU_NFS_MAX_READAHEAD_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:60"><expr pos:start="145:13" pos:end="145:59"><name pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:18">client</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:29">readahead</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <name pos:start="145:33" pos:end="145:59">QEMU_NFS_MAX_READAHEAD_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="149:9" pos:end="152:0"><expr pos:start="149:9" pos:end="149:61"><call pos:start="149:9" pos:end="149:61"><name pos:start="149:9" pos:end="149:25">nfs_set_readahead</name><argument_list pos:start="149:26" pos:end="149:61">(<argument pos:start="149:27" pos:end="149:41"><expr pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:32">client</name><operator pos:start="149:33" pos:end="149:34">-&gt;</operator><name pos:start="149:35" pos:end="149:41">context</name></name></expr></argument>, <argument pos:start="149:44" pos:end="149:60"><expr pos:start="149:44" pos:end="149:60"><name pos:start="149:44" pos:end="149:60"><name pos:start="149:44" pos:end="149:49">client</name><operator pos:start="149:50" pos:end="149:51">-&gt;</operator><name pos:start="149:52" pos:end="149:60">readahead</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="151:1" pos:end="151:31">#<cpp:directive pos:start="151:2" pos:end="151:6">ifdef</cpp:directive> <name pos:start="151:8" pos:end="151:31">LIBNFS_FEATURE_PAGECACHE</name></cpp:ifdef>

        <expr_stmt pos:start="153:9" pos:end="156:0"><expr pos:start="153:9" pos:end="153:49"><call pos:start="153:9" pos:end="153:49"><name pos:start="153:9" pos:end="153:29">nfs_set_pagecache_ttl</name><argument_list pos:start="153:30" pos:end="153:49">(<argument pos:start="153:31" pos:end="153:45"><expr pos:start="153:31" pos:end="153:45"><name pos:start="153:31" pos:end="153:45"><name pos:start="153:31" pos:end="153:36">client</name><operator pos:start="153:37" pos:end="153:38">-&gt;</operator><name pos:start="153:39" pos:end="153:45">context</name></name></expr></argument>, <argument pos:start="153:48" pos:end="153:48"><expr pos:start="153:48" pos:end="153:48"><literal type="number" pos:start="153:48" pos:end="153:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="155:1" pos:end="155:6">#<cpp:directive pos:start="155:2" pos:end="155:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="157:9" pos:end="157:34"><expr pos:start="157:9" pos:end="157:33"><name pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:14">client</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:26">cache_used</name></name> <operator pos:start="157:28" pos:end="157:28">=</operator> <name pos:start="157:30" pos:end="157:33">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="161:1" pos:end="161:6">#<cpp:directive pos:start="161:2" pos:end="161:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="165:1" pos:end="165:31">#<cpp:directive pos:start="165:2" pos:end="165:6">ifdef</cpp:directive> <name pos:start="165:8" pos:end="165:31">LIBNFS_FEATURE_PAGECACHE</name></cpp:ifdef>

    <if_stmt pos:start="167:5" pos:end="204:0"><if pos:start="167:5" pos:end="204:0">if <condition pos:start="167:8" pos:end="167:46">(<expr pos:start="167:9" pos:end="167:45"><call pos:start="167:9" pos:end="167:45"><name pos:start="167:9" pos:end="167:20">qemu_opt_get</name><argument_list pos:start="167:21" pos:end="167:45">(<argument pos:start="167:22" pos:end="167:25"><expr pos:start="167:22" pos:end="167:25"><name pos:start="167:22" pos:end="167:25">opts</name></expr></argument>, <argument pos:start="167:28" pos:end="167:44"><expr pos:start="167:28" pos:end="167:44"><literal type="string" pos:start="167:28" pos:end="167:44">"page-cache-size"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:48" pos:end="204:0">{<block_content pos:start="169:9" pos:end="195:34">

        <if_stmt pos:start="169:9" pos:end="177:9"><if pos:start="169:9" pos:end="177:9">if <condition pos:start="169:12" pos:end="169:40">(<expr pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:22">open_flags</name> <operator pos:start="169:24" pos:end="169:24">&amp;</operator> <name pos:start="169:26" pos:end="169:39">BDRV_O_NOCACHE</name></expr>)</condition> <block pos:start="169:42" pos:end="177:9">{<block_content pos:start="171:13" pos:end="175:22">

            <expr_stmt pos:start="171:13" pos:end="173:53"><expr pos:start="171:13" pos:end="173:52"><call pos:start="171:13" pos:end="173:52"><name pos:start="171:13" pos:end="171:22">error_setg</name><argument_list pos:start="171:23" pos:end="173:52">(<argument pos:start="171:24" pos:end="171:27"><expr pos:start="171:24" pos:end="171:27"><name pos:start="171:24" pos:end="171:27">errp</name></expr></argument>, <argument pos:start="171:30" pos:end="173:51"><expr pos:start="171:30" pos:end="173:51"><literal type="string" pos:start="171:30" pos:end="171:59">"Cannot enable NFS pagecache "</literal>

                             <literal type="string" pos:start="173:30" pos:end="173:51">"if cache.direct = on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="175:13" pos:end="175:22">goto <name pos:start="175:18" pos:end="175:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:76"><expr pos:start="179:9" pos:end="179:75"><name pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:14">client</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:25">pagecache</name></name> <operator pos:start="179:27" pos:end="179:27">=</operator> <call pos:start="179:29" pos:end="179:75"><name pos:start="179:29" pos:end="179:47">qemu_opt_get_number</name><argument_list pos:start="179:48" pos:end="179:75">(<argument pos:start="179:49" pos:end="179:52"><expr pos:start="179:49" pos:end="179:52"><name pos:start="179:49" pos:end="179:52">opts</name></expr></argument>, <argument pos:start="179:55" pos:end="179:71"><expr pos:start="179:55" pos:end="179:71"><literal type="string" pos:start="179:55" pos:end="179:71">"page-cache-size"</literal></expr></argument>, <argument pos:start="179:74" pos:end="179:74"><expr pos:start="179:74" pos:end="179:74"><literal type="number" pos:start="179:74" pos:end="179:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="189:9"><if pos:start="181:9" pos:end="189:9">if <condition pos:start="181:12" pos:end="181:60">(<expr pos:start="181:13" pos:end="181:59"><name pos:start="181:13" pos:end="181:29"><name pos:start="181:13" pos:end="181:18">client</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:29">pagecache</name></name> <operator pos:start="181:31" pos:end="181:31">&gt;</operator> <name pos:start="181:33" pos:end="181:59">QEMU_NFS_MAX_PAGECACHE_SIZE</name></expr>)</condition> <block pos:start="181:62" pos:end="189:9">{<block_content pos:start="183:13" pos:end="187:60">

            <expr_stmt pos:start="183:13" pos:end="185:53"><expr pos:start="183:13" pos:end="185:52"><call pos:start="183:13" pos:end="185:52"><name pos:start="183:13" pos:end="183:23">warn_report</name><argument_list pos:start="183:24" pos:end="185:52">(<argument pos:start="183:25" pos:end="183:67"><expr pos:start="183:25" pos:end="183:67"><literal type="string" pos:start="183:25" pos:end="183:67">"Truncating NFS pagecache size to %d pages"</literal></expr></argument>,

                        <argument pos:start="185:25" pos:end="185:51"><expr pos:start="185:25" pos:end="185:51"><name pos:start="185:25" pos:end="185:51">QEMU_NFS_MAX_PAGECACHE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:60"><expr pos:start="187:13" pos:end="187:59"><name pos:start="187:13" pos:end="187:29"><name pos:start="187:13" pos:end="187:18">client</name><operator pos:start="187:19" pos:end="187:20">-&gt;</operator><name pos:start="187:21" pos:end="187:29">pagecache</name></name> <operator pos:start="187:31" pos:end="187:31">=</operator> <name pos:start="187:33" pos:end="187:59">QEMU_NFS_MAX_PAGECACHE_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:62"><expr pos:start="191:9" pos:end="191:61"><call pos:start="191:9" pos:end="191:61"><name pos:start="191:9" pos:end="191:25">nfs_set_pagecache</name><argument_list pos:start="191:26" pos:end="191:61">(<argument pos:start="191:27" pos:end="191:41"><expr pos:start="191:27" pos:end="191:41"><name pos:start="191:27" pos:end="191:41"><name pos:start="191:27" pos:end="191:32">client</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:41">context</name></name></expr></argument>, <argument pos:start="191:44" pos:end="191:60"><expr pos:start="191:44" pos:end="191:60"><name pos:start="191:44" pos:end="191:60"><name pos:start="191:44" pos:end="191:49">client</name><operator pos:start="191:50" pos:end="191:51">-&gt;</operator><name pos:start="191:52" pos:end="191:60">pagecache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:50"><expr pos:start="193:9" pos:end="193:49"><call pos:start="193:9" pos:end="193:49"><name pos:start="193:9" pos:end="193:29">nfs_set_pagecache_ttl</name><argument_list pos:start="193:30" pos:end="193:49">(<argument pos:start="193:31" pos:end="193:45"><expr pos:start="193:31" pos:end="193:45"><name pos:start="193:31" pos:end="193:45"><name pos:start="193:31" pos:end="193:36">client</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:45">context</name></name></expr></argument>, <argument pos:start="193:48" pos:end="193:48"><expr pos:start="193:48" pos:end="193:48"><literal type="number" pos:start="193:48" pos:end="193:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:34"><expr pos:start="195:9" pos:end="195:33"><name pos:start="195:9" pos:end="195:26"><name pos:start="195:9" pos:end="195:14">client</name><operator pos:start="195:15" pos:end="195:16">-&gt;</operator><name pos:start="195:17" pos:end="195:26">cache_used</name></name> <operator pos:start="195:28" pos:end="195:28">=</operator> <name pos:start="195:30" pos:end="195:33">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="199:1" pos:end="199:6">#<cpp:directive pos:start="199:2" pos:end="199:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="203:1" pos:end="203:27">#<cpp:directive pos:start="203:2" pos:end="203:6">ifdef</cpp:directive> <name pos:start="203:8" pos:end="203:27">LIBNFS_FEATURE_DEBUG</name></cpp:ifdef>

    <if_stmt pos:start="205:5" pos:end="228:0"><if pos:start="205:5" pos:end="228:0">if <condition pos:start="205:8" pos:end="205:36">(<expr pos:start="205:9" pos:end="205:35"><call pos:start="205:9" pos:end="205:35"><name pos:start="205:9" pos:end="205:20">qemu_opt_get</name><argument_list pos:start="205:21" pos:end="205:35">(<argument pos:start="205:22" pos:end="205:25"><expr pos:start="205:22" pos:end="205:25"><name pos:start="205:22" pos:end="205:25">opts</name></expr></argument>, <argument pos:start="205:28" pos:end="205:34"><expr pos:start="205:28" pos:end="205:34"><literal type="string" pos:start="205:28" pos:end="205:34">"debug"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="205:38" pos:end="228:0">{<block_content pos:start="207:9" pos:end="223:54">

        <expr_stmt pos:start="207:9" pos:end="207:62"><expr pos:start="207:9" pos:end="207:61"><name pos:start="207:9" pos:end="207:21"><name pos:start="207:9" pos:end="207:14">client</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:21">debug</name></name> <operator pos:start="207:23" pos:end="207:23">=</operator> <call pos:start="207:25" pos:end="207:61"><name pos:start="207:25" pos:end="207:43">qemu_opt_get_number</name><argument_list pos:start="207:44" pos:end="207:61">(<argument pos:start="207:45" pos:end="207:48"><expr pos:start="207:45" pos:end="207:48"><name pos:start="207:45" pos:end="207:48">opts</name></expr></argument>, <argument pos:start="207:51" pos:end="207:57"><expr pos:start="207:51" pos:end="207:57"><literal type="string" pos:start="207:51" pos:end="207:57">"debug"</literal></expr></argument>, <argument pos:start="207:60" pos:end="207:60"><expr pos:start="207:60" pos:end="207:60"><literal type="number" pos:start="207:60" pos:end="207:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="209:9" pos:end="211:31">/* limit the maximum debug level to avoid potential flooding

         * of our log files. */</comment>

        <if_stmt pos:start="213:9" pos:end="221:9"><if pos:start="213:9" pos:end="221:9">if <condition pos:start="213:12" pos:end="213:53">(<expr pos:start="213:13" pos:end="213:52"><name pos:start="213:13" pos:end="213:25"><name pos:start="213:13" pos:end="213:18">client</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:25">debug</name></name> <operator pos:start="213:27" pos:end="213:27">&gt;</operator> <name pos:start="213:29" pos:end="213:52">QEMU_NFS_MAX_DEBUG_LEVEL</name></expr>)</condition> <block pos:start="213:55" pos:end="221:9">{<block_content pos:start="215:13" pos:end="219:53">

            <expr_stmt pos:start="215:13" pos:end="217:50"><expr pos:start="215:13" pos:end="217:49"><call pos:start="215:13" pos:end="217:49"><name pos:start="215:13" pos:end="215:23">warn_report</name><argument_list pos:start="215:24" pos:end="217:49">(<argument pos:start="215:25" pos:end="215:56"><expr pos:start="215:25" pos:end="215:56"><literal type="string" pos:start="215:25" pos:end="215:56">"Limiting NFS debug level to %d"</literal></expr></argument>,

                        <argument pos:start="217:25" pos:end="217:48"><expr pos:start="217:25" pos:end="217:48"><name pos:start="217:25" pos:end="217:48">QEMU_NFS_MAX_DEBUG_LEVEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:53"><expr pos:start="219:13" pos:end="219:52"><name pos:start="219:13" pos:end="219:25"><name pos:start="219:13" pos:end="219:18">client</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:25">debug</name></name> <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:52">QEMU_NFS_MAX_DEBUG_LEVEL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:54"><expr pos:start="223:9" pos:end="223:53"><call pos:start="223:9" pos:end="223:53"><name pos:start="223:9" pos:end="223:21">nfs_set_debug</name><argument_list pos:start="223:22" pos:end="223:53">(<argument pos:start="223:23" pos:end="223:37"><expr pos:start="223:23" pos:end="223:37"><name pos:start="223:23" pos:end="223:37"><name pos:start="223:23" pos:end="223:28">client</name><operator pos:start="223:29" pos:end="223:30">-&gt;</operator><name pos:start="223:31" pos:end="223:37">context</name></name></expr></argument>, <argument pos:start="223:40" pos:end="223:52"><expr pos:start="223:40" pos:end="223:52"><name pos:start="223:40" pos:end="223:52"><name pos:start="223:40" pos:end="223:45">client</name><operator pos:start="223:46" pos:end="223:47">-&gt;</operator><name pos:start="223:48" pos:end="223:52">debug</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="227:1" pos:end="227:6">#<cpp:directive pos:start="227:2" pos:end="227:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="231:5" pos:end="231:73"><expr pos:start="231:5" pos:end="231:72"><name pos:start="231:5" pos:end="231:7">ret</name> <operator pos:start="231:9" pos:end="231:9">=</operator> <call pos:start="231:11" pos:end="231:72"><name pos:start="231:11" pos:end="231:19">nfs_mount</name><argument_list pos:start="231:20" pos:end="231:72">(<argument pos:start="231:21" pos:end="231:35"><expr pos:start="231:21" pos:end="231:35"><name pos:start="231:21" pos:end="231:35"><name pos:start="231:21" pos:end="231:26">client</name><operator pos:start="231:27" pos:end="231:28">-&gt;</operator><name pos:start="231:29" pos:end="231:35">context</name></name></expr></argument>, <argument pos:start="231:38" pos:end="231:57"><expr pos:start="231:38" pos:end="231:57"><name pos:start="231:38" pos:end="231:57"><name pos:start="231:38" pos:end="231:43">client</name><operator pos:start="231:44" pos:end="231:45">-&gt;</operator><name pos:start="231:46" pos:end="231:51">server</name><operator pos:start="231:52" pos:end="231:53">-&gt;</operator><name pos:start="231:54" pos:end="231:57">host</name></name></expr></argument>, <argument pos:start="231:60" pos:end="231:71"><expr pos:start="231:60" pos:end="231:71"><name pos:start="231:60" pos:end="231:71"><name pos:start="231:60" pos:end="231:65">client</name><operator pos:start="231:66" pos:end="231:67">-&gt;</operator><name pos:start="231:68" pos:end="231:71">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="233:5" pos:end="241:5"><if pos:start="233:5" pos:end="241:5">if <condition pos:start="233:8" pos:end="233:16">(<expr pos:start="233:9" pos:end="233:15"><name pos:start="233:9" pos:end="233:11">ret</name> <operator pos:start="233:13" pos:end="233:13">&lt;</operator> <literal type="number" pos:start="233:15" pos:end="233:15">0</literal></expr>)</condition> <block pos:start="233:18" pos:end="241:5">{<block_content pos:start="235:9" pos:end="239:18">

        <expr_stmt pos:start="235:9" pos:end="237:51"><expr pos:start="235:9" pos:end="237:50"><call pos:start="235:9" pos:end="237:50"><name pos:start="235:9" pos:end="235:18">error_setg</name><argument_list pos:start="235:19" pos:end="237:50">(<argument pos:start="235:20" pos:end="235:23"><expr pos:start="235:20" pos:end="235:23"><name pos:start="235:20" pos:end="235:23">errp</name></expr></argument>, <argument pos:start="235:26" pos:end="235:56"><expr pos:start="235:26" pos:end="235:56"><literal type="string" pos:start="235:26" pos:end="235:56">"Failed to mount nfs share: %s"</literal></expr></argument>,

                   <argument pos:start="237:20" pos:end="237:49"><expr pos:start="237:20" pos:end="237:49"><call pos:start="237:20" pos:end="237:49"><name pos:start="237:20" pos:end="237:32">nfs_get_error</name><argument_list pos:start="237:33" pos:end="237:49">(<argument pos:start="237:34" pos:end="237:48"><expr pos:start="237:34" pos:end="237:48"><name pos:start="237:34" pos:end="237:48"><name pos:start="237:34" pos:end="237:39">client</name><operator pos:start="237:40" pos:end="237:41">-&gt;</operator><name pos:start="237:42" pos:end="237:48">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="239:9" pos:end="239:18">goto <name pos:start="239:14" pos:end="239:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="245:5" pos:end="273:5"><if pos:start="245:5" pos:end="259:5">if <condition pos:start="245:8" pos:end="245:24">(<expr pos:start="245:9" pos:end="245:23"><name pos:start="245:9" pos:end="245:13">flags</name> <operator pos:start="245:15" pos:end="245:15">&amp;</operator> <name pos:start="245:17" pos:end="245:23">O_CREAT</name></expr>)</condition> <block pos:start="245:26" pos:end="259:5">{<block_content pos:start="247:9" pos:end="257:9">

        <expr_stmt pos:start="247:9" pos:end="247:66"><expr pos:start="247:9" pos:end="247:65"><name pos:start="247:9" pos:end="247:11">ret</name> <operator pos:start="247:13" pos:end="247:13">=</operator> <call pos:start="247:15" pos:end="247:65"><name pos:start="247:15" pos:end="247:23">nfs_creat</name><argument_list pos:start="247:24" pos:end="247:65">(<argument pos:start="247:25" pos:end="247:39"><expr pos:start="247:25" pos:end="247:39"><name pos:start="247:25" pos:end="247:39"><name pos:start="247:25" pos:end="247:30">client</name><operator pos:start="247:31" pos:end="247:32">-&gt;</operator><name pos:start="247:33" pos:end="247:39">context</name></name></expr></argument>, <argument pos:start="247:42" pos:end="247:45"><expr pos:start="247:42" pos:end="247:45"><name pos:start="247:42" pos:end="247:45">file</name></expr></argument>, <argument pos:start="247:48" pos:end="247:51"><expr pos:start="247:48" pos:end="247:51"><literal type="number" pos:start="247:48" pos:end="247:51">0600</literal></expr></argument>, <argument pos:start="247:54" pos:end="247:64"><expr pos:start="247:54" pos:end="247:64"><operator pos:start="247:54" pos:end="247:54">&amp;</operator><name pos:start="247:55" pos:end="247:64"><name pos:start="247:55" pos:end="247:60">client</name><operator pos:start="247:61" pos:end="247:62">-&gt;</operator><name pos:start="247:63" pos:end="247:64">fh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="257:9"><if pos:start="249:9" pos:end="257:9">if <condition pos:start="249:12" pos:end="249:20">(<expr pos:start="249:13" pos:end="249:19"><name pos:start="249:13" pos:end="249:15">ret</name> <operator pos:start="249:17" pos:end="249:17">&lt;</operator> <literal type="number" pos:start="249:19" pos:end="249:19">0</literal></expr>)</condition> <block pos:start="249:22" pos:end="257:9">{<block_content pos:start="251:13" pos:end="255:22">

            <expr_stmt pos:start="251:13" pos:end="253:55"><expr pos:start="251:13" pos:end="253:54"><call pos:start="251:13" pos:end="253:54"><name pos:start="251:13" pos:end="251:22">error_setg</name><argument_list pos:start="251:23" pos:end="253:54">(<argument pos:start="251:24" pos:end="251:27"><expr pos:start="251:24" pos:end="251:27"><name pos:start="251:24" pos:end="251:27">errp</name></expr></argument>, <argument pos:start="251:30" pos:end="251:56"><expr pos:start="251:30" pos:end="251:56"><literal type="string" pos:start="251:30" pos:end="251:56">"Failed to create file: %s"</literal></expr></argument>,

                       <argument pos:start="253:24" pos:end="253:53"><expr pos:start="253:24" pos:end="253:53"><call pos:start="253:24" pos:end="253:53"><name pos:start="253:24" pos:end="253:36">nfs_get_error</name><argument_list pos:start="253:37" pos:end="253:53">(<argument pos:start="253:38" pos:end="253:52"><expr pos:start="253:38" pos:end="253:52"><name pos:start="253:38" pos:end="253:52"><name pos:start="253:38" pos:end="253:43">client</name><operator pos:start="253:44" pos:end="253:45">-&gt;</operator><name pos:start="253:46" pos:end="253:52">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="255:13" pos:end="255:22">goto <name pos:start="255:18" pos:end="255:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="259:7" pos:end="273:5">else <block pos:start="259:12" pos:end="273:5">{<block_content pos:start="261:9" pos:end="271:9">

        <expr_stmt pos:start="261:9" pos:end="261:66"><expr pos:start="261:9" pos:end="261:65"><name pos:start="261:9" pos:end="261:11">ret</name> <operator pos:start="261:13" pos:end="261:13">=</operator> <call pos:start="261:15" pos:end="261:65"><name pos:start="261:15" pos:end="261:22">nfs_open</name><argument_list pos:start="261:23" pos:end="261:65">(<argument pos:start="261:24" pos:end="261:38"><expr pos:start="261:24" pos:end="261:38"><name pos:start="261:24" pos:end="261:38"><name pos:start="261:24" pos:end="261:29">client</name><operator pos:start="261:30" pos:end="261:31">-&gt;</operator><name pos:start="261:32" pos:end="261:38">context</name></name></expr></argument>, <argument pos:start="261:41" pos:end="261:44"><expr pos:start="261:41" pos:end="261:44"><name pos:start="261:41" pos:end="261:44">file</name></expr></argument>, <argument pos:start="261:47" pos:end="261:51"><expr pos:start="261:47" pos:end="261:51"><name pos:start="261:47" pos:end="261:51">flags</name></expr></argument>, <argument pos:start="261:54" pos:end="261:64"><expr pos:start="261:54" pos:end="261:64"><operator pos:start="261:54" pos:end="261:54">&amp;</operator><name pos:start="261:55" pos:end="261:64"><name pos:start="261:55" pos:end="261:60">client</name><operator pos:start="261:61" pos:end="261:62">-&gt;</operator><name pos:start="261:63" pos:end="261:64">fh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="263:9" pos:end="271:9"><if pos:start="263:9" pos:end="271:9">if <condition pos:start="263:12" pos:end="263:20">(<expr pos:start="263:13" pos:end="263:19"><name pos:start="263:13" pos:end="263:15">ret</name> <operator pos:start="263:17" pos:end="263:17">&lt;</operator> <literal type="number" pos:start="263:19" pos:end="263:19">0</literal></expr>)</condition> <block pos:start="263:22" pos:end="271:9">{<block_content pos:start="265:13" pos:end="269:22">

            <expr_stmt pos:start="265:13" pos:end="267:55"><expr pos:start="265:13" pos:end="267:54"><call pos:start="265:13" pos:end="267:54"><name pos:start="265:13" pos:end="265:22">error_setg</name><argument_list pos:start="265:23" pos:end="267:54">(<argument pos:start="265:24" pos:end="265:27"><expr pos:start="265:24" pos:end="265:27"><name pos:start="265:24" pos:end="265:27">errp</name></expr></argument>, <argument pos:start="265:30" pos:end="265:55"><expr pos:start="265:30" pos:end="265:55"><literal type="string" pos:start="265:30" pos:end="265:55">"Failed to open file : %s"</literal></expr></argument>,

                       <argument pos:start="267:24" pos:end="267:53"><expr pos:start="267:24" pos:end="267:53"><call pos:start="267:24" pos:end="267:53"><name pos:start="267:24" pos:end="267:36">nfs_get_error</name><argument_list pos:start="267:37" pos:end="267:53">(<argument pos:start="267:38" pos:end="267:52"><expr pos:start="267:38" pos:end="267:52"><name pos:start="267:38" pos:end="267:52"><name pos:start="267:38" pos:end="267:43">client</name><operator pos:start="267:44" pos:end="267:45">-&gt;</operator><name pos:start="267:46" pos:end="267:52">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="269:13" pos:end="269:22">goto <name pos:start="269:18" pos:end="269:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:54"><expr pos:start="277:5" pos:end="277:53"><name pos:start="277:5" pos:end="277:7">ret</name> <operator pos:start="277:9" pos:end="277:9">=</operator> <call pos:start="277:11" pos:end="277:53"><name pos:start="277:11" pos:end="277:19">nfs_fstat</name><argument_list pos:start="277:20" pos:end="277:53">(<argument pos:start="277:21" pos:end="277:35"><expr pos:start="277:21" pos:end="277:35"><name pos:start="277:21" pos:end="277:35"><name pos:start="277:21" pos:end="277:26">client</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:35">context</name></name></expr></argument>, <argument pos:start="277:38" pos:end="277:47"><expr pos:start="277:38" pos:end="277:47"><name pos:start="277:38" pos:end="277:47"><name pos:start="277:38" pos:end="277:43">client</name><operator pos:start="277:44" pos:end="277:45">-&gt;</operator><name pos:start="277:46" pos:end="277:47">fh</name></name></expr></argument>, <argument pos:start="277:50" pos:end="277:52"><expr pos:start="277:50" pos:end="277:52"><operator pos:start="277:50" pos:end="277:50">&amp;</operator><name pos:start="277:51" pos:end="277:52">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="279:5" pos:end="287:5"><if pos:start="279:5" pos:end="287:5">if <condition pos:start="279:8" pos:end="279:16">(<expr pos:start="279:9" pos:end="279:15"><name pos:start="279:9" pos:end="279:11">ret</name> <operator pos:start="279:13" pos:end="279:13">&lt;</operator> <literal type="number" pos:start="279:15" pos:end="279:15">0</literal></expr>)</condition> <block pos:start="279:18" pos:end="287:5">{<block_content pos:start="281:9" pos:end="285:18">

        <expr_stmt pos:start="281:9" pos:end="283:51"><expr pos:start="281:9" pos:end="283:50"><call pos:start="281:9" pos:end="283:50"><name pos:start="281:9" pos:end="281:18">error_setg</name><argument_list pos:start="281:19" pos:end="283:50">(<argument pos:start="281:20" pos:end="281:23"><expr pos:start="281:20" pos:end="281:23"><name pos:start="281:20" pos:end="281:23">errp</name></expr></argument>, <argument pos:start="281:26" pos:end="281:51"><expr pos:start="281:26" pos:end="281:51"><literal type="string" pos:start="281:26" pos:end="281:51">"Failed to fstat file: %s"</literal></expr></argument>,

                   <argument pos:start="283:20" pos:end="283:49"><expr pos:start="283:20" pos:end="283:49"><call pos:start="283:20" pos:end="283:49"><name pos:start="283:20" pos:end="283:32">nfs_get_error</name><argument_list pos:start="283:33" pos:end="283:49">(<argument pos:start="283:34" pos:end="283:48"><expr pos:start="283:34" pos:end="283:48"><name pos:start="283:34" pos:end="283:48"><name pos:start="283:34" pos:end="283:39">client</name><operator pos:start="283:40" pos:end="283:41">-&gt;</operator><name pos:start="283:42" pos:end="283:48">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="285:9" pos:end="285:18">goto <name pos:start="285:14" pos:end="285:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:53"><expr pos:start="291:5" pos:end="291:52"><name pos:start="291:5" pos:end="291:7">ret</name> <operator pos:start="291:9" pos:end="291:9">=</operator> <call pos:start="291:11" pos:end="291:52"><name pos:start="291:11" pos:end="291:22">DIV_ROUND_UP</name><argument_list pos:start="291:23" pos:end="291:52">(<argument pos:start="291:24" pos:end="291:33"><expr pos:start="291:24" pos:end="291:33"><name pos:start="291:24" pos:end="291:33"><name pos:start="291:24" pos:end="291:25">st</name><operator pos:start="291:26" pos:end="291:26">.</operator><name pos:start="291:27" pos:end="291:33">st_size</name></name></expr></argument>, <argument pos:start="291:36" pos:end="291:51"><expr pos:start="291:36" pos:end="291:51"><name pos:start="291:36" pos:end="291:51">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:37"><expr pos:start="293:5" pos:end="293:36"><name pos:start="293:5" pos:end="293:21"><name pos:start="293:5" pos:end="293:10">client</name><operator pos:start="293:11" pos:end="293:12">-&gt;</operator><name pos:start="293:13" pos:end="293:21">st_blocks</name></name> <operator pos:start="293:23" pos:end="293:23">=</operator> <name pos:start="293:25" pos:end="293:36"><name pos:start="293:25" pos:end="293:26">st</name><operator pos:start="293:27" pos:end="293:27">.</operator><name pos:start="293:28" pos:end="293:36">st_blocks</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:48"><expr pos:start="295:5" pos:end="295:47"><name pos:start="295:5" pos:end="295:25"><name pos:start="295:5" pos:end="295:10">client</name><operator pos:start="295:11" pos:end="295:12">-&gt;</operator><name pos:start="295:13" pos:end="295:25">has_zero_init</name></name> <operator pos:start="295:27" pos:end="295:27">=</operator> <call pos:start="295:29" pos:end="295:47"><name pos:start="295:29" pos:end="295:35">S_ISREG</name><argument_list pos:start="295:36" pos:end="295:47">(<argument pos:start="295:37" pos:end="295:46"><expr pos:start="295:37" pos:end="295:46"><name pos:start="295:37" pos:end="295:46"><name pos:start="295:37" pos:end="295:38">st</name><operator pos:start="295:39" pos:end="295:39">.</operator><name pos:start="295:40" pos:end="295:46">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:16"><expr pos:start="297:5" pos:end="297:15"><operator pos:start="297:5" pos:end="297:5">*</operator><name pos:start="297:6" pos:end="297:9">strp</name> <operator pos:start="297:11" pos:end="297:11">=</operator> <literal type="char" pos:start="297:13" pos:end="297:15">'/'</literal></expr>;</expr_stmt>

    <goto pos:start="299:5" pos:end="299:13">goto <name pos:start="299:10" pos:end="299:12">out</name>;</goto>



<label pos:start="303:1" pos:end="303:5"><name pos:start="303:1" pos:end="303:4">fail</name>:</label>

    <expr_stmt pos:start="305:5" pos:end="305:29"><expr pos:start="305:5" pos:end="305:28"><call pos:start="305:5" pos:end="305:28"><name pos:start="305:5" pos:end="305:20">nfs_client_close</name><argument_list pos:start="305:21" pos:end="305:28">(<argument pos:start="305:22" pos:end="305:27"><expr pos:start="305:22" pos:end="305:27"><name pos:start="305:22" pos:end="305:27">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="307:1" pos:end="307:4"><name pos:start="307:1" pos:end="307:3">out</name>:</label>

    <expr_stmt pos:start="309:5" pos:end="309:24"><expr pos:start="309:5" pos:end="309:23"><call pos:start="309:5" pos:end="309:23"><name pos:start="309:5" pos:end="309:17">qemu_opts_del</name><argument_list pos:start="309:18" pos:end="309:23">(<argument pos:start="309:19" pos:end="309:22"><expr pos:start="309:19" pos:end="309:22"><name pos:start="309:19" pos:end="309:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:17"><expr pos:start="311:5" pos:end="311:16"><call pos:start="311:5" pos:end="311:16"><name pos:start="311:5" pos:end="311:10">g_free</name><argument_list pos:start="311:11" pos:end="311:16">(<argument pos:start="311:12" pos:end="311:15"><expr pos:start="311:12" pos:end="311:15"><name pos:start="311:12" pos:end="311:15">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="313:5" pos:end="313:15">return <expr pos:start="313:12" pos:end="313:14"><name pos:start="313:12" pos:end="313:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
