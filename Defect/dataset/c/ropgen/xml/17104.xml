<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17104.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:54"><name pos:start="1:1" pos:end="1:40">qcrypto_tls_creds_check_cert_key_purpose</name><argument_list pos:start="1:41" pos:end="9:54">(<argument pos:start="1:42" pos:end="1:67">QCryptoTLSCredsX509 *creds</argument>,

                                         <argument pos:start="3:42" pos:end="3:63">gnutls_x509_crt_t cert</argument>,

                                         <argument pos:start="5:42" pos:end="5:61">const char *certFile</argument>,

                                         <argument pos:start="7:42" pos:end="7:54">bool isServer</argument>,

                                         <argument pos:start="9:42" pos:end="9:53">Error **errp</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="178:1">{<block_content pos:start="13:5" pos:end="176:13">

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:32">purposeCritical</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:25">critical</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:16">buffer</name> <init pos:start="21:18" pos:end="21:23">= <expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">size_t</name></type> <name pos:start="23:12" pos:end="23:15">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:50"><decl pos:start="25:5" pos:end="25:28"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:20">allowClient</name> <init pos:start="25:22" pos:end="25:28">= <expr pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:28">false</name></expr></init></decl>, <decl pos:start="25:31" pos:end="25:49"><type ref="prev" pos:start="25:5" pos:end="25:8"/><name pos:start="25:31" pos:end="25:41">allowServer</name> <init pos:start="25:43" pos:end="25:49">= <expr pos:start="25:45" pos:end="25:49"><name pos:start="25:45" pos:end="25:49">false</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:12">critical</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="132:5">for <control pos:start="31:9" pos:end="31:22">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:17">;</condition> <incr pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><name pos:start="31:19" pos:end="31:19">i</name><operator pos:start="31:20" pos:end="31:21">++</operator></expr></incr>)</control> <block pos:start="31:24" pos:end="132:5">{<block_content pos:start="33:9" pos:end="129:23">

        <expr_stmt pos:start="33:9" pos:end="33:17"><expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:12">size</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:66"><expr pos:start="35:9" pos:end="37:65"><name pos:start="35:9" pos:end="35:14">status</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="37:65"><name pos:start="35:18" pos:end="35:52">gnutls_x509_crt_get_key_purpose_oid</name><argument_list pos:start="35:53" pos:end="37:65">(<argument pos:start="35:54" pos:end="35:57"><expr pos:start="35:54" pos:end="35:57"><name pos:start="35:54" pos:end="35:57">cert</name></expr></argument>, <argument pos:start="35:60" pos:end="35:60"><expr pos:start="35:60" pos:end="35:60"><name pos:start="35:60" pos:end="35:60">i</name></expr></argument>, <argument pos:start="35:63" pos:end="35:68"><expr pos:start="35:63" pos:end="35:68"><name pos:start="35:63" pos:end="35:68">buffer</name></expr></argument>,

                                                     <argument pos:start="37:54" pos:end="37:58"><expr pos:start="37:54" pos:end="37:58"><operator pos:start="37:54" pos:end="37:54">&amp;</operator><name pos:start="37:55" pos:end="37:58">size</name></expr></argument>, <argument pos:start="37:61" pos:end="37:64"><expr pos:start="37:61" pos:end="37:64"><name pos:start="37:61" pos:end="37:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="57:9"><if pos:start="41:9" pos:end="57:9">if <condition pos:start="41:12" pos:end="41:60">(<expr pos:start="41:13" pos:end="41:59"><name pos:start="41:13" pos:end="41:18">status</name> <operator pos:start="41:20" pos:end="41:21">==</operator> <name pos:start="41:23" pos:end="41:59">GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE</name></expr>)</condition> <block pos:start="41:62" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:18">



            <comment type="block" pos:start="45:13" pos:end="47:39">/* If there is no data at all, then we must allow

               client/server to pass */</comment>

            <if_stmt pos:start="49:13" pos:end="53:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:23">(<expr pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:20">==</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>)</condition> <block pos:start="49:25" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:49">

                <expr_stmt pos:start="51:17" pos:end="51:49"><expr pos:start="51:17" pos:end="51:48"><name pos:start="51:17" pos:end="51:27">allowServer</name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:41">allowClient</name> <operator pos:start="51:43" pos:end="51:43">=</operator> <name pos:start="51:45" pos:end="51:48">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="69:9"><if pos:start="59:9" pos:end="69:9">if <condition pos:start="59:12" pos:end="59:51">(<expr pos:start="59:13" pos:end="59:50"><name pos:start="59:13" pos:end="59:18">status</name> <operator pos:start="59:20" pos:end="59:21">!=</operator> <name pos:start="59:23" pos:end="59:50">GNUTLS_E_SHORT_MEMORY_BUFFER</name></expr>)</condition> <block pos:start="59:53" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:22">

            <expr_stmt pos:start="61:13" pos:end="65:58"><expr pos:start="61:13" pos:end="65:57"><call pos:start="61:13" pos:end="65:57"><name pos:start="61:13" pos:end="61:22">error_setg</name><argument_list pos:start="61:23" pos:end="65:57">(<argument pos:start="61:24" pos:end="61:27"><expr pos:start="61:24" pos:end="61:27"><name pos:start="61:24" pos:end="61:27">errp</name></expr></argument>,

                       <argument pos:start="63:24" pos:end="63:71"><expr pos:start="63:24" pos:end="63:71"><literal type="string" pos:start="63:24" pos:end="63:71">"Unable to query certificate %s key purpose: %s"</literal></expr></argument>,

                       <argument pos:start="65:24" pos:end="65:31"><expr pos:start="65:24" pos:end="65:31"><name pos:start="65:24" pos:end="65:31">certFile</name></expr></argument>, <argument pos:start="65:34" pos:end="65:56"><expr pos:start="65:34" pos:end="65:56"><call pos:start="65:34" pos:end="65:56"><name pos:start="65:34" pos:end="65:48">gnutls_strerror</name><argument_list pos:start="65:49" pos:end="65:56">(<argument pos:start="65:50" pos:end="65:55"><expr pos:start="65:50" pos:end="65:55"><name pos:start="65:50" pos:end="65:55">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:14">buffer</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <call pos:start="73:18" pos:end="73:35"><name pos:start="73:18" pos:end="73:23">g_new0</name><argument_list pos:start="73:24" pos:end="73:35">(<argument pos:start="73:25" pos:end="73:28"><expr pos:start="73:25" pos:end="73:28"><name pos:start="73:25" pos:end="73:28">char</name></expr></argument>, <argument pos:start="73:31" pos:end="73:34"><expr pos:start="73:31" pos:end="73:34"><name pos:start="73:31" pos:end="73:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="79:78"><expr pos:start="77:9" pos:end="79:77"><name pos:start="77:9" pos:end="77:14">status</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <call pos:start="77:18" pos:end="79:77"><name pos:start="77:18" pos:end="77:52">gnutls_x509_crt_get_key_purpose_oid</name><argument_list pos:start="77:53" pos:end="79:77">(<argument pos:start="77:54" pos:end="77:57"><expr pos:start="77:54" pos:end="77:57"><name pos:start="77:54" pos:end="77:57">cert</name></expr></argument>, <argument pos:start="77:60" pos:end="77:60"><expr pos:start="77:60" pos:end="77:60"><name pos:start="77:60" pos:end="77:60">i</name></expr></argument>, <argument pos:start="77:63" pos:end="77:68"><expr pos:start="77:63" pos:end="77:68"><name pos:start="77:63" pos:end="77:68">buffer</name></expr></argument>,

                                                     <argument pos:start="79:54" pos:end="79:58"><expr pos:start="79:54" pos:end="79:58"><operator pos:start="79:54" pos:end="79:54">&amp;</operator><name pos:start="79:55" pos:end="79:58">size</name></expr></argument>, <argument pos:start="79:61" pos:end="79:76"><expr pos:start="79:61" pos:end="79:76"><operator pos:start="79:61" pos:end="79:61">&amp;</operator><name pos:start="79:62" pos:end="79:76">purposeCritical</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="99:9"><if pos:start="83:9" pos:end="99:9">if <condition pos:start="83:12" pos:end="83:23">(<expr pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:18">status</name> <operator pos:start="83:20" pos:end="83:20">&lt;</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>)</condition> <block pos:start="83:25" pos:end="99:9">{<block_content pos:start="85:13" pos:end="97:22">

            <expr_stmt pos:start="85:13" pos:end="87:68"><expr pos:start="85:13" pos:end="87:67"><call pos:start="85:13" pos:end="87:67"><name pos:start="85:13" pos:end="85:58">trace_qcrypto_tls_creds_x509_check_key_purpose</name><argument_list pos:start="85:59" pos:end="87:67">(

                <argument pos:start="87:17" pos:end="87:21"><expr pos:start="87:17" pos:end="87:21"><name pos:start="87:17" pos:end="87:21">creds</name></expr></argument>, <argument pos:start="87:24" pos:end="87:31"><expr pos:start="87:24" pos:end="87:31"><name pos:start="87:24" pos:end="87:31">certFile</name></expr></argument>, <argument pos:start="87:34" pos:end="87:39"><expr pos:start="87:34" pos:end="87:39"><name pos:start="87:34" pos:end="87:39">status</name></expr></argument>, <argument pos:start="87:42" pos:end="87:49"><expr pos:start="87:42" pos:end="87:49"><literal type="string" pos:start="87:42" pos:end="87:49">"&lt;none&gt;"</literal></expr></argument>, <argument pos:start="87:52" pos:end="87:66"><expr pos:start="87:52" pos:end="87:66"><name pos:start="87:52" pos:end="87:66">purposeCritical</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:27"><expr pos:start="89:13" pos:end="89:26"><call pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:18">g_free</name><argument_list pos:start="89:19" pos:end="89:26">(<argument pos:start="89:20" pos:end="89:25"><expr pos:start="89:20" pos:end="89:25"><name pos:start="89:20" pos:end="89:25">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="95:58"><expr pos:start="91:13" pos:end="95:57"><call pos:start="91:13" pos:end="95:57"><name pos:start="91:13" pos:end="91:22">error_setg</name><argument_list pos:start="91:23" pos:end="95:57">(<argument pos:start="91:24" pos:end="91:27"><expr pos:start="91:24" pos:end="91:27"><name pos:start="91:24" pos:end="91:27">errp</name></expr></argument>,

                       <argument pos:start="93:24" pos:end="93:71"><expr pos:start="93:24" pos:end="93:71"><literal type="string" pos:start="93:24" pos:end="93:71">"Unable to query certificate %s key purpose: %s"</literal></expr></argument>,

                       <argument pos:start="95:24" pos:end="95:31"><expr pos:start="95:24" pos:end="95:31"><name pos:start="95:24" pos:end="95:31">certFile</name></expr></argument>, <argument pos:start="95:34" pos:end="95:56"><expr pos:start="95:34" pos:end="95:56"><call pos:start="95:34" pos:end="95:56"><name pos:start="95:34" pos:end="95:48">gnutls_strerror</name><argument_list pos:start="95:49" pos:end="95:56">(<argument pos:start="95:50" pos:end="95:55"><expr pos:start="95:50" pos:end="95:55"><name pos:start="95:50" pos:end="95:55">status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:22">return <expr pos:start="97:20" pos:end="97:21"><operator pos:start="97:20" pos:end="97:20">-</operator><literal type="number" pos:start="97:21" pos:end="97:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="103:62"><expr pos:start="101:9" pos:end="103:61"><call pos:start="101:9" pos:end="103:61"><name pos:start="101:9" pos:end="101:54">trace_qcrypto_tls_creds_x509_check_key_purpose</name><argument_list pos:start="101:55" pos:end="103:61">(

            <argument pos:start="103:13" pos:end="103:17"><expr pos:start="103:13" pos:end="103:17"><name pos:start="103:13" pos:end="103:17">creds</name></expr></argument>, <argument pos:start="103:20" pos:end="103:27"><expr pos:start="103:20" pos:end="103:27"><name pos:start="103:20" pos:end="103:27">certFile</name></expr></argument>, <argument pos:start="103:30" pos:end="103:35"><expr pos:start="103:30" pos:end="103:35"><name pos:start="103:30" pos:end="103:35">status</name></expr></argument>, <argument pos:start="103:38" pos:end="103:43"><expr pos:start="103:38" pos:end="103:43"><name pos:start="103:38" pos:end="103:43">buffer</name></expr></argument>, <argument pos:start="103:46" pos:end="103:60"><expr pos:start="103:46" pos:end="103:60"><name pos:start="103:46" pos:end="103:60">purposeCritical</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:28">(<expr pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:27">purposeCritical</name></expr>)</condition> <block pos:start="105:30" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:28">

            <expr_stmt pos:start="107:13" pos:end="107:28"><expr pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:20">critical</name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:27">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="113:9" pos:end="125:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:58">(<expr pos:start="113:13" pos:end="113:57"><call pos:start="113:13" pos:end="113:57"><name pos:start="113:13" pos:end="113:23">g_str_equal</name><argument_list pos:start="113:24" pos:end="113:57">(<argument pos:start="113:25" pos:end="113:30"><expr pos:start="113:25" pos:end="113:30"><name pos:start="113:25" pos:end="113:30">buffer</name></expr></argument>, <argument pos:start="113:33" pos:end="113:56"><expr pos:start="113:33" pos:end="113:56"><name pos:start="113:33" pos:end="113:56">GNUTLS_KP_TLS_WWW_SERVER</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:60" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:31">

            <expr_stmt pos:start="115:13" pos:end="115:31"><expr pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:23">allowServer</name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:30">true</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="121:9">else if <condition pos:start="117:19" pos:end="117:65">(<expr pos:start="117:20" pos:end="117:64"><call pos:start="117:20" pos:end="117:64"><name pos:start="117:20" pos:end="117:30">g_str_equal</name><argument_list pos:start="117:31" pos:end="117:64">(<argument pos:start="117:32" pos:end="117:37"><expr pos:start="117:32" pos:end="117:37"><name pos:start="117:32" pos:end="117:37">buffer</name></expr></argument>, <argument pos:start="117:40" pos:end="117:63"><expr pos:start="117:40" pos:end="117:63"><name pos:start="117:40" pos:end="117:63">GNUTLS_KP_TLS_WWW_CLIENT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:67" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:31">

            <expr_stmt pos:start="119:13" pos:end="119:31"><expr pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:23">allowClient</name> <operator pos:start="119:25" pos:end="119:25">=</operator> <name pos:start="119:27" pos:end="119:30">true</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="121:11" pos:end="125:9">else if <condition pos:start="121:19" pos:end="121:54">(<expr pos:start="121:20" pos:end="121:53"><call pos:start="121:20" pos:end="121:53"><name pos:start="121:20" pos:end="121:30">g_str_equal</name><argument_list pos:start="121:31" pos:end="121:53">(<argument pos:start="121:32" pos:end="121:37"><expr pos:start="121:32" pos:end="121:37"><name pos:start="121:32" pos:end="121:37">buffer</name></expr></argument>, <argument pos:start="121:40" pos:end="121:52"><expr pos:start="121:40" pos:end="121:52"><name pos:start="121:40" pos:end="121:52">GNUTLS_KP_ANY</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:56" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:45">

            <expr_stmt pos:start="123:13" pos:end="123:45"><expr pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:23">allowServer</name> <operator pos:start="123:25" pos:end="123:25">=</operator> <name pos:start="123:27" pos:end="123:37">allowClient</name> <operator pos:start="123:39" pos:end="123:39">=</operator> <name pos:start="123:41" pos:end="123:44">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:23"><expr pos:start="129:9" pos:end="129:22"><call pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:14">g_free</name><argument_list pos:start="129:15" pos:end="129:22">(<argument pos:start="129:16" pos:end="129:21"><expr pos:start="129:16" pos:end="129:21"><name pos:start="129:16" pos:end="129:21">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></for>



    <if_stmt pos:start="136:5" pos:end="172:5"><if pos:start="136:5" pos:end="154:5">if <condition pos:start="136:8" pos:end="136:17">(<expr pos:start="136:9" pos:end="136:16"><name pos:start="136:9" pos:end="136:16">isServer</name></expr>)</condition> <block pos:start="136:19" pos:end="154:5">{<block_content pos:start="138:9" pos:end="152:9">

        <if_stmt pos:start="138:9" pos:end="152:9"><if pos:start="138:9" pos:end="152:9">if <condition pos:start="138:12" pos:end="138:25">(<expr pos:start="138:13" pos:end="138:24"><operator pos:start="138:13" pos:end="138:13">!</operator><name pos:start="138:14" pos:end="138:24">allowServer</name></expr>)</condition> <block pos:start="138:27" pos:end="152:9">{<block_content pos:start="140:13" pos:end="150:13">

            <if_stmt pos:start="140:13" pos:end="150:13"><if pos:start="140:13" pos:end="150:13">if <condition pos:start="140:16" pos:end="140:25">(<expr pos:start="140:17" pos:end="140:24"><name pos:start="140:17" pos:end="140:24">critical</name></expr>)</condition> <block pos:start="140:27" pos:end="150:13">{<block_content pos:start="142:17" pos:end="148:26">

                <expr_stmt pos:start="142:17" pos:end="146:62"><expr pos:start="142:17" pos:end="146:61"><call pos:start="142:17" pos:end="146:61"><name pos:start="142:17" pos:end="142:26">error_setg</name><argument_list pos:start="142:27" pos:end="146:61">(<argument pos:start="142:28" pos:end="142:31"><expr pos:start="142:28" pos:end="142:31"><name pos:start="142:28" pos:end="142:31">errp</name></expr></argument>,

                           <argument pos:start="144:28" pos:end="146:50"><expr pos:start="144:28" pos:end="146:50"><literal type="string" pos:start="144:28" pos:end="144:67">"Certificate %s purpose does not allow "</literal>

                           <literal type="string" pos:start="146:28" pos:end="146:50">"use with a TLS server"</literal></expr></argument>, <argument pos:start="146:53" pos:end="146:60"><expr pos:start="146:53" pos:end="146:60"><name pos:start="146:53" pos:end="146:60">certFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="148:17" pos:end="148:26">return <expr pos:start="148:24" pos:end="148:25"><operator pos:start="148:24" pos:end="148:24">-</operator><literal type="number" pos:start="148:25" pos:end="148:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="154:7" pos:end="172:5">else <block pos:start="154:12" pos:end="172:5">{<block_content pos:start="156:9" pos:end="170:9">

        <if_stmt pos:start="156:9" pos:end="170:9"><if pos:start="156:9" pos:end="170:9">if <condition pos:start="156:12" pos:end="156:25">(<expr pos:start="156:13" pos:end="156:24"><operator pos:start="156:13" pos:end="156:13">!</operator><name pos:start="156:14" pos:end="156:24">allowClient</name></expr>)</condition> <block pos:start="156:27" pos:end="170:9">{<block_content pos:start="158:13" pos:end="168:13">

            <if_stmt pos:start="158:13" pos:end="168:13"><if pos:start="158:13" pos:end="168:13">if <condition pos:start="158:16" pos:end="158:25">(<expr pos:start="158:17" pos:end="158:24"><name pos:start="158:17" pos:end="158:24">critical</name></expr>)</condition> <block pos:start="158:27" pos:end="168:13">{<block_content pos:start="160:17" pos:end="166:26">

                <expr_stmt pos:start="160:17" pos:end="164:58"><expr pos:start="160:17" pos:end="164:57"><call pos:start="160:17" pos:end="164:57"><name pos:start="160:17" pos:end="160:26">error_setg</name><argument_list pos:start="160:27" pos:end="164:57">(<argument pos:start="160:28" pos:end="160:31"><expr pos:start="160:28" pos:end="160:31"><name pos:start="160:28" pos:end="160:31">errp</name></expr></argument>,

                           <argument pos:start="162:28" pos:end="164:46"><expr pos:start="162:28" pos:end="164:46"><literal type="string" pos:start="162:28" pos:end="162:71">"Certificate %s purpose does not allow use "</literal>

                           <literal type="string" pos:start="164:28" pos:end="164:46">"with a TLS client"</literal></expr></argument>, <argument pos:start="164:49" pos:end="164:56"><expr pos:start="164:49" pos:end="164:56"><name pos:start="164:49" pos:end="164:56">certFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="166:17" pos:end="166:26">return <expr pos:start="166:24" pos:end="166:25"><operator pos:start="166:24" pos:end="166:24">-</operator><literal type="number" pos:start="166:25" pos:end="166:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="176:5" pos:end="176:13">return <expr pos:start="176:12" pos:end="176:12"><literal type="number" pos:start="176:12" pos:end="176:12">0</literal></expr>;</return>

</block_content>}</block></unit>
