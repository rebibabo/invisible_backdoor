<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24525.c" pos:tabs="8"><function pos:start="1:1" pos:end="86:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">complete_pdu</name><parameter_list pos:start="1:25" pos:end="1:65">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:34">V9fsState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:46">V9fsPDU</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">pdu</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:60">ssize_t</name></type> <name pos:start="1:62" pos:end="1:64">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="86:1">{<block_content pos:start="5:5" pos:end="84:21">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">int8_t</name></type> <name pos:start="5:12" pos:end="5:13">id</name> <init pos:start="5:15" pos:end="5:27">= <expr pos:start="5:17" pos:end="5:27"><name pos:start="5:17" pos:end="5:23"><name pos:start="5:17" pos:end="5:19">pdu</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:23">id</name></name> <operator pos:start="5:25" pos:end="5:25">+</operator> <literal type="number" pos:start="5:27" pos:end="5:27">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="5:30" pos:end="5:43">/* Response */</comment>



    <if_stmt pos:start="9:5" pos:end="48:5"><if pos:start="9:5" pos:end="48:5">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">len</name> <operator pos:start="9:13" pos:end="9:13">&lt;</operator> <literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>)</condition> <block pos:start="9:18" pos:end="48:5">{<block_content pos:start="11:9" pos:end="45:9">

        <decl_stmt pos:start="11:9" pos:end="11:23"><decl pos:start="11:9" pos:end="11:22"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">err</name> <init pos:start="11:17" pos:end="11:22">= <expr pos:start="11:19" pos:end="11:22"><operator pos:start="11:19" pos:end="11:19">-</operator><name pos:start="11:20" pos:end="11:22">len</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">len</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <literal type="number" pos:start="13:15" pos:end="13:15">7</literal></expr>;</expr_stmt>



        <if_stmt pos:start="17:9" pos:end="33:9"><if pos:start="17:9" pos:end="33:9">if <condition pos:start="17:12" pos:end="17:49">(<expr pos:start="17:13" pos:end="17:48"><name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:28">proto_version</name></name> <operator pos:start="17:30" pos:end="17:31">!=</operator> <name pos:start="17:33" pos:end="17:48">V9FS_PROTO_2000L</name></expr>)</condition> <block pos:start="17:51" pos:end="33:9">{<block_content pos:start="19:13" pos:end="31:27">

            <decl_stmt pos:start="19:13" pos:end="19:27"><decl pos:start="19:13" pos:end="19:26"><type pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:22">V9fsString</name></type> <name pos:start="19:24" pos:end="19:26">str</name></decl>;</decl_stmt>



            <expr_stmt pos:start="23:13" pos:end="23:37"><expr pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">str</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:20">data</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:36"><name pos:start="23:24" pos:end="23:31">strerror</name><argument_list pos:start="23:32" pos:end="23:36">(<argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:35">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:40"><expr pos:start="25:13" pos:end="25:39"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">str</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:20">size</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:39"><name pos:start="25:24" pos:end="25:29">strlen</name><argument_list pos:start="25:30" pos:end="25:39">(<argument pos:start="25:31" pos:end="25:38"><expr pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:33">str</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:38">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="29:13" pos:end="29:52"><expr pos:start="29:13" pos:end="29:51"><name pos:start="29:13" pos:end="29:15">len</name> <operator pos:start="29:17" pos:end="29:18">+=</operator> <call pos:start="29:20" pos:end="29:51"><name pos:start="29:20" pos:end="29:30">pdu_marshal</name><argument_list pos:start="29:31" pos:end="29:51">(<argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:34">pdu</name></expr></argument>, <argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">len</name></expr></argument>, <argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><literal type="string" pos:start="29:42" pos:end="29:44">"s"</literal></expr></argument>, <argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><operator pos:start="29:47" pos:end="29:47">&amp;</operator><name pos:start="29:48" pos:end="29:50">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:14">id</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:26">P9_RERROR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <call pos:start="37:16" pos:end="37:46"><name pos:start="37:16" pos:end="37:26">pdu_marshal</name><argument_list pos:start="37:27" pos:end="37:46">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">pdu</name></expr></argument>, <argument pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:35">len</name></expr></argument>, <argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><literal type="string" pos:start="37:38" pos:end="37:40">"d"</literal></expr></argument>, <argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><name pos:start="37:43" pos:end="37:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:49">(<expr pos:start="41:13" pos:end="41:48"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:28">proto_version</name></name> <operator pos:start="41:30" pos:end="41:31">==</operator> <name pos:start="41:33" pos:end="41:48">V9FS_PROTO_2000L</name></expr>)</condition> <block pos:start="41:51" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:28">

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:14">id</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:27">P9_RLERROR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>


    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="52:5" pos:end="52:29">/* fill out the header */</comment>

    <expr_stmt pos:start="54:5" pos:end="54:59"><expr pos:start="54:5" pos:end="54:58"><call pos:start="54:5" pos:end="54:58"><name pos:start="54:5" pos:end="54:15">pdu_marshal</name><argument_list pos:start="54:16" pos:end="54:58">(<argument pos:start="54:17" pos:end="54:19"><expr pos:start="54:17" pos:end="54:19"><name pos:start="54:17" pos:end="54:19">pdu</name></expr></argument>, <argument pos:start="54:22" pos:end="54:22"><expr pos:start="54:22" pos:end="54:22"><literal type="number" pos:start="54:22" pos:end="54:22">0</literal></expr></argument>, <argument pos:start="54:25" pos:end="54:29"><expr pos:start="54:25" pos:end="54:29"><literal type="string" pos:start="54:25" pos:end="54:29">"dbw"</literal></expr></argument>, <argument pos:start="54:32" pos:end="54:43"><expr pos:start="54:32" pos:end="54:43"><operator pos:start="54:32" pos:end="54:32">(</operator><name pos:start="54:33" pos:end="54:39">int32_t</name><operator pos:start="54:40" pos:end="54:40">)</operator><name pos:start="54:41" pos:end="54:43">len</name></expr></argument>, <argument pos:start="54:46" pos:end="54:47"><expr pos:start="54:46" pos:end="54:47"><name pos:start="54:46" pos:end="54:47">id</name></expr></argument>, <argument pos:start="54:50" pos:end="54:57"><expr pos:start="54:50" pos:end="54:57"><name pos:start="54:50" pos:end="54:57"><name pos:start="54:50" pos:end="54:52">pdu</name><operator pos:start="54:53" pos:end="54:54">-&gt;</operator><name pos:start="54:55" pos:end="54:57">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="58:5" pos:end="58:28">/* keep these in sync */</comment>

    <expr_stmt pos:start="60:5" pos:end="60:20"><expr pos:start="60:5" pos:end="60:19"><name pos:start="60:5" pos:end="60:13"><name pos:start="60:5" pos:end="60:7">pdu</name><operator pos:start="60:8" pos:end="60:9">-&gt;</operator><name pos:start="60:10" pos:end="60:13">size</name></name> <operator pos:start="60:15" pos:end="60:15">=</operator> <name pos:start="60:17" pos:end="60:19">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="62:5" pos:end="62:17"><expr pos:start="62:5" pos:end="62:16"><name pos:start="62:5" pos:end="62:11"><name pos:start="62:5" pos:end="62:7">pdu</name><operator pos:start="62:8" pos:end="62:9">-&gt;</operator><name pos:start="62:10" pos:end="62:11">id</name></name> <operator pos:start="62:13" pos:end="62:13">=</operator> <name pos:start="62:15" pos:end="62:16">id</name></expr>;</expr_stmt>



    <comment type="block" pos:start="66:5" pos:end="66:36">/* push onto queue and notify */</comment>

    <expr_stmt pos:start="68:5" pos:end="68:43"><expr pos:start="68:5" pos:end="68:42"><call pos:start="68:5" pos:end="68:42"><name pos:start="68:5" pos:end="68:18">virtqueue_push</name><argument_list pos:start="68:19" pos:end="68:42">(<argument pos:start="68:20" pos:end="68:24"><expr pos:start="68:20" pos:end="68:24"><name pos:start="68:20" pos:end="68:24"><name pos:start="68:20" pos:end="68:20">s</name><operator pos:start="68:21" pos:end="68:22">-&gt;</operator><name pos:start="68:23" pos:end="68:24">vq</name></name></expr></argument>, <argument pos:start="68:27" pos:end="68:36"><expr pos:start="68:27" pos:end="68:36"><operator pos:start="68:27" pos:end="68:27">&amp;</operator><name pos:start="68:28" pos:end="68:36"><name pos:start="68:28" pos:end="68:30">pdu</name><operator pos:start="68:31" pos:end="68:32">-&gt;</operator><name pos:start="68:33" pos:end="68:36">elem</name></name></expr></argument>, <argument pos:start="68:39" pos:end="68:41"><expr pos:start="68:39" pos:end="68:41"><name pos:start="68:39" pos:end="68:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="72:5" pos:end="72:50">/* FIXME: we should batch these completions */</comment>

    <expr_stmt pos:start="74:5" pos:end="74:35"><expr pos:start="74:5" pos:end="74:34"><call pos:start="74:5" pos:end="74:34"><name pos:start="74:5" pos:end="74:17">virtio_notify</name><argument_list pos:start="74:18" pos:end="74:34">(<argument pos:start="74:19" pos:end="74:26"><expr pos:start="74:19" pos:end="74:26"><operator pos:start="74:19" pos:end="74:19">&amp;</operator><name pos:start="74:20" pos:end="74:26"><name pos:start="74:20" pos:end="74:20">s</name><operator pos:start="74:21" pos:end="74:22">-&gt;</operator><name pos:start="74:23" pos:end="74:26">vdev</name></name></expr></argument>, <argument pos:start="74:29" pos:end="74:33"><expr pos:start="74:29" pos:end="74:33"><name pos:start="74:29" pos:end="74:33"><name pos:start="74:29" pos:end="74:29">s</name><operator pos:start="74:30" pos:end="74:31">-&gt;</operator><name pos:start="74:32" pos:end="74:33">vq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="78:5" pos:end="78:62">/* Now wakeup anybody waiting in flush for this request */</comment>

    <expr_stmt pos:start="80:5" pos:end="80:39"><expr pos:start="80:5" pos:end="80:38"><call pos:start="80:5" pos:end="80:38"><name pos:start="80:5" pos:end="80:22">qemu_co_queue_next</name><argument_list pos:start="80:23" pos:end="80:38">(<argument pos:start="80:24" pos:end="80:37"><expr pos:start="80:24" pos:end="80:37"><operator pos:start="80:24" pos:end="80:24">&amp;</operator><name pos:start="80:25" pos:end="80:37"><name pos:start="80:25" pos:end="80:27">pdu</name><operator pos:start="80:28" pos:end="80:29">-&gt;</operator><name pos:start="80:30" pos:end="80:37">complete</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="84:5" pos:end="84:21"><expr pos:start="84:5" pos:end="84:20"><call pos:start="84:5" pos:end="84:20"><name pos:start="84:5" pos:end="84:12">free_pdu</name><argument_list pos:start="84:13" pos:end="84:20">(<argument pos:start="84:14" pos:end="84:14"><expr pos:start="84:14" pos:end="84:14"><name pos:start="84:14" pos:end="84:14">s</name></expr></argument>, <argument pos:start="84:17" pos:end="84:19"><expr pos:start="84:17" pos:end="84:19"><name pos:start="84:17" pos:end="84:19">pdu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
