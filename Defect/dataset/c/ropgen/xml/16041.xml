<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16041.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:29">mcf_intc_read</name><parameter_list pos:start="1:30" pos:end="3:44">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:67"><decl pos:start="1:45" pos:end="1:67"><type pos:start="1:45" pos:end="1:67"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:38">unsigned</name></type> <name pos:start="3:40" pos:end="3:43">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:5">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">mcf_intc_state</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:48">= <expr pos:start="9:25" pos:end="9:48"><operator pos:start="9:25" pos:end="9:25">(</operator><name pos:start="9:26" pos:end="9:39">mcf_intc_state</name> <operator pos:start="9:41" pos:end="9:41">*</operator><operator pos:start="9:42" pos:end="9:42">)</operator><name pos:start="9:43" pos:end="9:48">opaque</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:10">offset</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:17">addr</name> <operator pos:start="11:19" pos:end="11:19">&amp;</operator> <literal type="number" pos:start="11:21" pos:end="11:24">0xff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:40">(<expr pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:14">offset</name> <operator pos:start="13:16" pos:end="13:17">&gt;=</operator> <literal type="number" pos:start="13:19" pos:end="13:22">0x40</literal> <operator pos:start="13:24" pos:end="13:25">&amp;&amp;</operator> <name pos:start="13:27" pos:end="13:32">offset</name> <operator pos:start="13:34" pos:end="13:34">&lt;</operator> <literal type="number" pos:start="13:36" pos:end="13:39">0x80</literal></expr>)</condition> <block pos:start="13:42" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:37">

        <return pos:start="15:9" pos:end="15:37">return <expr pos:start="15:16" pos:end="15:36"><name pos:start="15:16" pos:end="15:36"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:21">icr</name><index pos:start="15:22" pos:end="15:36">[<expr pos:start="15:23" pos:end="15:35"><name pos:start="15:23" pos:end="15:28">offset</name> <operator pos:start="15:30" pos:end="15:30">-</operator> <literal type="number" pos:start="15:32" pos:end="15:35">0x40</literal></expr>]</index></name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="19:5" pos:end="61:5">switch <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:18">offset</name></expr>)</condition> <block pos:start="19:21" pos:end="61:5">{<block_content pos:start="21:5" pos:end="59:17">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x00</literal></expr>:</case>

        <return pos:start="23:9" pos:end="23:40">return <expr pos:start="23:16" pos:end="23:39"><operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:24">uint32_t</name><operator pos:start="23:25" pos:end="23:25">)</operator><operator pos:start="23:26" pos:end="23:26">(</operator><name pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:32">ipr</name></name> <operator pos:start="23:34" pos:end="23:35">&gt;&gt;</operator> <literal type="number" pos:start="23:37" pos:end="23:38">32</literal><operator pos:start="23:39" pos:end="23:39">)</operator></expr>;</return>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x04</literal></expr>:</case>

        <return pos:start="27:9" pos:end="27:32">return <expr pos:start="27:16" pos:end="27:31"><operator pos:start="27:16" pos:end="27:16">(</operator><name pos:start="27:17" pos:end="27:24">uint32_t</name><operator pos:start="27:25" pos:end="27:25">)</operator><name pos:start="27:26" pos:end="27:31"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:31">ipr</name></name></expr>;</return>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x08</literal></expr>:</case>

        <return pos:start="31:9" pos:end="31:40">return <expr pos:start="31:16" pos:end="31:39"><operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:24">uint32_t</name><operator pos:start="31:25" pos:end="31:25">)</operator><operator pos:start="31:26" pos:end="31:26">(</operator><name pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:32">imr</name></name> <operator pos:start="31:34" pos:end="31:35">&gt;&gt;</operator> <literal type="number" pos:start="31:37" pos:end="31:38">32</literal><operator pos:start="31:39" pos:end="31:39">)</operator></expr>;</return>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x0c</literal></expr>:</case>

        <return pos:start="35:9" pos:end="35:32">return <expr pos:start="35:16" pos:end="35:31"><operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:24">uint32_t</name><operator pos:start="35:25" pos:end="35:25">)</operator><name pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:31">imr</name></name></expr>;</return>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x10</literal></expr>:</case>

        <return pos:start="39:9" pos:end="39:40">return <expr pos:start="39:16" pos:end="39:39"><operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:24">uint32_t</name><operator pos:start="39:25" pos:end="39:25">)</operator><operator pos:start="39:26" pos:end="39:26">(</operator><name pos:start="39:27" pos:end="39:32"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:32">ifr</name></name> <operator pos:start="39:34" pos:end="39:35">&gt;&gt;</operator> <literal type="number" pos:start="39:37" pos:end="39:38">32</literal><operator pos:start="39:39" pos:end="39:39">)</operator></expr>;</return>

    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><literal type="number" pos:start="41:10" pos:end="41:13">0x14</literal></expr>:</case>

        <return pos:start="43:9" pos:end="43:32">return <expr pos:start="43:16" pos:end="43:31"><operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:24">uint32_t</name><operator pos:start="43:25" pos:end="43:25">)</operator><name pos:start="43:26" pos:end="43:31"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:31">ifr</name></name></expr>;</return>

    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">0xe0</literal></expr>:</case> <comment type="block" pos:start="45:16" pos:end="45:29">/* SWIACK.  */</comment>

        <return pos:start="47:9" pos:end="47:32">return <expr pos:start="47:16" pos:end="47:31"><name pos:start="47:16" pos:end="47:31"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:31">active_vector</name></name></expr>;</return>

    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><literal type="number" pos:start="49:10" pos:end="49:13">0xe1</literal></expr>:</case> <case pos:start="49:16" pos:end="49:25">case <expr pos:start="49:21" pos:end="49:24"><literal type="number" pos:start="49:21" pos:end="49:24">0xe2</literal></expr>:</case> <case pos:start="49:27" pos:end="49:36">case <expr pos:start="49:32" pos:end="49:35"><literal type="number" pos:start="49:32" pos:end="49:35">0xe3</literal></expr>:</case> <case pos:start="49:38" pos:end="49:47">case <expr pos:start="49:43" pos:end="49:46"><literal type="number" pos:start="49:43" pos:end="49:46">0xe4</literal></expr>:</case>

    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><literal type="number" pos:start="51:10" pos:end="51:13">0xe5</literal></expr>:</case> <case pos:start="51:16" pos:end="51:25">case <expr pos:start="51:21" pos:end="51:24"><literal type="number" pos:start="51:21" pos:end="51:24">0xe6</literal></expr>:</case> <case pos:start="51:27" pos:end="51:36">case <expr pos:start="51:32" pos:end="51:35"><literal type="number" pos:start="51:32" pos:end="51:35">0xe7</literal></expr>:</case>

        <comment type="block" pos:start="53:9" pos:end="53:20">/* LnIACK */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:60"><expr pos:start="55:9" pos:end="55:59"><call pos:start="55:9" pos:end="55:59"><name pos:start="55:9" pos:end="55:16">hw_error</name><argument_list pos:start="55:17" pos:end="55:59">(<argument pos:start="55:18" pos:end="55:58"><expr pos:start="55:18" pos:end="55:58"><literal type="string" pos:start="55:18" pos:end="55:58">"mcf_intc_read: LnIACK not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <default pos:start="57:5" pos:end="57:12">default:</default>

        <return pos:start="59:9" pos:end="59:17">return <expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
