<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20848.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_hq_slice</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:39">DiracContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:54">DiracSlice</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">slice</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:79"><decl pos:start="1:64" pos:end="1:79"><type pos:start="1:64" pos:end="1:79"><name pos:start="1:64" pos:end="1:70">uint8_t</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:79">tmp_buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:16">level</name></decl>, <decl pos:start="5:19" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:29">orientation</name></decl>, <decl pos:start="5:32" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:40">quant_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:15">qfactor</name><index pos:start="7:16" pos:end="7:31">[<expr pos:start="7:17" pos:end="7:30"><name pos:start="7:17" pos:end="7:30">MAX_DWT_LEVELS</name></expr>]</index><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">4</literal></expr>]</index></name></decl>, <decl pos:start="7:37" pos:end="7:62"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:62"><name pos:start="7:37" pos:end="7:43">qoffset</name><index pos:start="7:44" pos:end="7:59">[<expr pos:start="7:45" pos:end="7:58"><name pos:start="7:45" pos:end="7:58">MAX_DWT_LEVELS</name></expr>]</index><index pos:start="7:60" pos:end="7:62">[<expr pos:start="7:61" pos:end="7:61"><literal type="number" pos:start="7:61" pos:end="7:61">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:34"><name pos:start="9:26" pos:end="9:30">slice</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:34">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">SliceCoeffs</name></type> <name pos:start="11:17" pos:end="11:42"><name pos:start="11:17" pos:end="11:26">coeffs_num</name><index pos:start="11:27" pos:end="11:42">[<expr pos:start="11:28" pos:end="11:41"><name pos:start="11:28" pos:end="11:41">MAX_DWT_LEVELS</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><call pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:18">skip_bits_long</name><argument_list pos:start="15:19" pos:end="15:53">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">gb</name></expr></argument>, <argument pos:start="15:24" pos:end="15:52"><expr pos:start="15:24" pos:end="15:52"><literal type="number" pos:start="15:24" pos:end="15:24">8</literal><operator pos:start="15:25" pos:end="15:25">*</operator><name pos:start="15:26" pos:end="15:52"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:39">highquality</name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:52">prefix_bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:13">quant_idx</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:31"><name pos:start="17:17" pos:end="17:24">get_bits</name><argument_list pos:start="17:25" pos:end="17:31">(<argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><name pos:start="17:26" pos:end="17:27">gb</name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:17">quant_idx</name> <operator pos:start="21:19" pos:end="21:19">&gt;</operator> <name pos:start="21:21" pos:end="21:41">DIRAC_MAX_QUANT_INDEX</name></expr>)</condition> <block pos:start="21:44" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:35">

        <expr_stmt pos:start="23:9" pos:end="23:87"><expr pos:start="23:9" pos:end="23:86"><call pos:start="23:9" pos:end="23:86"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:86">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">avctx</name></name></expr></argument>, <argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:40" pos:end="23:74"><expr pos:start="23:40" pos:end="23:74"><literal type="string" pos:start="23:40" pos:end="23:74">"Invalid quantization index - %i\n"</literal></expr></argument>, <argument pos:start="23:77" pos:end="23:85"><expr pos:start="23:77" pos:end="23:85"><name pos:start="23:77" pos:end="23:85">quant_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:62">/* Slice quantization (slice_quantizers() in the specs) */</comment>

    <for pos:start="33:5" pos:end="45:5">for <control pos:start="33:9" pos:end="33:54">(<init pos:start="33:10" pos:end="33:19"><expr pos:start="33:10" pos:end="33:18"><name pos:start="33:10" pos:end="33:14">level</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:45"><expr pos:start="33:21" pos:end="33:44"><name pos:start="33:21" pos:end="33:25">level</name> <operator pos:start="33:27" pos:end="33:27">&lt;</operator> <name pos:start="33:29" pos:end="33:44"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:44">wavelet_depth</name></name></expr>;</condition> <incr pos:start="33:47" pos:end="33:53"><expr pos:start="33:47" pos:end="33:53"><name pos:start="33:47" pos:end="33:51">level</name><operator pos:start="33:52" pos:end="33:53">++</operator></expr></incr>)</control> <block pos:start="33:56" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <for pos:start="35:9" pos:end="43:9">for <control pos:start="35:13" pos:end="35:67">(<init pos:start="35:14" pos:end="35:35"><expr pos:start="35:14" pos:end="35:34"><name pos:start="35:14" pos:end="35:24">orientation</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <operator pos:start="35:28" pos:end="35:28">!</operator><operator pos:start="35:29" pos:end="35:29">!</operator><name pos:start="35:30" pos:end="35:34">level</name></expr>;</init> <condition pos:start="35:37" pos:end="35:52"><expr pos:start="35:37" pos:end="35:51"><name pos:start="35:37" pos:end="35:47">orientation</name> <operator pos:start="35:49" pos:end="35:49">&lt;</operator> <literal type="number" pos:start="35:51" pos:end="35:51">4</literal></expr>;</condition> <incr pos:start="35:54" pos:end="35:66"><expr pos:start="35:54" pos:end="35:66"><name pos:start="35:54" pos:end="35:64">orientation</name><operator pos:start="35:65" pos:end="35:66">++</operator></expr></incr>)</control> <block pos:start="35:69" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:80">

            <decl_stmt pos:start="37:13" pos:end="37:90"><decl pos:start="37:13" pos:end="37:89"><type pos:start="37:13" pos:end="37:21"><specifier pos:start="37:13" pos:end="37:17">const</specifier> <name pos:start="37:19" pos:end="37:21">int</name></type> <name pos:start="37:23" pos:end="37:27">quant</name> <init pos:start="37:29" pos:end="37:89">= <expr pos:start="37:31" pos:end="37:89"><call pos:start="37:31" pos:end="37:89"><name pos:start="37:31" pos:end="37:35">FFMAX</name><argument_list pos:start="37:36" pos:end="37:89">(<argument pos:start="37:37" pos:end="37:85"><expr pos:start="37:37" pos:end="37:85"><name pos:start="37:37" pos:end="37:45">quant_idx</name> <operator pos:start="37:47" pos:end="37:47">-</operator> <name pos:start="37:49" pos:end="37:85"><name pos:start="37:49" pos:end="37:49">s</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:59">lowdelay</name><operator pos:start="37:60" pos:end="37:60">.</operator><name pos:start="37:61" pos:end="37:65">quant</name><index pos:start="37:66" pos:end="37:72">[<expr pos:start="37:67" pos:end="37:71"><name pos:start="37:67" pos:end="37:71">level</name></expr>]</index><index pos:start="37:73" pos:end="37:85">[<expr pos:start="37:74" pos:end="37:84"><name pos:start="37:74" pos:end="37:84">orientation</name></expr>]</index></name></expr></argument>, <argument pos:start="37:88" pos:end="37:88"><expr pos:start="37:88" pos:end="37:88"><literal type="number" pos:start="37:88" pos:end="37:88">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:69"><expr pos:start="39:13" pos:end="39:68"><name pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:19">qfactor</name><index pos:start="39:20" pos:end="39:26">[<expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:25">level</name></expr>]</index><index pos:start="39:27" pos:end="39:39">[<expr pos:start="39:28" pos:end="39:38"><name pos:start="39:28" pos:end="39:38">orientation</name></expr>]</index></name> <operator pos:start="39:41" pos:end="39:41">=</operator> <name pos:start="39:43" pos:end="39:68"><name pos:start="39:43" pos:end="39:61">ff_dirac_qscale_tab</name><index pos:start="39:62" pos:end="39:68">[<expr pos:start="39:63" pos:end="39:67"><name pos:start="39:63" pos:end="39:67">quant</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:80"><expr pos:start="41:13" pos:end="41:79"><name pos:start="41:13" pos:end="41:39"><name pos:start="41:13" pos:end="41:19">qoffset</name><index pos:start="41:20" pos:end="41:26">[<expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:25">level</name></expr>]</index><index pos:start="41:27" pos:end="41:39">[<expr pos:start="41:28" pos:end="41:38"><name pos:start="41:28" pos:end="41:38">orientation</name></expr>]</index></name> <operator pos:start="41:41" pos:end="41:41">=</operator> <name pos:start="41:43" pos:end="41:75"><name pos:start="41:43" pos:end="41:68">ff_dirac_qoffset_intra_tab</name><index pos:start="41:69" pos:end="41:75">[<expr pos:start="41:70" pos:end="41:74"><name pos:start="41:70" pos:end="41:74">quant</name></expr>]</index></name> <operator pos:start="41:77" pos:end="41:77">+</operator> <literal type="number" pos:start="41:79" pos:end="41:79">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="49:5" pos:end="49:32">/* Luma + 2 Chroma planes */</comment>

    <for pos:start="51:5" pos:end="139:5">for <control pos:start="51:9" pos:end="51:27">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <literal type="number" pos:start="51:21" pos:end="51:21">3</literal></expr>;</condition> <incr pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:24">i</name><operator pos:start="51:25" pos:end="51:26">++</operator></expr></incr>)</control> <block pos:start="51:29" pos:end="139:5">{<block_content pos:start="53:9" pos:end="137:58">

        <decl_stmt pos:start="53:9" pos:end="53:40"><decl pos:start="53:9" pos:end="53:20"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:20">coef_num</name></decl>, <decl pos:start="53:23" pos:end="53:30"><type ref="prev" pos:start="53:9" pos:end="53:11"/><name pos:start="53:23" pos:end="53:30">coef_par</name></decl>, <decl pos:start="53:33" pos:end="53:39"><type ref="prev" pos:start="53:9" pos:end="53:11"/><name pos:start="53:33" pos:end="53:35">off</name> <init pos:start="53:37" pos:end="53:39">= <expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:68"><decl pos:start="55:9" pos:end="55:67"><type pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:15">int64_t</name></type> <name pos:start="55:17" pos:end="55:22">length</name> <init pos:start="55:24" pos:end="55:67">= <expr pos:start="55:26" pos:end="55:67"><name pos:start="55:26" pos:end="55:51"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:39">highquality</name><operator pos:start="55:40" pos:end="55:40">.</operator><name pos:start="55:41" pos:end="55:51">size_scaler</name></name><operator pos:start="55:52" pos:end="55:52">*</operator><call pos:start="55:53" pos:end="55:67"><name pos:start="55:53" pos:end="55:60">get_bits</name><argument_list pos:start="55:61" pos:end="55:67">(<argument pos:start="55:62" pos:end="55:63"><expr pos:start="55:62" pos:end="55:63"><name pos:start="55:62" pos:end="55:63">gb</name></expr></argument>, <argument pos:start="55:66" pos:end="55:66"><expr pos:start="55:66" pos:end="55:66"><literal type="number" pos:start="55:66" pos:end="55:66">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:57"><decl pos:start="57:9" pos:end="57:56"><type pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:15">int64_t</name></type> <name pos:start="57:17" pos:end="57:24">bits_end</name> <init pos:start="57:26" pos:end="57:56">= <expr pos:start="57:28" pos:end="57:56"><call pos:start="57:28" pos:end="57:45"><name pos:start="57:28" pos:end="57:41">get_bits_count</name><argument_list pos:start="57:42" pos:end="57:45">(<argument pos:start="57:43" pos:end="57:44"><expr pos:start="57:43" pos:end="57:44"><name pos:start="57:43" pos:end="57:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="57:47" pos:end="57:47">+</operator> <literal type="number" pos:start="57:49" pos:end="57:49">8</literal><operator pos:start="57:50" pos:end="57:50">*</operator><name pos:start="57:51" pos:end="57:56">length</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:49"><decl pos:start="59:9" pos:end="59:48"><type pos:start="59:9" pos:end="59:23"><specifier pos:start="59:9" pos:end="59:13">const</specifier> <name pos:start="59:15" pos:end="59:21">uint8_t</name> <modifier pos:start="59:23" pos:end="59:23">*</modifier></type><name pos:start="59:24" pos:end="59:27">addr</name> <init pos:start="59:29" pos:end="59:48">= <expr pos:start="59:31" pos:end="59:48"><call pos:start="59:31" pos:end="59:48"><name pos:start="59:31" pos:end="59:44">align_get_bits</name><argument_list pos:start="59:45" pos:end="59:48">(<argument pos:start="59:46" pos:end="59:47"><expr pos:start="59:46" pos:end="59:47"><name pos:start="59:46" pos:end="59:47">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:41">(<expr pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:18">length</name><operator pos:start="63:19" pos:end="63:19">*</operator><literal type="number" pos:start="63:20" pos:end="63:20">8</literal> <operator pos:start="63:22" pos:end="63:22">&gt;</operator> <call pos:start="63:24" pos:end="63:40"><name pos:start="63:24" pos:end="63:36">get_bits_left</name><argument_list pos:start="63:37" pos:end="63:40">(<argument pos:start="63:38" pos:end="63:39"><expr pos:start="63:38" pos:end="63:39"><name pos:start="63:38" pos:end="63:39">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:43" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:39">

            <expr_stmt pos:start="65:13" pos:end="65:65"><expr pos:start="65:13" pos:end="65:64"><call pos:start="65:13" pos:end="65:64"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="65:64">(<argument pos:start="65:20" pos:end="65:27"><expr pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">avctx</name></name></expr></argument>, <argument pos:start="65:30" pos:end="65:41"><expr pos:start="65:30" pos:end="65:41"><name pos:start="65:30" pos:end="65:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:44" pos:end="65:63"><expr pos:start="65:44" pos:end="65:63"><literal type="string" pos:start="65:44" pos:end="65:63">"end too far away\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:39">return <expr pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:84"><expr pos:start="73:9" pos:end="73:83"><name pos:start="73:9" pos:end="73:16">coef_num</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:83"><name pos:start="73:20" pos:end="73:33">subband_coeffs</name><argument_list pos:start="73:34" pos:end="73:83">(<argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">s</name></expr></argument>, <argument pos:start="73:38" pos:end="73:51"><expr pos:start="73:38" pos:end="73:51"><name pos:start="73:38" pos:end="73:51"><name pos:start="73:38" pos:end="73:42">slice</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:51">slice_x</name></name></expr></argument>, <argument pos:start="73:54" pos:end="73:67"><expr pos:start="73:54" pos:end="73:67"><name pos:start="73:54" pos:end="73:67"><name pos:start="73:54" pos:end="73:58">slice</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:67">slice_y</name></name></expr></argument>, <argument pos:start="73:70" pos:end="73:70"><expr pos:start="73:70" pos:end="73:70"><name pos:start="73:70" pos:end="73:70">i</name></expr></argument>, <argument pos:start="73:73" pos:end="73:82"><expr pos:start="73:73" pos:end="73:82"><name pos:start="73:73" pos:end="73:82">coeffs_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="77:9" pos:end="87:77"><if pos:start="77:9" pos:end="81:77">if <condition pos:start="77:12" pos:end="77:22">(<expr pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:21">pshift</name></name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="81:77"><block_content pos:start="79:13" pos:end="81:77">

            <expr_stmt pos:start="79:13" pos:end="81:77"><expr pos:start="79:13" pos:end="81:76"><name pos:start="79:13" pos:end="79:20">coef_par</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="81:76"><name pos:start="79:24" pos:end="79:49">ff_dirac_golomb_read_32bit</name><argument_list pos:start="79:50" pos:end="81:76">(<argument pos:start="79:51" pos:end="79:63"><expr pos:start="79:51" pos:end="79:63"><name pos:start="79:51" pos:end="79:63"><name pos:start="79:51" pos:end="79:51">s</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:63">reader_ctx</name></name></expr></argument>, <argument pos:start="79:66" pos:end="79:69"><expr pos:start="79:66" pos:end="79:69"><name pos:start="79:66" pos:end="79:69">addr</name></expr></argument>,

                                                  <argument pos:start="81:51" pos:end="81:56"><expr pos:start="81:51" pos:end="81:56"><name pos:start="81:51" pos:end="81:56">length</name></expr></argument>, <argument pos:start="81:59" pos:end="81:65"><expr pos:start="81:59" pos:end="81:65"><name pos:start="81:59" pos:end="81:65">tmp_buf</name></expr></argument>, <argument pos:start="81:68" pos:end="81:75"><expr pos:start="81:68" pos:end="81:75"><name pos:start="81:68" pos:end="81:75">coef_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="83:9" pos:end="87:77">else<block type="pseudo" pos:start="85:13" pos:end="87:77"><block_content pos:start="85:13" pos:end="87:77">

            <expr_stmt pos:start="85:13" pos:end="87:77"><expr pos:start="85:13" pos:end="87:76"><name pos:start="85:13" pos:end="85:20">coef_par</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <call pos:start="85:24" pos:end="87:76"><name pos:start="85:24" pos:end="85:49">ff_dirac_golomb_read_16bit</name><argument_list pos:start="85:50" pos:end="87:76">(<argument pos:start="85:51" pos:end="85:63"><expr pos:start="85:51" pos:end="85:63"><name pos:start="85:51" pos:end="85:63"><name pos:start="85:51" pos:end="85:51">s</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:63">reader_ctx</name></name></expr></argument>, <argument pos:start="85:66" pos:end="85:69"><expr pos:start="85:66" pos:end="85:69"><name pos:start="85:66" pos:end="85:69">addr</name></expr></argument>,

                                                  <argument pos:start="87:51" pos:end="87:56"><expr pos:start="87:51" pos:end="87:56"><name pos:start="87:51" pos:end="87:56">length</name></expr></argument>, <argument pos:start="87:59" pos:end="87:65"><expr pos:start="87:59" pos:end="87:65"><name pos:start="87:59" pos:end="87:65">tmp_buf</name></expr></argument>, <argument pos:start="87:68" pos:end="87:75"><expr pos:start="87:68" pos:end="87:75"><name pos:start="87:68" pos:end="87:75">coef_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:32">(<expr pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:20">coef_num</name> <operator pos:start="91:22" pos:end="91:22">&gt;</operator> <name pos:start="91:24" pos:end="91:31">coef_par</name></expr>)</condition> <block pos:start="91:34" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:58">

            <decl_stmt pos:start="93:13" pos:end="93:66"><decl pos:start="93:13" pos:end="93:65"><type pos:start="93:13" pos:end="93:21"><specifier pos:start="93:13" pos:end="93:17">const</specifier> <name pos:start="93:19" pos:end="93:21">int</name></type> <name pos:start="93:23" pos:end="93:29">start_b</name> <init pos:start="93:31" pos:end="93:65">= <expr pos:start="93:33" pos:end="93:65"><name pos:start="93:33" pos:end="93:40">coef_par</name> <operator pos:start="93:42" pos:end="93:42">*</operator> <operator pos:start="93:44" pos:end="93:44">(</operator><literal type="number" pos:start="93:45" pos:end="93:45">1</literal> <operator pos:start="93:47" pos:end="93:48">&lt;&lt;</operator> <operator pos:start="93:50" pos:end="93:50">(</operator><name pos:start="93:51" pos:end="93:59"><name pos:start="93:51" pos:end="93:51">s</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:59">pshift</name></name> <operator pos:start="93:61" pos:end="93:61">+</operator> <literal type="number" pos:start="93:63" pos:end="93:63">1</literal><operator pos:start="93:64" pos:end="93:64">)</operator><operator pos:start="93:65" pos:end="93:65">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="95:13" pos:end="95:66"><decl pos:start="95:13" pos:end="95:65"><type pos:start="95:13" pos:end="95:21"><specifier pos:start="95:13" pos:end="95:17">const</specifier> <name pos:start="95:19" pos:end="95:21">int</name></type> <name pos:start="95:23" pos:end="95:27">end_b</name>   <init pos:start="95:31" pos:end="95:65">= <expr pos:start="95:33" pos:end="95:65"><name pos:start="95:33" pos:end="95:40">coef_num</name> <operator pos:start="95:42" pos:end="95:42">*</operator> <operator pos:start="95:44" pos:end="95:44">(</operator><literal type="number" pos:start="95:45" pos:end="95:45">1</literal> <operator pos:start="95:47" pos:end="95:48">&lt;&lt;</operator> <operator pos:start="95:50" pos:end="95:50">(</operator><name pos:start="95:51" pos:end="95:59"><name pos:start="95:51" pos:end="95:51">s</name><operator pos:start="95:52" pos:end="95:53">-&gt;</operator><name pos:start="95:54" pos:end="95:59">pshift</name></name> <operator pos:start="95:61" pos:end="95:61">+</operator> <literal type="number" pos:start="95:63" pos:end="95:63">1</literal><operator pos:start="95:64" pos:end="95:64">)</operator><operator pos:start="95:65" pos:end="95:65">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:58"><expr pos:start="97:13" pos:end="97:57"><call pos:start="97:13" pos:end="97:57"><name pos:start="97:13" pos:end="97:18">memset</name><argument_list pos:start="97:19" pos:end="97:57">(<argument pos:start="97:20" pos:end="97:36"><expr pos:start="97:20" pos:end="97:36"><operator pos:start="97:20" pos:end="97:20">&amp;</operator><name pos:start="97:21" pos:end="97:36"><name pos:start="97:21" pos:end="97:27">tmp_buf</name><index pos:start="97:28" pos:end="97:36">[<expr pos:start="97:29" pos:end="97:35"><name pos:start="97:29" pos:end="97:35">start_b</name></expr>]</index></name></expr></argument>, <argument pos:start="97:39" pos:end="97:39"><expr pos:start="97:39" pos:end="97:39"><literal type="number" pos:start="97:39" pos:end="97:39">0</literal></expr></argument>, <argument pos:start="97:42" pos:end="97:56"><expr pos:start="97:42" pos:end="97:56"><name pos:start="97:42" pos:end="97:46">end_b</name> <operator pos:start="97:48" pos:end="97:48">-</operator> <name pos:start="97:50" pos:end="97:56">start_b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="103:9" pos:end="133:9">for <control pos:start="103:13" pos:end="103:58">(<init pos:start="103:14" pos:end="103:23"><expr pos:start="103:14" pos:end="103:22"><name pos:start="103:14" pos:end="103:18">level</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>;</init> <condition pos:start="103:25" pos:end="103:49"><expr pos:start="103:25" pos:end="103:48"><name pos:start="103:25" pos:end="103:29">level</name> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <name pos:start="103:33" pos:end="103:48"><name pos:start="103:33" pos:end="103:33">s</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:48">wavelet_depth</name></name></expr>;</condition> <incr pos:start="103:51" pos:end="103:57"><expr pos:start="103:51" pos:end="103:57"><name pos:start="103:51" pos:end="103:55">level</name><operator pos:start="103:56" pos:end="103:57">++</operator></expr></incr>)</control> <block pos:start="103:60" pos:end="133:9">{<block_content pos:start="105:13" pos:end="131:13">

            <decl_stmt pos:start="105:13" pos:end="105:54"><decl pos:start="105:13" pos:end="105:53"><type pos:start="105:13" pos:end="105:31"><specifier pos:start="105:13" pos:end="105:17">const</specifier> <name pos:start="105:19" pos:end="105:29">SliceCoeffs</name> <modifier pos:start="105:31" pos:end="105:31">*</modifier></type><name pos:start="105:32" pos:end="105:32">c</name> <init pos:start="105:34" pos:end="105:53">= <expr pos:start="105:36" pos:end="105:53"><operator pos:start="105:36" pos:end="105:36">&amp;</operator><name pos:start="105:37" pos:end="105:53"><name pos:start="105:37" pos:end="105:46">coeffs_num</name><index pos:start="105:47" pos:end="105:53">[<expr pos:start="105:48" pos:end="105:52"><name pos:start="105:48" pos:end="105:52">level</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="107:13" pos:end="131:13">for <control pos:start="107:17" pos:end="107:71">(<init pos:start="107:18" pos:end="107:39"><expr pos:start="107:18" pos:end="107:38"><name pos:start="107:18" pos:end="107:28">orientation</name> <operator pos:start="107:30" pos:end="107:30">=</operator> <operator pos:start="107:32" pos:end="107:32">!</operator><operator pos:start="107:33" pos:end="107:33">!</operator><name pos:start="107:34" pos:end="107:38">level</name></expr>;</init> <condition pos:start="107:41" pos:end="107:56"><expr pos:start="107:41" pos:end="107:55"><name pos:start="107:41" pos:end="107:51">orientation</name> <operator pos:start="107:53" pos:end="107:53">&lt;</operator> <literal type="number" pos:start="107:55" pos:end="107:55">4</literal></expr>;</condition> <incr pos:start="107:58" pos:end="107:70"><expr pos:start="107:58" pos:end="107:70"><name pos:start="107:58" pos:end="107:68">orientation</name><operator pos:start="107:69" pos:end="107:70">++</operator></expr></incr>)</control> <block pos:start="107:73" pos:end="131:13">{<block_content pos:start="109:17" pos:end="129:49">

                <decl_stmt pos:start="109:17" pos:end="109:74"><decl pos:start="109:17" pos:end="109:73"><type pos:start="109:17" pos:end="109:31"><specifier pos:start="109:17" pos:end="109:21">const</specifier> <name pos:start="109:23" pos:end="109:29">SubBand</name> <modifier pos:start="109:31" pos:end="109:31">*</modifier></type><name pos:start="109:32" pos:end="109:33">b1</name> <init pos:start="109:35" pos:end="109:73">= <expr pos:start="109:37" pos:end="109:73"><operator pos:start="109:37" pos:end="109:37">&amp;</operator><name pos:start="109:38" pos:end="109:48"><name pos:start="109:38" pos:end="109:38">s</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:45">plane</name><index pos:start="109:46" pos:end="109:48">[<expr pos:start="109:47" pos:end="109:47"><name pos:start="109:47" pos:end="109:47">i</name></expr>]</index></name><operator pos:start="109:49" pos:end="109:49">.</operator><name pos:start="109:50" pos:end="109:73"><name pos:start="109:50" pos:end="109:53">band</name><index pos:start="109:54" pos:end="109:60">[<expr pos:start="109:55" pos:end="109:59"><name pos:start="109:55" pos:end="109:59">level</name></expr>]</index><index pos:start="109:61" pos:end="109:73">[<expr pos:start="109:62" pos:end="109:72"><name pos:start="109:62" pos:end="109:72">orientation</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="111:17" pos:end="111:93"><decl pos:start="111:17" pos:end="111:92"><type pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:23">uint8_t</name> <modifier pos:start="111:25" pos:end="111:25">*</modifier></type><name pos:start="111:26" pos:end="111:28">buf</name> <init pos:start="111:30" pos:end="111:92">= <expr pos:start="111:32" pos:end="111:92"><name pos:start="111:32" pos:end="111:39"><name pos:start="111:32" pos:end="111:33">b1</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:39">ibuf</name></name> <operator pos:start="111:41" pos:end="111:41">+</operator> <name pos:start="111:43" pos:end="111:48"><name pos:start="111:43" pos:end="111:43">c</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:48">top</name></name> <operator pos:start="111:50" pos:end="111:50">*</operator> <name pos:start="111:52" pos:end="111:61"><name pos:start="111:52" pos:end="111:53">b1</name><operator pos:start="111:54" pos:end="111:55">-&gt;</operator><name pos:start="111:56" pos:end="111:61">stride</name></name> <operator pos:start="111:63" pos:end="111:63">+</operator> <operator pos:start="111:65" pos:end="111:65">(</operator><name pos:start="111:66" pos:end="111:72"><name pos:start="111:66" pos:end="111:66">c</name><operator pos:start="111:67" pos:end="111:68">-&gt;</operator><name pos:start="111:69" pos:end="111:72">left</name></name> <operator pos:start="111:74" pos:end="111:75">&lt;&lt;</operator> <operator pos:start="111:77" pos:end="111:77">(</operator><name pos:start="111:78" pos:end="111:86"><name pos:start="111:78" pos:end="111:78">s</name><operator pos:start="111:79" pos:end="111:80">-&gt;</operator><name pos:start="111:81" pos:end="111:86">pshift</name></name> <operator pos:start="111:88" pos:end="111:88">+</operator> <literal type="number" pos:start="111:90" pos:end="111:90">1</literal><operator pos:start="111:91" pos:end="111:91">)</operator><operator pos:start="111:92" pos:end="111:92">)</operator></expr></init></decl>;</decl_stmt>



                <comment type="block" pos:start="115:17" pos:end="115:69">/* Change to c-&gt;tot_h &lt;= 4 for AVX2 dequantization */</comment>

                <decl_stmt pos:start="117:17" pos:end="117:64"><decl pos:start="117:17" pos:end="117:63"><type pos:start="117:17" pos:end="117:25"><specifier pos:start="117:17" pos:end="117:21">const</specifier> <name pos:start="117:23" pos:end="117:25">int</name></type> <name pos:start="117:27" pos:end="117:31">qfunc</name> <init pos:start="117:33" pos:end="117:63">= <expr pos:start="117:35" pos:end="117:63"><name pos:start="117:35" pos:end="117:43"><name pos:start="117:35" pos:end="117:35">s</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:43">pshift</name></name> <operator pos:start="117:45" pos:end="117:45">+</operator> <literal type="number" pos:start="117:47" pos:end="117:47">2</literal><operator pos:start="117:48" pos:end="117:48">*</operator><operator pos:start="117:49" pos:end="117:49">(</operator><name pos:start="117:50" pos:end="117:57"><name pos:start="117:50" pos:end="117:50">c</name><operator pos:start="117:51" pos:end="117:52">-&gt;</operator><name pos:start="117:53" pos:end="117:57">tot_h</name></name> <operator pos:start="117:59" pos:end="117:60">&lt;=</operator> <literal type="number" pos:start="117:62" pos:end="117:62">2</literal><operator pos:start="117:63" pos:end="117:63">)</operator></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="119:17" pos:end="125:71"><expr pos:start="119:17" pos:end="125:70"><name pos:start="119:17" pos:end="119:50"><name pos:start="119:17" pos:end="119:17">s</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:27">diracdsp</name><operator pos:start="119:28" pos:end="119:28">.</operator><name pos:start="119:29" pos:end="119:43">dequant_subband</name><index pos:start="119:44" pos:end="119:50">[<expr pos:start="119:45" pos:end="119:49"><name pos:start="119:45" pos:end="119:49">qfunc</name></expr>]</index></name><operator pos:start="119:51" pos:end="119:51">(</operator><operator pos:start="119:52" pos:end="119:52">&amp;</operator><name pos:start="119:53" pos:end="119:64"><name pos:start="119:53" pos:end="119:59">tmp_buf</name><index pos:start="119:60" pos:end="119:64">[<expr pos:start="119:61" pos:end="119:63"><name pos:start="119:61" pos:end="119:63">off</name></expr>]</index></name><operator pos:start="119:65" pos:end="119:65">,</operator> <name pos:start="119:67" pos:end="119:69">buf</name><operator pos:start="119:70" pos:end="119:70">,</operator> <name pos:start="119:72" pos:end="119:81"><name pos:start="119:72" pos:end="119:73">b1</name><operator pos:start="119:74" pos:end="119:75">-&gt;</operator><name pos:start="119:76" pos:end="119:81">stride</name></name><operator pos:start="119:82" pos:end="119:82">,</operator>

                                                   <name pos:start="121:52" pos:end="121:78"><name pos:start="121:52" pos:end="121:58">qfactor</name><index pos:start="121:59" pos:end="121:65">[<expr pos:start="121:60" pos:end="121:64"><name pos:start="121:60" pos:end="121:64">level</name></expr>]</index><index pos:start="121:66" pos:end="121:78">[<expr pos:start="121:67" pos:end="121:77"><name pos:start="121:67" pos:end="121:77">orientation</name></expr>]</index></name><operator pos:start="121:79" pos:end="121:79">,</operator>

                                                   <name pos:start="123:52" pos:end="123:78"><name pos:start="123:52" pos:end="123:58">qoffset</name><index pos:start="123:59" pos:end="123:65">[<expr pos:start="123:60" pos:end="123:64"><name pos:start="123:60" pos:end="123:64">level</name></expr>]</index><index pos:start="123:66" pos:end="123:78">[<expr pos:start="123:67" pos:end="123:77"><name pos:start="123:67" pos:end="123:77">orientation</name></expr>]</index></name><operator pos:start="123:79" pos:end="123:79">,</operator>

                                                   <name pos:start="125:52" pos:end="125:59"><name pos:start="125:52" pos:end="125:52">c</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:59">tot_v</name></name><operator pos:start="125:60" pos:end="125:60">,</operator> <name pos:start="125:62" pos:end="125:69"><name pos:start="125:62" pos:end="125:62">c</name><operator pos:start="125:63" pos:end="125:64">-&gt;</operator><name pos:start="125:65" pos:end="125:69">tot_h</name></name><operator pos:start="125:70" pos:end="125:70">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="129:17" pos:end="129:49"><expr pos:start="129:17" pos:end="129:48"><name pos:start="129:17" pos:end="129:19">off</name> <operator pos:start="129:21" pos:end="129:22">+=</operator> <name pos:start="129:24" pos:end="129:29"><name pos:start="129:24" pos:end="129:24">c</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:29">tot</name></name> <operator pos:start="129:31" pos:end="129:32">&lt;&lt;</operator> <operator pos:start="129:34" pos:end="129:34">(</operator><name pos:start="129:35" pos:end="129:43"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:43">pshift</name></name> <operator pos:start="129:45" pos:end="129:45">+</operator> <literal type="number" pos:start="129:47" pos:end="129:47">1</literal><operator pos:start="129:48" pos:end="129:48">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="137:9" pos:end="137:58"><expr pos:start="137:9" pos:end="137:57"><call pos:start="137:9" pos:end="137:57"><name pos:start="137:9" pos:end="137:22">skip_bits_long</name><argument_list pos:start="137:23" pos:end="137:57">(<argument pos:start="137:24" pos:end="137:25"><expr pos:start="137:24" pos:end="137:25"><name pos:start="137:24" pos:end="137:25">gb</name></expr></argument>, <argument pos:start="137:28" pos:end="137:56"><expr pos:start="137:28" pos:end="137:56"><name pos:start="137:28" pos:end="137:35">bits_end</name> <operator pos:start="137:37" pos:end="137:37">-</operator> <call pos:start="137:39" pos:end="137:56"><name pos:start="137:39" pos:end="137:52">get_bits_count</name><argument_list pos:start="137:53" pos:end="137:56">(<argument pos:start="137:54" pos:end="137:55"><expr pos:start="137:54" pos:end="137:55"><name pos:start="137:54" pos:end="137:55">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
