<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2134.c" pos:tabs="8"><function pos:start="1:1" pos:end="481:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vc1_decode_p_mb</name><parameter_list pos:start="1:27" pos:end="1:41">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:37">VC1Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="481:1">{<block_content pos:start="5:5" pos:end="479:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">mb_pos</name> <init pos:start="11:16" pos:end="11:49">= <expr pos:start="11:18" pos:end="11:49"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">mb_x</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:34">mb_y</name></name> <operator pos:start="11:36" pos:end="11:36">*</operator> <name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">cbp</name></decl>;</decl_stmt> <comment type="block" pos:start="13:14" pos:end="13:37">/* cbp decoding stuff */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">mqdiff</name></decl>, <decl pos:start="15:17" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="15:25" pos:end="15:45">/* MB quantization */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">ttmb</name> <init pos:start="17:14" pos:end="17:23">= <expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">v</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">ttfrm</name></name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="17:26" pos:end="17:48">/* MB Transform type */</comment>



    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:21">mb_has_coeffs</name> <init pos:start="21:23" pos:end="21:25">= <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="21:28" pos:end="21:42">/* last_flag */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">dmv_x</name></decl>, <decl pos:start="23:16" pos:end="23:20"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:16" pos:end="23:20">dmv_y</name></decl>;</decl_stmt> <comment type="block" pos:start="23:23" pos:end="23:54">/* Differential MV components */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:13"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:13">index</name></decl>, <decl pos:start="25:16" pos:end="25:21"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:16" pos:end="25:21">index1</name></decl>;</decl_stmt> <comment type="block" pos:start="25:24" pos:end="25:40">/* LUT indexes */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">val</name></decl>, <decl pos:start="27:14" pos:end="27:17"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:17">sign</name></decl>;</decl_stmt> <comment type="block" pos:start="27:20" pos:end="27:36">/* temp values */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:23"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:19">first_block</name> <init pos:start="29:21" pos:end="29:23">= <expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:15"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:15">dst_idx</name></decl>, <decl pos:start="31:18" pos:end="31:20"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:18" pos:end="31:20">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:24"><decl pos:start="33:5" pos:end="33:15"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:15">skipped</name></decl>, <decl pos:start="33:18" pos:end="33:23"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:18" pos:end="33:23">fourmv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:58"><decl pos:start="35:5" pos:end="35:21"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:17">block_cbp</name> <init pos:start="35:19" pos:end="35:21">= <expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr></init></decl>, <decl pos:start="35:24" pos:end="35:26"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:24" pos:end="35:26">pat</name></decl>, <decl pos:start="35:29" pos:end="35:40"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:29" pos:end="35:36">block_tt</name> <init pos:start="35:38" pos:end="35:40">= <expr pos:start="35:40" pos:end="35:40"><literal type="number" pos:start="35:40" pos:end="35:40">0</literal></expr></init></decl>, <decl pos:start="35:43" pos:end="35:57"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:43" pos:end="35:53">block_intra</name> <init pos:start="35:55" pos:end="35:57">= <expr pos:start="35:57" pos:end="35:57"><literal type="number" pos:start="35:57" pos:end="35:57">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:10">mquant</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">v</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">pq</name></name></expr>;</expr_stmt> <comment type="block" pos:start="39:21" pos:end="39:46">/* lossy initialization */</comment>



    <if_stmt pos:start="43:5" pos:end="49:45"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:26">(<expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:9">v</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:25">mv_type_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:14">fourmv</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:26">get_bits1</name><argument_list pos:start="45:27" pos:end="45:30">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="47:5" pos:end="49:45">else<block type="pseudo" pos:start="49:9" pos:end="49:45"><block_content pos:start="49:9" pos:end="49:45">

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:14">fourmv</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:44"><name pos:start="49:18" pos:end="49:18">v</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:36">mv_type_mb_plane</name><index pos:start="49:37" pos:end="49:44">[<expr pos:start="49:38" pos:end="49:43"><name pos:start="49:38" pos:end="49:43">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="51:5" pos:end="57:44"><if pos:start="51:5" pos:end="53:32">if <condition pos:start="51:8" pos:end="51:23">(<expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:9">v</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">skip_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:32"><block_content pos:start="53:9" pos:end="53:32">

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:15">skipped</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:31"><name pos:start="53:19" pos:end="53:27">get_bits1</name><argument_list pos:start="53:28" pos:end="53:31">(<argument pos:start="53:29" pos:end="53:30"><expr pos:start="53:29" pos:end="53:30"><name pos:start="53:29" pos:end="53:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="57:44">else<block type="pseudo" pos:start="57:9" pos:end="57:44"><block_content pos:start="57:9" pos:end="57:44">

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:15">skipped</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:43"><name pos:start="57:19" pos:end="57:19">v</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:22">s</name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:35">mbskip_table</name><index pos:start="57:36" pos:end="57:43">[<expr pos:start="57:37" pos:end="57:42"><name pos:start="57:37" pos:end="57:42">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="61:5" pos:end="467:5"><if pos:start="61:5" pos:end="235:5">if <condition pos:start="61:8" pos:end="61:16">(<expr pos:start="61:9" pos:end="61:15"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:15">fourmv</name></expr>)</condition> <block pos:start="61:18" pos:end="235:5">{<block_content pos:start="63:9" pos:end="233:9"> <comment type="block" pos:start="61:20" pos:end="61:33">/* 1MV mode */</comment>

        <if_stmt pos:start="63:9" pos:end="233:9"><if pos:start="63:9" pos:end="213:9">if <condition pos:start="63:12" pos:end="63:21">(<expr pos:start="63:13" pos:end="63:20"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:20">skipped</name></expr>)</condition> <block pos:start="63:23" pos:end="213:9">{<block_content pos:start="65:13" pos:end="211:13">

            <expr_stmt pos:start="65:13" pos:end="65:37"><expr pos:start="65:13" pos:end="65:36"><call pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:22">GET_MVDATA</name><argument_list pos:start="65:23" pos:end="65:36">(<argument pos:start="65:24" pos:end="65:28"><expr pos:start="65:24" pos:end="65:28"><name pos:start="65:24" pos:end="65:28">dmv_x</name></expr></argument>, <argument pos:start="65:31" pos:end="65:35"><expr pos:start="65:31" pos:end="65:35"><name pos:start="65:31" pos:end="65:35">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:28">(<expr pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">mb_intra</name></name></expr>)</condition> <block pos:start="69:30" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:75">

                <expr_stmt pos:start="71:17" pos:end="71:75"><expr pos:start="71:17" pos:end="71:74"><name pos:start="71:17" pos:end="71:70"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:34">current_picture</name><operator pos:start="71:35" pos:end="71:35">.</operator><name pos:start="71:36" pos:end="71:45">motion_val</name><index pos:start="71:46" pos:end="71:48">[<expr pos:start="71:47" pos:end="71:47"><literal type="number" pos:start="71:47" pos:end="71:47">1</literal></expr>]</index><index pos:start="71:49" pos:end="71:67">[<expr pos:start="71:50" pos:end="71:66"><name pos:start="71:50" pos:end="71:66"><name pos:start="71:50" pos:end="71:50">s</name><operator pos:start="71:51" pos:end="71:52">-&gt;</operator><name pos:start="71:53" pos:end="71:63">block_index</name><index pos:start="71:64" pos:end="71:66">[<expr pos:start="71:65" pos:end="71:65"><literal type="number" pos:start="71:65" pos:end="71:65">0</literal></expr>]</index></name></expr>]</index><index pos:start="71:68" pos:end="71:70">[<expr pos:start="71:69" pos:end="71:69"><literal type="number" pos:start="71:69" pos:end="71:69">0</literal></expr>]</index></name> <operator pos:start="71:72" pos:end="71:72">=</operator> <literal type="number" pos:start="71:74" pos:end="71:74">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:75"><expr pos:start="73:17" pos:end="73:74"><name pos:start="73:17" pos:end="73:70"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:34">current_picture</name><operator pos:start="73:35" pos:end="73:35">.</operator><name pos:start="73:36" pos:end="73:45">motion_val</name><index pos:start="73:46" pos:end="73:48">[<expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">1</literal></expr>]</index><index pos:start="73:49" pos:end="73:67">[<expr pos:start="73:50" pos:end="73:66"><name pos:start="73:50" pos:end="73:66"><name pos:start="73:50" pos:end="73:50">s</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:63">block_index</name><index pos:start="73:64" pos:end="73:66">[<expr pos:start="73:65" pos:end="73:65"><literal type="number" pos:start="73:65" pos:end="73:65">0</literal></expr>]</index></name></expr>]</index><index pos:start="73:68" pos:end="73:70">[<expr pos:start="73:69" pos:end="73:69"><literal type="number" pos:start="73:69" pos:end="73:69">1</literal></expr>]</index></name> <operator pos:start="73:72" pos:end="73:72">=</operator> <literal type="number" pos:start="73:74" pos:end="73:74">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:93"><expr pos:start="77:13" pos:end="77:92"><name pos:start="77:13" pos:end="77:46"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:30">current_picture</name><operator pos:start="77:31" pos:end="77:31">.</operator><name pos:start="77:32" pos:end="77:38">mb_type</name><index pos:start="77:39" pos:end="77:46">[<expr pos:start="77:40" pos:end="77:45"><name pos:start="77:40" pos:end="77:45">mb_pos</name></expr>]</index></name> <operator pos:start="77:48" pos:end="77:48">=</operator> <ternary pos:start="77:50" pos:end="77:92"><condition pos:start="77:50" pos:end="77:62"><expr pos:start="77:50" pos:end="77:60"><name pos:start="77:50" pos:end="77:60"><name pos:start="77:50" pos:end="77:50">s</name><operator pos:start="77:51" pos:end="77:52">-&gt;</operator><name pos:start="77:53" pos:end="77:60">mb_intra</name></name></expr> ?</condition><then pos:start="77:64" pos:end="77:76"> <expr pos:start="77:64" pos:end="77:76"><name pos:start="77:64" pos:end="77:76">MB_TYPE_INTRA</name></expr> </then><else pos:start="77:78" pos:end="77:92">: <expr pos:start="77:80" pos:end="77:92"><name pos:start="77:80" pos:end="77:92">MB_TYPE_16x16</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:92"><expr pos:start="79:13" pos:end="79:91"><call pos:start="79:13" pos:end="79:91"><name pos:start="79:13" pos:end="79:23">vc1_pred_mv</name><argument_list pos:start="79:24" pos:end="79:91">(<argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><name pos:start="79:25" pos:end="79:25">v</name></expr></argument>, <argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr></argument>, <argument pos:start="79:31" pos:end="79:35"><expr pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:35">dmv_x</name></expr></argument>, <argument pos:start="79:38" pos:end="79:42"><expr pos:start="79:38" pos:end="79:42"><name pos:start="79:38" pos:end="79:42">dmv_y</name></expr></argument>, <argument pos:start="79:45" pos:end="79:45"><expr pos:start="79:45" pos:end="79:45"><literal type="number" pos:start="79:45" pos:end="79:45">1</literal></expr></argument>, <argument pos:start="79:48" pos:end="79:57"><expr pos:start="79:48" pos:end="79:57"><name pos:start="79:48" pos:end="79:57"><name pos:start="79:48" pos:end="79:48">v</name><operator pos:start="79:49" pos:end="79:50">-&gt;</operator><name pos:start="79:51" pos:end="79:57">range_x</name></name></expr></argument>, <argument pos:start="79:60" pos:end="79:69"><expr pos:start="79:60" pos:end="79:69"><name pos:start="79:60" pos:end="79:69"><name pos:start="79:60" pos:end="79:60">v</name><operator pos:start="79:61" pos:end="79:62">-&gt;</operator><name pos:start="79:63" pos:end="79:69">range_y</name></name></expr></argument>, <argument pos:start="79:72" pos:end="79:84"><expr pos:start="79:72" pos:end="79:84"><name pos:start="79:72" pos:end="79:84"><name pos:start="79:72" pos:end="79:72">v</name><operator pos:start="79:73" pos:end="79:74">-&gt;</operator><name pos:start="79:75" pos:end="79:81">mb_type</name><index pos:start="79:82" pos:end="79:84">[<expr pos:start="79:83" pos:end="79:83"><literal type="number" pos:start="79:83" pos:end="79:83">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:87" pos:end="79:87"><expr pos:start="79:87" pos:end="79:87"><literal type="number" pos:start="79:87" pos:end="79:87">0</literal></expr></argument>, <argument pos:start="79:90" pos:end="79:90"><expr pos:start="79:90" pos:end="79:90"><literal type="number" pos:start="79:90" pos:end="79:90">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="83:13" pos:end="83:52">/* FIXME Set DC val for inter block ? */</comment>

            <if_stmt pos:start="85:13" pos:end="109:13"><if pos:start="85:13" pos:end="93:13">if <condition pos:start="85:16" pos:end="85:46">(<expr pos:start="85:17" pos:end="85:45"><name pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:27">mb_intra</name></name> <operator pos:start="85:29" pos:end="85:30">&amp;&amp;</operator> <operator pos:start="85:32" pos:end="85:32">!</operator><name pos:start="85:33" pos:end="85:45">mb_has_coeffs</name></expr>)</condition> <block pos:start="85:48" pos:end="93:13">{<block_content pos:start="87:17" pos:end="91:31">

                <expr_stmt pos:start="87:17" pos:end="87:29"><expr pos:start="87:17" pos:end="87:28"><call pos:start="87:17" pos:end="87:28"><name pos:start="87:17" pos:end="87:26">GET_MQUANT</name><argument_list pos:start="87:27" pos:end="87:28">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:43"><expr pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:26">ac_pred</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <call pos:start="89:30" pos:end="89:42"><name pos:start="89:30" pos:end="89:38">get_bits1</name><argument_list pos:start="89:39" pos:end="89:42">(<argument pos:start="89:40" pos:end="89:41"><expr pos:start="89:40" pos:end="89:41"><name pos:start="89:40" pos:end="89:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:31"><expr pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:19">cbp</name>        <operator pos:start="91:28" pos:end="91:28">=</operator> <literal type="number" pos:start="91:30" pos:end="91:30">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="93:15" pos:end="103:13">else if <condition pos:start="93:23" pos:end="93:37">(<expr pos:start="93:24" pos:end="93:36"><name pos:start="93:24" pos:end="93:36">mb_has_coeffs</name></expr>)</condition> <block pos:start="93:39" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:29">

                <if_stmt pos:start="95:17" pos:end="97:47"><if pos:start="95:17" pos:end="97:47">if <condition pos:start="95:20" pos:end="95:32">(<expr pos:start="95:21" pos:end="95:31"><name pos:start="95:21" pos:end="95:31"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:31">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:47"><block_content pos:start="97:21" pos:end="97:47">

                    <expr_stmt pos:start="97:21" pos:end="97:47"><expr pos:start="97:21" pos:end="97:46"><name pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:30">ac_pred</name></name> <operator pos:start="97:32" pos:end="97:32">=</operator> <call pos:start="97:34" pos:end="97:46"><name pos:start="97:34" pos:end="97:42">get_bits1</name><argument_list pos:start="97:43" pos:end="97:46">(<argument pos:start="97:44" pos:end="97:45"><expr pos:start="97:44" pos:end="97:45"><name pos:start="97:44" pos:end="97:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:87"><expr pos:start="99:17" pos:end="99:86"><name pos:start="99:17" pos:end="99:19">cbp</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="99:86"><name pos:start="99:23" pos:end="99:30">get_vlc2</name><argument_list pos:start="99:31" pos:end="99:86">(<argument pos:start="99:32" pos:end="99:39"><expr pos:start="99:32" pos:end="99:39"><operator pos:start="99:32" pos:end="99:32">&amp;</operator><name pos:start="99:33" pos:end="99:39"><name pos:start="99:33" pos:end="99:33">v</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:36">s</name><operator pos:start="99:37" pos:end="99:37">.</operator><name pos:start="99:38" pos:end="99:39">gb</name></name></expr></argument>, <argument pos:start="99:42" pos:end="99:60"><expr pos:start="99:42" pos:end="99:60"><name pos:start="99:42" pos:end="99:60"><name pos:start="99:42" pos:end="99:42">v</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:53">cbpcy_vlc</name><operator pos:start="99:54" pos:end="99:55">-&gt;</operator><name pos:start="99:56" pos:end="99:60">table</name></name></expr></argument>, <argument pos:start="99:63" pos:end="99:82"><expr pos:start="99:63" pos:end="99:82"><name pos:start="99:63" pos:end="99:82">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="99:85" pos:end="99:85"><expr pos:start="99:85" pos:end="99:85"><literal type="number" pos:start="99:85" pos:end="99:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:29"><expr pos:start="101:17" pos:end="101:28"><call pos:start="101:17" pos:end="101:28"><name pos:start="101:17" pos:end="101:26">GET_MQUANT</name><argument_list pos:start="101:27" pos:end="101:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="109:13">else <block pos:start="103:20" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:27">

                <expr_stmt pos:start="105:17" pos:end="105:31"><expr pos:start="105:17" pos:end="105:30"><name pos:start="105:17" pos:end="105:22">mquant</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:30"><name pos:start="105:26" pos:end="105:26">v</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:30">pq</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:27"><expr pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:19">cbp</name>    <operator pos:start="107:24" pos:end="107:24">=</operator> <literal type="number" pos:start="107:26" pos:end="107:26">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:61"><expr pos:start="111:13" pos:end="111:60"><name pos:start="111:13" pos:end="111:51"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:30">current_picture</name><operator pos:start="111:31" pos:end="111:31">.</operator><name pos:start="111:32" pos:end="111:43">qscale_table</name><index pos:start="111:44" pos:end="111:51">[<expr pos:start="111:45" pos:end="111:50"><name pos:start="111:45" pos:end="111:50">mb_pos</name></expr>]</index></name> <operator pos:start="111:53" pos:end="111:53">=</operator> <name pos:start="111:55" pos:end="111:60">mquant</name></expr>;</expr_stmt>



            <if_stmt pos:start="115:13" pos:end="119:54"><if pos:start="115:13" pos:end="119:54">if <condition pos:start="115:16" pos:end="115:59">(<expr pos:start="115:17" pos:end="115:58"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:25"><name pos:start="115:18" pos:end="115:18">v</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:25">ttmbf</name></name> <operator pos:start="115:27" pos:end="115:28">&amp;&amp;</operator> <operator pos:start="115:30" pos:end="115:30">!</operator><name pos:start="115:31" pos:end="115:41"><name pos:start="115:31" pos:end="115:31">s</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:41">mb_intra</name></name> <operator pos:start="115:43" pos:end="115:44">&amp;&amp;</operator> <name pos:start="115:46" pos:end="115:58">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="119:54"><block_content pos:start="117:17" pos:end="119:54">

                <expr_stmt pos:start="117:17" pos:end="119:54"><expr pos:start="117:17" pos:end="119:53"><name pos:start="117:17" pos:end="117:20">ttmb</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <call pos:start="117:24" pos:end="119:53"><name pos:start="117:24" pos:end="117:31">get_vlc2</name><argument_list pos:start="117:32" pos:end="119:53">(<argument pos:start="117:33" pos:end="117:34"><expr pos:start="117:33" pos:end="117:34"><name pos:start="117:33" pos:end="117:34">gb</name></expr></argument>, <argument pos:start="117:37" pos:end="117:70"><expr pos:start="117:37" pos:end="117:70"><name pos:start="117:37" pos:end="117:64"><name pos:start="117:37" pos:end="117:51">ff_vc1_ttmb_vlc</name><index pos:start="117:52" pos:end="117:64">[<expr pos:start="117:53" pos:end="117:63"><name pos:start="117:53" pos:end="117:63"><name pos:start="117:53" pos:end="117:53">v</name><operator pos:start="117:54" pos:end="117:55">-&gt;</operator><name pos:start="117:56" pos:end="117:63">tt_index</name></name></expr>]</index></name><operator pos:start="117:65" pos:end="117:65">.</operator><name pos:start="117:66" pos:end="117:70">table</name></expr></argument>,

                                <argument pos:start="119:33" pos:end="119:49"><expr pos:start="119:33" pos:end="119:49"><name pos:start="119:33" pos:end="119:49">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="119:52" pos:end="119:52"><expr pos:start="119:52" pos:end="119:52"><literal type="number" pos:start="119:52" pos:end="119:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="121:13" pos:end="121:47"><if pos:start="121:13" pos:end="121:47">if <condition pos:start="121:16" pos:end="121:29">(<expr pos:start="121:17" pos:end="121:28"><operator pos:start="121:17" pos:end="121:17">!</operator><name pos:start="121:18" pos:end="121:28"><name pos:start="121:18" pos:end="121:18">s</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:28">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="121:31" pos:end="121:47"><block_content pos:start="121:31" pos:end="121:47"> <expr_stmt pos:start="121:31" pos:end="121:47"><expr pos:start="121:31" pos:end="121:46"><call pos:start="121:31" pos:end="121:46"><name pos:start="121:31" pos:end="121:40">vc1_mc_1mv</name><argument_list pos:start="121:41" pos:end="121:46">(<argument pos:start="121:42" pos:end="121:42"><expr pos:start="121:42" pos:end="121:42"><name pos:start="121:42" pos:end="121:42">v</name></expr></argument>, <argument pos:start="121:45" pos:end="121:45"><expr pos:start="121:45" pos:end="121:45"><literal type="number" pos:start="121:45" pos:end="121:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:24"><expr pos:start="123:13" pos:end="123:23"><name pos:start="123:13" pos:end="123:19">dst_idx</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <literal type="number" pos:start="123:23" pos:end="123:23">0</literal></expr>;</expr_stmt>

            <for pos:start="125:13" pos:end="211:13">for <control pos:start="125:17" pos:end="125:35">(<init pos:start="125:18" pos:end="125:23"><expr pos:start="125:18" pos:end="125:22"><name pos:start="125:18" pos:end="125:18">i</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr>;</init> <condition pos:start="125:25" pos:end="125:30"><expr pos:start="125:25" pos:end="125:29"><name pos:start="125:25" pos:end="125:25">i</name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">6</literal></expr>;</condition> <incr pos:start="125:32" pos:end="125:34"><expr pos:start="125:32" pos:end="125:34"><name pos:start="125:32" pos:end="125:32">i</name><operator pos:start="125:33" pos:end="125:34">++</operator></expr></incr>)</control> <block pos:start="125:37" pos:end="211:13">{<block_content pos:start="127:17" pos:end="209:17">

                <expr_stmt pos:start="127:17" pos:end="127:52"><expr pos:start="127:17" pos:end="127:51"><name pos:start="127:17" pos:end="127:47"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:25">dc_val</name><index pos:start="127:26" pos:end="127:28">[<expr pos:start="127:27" pos:end="127:27"><literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>]</index><index pos:start="127:29" pos:end="127:47">[<expr pos:start="127:30" pos:end="127:46"><name pos:start="127:30" pos:end="127:46"><name pos:start="127:30" pos:end="127:30">s</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:43">block_index</name><index pos:start="127:44" pos:end="127:46">[<expr pos:start="127:45" pos:end="127:45"><name pos:start="127:45" pos:end="127:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="127:49" pos:end="127:49">=</operator> <literal type="number" pos:start="127:51" pos:end="127:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:34"><expr pos:start="129:17" pos:end="129:33"><name pos:start="129:17" pos:end="129:23">dst_idx</name> <operator pos:start="129:25" pos:end="129:26">+=</operator> <name pos:start="129:28" pos:end="129:28">i</name> <operator pos:start="129:30" pos:end="129:31">&gt;&gt;</operator> <literal type="number" pos:start="129:33" pos:end="129:33">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:45"><expr pos:start="131:17" pos:end="131:44"><name pos:start="131:17" pos:end="131:19">val</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <operator pos:start="131:23" pos:end="131:23">(</operator><operator pos:start="131:24" pos:end="131:24">(</operator><name pos:start="131:25" pos:end="131:27">cbp</name> <operator pos:start="131:29" pos:end="131:30">&gt;&gt;</operator> <operator pos:start="131:32" pos:end="131:32">(</operator><literal type="number" pos:start="131:33" pos:end="131:35">5</literal> <operator pos:start="131:35" pos:end="131:35">-</operator> <name pos:start="131:37" pos:end="131:37">i</name><operator pos:start="131:38" pos:end="131:38">)</operator><operator pos:start="131:39" pos:end="131:39">)</operator> <operator pos:start="131:41" pos:end="131:41">&amp;</operator> <literal type="number" pos:start="131:43" pos:end="131:43">1</literal><operator pos:start="131:44" pos:end="131:44">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:78"><expr pos:start="133:17" pos:end="133:77"><name pos:start="133:17" pos:end="133:19">off</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <ternary pos:start="133:23" pos:end="133:77"><condition pos:start="133:23" pos:end="133:31"><expr pos:start="133:23" pos:end="133:29"><operator pos:start="133:23" pos:end="133:23">(</operator><name pos:start="133:24" pos:end="133:24">i</name> <operator pos:start="133:26" pos:end="133:26">&amp;</operator> <literal type="number" pos:start="133:28" pos:end="133:28">4</literal><operator pos:start="133:29" pos:end="133:29">)</operator></expr> ?</condition><then pos:start="133:33" pos:end="133:33"> <expr pos:start="133:33" pos:end="133:33"><literal type="number" pos:start="133:33" pos:end="133:33">0</literal></expr> </then><else pos:start="133:35" pos:end="133:77">: <expr pos:start="133:37" pos:end="133:77"><operator pos:start="133:37" pos:end="133:37">(</operator><operator pos:start="133:38" pos:end="133:38">(</operator><name pos:start="133:39" pos:end="133:39">i</name> <operator pos:start="133:41" pos:end="133:41">&amp;</operator> <literal type="number" pos:start="133:43" pos:end="133:43">1</literal><operator pos:start="133:44" pos:end="133:44">)</operator> <operator pos:start="133:46" pos:end="133:46">*</operator> <literal type="number" pos:start="133:48" pos:end="133:50">8</literal> <operator pos:start="133:50" pos:end="133:50">+</operator> <operator pos:start="133:52" pos:end="133:52">(</operator><name pos:start="133:53" pos:end="133:53">i</name> <operator pos:start="133:55" pos:end="133:55">&amp;</operator> <literal type="number" pos:start="133:57" pos:end="133:57">2</literal><operator pos:start="133:58" pos:end="133:58">)</operator> <operator pos:start="133:60" pos:end="133:60">*</operator> <literal type="number" pos:start="133:62" pos:end="133:62">4</literal> <operator pos:start="133:64" pos:end="133:64">*</operator> <name pos:start="133:66" pos:end="133:76"><name pos:start="133:66" pos:end="133:66">s</name><operator pos:start="133:67" pos:end="133:68">-&gt;</operator><name pos:start="133:69" pos:end="133:76">linesize</name></name><operator pos:start="133:77" pos:end="133:77">)</operator></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:63"><expr pos:start="135:17" pos:end="135:62"><name pos:start="135:17" pos:end="135:48"><name pos:start="135:17" pos:end="135:17">v</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:26">mb_type</name><index pos:start="135:27" pos:end="135:29">[<expr pos:start="135:28" pos:end="135:28"><literal type="number" pos:start="135:28" pos:end="135:28">0</literal></expr>]</index><index pos:start="135:30" pos:end="135:48">[<expr pos:start="135:31" pos:end="135:47"><name pos:start="135:31" pos:end="135:47"><name pos:start="135:31" pos:end="135:31">s</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:44">block_index</name><index pos:start="135:45" pos:end="135:47">[<expr pos:start="135:46" pos:end="135:46"><name pos:start="135:46" pos:end="135:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="135:50" pos:end="135:50">=</operator> <name pos:start="135:52" pos:end="135:62"><name pos:start="135:52" pos:end="135:52">s</name><operator pos:start="135:53" pos:end="135:54">-&gt;</operator><name pos:start="135:55" pos:end="135:62">mb_intra</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="137:17" pos:end="209:17"><if pos:start="137:17" pos:end="193:17">if <condition pos:start="137:20" pos:end="137:32">(<expr pos:start="137:21" pos:end="137:31"><name pos:start="137:21" pos:end="137:31"><name pos:start="137:21" pos:end="137:21">s</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:31">mb_intra</name></name></expr>)</condition> <block pos:start="137:34" pos:end="193:17">{<block_content pos:start="141:21" pos:end="191:42">

                    <comment type="block" pos:start="139:21" pos:end="139:74">/* check if prediction blocks A and C are available */</comment>

                    <expr_stmt pos:start="141:21" pos:end="141:48"><expr pos:start="141:21" pos:end="141:47"><name pos:start="141:21" pos:end="141:30"><name pos:start="141:21" pos:end="141:21">v</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:30">a_avail</name></name> <operator pos:start="141:32" pos:end="141:32">=</operator> <name pos:start="141:34" pos:end="141:43"><name pos:start="141:34" pos:end="141:34">v</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:43">c_avail</name></name> <operator pos:start="141:45" pos:end="141:45">=</operator> <literal type="number" pos:start="141:47" pos:end="141:47">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="143:21" pos:end="145:89"><if pos:start="143:21" pos:end="145:89">if <condition pos:start="143:24" pos:end="143:65">(<expr pos:start="143:25" pos:end="143:64"><name pos:start="143:25" pos:end="143:25">i</name> <operator pos:start="143:27" pos:end="143:28">==</operator> <literal type="number" pos:start="143:30" pos:end="143:30">2</literal> <operator pos:start="143:32" pos:end="143:33">||</operator> <name pos:start="143:35" pos:end="143:35">i</name> <operator pos:start="143:37" pos:end="143:38">==</operator> <literal type="number" pos:start="143:40" pos:end="143:40">3</literal> <operator pos:start="143:42" pos:end="143:43">||</operator> <operator pos:start="143:45" pos:end="143:45">!</operator><name pos:start="143:46" pos:end="143:64"><name pos:start="143:46" pos:end="143:46">s</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:64">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="145:25" pos:end="145:89"><block_content pos:start="145:25" pos:end="145:89">

                        <expr_stmt pos:start="145:25" pos:end="145:89"><expr pos:start="145:25" pos:end="145:88"><name pos:start="145:25" pos:end="145:34"><name pos:start="145:25" pos:end="145:25">v</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:34">a_avail</name></name> <operator pos:start="145:36" pos:end="145:36">=</operator> <name pos:start="145:38" pos:end="145:88"><name pos:start="145:38" pos:end="145:38">v</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:47">mb_type</name><index pos:start="145:48" pos:end="145:50">[<expr pos:start="145:49" pos:end="145:49"><literal type="number" pos:start="145:49" pos:end="145:49">0</literal></expr>]</index><index pos:start="145:51" pos:end="145:88">[<expr pos:start="145:52" pos:end="145:87"><name pos:start="145:52" pos:end="145:68"><name pos:start="145:52" pos:end="145:52">s</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:65">block_index</name><index pos:start="145:66" pos:end="145:68">[<expr pos:start="145:67" pos:end="145:67"><name pos:start="145:67" pos:end="145:67">i</name></expr>]</index></name> <operator pos:start="145:70" pos:end="145:70">-</operator> <name pos:start="145:72" pos:end="145:87"><name pos:start="145:72" pos:end="145:72">s</name><operator pos:start="145:73" pos:end="145:74">-&gt;</operator><name pos:start="145:75" pos:end="145:84">block_wrap</name><index pos:start="145:85" pos:end="145:87">[<expr pos:start="145:86" pos:end="145:86"><name pos:start="145:86" pos:end="145:86">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="147:21" pos:end="149:74"><if pos:start="147:21" pos:end="149:74">if <condition pos:start="147:24" pos:end="147:52">(<expr pos:start="147:25" pos:end="147:51"><name pos:start="147:25" pos:end="147:25">i</name> <operator pos:start="147:27" pos:end="147:28">==</operator> <literal type="number" pos:start="147:30" pos:end="147:30">1</literal> <operator pos:start="147:32" pos:end="147:33">||</operator> <name pos:start="147:35" pos:end="147:35">i</name> <operator pos:start="147:37" pos:end="147:38">==</operator> <literal type="number" pos:start="147:40" pos:end="147:40">3</literal> <operator pos:start="147:42" pos:end="147:43">||</operator> <name pos:start="147:45" pos:end="147:51"><name pos:start="147:45" pos:end="147:45">s</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:51">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="149:25" pos:end="149:74"><block_content pos:start="149:25" pos:end="149:74">

                        <expr_stmt pos:start="149:25" pos:end="149:74"><expr pos:start="149:25" pos:end="149:73"><name pos:start="149:25" pos:end="149:34"><name pos:start="149:25" pos:end="149:25">v</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:34">c_avail</name></name> <operator pos:start="149:36" pos:end="149:36">=</operator> <name pos:start="149:38" pos:end="149:73"><name pos:start="149:38" pos:end="149:38">v</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:47">mb_type</name><index pos:start="149:48" pos:end="149:50">[<expr pos:start="149:49" pos:end="149:49"><literal type="number" pos:start="149:49" pos:end="149:49">0</literal></expr>]</index><index pos:start="149:51" pos:end="149:73">[<expr pos:start="149:52" pos:end="149:72"><name pos:start="149:52" pos:end="149:68"><name pos:start="149:52" pos:end="149:52">s</name><operator pos:start="149:53" pos:end="149:54">-&gt;</operator><name pos:start="149:55" pos:end="149:65">block_index</name><index pos:start="149:66" pos:end="149:68">[<expr pos:start="149:67" pos:end="149:67"><name pos:start="149:67" pos:end="149:67">i</name></expr>]</index></name> <operator pos:start="149:70" pos:end="149:70">-</operator> <literal type="number" pos:start="149:72" pos:end="149:72">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="153:21" pos:end="155:83"><expr pos:start="153:21" pos:end="155:82"><call pos:start="153:21" pos:end="155:82"><name pos:start="153:21" pos:end="153:42">vc1_decode_intra_block</name><argument_list pos:start="153:43" pos:end="155:82">(<argument pos:start="153:44" pos:end="153:44"><expr pos:start="153:44" pos:end="153:44"><name pos:start="153:44" pos:end="153:44">v</name></expr></argument>, <argument pos:start="153:47" pos:end="153:57"><expr pos:start="153:47" pos:end="153:57"><name pos:start="153:47" pos:end="153:57"><name pos:start="153:47" pos:end="153:47">s</name><operator pos:start="153:48" pos:end="153:49">-&gt;</operator><name pos:start="153:50" pos:end="153:54">block</name><index pos:start="153:55" pos:end="153:57">[<expr pos:start="153:56" pos:end="153:56"><name pos:start="153:56" pos:end="153:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="153:60" pos:end="153:60"><expr pos:start="153:60" pos:end="153:60"><name pos:start="153:60" pos:end="153:60">i</name></expr></argument>, <argument pos:start="153:63" pos:end="153:65"><expr pos:start="153:63" pos:end="153:65"><name pos:start="153:63" pos:end="153:65">val</name></expr></argument>, <argument pos:start="153:68" pos:end="153:73"><expr pos:start="153:68" pos:end="153:73"><name pos:start="153:68" pos:end="153:73">mquant</name></expr></argument>,

                                           <argument pos:start="155:44" pos:end="155:81"><expr pos:start="155:44" pos:end="155:81"><ternary pos:start="155:44" pos:end="155:81"><condition pos:start="155:44" pos:end="155:52"><expr pos:start="155:44" pos:end="155:50"><operator pos:start="155:44" pos:end="155:44">(</operator><name pos:start="155:45" pos:end="155:45">i</name> <operator pos:start="155:47" pos:end="155:47">&amp;</operator> <literal type="number" pos:start="155:49" pos:end="155:49">4</literal><operator pos:start="155:50" pos:end="155:50">)</operator></expr> ?</condition><then pos:start="155:54" pos:end="155:66"> <expr pos:start="155:54" pos:end="155:66"><name pos:start="155:54" pos:end="155:66"><name pos:start="155:54" pos:end="155:54">v</name><operator pos:start="155:55" pos:end="155:56">-&gt;</operator><name pos:start="155:57" pos:end="155:66">codingset2</name></name></expr> </then><else pos:start="155:68" pos:end="155:81">: <expr pos:start="155:70" pos:end="155:81"><name pos:start="155:70" pos:end="155:81"><name pos:start="155:70" pos:end="155:70">v</name><operator pos:start="155:71" pos:end="155:72">-&gt;</operator><name pos:start="155:73" pos:end="155:81">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="157:21" pos:end="159:33"><if pos:start="157:21" pos:end="159:33">if <condition pos:start="157:24" pos:end="157:62">(<expr pos:start="157:25" pos:end="157:61"><operator pos:start="157:25" pos:end="157:25">(</operator><name pos:start="157:26" pos:end="157:26">i</name><operator pos:start="157:27" pos:end="157:27">&gt;</operator><literal type="number" pos:start="157:28" pos:end="157:28">3</literal><operator pos:start="157:29" pos:end="157:29">)</operator> <operator pos:start="157:31" pos:end="157:32">&amp;&amp;</operator> <operator pos:start="157:34" pos:end="157:34">(</operator><name pos:start="157:35" pos:end="157:42"><name pos:start="157:35" pos:end="157:35">s</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:42">flags</name></name> <operator pos:start="157:44" pos:end="157:44">&amp;</operator> <name pos:start="157:46" pos:end="157:60">CODEC_FLAG_GRAY</name><operator pos:start="157:61" pos:end="157:61">)</operator></expr>)</condition><block type="pseudo" pos:start="159:25" pos:end="159:33"><block_content pos:start="159:25" pos:end="159:33">

                        <continue pos:start="159:25" pos:end="159:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:61"><expr pos:start="161:21" pos:end="161:60"><call pos:start="161:21" pos:end="161:60"><name pos:start="161:21" pos:end="161:47"><name pos:start="161:21" pos:end="161:21">v</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:29">vc1dsp</name><operator pos:start="161:30" pos:end="161:30">.</operator><name pos:start="161:31" pos:end="161:47">vc1_inv_trans_8x8</name></name><argument_list pos:start="161:48" pos:end="161:60">(<argument pos:start="161:49" pos:end="161:59"><expr pos:start="161:49" pos:end="161:59"><name pos:start="161:49" pos:end="161:59"><name pos:start="161:49" pos:end="161:49">s</name><operator pos:start="161:50" pos:end="161:51">-&gt;</operator><name pos:start="161:52" pos:end="161:56">block</name><index pos:start="161:57" pos:end="161:59">[<expr pos:start="161:58" pos:end="161:58"><name pos:start="161:58" pos:end="161:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="163:21" pos:end="167:49"><if pos:start="163:21" pos:end="167:49">if <condition pos:start="163:24" pos:end="163:39">(<expr pos:start="163:25" pos:end="163:38"><name pos:start="163:25" pos:end="163:38"><name pos:start="163:25" pos:end="163:25">v</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:38">rangeredfrm</name></name></expr>)</condition><block type="pseudo" pos:start="165:25" pos:end="167:49"><block_content pos:start="165:25" pos:end="167:49">

                        <for pos:start="165:25" pos:end="167:49">for <control pos:start="165:29" pos:end="165:48">(<init pos:start="165:30" pos:end="165:35"><expr pos:start="165:30" pos:end="165:34"><name pos:start="165:30" pos:end="165:30">j</name> <operator pos:start="165:32" pos:end="165:32">=</operator> <literal type="number" pos:start="165:34" pos:end="165:34">0</literal></expr>;</init> <condition pos:start="165:37" pos:end="165:43"><expr pos:start="165:37" pos:end="165:42"><name pos:start="165:37" pos:end="165:37">j</name> <operator pos:start="165:39" pos:end="165:39">&lt;</operator> <literal type="number" pos:start="165:41" pos:end="165:42">64</literal></expr>;</condition> <incr pos:start="165:45" pos:end="165:47"><expr pos:start="165:45" pos:end="165:47"><name pos:start="165:45" pos:end="165:45">j</name><operator pos:start="165:46" pos:end="165:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="167:29" pos:end="167:49"><block_content pos:start="167:29" pos:end="167:49">

                            <expr_stmt pos:start="167:29" pos:end="167:49"><expr pos:start="167:29" pos:end="167:48"><name pos:start="167:29" pos:end="167:42"><name pos:start="167:29" pos:end="167:29">s</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:36">block</name><index pos:start="167:37" pos:end="167:39">[<expr pos:start="167:38" pos:end="167:38"><name pos:start="167:38" pos:end="167:38">i</name></expr>]</index><index pos:start="167:40" pos:end="167:42">[<expr pos:start="167:41" pos:end="167:41"><name pos:start="167:41" pos:end="167:41">j</name></expr>]</index></name> <operator pos:start="167:44" pos:end="167:46">&lt;&lt;=</operator> <literal type="number" pos:start="167:48" pos:end="167:48">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="169:21" pos:end="175:75"><expr pos:start="169:21" pos:end="175:74"><call pos:start="169:21" pos:end="175:74"><name pos:start="169:21" pos:end="169:53"><name pos:start="169:21" pos:end="169:21">s</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:27">idsp</name><operator pos:start="169:28" pos:end="169:28">.</operator><name pos:start="169:29" pos:end="169:53">put_signed_pixels_clamped</name></name><argument_list pos:start="169:54" pos:end="175:74">(<argument pos:start="169:55" pos:end="169:65"><expr pos:start="169:55" pos:end="169:65"><name pos:start="169:55" pos:end="169:65"><name pos:start="169:55" pos:end="169:55">s</name><operator pos:start="169:56" pos:end="169:57">-&gt;</operator><name pos:start="169:58" pos:end="169:62">block</name><index pos:start="169:63" pos:end="169:65">[<expr pos:start="169:64" pos:end="169:64"><name pos:start="169:64" pos:end="169:64">i</name></expr>]</index></name></expr></argument>,

                                                      <argument pos:start="171:55" pos:end="171:76"><expr pos:start="171:55" pos:end="171:76"><name pos:start="171:55" pos:end="171:70"><name pos:start="171:55" pos:end="171:55">s</name><operator pos:start="171:56" pos:end="171:57">-&gt;</operator><name pos:start="171:58" pos:end="171:61">dest</name><index pos:start="171:62" pos:end="171:70">[<expr pos:start="171:63" pos:end="171:69"><name pos:start="171:63" pos:end="171:69">dst_idx</name></expr>]</index></name> <operator pos:start="171:72" pos:end="171:72">+</operator> <name pos:start="171:74" pos:end="171:76">off</name></expr></argument>,

                                                      <argument pos:start="173:55" pos:end="175:73"><expr pos:start="173:55" pos:end="175:73"><ternary pos:start="173:55" pos:end="175:73"><condition pos:start="173:55" pos:end="173:61"><expr pos:start="173:55" pos:end="173:59"><name pos:start="173:55" pos:end="173:55">i</name> <operator pos:start="173:57" pos:end="173:57">&amp;</operator> <literal type="number" pos:start="173:59" pos:end="173:59">4</literal></expr> ?</condition><then pos:start="173:63" pos:end="173:75"> <expr pos:start="173:63" pos:end="173:75"><name pos:start="173:63" pos:end="173:75"><name pos:start="173:63" pos:end="173:63">s</name><operator pos:start="173:64" pos:end="173:65">-&gt;</operator><name pos:start="173:66" pos:end="173:75">uvlinesize</name></name></expr>

                                                            </then><else pos:start="175:61" pos:end="175:73">: <expr pos:start="175:63" pos:end="175:73"><name pos:start="175:63" pos:end="175:73"><name pos:start="175:63" pos:end="175:63">s</name><operator pos:start="175:64" pos:end="175:65">-&gt;</operator><name pos:start="175:66" pos:end="175:73">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="177:21" pos:end="187:21"><if pos:start="177:21" pos:end="187:21">if <condition pos:start="177:24" pos:end="177:49">(<expr pos:start="177:25" pos:end="177:48"><name pos:start="177:25" pos:end="177:29"><name pos:start="177:25" pos:end="177:25">v</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:29">pq</name></name> <operator pos:start="177:31" pos:end="177:32">&gt;=</operator> <literal type="number" pos:start="177:34" pos:end="177:34">9</literal> <operator pos:start="177:36" pos:end="177:37">&amp;&amp;</operator> <name pos:start="177:39" pos:end="177:48"><name pos:start="177:39" pos:end="177:39">v</name><operator pos:start="177:40" pos:end="177:41">-&gt;</operator><name pos:start="177:42" pos:end="177:48">overlap</name></name></expr>)</condition> <block pos:start="177:51" pos:end="187:21">{<block_content pos:start="179:25" pos:end="185:113">

                        <if_stmt pos:start="179:25" pos:end="181:113"><if pos:start="179:25" pos:end="181:113">if <condition pos:start="179:28" pos:end="179:39">(<expr pos:start="179:29" pos:end="179:38"><name pos:start="179:29" pos:end="179:38"><name pos:start="179:29" pos:end="179:29">v</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:38">c_avail</name></name></expr>)</condition><block type="pseudo" pos:start="181:29" pos:end="181:113"><block_content pos:start="181:29" pos:end="181:113">

                            <expr_stmt pos:start="181:29" pos:end="181:113"><expr pos:start="181:29" pos:end="181:112"><call pos:start="181:29" pos:end="181:112"><name pos:start="181:29" pos:end="181:51"><name pos:start="181:29" pos:end="181:29">v</name><operator pos:start="181:30" pos:end="181:31">-&gt;</operator><name pos:start="181:32" pos:end="181:37">vc1dsp</name><operator pos:start="181:38" pos:end="181:38">.</operator><name pos:start="181:39" pos:end="181:51">vc1_h_overlap</name></name><argument_list pos:start="181:52" pos:end="181:112">(<argument pos:start="181:53" pos:end="181:74"><expr pos:start="181:53" pos:end="181:74"><name pos:start="181:53" pos:end="181:68"><name pos:start="181:53" pos:end="181:53">s</name><operator pos:start="181:54" pos:end="181:55">-&gt;</operator><name pos:start="181:56" pos:end="181:59">dest</name><index pos:start="181:60" pos:end="181:68">[<expr pos:start="181:61" pos:end="181:67"><name pos:start="181:61" pos:end="181:67">dst_idx</name></expr>]</index></name> <operator pos:start="181:70" pos:end="181:70">+</operator> <name pos:start="181:72" pos:end="181:74">off</name></expr></argument>, <argument pos:start="181:77" pos:end="181:111"><expr pos:start="181:77" pos:end="181:111"><ternary pos:start="181:77" pos:end="181:111"><condition pos:start="181:77" pos:end="181:83"><expr pos:start="181:77" pos:end="181:81"><name pos:start="181:77" pos:end="181:77">i</name> <operator pos:start="181:79" pos:end="181:79">&amp;</operator> <literal type="number" pos:start="181:81" pos:end="181:81">4</literal></expr> ?</condition><then pos:start="181:85" pos:end="181:97"> <expr pos:start="181:85" pos:end="181:97"><name pos:start="181:85" pos:end="181:97"><name pos:start="181:85" pos:end="181:85">s</name><operator pos:start="181:86" pos:end="181:87">-&gt;</operator><name pos:start="181:88" pos:end="181:97">uvlinesize</name></name></expr> </then><else pos:start="181:99" pos:end="181:111">: <expr pos:start="181:101" pos:end="181:111"><name pos:start="181:101" pos:end="181:111"><name pos:start="181:101" pos:end="181:101">s</name><operator pos:start="181:102" pos:end="181:103">-&gt;</operator><name pos:start="181:104" pos:end="181:111">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="183:25" pos:end="185:113"><if pos:start="183:25" pos:end="185:113">if <condition pos:start="183:28" pos:end="183:39">(<expr pos:start="183:29" pos:end="183:38"><name pos:start="183:29" pos:end="183:38"><name pos:start="183:29" pos:end="183:29">v</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:38">a_avail</name></name></expr>)</condition><block type="pseudo" pos:start="185:29" pos:end="185:113"><block_content pos:start="185:29" pos:end="185:113">

                            <expr_stmt pos:start="185:29" pos:end="185:113"><expr pos:start="185:29" pos:end="185:112"><call pos:start="185:29" pos:end="185:112"><name pos:start="185:29" pos:end="185:51"><name pos:start="185:29" pos:end="185:29">v</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:37">vc1dsp</name><operator pos:start="185:38" pos:end="185:38">.</operator><name pos:start="185:39" pos:end="185:51">vc1_v_overlap</name></name><argument_list pos:start="185:52" pos:end="185:112">(<argument pos:start="185:53" pos:end="185:74"><expr pos:start="185:53" pos:end="185:74"><name pos:start="185:53" pos:end="185:68"><name pos:start="185:53" pos:end="185:53">s</name><operator pos:start="185:54" pos:end="185:55">-&gt;</operator><name pos:start="185:56" pos:end="185:59">dest</name><index pos:start="185:60" pos:end="185:68">[<expr pos:start="185:61" pos:end="185:67"><name pos:start="185:61" pos:end="185:67">dst_idx</name></expr>]</index></name> <operator pos:start="185:70" pos:end="185:70">+</operator> <name pos:start="185:72" pos:end="185:74">off</name></expr></argument>, <argument pos:start="185:77" pos:end="185:111"><expr pos:start="185:77" pos:end="185:111"><ternary pos:start="185:77" pos:end="185:111"><condition pos:start="185:77" pos:end="185:83"><expr pos:start="185:77" pos:end="185:81"><name pos:start="185:77" pos:end="185:77">i</name> <operator pos:start="185:79" pos:end="185:79">&amp;</operator> <literal type="number" pos:start="185:81" pos:end="185:81">4</literal></expr> ?</condition><then pos:start="185:85" pos:end="185:97"> <expr pos:start="185:85" pos:end="185:97"><name pos:start="185:85" pos:end="185:97"><name pos:start="185:85" pos:end="185:85">s</name><operator pos:start="185:86" pos:end="185:87">-&gt;</operator><name pos:start="185:88" pos:end="185:97">uvlinesize</name></name></expr> </then><else pos:start="185:99" pos:end="185:111">: <expr pos:start="185:101" pos:end="185:111"><name pos:start="185:101" pos:end="185:111"><name pos:start="185:101" pos:end="185:101">s</name><operator pos:start="185:102" pos:end="185:103">-&gt;</operator><name pos:start="185:104" pos:end="185:111">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:51"><expr pos:start="189:21" pos:end="189:50"><name pos:start="189:21" pos:end="189:29">block_cbp</name>   <operator pos:start="189:33" pos:end="189:34">|=</operator> <literal type="number" pos:start="189:36" pos:end="189:38">0xF</literal> <operator pos:start="189:40" pos:end="189:41">&lt;&lt;</operator> <operator pos:start="189:43" pos:end="189:43">(</operator><name pos:start="189:44" pos:end="189:44">i</name> <operator pos:start="189:46" pos:end="189:47">&lt;&lt;</operator> <literal type="number" pos:start="189:49" pos:end="189:49">2</literal><operator pos:start="189:50" pos:end="189:50">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:42"><expr pos:start="191:21" pos:end="191:41"><name pos:start="191:21" pos:end="191:31">block_intra</name> <operator pos:start="191:33" pos:end="191:34">|=</operator> <literal type="number" pos:start="191:36" pos:end="191:36">1</literal> <operator pos:start="191:38" pos:end="191:39">&lt;&lt;</operator> <name pos:start="191:41" pos:end="191:41">i</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="193:19" pos:end="209:17">else if <condition pos:start="193:27" pos:end="193:31">(<expr pos:start="193:28" pos:end="193:30"><name pos:start="193:28" pos:end="193:30">val</name></expr>)</condition> <block pos:start="193:33" pos:end="209:17">{<block_content pos:start="195:21" pos:end="207:36">

                    <expr_stmt pos:start="195:21" pos:end="199:97"><expr pos:start="195:21" pos:end="199:96"><name pos:start="195:21" pos:end="195:23">pat</name> <operator pos:start="195:25" pos:end="195:25">=</operator> <call pos:start="195:27" pos:end="199:96"><name pos:start="195:27" pos:end="195:44">vc1_decode_p_block</name><argument_list pos:start="195:45" pos:end="199:96">(<argument pos:start="195:46" pos:end="195:46"><expr pos:start="195:46" pos:end="195:46"><name pos:start="195:46" pos:end="195:46">v</name></expr></argument>, <argument pos:start="195:49" pos:end="195:59"><expr pos:start="195:49" pos:end="195:59"><name pos:start="195:49" pos:end="195:59"><name pos:start="195:49" pos:end="195:49">s</name><operator pos:start="195:50" pos:end="195:51">-&gt;</operator><name pos:start="195:52" pos:end="195:56">block</name><index pos:start="195:57" pos:end="195:59">[<expr pos:start="195:58" pos:end="195:58"><name pos:start="195:58" pos:end="195:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="195:62" pos:end="195:62"><expr pos:start="195:62" pos:end="195:62"><name pos:start="195:62" pos:end="195:62">i</name></expr></argument>, <argument pos:start="195:65" pos:end="195:70"><expr pos:start="195:65" pos:end="195:70"><name pos:start="195:65" pos:end="195:70">mquant</name></expr></argument>, <argument pos:start="195:73" pos:end="195:76"><expr pos:start="195:73" pos:end="195:76"><name pos:start="195:73" pos:end="195:76">ttmb</name></expr></argument>, <argument pos:start="195:79" pos:end="195:89"><expr pos:start="195:79" pos:end="195:89"><name pos:start="195:79" pos:end="195:89">first_block</name></expr></argument>,

                                             <argument pos:start="197:46" pos:end="197:67"><expr pos:start="197:46" pos:end="197:67"><name pos:start="197:46" pos:end="197:61"><name pos:start="197:46" pos:end="197:46">s</name><operator pos:start="197:47" pos:end="197:48">-&gt;</operator><name pos:start="197:49" pos:end="197:52">dest</name><index pos:start="197:53" pos:end="197:61">[<expr pos:start="197:54" pos:end="197:60"><name pos:start="197:54" pos:end="197:60">dst_idx</name></expr>]</index></name> <operator pos:start="197:63" pos:end="197:63">+</operator> <name pos:start="197:65" pos:end="197:67">off</name></expr></argument>, <argument pos:start="197:70" pos:end="197:106"><expr pos:start="197:70" pos:end="197:106"><ternary pos:start="197:70" pos:end="197:106"><condition pos:start="197:70" pos:end="197:78"><expr pos:start="197:70" pos:end="197:76"><operator pos:start="197:70" pos:end="197:70">(</operator><name pos:start="197:71" pos:end="197:71">i</name> <operator pos:start="197:73" pos:end="197:73">&amp;</operator> <literal type="number" pos:start="197:75" pos:end="197:75">4</literal><operator pos:start="197:76" pos:end="197:76">)</operator></expr> ?</condition><then pos:start="197:80" pos:end="197:92"> <expr pos:start="197:80" pos:end="197:92"><name pos:start="197:80" pos:end="197:92"><name pos:start="197:80" pos:end="197:80">s</name><operator pos:start="197:81" pos:end="197:82">-&gt;</operator><name pos:start="197:83" pos:end="197:92">uvlinesize</name></name></expr> </then><else pos:start="197:94" pos:end="197:106">: <expr pos:start="197:96" pos:end="197:106"><name pos:start="197:96" pos:end="197:106"><name pos:start="197:96" pos:end="197:96">s</name><operator pos:start="197:97" pos:end="197:98">-&gt;</operator><name pos:start="197:99" pos:end="197:106">linesize</name></name></expr></else></ternary></expr></argument>,

                                             <argument pos:start="199:46" pos:end="199:84"><expr pos:start="199:46" pos:end="199:84"><operator pos:start="199:46" pos:end="199:46">(</operator><name pos:start="199:47" pos:end="199:47">i</name> <operator pos:start="199:49" pos:end="199:49">&amp;</operator> <literal type="number" pos:start="199:51" pos:end="199:51">4</literal><operator pos:start="199:52" pos:end="199:52">)</operator> <operator pos:start="199:54" pos:end="199:55">&amp;&amp;</operator> <operator pos:start="199:57" pos:end="199:57">(</operator><name pos:start="199:58" pos:end="199:65"><name pos:start="199:58" pos:end="199:58">s</name><operator pos:start="199:59" pos:end="199:60">-&gt;</operator><name pos:start="199:61" pos:end="199:65">flags</name></name> <operator pos:start="199:67" pos:end="199:67">&amp;</operator> <name pos:start="199:69" pos:end="199:83">CODEC_FLAG_GRAY</name><operator pos:start="199:84" pos:end="199:84">)</operator></expr></argument>, <argument pos:start="199:87" pos:end="199:95"><expr pos:start="199:87" pos:end="199:95"><operator pos:start="199:87" pos:end="199:87">&amp;</operator><name pos:start="199:88" pos:end="199:95">block_tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:49"><expr pos:start="201:21" pos:end="201:48"><name pos:start="201:21" pos:end="201:29">block_cbp</name> <operator pos:start="201:31" pos:end="201:32">|=</operator> <name pos:start="201:34" pos:end="201:36">pat</name> <operator pos:start="201:38" pos:end="201:39">&lt;&lt;</operator> <operator pos:start="201:41" pos:end="201:41">(</operator><name pos:start="201:42" pos:end="201:42">i</name> <operator pos:start="201:44" pos:end="201:45">&lt;&lt;</operator> <literal type="number" pos:start="201:47" pos:end="201:47">2</literal><operator pos:start="201:48" pos:end="201:48">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="203:21" pos:end="205:34"><if pos:start="203:21" pos:end="205:34">if <condition pos:start="203:24" pos:end="203:46">(<expr pos:start="203:25" pos:end="203:45"><operator pos:start="203:25" pos:end="203:25">!</operator><name pos:start="203:26" pos:end="203:33"><name pos:start="203:26" pos:end="203:26">v</name><operator pos:start="203:27" pos:end="203:28">-&gt;</operator><name pos:start="203:29" pos:end="203:33">ttmbf</name></name> <operator pos:start="203:35" pos:end="203:36">&amp;&amp;</operator> <name pos:start="203:38" pos:end="203:41">ttmb</name> <operator pos:start="203:43" pos:end="203:43">&lt;</operator> <literal type="number" pos:start="203:45" pos:end="203:45">8</literal></expr>)</condition><block type="pseudo" pos:start="205:25" pos:end="205:34"><block_content pos:start="205:25" pos:end="205:34">

                        <expr_stmt pos:start="205:25" pos:end="205:34"><expr pos:start="205:25" pos:end="205:33"><name pos:start="205:25" pos:end="205:28">ttmb</name> <operator pos:start="205:30" pos:end="205:30">=</operator> <operator pos:start="205:32" pos:end="205:32">-</operator><literal type="number" pos:start="205:33" pos:end="205:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="207:21" pos:end="207:36"><expr pos:start="207:21" pos:end="207:35"><name pos:start="207:21" pos:end="207:31">first_block</name> <operator pos:start="207:33" pos:end="207:33">=</operator> <literal type="number" pos:start="207:35" pos:end="207:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="213:11" pos:end="233:9">else <block pos:start="213:16" pos:end="233:9">{<block_content pos:start="215:13" pos:end="231:29"> <comment type="line" pos:start="213:18" pos:end="213:27">// skipped</comment>

            <expr_stmt pos:start="215:13" pos:end="215:28"><expr pos:start="215:13" pos:end="215:27"><name pos:start="215:13" pos:end="215:23"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:23">mb_intra</name></name> <operator pos:start="215:25" pos:end="215:25">=</operator> <literal type="number" pos:start="215:27" pos:end="215:27">0</literal></expr>;</expr_stmt>

            <for pos:start="217:13" pos:end="223:13">for <control pos:start="217:17" pos:end="217:35">(<init pos:start="217:18" pos:end="217:23"><expr pos:start="217:18" pos:end="217:22"><name pos:start="217:18" pos:end="217:18">i</name> <operator pos:start="217:20" pos:end="217:20">=</operator> <literal type="number" pos:start="217:22" pos:end="217:22">0</literal></expr>;</init> <condition pos:start="217:25" pos:end="217:30"><expr pos:start="217:25" pos:end="217:29"><name pos:start="217:25" pos:end="217:25">i</name> <operator pos:start="217:27" pos:end="217:27">&lt;</operator> <literal type="number" pos:start="217:29" pos:end="217:29">6</literal></expr>;</condition> <incr pos:start="217:32" pos:end="217:34"><expr pos:start="217:32" pos:end="217:34"><name pos:start="217:32" pos:end="217:32">i</name><operator pos:start="217:33" pos:end="217:34">++</operator></expr></incr>)</control> <block pos:start="217:37" pos:end="223:13">{<block_content pos:start="219:17" pos:end="221:53">

                <expr_stmt pos:start="219:17" pos:end="219:53"><expr pos:start="219:17" pos:end="219:52"><name pos:start="219:17" pos:end="219:48"><name pos:start="219:17" pos:end="219:17">v</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:26">mb_type</name><index pos:start="219:27" pos:end="219:29">[<expr pos:start="219:28" pos:end="219:28"><literal type="number" pos:start="219:28" pos:end="219:28">0</literal></expr>]</index><index pos:start="219:30" pos:end="219:48">[<expr pos:start="219:31" pos:end="219:47"><name pos:start="219:31" pos:end="219:47"><name pos:start="219:31" pos:end="219:31">s</name><operator pos:start="219:32" pos:end="219:33">-&gt;</operator><name pos:start="219:34" pos:end="219:44">block_index</name><index pos:start="219:45" pos:end="219:47">[<expr pos:start="219:46" pos:end="219:46"><name pos:start="219:46" pos:end="219:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="219:50" pos:end="219:50">=</operator> <literal type="number" pos:start="219:52" pos:end="219:52">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:53"><expr pos:start="221:17" pos:end="221:52"><name pos:start="221:17" pos:end="221:47"><name pos:start="221:17" pos:end="221:17">s</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:25">dc_val</name><index pos:start="221:26" pos:end="221:28">[<expr pos:start="221:27" pos:end="221:27"><literal type="number" pos:start="221:27" pos:end="221:27">0</literal></expr>]</index><index pos:start="221:29" pos:end="221:47">[<expr pos:start="221:30" pos:end="221:46"><name pos:start="221:30" pos:end="221:46"><name pos:start="221:30" pos:end="221:30">s</name><operator pos:start="221:31" pos:end="221:32">-&gt;</operator><name pos:start="221:33" pos:end="221:43">block_index</name><index pos:start="221:44" pos:end="221:46">[<expr pos:start="221:45" pos:end="221:45"><name pos:start="221:45" pos:end="221:45">i</name></expr>]</index></name></expr>]</index></name>  <operator pos:start="221:50" pos:end="221:50">=</operator> <literal type="number" pos:start="221:52" pos:end="221:52">0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="225:13" pos:end="225:67"><expr pos:start="225:13" pos:end="225:66"><name pos:start="225:13" pos:end="225:46"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:30">current_picture</name><operator pos:start="225:31" pos:end="225:31">.</operator><name pos:start="225:32" pos:end="225:38">mb_type</name><index pos:start="225:39" pos:end="225:46">[<expr pos:start="225:40" pos:end="225:45"><name pos:start="225:40" pos:end="225:45">mb_pos</name></expr>]</index></name>      <operator pos:start="225:53" pos:end="225:53">=</operator> <name pos:start="225:55" pos:end="225:66">MB_TYPE_SKIP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:56"><expr pos:start="227:13" pos:end="227:55"><name pos:start="227:13" pos:end="227:51"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:30">current_picture</name><operator pos:start="227:31" pos:end="227:31">.</operator><name pos:start="227:32" pos:end="227:43">qscale_table</name><index pos:start="227:44" pos:end="227:51">[<expr pos:start="227:45" pos:end="227:50"><name pos:start="227:45" pos:end="227:50">mb_pos</name></expr>]</index></name> <operator pos:start="227:53" pos:end="227:53">=</operator> <literal type="number" pos:start="227:55" pos:end="227:55">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:84"><expr pos:start="229:13" pos:end="229:83"><call pos:start="229:13" pos:end="229:83"><name pos:start="229:13" pos:end="229:23">vc1_pred_mv</name><argument_list pos:start="229:24" pos:end="229:83">(<argument pos:start="229:25" pos:end="229:25"><expr pos:start="229:25" pos:end="229:25"><name pos:start="229:25" pos:end="229:25">v</name></expr></argument>, <argument pos:start="229:28" pos:end="229:28"><expr pos:start="229:28" pos:end="229:28"><literal type="number" pos:start="229:28" pos:end="229:28">0</literal></expr></argument>, <argument pos:start="229:31" pos:end="229:31"><expr pos:start="229:31" pos:end="229:31"><literal type="number" pos:start="229:31" pos:end="229:31">0</literal></expr></argument>, <argument pos:start="229:34" pos:end="229:34"><expr pos:start="229:34" pos:end="229:34"><literal type="number" pos:start="229:34" pos:end="229:34">0</literal></expr></argument>, <argument pos:start="229:37" pos:end="229:37"><expr pos:start="229:37" pos:end="229:37"><literal type="number" pos:start="229:37" pos:end="229:37">1</literal></expr></argument>, <argument pos:start="229:40" pos:end="229:49"><expr pos:start="229:40" pos:end="229:49"><name pos:start="229:40" pos:end="229:49"><name pos:start="229:40" pos:end="229:40">v</name><operator pos:start="229:41" pos:end="229:42">-&gt;</operator><name pos:start="229:43" pos:end="229:49">range_x</name></name></expr></argument>, <argument pos:start="229:52" pos:end="229:61"><expr pos:start="229:52" pos:end="229:61"><name pos:start="229:52" pos:end="229:61"><name pos:start="229:52" pos:end="229:52">v</name><operator pos:start="229:53" pos:end="229:54">-&gt;</operator><name pos:start="229:55" pos:end="229:61">range_y</name></name></expr></argument>, <argument pos:start="229:64" pos:end="229:76"><expr pos:start="229:64" pos:end="229:76"><name pos:start="229:64" pos:end="229:76"><name pos:start="229:64" pos:end="229:64">v</name><operator pos:start="229:65" pos:end="229:66">-&gt;</operator><name pos:start="229:67" pos:end="229:73">mb_type</name><index pos:start="229:74" pos:end="229:76">[<expr pos:start="229:75" pos:end="229:75"><literal type="number" pos:start="229:75" pos:end="229:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="229:79" pos:end="229:79"><expr pos:start="229:79" pos:end="229:79"><literal type="number" pos:start="229:79" pos:end="229:79">0</literal></expr></argument>, <argument pos:start="229:82" pos:end="229:82"><expr pos:start="229:82" pos:end="229:82"><literal type="number" pos:start="229:82" pos:end="229:82">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:29"><expr pos:start="231:13" pos:end="231:28"><call pos:start="231:13" pos:end="231:28"><name pos:start="231:13" pos:end="231:22">vc1_mc_1mv</name><argument_list pos:start="231:23" pos:end="231:28">(<argument pos:start="231:24" pos:end="231:24"><expr pos:start="231:24" pos:end="231:24"><name pos:start="231:24" pos:end="231:24">v</name></expr></argument>, <argument pos:start="231:27" pos:end="231:27"><expr pos:start="231:27" pos:end="231:27"><literal type="number" pos:start="231:27" pos:end="231:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="235:7" pos:end="467:5">else <block pos:start="235:12" pos:end="467:5">{<block_content pos:start="237:9" pos:end="465:9"> <comment type="line" pos:start="235:14" pos:end="235:24">// 4MV mode</comment>

        <if_stmt pos:start="237:9" pos:end="465:9"><if pos:start="237:9" pos:end="439:9">if <condition pos:start="237:12" pos:end="237:40">(<expr pos:start="237:13" pos:end="237:20"><operator pos:start="237:13" pos:end="237:13">!</operator><name pos:start="237:14" pos:end="237:20">skipped</name></expr> <comment type="block" pos:start="237:22" pos:end="237:39">/* unskipped MB */</comment>)</condition> <block pos:start="237:42" pos:end="439:9">{<block_content pos:start="239:13" pos:end="437:13">

            <decl_stmt pos:start="239:13" pos:end="239:49"><decl pos:start="239:13" pos:end="239:31"><type pos:start="239:13" pos:end="239:15"><name pos:start="239:13" pos:end="239:15">int</name></type> <name pos:start="239:17" pos:end="239:27">intra_count</name> <init pos:start="239:29" pos:end="239:31">= <expr pos:start="239:31" pos:end="239:31"><literal type="number" pos:start="239:31" pos:end="239:31">0</literal></expr></init></decl>, <decl pos:start="239:34" pos:end="239:48"><type ref="prev" pos:start="239:13" pos:end="239:15"/><name pos:start="239:34" pos:end="239:44">coded_inter</name> <init pos:start="239:46" pos:end="239:48">= <expr pos:start="239:48" pos:end="239:48"><literal type="number" pos:start="239:48" pos:end="239:48">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="241:13" pos:end="241:41"><decl pos:start="241:13" pos:end="241:27"><type pos:start="241:13" pos:end="241:15"><name pos:start="241:13" pos:end="241:15">int</name></type> <name pos:start="241:17" pos:end="241:27"><name pos:start="241:17" pos:end="241:24">is_intra</name><index pos:start="241:25" pos:end="241:27">[<expr pos:start="241:26" pos:end="241:26"><literal type="number" pos:start="241:26" pos:end="241:26">6</literal></expr>]</index></name></decl>, <decl pos:start="241:30" pos:end="241:40"><type ref="prev" pos:start="241:13" pos:end="241:15"/><name pos:start="241:30" pos:end="241:40"><name pos:start="241:30" pos:end="241:37">is_coded</name><index pos:start="241:38" pos:end="241:40">[<expr pos:start="241:39" pos:end="241:39"><literal type="number" pos:start="241:39" pos:end="241:39">6</literal></expr>]</index></name></decl>;</decl_stmt>

            <comment type="block" pos:start="243:13" pos:end="243:27">/* Get CBPCY */</comment>

            <expr_stmt pos:start="245:13" pos:end="245:83"><expr pos:start="245:13" pos:end="245:82"><name pos:start="245:13" pos:end="245:15">cbp</name> <operator pos:start="245:17" pos:end="245:17">=</operator> <call pos:start="245:19" pos:end="245:82"><name pos:start="245:19" pos:end="245:26">get_vlc2</name><argument_list pos:start="245:27" pos:end="245:82">(<argument pos:start="245:28" pos:end="245:35"><expr pos:start="245:28" pos:end="245:35"><operator pos:start="245:28" pos:end="245:28">&amp;</operator><name pos:start="245:29" pos:end="245:35"><name pos:start="245:29" pos:end="245:29">v</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:32">s</name><operator pos:start="245:33" pos:end="245:33">.</operator><name pos:start="245:34" pos:end="245:35">gb</name></name></expr></argument>, <argument pos:start="245:38" pos:end="245:56"><expr pos:start="245:38" pos:end="245:56"><name pos:start="245:38" pos:end="245:56"><name pos:start="245:38" pos:end="245:38">v</name><operator pos:start="245:39" pos:end="245:40">-&gt;</operator><name pos:start="245:41" pos:end="245:49">cbpcy_vlc</name><operator pos:start="245:50" pos:end="245:51">-&gt;</operator><name pos:start="245:52" pos:end="245:56">table</name></name></expr></argument>, <argument pos:start="245:59" pos:end="245:78"><expr pos:start="245:59" pos:end="245:78"><name pos:start="245:59" pos:end="245:78">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="245:81" pos:end="245:81"><expr pos:start="245:81" pos:end="245:81"><literal type="number" pos:start="245:81" pos:end="245:81">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="247:13" pos:end="301:13">for <control pos:start="247:17" pos:end="247:35">(<init pos:start="247:18" pos:end="247:23"><expr pos:start="247:18" pos:end="247:22"><name pos:start="247:18" pos:end="247:18">i</name> <operator pos:start="247:20" pos:end="247:20">=</operator> <literal type="number" pos:start="247:22" pos:end="247:22">0</literal></expr>;</init> <condition pos:start="247:25" pos:end="247:30"><expr pos:start="247:25" pos:end="247:29"><name pos:start="247:25" pos:end="247:25">i</name> <operator pos:start="247:27" pos:end="247:27">&lt;</operator> <literal type="number" pos:start="247:29" pos:end="247:29">6</literal></expr>;</condition> <incr pos:start="247:32" pos:end="247:34"><expr pos:start="247:32" pos:end="247:34"><name pos:start="247:32" pos:end="247:32">i</name><operator pos:start="247:33" pos:end="247:34">++</operator></expr></incr>)</control> <block pos:start="247:37" pos:end="301:13">{<block_content pos:start="249:17" pos:end="299:62">

                <expr_stmt pos:start="249:17" pos:end="249:45"><expr pos:start="249:17" pos:end="249:44"><name pos:start="249:17" pos:end="249:19">val</name> <operator pos:start="249:21" pos:end="249:21">=</operator> <operator pos:start="249:23" pos:end="249:23">(</operator><operator pos:start="249:24" pos:end="249:24">(</operator><name pos:start="249:25" pos:end="249:27">cbp</name> <operator pos:start="249:29" pos:end="249:30">&gt;&gt;</operator> <operator pos:start="249:32" pos:end="249:32">(</operator><literal type="number" pos:start="249:33" pos:end="249:35">5</literal> <operator pos:start="249:35" pos:end="249:35">-</operator> <name pos:start="249:37" pos:end="249:37">i</name><operator pos:start="249:38" pos:end="249:38">)</operator><operator pos:start="249:39" pos:end="249:39">)</operator> <operator pos:start="249:41" pos:end="249:41">&amp;</operator> <literal type="number" pos:start="249:43" pos:end="249:43">1</literal><operator pos:start="249:44" pos:end="249:44">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:52"><expr pos:start="251:17" pos:end="251:51"><name pos:start="251:17" pos:end="251:47"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:25">dc_val</name><index pos:start="251:26" pos:end="251:28">[<expr pos:start="251:27" pos:end="251:27"><literal type="number" pos:start="251:27" pos:end="251:27">0</literal></expr>]</index><index pos:start="251:29" pos:end="251:47">[<expr pos:start="251:30" pos:end="251:46"><name pos:start="251:30" pos:end="251:46"><name pos:start="251:30" pos:end="251:30">s</name><operator pos:start="251:31" pos:end="251:32">-&gt;</operator><name pos:start="251:33" pos:end="251:43">block_index</name><index pos:start="251:44" pos:end="251:46">[<expr pos:start="251:45" pos:end="251:45"><name pos:start="251:45" pos:end="251:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="251:49" pos:end="251:49">=</operator> <literal type="number" pos:start="251:51" pos:end="251:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:52"><expr pos:start="253:17" pos:end="253:51"><name pos:start="253:17" pos:end="253:27"><name pos:start="253:17" pos:end="253:17">s</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:27">mb_intra</name></name>                     <operator pos:start="253:49" pos:end="253:49">=</operator> <literal type="number" pos:start="253:51" pos:end="253:51">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="255:17" pos:end="281:17"><if pos:start="255:17" pos:end="281:17">if <condition pos:start="255:20" pos:end="255:26">(<expr pos:start="255:21" pos:end="255:25"><name pos:start="255:21" pos:end="255:21">i</name> <operator pos:start="255:23" pos:end="255:23">&lt;</operator> <literal type="number" pos:start="255:25" pos:end="255:25">4</literal></expr>)</condition> <block pos:start="255:28" pos:end="281:17">{<block_content pos:start="257:21" pos:end="279:49">

                    <expr_stmt pos:start="257:21" pos:end="257:38"><expr pos:start="257:21" pos:end="257:37"><name pos:start="257:21" pos:end="257:25">dmv_x</name> <operator pos:start="257:27" pos:end="257:27">=</operator> <name pos:start="257:29" pos:end="257:33">dmv_y</name> <operator pos:start="257:35" pos:end="257:35">=</operator> <literal type="number" pos:start="257:37" pos:end="257:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:38"><expr pos:start="259:21" pos:end="259:37"><name pos:start="259:21" pos:end="259:31"><name pos:start="259:21" pos:end="259:21">s</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:31">mb_intra</name></name>   <operator pos:start="259:35" pos:end="259:35">=</operator> <literal type="number" pos:start="259:37" pos:end="259:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:38"><expr pos:start="261:21" pos:end="261:37"><name pos:start="261:21" pos:end="261:33">mb_has_coeffs</name> <operator pos:start="261:35" pos:end="261:35">=</operator> <literal type="number" pos:start="261:37" pos:end="261:37">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="263:21" pos:end="267:21"><if pos:start="263:21" pos:end="267:21">if <condition pos:start="263:24" pos:end="263:28">(<expr pos:start="263:25" pos:end="263:27"><name pos:start="263:25" pos:end="263:27">val</name></expr>)</condition> <block pos:start="263:30" pos:end="267:21">{<block_content pos:start="265:25" pos:end="265:49">

                        <expr_stmt pos:start="265:25" pos:end="265:49"><expr pos:start="265:25" pos:end="265:48"><call pos:start="265:25" pos:end="265:48"><name pos:start="265:25" pos:end="265:34">GET_MVDATA</name><argument_list pos:start="265:35" pos:end="265:48">(<argument pos:start="265:36" pos:end="265:40"><expr pos:start="265:36" pos:end="265:40"><name pos:start="265:36" pos:end="265:40">dmv_x</name></expr></argument>, <argument pos:start="265:43" pos:end="265:47"><expr pos:start="265:43" pos:end="265:47"><name pos:start="265:43" pos:end="265:47">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:100"><expr pos:start="269:21" pos:end="269:99"><call pos:start="269:21" pos:end="269:99"><name pos:start="269:21" pos:end="269:31">vc1_pred_mv</name><argument_list pos:start="269:32" pos:end="269:99">(<argument pos:start="269:33" pos:end="269:33"><expr pos:start="269:33" pos:end="269:33"><name pos:start="269:33" pos:end="269:33">v</name></expr></argument>, <argument pos:start="269:36" pos:end="269:36"><expr pos:start="269:36" pos:end="269:36"><name pos:start="269:36" pos:end="269:36">i</name></expr></argument>, <argument pos:start="269:39" pos:end="269:43"><expr pos:start="269:39" pos:end="269:43"><name pos:start="269:39" pos:end="269:43">dmv_x</name></expr></argument>, <argument pos:start="269:46" pos:end="269:50"><expr pos:start="269:46" pos:end="269:50"><name pos:start="269:46" pos:end="269:50">dmv_y</name></expr></argument>, <argument pos:start="269:53" pos:end="269:53"><expr pos:start="269:53" pos:end="269:53"><literal type="number" pos:start="269:53" pos:end="269:53">0</literal></expr></argument>, <argument pos:start="269:56" pos:end="269:65"><expr pos:start="269:56" pos:end="269:65"><name pos:start="269:56" pos:end="269:65"><name pos:start="269:56" pos:end="269:56">v</name><operator pos:start="269:57" pos:end="269:58">-&gt;</operator><name pos:start="269:59" pos:end="269:65">range_x</name></name></expr></argument>, <argument pos:start="269:68" pos:end="269:77"><expr pos:start="269:68" pos:end="269:77"><name pos:start="269:68" pos:end="269:77"><name pos:start="269:68" pos:end="269:68">v</name><operator pos:start="269:69" pos:end="269:70">-&gt;</operator><name pos:start="269:71" pos:end="269:77">range_y</name></name></expr></argument>, <argument pos:start="269:80" pos:end="269:92"><expr pos:start="269:80" pos:end="269:92"><name pos:start="269:80" pos:end="269:92"><name pos:start="269:80" pos:end="269:80">v</name><operator pos:start="269:81" pos:end="269:82">-&gt;</operator><name pos:start="269:83" pos:end="269:89">mb_type</name><index pos:start="269:90" pos:end="269:92">[<expr pos:start="269:91" pos:end="269:91"><literal type="number" pos:start="269:91" pos:end="269:91">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:95" pos:end="269:95"><expr pos:start="269:95" pos:end="269:95"><literal type="number" pos:start="269:95" pos:end="269:95">0</literal></expr></argument>, <argument pos:start="269:98" pos:end="269:98"><expr pos:start="269:98" pos:end="269:98"><literal type="number" pos:start="269:98" pos:end="269:98">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="271:21" pos:end="273:52"><if pos:start="271:21" pos:end="273:52">if <condition pos:start="271:24" pos:end="271:37">(<expr pos:start="271:25" pos:end="271:36"><operator pos:start="271:25" pos:end="271:25">!</operator><name pos:start="271:26" pos:end="271:36"><name pos:start="271:26" pos:end="271:26">s</name><operator pos:start="271:27" pos:end="271:28">-&gt;</operator><name pos:start="271:29" pos:end="271:36">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="273:25" pos:end="273:52"><block_content pos:start="273:25" pos:end="273:52">

                        <expr_stmt pos:start="273:25" pos:end="273:52"><expr pos:start="273:25" pos:end="273:51"><call pos:start="273:25" pos:end="273:51"><name pos:start="273:25" pos:end="273:39">vc1_mc_4mv_luma</name><argument_list pos:start="273:40" pos:end="273:51">(<argument pos:start="273:41" pos:end="273:41"><expr pos:start="273:41" pos:end="273:41"><name pos:start="273:41" pos:end="273:41">v</name></expr></argument>, <argument pos:start="273:44" pos:end="273:44"><expr pos:start="273:44" pos:end="273:44"><name pos:start="273:44" pos:end="273:44">i</name></expr></argument>, <argument pos:start="273:47" pos:end="273:47"><expr pos:start="273:47" pos:end="273:47"><literal type="number" pos:start="273:47" pos:end="273:47">0</literal></expr></argument>, <argument pos:start="273:50" pos:end="273:50"><expr pos:start="273:50" pos:end="273:50"><literal type="number" pos:start="273:50" pos:end="273:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="275:21" pos:end="275:47"><expr pos:start="275:21" pos:end="275:46"><name pos:start="275:21" pos:end="275:31">intra_count</name> <operator pos:start="275:33" pos:end="275:34">+=</operator> <name pos:start="275:36" pos:end="275:46"><name pos:start="275:36" pos:end="275:36">s</name><operator pos:start="275:37" pos:end="275:38">-&gt;</operator><name pos:start="275:39" pos:end="275:46">mb_intra</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:47"><expr pos:start="277:21" pos:end="277:46"><name pos:start="277:21" pos:end="277:31"><name pos:start="277:21" pos:end="277:28">is_intra</name><index pos:start="277:29" pos:end="277:31">[<expr pos:start="277:30" pos:end="277:30"><name pos:start="277:30" pos:end="277:30">i</name></expr>]</index></name>  <operator pos:start="277:34" pos:end="277:34">=</operator> <name pos:start="277:36" pos:end="277:46"><name pos:start="277:36" pos:end="277:36">s</name><operator pos:start="277:37" pos:end="277:38">-&gt;</operator><name pos:start="277:39" pos:end="277:46">mb_intra</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="279:21" pos:end="279:49"><expr pos:start="279:21" pos:end="279:48"><name pos:start="279:21" pos:end="279:31"><name pos:start="279:21" pos:end="279:28">is_coded</name><index pos:start="279:29" pos:end="279:31">[<expr pos:start="279:30" pos:end="279:30"><name pos:start="279:30" pos:end="279:30">i</name></expr>]</index></name>  <operator pos:start="279:34" pos:end="279:34">=</operator> <name pos:start="279:36" pos:end="279:48">mb_has_coeffs</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="283:17" pos:end="289:17"><if pos:start="283:17" pos:end="289:17">if <condition pos:start="283:20" pos:end="283:26">(<expr pos:start="283:21" pos:end="283:25"><name pos:start="283:21" pos:end="283:21">i</name> <operator pos:start="283:23" pos:end="283:23">&amp;</operator> <literal type="number" pos:start="283:25" pos:end="283:25">4</literal></expr>)</condition> <block pos:start="283:28" pos:end="289:17">{<block_content pos:start="285:21" pos:end="287:38">

                    <expr_stmt pos:start="285:21" pos:end="285:53"><expr pos:start="285:21" pos:end="285:52"><name pos:start="285:21" pos:end="285:31"><name pos:start="285:21" pos:end="285:28">is_intra</name><index pos:start="285:29" pos:end="285:31">[<expr pos:start="285:30" pos:end="285:30"><name pos:start="285:30" pos:end="285:30">i</name></expr>]</index></name> <operator pos:start="285:33" pos:end="285:33">=</operator> <operator pos:start="285:35" pos:end="285:35">(</operator><name pos:start="285:36" pos:end="285:46">intra_count</name> <operator pos:start="285:48" pos:end="285:49">&gt;=</operator> <literal type="number" pos:start="285:51" pos:end="285:51">3</literal><operator pos:start="285:52" pos:end="285:52">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="287:21" pos:end="287:38"><expr pos:start="287:21" pos:end="287:37"><name pos:start="287:21" pos:end="287:31"><name pos:start="287:21" pos:end="287:28">is_coded</name><index pos:start="287:29" pos:end="287:31">[<expr pos:start="287:30" pos:end="287:30"><name pos:start="287:30" pos:end="287:30">i</name></expr>]</index></name> <operator pos:start="287:33" pos:end="287:33">=</operator> <name pos:start="287:35" pos:end="287:37">val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="291:17" pos:end="293:44"><if pos:start="291:17" pos:end="293:44">if <condition pos:start="291:20" pos:end="291:27">(<expr pos:start="291:21" pos:end="291:26"><name pos:start="291:21" pos:end="291:21">i</name> <operator pos:start="291:23" pos:end="291:24">==</operator> <literal type="number" pos:start="291:26" pos:end="291:26">4</literal></expr>)</condition><block type="pseudo" pos:start="293:21" pos:end="293:44"><block_content pos:start="293:21" pos:end="293:44">

                    <expr_stmt pos:start="293:21" pos:end="293:44"><expr pos:start="293:21" pos:end="293:43"><call pos:start="293:21" pos:end="293:43"><name pos:start="293:21" pos:end="293:37">vc1_mc_4mv_chroma</name><argument_list pos:start="293:38" pos:end="293:43">(<argument pos:start="293:39" pos:end="293:39"><expr pos:start="293:39" pos:end="293:39"><name pos:start="293:39" pos:end="293:39">v</name></expr></argument>, <argument pos:start="293:42" pos:end="293:42"><expr pos:start="293:42" pos:end="293:42"><literal type="number" pos:start="293:42" pos:end="293:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:63"><expr pos:start="295:17" pos:end="295:62"><name pos:start="295:17" pos:end="295:48"><name pos:start="295:17" pos:end="295:17">v</name><operator pos:start="295:18" pos:end="295:19">-&gt;</operator><name pos:start="295:20" pos:end="295:26">mb_type</name><index pos:start="295:27" pos:end="295:29">[<expr pos:start="295:28" pos:end="295:28"><literal type="number" pos:start="295:28" pos:end="295:28">0</literal></expr>]</index><index pos:start="295:30" pos:end="295:48">[<expr pos:start="295:31" pos:end="295:47"><name pos:start="295:31" pos:end="295:47"><name pos:start="295:31" pos:end="295:31">s</name><operator pos:start="295:32" pos:end="295:33">-&gt;</operator><name pos:start="295:34" pos:end="295:44">block_index</name><index pos:start="295:45" pos:end="295:47">[<expr pos:start="295:46" pos:end="295:46"><name pos:start="295:46" pos:end="295:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="295:50" pos:end="295:50">=</operator> <name pos:start="295:52" pos:end="295:62"><name pos:start="295:52" pos:end="295:59">is_intra</name><index pos:start="295:60" pos:end="295:62">[<expr pos:start="295:61" pos:end="295:61"><name pos:start="295:61" pos:end="295:61">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="297:17" pos:end="299:62"><if pos:start="297:17" pos:end="299:62">if <condition pos:start="297:20" pos:end="297:33">(<expr pos:start="297:21" pos:end="297:32"><operator pos:start="297:21" pos:end="297:21">!</operator><name pos:start="297:22" pos:end="297:32">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="299:21" pos:end="299:62"><block_content pos:start="299:21" pos:end="299:62">

                    <expr_stmt pos:start="299:21" pos:end="299:62"><expr pos:start="299:21" pos:end="299:61"><name pos:start="299:21" pos:end="299:31">coded_inter</name> <operator pos:start="299:33" pos:end="299:33">=</operator> <operator pos:start="299:35" pos:end="299:35">!</operator><name pos:start="299:36" pos:end="299:46"><name pos:start="299:36" pos:end="299:43">is_intra</name><index pos:start="299:44" pos:end="299:46">[<expr pos:start="299:45" pos:end="299:45"><name pos:start="299:45" pos:end="299:45">i</name></expr>]</index></name> <operator pos:start="299:48" pos:end="299:49">&amp;&amp;</operator> <name pos:start="299:51" pos:end="299:61"><name pos:start="299:51" pos:end="299:58">is_coded</name><index pos:start="299:59" pos:end="299:61">[<expr pos:start="299:60" pos:end="299:60"><name pos:start="299:60" pos:end="299:60">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <comment type="line" pos:start="303:13" pos:end="303:71">// if there are no coded blocks then don't do anything more</comment>

            <expr_stmt pos:start="305:13" pos:end="305:24"><expr pos:start="305:13" pos:end="305:23"><name pos:start="305:13" pos:end="305:19">dst_idx</name> <operator pos:start="305:21" pos:end="305:21">=</operator> <literal type="number" pos:start="305:23" pos:end="305:23">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="307:13" pos:end="309:25"><if pos:start="307:13" pos:end="309:25">if <condition pos:start="307:16" pos:end="307:45">(<expr pos:start="307:17" pos:end="307:44"><operator pos:start="307:17" pos:end="307:17">!</operator><name pos:start="307:18" pos:end="307:28">intra_count</name> <operator pos:start="307:30" pos:end="307:31">&amp;&amp;</operator> <operator pos:start="307:33" pos:end="307:33">!</operator><name pos:start="307:34" pos:end="307:44">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="309:17" pos:end="309:25"><block_content pos:start="309:17" pos:end="309:25">

                <goto pos:start="309:17" pos:end="309:25">goto <name pos:start="309:22" pos:end="309:24">end</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:25"><expr pos:start="311:13" pos:end="311:24"><call pos:start="311:13" pos:end="311:24"><name pos:start="311:13" pos:end="311:22">GET_MQUANT</name><argument_list pos:start="311:23" pos:end="311:24">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:61"><expr pos:start="313:13" pos:end="313:60"><name pos:start="313:13" pos:end="313:51"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:30">current_picture</name><operator pos:start="313:31" pos:end="313:31">.</operator><name pos:start="313:32" pos:end="313:43">qscale_table</name><index pos:start="313:44" pos:end="313:51">[<expr pos:start="313:45" pos:end="313:50"><name pos:start="313:45" pos:end="313:50">mb_pos</name></expr>]</index></name> <operator pos:start="313:53" pos:end="313:53">=</operator> <name pos:start="313:55" pos:end="313:60">mquant</name></expr>;</expr_stmt>

            <comment type="block" pos:start="315:13" pos:end="315:53">/* test if block is intra and has pred */</comment>

            <block pos:start="317:13" pos:end="345:13">{<block_content pos:start="319:17" pos:end="343:35">

                <decl_stmt pos:start="319:17" pos:end="319:34"><decl pos:start="319:17" pos:end="319:33"><type pos:start="319:17" pos:end="319:19"><name pos:start="319:17" pos:end="319:19">int</name></type> <name pos:start="319:21" pos:end="319:29">intrapred</name> <init pos:start="319:31" pos:end="319:33">= <expr pos:start="319:33" pos:end="319:33"><literal type="number" pos:start="319:33" pos:end="319:33">0</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="321:17" pos:end="335:21">for <control pos:start="321:21" pos:end="321:39">(<init pos:start="321:22" pos:end="321:27"><expr pos:start="321:22" pos:end="321:26"><name pos:start="321:22" pos:end="321:22">i</name> <operator pos:start="321:24" pos:end="321:24">=</operator> <literal type="number" pos:start="321:26" pos:end="321:26">0</literal></expr>;</init> <condition pos:start="321:29" pos:end="321:34"><expr pos:start="321:29" pos:end="321:33"><name pos:start="321:29" pos:end="321:29">i</name> <operator pos:start="321:31" pos:end="321:31">&lt;</operator> <literal type="number" pos:start="321:33" pos:end="321:33">6</literal></expr>;</condition> <incr pos:start="321:36" pos:end="321:38"><expr pos:start="321:36" pos:end="321:38"><name pos:start="321:36" pos:end="321:36">i</name><operator pos:start="321:37" pos:end="321:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="323:21" pos:end="335:21"><block_content pos:start="323:21" pos:end="335:21">

                    <if_stmt pos:start="323:21" pos:end="335:21"><if pos:start="323:21" pos:end="335:21">if <condition pos:start="323:24" pos:end="323:36">(<expr pos:start="323:25" pos:end="323:35"><name pos:start="323:25" pos:end="323:35"><name pos:start="323:25" pos:end="323:32">is_intra</name><index pos:start="323:33" pos:end="323:35">[<expr pos:start="323:34" pos:end="323:34"><name pos:start="323:34" pos:end="323:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="323:38" pos:end="335:21">{<block_content pos:start="325:25" pos:end="333:25">

                        <if_stmt pos:start="325:25" pos:end="333:25"><if pos:start="325:25" pos:end="333:25">if <condition pos:start="325:28" pos:end="327:105">(<expr pos:start="325:29" pos:end="327:104"><operator pos:start="325:29" pos:end="325:29">(</operator><operator pos:start="325:30" pos:end="325:30">(</operator><operator pos:start="325:31" pos:end="325:31">!</operator><name pos:start="325:32" pos:end="325:50"><name pos:start="325:32" pos:end="325:32">s</name><operator pos:start="325:33" pos:end="325:34">-&gt;</operator><name pos:start="325:35" pos:end="325:50">first_slice_line</name></name> <operator pos:start="325:52" pos:end="325:53">||</operator> <operator pos:start="325:55" pos:end="325:55">(</operator><name pos:start="325:56" pos:end="325:56">i</name> <operator pos:start="325:58" pos:end="325:59">==</operator> <literal type="number" pos:start="325:61" pos:end="325:61">2</literal> <operator pos:start="325:63" pos:end="325:64">||</operator> <name pos:start="325:66" pos:end="325:66">i</name> <operator pos:start="325:68" pos:end="325:69">==</operator> <literal type="number" pos:start="325:71" pos:end="325:71">3</literal><operator pos:start="325:72" pos:end="325:72">)</operator><operator pos:start="325:73" pos:end="325:73">)</operator> <operator pos:start="325:75" pos:end="325:76">&amp;&amp;</operator> <name pos:start="325:78" pos:end="325:128"><name pos:start="325:78" pos:end="325:78">v</name><operator pos:start="325:79" pos:end="325:80">-&gt;</operator><name pos:start="325:81" pos:end="325:87">mb_type</name><index pos:start="325:88" pos:end="325:90">[<expr pos:start="325:89" pos:end="325:89"><literal type="number" pos:start="325:89" pos:end="325:89">0</literal></expr>]</index><index pos:start="325:91" pos:end="325:128">[<expr pos:start="325:92" pos:end="325:127"><name pos:start="325:92" pos:end="325:108"><name pos:start="325:92" pos:end="325:92">s</name><operator pos:start="325:93" pos:end="325:94">-&gt;</operator><name pos:start="325:95" pos:end="325:105">block_index</name><index pos:start="325:106" pos:end="325:108">[<expr pos:start="325:107" pos:end="325:107"><name pos:start="325:107" pos:end="325:107">i</name></expr>]</index></name> <operator pos:start="325:110" pos:end="325:110">-</operator> <name pos:start="325:112" pos:end="325:127"><name pos:start="325:112" pos:end="325:112">s</name><operator pos:start="325:113" pos:end="325:114">-&gt;</operator><name pos:start="325:115" pos:end="325:124">block_wrap</name><index pos:start="325:125" pos:end="325:127">[<expr pos:start="325:126" pos:end="325:126"><name pos:start="325:126" pos:end="325:126">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="325:129" pos:end="325:129">)</operator>

                            <operator pos:start="327:29" pos:end="327:30">||</operator> <operator pos:start="327:32" pos:end="327:32">(</operator><operator pos:start="327:33" pos:end="327:33">(</operator><name pos:start="327:34" pos:end="327:40"><name pos:start="327:34" pos:end="327:34">s</name><operator pos:start="327:35" pos:end="327:36">-&gt;</operator><name pos:start="327:37" pos:end="327:40">mb_x</name></name> <operator pos:start="327:42" pos:end="327:43">||</operator> <operator pos:start="327:45" pos:end="327:45">(</operator><name pos:start="327:46" pos:end="327:46">i</name> <operator pos:start="327:48" pos:end="327:49">==</operator> <literal type="number" pos:start="327:51" pos:end="327:51">1</literal> <operator pos:start="327:53" pos:end="327:54">||</operator> <name pos:start="327:56" pos:end="327:56">i</name> <operator pos:start="327:58" pos:end="327:59">==</operator> <literal type="number" pos:start="327:61" pos:end="327:61">3</literal><operator pos:start="327:62" pos:end="327:62">)</operator><operator pos:start="327:63" pos:end="327:63">)</operator> <operator pos:start="327:65" pos:end="327:66">&amp;&amp;</operator> <name pos:start="327:68" pos:end="327:103"><name pos:start="327:68" pos:end="327:68">v</name><operator pos:start="327:69" pos:end="327:70">-&gt;</operator><name pos:start="327:71" pos:end="327:77">mb_type</name><index pos:start="327:78" pos:end="327:80">[<expr pos:start="327:79" pos:end="327:79"><literal type="number" pos:start="327:79" pos:end="327:79">0</literal></expr>]</index><index pos:start="327:81" pos:end="327:103">[<expr pos:start="327:82" pos:end="327:102"><name pos:start="327:82" pos:end="327:98"><name pos:start="327:82" pos:end="327:82">s</name><operator pos:start="327:83" pos:end="327:84">-&gt;</operator><name pos:start="327:85" pos:end="327:95">block_index</name><index pos:start="327:96" pos:end="327:98">[<expr pos:start="327:97" pos:end="327:97"><name pos:start="327:97" pos:end="327:97">i</name></expr>]</index></name> <operator pos:start="327:100" pos:end="327:100">-</operator> <literal type="number" pos:start="327:102" pos:end="327:102">1</literal></expr>]</index></name><operator pos:start="327:104" pos:end="327:104">)</operator></expr>)</condition> <block pos:start="327:107" pos:end="333:25">{<block_content pos:start="329:29" pos:end="331:34">

                            <expr_stmt pos:start="329:29" pos:end="329:42"><expr pos:start="329:29" pos:end="329:41"><name pos:start="329:29" pos:end="329:37">intrapred</name> <operator pos:start="329:39" pos:end="329:39">=</operator> <literal type="number" pos:start="329:41" pos:end="329:41">1</literal></expr>;</expr_stmt>

                            <break pos:start="331:29" pos:end="331:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <if_stmt pos:start="337:17" pos:end="343:35"><if pos:start="337:17" pos:end="339:47">if <condition pos:start="337:20" pos:end="337:30">(<expr pos:start="337:21" pos:end="337:29"><name pos:start="337:21" pos:end="337:29">intrapred</name></expr>)</condition><block type="pseudo" pos:start="339:21" pos:end="339:47"><block_content pos:start="339:21" pos:end="339:47">

                    <expr_stmt pos:start="339:21" pos:end="339:47"><expr pos:start="339:21" pos:end="339:46"><name pos:start="339:21" pos:end="339:30"><name pos:start="339:21" pos:end="339:21">s</name><operator pos:start="339:22" pos:end="339:23">-&gt;</operator><name pos:start="339:24" pos:end="339:30">ac_pred</name></name> <operator pos:start="339:32" pos:end="339:32">=</operator> <call pos:start="339:34" pos:end="339:46"><name pos:start="339:34" pos:end="339:42">get_bits1</name><argument_list pos:start="339:43" pos:end="339:46">(<argument pos:start="339:44" pos:end="339:45"><expr pos:start="339:44" pos:end="339:45"><name pos:start="339:44" pos:end="339:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="341:17" pos:end="343:35">else<block type="pseudo" pos:start="343:21" pos:end="343:35"><block_content pos:start="343:21" pos:end="343:35">

                    <expr_stmt pos:start="343:21" pos:end="343:35"><expr pos:start="343:21" pos:end="343:34"><name pos:start="343:21" pos:end="343:30"><name pos:start="343:21" pos:end="343:21">s</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:30">ac_pred</name></name> <operator pos:start="343:32" pos:end="343:32">=</operator> <literal type="number" pos:start="343:34" pos:end="343:34">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block>

            <if_stmt pos:start="347:13" pos:end="349:94"><if pos:start="347:13" pos:end="349:94">if <condition pos:start="347:16" pos:end="347:41">(<expr pos:start="347:17" pos:end="347:40"><operator pos:start="347:17" pos:end="347:17">!</operator><name pos:start="347:18" pos:end="347:25"><name pos:start="347:18" pos:end="347:18">v</name><operator pos:start="347:19" pos:end="347:20">-&gt;</operator><name pos:start="347:21" pos:end="347:25">ttmbf</name></name> <operator pos:start="347:27" pos:end="347:28">&amp;&amp;</operator> <name pos:start="347:30" pos:end="347:40">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="349:17" pos:end="349:94"><block_content pos:start="349:17" pos:end="349:94">

                <expr_stmt pos:start="349:17" pos:end="349:94"><expr pos:start="349:17" pos:end="349:93"><name pos:start="349:17" pos:end="349:20">ttmb</name> <operator pos:start="349:22" pos:end="349:22">=</operator> <call pos:start="349:24" pos:end="349:93"><name pos:start="349:24" pos:end="349:31">get_vlc2</name><argument_list pos:start="349:32" pos:end="349:93">(<argument pos:start="349:33" pos:end="349:34"><expr pos:start="349:33" pos:end="349:34"><name pos:start="349:33" pos:end="349:34">gb</name></expr></argument>, <argument pos:start="349:37" pos:end="349:70"><expr pos:start="349:37" pos:end="349:70"><name pos:start="349:37" pos:end="349:64"><name pos:start="349:37" pos:end="349:51">ff_vc1_ttmb_vlc</name><index pos:start="349:52" pos:end="349:64">[<expr pos:start="349:53" pos:end="349:63"><name pos:start="349:53" pos:end="349:63"><name pos:start="349:53" pos:end="349:53">v</name><operator pos:start="349:54" pos:end="349:55">-&gt;</operator><name pos:start="349:56" pos:end="349:63">tt_index</name></name></expr>]</index></name><operator pos:start="349:65" pos:end="349:65">.</operator><name pos:start="349:66" pos:end="349:70">table</name></expr></argument>, <argument pos:start="349:73" pos:end="349:89"><expr pos:start="349:73" pos:end="349:89"><name pos:start="349:73" pos:end="349:89">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="349:92" pos:end="349:92"><expr pos:start="349:92" pos:end="349:92"><literal type="number" pos:start="349:92" pos:end="349:92">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="351:13" pos:end="437:13">for <control pos:start="351:17" pos:end="351:35">(<init pos:start="351:18" pos:end="351:23"><expr pos:start="351:18" pos:end="351:22"><name pos:start="351:18" pos:end="351:18">i</name> <operator pos:start="351:20" pos:end="351:20">=</operator> <literal type="number" pos:start="351:22" pos:end="351:22">0</literal></expr>;</init> <condition pos:start="351:25" pos:end="351:30"><expr pos:start="351:25" pos:end="351:29"><name pos:start="351:25" pos:end="351:25">i</name> <operator pos:start="351:27" pos:end="351:27">&lt;</operator> <literal type="number" pos:start="351:29" pos:end="351:29">6</literal></expr>;</condition> <incr pos:start="351:32" pos:end="351:34"><expr pos:start="351:32" pos:end="351:34"><name pos:start="351:32" pos:end="351:32">i</name><operator pos:start="351:33" pos:end="351:34">++</operator></expr></incr>)</control> <block pos:start="351:37" pos:end="437:13">{<block_content pos:start="353:17" pos:end="435:17">

                <expr_stmt pos:start="353:17" pos:end="353:37"><expr pos:start="353:17" pos:end="353:36"><name pos:start="353:17" pos:end="353:23">dst_idx</name>    <operator pos:start="353:28" pos:end="353:29">+=</operator> <name pos:start="353:31" pos:end="353:31">i</name> <operator pos:start="353:33" pos:end="353:34">&gt;&gt;</operator> <literal type="number" pos:start="353:36" pos:end="353:36">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:86"><expr pos:start="355:17" pos:end="355:85"><name pos:start="355:17" pos:end="355:19">off</name>         <operator pos:start="355:29" pos:end="355:29">=</operator> <ternary pos:start="355:31" pos:end="355:85"><condition pos:start="355:31" pos:end="355:39"><expr pos:start="355:31" pos:end="355:37"><operator pos:start="355:31" pos:end="355:31">(</operator><name pos:start="355:32" pos:end="355:32">i</name> <operator pos:start="355:34" pos:end="355:34">&amp;</operator> <literal type="number" pos:start="355:36" pos:end="355:36">4</literal><operator pos:start="355:37" pos:end="355:37">)</operator></expr> ?</condition><then pos:start="355:41" pos:end="355:41"> <expr pos:start="355:41" pos:end="355:41"><literal type="number" pos:start="355:41" pos:end="355:41">0</literal></expr> </then><else pos:start="355:43" pos:end="355:85">: <expr pos:start="355:45" pos:end="355:85"><operator pos:start="355:45" pos:end="355:45">(</operator><operator pos:start="355:46" pos:end="355:46">(</operator><name pos:start="355:47" pos:end="355:47">i</name> <operator pos:start="355:49" pos:end="355:49">&amp;</operator> <literal type="number" pos:start="355:51" pos:end="355:51">1</literal><operator pos:start="355:52" pos:end="355:52">)</operator> <operator pos:start="355:54" pos:end="355:54">*</operator> <literal type="number" pos:start="355:56" pos:end="355:58">8</literal> <operator pos:start="355:58" pos:end="355:58">+</operator> <operator pos:start="355:60" pos:end="355:60">(</operator><name pos:start="355:61" pos:end="355:61">i</name> <operator pos:start="355:63" pos:end="355:63">&amp;</operator> <literal type="number" pos:start="355:65" pos:end="355:65">2</literal><operator pos:start="355:66" pos:end="355:66">)</operator> <operator pos:start="355:68" pos:end="355:68">*</operator> <literal type="number" pos:start="355:70" pos:end="355:70">4</literal> <operator pos:start="355:72" pos:end="355:72">*</operator> <name pos:start="355:74" pos:end="355:84"><name pos:start="355:74" pos:end="355:74">s</name><operator pos:start="355:75" pos:end="355:76">-&gt;</operator><name pos:start="355:77" pos:end="355:84">linesize</name></name><operator pos:start="355:85" pos:end="355:85">)</operator></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:42"><expr pos:start="357:17" pos:end="357:41"><name pos:start="357:17" pos:end="357:27"><name pos:start="357:17" pos:end="357:17">s</name><operator pos:start="357:18" pos:end="357:19">-&gt;</operator><name pos:start="357:20" pos:end="357:27">mb_intra</name></name> <operator pos:start="357:29" pos:end="357:29">=</operator> <name pos:start="357:31" pos:end="357:41"><name pos:start="357:31" pos:end="357:38">is_intra</name><index pos:start="357:39" pos:end="357:41">[<expr pos:start="357:40" pos:end="357:40"><name pos:start="357:40" pos:end="357:40">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="359:17" pos:end="435:17"><if pos:start="359:17" pos:end="415:17">if <condition pos:start="359:20" pos:end="359:32">(<expr pos:start="359:21" pos:end="359:31"><name pos:start="359:21" pos:end="359:31"><name pos:start="359:21" pos:end="359:28">is_intra</name><index pos:start="359:29" pos:end="359:31">[<expr pos:start="359:30" pos:end="359:30"><name pos:start="359:30" pos:end="359:30">i</name></expr>]</index></name></expr>)</condition> <block pos:start="359:34" pos:end="415:17">{<block_content pos:start="363:21" pos:end="413:42">

                    <comment type="block" pos:start="361:21" pos:end="361:74">/* check if prediction blocks A and C are available */</comment>

                    <expr_stmt pos:start="363:21" pos:end="363:48"><expr pos:start="363:21" pos:end="363:47"><name pos:start="363:21" pos:end="363:30"><name pos:start="363:21" pos:end="363:21">v</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:30">a_avail</name></name> <operator pos:start="363:32" pos:end="363:32">=</operator> <name pos:start="363:34" pos:end="363:43"><name pos:start="363:34" pos:end="363:34">v</name><operator pos:start="363:35" pos:end="363:36">-&gt;</operator><name pos:start="363:37" pos:end="363:43">c_avail</name></name> <operator pos:start="363:45" pos:end="363:45">=</operator> <literal type="number" pos:start="363:47" pos:end="363:47">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="365:21" pos:end="367:89"><if pos:start="365:21" pos:end="367:89">if <condition pos:start="365:24" pos:end="365:65">(<expr pos:start="365:25" pos:end="365:64"><name pos:start="365:25" pos:end="365:25">i</name> <operator pos:start="365:27" pos:end="365:28">==</operator> <literal type="number" pos:start="365:30" pos:end="365:30">2</literal> <operator pos:start="365:32" pos:end="365:33">||</operator> <name pos:start="365:35" pos:end="365:35">i</name> <operator pos:start="365:37" pos:end="365:38">==</operator> <literal type="number" pos:start="365:40" pos:end="365:40">3</literal> <operator pos:start="365:42" pos:end="365:43">||</operator> <operator pos:start="365:45" pos:end="365:45">!</operator><name pos:start="365:46" pos:end="365:64"><name pos:start="365:46" pos:end="365:46">s</name><operator pos:start="365:47" pos:end="365:48">-&gt;</operator><name pos:start="365:49" pos:end="365:64">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="367:25" pos:end="367:89"><block_content pos:start="367:25" pos:end="367:89">

                        <expr_stmt pos:start="367:25" pos:end="367:89"><expr pos:start="367:25" pos:end="367:88"><name pos:start="367:25" pos:end="367:34"><name pos:start="367:25" pos:end="367:25">v</name><operator pos:start="367:26" pos:end="367:27">-&gt;</operator><name pos:start="367:28" pos:end="367:34">a_avail</name></name> <operator pos:start="367:36" pos:end="367:36">=</operator> <name pos:start="367:38" pos:end="367:88"><name pos:start="367:38" pos:end="367:38">v</name><operator pos:start="367:39" pos:end="367:40">-&gt;</operator><name pos:start="367:41" pos:end="367:47">mb_type</name><index pos:start="367:48" pos:end="367:50">[<expr pos:start="367:49" pos:end="367:49"><literal type="number" pos:start="367:49" pos:end="367:49">0</literal></expr>]</index><index pos:start="367:51" pos:end="367:88">[<expr pos:start="367:52" pos:end="367:87"><name pos:start="367:52" pos:end="367:68"><name pos:start="367:52" pos:end="367:52">s</name><operator pos:start="367:53" pos:end="367:54">-&gt;</operator><name pos:start="367:55" pos:end="367:65">block_index</name><index pos:start="367:66" pos:end="367:68">[<expr pos:start="367:67" pos:end="367:67"><name pos:start="367:67" pos:end="367:67">i</name></expr>]</index></name> <operator pos:start="367:70" pos:end="367:70">-</operator> <name pos:start="367:72" pos:end="367:87"><name pos:start="367:72" pos:end="367:72">s</name><operator pos:start="367:73" pos:end="367:74">-&gt;</operator><name pos:start="367:75" pos:end="367:84">block_wrap</name><index pos:start="367:85" pos:end="367:87">[<expr pos:start="367:86" pos:end="367:86"><name pos:start="367:86" pos:end="367:86">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="369:21" pos:end="371:74"><if pos:start="369:21" pos:end="371:74">if <condition pos:start="369:24" pos:end="369:52">(<expr pos:start="369:25" pos:end="369:51"><name pos:start="369:25" pos:end="369:25">i</name> <operator pos:start="369:27" pos:end="369:28">==</operator> <literal type="number" pos:start="369:30" pos:end="369:30">1</literal> <operator pos:start="369:32" pos:end="369:33">||</operator> <name pos:start="369:35" pos:end="369:35">i</name> <operator pos:start="369:37" pos:end="369:38">==</operator> <literal type="number" pos:start="369:40" pos:end="369:40">3</literal> <operator pos:start="369:42" pos:end="369:43">||</operator> <name pos:start="369:45" pos:end="369:51"><name pos:start="369:45" pos:end="369:45">s</name><operator pos:start="369:46" pos:end="369:47">-&gt;</operator><name pos:start="369:48" pos:end="369:51">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="371:25" pos:end="371:74"><block_content pos:start="371:25" pos:end="371:74">

                        <expr_stmt pos:start="371:25" pos:end="371:74"><expr pos:start="371:25" pos:end="371:73"><name pos:start="371:25" pos:end="371:34"><name pos:start="371:25" pos:end="371:25">v</name><operator pos:start="371:26" pos:end="371:27">-&gt;</operator><name pos:start="371:28" pos:end="371:34">c_avail</name></name> <operator pos:start="371:36" pos:end="371:36">=</operator> <name pos:start="371:38" pos:end="371:73"><name pos:start="371:38" pos:end="371:38">v</name><operator pos:start="371:39" pos:end="371:40">-&gt;</operator><name pos:start="371:41" pos:end="371:47">mb_type</name><index pos:start="371:48" pos:end="371:50">[<expr pos:start="371:49" pos:end="371:49"><literal type="number" pos:start="371:49" pos:end="371:49">0</literal></expr>]</index><index pos:start="371:51" pos:end="371:73">[<expr pos:start="371:52" pos:end="371:72"><name pos:start="371:52" pos:end="371:68"><name pos:start="371:52" pos:end="371:52">s</name><operator pos:start="371:53" pos:end="371:54">-&gt;</operator><name pos:start="371:55" pos:end="371:65">block_index</name><index pos:start="371:66" pos:end="371:68">[<expr pos:start="371:67" pos:end="371:67"><name pos:start="371:67" pos:end="371:67">i</name></expr>]</index></name> <operator pos:start="371:70" pos:end="371:70">-</operator> <literal type="number" pos:start="371:72" pos:end="371:72">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="375:21" pos:end="377:83"><expr pos:start="375:21" pos:end="377:82"><call pos:start="375:21" pos:end="377:82"><name pos:start="375:21" pos:end="375:42">vc1_decode_intra_block</name><argument_list pos:start="375:43" pos:end="377:82">(<argument pos:start="375:44" pos:end="375:44"><expr pos:start="375:44" pos:end="375:44"><name pos:start="375:44" pos:end="375:44">v</name></expr></argument>, <argument pos:start="375:47" pos:end="375:57"><expr pos:start="375:47" pos:end="375:57"><name pos:start="375:47" pos:end="375:57"><name pos:start="375:47" pos:end="375:47">s</name><operator pos:start="375:48" pos:end="375:49">-&gt;</operator><name pos:start="375:50" pos:end="375:54">block</name><index pos:start="375:55" pos:end="375:57">[<expr pos:start="375:56" pos:end="375:56"><name pos:start="375:56" pos:end="375:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="375:60" pos:end="375:60"><expr pos:start="375:60" pos:end="375:60"><name pos:start="375:60" pos:end="375:60">i</name></expr></argument>, <argument pos:start="375:63" pos:end="375:73"><expr pos:start="375:63" pos:end="375:73"><name pos:start="375:63" pos:end="375:73"><name pos:start="375:63" pos:end="375:70">is_coded</name><index pos:start="375:71" pos:end="375:73">[<expr pos:start="375:72" pos:end="375:72"><name pos:start="375:72" pos:end="375:72">i</name></expr>]</index></name></expr></argument>, <argument pos:start="375:76" pos:end="375:81"><expr pos:start="375:76" pos:end="375:81"><name pos:start="375:76" pos:end="375:81">mquant</name></expr></argument>,

                                           <argument pos:start="377:44" pos:end="377:81"><expr pos:start="377:44" pos:end="377:81"><ternary pos:start="377:44" pos:end="377:81"><condition pos:start="377:44" pos:end="377:52"><expr pos:start="377:44" pos:end="377:50"><operator pos:start="377:44" pos:end="377:44">(</operator><name pos:start="377:45" pos:end="377:45">i</name> <operator pos:start="377:47" pos:end="377:47">&amp;</operator> <literal type="number" pos:start="377:49" pos:end="377:49">4</literal><operator pos:start="377:50" pos:end="377:50">)</operator></expr> ?</condition><then pos:start="377:54" pos:end="377:66"> <expr pos:start="377:54" pos:end="377:66"><name pos:start="377:54" pos:end="377:66"><name pos:start="377:54" pos:end="377:54">v</name><operator pos:start="377:55" pos:end="377:56">-&gt;</operator><name pos:start="377:57" pos:end="377:66">codingset2</name></name></expr> </then><else pos:start="377:68" pos:end="377:81">: <expr pos:start="377:70" pos:end="377:81"><name pos:start="377:70" pos:end="377:81"><name pos:start="377:70" pos:end="377:70">v</name><operator pos:start="377:71" pos:end="377:72">-&gt;</operator><name pos:start="377:73" pos:end="377:81">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="379:21" pos:end="381:33"><if pos:start="379:21" pos:end="381:33">if <condition pos:start="379:24" pos:end="379:62">(<expr pos:start="379:25" pos:end="379:61"><operator pos:start="379:25" pos:end="379:25">(</operator><name pos:start="379:26" pos:end="379:26">i</name><operator pos:start="379:27" pos:end="379:27">&gt;</operator><literal type="number" pos:start="379:28" pos:end="379:28">3</literal><operator pos:start="379:29" pos:end="379:29">)</operator> <operator pos:start="379:31" pos:end="379:32">&amp;&amp;</operator> <operator pos:start="379:34" pos:end="379:34">(</operator><name pos:start="379:35" pos:end="379:42"><name pos:start="379:35" pos:end="379:35">s</name><operator pos:start="379:36" pos:end="379:37">-&gt;</operator><name pos:start="379:38" pos:end="379:42">flags</name></name> <operator pos:start="379:44" pos:end="379:44">&amp;</operator> <name pos:start="379:46" pos:end="379:60">CODEC_FLAG_GRAY</name><operator pos:start="379:61" pos:end="379:61">)</operator></expr>)</condition><block type="pseudo" pos:start="381:25" pos:end="381:33"><block_content pos:start="381:25" pos:end="381:33">

                        <continue pos:start="381:25" pos:end="381:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="383:21" pos:end="383:61"><expr pos:start="383:21" pos:end="383:60"><call pos:start="383:21" pos:end="383:60"><name pos:start="383:21" pos:end="383:47"><name pos:start="383:21" pos:end="383:21">v</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:29">vc1dsp</name><operator pos:start="383:30" pos:end="383:30">.</operator><name pos:start="383:31" pos:end="383:47">vc1_inv_trans_8x8</name></name><argument_list pos:start="383:48" pos:end="383:60">(<argument pos:start="383:49" pos:end="383:59"><expr pos:start="383:49" pos:end="383:59"><name pos:start="383:49" pos:end="383:59"><name pos:start="383:49" pos:end="383:49">s</name><operator pos:start="383:50" pos:end="383:51">-&gt;</operator><name pos:start="383:52" pos:end="383:56">block</name><index pos:start="383:57" pos:end="383:59">[<expr pos:start="383:58" pos:end="383:58"><name pos:start="383:58" pos:end="383:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="385:21" pos:end="389:49"><if pos:start="385:21" pos:end="389:49">if <condition pos:start="385:24" pos:end="385:39">(<expr pos:start="385:25" pos:end="385:38"><name pos:start="385:25" pos:end="385:38"><name pos:start="385:25" pos:end="385:25">v</name><operator pos:start="385:26" pos:end="385:27">-&gt;</operator><name pos:start="385:28" pos:end="385:38">rangeredfrm</name></name></expr>)</condition><block type="pseudo" pos:start="387:25" pos:end="389:49"><block_content pos:start="387:25" pos:end="389:49">

                        <for pos:start="387:25" pos:end="389:49">for <control pos:start="387:29" pos:end="387:48">(<init pos:start="387:30" pos:end="387:35"><expr pos:start="387:30" pos:end="387:34"><name pos:start="387:30" pos:end="387:30">j</name> <operator pos:start="387:32" pos:end="387:32">=</operator> <literal type="number" pos:start="387:34" pos:end="387:34">0</literal></expr>;</init> <condition pos:start="387:37" pos:end="387:43"><expr pos:start="387:37" pos:end="387:42"><name pos:start="387:37" pos:end="387:37">j</name> <operator pos:start="387:39" pos:end="387:39">&lt;</operator> <literal type="number" pos:start="387:41" pos:end="387:42">64</literal></expr>;</condition> <incr pos:start="387:45" pos:end="387:47"><expr pos:start="387:45" pos:end="387:47"><name pos:start="387:45" pos:end="387:45">j</name><operator pos:start="387:46" pos:end="387:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="389:29" pos:end="389:49"><block_content pos:start="389:29" pos:end="389:49">

                            <expr_stmt pos:start="389:29" pos:end="389:49"><expr pos:start="389:29" pos:end="389:48"><name pos:start="389:29" pos:end="389:42"><name pos:start="389:29" pos:end="389:29">s</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:36">block</name><index pos:start="389:37" pos:end="389:39">[<expr pos:start="389:38" pos:end="389:38"><name pos:start="389:38" pos:end="389:38">i</name></expr>]</index><index pos:start="389:40" pos:end="389:42">[<expr pos:start="389:41" pos:end="389:41"><name pos:start="389:41" pos:end="389:41">j</name></expr>]</index></name> <operator pos:start="389:44" pos:end="389:46">&lt;&lt;=</operator> <literal type="number" pos:start="389:48" pos:end="389:48">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="391:21" pos:end="397:77"><expr pos:start="391:21" pos:end="397:76"><call pos:start="391:21" pos:end="397:76"><name pos:start="391:21" pos:end="391:53"><name pos:start="391:21" pos:end="391:21">s</name><operator pos:start="391:22" pos:end="391:23">-&gt;</operator><name pos:start="391:24" pos:end="391:27">idsp</name><operator pos:start="391:28" pos:end="391:28">.</operator><name pos:start="391:29" pos:end="391:53">put_signed_pixels_clamped</name></name><argument_list pos:start="391:54" pos:end="397:76">(<argument pos:start="391:55" pos:end="391:65"><expr pos:start="391:55" pos:end="391:65"><name pos:start="391:55" pos:end="391:65"><name pos:start="391:55" pos:end="391:55">s</name><operator pos:start="391:56" pos:end="391:57">-&gt;</operator><name pos:start="391:58" pos:end="391:62">block</name><index pos:start="391:63" pos:end="391:65">[<expr pos:start="391:64" pos:end="391:64"><name pos:start="391:64" pos:end="391:64">i</name></expr>]</index></name></expr></argument>,

                                                      <argument pos:start="393:55" pos:end="393:76"><expr pos:start="393:55" pos:end="393:76"><name pos:start="393:55" pos:end="393:70"><name pos:start="393:55" pos:end="393:55">s</name><operator pos:start="393:56" pos:end="393:57">-&gt;</operator><name pos:start="393:58" pos:end="393:61">dest</name><index pos:start="393:62" pos:end="393:70">[<expr pos:start="393:63" pos:end="393:69"><name pos:start="393:63" pos:end="393:69">dst_idx</name></expr>]</index></name> <operator pos:start="393:72" pos:end="393:72">+</operator> <name pos:start="393:74" pos:end="393:76">off</name></expr></argument>,

                                                      <argument pos:start="395:55" pos:end="397:75"><expr pos:start="395:55" pos:end="397:75"><ternary pos:start="395:55" pos:end="397:75"><condition pos:start="395:55" pos:end="395:63"><expr pos:start="395:55" pos:end="395:61"><operator pos:start="395:55" pos:end="395:55">(</operator><name pos:start="395:56" pos:end="395:56">i</name> <operator pos:start="395:58" pos:end="395:58">&amp;</operator> <literal type="number" pos:start="395:60" pos:end="395:60">4</literal><operator pos:start="395:61" pos:end="395:61">)</operator></expr> ?</condition><then pos:start="395:65" pos:end="395:77"> <expr pos:start="395:65" pos:end="395:77"><name pos:start="395:65" pos:end="395:77"><name pos:start="395:65" pos:end="395:65">s</name><operator pos:start="395:66" pos:end="395:67">-&gt;</operator><name pos:start="395:68" pos:end="395:77">uvlinesize</name></name></expr>

                                                              </then><else pos:start="397:63" pos:end="397:75">: <expr pos:start="397:65" pos:end="397:75"><name pos:start="397:65" pos:end="397:75"><name pos:start="397:65" pos:end="397:65">s</name><operator pos:start="397:66" pos:end="397:67">-&gt;</operator><name pos:start="397:68" pos:end="397:75">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="399:21" pos:end="409:21"><if pos:start="399:21" pos:end="409:21">if <condition pos:start="399:24" pos:end="399:49">(<expr pos:start="399:25" pos:end="399:48"><name pos:start="399:25" pos:end="399:29"><name pos:start="399:25" pos:end="399:25">v</name><operator pos:start="399:26" pos:end="399:27">-&gt;</operator><name pos:start="399:28" pos:end="399:29">pq</name></name> <operator pos:start="399:31" pos:end="399:32">&gt;=</operator> <literal type="number" pos:start="399:34" pos:end="399:34">9</literal> <operator pos:start="399:36" pos:end="399:37">&amp;&amp;</operator> <name pos:start="399:39" pos:end="399:48"><name pos:start="399:39" pos:end="399:39">v</name><operator pos:start="399:40" pos:end="399:41">-&gt;</operator><name pos:start="399:42" pos:end="399:48">overlap</name></name></expr>)</condition> <block pos:start="399:51" pos:end="409:21">{<block_content pos:start="401:25" pos:end="407:113">

                        <if_stmt pos:start="401:25" pos:end="403:113"><if pos:start="401:25" pos:end="403:113">if <condition pos:start="401:28" pos:end="401:39">(<expr pos:start="401:29" pos:end="401:38"><name pos:start="401:29" pos:end="401:38"><name pos:start="401:29" pos:end="401:29">v</name><operator pos:start="401:30" pos:end="401:31">-&gt;</operator><name pos:start="401:32" pos:end="401:38">c_avail</name></name></expr>)</condition><block type="pseudo" pos:start="403:29" pos:end="403:113"><block_content pos:start="403:29" pos:end="403:113">

                            <expr_stmt pos:start="403:29" pos:end="403:113"><expr pos:start="403:29" pos:end="403:112"><call pos:start="403:29" pos:end="403:112"><name pos:start="403:29" pos:end="403:51"><name pos:start="403:29" pos:end="403:29">v</name><operator pos:start="403:30" pos:end="403:31">-&gt;</operator><name pos:start="403:32" pos:end="403:37">vc1dsp</name><operator pos:start="403:38" pos:end="403:38">.</operator><name pos:start="403:39" pos:end="403:51">vc1_h_overlap</name></name><argument_list pos:start="403:52" pos:end="403:112">(<argument pos:start="403:53" pos:end="403:74"><expr pos:start="403:53" pos:end="403:74"><name pos:start="403:53" pos:end="403:68"><name pos:start="403:53" pos:end="403:53">s</name><operator pos:start="403:54" pos:end="403:55">-&gt;</operator><name pos:start="403:56" pos:end="403:59">dest</name><index pos:start="403:60" pos:end="403:68">[<expr pos:start="403:61" pos:end="403:67"><name pos:start="403:61" pos:end="403:67">dst_idx</name></expr>]</index></name> <operator pos:start="403:70" pos:end="403:70">+</operator> <name pos:start="403:72" pos:end="403:74">off</name></expr></argument>, <argument pos:start="403:77" pos:end="403:111"><expr pos:start="403:77" pos:end="403:111"><ternary pos:start="403:77" pos:end="403:111"><condition pos:start="403:77" pos:end="403:83"><expr pos:start="403:77" pos:end="403:81"><name pos:start="403:77" pos:end="403:77">i</name> <operator pos:start="403:79" pos:end="403:79">&amp;</operator> <literal type="number" pos:start="403:81" pos:end="403:81">4</literal></expr> ?</condition><then pos:start="403:85" pos:end="403:97"> <expr pos:start="403:85" pos:end="403:97"><name pos:start="403:85" pos:end="403:97"><name pos:start="403:85" pos:end="403:85">s</name><operator pos:start="403:86" pos:end="403:87">-&gt;</operator><name pos:start="403:88" pos:end="403:97">uvlinesize</name></name></expr> </then><else pos:start="403:99" pos:end="403:111">: <expr pos:start="403:101" pos:end="403:111"><name pos:start="403:101" pos:end="403:111"><name pos:start="403:101" pos:end="403:101">s</name><operator pos:start="403:102" pos:end="403:103">-&gt;</operator><name pos:start="403:104" pos:end="403:111">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="405:25" pos:end="407:113"><if pos:start="405:25" pos:end="407:113">if <condition pos:start="405:28" pos:end="405:39">(<expr pos:start="405:29" pos:end="405:38"><name pos:start="405:29" pos:end="405:38"><name pos:start="405:29" pos:end="405:29">v</name><operator pos:start="405:30" pos:end="405:31">-&gt;</operator><name pos:start="405:32" pos:end="405:38">a_avail</name></name></expr>)</condition><block type="pseudo" pos:start="407:29" pos:end="407:113"><block_content pos:start="407:29" pos:end="407:113">

                            <expr_stmt pos:start="407:29" pos:end="407:113"><expr pos:start="407:29" pos:end="407:112"><call pos:start="407:29" pos:end="407:112"><name pos:start="407:29" pos:end="407:51"><name pos:start="407:29" pos:end="407:29">v</name><operator pos:start="407:30" pos:end="407:31">-&gt;</operator><name pos:start="407:32" pos:end="407:37">vc1dsp</name><operator pos:start="407:38" pos:end="407:38">.</operator><name pos:start="407:39" pos:end="407:51">vc1_v_overlap</name></name><argument_list pos:start="407:52" pos:end="407:112">(<argument pos:start="407:53" pos:end="407:74"><expr pos:start="407:53" pos:end="407:74"><name pos:start="407:53" pos:end="407:68"><name pos:start="407:53" pos:end="407:53">s</name><operator pos:start="407:54" pos:end="407:55">-&gt;</operator><name pos:start="407:56" pos:end="407:59">dest</name><index pos:start="407:60" pos:end="407:68">[<expr pos:start="407:61" pos:end="407:67"><name pos:start="407:61" pos:end="407:67">dst_idx</name></expr>]</index></name> <operator pos:start="407:70" pos:end="407:70">+</operator> <name pos:start="407:72" pos:end="407:74">off</name></expr></argument>, <argument pos:start="407:77" pos:end="407:111"><expr pos:start="407:77" pos:end="407:111"><ternary pos:start="407:77" pos:end="407:111"><condition pos:start="407:77" pos:end="407:83"><expr pos:start="407:77" pos:end="407:81"><name pos:start="407:77" pos:end="407:77">i</name> <operator pos:start="407:79" pos:end="407:79">&amp;</operator> <literal type="number" pos:start="407:81" pos:end="407:81">4</literal></expr> ?</condition><then pos:start="407:85" pos:end="407:97"> <expr pos:start="407:85" pos:end="407:97"><name pos:start="407:85" pos:end="407:97"><name pos:start="407:85" pos:end="407:85">s</name><operator pos:start="407:86" pos:end="407:87">-&gt;</operator><name pos:start="407:88" pos:end="407:97">uvlinesize</name></name></expr> </then><else pos:start="407:99" pos:end="407:111">: <expr pos:start="407:101" pos:end="407:111"><name pos:start="407:101" pos:end="407:111"><name pos:start="407:101" pos:end="407:101">s</name><operator pos:start="407:102" pos:end="407:103">-&gt;</operator><name pos:start="407:104" pos:end="407:111">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="411:21" pos:end="411:51"><expr pos:start="411:21" pos:end="411:50"><name pos:start="411:21" pos:end="411:29">block_cbp</name>   <operator pos:start="411:33" pos:end="411:34">|=</operator> <literal type="number" pos:start="411:36" pos:end="411:38">0xF</literal> <operator pos:start="411:40" pos:end="411:41">&lt;&lt;</operator> <operator pos:start="411:43" pos:end="411:43">(</operator><name pos:start="411:44" pos:end="411:44">i</name> <operator pos:start="411:46" pos:end="411:47">&lt;&lt;</operator> <literal type="number" pos:start="411:49" pos:end="411:49">2</literal><operator pos:start="411:50" pos:end="411:50">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="413:21" pos:end="413:42"><expr pos:start="413:21" pos:end="413:41"><name pos:start="413:21" pos:end="413:31">block_intra</name> <operator pos:start="413:33" pos:end="413:34">|=</operator> <literal type="number" pos:start="413:36" pos:end="413:36">1</literal> <operator pos:start="413:38" pos:end="413:39">&lt;&lt;</operator> <name pos:start="413:41" pos:end="413:41">i</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="415:19" pos:end="435:17">else if <condition pos:start="415:27" pos:end="415:39">(<expr pos:start="415:28" pos:end="415:38"><name pos:start="415:28" pos:end="415:38"><name pos:start="415:28" pos:end="415:35">is_coded</name><index pos:start="415:36" pos:end="415:38">[<expr pos:start="415:37" pos:end="415:37"><name pos:start="415:37" pos:end="415:37">i</name></expr>]</index></name></expr>)</condition> <block pos:start="415:41" pos:end="435:17">{<block_content pos:start="417:21" pos:end="433:36">

                    <expr_stmt pos:start="417:21" pos:end="425:56"><expr pos:start="417:21" pos:end="425:55"><name pos:start="417:21" pos:end="417:23">pat</name> <operator pos:start="417:25" pos:end="417:25">=</operator> <call pos:start="417:27" pos:end="425:55"><name pos:start="417:27" pos:end="417:44">vc1_decode_p_block</name><argument_list pos:start="417:45" pos:end="425:55">(<argument pos:start="417:46" pos:end="417:46"><expr pos:start="417:46" pos:end="417:46"><name pos:start="417:46" pos:end="417:46">v</name></expr></argument>, <argument pos:start="417:49" pos:end="417:59"><expr pos:start="417:49" pos:end="417:59"><name pos:start="417:49" pos:end="417:59"><name pos:start="417:49" pos:end="417:49">s</name><operator pos:start="417:50" pos:end="417:51">-&gt;</operator><name pos:start="417:52" pos:end="417:56">block</name><index pos:start="417:57" pos:end="417:59">[<expr pos:start="417:58" pos:end="417:58"><name pos:start="417:58" pos:end="417:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="417:62" pos:end="417:62"><expr pos:start="417:62" pos:end="417:62"><name pos:start="417:62" pos:end="417:62">i</name></expr></argument>, <argument pos:start="417:65" pos:end="417:70"><expr pos:start="417:65" pos:end="417:70"><name pos:start="417:65" pos:end="417:70">mquant</name></expr></argument>, <argument pos:start="417:73" pos:end="417:76"><expr pos:start="417:73" pos:end="417:76"><name pos:start="417:73" pos:end="417:76">ttmb</name></expr></argument>,

                                             <argument pos:start="419:46" pos:end="419:56"><expr pos:start="419:46" pos:end="419:56"><name pos:start="419:46" pos:end="419:56">first_block</name></expr></argument>, <argument pos:start="419:59" pos:end="419:80"><expr pos:start="419:59" pos:end="419:80"><name pos:start="419:59" pos:end="419:74"><name pos:start="419:59" pos:end="419:59">s</name><operator pos:start="419:60" pos:end="419:61">-&gt;</operator><name pos:start="419:62" pos:end="419:65">dest</name><index pos:start="419:66" pos:end="419:74">[<expr pos:start="419:67" pos:end="419:73"><name pos:start="419:67" pos:end="419:73">dst_idx</name></expr>]</index></name> <operator pos:start="419:76" pos:end="419:76">+</operator> <name pos:start="419:78" pos:end="419:80">off</name></expr></argument>,

                                             <argument pos:start="421:46" pos:end="421:82"><expr pos:start="421:46" pos:end="421:82"><ternary pos:start="421:46" pos:end="421:82"><condition pos:start="421:46" pos:end="421:54"><expr pos:start="421:46" pos:end="421:52"><operator pos:start="421:46" pos:end="421:46">(</operator><name pos:start="421:47" pos:end="421:47">i</name> <operator pos:start="421:49" pos:end="421:49">&amp;</operator> <literal type="number" pos:start="421:51" pos:end="421:51">4</literal><operator pos:start="421:52" pos:end="421:52">)</operator></expr> ?</condition><then pos:start="421:56" pos:end="421:68"> <expr pos:start="421:56" pos:end="421:68"><name pos:start="421:56" pos:end="421:68"><name pos:start="421:56" pos:end="421:56">s</name><operator pos:start="421:57" pos:end="421:58">-&gt;</operator><name pos:start="421:59" pos:end="421:68">uvlinesize</name></name></expr> </then><else pos:start="421:70" pos:end="421:82">: <expr pos:start="421:72" pos:end="421:82"><name pos:start="421:72" pos:end="421:82"><name pos:start="421:72" pos:end="421:72">s</name><operator pos:start="421:73" pos:end="421:74">-&gt;</operator><name pos:start="421:75" pos:end="421:82">linesize</name></name></expr></else></ternary></expr></argument>,

                                             <argument pos:start="423:46" pos:end="423:84"><expr pos:start="423:46" pos:end="423:84"><operator pos:start="423:46" pos:end="423:46">(</operator><name pos:start="423:47" pos:end="423:47">i</name> <operator pos:start="423:49" pos:end="423:49">&amp;</operator> <literal type="number" pos:start="423:51" pos:end="423:51">4</literal><operator pos:start="423:52" pos:end="423:52">)</operator> <operator pos:start="423:54" pos:end="423:55">&amp;&amp;</operator> <operator pos:start="423:57" pos:end="423:57">(</operator><name pos:start="423:58" pos:end="423:65"><name pos:start="423:58" pos:end="423:58">s</name><operator pos:start="423:59" pos:end="423:60">-&gt;</operator><name pos:start="423:61" pos:end="423:65">flags</name></name> <operator pos:start="423:67" pos:end="423:67">&amp;</operator> <name pos:start="423:69" pos:end="423:83">CODEC_FLAG_GRAY</name><operator pos:start="423:84" pos:end="423:84">)</operator></expr></argument>,

                                             <argument pos:start="425:46" pos:end="425:54"><expr pos:start="425:46" pos:end="425:54"><operator pos:start="425:46" pos:end="425:46">&amp;</operator><name pos:start="425:47" pos:end="425:54">block_tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="427:49"><expr pos:start="427:21" pos:end="427:48"><name pos:start="427:21" pos:end="427:29">block_cbp</name> <operator pos:start="427:31" pos:end="427:32">|=</operator> <name pos:start="427:34" pos:end="427:36">pat</name> <operator pos:start="427:38" pos:end="427:39">&lt;&lt;</operator> <operator pos:start="427:41" pos:end="427:41">(</operator><name pos:start="427:42" pos:end="427:42">i</name> <operator pos:start="427:44" pos:end="427:45">&lt;&lt;</operator> <literal type="number" pos:start="427:47" pos:end="427:47">2</literal><operator pos:start="427:48" pos:end="427:48">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="429:21" pos:end="431:34"><if pos:start="429:21" pos:end="431:34">if <condition pos:start="429:24" pos:end="429:46">(<expr pos:start="429:25" pos:end="429:45"><operator pos:start="429:25" pos:end="429:25">!</operator><name pos:start="429:26" pos:end="429:33"><name pos:start="429:26" pos:end="429:26">v</name><operator pos:start="429:27" pos:end="429:28">-&gt;</operator><name pos:start="429:29" pos:end="429:33">ttmbf</name></name> <operator pos:start="429:35" pos:end="429:36">&amp;&amp;</operator> <name pos:start="429:38" pos:end="429:41">ttmb</name> <operator pos:start="429:43" pos:end="429:43">&lt;</operator> <literal type="number" pos:start="429:45" pos:end="429:45">8</literal></expr>)</condition><block type="pseudo" pos:start="431:25" pos:end="431:34"><block_content pos:start="431:25" pos:end="431:34">

                        <expr_stmt pos:start="431:25" pos:end="431:34"><expr pos:start="431:25" pos:end="431:33"><name pos:start="431:25" pos:end="431:28">ttmb</name> <operator pos:start="431:30" pos:end="431:30">=</operator> <operator pos:start="431:32" pos:end="431:32">-</operator><literal type="number" pos:start="431:33" pos:end="431:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="433:21" pos:end="433:36"><expr pos:start="433:21" pos:end="433:35"><name pos:start="433:21" pos:end="433:31">first_block</name> <operator pos:start="433:33" pos:end="433:33">=</operator> <literal type="number" pos:start="433:35" pos:end="433:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="439:11" pos:end="465:9">else <block pos:start="439:16" pos:end="465:9">{<block_content pos:start="441:13" pos:end="463:56"> <comment type="line" pos:start="439:18" pos:end="439:30">// skipped MB</comment>

            <expr_stmt pos:start="441:13" pos:end="441:58"><expr pos:start="441:13" pos:end="441:57"><name pos:start="441:13" pos:end="441:23"><name pos:start="441:13" pos:end="441:13">s</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:23">mb_intra</name></name>                               <operator pos:start="441:55" pos:end="441:55">=</operator> <literal type="number" pos:start="441:57" pos:end="441:57">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:56"><expr pos:start="443:13" pos:end="443:55"><name pos:start="443:13" pos:end="443:51"><name pos:start="443:13" pos:end="443:13">s</name><operator pos:start="443:14" pos:end="443:15">-&gt;</operator><name pos:start="443:16" pos:end="443:30">current_picture</name><operator pos:start="443:31" pos:end="443:31">.</operator><name pos:start="443:32" pos:end="443:43">qscale_table</name><index pos:start="443:44" pos:end="443:51">[<expr pos:start="443:45" pos:end="443:50"><name pos:start="443:45" pos:end="443:50">mb_pos</name></expr>]</index></name> <operator pos:start="443:53" pos:end="443:53">=</operator> <literal type="number" pos:start="443:55" pos:end="443:55">0</literal></expr>;</expr_stmt>

            <for pos:start="445:13" pos:end="451:13">for <control pos:start="445:17" pos:end="445:35">(<init pos:start="445:18" pos:end="445:23"><expr pos:start="445:18" pos:end="445:22"><name pos:start="445:18" pos:end="445:18">i</name> <operator pos:start="445:20" pos:end="445:20">=</operator> <literal type="number" pos:start="445:22" pos:end="445:22">0</literal></expr>;</init> <condition pos:start="445:25" pos:end="445:30"><expr pos:start="445:25" pos:end="445:29"><name pos:start="445:25" pos:end="445:25">i</name> <operator pos:start="445:27" pos:end="445:27">&lt;</operator> <literal type="number" pos:start="445:29" pos:end="445:29">6</literal></expr>;</condition> <incr pos:start="445:32" pos:end="445:34"><expr pos:start="445:32" pos:end="445:34"><name pos:start="445:32" pos:end="445:32">i</name><operator pos:start="445:33" pos:end="445:34">++</operator></expr></incr>)</control> <block pos:start="445:37" pos:end="451:13">{<block_content pos:start="447:17" pos:end="449:53">

                <expr_stmt pos:start="447:17" pos:end="447:53"><expr pos:start="447:17" pos:end="447:52"><name pos:start="447:17" pos:end="447:48"><name pos:start="447:17" pos:end="447:17">v</name><operator pos:start="447:18" pos:end="447:19">-&gt;</operator><name pos:start="447:20" pos:end="447:26">mb_type</name><index pos:start="447:27" pos:end="447:29">[<expr pos:start="447:28" pos:end="447:28"><literal type="number" pos:start="447:28" pos:end="447:28">0</literal></expr>]</index><index pos:start="447:30" pos:end="447:48">[<expr pos:start="447:31" pos:end="447:47"><name pos:start="447:31" pos:end="447:47"><name pos:start="447:31" pos:end="447:31">s</name><operator pos:start="447:32" pos:end="447:33">-&gt;</operator><name pos:start="447:34" pos:end="447:44">block_index</name><index pos:start="447:45" pos:end="447:47">[<expr pos:start="447:46" pos:end="447:46"><name pos:start="447:46" pos:end="447:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="447:50" pos:end="447:50">=</operator> <literal type="number" pos:start="447:52" pos:end="447:52">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="449:17" pos:end="449:53"><expr pos:start="449:17" pos:end="449:52"><name pos:start="449:17" pos:end="449:47"><name pos:start="449:17" pos:end="449:17">s</name><operator pos:start="449:18" pos:end="449:19">-&gt;</operator><name pos:start="449:20" pos:end="449:25">dc_val</name><index pos:start="449:26" pos:end="449:28">[<expr pos:start="449:27" pos:end="449:27"><literal type="number" pos:start="449:27" pos:end="449:27">0</literal></expr>]</index><index pos:start="449:29" pos:end="449:47">[<expr pos:start="449:30" pos:end="449:46"><name pos:start="449:30" pos:end="449:46"><name pos:start="449:30" pos:end="449:30">s</name><operator pos:start="449:31" pos:end="449:32">-&gt;</operator><name pos:start="449:33" pos:end="449:43">block_index</name><index pos:start="449:44" pos:end="449:46">[<expr pos:start="449:45" pos:end="449:45"><name pos:start="449:45" pos:end="449:45">i</name></expr>]</index></name></expr>]</index></name>  <operator pos:start="449:50" pos:end="449:50">=</operator> <literal type="number" pos:start="449:52" pos:end="449:52">0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="453:13" pos:end="459:13">for <control pos:start="453:17" pos:end="453:35">(<init pos:start="453:18" pos:end="453:23"><expr pos:start="453:18" pos:end="453:22"><name pos:start="453:18" pos:end="453:18">i</name> <operator pos:start="453:20" pos:end="453:20">=</operator> <literal type="number" pos:start="453:22" pos:end="453:22">0</literal></expr>;</init> <condition pos:start="453:25" pos:end="453:30"><expr pos:start="453:25" pos:end="453:29"><name pos:start="453:25" pos:end="453:25">i</name> <operator pos:start="453:27" pos:end="453:27">&lt;</operator> <literal type="number" pos:start="453:29" pos:end="453:29">4</literal></expr>;</condition> <incr pos:start="453:32" pos:end="453:34"><expr pos:start="453:32" pos:end="453:34"><name pos:start="453:32" pos:end="453:32">i</name><operator pos:start="453:33" pos:end="453:34">++</operator></expr></incr>)</control> <block pos:start="453:37" pos:end="459:13">{<block_content pos:start="455:17" pos:end="457:44">

                <expr_stmt pos:start="455:17" pos:end="455:88"><expr pos:start="455:17" pos:end="455:87"><call pos:start="455:17" pos:end="455:87"><name pos:start="455:17" pos:end="455:27">vc1_pred_mv</name><argument_list pos:start="455:28" pos:end="455:87">(<argument pos:start="455:29" pos:end="455:29"><expr pos:start="455:29" pos:end="455:29"><name pos:start="455:29" pos:end="455:29">v</name></expr></argument>, <argument pos:start="455:32" pos:end="455:32"><expr pos:start="455:32" pos:end="455:32"><name pos:start="455:32" pos:end="455:32">i</name></expr></argument>, <argument pos:start="455:35" pos:end="455:35"><expr pos:start="455:35" pos:end="455:35"><literal type="number" pos:start="455:35" pos:end="455:35">0</literal></expr></argument>, <argument pos:start="455:38" pos:end="455:38"><expr pos:start="455:38" pos:end="455:38"><literal type="number" pos:start="455:38" pos:end="455:38">0</literal></expr></argument>, <argument pos:start="455:41" pos:end="455:41"><expr pos:start="455:41" pos:end="455:41"><literal type="number" pos:start="455:41" pos:end="455:41">0</literal></expr></argument>, <argument pos:start="455:44" pos:end="455:53"><expr pos:start="455:44" pos:end="455:53"><name pos:start="455:44" pos:end="455:53"><name pos:start="455:44" pos:end="455:44">v</name><operator pos:start="455:45" pos:end="455:46">-&gt;</operator><name pos:start="455:47" pos:end="455:53">range_x</name></name></expr></argument>, <argument pos:start="455:56" pos:end="455:65"><expr pos:start="455:56" pos:end="455:65"><name pos:start="455:56" pos:end="455:65"><name pos:start="455:56" pos:end="455:56">v</name><operator pos:start="455:57" pos:end="455:58">-&gt;</operator><name pos:start="455:59" pos:end="455:65">range_y</name></name></expr></argument>, <argument pos:start="455:68" pos:end="455:80"><expr pos:start="455:68" pos:end="455:80"><name pos:start="455:68" pos:end="455:80"><name pos:start="455:68" pos:end="455:68">v</name><operator pos:start="455:69" pos:end="455:70">-&gt;</operator><name pos:start="455:71" pos:end="455:77">mb_type</name><index pos:start="455:78" pos:end="455:80">[<expr pos:start="455:79" pos:end="455:79"><literal type="number" pos:start="455:79" pos:end="455:79">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="455:83" pos:end="455:83"><expr pos:start="455:83" pos:end="455:83"><literal type="number" pos:start="455:83" pos:end="455:83">0</literal></expr></argument>, <argument pos:start="455:86" pos:end="455:86"><expr pos:start="455:86" pos:end="455:86"><literal type="number" pos:start="455:86" pos:end="455:86">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="457:17" pos:end="457:44"><expr pos:start="457:17" pos:end="457:43"><call pos:start="457:17" pos:end="457:43"><name pos:start="457:17" pos:end="457:31">vc1_mc_4mv_luma</name><argument_list pos:start="457:32" pos:end="457:43">(<argument pos:start="457:33" pos:end="457:33"><expr pos:start="457:33" pos:end="457:33"><name pos:start="457:33" pos:end="457:33">v</name></expr></argument>, <argument pos:start="457:36" pos:end="457:36"><expr pos:start="457:36" pos:end="457:36"><name pos:start="457:36" pos:end="457:36">i</name></expr></argument>, <argument pos:start="457:39" pos:end="457:39"><expr pos:start="457:39" pos:end="457:39"><literal type="number" pos:start="457:39" pos:end="457:39">0</literal></expr></argument>, <argument pos:start="457:42" pos:end="457:42"><expr pos:start="457:42" pos:end="457:42"><literal type="number" pos:start="457:42" pos:end="457:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="461:13" pos:end="461:36"><expr pos:start="461:13" pos:end="461:35"><call pos:start="461:13" pos:end="461:35"><name pos:start="461:13" pos:end="461:29">vc1_mc_4mv_chroma</name><argument_list pos:start="461:30" pos:end="461:35">(<argument pos:start="461:31" pos:end="461:31"><expr pos:start="461:31" pos:end="461:31"><name pos:start="461:31" pos:end="461:31">v</name></expr></argument>, <argument pos:start="461:34" pos:end="461:34"><expr pos:start="461:34" pos:end="461:34"><literal type="number" pos:start="461:34" pos:end="461:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:56"><expr pos:start="463:13" pos:end="463:55"><name pos:start="463:13" pos:end="463:51"><name pos:start="463:13" pos:end="463:13">s</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:30">current_picture</name><operator pos:start="463:31" pos:end="463:31">.</operator><name pos:start="463:32" pos:end="463:43">qscale_table</name><index pos:start="463:44" pos:end="463:51">[<expr pos:start="463:45" pos:end="463:50"><name pos:start="463:45" pos:end="463:50">mb_pos</name></expr>]</index></name> <operator pos:start="463:53" pos:end="463:53">=</operator> <literal type="number" pos:start="463:55" pos:end="463:55">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="469:1" pos:end="469:4"><name pos:start="469:1" pos:end="469:3">end</name>:</label>

    <expr_stmt pos:start="471:5" pos:end="471:37"><expr pos:start="471:5" pos:end="471:36"><name pos:start="471:5" pos:end="471:19"><name pos:start="471:5" pos:end="471:5">v</name><operator pos:start="471:6" pos:end="471:7">-&gt;</operator><name pos:start="471:8" pos:end="471:10">cbp</name><index pos:start="471:11" pos:end="471:19">[<expr pos:start="471:12" pos:end="471:18"><name pos:start="471:12" pos:end="471:18"><name pos:start="471:12" pos:end="471:12">s</name><operator pos:start="471:13" pos:end="471:14">-&gt;</operator><name pos:start="471:15" pos:end="471:18">mb_x</name></name></expr>]</index></name>      <operator pos:start="471:26" pos:end="471:26">=</operator> <name pos:start="471:28" pos:end="471:36">block_cbp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="473:36"><expr pos:start="473:5" pos:end="473:35"><name pos:start="473:5" pos:end="473:21"><name pos:start="473:5" pos:end="473:5">v</name><operator pos:start="473:6" pos:end="473:7">-&gt;</operator><name pos:start="473:8" pos:end="473:12">ttblk</name><index pos:start="473:13" pos:end="473:21">[<expr pos:start="473:14" pos:end="473:20"><name pos:start="473:14" pos:end="473:20"><name pos:start="473:14" pos:end="473:14">s</name><operator pos:start="473:15" pos:end="473:16">-&gt;</operator><name pos:start="473:17" pos:end="473:20">mb_x</name></name></expr>]</index></name>    <operator pos:start="473:26" pos:end="473:26">=</operator> <name pos:start="473:28" pos:end="473:35">block_tt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="475:5" pos:end="475:39"><expr pos:start="475:5" pos:end="475:38"><name pos:start="475:5" pos:end="475:24"><name pos:start="475:5" pos:end="475:5">v</name><operator pos:start="475:6" pos:end="475:7">-&gt;</operator><name pos:start="475:8" pos:end="475:15">is_intra</name><index pos:start="475:16" pos:end="475:24">[<expr pos:start="475:17" pos:end="475:23"><name pos:start="475:17" pos:end="475:23"><name pos:start="475:17" pos:end="475:17">s</name><operator pos:start="475:18" pos:end="475:19">-&gt;</operator><name pos:start="475:20" pos:end="475:23">mb_x</name></name></expr>]</index></name> <operator pos:start="475:26" pos:end="475:26">=</operator> <name pos:start="475:28" pos:end="475:38">block_intra</name></expr>;</expr_stmt>



    <return pos:start="479:5" pos:end="479:13">return <expr pos:start="479:12" pos:end="479:12"><literal type="number" pos:start="479:12" pos:end="479:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
