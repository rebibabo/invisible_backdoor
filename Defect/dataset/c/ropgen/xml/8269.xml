<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8269.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:26">cpu_ppc_load_decr</name> <parameter_list pos:start="1:28" pos:end="1:42">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:36">CPUState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:16">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">ppc_tb_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">tb_env</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:26">env</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">tb_env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">decr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="16:0"><expr pos:start="11:5" pos:end="13:51"><name pos:start="11:5" pos:end="11:8">decr</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="13:51"><name pos:start="11:12" pos:end="11:19">muldiv64</name><argument_list pos:start="11:20" pos:end="13:51">(<argument pos:start="11:21" pos:end="11:64"><expr pos:start="11:21" pos:end="11:64"><name pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:26">tb_env</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:37">decr_next</name></name> <operator pos:start="11:39" pos:end="11:39">-</operator> <call pos:start="11:41" pos:end="11:64"><name pos:start="11:41" pos:end="11:54">qemu_get_clock</name><argument_list pos:start="11:55" pos:end="11:64">(<argument pos:start="11:56" pos:end="11:63"><expr pos:start="11:56" pos:end="11:63"><name pos:start="11:56" pos:end="11:63">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="13:21" pos:end="13:35"><expr pos:start="13:21" pos:end="13:35"><name pos:start="13:21" pos:end="13:35"><name pos:start="13:21" pos:end="13:26">tb_env</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:35">tb_freq</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:50"><expr pos:start="13:38" pos:end="13:50"><name pos:start="13:38" pos:end="13:50">ticks_per_sec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="15:1" pos:end="15:21">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:21"><call pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:11">defined</name><argument_list pos:start="15:12" pos:end="15:21">(<argument pos:start="15:13" pos:end="15:20"><expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:20">DEBUG_TB</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:42"><call pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:10">printf</name><argument_list pos:start="17:11" pos:end="17:42">(<argument pos:start="17:12" pos:end="17:25"><expr pos:start="17:12" pos:end="17:25"><literal type="string" pos:start="17:12" pos:end="17:25">"%s: 0x%08x\n"</literal></expr></argument>, <argument pos:start="17:28" pos:end="17:35"><expr pos:start="17:28" pos:end="17:35"><name pos:start="17:28" pos:end="17:35">__func__</name></expr></argument>, <argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">decr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



    <return pos:start="23:5" pos:end="23:16">return <expr pos:start="23:12" pos:end="23:15"><name pos:start="23:12" pos:end="23:15">decr</name></expr>;</return>

</block_content>}</block></function>
</unit>
