<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1852.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">filter_frame</name><parameter_list pos:start="1:24" pos:end="1:65">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:36">AVFilterLink</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">inlink</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:53">AVFrame</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:64">insamples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:38">= <expr pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:33">inlink</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">ASNSContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">asns</name> <init pos:start="7:23" pos:end="7:33">= <expr pos:start="7:25" pos:end="7:33"><name pos:start="7:25" pos:end="7:33"><name pos:start="7:25" pos:end="7:27">ctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:33">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVFilterLink</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:25">outlink</name> <init pos:start="9:27" pos:end="9:43">= <expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:31">ctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:40">outputs</name><index pos:start="9:41" pos:end="9:43">[<expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">nb_samples</name> <init pos:start="13:20" pos:end="13:42">= <expr pos:start="13:22" pos:end="13:42"><name pos:start="13:22" pos:end="13:42"><name pos:start="13:22" pos:end="13:30">insamples</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:42">nb_samples</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:53">(<expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:27">av_audio_fifo_space</name><argument_list pos:start="17:28" pos:end="17:39">(<argument pos:start="17:29" pos:end="17:38"><expr pos:start="17:29" pos:end="17:38"><name pos:start="17:29" pos:end="17:38"><name pos:start="17:29" pos:end="17:32">asns</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:38">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:41" pos:end="17:41">&lt;</operator> <name pos:start="17:43" pos:end="17:52">nb_samples</name></expr>)</condition> <block pos:start="17:55" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:9">

        <expr_stmt pos:start="19:9" pos:end="19:98"><expr pos:start="19:9" pos:end="19:97"><call pos:start="19:9" pos:end="19:97"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:97">(<argument pos:start="19:16" pos:end="19:18"><expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ctx</name></expr></argument>, <argument pos:start="19:21" pos:end="19:32"><expr pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="19:35" pos:end="19:84"><expr pos:start="19:35" pos:end="19:84"><literal type="string" pos:start="19:35" pos:end="19:84">"No space for %d samples, stretching audio fifo\n"</literal></expr></argument>, <argument pos:start="19:87" pos:end="19:96"><expr pos:start="19:87" pos:end="19:96"><name pos:start="19:87" pos:end="19:96">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:93"><expr pos:start="21:9" pos:end="21:92"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:92"><name pos:start="21:15" pos:end="21:35">av_audio_fifo_realloc</name><argument_list pos:start="21:36" pos:end="21:92">(<argument pos:start="21:37" pos:end="21:46"><expr pos:start="21:37" pos:end="21:46"><name pos:start="21:37" pos:end="21:46"><name pos:start="21:37" pos:end="21:40">asns</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:46">fifo</name></name></expr></argument>, <argument pos:start="21:49" pos:end="21:91"><expr pos:start="21:49" pos:end="21:91"><call pos:start="21:49" pos:end="21:78"><name pos:start="21:49" pos:end="21:66">av_audio_fifo_size</name><argument_list pos:start="21:67" pos:end="21:78">(<argument pos:start="21:68" pos:end="21:77"><expr pos:start="21:68" pos:end="21:77"><name pos:start="21:68" pos:end="21:77"><name pos:start="21:68" pos:end="21:71">asns</name><operator pos:start="21:72" pos:end="21:73">-&gt;</operator><name pos:start="21:74" pos:end="21:77">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:80" pos:end="21:80">+</operator> <name pos:start="21:82" pos:end="21:91">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:22">

            <expr_stmt pos:start="25:13" pos:end="27:87"><expr pos:start="25:13" pos:end="27:86"><call pos:start="25:13" pos:end="27:86"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="27:86">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">ctx</name></expr></argument>, <argument pos:start="25:25" pos:end="25:36"><expr pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:73"><expr pos:start="27:20" pos:end="27:73"><literal type="string" pos:start="27:20" pos:end="27:73">"Stretching audio fifo failed, discarded %d samples\n"</literal></expr></argument>, <argument pos:start="27:76" pos:end="27:85"><expr pos:start="27:76" pos:end="27:85"><name pos:start="27:76" pos:end="27:85">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:22">return <expr pos:start="29:20" pos:end="29:21"><operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:83"><expr pos:start="35:5" pos:end="35:82"><call pos:start="35:5" pos:end="35:82"><name pos:start="35:5" pos:end="35:23">av_audio_fifo_write</name><argument_list pos:start="35:24" pos:end="35:82">(<argument pos:start="35:25" pos:end="35:34"><expr pos:start="35:25" pos:end="35:34"><name pos:start="35:25" pos:end="35:34"><name pos:start="35:25" pos:end="35:28">asns</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:34">fifo</name></name></expr></argument>, <argument pos:start="35:37" pos:end="35:69"><expr pos:start="35:37" pos:end="35:69"><operator pos:start="35:37" pos:end="35:37">(</operator><name pos:start="35:38" pos:end="35:41">void</name> <operator pos:start="35:43" pos:end="35:43">*</operator><operator pos:start="35:44" pos:end="35:44">*</operator><operator pos:start="35:45" pos:end="35:45">)</operator><name pos:start="35:46" pos:end="35:69"><name pos:start="35:46" pos:end="35:54">insamples</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:69">extended_data</name></name></expr></argument>, <argument pos:start="35:72" pos:end="35:81"><expr pos:start="35:72" pos:end="35:81"><name pos:start="35:72" pos:end="35:81">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:44"><if pos:start="37:5" pos:end="39:44">if <condition pos:start="37:8" pos:end="37:45">(<expr pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:12">asns</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:26">next_out_pts</name></name> <operator pos:start="37:28" pos:end="37:29">==</operator> <name pos:start="37:31" pos:end="37:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:44"><block_content pos:start="39:9" pos:end="39:44">

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:12">asns</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:26">next_out_pts</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:43"><name pos:start="39:30" pos:end="39:38">insamples</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:43">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><call pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:17">av_frame_free</name><argument_list pos:start="41:18" pos:end="41:29">(<argument pos:start="41:19" pos:end="41:28"><expr pos:start="41:19" pos:end="41:28"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:28">insamples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="45:5" pos:end="47:30">while <condition pos:start="45:11" pos:end="45:66">(<expr pos:start="45:12" pos:end="45:65"><call pos:start="45:12" pos:end="45:41"><name pos:start="45:12" pos:end="45:29">av_audio_fifo_size</name><argument_list pos:start="45:30" pos:end="45:41">(<argument pos:start="45:31" pos:end="45:40"><expr pos:start="45:31" pos:end="45:40"><name pos:start="45:31" pos:end="45:40"><name pos:start="45:31" pos:end="45:34">asns</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:43" pos:end="45:44">&gt;=</operator> <name pos:start="45:46" pos:end="45:65"><name pos:start="45:46" pos:end="45:49">asns</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:65">nb_out_samples</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:30"><block_content pos:start="47:9" pos:end="47:30">

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><call pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:20">push_samples</name><argument_list pos:start="47:21" pos:end="47:29">(<argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><name pos:start="47:22" pos:end="47:28">outlink</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
