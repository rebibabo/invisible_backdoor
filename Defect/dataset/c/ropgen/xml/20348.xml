<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20348.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">cd_read_sector_cb</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:31">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="14:0"><expr pos:start="9:5" pos:end="9:52"><call pos:start="9:5" pos:end="9:52"><name pos:start="9:5" pos:end="9:19">block_acct_done</name><argument_list pos:start="9:20" pos:end="9:52">(<argument pos:start="9:21" pos:end="9:41"><expr pos:start="9:21" pos:end="9:41"><call pos:start="9:21" pos:end="9:41"><name pos:start="9:21" pos:end="9:33">blk_get_stats</name><argument_list pos:start="9:34" pos:end="9:41">(<argument pos:start="9:35" pos:end="9:40"><expr pos:start="9:35" pos:end="9:40"><name pos:start="9:35" pos:end="9:40"><name pos:start="9:35" pos:end="9:35">s</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:40">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="9:44" pos:end="9:51"><expr pos:start="9:44" pos:end="9:51"><operator pos:start="9:44" pos:end="9:44">&amp;</operator><name pos:start="9:45" pos:end="9:51"><name pos:start="9:45" pos:end="9:45">s</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:51">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="13:1" pos:end="13:22">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:22">DEBUG_IDE_ATAPI</name></cpp:ifdef>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:61"><call pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:10">printf</name><argument_list pos:start="15:11" pos:end="15:61">(<argument pos:start="15:12" pos:end="15:47"><expr pos:start="15:12" pos:end="15:47"><literal type="string" pos:start="15:12" pos:end="15:47">"cd_read_sector_cb: lba=%d ret=%d\n"</literal></expr></argument>, <argument pos:start="15:50" pos:end="15:55"><expr pos:start="15:50" pos:end="15:55"><name pos:start="15:50" pos:end="15:55"><name pos:start="15:50" pos:end="15:50">s</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:55">lba</name></name></expr></argument>, <argument pos:start="15:58" pos:end="15:60"><expr pos:start="15:58" pos:end="15:60"><name pos:start="15:58" pos:end="15:60">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition> <block pos:start="21:18" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:26">ide_atapi_io_error</name><argument_list pos:start="23:27" pos:end="23:34">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">s</name></expr></argument>, <argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:34">(<expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:25">cd_sector_size</name></name> <operator pos:start="31:27" pos:end="31:28">==</operator> <literal type="number" pos:start="31:30" pos:end="31:33">2352</literal></expr>)</condition> <block pos:start="31:36" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:45">

        <expr_stmt pos:start="33:9" pos:end="33:45"><expr pos:start="33:9" pos:end="33:44"><call pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:22">cd_data_to_raw</name><argument_list pos:start="33:23" pos:end="33:44">(<argument pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:35">io_buffer</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:43"><expr pos:start="33:38" pos:end="33:43"><name pos:start="33:38" pos:end="33:43"><name pos:start="33:38" pos:end="33:38">s</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">lba</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:13"><expr pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">lba</name></name><operator pos:start="39:11" pos:end="39:12">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:22">io_buffer_index</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:13">status</name></name> <operator pos:start="43:15" pos:end="43:16">&amp;=</operator> <operator pos:start="43:18" pos:end="43:18">~</operator><name pos:start="43:19" pos:end="43:27">BUSY_STAT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><call pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:27">ide_atapi_cmd_reply_end</name><argument_list pos:start="47:28" pos:end="47:30">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
