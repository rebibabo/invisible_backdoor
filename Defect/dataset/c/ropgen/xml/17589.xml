<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17589.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">openpic_update_irq</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">OpenPICState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">opp</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:59"><decl pos:start="1:51" pos:end="1:59"><type pos:start="1:51" pos:end="1:59"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:59">n_IRQ</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">IRQSource</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:15">active</name></decl>, <decl pos:start="7:18" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:18" pos:end="7:27">was_active</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">src</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">&amp;</operator><name pos:start="13:12" pos:end="13:26"><name pos:start="13:12" pos:end="13:14">opp</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:19">src</name><index pos:start="13:20" pos:end="13:26">[<expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:25">n_IRQ</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:10">active</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:16">src</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:25">pending</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:53">(<expr pos:start="19:9" pos:end="19:52"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:12">src</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:18">ivpr</name></name> <operator pos:start="19:20" pos:end="19:20">&amp;</operator> <name pos:start="19:22" pos:end="19:35">IVPR_MASK_MASK</name><operator pos:start="19:36" pos:end="19:36">)</operator> <operator pos:start="19:38" pos:end="19:39">&amp;&amp;</operator> <operator pos:start="19:41" pos:end="19:41">!</operator><name pos:start="19:42" pos:end="19:52"><name pos:start="19:42" pos:end="19:44">src</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:52">nomask</name></name></expr>)</condition> <block pos:start="19:55" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:23">

        <comment type="block" pos:start="21:9" pos:end="21:42">/* Interrupt source is disabled */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><call pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:15">DPRINTF</name><argument_list pos:start="23:16" pos:end="23:60">(<argument pos:start="23:17" pos:end="23:42"><expr pos:start="23:17" pos:end="23:42"><literal type="string" pos:start="23:17" pos:end="23:42">"%s: IRQ %d is disabled\n"</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:52"><expr pos:start="23:45" pos:end="23:52"><name pos:start="23:45" pos:end="23:52">__func__</name></expr></argument>, <argument pos:start="23:55" pos:end="23:59"><expr pos:start="23:55" pos:end="23:59"><name pos:start="23:55" pos:end="23:59">n_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:14">active</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:22">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:52"><expr pos:start="31:5" pos:end="31:51"><name pos:start="31:5" pos:end="31:14">was_active</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <operator pos:start="31:18" pos:end="31:18">!</operator><operator pos:start="31:19" pos:end="31:19">!</operator><operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:23">src</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">ivpr</name></name> <operator pos:start="31:31" pos:end="31:31">&amp;</operator> <name pos:start="31:33" pos:end="31:50">IVPR_ACTIVITY_MASK</name><operator pos:start="31:51" pos:end="31:51">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="41:7">/*

     * We don't have a similar check for already-active because

     * ctpr may have changed and we need to withdraw the interrupt.

     */</comment>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:31">(<expr pos:start="43:9" pos:end="43:30"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:15">active</name> <operator pos:start="43:17" pos:end="43:18">&amp;&amp;</operator> <operator pos:start="43:20" pos:end="43:20">!</operator><name pos:start="43:21" pos:end="43:30">was_active</name></expr>)</condition> <block pos:start="43:33" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:15">

        <expr_stmt pos:start="45:9" pos:end="45:69"><expr pos:start="45:9" pos:end="45:68"><call pos:start="45:9" pos:end="45:68"><name pos:start="45:9" pos:end="45:15">DPRINTF</name><argument_list pos:start="45:16" pos:end="45:68">(<argument pos:start="45:17" pos:end="45:50"><expr pos:start="45:17" pos:end="45:50"><literal type="string" pos:start="45:17" pos:end="45:50">"%s: IRQ %d is already inactive\n"</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:60"><expr pos:start="45:53" pos:end="45:60"><name pos:start="45:53" pos:end="45:60">__func__</name></expr></argument>, <argument pos:start="45:63" pos:end="45:67"><expr pos:start="45:63" pos:end="45:67"><name pos:start="45:63" pos:end="45:67">n_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:15">(<expr pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:14">active</name></expr>)</condition> <block pos:start="53:17" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:40">

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">src</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">ivpr</name></name> <operator pos:start="55:19" pos:end="55:20">|=</operator> <name pos:start="55:22" pos:end="55:39">IVPR_ACTIVITY_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:41">

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:11">src</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">ivpr</name></name> <operator pos:start="59:19" pos:end="59:20">&amp;=</operator> <operator pos:start="59:22" pos:end="59:22">~</operator><name pos:start="59:23" pos:end="59:40">IVPR_ACTIVITY_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:22">(<expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:11">src</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">idr</name></name> <operator pos:start="65:18" pos:end="65:19">==</operator> <literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>)</condition> <block pos:start="65:24" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:15">

        <comment type="block" pos:start="67:9" pos:end="67:23">/* No target */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:63"><expr pos:start="69:9" pos:end="69:62"><call pos:start="69:9" pos:end="69:62"><name pos:start="69:9" pos:end="69:15">DPRINTF</name><argument_list pos:start="69:16" pos:end="69:62">(<argument pos:start="69:17" pos:end="69:44"><expr pos:start="69:17" pos:end="69:44"><literal type="string" pos:start="69:17" pos:end="69:44">"%s: IRQ %d has no target\n"</literal></expr></argument>, <argument pos:start="69:47" pos:end="69:54"><expr pos:start="69:47" pos:end="69:54"><name pos:start="69:47" pos:end="69:54">__func__</name></expr></argument>, <argument pos:start="69:57" pos:end="69:61"><expr pos:start="69:57" pos:end="69:61"><name pos:start="69:57" pos:end="69:61">n_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="121:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:41">(<expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:11">src</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:16">idr</name></name> <operator pos:start="77:18" pos:end="77:19">==</operator> <operator pos:start="77:21" pos:end="77:21">(</operator><literal type="number" pos:start="77:22" pos:end="77:22">1</literal> <operator pos:start="77:24" pos:end="77:25">&lt;&lt;</operator> <name pos:start="77:27" pos:end="77:39"><name pos:start="77:27" pos:end="77:29">src</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:39">last_cpu</name></name><operator pos:start="77:40" pos:end="77:40">)</operator></expr>)</condition> <block pos:start="77:43" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:70">

        <comment type="block" pos:start="79:9" pos:end="79:57">/* Only one CPU is allowed to receive this IRQ */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:70"><expr pos:start="81:9" pos:end="81:69"><call pos:start="81:9" pos:end="81:69"><name pos:start="81:9" pos:end="81:22">IRQ_local_pipe</name><argument_list pos:start="81:23" pos:end="81:69">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">opp</name></expr></argument>, <argument pos:start="81:29" pos:end="81:41"><expr pos:start="81:29" pos:end="81:41"><name pos:start="81:29" pos:end="81:41"><name pos:start="81:29" pos:end="81:31">src</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:41">last_cpu</name></name></expr></argument>, <argument pos:start="81:44" pos:end="81:48"><expr pos:start="81:44" pos:end="81:48"><name pos:start="81:44" pos:end="81:48">n_IRQ</name></expr></argument>, <argument pos:start="81:51" pos:end="81:56"><expr pos:start="81:51" pos:end="81:56"><name pos:start="81:51" pos:end="81:56">active</name></expr></argument>, <argument pos:start="81:59" pos:end="81:68"><expr pos:start="81:59" pos:end="81:68"><name pos:start="81:59" pos:end="81:68">was_active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="97:5">else if <condition pos:start="83:15" pos:end="83:45">(<expr pos:start="83:16" pos:end="83:44"><operator pos:start="83:16" pos:end="83:16">!</operator><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:26"><name pos:start="83:18" pos:end="83:20">src</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:26">ivpr</name></name> <operator pos:start="83:28" pos:end="83:28">&amp;</operator> <name pos:start="83:30" pos:end="83:43">IVPR_MODE_MASK</name><operator pos:start="83:44" pos:end="83:44">)</operator></expr>)</condition> <block pos:start="83:47" pos:end="97:5">{<block_content pos:start="87:9" pos:end="95:9">

        <comment type="block" pos:start="85:9" pos:end="85:36">/* Directed delivery mode */</comment>

        <for pos:start="87:9" pos:end="95:9">for <control pos:start="87:13" pos:end="87:42">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">i</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:37"><expr pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:21">i</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:36"><name pos:start="87:25" pos:end="87:27">opp</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:36">nb_cpus</name></name></expr>;</condition> <incr pos:start="87:39" pos:end="87:41"><expr pos:start="87:39" pos:end="87:41"><name pos:start="87:39" pos:end="87:39">i</name><operator pos:start="87:40" pos:end="87:41">++</operator></expr></incr>)</control> <block pos:start="87:44" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:13">

            <if_stmt pos:start="89:13" pos:end="93:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:41">(<expr pos:start="89:17" pos:end="89:40"><name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:19">src</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:29">destmask</name></name> <operator pos:start="89:31" pos:end="89:31">&amp;</operator> <operator pos:start="89:33" pos:end="89:33">(</operator><literal type="number" pos:start="89:34" pos:end="89:34">1</literal> <operator pos:start="89:36" pos:end="89:37">&lt;&lt;</operator> <name pos:start="89:39" pos:end="89:39">i</name><operator pos:start="89:40" pos:end="89:40">)</operator></expr>)</condition> <block pos:start="89:43" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:66">

                <expr_stmt pos:start="91:17" pos:end="91:66"><expr pos:start="91:17" pos:end="91:65"><call pos:start="91:17" pos:end="91:65"><name pos:start="91:17" pos:end="91:30">IRQ_local_pipe</name><argument_list pos:start="91:31" pos:end="91:65">(<argument pos:start="91:32" pos:end="91:34"><expr pos:start="91:32" pos:end="91:34"><name pos:start="91:32" pos:end="91:34">opp</name></expr></argument>, <argument pos:start="91:37" pos:end="91:37"><expr pos:start="91:37" pos:end="91:37"><name pos:start="91:37" pos:end="91:37">i</name></expr></argument>, <argument pos:start="91:40" pos:end="91:44"><expr pos:start="91:40" pos:end="91:44"><name pos:start="91:40" pos:end="91:44">n_IRQ</name></expr></argument>, <argument pos:start="91:47" pos:end="91:52"><expr pos:start="91:47" pos:end="91:52"><name pos:start="91:47" pos:end="91:52">active</name></expr></argument>, <argument pos:start="91:55" pos:end="91:64"><expr pos:start="91:55" pos:end="91:64"><name pos:start="91:55" pos:end="91:64">was_active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="121:5">else <block pos:start="97:12" pos:end="121:5">{<block_content pos:start="101:9" pos:end="119:9">

        <comment type="block" pos:start="99:9" pos:end="99:39">/* Distributed delivery mode */</comment>

        <for pos:start="101:9" pos:end="119:9">for <control pos:start="101:13" pos:end="101:60">(<init pos:start="101:14" pos:end="101:35"><expr pos:start="101:14" pos:end="101:34"><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <name pos:start="101:18" pos:end="101:30"><name pos:start="101:18" pos:end="101:20">src</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:30">last_cpu</name></name> <operator pos:start="101:32" pos:end="101:32">+</operator> <literal type="number" pos:start="101:34" pos:end="101:34">1</literal></expr>;</init> <condition pos:start="101:37" pos:end="101:55"><expr pos:start="101:37" pos:end="101:54"><name pos:start="101:37" pos:end="101:37">i</name> <operator pos:start="101:39" pos:end="101:40">!=</operator> <name pos:start="101:42" pos:end="101:54"><name pos:start="101:42" pos:end="101:44">src</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:54">last_cpu</name></name></expr>;</condition> <incr pos:start="101:57" pos:end="101:59"><expr pos:start="101:57" pos:end="101:59"><name pos:start="101:57" pos:end="101:57">i</name><operator pos:start="101:58" pos:end="101:59">++</operator></expr></incr>)</control> <block pos:start="101:62" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:13">

            <if_stmt pos:start="103:13" pos:end="107:13"><if pos:start="103:13" pos:end="107:13">if <condition pos:start="103:16" pos:end="103:34">(<expr pos:start="103:17" pos:end="103:33"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:20">==</operator> <name pos:start="103:22" pos:end="103:33"><name pos:start="103:22" pos:end="103:24">opp</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:33">nb_cpus</name></name></expr>)</condition> <block pos:start="103:36" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:22">

                <expr_stmt pos:start="105:17" pos:end="105:22"><expr pos:start="105:17" pos:end="105:21"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <literal type="number" pos:start="105:21" pos:end="105:21">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="109:13" pos:end="117:13"><if pos:start="109:13" pos:end="117:13">if <condition pos:start="109:16" pos:end="109:41">(<expr pos:start="109:17" pos:end="109:40"><name pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:19">src</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:29">destmask</name></name> <operator pos:start="109:31" pos:end="109:31">&amp;</operator> <operator pos:start="109:33" pos:end="109:33">(</operator><literal type="number" pos:start="109:34" pos:end="109:34">1</literal> <operator pos:start="109:36" pos:end="109:37">&lt;&lt;</operator> <name pos:start="109:39" pos:end="109:39">i</name><operator pos:start="109:40" pos:end="109:40">)</operator></expr>)</condition> <block pos:start="109:43" pos:end="117:13">{<block_content pos:start="111:17" pos:end="115:22">

                <expr_stmt pos:start="111:17" pos:end="111:66"><expr pos:start="111:17" pos:end="111:65"><call pos:start="111:17" pos:end="111:65"><name pos:start="111:17" pos:end="111:30">IRQ_local_pipe</name><argument_list pos:start="111:31" pos:end="111:65">(<argument pos:start="111:32" pos:end="111:34"><expr pos:start="111:32" pos:end="111:34"><name pos:start="111:32" pos:end="111:34">opp</name></expr></argument>, <argument pos:start="111:37" pos:end="111:37"><expr pos:start="111:37" pos:end="111:37"><name pos:start="111:37" pos:end="111:37">i</name></expr></argument>, <argument pos:start="111:40" pos:end="111:44"><expr pos:start="111:40" pos:end="111:44"><name pos:start="111:40" pos:end="111:44">n_IRQ</name></expr></argument>, <argument pos:start="111:47" pos:end="111:52"><expr pos:start="111:47" pos:end="111:52"><name pos:start="111:47" pos:end="111:52">active</name></expr></argument>, <argument pos:start="111:55" pos:end="111:64"><expr pos:start="111:55" pos:end="111:64"><name pos:start="111:55" pos:end="111:64">was_active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:34"><expr pos:start="113:17" pos:end="113:33"><name pos:start="113:17" pos:end="113:29"><name pos:start="113:17" pos:end="113:19">src</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:29">last_cpu</name></name> <operator pos:start="113:31" pos:end="113:31">=</operator> <name pos:start="113:33" pos:end="113:33">i</name></expr>;</expr_stmt>

                <break pos:start="115:17" pos:end="115:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
