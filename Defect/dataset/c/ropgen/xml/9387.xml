<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9387.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">tb_check_watchpoint</name><parameter_list pos:start="1:25" pos:end="1:39">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:35"><name pos:start="1:26" pos:end="1:33">CPUState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:31">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">TranslationBlock</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">tb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:6">tb</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:35"><name pos:start="9:10" pos:end="9:19">tb_find_pc</name><argument_list pos:start="9:20" pos:end="9:35">(<argument pos:start="9:21" pos:end="9:34"><expr pos:start="9:21" pos:end="9:34"><name pos:start="9:21" pos:end="9:34"><name pos:start="9:21" pos:end="9:23">cpu</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:34">mem_io_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:11">tb</name></expr>)</condition> <block pos:start="11:14" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:42">

        <expr_stmt pos:start="13:9" pos:end="15:42"><expr pos:start="13:9" pos:end="15:41"><call pos:start="13:9" pos:end="15:41"><name pos:start="13:9" pos:end="13:17">cpu_abort</name><argument_list pos:start="13:18" pos:end="15:41">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:21">cpu</name></expr></argument>, <argument pos:start="13:24" pos:end="13:70"><expr pos:start="13:24" pos:end="13:70"><literal type="string" pos:start="13:24" pos:end="13:70">"check_watchpoint: could not find TB for pc=%p"</literal></expr></argument>,

                  <argument pos:start="15:19" pos:end="15:40"><expr pos:start="15:19" pos:end="15:40"><operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:23">void</name> <operator pos:start="15:25" pos:end="15:25">*</operator><operator pos:start="15:26" pos:end="15:26">)</operator><name pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:29">cpu</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:40">mem_io_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><call pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:29">cpu_restore_state_from_tb</name><argument_list pos:start="19:30" pos:end="19:54">(<argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">cpu</name></expr></argument>, <argument pos:start="19:36" pos:end="19:37"><expr pos:start="19:36" pos:end="19:37"><name pos:start="19:36" pos:end="19:37">tb</name></expr></argument>, <argument pos:start="19:40" pos:end="19:53"><expr pos:start="19:40" pos:end="19:53"><name pos:start="19:40" pos:end="19:53"><name pos:start="19:40" pos:end="19:42">cpu</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:53">mem_io_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><call pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:22">tb_phys_invalidate</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">tb</name></expr></argument>, <argument pos:start="21:28" pos:end="21:29"><expr pos:start="21:28" pos:end="21:29"><operator pos:start="21:28" pos:end="21:28">-</operator><literal type="number" pos:start="21:29" pos:end="21:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
