<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3064.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">lsi_do_dma</name><parameter_list pos:start="1:23" pos:end="1:44">(<parameter pos:start="1:24" pos:end="1:34"><decl pos:start="1:24" pos:end="1:34"><type pos:start="1:24" pos:end="1:34"><name pos:start="1:24" pos:end="1:31">LSIState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:43"><decl pos:start="1:37" pos:end="1:43"><type pos:start="1:37" pos:end="1:43"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:43">out</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:18">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:27">addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:27">current_dma_len</name></name></expr>)</condition> <block pos:start="11:30" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <comment type="block" pos:start="13:9" pos:end="13:44">/* Wait until data is available.  */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><call pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:15">DPRINTF</name><argument_list pos:start="15:16" pos:end="15:42">(<argument pos:start="15:17" pos:end="15:41"><expr pos:start="15:17" pos:end="15:41"><literal type="string" pos:start="15:17" pos:end="15:41">"DMA no data available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:9">count</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:18">dbc</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:35">(<expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:13">count</name> <operator pos:start="25:15" pos:end="25:15">&gt;</operator> <name pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:34">current_dma_len</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:13">count</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:34"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:34">current_dma_len</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:8">addr</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:18">dnad</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:42"><if pos:start="33:5" pos:end="35:44">if <condition pos:start="33:8" pos:end="33:25">(<expr pos:start="33:9" pos:end="33:24"><call pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:21">lsi_dma_40bit</name><argument_list pos:start="33:22" pos:end="33:24">(<argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:44"><block_content pos:start="35:9" pos:end="35:44">

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:12">addr</name> <operator pos:start="35:14" pos:end="35:15">|=</operator> <operator pos:start="35:17" pos:end="35:17">(</operator><operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:26">uint64_t</name><operator pos:start="35:27" pos:end="35:27">)</operator><name pos:start="35:28" pos:end="35:36"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:36">dnad64</name></name> <operator pos:start="35:38" pos:end="35:39">&lt;&lt;</operator> <literal type="number" pos:start="35:41" pos:end="35:42">32</literal><operator pos:start="35:43" pos:end="35:43">)</operator></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="37:5" pos:end="39:42">else if <condition pos:start="37:13" pos:end="37:21">(<expr pos:start="37:14" pos:end="37:20"><name pos:start="37:14" pos:end="37:20"><name pos:start="37:14" pos:end="37:14">s</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:20">sbms</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:42"><block_content pos:start="39:9" pos:end="39:42">

        <expr_stmt pos:start="39:9" pos:end="39:42"><expr pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:12">addr</name> <operator pos:start="39:14" pos:end="39:15">|=</operator> <operator pos:start="39:17" pos:end="39:17">(</operator><operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:26">uint64_t</name><operator pos:start="39:27" pos:end="39:27">)</operator><name pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">sbms</name></name> <operator pos:start="39:36" pos:end="39:37">&lt;&lt;</operator> <literal type="number" pos:start="39:39" pos:end="39:40">32</literal><operator pos:start="39:41" pos:end="39:41">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:67"><expr pos:start="43:5" pos:end="43:66"><call pos:start="43:5" pos:end="43:66"><name pos:start="43:5" pos:end="43:11">DPRINTF</name><argument_list pos:start="43:12" pos:end="43:66">(<argument pos:start="43:13" pos:end="43:52"><expr pos:start="43:13" pos:end="43:52"><literal type="string" pos:start="43:13" pos:end="43:25">"DMA addr=0x"</literal> <name pos:start="43:27" pos:end="43:40">TARGET_FMT_plx</name> <literal type="string" pos:start="43:42" pos:end="43:52">" len=%d\n"</literal></expr></argument>, <argument pos:start="43:55" pos:end="43:58"><expr pos:start="43:55" pos:end="43:58"><name pos:start="43:55" pos:end="43:58">addr</name></expr></argument>, <argument pos:start="43:61" pos:end="43:65"><expr pos:start="43:61" pos:end="43:65"><name pos:start="43:61" pos:end="43:65">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:11">csbc</name></name> <operator pos:start="45:13" pos:end="45:14">+=</operator> <name pos:start="45:16" pos:end="45:20">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:21"><expr pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:11">dnad</name></name> <operator pos:start="47:13" pos:end="47:14">+=</operator> <name pos:start="47:16" pos:end="47:20">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:10"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:10">dbc</name></name> <operator pos:start="49:12" pos:end="49:13">-=</operator> <name pos:start="49:15" pos:end="49:19">count</name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">dma_buf</name></name> <operator pos:start="53:20" pos:end="53:21">==</operator> <name pos:start="53:23" pos:end="53:26">NULL</name></expr>)</condition> <block pos:start="53:29" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:61">

        <expr_stmt pos:start="55:9" pos:end="57:61"><expr pos:start="55:9" pos:end="57:60"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">dma_buf</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="57:60"><name pos:start="55:22" pos:end="55:44"><name pos:start="55:22" pos:end="55:22">s</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:35">current_dev</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:44">get_buf</name></name><argument_list pos:start="55:45" pos:end="57:60">(<argument pos:start="55:46" pos:end="55:59"><expr pos:start="55:46" pos:end="55:59"><name pos:start="55:46" pos:end="55:59"><name pos:start="55:46" pos:end="55:46">s</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:59">current_dev</name></name></expr></argument>,

                                             <argument pos:start="57:46" pos:end="57:59"><expr pos:start="57:46" pos:end="57:59"><name pos:start="57:46" pos:end="57:59"><name pos:start="57:46" pos:end="57:46">s</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:59">current_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:43">/* ??? Set SFBR to first data byte.  */</comment>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:12">(<expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">out</name></expr>)</condition> <block pos:start="65:14" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:58">

        <expr_stmt pos:start="67:9" pos:end="67:58"><expr pos:start="67:9" pos:end="67:57"><call pos:start="67:9" pos:end="67:57"><name pos:start="67:9" pos:end="67:32">cpu_physical_memory_read</name><argument_list pos:start="67:33" pos:end="67:57">(<argument pos:start="67:34" pos:end="67:37"><expr pos:start="67:34" pos:end="67:37"><name pos:start="67:34" pos:end="67:37">addr</name></expr></argument>, <argument pos:start="67:40" pos:end="67:49"><expr pos:start="67:40" pos:end="67:49"><name pos:start="67:40" pos:end="67:49"><name pos:start="67:40" pos:end="67:40">s</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:49">dma_buf</name></name></expr></argument>, <argument pos:start="67:52" pos:end="67:56"><expr pos:start="67:52" pos:end="67:56"><name pos:start="67:52" pos:end="67:56">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:59">

        <expr_stmt pos:start="71:9" pos:end="71:59"><expr pos:start="71:9" pos:end="71:58"><call pos:start="71:9" pos:end="71:58"><name pos:start="71:9" pos:end="71:33">cpu_physical_memory_write</name><argument_list pos:start="71:34" pos:end="71:58">(<argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><name pos:start="71:35" pos:end="71:38">addr</name></expr></argument>, <argument pos:start="71:41" pos:end="71:50"><expr pos:start="71:41" pos:end="71:50"><name pos:start="71:41" pos:end="71:50"><name pos:start="71:41" pos:end="71:41">s</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:50">dma_buf</name></name></expr></argument>, <argument pos:start="71:53" pos:end="71:57"><expr pos:start="71:53" pos:end="71:57"><name pos:start="71:53" pos:end="71:57">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:32"><expr pos:start="75:5" pos:end="75:31"><name pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:22">current_dma_len</name></name> <operator pos:start="75:24" pos:end="75:25">-=</operator> <name pos:start="75:27" pos:end="75:31">count</name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="101:5"><if pos:start="77:5" pos:end="95:5">if <condition pos:start="77:8" pos:end="77:32">(<expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:26">current_dma_len</name></name> <operator pos:start="77:28" pos:end="77:29">==</operator> <literal type="number" pos:start="77:31" pos:end="77:31">0</literal></expr>)</condition> <block pos:start="77:34" pos:end="95:5">{<block_content pos:start="79:9" pos:end="93:9">

        <expr_stmt pos:start="79:9" pos:end="79:26"><expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">dma_buf</name></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:25">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="93:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:16">(<expr pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">out</name></expr>)</condition> <block pos:start="81:18" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:71">

            <comment type="block" pos:start="83:13" pos:end="83:34">/* Write the data.  */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:71"><expr pos:start="85:13" pos:end="85:70"><call pos:start="85:13" pos:end="85:70"><name pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:26">current_dev</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:38">write_data</name></name><argument_list pos:start="85:39" pos:end="85:70">(<argument pos:start="85:40" pos:end="85:53"><expr pos:start="85:40" pos:end="85:53"><name pos:start="85:40" pos:end="85:53"><name pos:start="85:40" pos:end="85:40">s</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:53">current_dev</name></name></expr></argument>, <argument pos:start="85:56" pos:end="85:69"><expr pos:start="85:56" pos:end="85:69"><name pos:start="85:56" pos:end="85:69"><name pos:start="85:56" pos:end="85:56">s</name><operator pos:start="85:57" pos:end="85:58">-&gt;</operator><name pos:start="85:59" pos:end="85:69">current_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="93:9">else <block pos:start="87:16" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:70">

            <comment type="block" pos:start="89:13" pos:end="89:46">/* Request any remaining data.  */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:70"><expr pos:start="91:13" pos:end="91:69"><call pos:start="91:13" pos:end="91:69"><name pos:start="91:13" pos:end="91:37"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:26">current_dev</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:37">read_data</name></name><argument_list pos:start="91:38" pos:end="91:69">(<argument pos:start="91:39" pos:end="91:52"><expr pos:start="91:39" pos:end="91:52"><name pos:start="91:39" pos:end="91:52"><name pos:start="91:39" pos:end="91:39">s</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:52">current_dev</name></name></expr></argument>, <argument pos:start="91:55" pos:end="91:68"><expr pos:start="91:55" pos:end="91:68"><name pos:start="91:55" pos:end="91:68"><name pos:start="91:55" pos:end="91:55">s</name><operator pos:start="91:56" pos:end="91:57">-&gt;</operator><name pos:start="91:58" pos:end="91:68">current_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="101:5">else <block pos:start="95:12" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:29">

        <expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:18">dma_buf</name></name> <operator pos:start="97:20" pos:end="97:21">+=</operator> <name pos:start="97:23" pos:end="97:27">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:29"><expr pos:start="99:9" pos:end="99:28"><call pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:25">lsi_resume_script</name><argument_list pos:start="99:26" pos:end="99:28">(<argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
