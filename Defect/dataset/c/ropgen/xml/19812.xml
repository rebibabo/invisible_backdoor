<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19812.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:21">AVOption</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:36">av_set_number</name><parameter_list pos:start="1:37" pos:end="1:102">(<parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">obj</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">name</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:72">double</name></type> <name pos:start="1:74" pos:end="1:76">num</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:85"><decl pos:start="1:79" pos:end="1:85"><type pos:start="1:79" pos:end="1:85"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:85">den</name></decl></parameter>, <parameter pos:start="1:88" pos:end="1:101"><decl pos:start="1:88" pos:end="1:101"><type pos:start="1:88" pos:end="1:101"><name pos:start="1:88" pos:end="1:94">int64_t</name></type> <name pos:start="1:96" pos:end="1:101">intnum</name></decl></parameter>)</parameter_list><block pos:start="1:103" pos:end="55:1">{<block_content pos:start="3:5" pos:end="53:13">

    <decl_stmt pos:start="3:5" pos:end="3:58"><decl pos:start="3:5" pos:end="3:57"><type pos:start="3:5" pos:end="3:20"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:18">AVOption</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">o</name><init pos:start="3:22" pos:end="3:57">= <expr pos:start="3:24" pos:end="3:57"><call pos:start="3:24" pos:end="3:57"><name pos:start="3:24" pos:end="3:34">av_find_opt</name><argument_list pos:start="3:35" pos:end="3:57">(<argument pos:start="3:36" pos:end="3:38"><expr pos:start="3:36" pos:end="3:38"><name pos:start="3:36" pos:end="3:38">obj</name></expr></argument>, <argument pos:start="3:41" pos:end="3:44"><expr pos:start="3:41" pos:end="3:44"><name pos:start="3:41" pos:end="3:44">name</name></expr></argument>, <argument pos:start="3:47" pos:end="3:50"><expr pos:start="3:47" pos:end="3:50"><name pos:start="3:47" pos:end="3:50">NULL</name></expr></argument>, <argument pos:start="3:53" pos:end="3:53"><expr pos:start="3:53" pos:end="3:53"><literal type="number" pos:start="3:53" pos:end="3:53">0</literal></expr></argument>, <argument pos:start="3:56" pos:end="3:56"><expr pos:start="3:56" pos:end="3:56"><literal type="number" pos:start="3:56" pos:end="3:56">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">void</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">dst</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:20"><if pos:start="7:5" pos:end="9:20">if<condition pos:start="7:7" pos:end="7:26">(<expr pos:start="7:8" pos:end="7:25"><operator pos:start="7:8" pos:end="7:8">!</operator><name pos:start="7:9" pos:end="7:9">o</name> <operator pos:start="7:11" pos:end="7:12">||</operator> <name pos:start="7:14" pos:end="7:22"><name pos:start="7:14" pos:end="7:14">o</name><operator pos:start="7:15" pos:end="7:16">-&gt;</operator><name pos:start="7:17" pos:end="7:22">offset</name></name><operator pos:start="7:23" pos:end="7:24">&lt;=</operator><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:20"><block_content pos:start="9:9" pos:end="9:20">

        <return pos:start="9:9" pos:end="9:20">return <expr pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if<condition pos:start="13:7" pos:end="13:58">(<expr pos:start="13:8" pos:end="13:57"><name pos:start="13:8" pos:end="13:13"><name pos:start="13:8" pos:end="13:8">o</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:13">max</name></name><operator pos:start="13:14" pos:end="13:14">*</operator><name pos:start="13:15" pos:end="13:46"><name pos:start="13:15" pos:end="13:17">den</name> <argument_list type="generic" pos:start="13:19" pos:end="13:46">&lt; <argument pos:start="13:21" pos:end="13:44"><expr pos:start="13:21" pos:end="13:44"><name pos:start="13:21" pos:end="13:23">num</name><operator pos:start="13:24" pos:end="13:24">*</operator><name pos:start="13:25" pos:end="13:30">intnum</name> <operator pos:start="13:32" pos:end="13:33">||</operator> <name pos:start="13:35" pos:end="13:40"><name pos:start="13:35" pos:end="13:35">o</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:40">min</name></name><operator pos:start="13:41" pos:end="13:41">*</operator><name pos:start="13:42" pos:end="13:44">den</name></expr></argument> &gt;</argument_list></name> <name pos:start="13:48" pos:end="13:50">num</name><operator pos:start="13:51" pos:end="13:51">*</operator><name pos:start="13:52" pos:end="13:57">intnum</name></expr>)</condition> <block pos:start="13:60" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:20">

        <expr_stmt pos:start="15:9" pos:end="15:93"><expr pos:start="15:9" pos:end="15:92"><call pos:start="15:9" pos:end="15:92"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:92">(<argument pos:start="15:16" pos:end="15:19"><expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr></argument>, <argument pos:start="15:22" pos:end="15:33"><expr pos:start="15:22" pos:end="15:33"><name pos:start="15:22" pos:end="15:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:36" pos:end="15:80"><expr pos:start="15:36" pos:end="15:80"><literal type="string" pos:start="15:36" pos:end="15:80">"Value %lf for parameter '%s' out of range\n"</literal></expr></argument>, <argument pos:start="15:83" pos:end="15:85"><expr pos:start="15:83" pos:end="15:85"><name pos:start="15:83" pos:end="15:85">num</name></expr></argument>, <argument pos:start="15:88" pos:end="15:91"><expr pos:start="15:88" pos:end="15:91"><name pos:start="15:88" pos:end="15:91">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:7">dst</name><operator pos:start="23:8" pos:end="23:8">=</operator> <operator pos:start="23:10" pos:end="23:10">(</operator><operator pos:start="23:11" pos:end="23:11">(</operator><name pos:start="23:12" pos:end="23:18">uint8_t</name><operator pos:start="23:19" pos:end="23:19">*</operator><operator pos:start="23:20" pos:end="23:20">)</operator><name pos:start="23:21" pos:end="23:23">obj</name><operator pos:start="23:24" pos:end="23:24">)</operator> <operator pos:start="23:26" pos:end="23:26">+</operator> <name pos:start="23:28" pos:end="23:36"><name pos:start="23:28" pos:end="23:28">o</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:36">offset</name></name></expr>;</expr_stmt>



    <switch pos:start="27:5" pos:end="51:5">switch<condition pos:start="27:11" pos:end="27:19">(<expr pos:start="27:12" pos:end="27:18"><name pos:start="27:12" pos:end="27:18"><name pos:start="27:12" pos:end="27:12">o</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">type</name></name></expr>)</condition><block pos:start="27:20" pos:end="51:5">{<block_content pos:start="29:5" pos:end="49:20">

    <case pos:start="29:5" pos:end="29:27">case <expr pos:start="29:10" pos:end="29:26"><name pos:start="29:10" pos:end="29:26">FF_OPT_TYPE_FLAGS</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:25">case <expr pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:24">FF_OPT_TYPE_INT</name></expr>:</case>   <expr_stmt pos:start="31:29" pos:end="31:70"><expr pos:start="31:29" pos:end="31:69"><operator pos:start="31:29" pos:end="31:29">*</operator><operator pos:start="31:30" pos:end="31:30">(</operator><name pos:start="31:31" pos:end="31:33">int</name>       <operator pos:start="31:41" pos:end="31:41">*</operator><operator pos:start="31:42" pos:end="31:42">)</operator><name pos:start="31:43" pos:end="31:45">dst</name><operator pos:start="31:46" pos:end="31:46">=</operator> <call pos:start="31:48" pos:end="31:62"><name pos:start="31:48" pos:end="31:53">llrint</name><argument_list pos:start="31:54" pos:end="31:62">(<argument pos:start="31:55" pos:end="31:61"><expr pos:start="31:55" pos:end="31:61"><name pos:start="31:55" pos:end="31:57">num</name><operator pos:start="31:58" pos:end="31:58">/</operator><name pos:start="31:59" pos:end="31:61">den</name></expr></argument>)</argument_list></call><operator pos:start="31:63" pos:end="31:63">*</operator><name pos:start="31:64" pos:end="31:69">intnum</name></expr>;</expr_stmt> <break pos:start="31:72" pos:end="31:77">break;</break>

    <case pos:start="33:5" pos:end="33:27">case <expr pos:start="33:10" pos:end="33:26"><name pos:start="33:10" pos:end="33:26">FF_OPT_TYPE_INT64</name></expr>:</case> <expr_stmt pos:start="33:29" pos:end="33:70"><expr pos:start="33:29" pos:end="33:69"><operator pos:start="33:29" pos:end="33:29">*</operator><operator pos:start="33:30" pos:end="33:30">(</operator><name pos:start="33:31" pos:end="33:37">int64_t</name>   <operator pos:start="33:41" pos:end="33:41">*</operator><operator pos:start="33:42" pos:end="33:42">)</operator><name pos:start="33:43" pos:end="33:45">dst</name><operator pos:start="33:46" pos:end="33:46">=</operator> <call pos:start="33:48" pos:end="33:62"><name pos:start="33:48" pos:end="33:53">llrint</name><argument_list pos:start="33:54" pos:end="33:62">(<argument pos:start="33:55" pos:end="33:61"><expr pos:start="33:55" pos:end="33:61"><name pos:start="33:55" pos:end="33:57">num</name><operator pos:start="33:58" pos:end="33:58">/</operator><name pos:start="33:59" pos:end="33:61">den</name></expr></argument>)</argument_list></call><operator pos:start="33:63" pos:end="33:63">*</operator><name pos:start="33:64" pos:end="33:69">intnum</name></expr>;</expr_stmt> <break pos:start="33:72" pos:end="33:77">break;</break>

    <case pos:start="35:5" pos:end="35:27">case <expr pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:26">FF_OPT_TYPE_FLOAT</name></expr>:</case> <expr_stmt pos:start="35:29" pos:end="35:62"><expr pos:start="35:29" pos:end="35:61"><operator pos:start="35:29" pos:end="35:29">*</operator><operator pos:start="35:30" pos:end="35:30">(</operator><name pos:start="35:31" pos:end="35:35">float</name>     <operator pos:start="35:41" pos:end="35:41">*</operator><operator pos:start="35:42" pos:end="35:42">)</operator><name pos:start="35:43" pos:end="35:45">dst</name><operator pos:start="35:46" pos:end="35:46">=</operator> <name pos:start="35:48" pos:end="35:50">num</name><operator pos:start="35:51" pos:end="35:51">*</operator><name pos:start="35:52" pos:end="35:57">intnum</name><operator pos:start="35:58" pos:end="35:58">/</operator><name pos:start="35:59" pos:end="35:61">den</name></expr>;</expr_stmt>         <break pos:start="35:72" pos:end="35:77">break;</break>

    <case pos:start="37:5" pos:end="37:28">case <expr pos:start="37:10" pos:end="37:27"><name pos:start="37:10" pos:end="37:27">FF_OPT_TYPE_DOUBLE</name></expr>:</case><expr_stmt pos:start="37:29" pos:end="37:62"><expr pos:start="37:29" pos:end="37:61"><operator pos:start="37:29" pos:end="37:29">*</operator><operator pos:start="37:30" pos:end="37:30">(</operator><name pos:start="37:31" pos:end="37:36">double</name>    <operator pos:start="37:41" pos:end="37:41">*</operator><operator pos:start="37:42" pos:end="37:42">)</operator><name pos:start="37:43" pos:end="37:45">dst</name><operator pos:start="37:46" pos:end="37:46">=</operator> <name pos:start="37:48" pos:end="37:50">num</name><operator pos:start="37:51" pos:end="37:51">*</operator><name pos:start="37:52" pos:end="37:57">intnum</name><operator pos:start="37:58" pos:end="37:58">/</operator><name pos:start="37:59" pos:end="37:61">den</name></expr>;</expr_stmt>         <break pos:start="37:72" pos:end="37:77">break;</break>

    <case pos:start="39:5" pos:end="39:30">case <expr pos:start="39:10" pos:end="39:29"><name pos:start="39:10" pos:end="39:29">FF_OPT_TYPE_RATIONAL</name></expr>:</case>

        <if_stmt pos:start="41:9" pos:end="43:77"><if pos:start="41:9" pos:end="41:77">if<condition pos:start="41:11" pos:end="41:27">(<expr pos:start="41:12" pos:end="41:26"><operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:15">int</name><operator pos:start="41:16" pos:end="41:16">)</operator><name pos:start="41:17" pos:end="41:19">num</name> <operator pos:start="41:21" pos:end="41:22">==</operator> <name pos:start="41:24" pos:end="41:26">num</name></expr>)</condition><block type="pseudo" pos:start="41:29" pos:end="41:77"><block_content pos:start="41:29" pos:end="41:77"> <expr_stmt pos:start="41:29" pos:end="41:77"><expr pos:start="41:29" pos:end="41:76"><operator pos:start="41:29" pos:end="41:29">*</operator><operator pos:start="41:30" pos:end="41:30">(</operator><name pos:start="41:31" pos:end="41:40">AVRational</name><operator pos:start="41:41" pos:end="41:41">*</operator><operator pos:start="41:42" pos:end="41:42">)</operator><name pos:start="41:43" pos:end="41:45">dst</name><operator pos:start="41:46" pos:end="41:46">=</operator> <operator pos:start="41:48" pos:end="41:48">(</operator><name pos:start="41:49" pos:end="41:58">AVRational</name><operator pos:start="41:59" pos:end="41:59">)</operator><block pos:start="41:60" pos:end="41:76">{<expr pos:start="41:61" pos:end="41:70"><name pos:start="41:61" pos:end="41:63">num</name><operator pos:start="41:64" pos:end="41:64">*</operator><name pos:start="41:65" pos:end="41:70">intnum</name></expr>, <expr pos:start="41:73" pos:end="41:75"><name pos:start="41:73" pos:end="41:75">den</name></expr>}</block></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="43:9" pos:end="43:77">else<block type="pseudo" pos:start="43:29" pos:end="43:77"><block_content pos:start="43:29" pos:end="43:77">                <expr_stmt pos:start="43:29" pos:end="43:77"><expr pos:start="43:29" pos:end="43:76"><operator pos:start="43:29" pos:end="43:29">*</operator><operator pos:start="43:30" pos:end="43:30">(</operator><name pos:start="43:31" pos:end="43:40">AVRational</name><operator pos:start="43:41" pos:end="43:41">*</operator><operator pos:start="43:42" pos:end="43:42">)</operator><name pos:start="43:43" pos:end="43:45">dst</name><operator pos:start="43:46" pos:end="43:46">=</operator> <call pos:start="43:48" pos:end="43:76"><name pos:start="43:48" pos:end="43:53">av_d2q</name><argument_list pos:start="43:54" pos:end="43:76">(<argument pos:start="43:55" pos:end="43:68"><expr pos:start="43:55" pos:end="43:68"><name pos:start="43:55" pos:end="43:57">num</name><operator pos:start="43:58" pos:end="43:58">*</operator><name pos:start="43:59" pos:end="43:64">intnum</name><operator pos:start="43:65" pos:end="43:65">/</operator><name pos:start="43:66" pos:end="43:68">den</name></expr></argument>, <argument pos:start="43:71" pos:end="43:75"><expr pos:start="43:71" pos:end="43:75"><literal type="number" pos:start="43:71" pos:end="43:71">1</literal><operator pos:start="43:72" pos:end="43:73">&lt;&lt;</operator><literal type="number" pos:start="43:74" pos:end="43:75">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <return pos:start="49:9" pos:end="49:20">return <expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><name pos:start="53:12" pos:end="53:12">o</name></expr>;</return>

</block_content>}</block></function>
</unit>
