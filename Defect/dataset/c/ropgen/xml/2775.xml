<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2775.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">xtensa_translate_init</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="98:0">

    <decl_stmt pos:start="5:5" pos:end="15:6"><decl pos:start="5:5" pos:end="15:5"><type pos:start="5:5" pos:end="5:29"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:21">char</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier> <specifier pos:start="5:25" pos:end="5:29">const</specifier></type> <name pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:38">regnames</name><index pos:start="5:39" pos:end="5:40">[]</index></name> <init pos:start="5:42" pos:end="15:5">= <expr pos:start="5:44" pos:end="15:5"><block pos:start="5:44" pos:end="15:5">{

        <expr pos:start="7:9" pos:end="7:13"><literal type="string" pos:start="7:9" pos:end="7:13">"ar0"</literal></expr>, <expr pos:start="7:16" pos:end="7:20"><literal type="string" pos:start="7:16" pos:end="7:20">"ar1"</literal></expr>, <expr pos:start="7:23" pos:end="7:27"><literal type="string" pos:start="7:23" pos:end="7:27">"ar2"</literal></expr>, <expr pos:start="7:30" pos:end="7:34"><literal type="string" pos:start="7:30" pos:end="7:34">"ar3"</literal></expr>,

        <expr pos:start="9:9" pos:end="9:13"><literal type="string" pos:start="9:9" pos:end="9:13">"ar4"</literal></expr>, <expr pos:start="9:16" pos:end="9:20"><literal type="string" pos:start="9:16" pos:end="9:20">"ar5"</literal></expr>, <expr pos:start="9:23" pos:end="9:27"><literal type="string" pos:start="9:23" pos:end="9:27">"ar6"</literal></expr>, <expr pos:start="9:30" pos:end="9:34"><literal type="string" pos:start="9:30" pos:end="9:34">"ar7"</literal></expr>,

        <expr pos:start="11:9" pos:end="11:13"><literal type="string" pos:start="11:9" pos:end="11:13">"ar8"</literal></expr>, <expr pos:start="11:16" pos:end="11:20"><literal type="string" pos:start="11:16" pos:end="11:20">"ar9"</literal></expr>, <expr pos:start="11:23" pos:end="11:28"><literal type="string" pos:start="11:23" pos:end="11:28">"ar10"</literal></expr>, <expr pos:start="11:31" pos:end="11:36"><literal type="string" pos:start="11:31" pos:end="11:36">"ar11"</literal></expr>,

        <expr pos:start="13:9" pos:end="13:14"><literal type="string" pos:start="13:9" pos:end="13:14">"ar12"</literal></expr>, <expr pos:start="13:17" pos:end="13:22"><literal type="string" pos:start="13:17" pos:end="13:22">"ar13"</literal></expr>, <expr pos:start="13:25" pos:end="13:30"><literal type="string" pos:start="13:25" pos:end="13:30">"ar14"</literal></expr>, <expr pos:start="13:33" pos:end="13:38"><literal type="string" pos:start="13:33" pos:end="13:38">"ar15"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="27:6"><decl pos:start="17:5" pos:end="27:5"><type pos:start="17:5" pos:end="17:29"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <specifier pos:start="17:12" pos:end="17:16">const</specifier> <name pos:start="17:18" pos:end="17:21">char</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier> <specifier pos:start="17:25" pos:end="17:29">const</specifier></type> <name pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:39">fregnames</name><index pos:start="17:40" pos:end="17:41">[]</index></name> <init pos:start="17:43" pos:end="27:5">= <expr pos:start="17:45" pos:end="27:5"><block pos:start="17:45" pos:end="27:5">{

        <expr pos:start="19:9" pos:end="19:12"><literal type="string" pos:start="19:9" pos:end="19:12">"f0"</literal></expr>, <expr pos:start="19:15" pos:end="19:18"><literal type="string" pos:start="19:15" pos:end="19:18">"f1"</literal></expr>, <expr pos:start="19:21" pos:end="19:24"><literal type="string" pos:start="19:21" pos:end="19:24">"f2"</literal></expr>, <expr pos:start="19:27" pos:end="19:30"><literal type="string" pos:start="19:27" pos:end="19:30">"f3"</literal></expr>,

        <expr pos:start="21:9" pos:end="21:12"><literal type="string" pos:start="21:9" pos:end="21:12">"f4"</literal></expr>, <expr pos:start="21:15" pos:end="21:18"><literal type="string" pos:start="21:15" pos:end="21:18">"f5"</literal></expr>, <expr pos:start="21:21" pos:end="21:24"><literal type="string" pos:start="21:21" pos:end="21:24">"f6"</literal></expr>, <expr pos:start="21:27" pos:end="21:30"><literal type="string" pos:start="21:27" pos:end="21:30">"f7"</literal></expr>,

        <expr pos:start="23:9" pos:end="23:12"><literal type="string" pos:start="23:9" pos:end="23:12">"f8"</literal></expr>, <expr pos:start="23:15" pos:end="23:18"><literal type="string" pos:start="23:15" pos:end="23:18">"f9"</literal></expr>, <expr pos:start="23:21" pos:end="23:25"><literal type="string" pos:start="23:21" pos:end="23:25">"f10"</literal></expr>, <expr pos:start="23:28" pos:end="23:32"><literal type="string" pos:start="23:28" pos:end="23:32">"f11"</literal></expr>,

        <expr pos:start="25:9" pos:end="25:13"><literal type="string" pos:start="25:9" pos:end="25:13">"f12"</literal></expr>, <expr pos:start="25:16" pos:end="25:20"><literal type="string" pos:start="25:16" pos:end="25:20">"f13"</literal></expr>, <expr pos:start="25:23" pos:end="25:27"><literal type="string" pos:start="25:23" pos:end="25:27">"f14"</literal></expr>, <expr pos:start="25:30" pos:end="25:34"><literal type="string" pos:start="25:30" pos:end="25:34">"f15"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:55"><expr pos:start="33:5" pos:end="33:54"><name pos:start="33:5" pos:end="33:11">cpu_env</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:54"><name pos:start="33:15" pos:end="33:36">tcg_global_reg_new_ptr</name><argument_list pos:start="33:37" pos:end="33:54">(<argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:46">TCG_AREG0</name></expr></argument>, <argument pos:start="33:49" pos:end="33:53"><expr pos:start="33:49" pos:end="33:53"><literal type="string" pos:start="33:49" pos:end="33:53">"env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:48"><expr pos:start="35:5" pos:end="37:47"><name pos:start="35:5" pos:end="35:10">cpu_pc</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="37:47"><name pos:start="35:14" pos:end="35:35">tcg_global_mem_new_i32</name><argument_list pos:start="35:36" pos:end="37:47">(<argument pos:start="35:37" pos:end="35:45"><expr pos:start="35:37" pos:end="35:45"><name pos:start="35:37" pos:end="35:45">TCG_AREG0</name></expr></argument>,

            <argument pos:start="37:13" pos:end="37:40"><expr pos:start="37:13" pos:end="37:40"><call pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:20">offsetof</name><argument_list pos:start="37:21" pos:end="37:40">(<argument pos:start="37:22" pos:end="37:35"><expr pos:start="37:22" pos:end="37:35"><name pos:start="37:22" pos:end="37:35">CPUXtensaState</name></expr></argument>, <argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><name pos:start="37:38" pos:end="37:39">pc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:43" pos:end="37:46"><expr pos:start="37:43" pos:end="37:46"><literal type="string" pos:start="37:43" pos:end="37:46">"pc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="49:5">for <control pos:start="41:9" pos:end="41:28">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:23"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <literal type="number" pos:start="41:21" pos:end="41:22">16</literal></expr>;</condition> <incr pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:25">i</name><operator pos:start="41:26" pos:end="41:27">++</operator></expr></incr>)</control> <block pos:start="41:30" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:29">

        <expr_stmt pos:start="43:9" pos:end="47:29"><expr pos:start="43:9" pos:end="47:28"><name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:13">cpu_R</name><index pos:start="43:14" pos:end="43:16">[<expr pos:start="43:15" pos:end="43:15"><name pos:start="43:15" pos:end="43:15">i</name></expr>]</index></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="47:28"><name pos:start="43:20" pos:end="43:41">tcg_global_mem_new_i32</name><argument_list pos:start="43:42" pos:end="47:28">(<argument pos:start="43:43" pos:end="43:51"><expr pos:start="43:43" pos:end="43:51"><name pos:start="43:43" pos:end="43:51">TCG_AREG0</name></expr></argument>,

                <argument pos:start="45:17" pos:end="45:49"><expr pos:start="45:17" pos:end="45:49"><call pos:start="45:17" pos:end="45:49"><name pos:start="45:17" pos:end="45:24">offsetof</name><argument_list pos:start="45:25" pos:end="45:49">(<argument pos:start="45:26" pos:end="45:39"><expr pos:start="45:26" pos:end="45:39"><name pos:start="45:26" pos:end="45:39">CPUXtensaState</name></expr></argument>, <argument pos:start="45:42" pos:end="45:48"><expr pos:start="45:42" pos:end="45:48"><name pos:start="45:42" pos:end="45:48"><name pos:start="45:42" pos:end="45:45">regs</name><index pos:start="45:46" pos:end="45:48">[<expr pos:start="45:47" pos:end="45:47"><name pos:start="45:47" pos:end="45:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:24">regnames</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="53:5" pos:end="61:5">for <control pos:start="53:9" pos:end="53:28">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:23"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <literal type="number" pos:start="53:21" pos:end="53:22">16</literal></expr>;</condition> <incr pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:25">i</name><operator pos:start="53:26" pos:end="53:27">++</operator></expr></incr>)</control> <block pos:start="53:30" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:30">

        <expr_stmt pos:start="55:9" pos:end="59:30"><expr pos:start="55:9" pos:end="59:29"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:14">cpu_FR</name><index pos:start="55:15" pos:end="55:17">[<expr pos:start="55:16" pos:end="55:16"><name pos:start="55:16" pos:end="55:16">i</name></expr>]</index></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="59:29"><name pos:start="55:21" pos:end="55:42">tcg_global_mem_new_i32</name><argument_list pos:start="55:43" pos:end="59:29">(<argument pos:start="55:44" pos:end="55:52"><expr pos:start="55:44" pos:end="55:52"><name pos:start="55:44" pos:end="55:52">TCG_AREG0</name></expr></argument>,

                <argument pos:start="57:17" pos:end="57:50"><expr pos:start="57:17" pos:end="57:50"><call pos:start="57:17" pos:end="57:50"><name pos:start="57:17" pos:end="57:24">offsetof</name><argument_list pos:start="57:25" pos:end="57:50">(<argument pos:start="57:26" pos:end="57:39"><expr pos:start="57:26" pos:end="57:39"><name pos:start="57:26" pos:end="57:39">CPUXtensaState</name></expr></argument>, <argument pos:start="57:42" pos:end="57:49"><expr pos:start="57:42" pos:end="57:49"><name pos:start="57:42" pos:end="57:49"><name pos:start="57:42" pos:end="57:46">fregs</name><index pos:start="57:47" pos:end="57:49">[<expr pos:start="57:48" pos:end="57:48"><name pos:start="57:48" pos:end="57:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="59:17" pos:end="59:28"><expr pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:25">fregnames</name><index pos:start="59:26" pos:end="59:28">[<expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="65:5" pos:end="77:5">for <control pos:start="65:9" pos:end="65:29">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:24"><expr pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <literal type="number" pos:start="65:21" pos:end="65:23">256</literal></expr>;</condition> <incr pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><operator pos:start="65:26" pos:end="65:27">++</operator><name pos:start="65:28" pos:end="65:28">i</name></expr></incr>)</control> <block pos:start="65:31" pos:end="77:5">{<block_content pos:start="67:9" pos:end="75:9">

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="75:9">if <condition pos:start="67:12" pos:end="67:25">(<expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:21">sregnames</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">i</name></expr>]</index></name></expr>)</condition> <block pos:start="67:27" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:34">

            <expr_stmt pos:start="69:13" pos:end="73:34"><expr pos:start="69:13" pos:end="73:33"><name pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:18">cpu_SR</name><index pos:start="69:19" pos:end="69:21">[<expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">i</name></expr>]</index></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="73:33"><name pos:start="69:25" pos:end="69:46">tcg_global_mem_new_i32</name><argument_list pos:start="69:47" pos:end="73:33">(<argument pos:start="69:48" pos:end="69:56"><expr pos:start="69:48" pos:end="69:56"><name pos:start="69:48" pos:end="69:56">TCG_AREG0</name></expr></argument>,

                    <argument pos:start="71:21" pos:end="71:54"><expr pos:start="71:21" pos:end="71:54"><call pos:start="71:21" pos:end="71:54"><name pos:start="71:21" pos:end="71:28">offsetof</name><argument_list pos:start="71:29" pos:end="71:54">(<argument pos:start="71:30" pos:end="71:43"><expr pos:start="71:30" pos:end="71:43"><name pos:start="71:30" pos:end="71:43">CPUXtensaState</name></expr></argument>, <argument pos:start="71:46" pos:end="71:53"><expr pos:start="71:46" pos:end="71:53"><name pos:start="71:46" pos:end="71:53"><name pos:start="71:46" pos:end="71:50">sregs</name><index pos:start="71:51" pos:end="71:53">[<expr pos:start="71:52" pos:end="71:52"><name pos:start="71:52" pos:end="71:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="73:21" pos:end="73:32"><expr pos:start="73:21" pos:end="73:32"><name pos:start="73:21" pos:end="73:32"><name pos:start="73:21" pos:end="73:29">sregnames</name><index pos:start="73:30" pos:end="73:32">[<expr pos:start="73:31" pos:end="73:31"><name pos:start="73:31" pos:end="73:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="81:5" pos:end="98:0">for <control pos:start="81:9" pos:end="81:29">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:24"><expr pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <literal type="number" pos:start="81:21" pos:end="81:23">256</literal></expr>;</condition> <incr pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><operator pos:start="81:26" pos:end="81:27">++</operator><name pos:start="81:28" pos:end="81:28">i</name></expr></incr>)</control> <block pos:start="81:31" pos:end="98:0">{<block_content pos:start="83:9" pos:end="91:9">

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:25">(<expr pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:21">uregnames</name><index pos:start="83:22" pos:end="83:24">[<expr pos:start="83:23" pos:end="83:23"><name pos:start="83:23" pos:end="83:23">i</name></expr>]</index></name></expr>)</condition> <block pos:start="83:27" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:34">

            <expr_stmt pos:start="85:13" pos:end="89:34"><expr pos:start="85:13" pos:end="89:33"><name pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:18">cpu_UR</name><index pos:start="85:19" pos:end="85:21">[<expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">i</name></expr>]</index></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="89:33"><name pos:start="85:25" pos:end="85:46">tcg_global_mem_new_i32</name><argument_list pos:start="85:47" pos:end="89:33">(<argument pos:start="85:48" pos:end="85:56"><expr pos:start="85:48" pos:end="85:56"><name pos:start="85:48" pos:end="85:56">TCG_AREG0</name></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:54"><expr pos:start="87:21" pos:end="87:54"><call pos:start="87:21" pos:end="87:54"><name pos:start="87:21" pos:end="87:28">offsetof</name><argument_list pos:start="87:29" pos:end="87:54">(<argument pos:start="87:30" pos:end="87:43"><expr pos:start="87:30" pos:end="87:43"><name pos:start="87:30" pos:end="87:43">CPUXtensaState</name></expr></argument>, <argument pos:start="87:46" pos:end="87:53"><expr pos:start="87:46" pos:end="87:53"><name pos:start="87:46" pos:end="87:53"><name pos:start="87:46" pos:end="87:50">uregs</name><index pos:start="87:51" pos:end="87:53">[<expr pos:start="87:52" pos:end="87:52"><name pos:start="87:52" pos:end="87:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="89:21" pos:end="89:32"><expr pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:29">uregnames</name><index pos:start="89:30" pos:end="89:32">[<expr pos:start="89:31" pos:end="89:31"><name pos:start="89:31" pos:end="89:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:define pos:start="95:1" pos:end="95:20">#<cpp:directive pos:start="95:2" pos:end="95:7">define</cpp:directive> <cpp:macro pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:18">GEN_HELPER</name></cpp:macro> <cpp:value pos:start="95:20" pos:end="95:20">2</cpp:value></cpp:define>

<cpp:include pos:start="97:1" pos:end="97:19">#<cpp:directive pos:start="97:2" pos:end="97:8">include</cpp:directive> <cpp:file pos:start="97:10" pos:end="97:19">"helper.h"</cpp:file></cpp:include>

</block_content>}</block></function>
</unit>
