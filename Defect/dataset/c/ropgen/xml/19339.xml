<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19339.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:34">colo_process_incoming_thread</name><parameter_list pos:start="1:35" pos:end="1:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:16">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26">MigrationIncomingState</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:31">mis</name> <init pos:start="5:33" pos:end="5:40">= <expr pos:start="5:35" pos:end="5:40"><name pos:start="5:35" pos:end="5:40">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:45"><expr pos:start="9:5" pos:end="11:44"><call pos:start="9:5" pos:end="11:44"><name pos:start="9:5" pos:end="9:21">migrate_set_state</name><argument_list pos:start="9:22" pos:end="11:44">(<argument pos:start="9:23" pos:end="9:33"><expr pos:start="9:23" pos:end="9:33"><operator pos:start="9:23" pos:end="9:23">&amp;</operator><name pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:26">mis</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:33">state</name></name></expr></argument>, <argument pos:start="9:36" pos:end="9:58"><expr pos:start="9:36" pos:end="9:58"><name pos:start="9:36" pos:end="9:58">MIGRATION_STATUS_ACTIVE</name></expr></argument>,

                      <argument pos:start="11:23" pos:end="11:43"><expr pos:start="11:23" pos:end="11:43"><name pos:start="11:23" pos:end="11:43">MIGRATION_STATUS_COLO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:69"><expr pos:start="15:5" pos:end="15:68"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:7">mis</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:20">to_src_file</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="15:68"><name pos:start="15:24" pos:end="15:48">qemu_file_get_return_path</name><argument_list pos:start="15:49" pos:end="15:68">(<argument pos:start="15:50" pos:end="15:67"><expr pos:start="15:50" pos:end="15:67"><name pos:start="15:50" pos:end="15:67"><name pos:start="15:50" pos:end="15:52">mis</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:67">from_src_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:12">mis</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:25">to_src_file</name></name></expr>)</condition> <block pos:start="17:28" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:79"><expr pos:start="19:9" pos:end="19:78"><call pos:start="19:9" pos:end="19:78"><name pos:start="19:9" pos:end="19:20">error_report</name><argument_list pos:start="19:21" pos:end="19:78">(<argument pos:start="19:22" pos:end="19:77"><expr pos:start="19:22" pos:end="19:77"><literal type="string" pos:start="19:22" pos:end="19:77">"COLO incoming thread: Open QEMUFile to_src_file failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="25:5" pos:end="35:7">/*

     * Note: the communication between Primary side and Secondary side

     * should be sequential, we set the fd to unblocked in migration incoming

     * coroutine, and here we are in the COLO incoming thread, so it is ok to

     * set the fd back to blocked.

     */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><call pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:26">qemu_file_set_blocking</name><argument_list pos:start="37:27" pos:end="37:52">(<argument pos:start="37:28" pos:end="37:45"><expr pos:start="37:28" pos:end="37:45"><name pos:start="37:28" pos:end="37:45"><name pos:start="37:28" pos:end="37:30">mis</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:45">from_src_file</name></name></expr></argument>, <argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:44">/* TODO: COLO checkpoint restore loop */</comment>



<label pos:start="45:1" pos:end="45:4"><name pos:start="45:1" pos:end="45:3">out</name>:</label>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:25">(<expr pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:11">mis</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:24">to_src_file</name></name></expr>)</condition> <block pos:start="47:27" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:38">

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><call pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:19">qemu_fclose</name><argument_list pos:start="49:20" pos:end="49:37">(<argument pos:start="49:21" pos:end="49:36"><expr pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:23">mis</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:36">to_src_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><call pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:32">migration_incoming_exit_colo</name><argument_list pos:start="53:33" pos:end="53:34">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:16">return <expr pos:start="57:12" pos:end="57:15"><name pos:start="57:12" pos:end="57:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
