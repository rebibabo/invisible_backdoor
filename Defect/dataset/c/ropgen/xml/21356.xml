<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21356.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">virtio_write_config</name><parameter_list pos:start="1:32" pos:end="3:54">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:41">PCIDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:50">pci_dev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:68">address</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:40">uint32_t</name></type> <name pos:start="3:42" pos:end="3:44">val</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:53"><decl pos:start="3:47" pos:end="3:53"><type pos:start="3:47" pos:end="3:53"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:53">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:54">

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:71">= <expr pos:start="7:29" pos:end="7:71"><call pos:start="7:29" pos:end="7:71"><name pos:start="7:29" pos:end="7:37">DO_UPCAST</name><argument_list pos:start="7:38" pos:end="7:71">(<argument pos:start="7:39" pos:end="7:52"><expr pos:start="7:39" pos:end="7:52"><name pos:start="7:39" pos:end="7:52">VirtIOPCIProxy</name></expr></argument>, <argument pos:start="7:55" pos:end="7:61"><expr pos:start="7:55" pos:end="7:61"><name pos:start="7:55" pos:end="7:61">pci_dev</name></expr></argument>, <argument pos:start="7:64" pos:end="7:70"><expr pos:start="7:64" pos:end="7:70"><name pos:start="7:64" pos:end="7:70">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:19">PCI_COMMAND</name> <operator pos:start="11:21" pos:end="11:22">==</operator> <name pos:start="11:24" pos:end="11:30">address</name></expr>)</condition> <block pos:start="11:33" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:9">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:40">(<expr pos:start="13:13" pos:end="13:39"><operator pos:start="13:13" pos:end="13:13">!</operator><operator pos:start="13:14" pos:end="13:14">(</operator><name pos:start="13:15" pos:end="13:17">val</name> <operator pos:start="13:19" pos:end="13:19">&amp;</operator> <name pos:start="13:21" pos:end="13:38">PCI_COMMAND_MASTER</name><operator pos:start="13:39" pos:end="13:39">)</operator></expr>)</condition> <block pos:start="13:42" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:62">

            <expr_stmt pos:start="15:13" pos:end="15:62"><expr pos:start="15:13" pos:end="15:61"><name pos:start="15:13" pos:end="15:31"><name pos:start="15:13" pos:end="15:17">proxy</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:23">vdev</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:31">status</name></name> <operator pos:start="15:33" pos:end="15:34">&amp;=</operator> <operator pos:start="15:36" pos:end="15:36">!</operator><name pos:start="15:37" pos:end="15:61">VIRTIO_CONFIG_S_DRIVER_OK</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:28">pci_default_write_config</name><argument_list pos:start="23:29" pos:end="23:56">(<argument pos:start="23:30" pos:end="23:36"><expr pos:start="23:30" pos:end="23:36"><name pos:start="23:30" pos:end="23:36">pci_dev</name></expr></argument>, <argument pos:start="23:39" pos:end="23:45"><expr pos:start="23:39" pos:end="23:45"><name pos:start="23:39" pos:end="23:45">address</name></expr></argument>, <argument pos:start="23:48" pos:end="23:50"><expr pos:start="23:48" pos:end="23:50"><name pos:start="23:48" pos:end="23:50">val</name></expr></argument>, <argument pos:start="23:53" pos:end="23:55"><expr pos:start="23:53" pos:end="23:55"><name pos:start="23:53" pos:end="23:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:54"><if pos:start="25:5" pos:end="27:54">if<condition pos:start="25:7" pos:end="25:29">(<expr pos:start="25:8" pos:end="25:28"><name pos:start="25:8" pos:end="25:28"><name pos:start="25:8" pos:end="25:12">proxy</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">vdev</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:28">nvectors</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:54"><block_content pos:start="27:9" pos:end="27:54">

        <expr_stmt pos:start="27:9" pos:end="27:54"><expr pos:start="27:9" pos:end="27:53"><call pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:25">msix_write_config</name><argument_list pos:start="27:26" pos:end="27:53">(<argument pos:start="27:27" pos:end="27:33"><expr pos:start="27:27" pos:end="27:33"><name pos:start="27:27" pos:end="27:33">pci_dev</name></expr></argument>, <argument pos:start="27:36" pos:end="27:42"><expr pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:42">address</name></expr></argument>, <argument pos:start="27:45" pos:end="27:47"><expr pos:start="27:45" pos:end="27:47"><name pos:start="27:45" pos:end="27:47">val</name></expr></argument>, <argument pos:start="27:50" pos:end="27:52"><expr pos:start="27:50" pos:end="27:52"><name pos:start="27:50" pos:end="27:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
