<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17580.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">vfio_mmap_region</name><parameter_list pos:start="1:21" pos:end="7:38">(<parameter pos:start="1:22" pos:end="1:32"><decl pos:start="1:22" pos:end="1:32"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:27">Object</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">obj</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:44">VFIORegion</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">region</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:38"><decl pos:start="3:22" pos:end="3:38"><type pos:start="3:22" pos:end="3:38"><name pos:start="3:22" pos:end="3:33">MemoryRegion</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:38">mem</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:60"><decl pos:start="3:41" pos:end="3:60"><type pos:start="3:41" pos:end="3:60"><name pos:start="3:41" pos:end="3:52">MemoryRegion</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:60">submem</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:31"><decl pos:start="5:22" pos:end="5:31"><type pos:start="5:22" pos:end="5:31"><name pos:start="5:22" pos:end="5:25">void</name> <modifier pos:start="5:27" pos:end="5:27">*</modifier><modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:31">map</name></decl></parameter>, <parameter pos:start="5:34" pos:end="5:44"><decl pos:start="5:34" pos:end="5:44"><type pos:start="5:34" pos:end="5:44"><name pos:start="5:34" pos:end="5:39">size_t</name></type> <name pos:start="5:41" pos:end="5:44">size</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:58"><decl pos:start="5:47" pos:end="5:58"><type pos:start="5:47" pos:end="5:58"><name pos:start="5:47" pos:end="5:51">off_t</name></type> <name pos:start="5:53" pos:end="5:58">offset</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:37"><decl pos:start="7:22" pos:end="7:37"><type pos:start="7:22" pos:end="7:37"><specifier pos:start="7:22" pos:end="7:26">const</specifier> <name pos:start="7:28" pos:end="7:31">char</name> <modifier pos:start="7:33" pos:end="7:33">*</modifier></type><name pos:start="7:34" pos:end="7:37">name</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="81:1">{<block_content pos:start="11:5" pos:end="79:15">

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">VFIODevice</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:24">vbasedev</name> <init pos:start="13:26" pos:end="13:43">= <expr pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:33">region</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:43">vbasedev</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="71:5"><if pos:start="17:5" pos:end="63:5">if <condition pos:start="17:8" pos:end="19:35">(<expr pos:start="17:9" pos:end="19:34"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:16">vbasedev</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:28">allow_mmap</name></name> <operator pos:start="17:30" pos:end="17:31">&amp;&amp;</operator> <name pos:start="17:33" pos:end="17:36">size</name> <operator pos:start="17:38" pos:end="17:39">&amp;&amp;</operator> <name pos:start="17:41" pos:end="17:53"><name pos:start="17:41" pos:end="17:46">region</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:53">flags</name></name> <operator pos:start="17:55" pos:end="17:55">&amp;</operator>

        <name pos:start="19:9" pos:end="19:34">VFIO_REGION_INFO_FLAG_MMAP</name></expr>)</condition> <block pos:start="19:37" pos:end="63:5">{<block_content pos:start="21:9" pos:end="61:44">

        <decl_stmt pos:start="21:9" pos:end="21:21"><decl pos:start="21:9" pos:end="21:20"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:16">prot</name> <init pos:start="21:18" pos:end="21:20">= <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:55">(<expr pos:start="25:13" pos:end="25:54"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:18">region</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:25">flags</name></name> <operator pos:start="25:27" pos:end="25:27">&amp;</operator> <name pos:start="25:29" pos:end="25:54">VFIO_REGION_INFO_FLAG_READ</name></expr>)</condition> <block pos:start="25:57" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:30">

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:16">prot</name> <operator pos:start="27:18" pos:end="27:19">|=</operator> <name pos:start="27:21" pos:end="27:29">PROT_READ</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:56">(<expr pos:start="33:13" pos:end="33:55"><name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:18">region</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">flags</name></name> <operator pos:start="33:27" pos:end="33:27">&amp;</operator> <name pos:start="33:29" pos:end="33:55">VFIO_REGION_INFO_FLAG_WRITE</name></expr>)</condition> <block pos:start="33:58" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:31">

            <expr_stmt pos:start="35:13" pos:end="35:31"><expr pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:16">prot</name> <operator pos:start="35:18" pos:end="35:19">|=</operator> <name pos:start="35:21" pos:end="35:30">PROT_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="45:48"><expr pos:start="41:9" pos:end="45:47"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:12">map</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="45:47"><name pos:start="41:16" pos:end="41:19">mmap</name><argument_list pos:start="41:20" pos:end="45:47">(<argument pos:start="41:21" pos:end="41:24"><expr pos:start="41:21" pos:end="41:24"><name pos:start="41:21" pos:end="41:24">NULL</name></expr></argument>, <argument pos:start="41:27" pos:end="41:30"><expr pos:start="41:27" pos:end="41:30"><name pos:start="41:27" pos:end="41:30">size</name></expr></argument>, <argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">prot</name></expr></argument>, <argument pos:start="41:39" pos:end="41:48"><expr pos:start="41:39" pos:end="41:48"><name pos:start="41:39" pos:end="41:48">MAP_SHARED</name></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:32"><expr pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:28">vbasedev</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:32">fd</name></name></expr></argument>,

                    <argument pos:start="45:21" pos:end="45:46"><expr pos:start="45:21" pos:end="45:46"><name pos:start="45:21" pos:end="45:37"><name pos:start="45:21" pos:end="45:26">region</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:37">fd_offset</name></name> <operator pos:start="45:39" pos:end="45:39">+</operator> <name pos:start="45:41" pos:end="45:46">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:31">(<expr pos:start="47:13" pos:end="47:30"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:16">map</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <name pos:start="47:21" pos:end="47:30">MAP_FAILED</name></expr>)</condition> <block pos:start="47:33" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:30">

            <expr_stmt pos:start="49:13" pos:end="49:24"><expr pos:start="49:13" pos:end="49:23"><operator pos:start="49:13" pos:end="49:13">*</operator><name pos:start="49:14" pos:end="49:16">map</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:23">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:25"><expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <operator pos:start="51:19" pos:end="51:19">-</operator><name pos:start="51:20" pos:end="51:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="53:13" pos:end="53:30">goto <name pos:start="53:18" pos:end="53:29">empty_region</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:66"><expr pos:start="59:9" pos:end="59:65"><call pos:start="59:9" pos:end="59:65"><name pos:start="59:9" pos:end="59:34">memory_region_init_ram_ptr</name><argument_list pos:start="59:35" pos:end="59:65">(<argument pos:start="59:36" pos:end="59:41"><expr pos:start="59:36" pos:end="59:41"><name pos:start="59:36" pos:end="59:41">submem</name></expr></argument>, <argument pos:start="59:44" pos:end="59:46"><expr pos:start="59:44" pos:end="59:46"><name pos:start="59:44" pos:end="59:46">obj</name></expr></argument>, <argument pos:start="59:49" pos:end="59:52"><expr pos:start="59:49" pos:end="59:52"><name pos:start="59:49" pos:end="59:52">name</name></expr></argument>, <argument pos:start="59:55" pos:end="59:58"><expr pos:start="59:55" pos:end="59:58"><name pos:start="59:55" pos:end="59:58">size</name></expr></argument>, <argument pos:start="59:61" pos:end="59:64"><expr pos:start="59:61" pos:end="59:64"><operator pos:start="59:61" pos:end="59:61">*</operator><name pos:start="59:62" pos:end="59:64">map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><call pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:35">memory_region_set_skip_dump</name><argument_list pos:start="61:36" pos:end="61:43">(<argument pos:start="61:37" pos:end="61:42"><expr pos:start="61:37" pos:end="61:42"><name pos:start="61:37" pos:end="61:42">submem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="71:5">else <block pos:start="63:12" pos:end="71:5">{<block_content pos:start="65:1" pos:end="69:49">

<label pos:start="65:1" pos:end="65:13"><name pos:start="65:1" pos:end="65:12">empty_region</name>:</label>

        <comment type="block" pos:start="67:9" pos:end="67:66">/* Create a zero sized sub-region to make cleanup easy. */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:49"><expr pos:start="69:9" pos:end="69:48"><call pos:start="69:9" pos:end="69:48"><name pos:start="69:9" pos:end="69:26">memory_region_init</name><argument_list pos:start="69:27" pos:end="69:48">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">submem</name></expr></argument>, <argument pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:38">obj</name></expr></argument>, <argument pos:start="69:41" pos:end="69:44"><expr pos:start="69:41" pos:end="69:44"><name pos:start="69:41" pos:end="69:44">name</name></expr></argument>, <argument pos:start="69:47" pos:end="69:47"><expr pos:start="69:47" pos:end="69:47"><literal type="number" pos:start="69:47" pos:end="69:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:53"><expr pos:start="75:5" pos:end="75:52"><call pos:start="75:5" pos:end="75:52"><name pos:start="75:5" pos:end="75:31">memory_region_add_subregion</name><argument_list pos:start="75:32" pos:end="75:52">(<argument pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:35">mem</name></expr></argument>, <argument pos:start="75:38" pos:end="75:43"><expr pos:start="75:38" pos:end="75:43"><name pos:start="75:38" pos:end="75:43">offset</name></expr></argument>, <argument pos:start="75:46" pos:end="75:51"><expr pos:start="75:46" pos:end="75:51"><name pos:start="75:46" pos:end="75:51">submem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
