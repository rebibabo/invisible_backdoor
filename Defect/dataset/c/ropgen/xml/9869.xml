<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9869.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">raw_probe_blocksizes</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:64">BlockSizes</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">bsz</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRawState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:50"><name pos:start="11:11" pos:end="11:31">bdrv_probe_blocksizes</name><argument_list pos:start="11:32" pos:end="11:50">(<argument pos:start="11:33" pos:end="11:44"><expr pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:34">bs</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:40">file</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:44">bs</name></name></expr></argument>, <argument pos:start="11:47" pos:end="11:49"><expr pos:start="11:47" pos:end="11:49"><name pos:start="11:47" pos:end="11:49">bsz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">&lt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>)</condition> <block pos:start="13:18" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:19">

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:62">(<expr pos:start="21:9" pos:end="21:61"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:61"><name pos:start="21:10" pos:end="21:24">QEMU_IS_ALIGNED</name><argument_list pos:start="21:25" pos:end="21:61">(<argument pos:start="21:26" pos:end="21:34"><expr pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:34">offset</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:60"><expr pos:start="21:37" pos:end="21:60"><call pos:start="21:37" pos:end="21:60"><name pos:start="21:37" pos:end="21:39">MAX</name><argument_list pos:start="21:40" pos:end="21:60">(<argument pos:start="21:41" pos:end="21:48"><expr pos:start="21:41" pos:end="21:48"><name pos:start="21:41" pos:end="21:48"><name pos:start="21:41" pos:end="21:43">bsz</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:48">log</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:59"><expr pos:start="21:51" pos:end="21:59"><name pos:start="21:51" pos:end="21:59"><name pos:start="21:51" pos:end="21:53">bsz</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:59">phys</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:64" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:24">

        <return pos:start="23:9" pos:end="23:24">return <expr pos:start="23:16" pos:end="23:23"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
