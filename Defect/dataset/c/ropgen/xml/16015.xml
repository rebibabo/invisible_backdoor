<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16015.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type>  <name pos:start="1:14" pos:end="1:28">ahci_port_write</name><parameter_list pos:start="1:29" pos:end="1:78">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:38">AHCIState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:51"><decl pos:start="1:44" pos:end="1:51"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:51">port</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:73">uint32_t</name></type> <name pos:start="1:75" pos:end="1:77">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:5">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">AHCIPortRegs</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">pr</name> <init pos:start="5:22" pos:end="5:46">= <expr pos:start="5:24" pos:end="5:46"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">dev</name><index pos:start="5:31" pos:end="5:36">[<expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">port</name></expr>]</index></name><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:46">port_regs</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:59"><expr pos:start="9:5" pos:end="9:58"><call pos:start="9:5" pos:end="9:58"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="9:58">(<argument pos:start="9:13" pos:end="9:16"><expr pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:16">port</name></expr></argument>, <argument pos:start="9:19" pos:end="9:44"><expr pos:start="9:19" pos:end="9:44"><literal type="string" pos:start="9:19" pos:end="9:44">"offset: 0x%x val: 0x%x\n"</literal></expr></argument>, <argument pos:start="9:47" pos:end="9:52"><expr pos:start="9:47" pos:end="9:52"><name pos:start="9:47" pos:end="9:52">offset</name></expr></argument>, <argument pos:start="9:55" pos:end="9:57"><expr pos:start="9:55" pos:end="9:57"><name pos:start="9:55" pos:end="9:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="11:5" pos:end="177:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="177:5">{<block_content pos:start="13:9" pos:end="175:18">

        <case pos:start="13:9" pos:end="13:27">case <expr pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:26">PORT_LST_ADDR</name></expr>:</case>

            <expr_stmt pos:start="15:13" pos:end="15:31"><expr pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:14">pr</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:24">lst_addr</name></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <name pos:start="15:28" pos:end="15:30">val</name></expr>;</expr_stmt>

            <break pos:start="17:13" pos:end="17:18">break;</break>

        <case pos:start="19:9" pos:end="19:30">case <expr pos:start="19:14" pos:end="19:29"><name pos:start="19:14" pos:end="19:29">PORT_LST_ADDR_HI</name></expr>:</case>

            <expr_stmt pos:start="21:13" pos:end="21:34"><expr pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:14">pr</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:27">lst_addr_hi</name></name> <operator pos:start="21:29" pos:end="21:29">=</operator> <name pos:start="21:31" pos:end="21:33">val</name></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        <case pos:start="25:9" pos:end="25:27">case <expr pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:26">PORT_FIS_ADDR</name></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:31"><expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:14">pr</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:24">fis_addr</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:30">val</name></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:30">case <expr pos:start="31:14" pos:end="31:29"><name pos:start="31:14" pos:end="31:29">PORT_FIS_ADDR_HI</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:14">pr</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:27">fis_addr_hi</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:33">val</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:27">case <expr pos:start="37:14" pos:end="37:26"><name pos:start="37:14" pos:end="37:26">PORT_IRQ_STAT</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">pr</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:24">irq_stat</name></name> <operator pos:start="39:26" pos:end="39:27">&amp;=</operator> <operator pos:start="39:29" pos:end="39:29">~</operator><name pos:start="39:30" pos:end="39:32">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><call pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:26">ahci_check_irq</name><argument_list pos:start="41:27" pos:end="41:29">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:27">case <expr pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:26">PORT_IRQ_MASK</name></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:14">pr</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:24">irq_mask</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:30">val</name> <operator pos:start="47:32" pos:end="47:32">&amp;</operator> <literal type="number" pos:start="47:34" pos:end="47:43">0xfdc000ff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:29"><call pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:26">ahci_check_irq</name><argument_list pos:start="49:27" pos:end="49:29">(<argument pos:start="49:28" pos:end="49:28"><expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:22">case <expr pos:start="53:14" pos:end="53:21"><name pos:start="53:14" pos:end="53:21">PORT_CMD</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:66"><expr pos:start="55:13" pos:end="55:65"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:14">pr</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:19">cmd</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:25">val</name> <operator pos:start="55:27" pos:end="55:27">&amp;</operator> <operator pos:start="55:29" pos:end="55:29">~</operator><operator pos:start="55:30" pos:end="55:30">(</operator><name pos:start="55:31" pos:end="55:46">PORT_CMD_LIST_ON</name> <operator pos:start="55:48" pos:end="55:48">|</operator> <name pos:start="55:50" pos:end="55:64">PORT_CMD_FIS_ON</name><operator pos:start="55:65" pos:end="55:65">)</operator></expr>;</expr_stmt>



            <if_stmt pos:start="59:13" pos:end="73:13"><if pos:start="59:13" pos:end="73:13">if <condition pos:start="59:16" pos:end="59:41">(<expr pos:start="59:17" pos:end="59:40"><name pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:18">pr</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:23">cmd</name></name> <operator pos:start="59:25" pos:end="59:25">&amp;</operator> <name pos:start="59:27" pos:end="59:40">PORT_CMD_START</name></expr>)</condition> <block pos:start="59:43" pos:end="73:13">{<block_content pos:start="61:17" pos:end="71:17">

                <if_stmt pos:start="61:17" pos:end="71:17"><if pos:start="61:17" pos:end="65:17">if <condition pos:start="61:20" pos:end="61:56">(<expr pos:start="61:21" pos:end="61:55"><call pos:start="61:21" pos:end="61:55"><name pos:start="61:21" pos:end="61:40">ahci_map_clb_address</name><argument_list pos:start="61:41" pos:end="61:55">(<argument pos:start="61:42" pos:end="61:54"><expr pos:start="61:42" pos:end="61:54"><operator pos:start="61:42" pos:end="61:42">&amp;</operator><name pos:start="61:43" pos:end="61:54"><name pos:start="61:43" pos:end="61:43">s</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:48">dev</name><index pos:start="61:49" pos:end="61:54">[<expr pos:start="61:50" pos:end="61:53"><name pos:start="61:50" pos:end="61:53">port</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:58" pos:end="65:17">{<block_content pos:start="63:21" pos:end="63:48">

                    <expr_stmt pos:start="63:21" pos:end="63:48"><expr pos:start="63:21" pos:end="63:47"><name pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:22">pr</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:27">cmd</name></name> <operator pos:start="63:29" pos:end="63:30">|=</operator> <name pos:start="63:32" pos:end="63:47">PORT_CMD_LIST_ON</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="65:19" pos:end="71:17">else <block pos:start="65:24" pos:end="71:17">{<block_content pos:start="67:21" pos:end="69:68">

                    <expr_stmt pos:start="67:21" pos:end="69:68"><expr pos:start="67:21" pos:end="69:67"><call pos:start="67:21" pos:end="69:67"><name pos:start="67:21" pos:end="67:32">error_report</name><argument_list pos:start="67:33" pos:end="69:67">(<argument pos:start="67:34" pos:end="69:66"><expr pos:start="67:34" pos:end="69:66"><literal type="string" pos:start="67:34" pos:end="67:69">"AHCI: Failed to start DMA engine: "</literal>

                                 <literal type="string" pos:start="69:34" pos:end="69:66">"bad command list buffer address"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="77:13" pos:end="91:13"><if pos:start="77:13" pos:end="91:13">if <condition pos:start="77:16" pos:end="77:42">(<expr pos:start="77:17" pos:end="77:41"><name pos:start="77:17" pos:end="77:23"><name pos:start="77:17" pos:end="77:18">pr</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:23">cmd</name></name> <operator pos:start="77:25" pos:end="77:25">&amp;</operator> <name pos:start="77:27" pos:end="77:41">PORT_CMD_FIS_RX</name></expr>)</condition> <block pos:start="77:44" pos:end="91:13">{<block_content pos:start="79:17" pos:end="89:17">

                <if_stmt pos:start="79:17" pos:end="89:17"><if pos:start="79:17" pos:end="83:17">if <condition pos:start="79:20" pos:end="79:56">(<expr pos:start="79:21" pos:end="79:55"><call pos:start="79:21" pos:end="79:55"><name pos:start="79:21" pos:end="79:40">ahci_map_fis_address</name><argument_list pos:start="79:41" pos:end="79:55">(<argument pos:start="79:42" pos:end="79:54"><expr pos:start="79:42" pos:end="79:54"><operator pos:start="79:42" pos:end="79:42">&amp;</operator><name pos:start="79:43" pos:end="79:54"><name pos:start="79:43" pos:end="79:43">s</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:48">dev</name><index pos:start="79:49" pos:end="79:54">[<expr pos:start="79:50" pos:end="79:53"><name pos:start="79:50" pos:end="79:53">port</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:58" pos:end="83:17">{<block_content pos:start="81:21" pos:end="81:47">

                    <expr_stmt pos:start="81:21" pos:end="81:47"><expr pos:start="81:21" pos:end="81:46"><name pos:start="81:21" pos:end="81:27"><name pos:start="81:21" pos:end="81:22">pr</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:27">cmd</name></name> <operator pos:start="81:29" pos:end="81:30">|=</operator> <name pos:start="81:32" pos:end="81:46">PORT_CMD_FIS_ON</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="83:19" pos:end="89:17">else <block pos:start="83:24" pos:end="89:17">{<block_content pos:start="85:21" pos:end="87:67">

                    <expr_stmt pos:start="85:21" pos:end="87:67"><expr pos:start="85:21" pos:end="87:66"><call pos:start="85:21" pos:end="87:66"><name pos:start="85:21" pos:end="85:32">error_report</name><argument_list pos:start="85:33" pos:end="87:66">(<argument pos:start="85:34" pos:end="87:65"><expr pos:start="85:34" pos:end="87:65"><literal type="string" pos:start="85:34" pos:end="85:77">"AHCI: Failed to start FIS receive engine: "</literal>

                                 <literal type="string" pos:start="87:34" pos:end="87:65">"bad FIS receive buffer address"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="95:13" pos:end="101:43">/* XXX usually the FIS would be pending on the bus here and

                   issuing deferred until the OS enables FIS receival.

                   Instead, we only submit it once - which works in most

                   cases, but is a hack. */</comment>

            <if_stmt pos:start="103:13" pos:end="111:13"><if pos:start="103:13" pos:end="111:13">if <condition pos:start="103:16" pos:end="105:44">(<expr pos:start="103:17" pos:end="105:43"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:24"><name pos:start="103:18" pos:end="103:19">pr</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:24">cmd</name></name> <operator pos:start="103:26" pos:end="103:26">&amp;</operator> <name pos:start="103:28" pos:end="103:42">PORT_CMD_FIS_ON</name><operator pos:start="103:43" pos:end="103:43">)</operator> <operator pos:start="103:45" pos:end="103:46">&amp;&amp;</operator>

                <operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:29"><name pos:start="105:18" pos:end="105:18">s</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:23">dev</name><index pos:start="105:24" pos:end="105:29">[<expr pos:start="105:25" pos:end="105:28"><name pos:start="105:25" pos:end="105:28">port</name></expr>]</index></name><operator pos:start="105:30" pos:end="105:30">.</operator><name pos:start="105:31" pos:end="105:43">init_d2h_sent</name></expr>)</condition> <block pos:start="105:46" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:50">

                <expr_stmt pos:start="107:17" pos:end="107:45"><expr pos:start="107:17" pos:end="107:44"><call pos:start="107:17" pos:end="107:44"><name pos:start="107:17" pos:end="107:29">ahci_init_d2h</name><argument_list pos:start="107:30" pos:end="107:44">(<argument pos:start="107:31" pos:end="107:43"><expr pos:start="107:31" pos:end="107:43"><operator pos:start="107:31" pos:end="107:31">&amp;</operator><name pos:start="107:32" pos:end="107:43"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:37">dev</name><index pos:start="107:38" pos:end="107:43">[<expr pos:start="107:39" pos:end="107:42"><name pos:start="107:39" pos:end="107:42">port</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:50"><expr pos:start="109:17" pos:end="109:49"><name pos:start="109:17" pos:end="109:28"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:22">dev</name><index pos:start="109:23" pos:end="109:28">[<expr pos:start="109:24" pos:end="109:27"><name pos:start="109:24" pos:end="109:27">port</name></expr>]</index></name><operator pos:start="109:29" pos:end="109:29">.</operator><name pos:start="109:30" pos:end="109:42">init_d2h_sent</name> <operator pos:start="109:44" pos:end="109:44">=</operator> <name pos:start="109:46" pos:end="109:49">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:31"><expr pos:start="115:13" pos:end="115:30"><call pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:21">check_cmd</name><argument_list pos:start="115:22" pos:end="115:30">(<argument pos:start="115:23" pos:end="115:23"><expr pos:start="115:23" pos:end="115:23"><name pos:start="115:23" pos:end="115:23">s</name></expr></argument>, <argument pos:start="115:26" pos:end="115:29"><expr pos:start="115:26" pos:end="115:29"><name pos:start="115:26" pos:end="115:29">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:25">case <expr pos:start="119:14" pos:end="119:24"><name pos:start="119:14" pos:end="119:24">PORT_TFDATA</name></expr>:</case>

            <comment type="block" pos:start="121:13" pos:end="121:28">/* Read Only. */</comment>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:22">case <expr pos:start="125:14" pos:end="125:21"><name pos:start="125:14" pos:end="125:21">PORT_SIG</name></expr>:</case>

            <comment type="block" pos:start="127:13" pos:end="127:27">/* Read Only */</comment>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:27">case <expr pos:start="131:14" pos:end="131:26"><name pos:start="131:14" pos:end="131:26">PORT_SCR_STAT</name></expr>:</case>

            <comment type="block" pos:start="133:13" pos:end="133:27">/* Read Only */</comment>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:26">case <expr pos:start="137:14" pos:end="137:25"><name pos:start="137:14" pos:end="137:25">PORT_SCR_CTL</name></expr>:</case>

            <if_stmt pos:start="139:13" pos:end="145:13"><if pos:start="139:13" pos:end="145:13">if <condition pos:start="139:16" pos:end="141:49">(<expr pos:start="139:17" pos:end="141:48"><operator pos:start="139:17" pos:end="139:17">(</operator><operator pos:start="139:18" pos:end="139:18">(</operator><name pos:start="139:19" pos:end="139:29"><name pos:start="139:19" pos:end="139:20">pr</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:29">scr_ctl</name></name> <operator pos:start="139:31" pos:end="139:31">&amp;</operator> <name pos:start="139:33" pos:end="139:49">AHCI_SCR_SCTL_DET</name><operator pos:start="139:50" pos:end="139:50">)</operator> <operator pos:start="139:52" pos:end="139:53">==</operator> <literal type="number" pos:start="139:55" pos:end="139:55">1</literal><operator pos:start="139:56" pos:end="139:56">)</operator> <operator pos:start="139:58" pos:end="139:59">&amp;&amp;</operator>

                <operator pos:start="141:17" pos:end="141:17">(</operator><operator pos:start="141:18" pos:end="141:18">(</operator><name pos:start="141:19" pos:end="141:21">val</name> <operator pos:start="141:23" pos:end="141:23">&amp;</operator> <name pos:start="141:25" pos:end="141:41">AHCI_SCR_SCTL_DET</name><operator pos:start="141:42" pos:end="141:42">)</operator> <operator pos:start="141:44" pos:end="141:45">==</operator> <literal type="number" pos:start="141:47" pos:end="141:47">0</literal><operator pos:start="141:48" pos:end="141:48">)</operator></expr>)</condition> <block pos:start="141:51" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:41">

                <expr_stmt pos:start="143:17" pos:end="143:41"><expr pos:start="143:17" pos:end="143:40"><call pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:31">ahci_reset_port</name><argument_list pos:start="143:32" pos:end="143:40">(<argument pos:start="143:33" pos:end="143:33"><expr pos:start="143:33" pos:end="143:33"><name pos:start="143:33" pos:end="143:33">s</name></expr></argument>, <argument pos:start="143:36" pos:end="143:39"><expr pos:start="143:36" pos:end="143:39"><name pos:start="143:36" pos:end="143:39">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:30"><expr pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:23"><name pos:start="147:13" pos:end="147:14">pr</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:23">scr_ctl</name></name> <operator pos:start="147:25" pos:end="147:25">=</operator> <name pos:start="147:27" pos:end="147:29">val</name></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:26">case <expr pos:start="151:14" pos:end="151:25"><name pos:start="151:14" pos:end="151:25">PORT_SCR_ERR</name></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:32"><expr pos:start="153:13" pos:end="153:31"><name pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:14">pr</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:23">scr_err</name></name> <operator pos:start="153:25" pos:end="153:26">&amp;=</operator> <operator pos:start="153:28" pos:end="153:28">~</operator><name pos:start="153:29" pos:end="153:31">val</name></expr>;</expr_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <case pos:start="157:9" pos:end="157:26">case <expr pos:start="157:14" pos:end="157:25"><name pos:start="157:14" pos:end="157:25">PORT_SCR_ACT</name></expr>:</case>

            <comment type="block" pos:start="159:13" pos:end="159:21">/* RW1 */</comment>

            <expr_stmt pos:start="161:13" pos:end="161:31"><expr pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:23"><name pos:start="161:13" pos:end="161:14">pr</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:23">scr_act</name></name> <operator pos:start="161:25" pos:end="161:26">|=</operator> <name pos:start="161:28" pos:end="161:30">val</name></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:28">case <expr pos:start="165:14" pos:end="165:27"><name pos:start="165:14" pos:end="165:27">PORT_CMD_ISSUE</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:33"><expr pos:start="167:13" pos:end="167:32"><name pos:start="167:13" pos:end="167:25"><name pos:start="167:13" pos:end="167:14">pr</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:25">cmd_issue</name></name> <operator pos:start="167:27" pos:end="167:28">|=</operator> <name pos:start="167:30" pos:end="167:32">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:31"><expr pos:start="169:13" pos:end="169:30"><call pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:21">check_cmd</name><argument_list pos:start="169:22" pos:end="169:30">(<argument pos:start="169:23" pos:end="169:23"><expr pos:start="169:23" pos:end="169:23"><name pos:start="169:23" pos:end="169:23">s</name></expr></argument>, <argument pos:start="169:26" pos:end="169:29"><expr pos:start="169:26" pos:end="169:29"><name pos:start="169:26" pos:end="169:29">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <default pos:start="173:9" pos:end="173:16">default:</default>

            <break pos:start="175:13" pos:end="175:18">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
