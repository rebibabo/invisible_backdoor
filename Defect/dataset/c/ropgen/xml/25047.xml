<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25047.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">spapr_core_unplug</name><parameter_list pos:start="1:23" pos:end="3:36">(<parameter pos:start="1:24" pos:end="1:50"><decl pos:start="1:24" pos:end="1:50"><type pos:start="1:24" pos:end="1:50"><name pos:start="1:24" pos:end="1:37">HotplugHandler</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:50">hotplug_dev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:63">DeviceState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">dev</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:28">Error</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier><modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:35">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:43">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">sPAPRCPUCore</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">core</name> <init pos:start="7:24" pos:end="7:52">= <expr pos:start="7:26" pos:end="7:52"><call pos:start="7:26" pos:end="7:52"><name pos:start="7:26" pos:end="7:39">SPAPR_CPU_CORE</name><argument_list pos:start="7:40" pos:end="7:52">(<argument pos:start="7:41" pos:end="7:51"><expr pos:start="7:41" pos:end="7:51"><call pos:start="7:41" pos:end="7:51"><name pos:start="7:41" pos:end="7:46">OBJECT</name><argument_list pos:start="7:47" pos:end="7:51">(<argument pos:start="7:48" pos:end="7:50"><expr pos:start="7:48" pos:end="7:50"><name pos:start="7:48" pos:end="7:50">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PowerPCCPU</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">cpu</name> <init pos:start="9:21" pos:end="9:48">= <expr pos:start="9:23" pos:end="9:48"><call pos:start="9:23" pos:end="9:48"><name pos:start="9:23" pos:end="9:33">POWERPC_CPU</name><argument_list pos:start="9:34" pos:end="9:48">(<argument pos:start="9:35" pos:end="9:47"><expr pos:start="9:35" pos:end="9:47"><name pos:start="9:35" pos:end="9:47"><name pos:start="9:35" pos:end="9:38">core</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:47">threads</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">id</name> <init pos:start="11:12" pos:end="11:36">= <expr pos:start="11:14" pos:end="11:36"><call pos:start="11:14" pos:end="11:36"><name pos:start="11:14" pos:end="11:31">ppc_get_vcpu_dt_id</name><argument_list pos:start="11:32" pos:end="11:36">(<argument pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:35">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:66"><decl pos:start="13:5" pos:end="15:65"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">sPAPRDRConnector</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:25">drc</name> <init pos:start="13:27" pos:end="15:65">=

        <expr pos:start="15:9" pos:end="15:65"><call pos:start="15:9" pos:end="15:65"><name pos:start="15:9" pos:end="15:32">spapr_dr_connector_by_id</name><argument_list pos:start="15:33" pos:end="15:65">(<argument pos:start="15:34" pos:end="15:60"><expr pos:start="15:34" pos:end="15:60"><name pos:start="15:34" pos:end="15:60">SPAPR_DR_CONNECTOR_TYPE_CPU</name></expr></argument>, <argument pos:start="15:63" pos:end="15:64"><expr pos:start="15:63" pos:end="15:64"><name pos:start="15:63" pos:end="15:64">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:25">sPAPRDRConnectorClass</name> <modifier pos:start="17:27" pos:end="17:27">*</modifier></type><name pos:start="17:28" pos:end="17:31">drck</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:20">local_err</name> <init pos:start="19:22" pos:end="19:27">= <expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><call pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:12">g_assert</name><argument_list pos:start="23:13" pos:end="23:17">(<argument pos:start="23:14" pos:end="23:16"><expr pos:start="23:14" pos:end="23:16"><name pos:start="23:14" pos:end="23:16">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:8">drck</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:44"><name pos:start="27:12" pos:end="27:39">SPAPR_DR_CONNECTOR_GET_CLASS</name><argument_list pos:start="27:40" pos:end="27:44">(<argument pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:43">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><call pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:8">drck</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:16">detach</name></name><argument_list pos:start="29:17" pos:end="29:64">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">drc</name></expr></argument>, <argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">dev</name></expr></argument>, <argument pos:start="29:28" pos:end="29:45"><expr pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:45">spapr_core_release</name></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:51">NULL</name></expr></argument>, <argument pos:start="29:54" pos:end="29:63"><expr pos:start="29:54" pos:end="29:63"><operator pos:start="29:54" pos:end="29:54">&amp;</operator><name pos:start="29:55" pos:end="29:63">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:17">local_err</name></expr>)</condition> <block pos:start="31:20" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><call pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:23">error_propagate</name><argument_list pos:start="33:24" pos:end="33:40">(<argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">errp</name></expr></argument>, <argument pos:start="33:31" pos:end="33:39"><expr pos:start="33:31" pos:end="33:39"><name pos:start="33:31" pos:end="33:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><call pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:37">spapr_hotplug_req_remove_by_index</name><argument_list pos:start="41:38" pos:end="41:42">(<argument pos:start="41:39" pos:end="41:41"><expr pos:start="41:39" pos:end="41:41"><name pos:start="41:39" pos:end="41:41">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
