<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13143.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">mp_decode_frame_helper</name><parameter_list pos:start="1:35" pos:end="1:78">(<parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:54">MotionPixelsContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">mp</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:77"><decl pos:start="1:61" pos:end="1:77"><type pos:start="1:61" pos:end="1:77"><name pos:start="1:61" pos:end="1:73">GetBitContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">gb</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="25:1">{<block_content pos:start="3:5" pos:end="24:38">
    <decl_stmt pos:start="3:5" pos:end="3:15"><decl pos:start="3:5" pos:end="3:14"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:12">YuvPixel</name></type> <name pos:start="3:14" pos:end="3:14">p</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:14"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">y</name></decl>, <decl pos:start="4:12" pos:end="4:13"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:12" pos:end="4:13">y0</name></decl>;</decl_stmt>
    <for pos:start="5:5" pos:end="21:5">for <control pos:start="5:9" pos:end="5:43">(<init pos:start="5:10" pos:end="5:15"><expr pos:start="5:10" pos:end="5:14"><name pos:start="5:10" pos:end="5:10">y</name> <operator pos:start="5:12" pos:end="5:12">=</operator> <literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr>;</init> <condition pos:start="5:17" pos:end="5:38"><expr pos:start="5:17" pos:end="5:37"><name pos:start="5:17" pos:end="5:17">y</name> <operator pos:start="5:19" pos:end="5:19">&lt;</operator> <name pos:start="5:21" pos:end="5:37"><name pos:start="5:21" pos:end="5:22">mp</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:37">height</name></name></expr>;</condition> <incr pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><operator pos:start="5:40" pos:end="5:41">++</operator><name pos:start="5:42" pos:end="5:42">y</name></expr></incr>)</control> <block pos:start="5:45" pos:end="21:5">{<block_content pos:start="6:9" pos:end="20:9">
        <if_stmt pos:start="6:9" pos:end="20:9"><if pos:start="6:9" pos:end="9:9">if <condition pos:start="6:12" pos:end="6:55">(<expr pos:start="6:13" pos:end="6:54"><name pos:start="6:13" pos:end="6:49"><name pos:start="6:13" pos:end="6:14">mp</name><operator pos:start="6:15" pos:end="6:16">-&gt;</operator><name pos:start="6:17" pos:end="6:27">changes_map</name><index pos:start="6:28" pos:end="6:49">[<expr pos:start="6:29" pos:end="6:48"><name pos:start="6:29" pos:end="6:29">y</name> <operator pos:start="6:31" pos:end="6:31">*</operator> <name pos:start="6:33" pos:end="6:48"><name pos:start="6:33" pos:end="6:34">mp</name><operator pos:start="6:35" pos:end="6:36">-&gt;</operator><name pos:start="6:37" pos:end="6:41">avctx</name><operator pos:start="6:42" pos:end="6:43">-&gt;</operator><name pos:start="6:44" pos:end="6:48">width</name></name></expr>]</index></name> <operator pos:start="6:51" pos:end="6:52">!=</operator> <literal type="number" pos:start="6:54" pos:end="6:54">0</literal></expr>)</condition> <block pos:start="6:57" pos:end="9:9">{<block_content pos:start="7:13" pos:end="8:46">
            <expr_stmt pos:start="7:13" pos:end="7:70"><expr pos:start="7:13" pos:end="7:69"><call pos:start="7:13" pos:end="7:69"><name pos:start="7:13" pos:end="7:18">memset</name><argument_list pos:start="7:19" pos:end="7:69">(<argument pos:start="7:20" pos:end="7:37"><expr pos:start="7:20" pos:end="7:37"><name pos:start="7:20" pos:end="7:37"><name pos:start="7:20" pos:end="7:21">mp</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:37">gradient_scale</name></name></expr></argument>, <argument pos:start="7:40" pos:end="7:40"><expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">1</literal></expr></argument>, <argument pos:start="7:43" pos:end="7:68"><expr pos:start="7:43" pos:end="7:68"><sizeof pos:start="7:43" pos:end="7:68">sizeof<argument_list pos:start="7:49" pos:end="7:68">(<argument pos:start="7:50" pos:end="7:67"><expr pos:start="7:50" pos:end="7:67"><name pos:start="7:50" pos:end="7:67"><name pos:start="7:50" pos:end="7:51">mp</name><operator pos:start="7:52" pos:end="7:53">-&gt;</operator><name pos:start="7:54" pos:end="7:67">gradient_scale</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="8:13" pos:end="8:46"><expr pos:start="8:13" pos:end="8:45"><name pos:start="8:13" pos:end="8:13">p</name> <operator pos:start="8:15" pos:end="8:15">=</operator> <call pos:start="8:17" pos:end="8:45"><name pos:start="8:17" pos:end="8:35">mp_get_yuv_from_rgb</name><argument_list pos:start="8:36" pos:end="8:45">(<argument pos:start="8:37" pos:end="8:38"><expr pos:start="8:37" pos:end="8:38"><name pos:start="8:37" pos:end="8:38">mp</name></expr></argument>, <argument pos:start="8:41" pos:end="8:41"><expr pos:start="8:41" pos:end="8:41"><literal type="number" pos:start="8:41" pos:end="8:41">0</literal></expr></argument>, <argument pos:start="8:44" pos:end="8:44"><expr pos:start="8:44" pos:end="8:44"><name pos:start="8:44" pos:end="8:44">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="9:11" pos:end="20:9">else <block pos:start="9:16" pos:end="20:9">{<block_content pos:start="10:13" pos:end="19:46">
            <expr_stmt pos:start="10:13" pos:end="10:58"><expr pos:start="10:13" pos:end="10:57"><name pos:start="10:13" pos:end="10:15"><name pos:start="10:13" pos:end="10:13">p</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:15">y</name></name> <operator pos:start="10:17" pos:end="10:18">+=</operator> <call pos:start="10:20" pos:end="10:57"><name pos:start="10:20" pos:end="10:30">mp_gradient</name><argument_list pos:start="10:31" pos:end="10:57">(<argument pos:start="10:32" pos:end="10:33"><expr pos:start="10:32" pos:end="10:33"><name pos:start="10:32" pos:end="10:33">mp</name></expr></argument>, <argument pos:start="10:36" pos:end="10:36"><expr pos:start="10:36" pos:end="10:36"><literal type="number" pos:start="10:36" pos:end="10:36">0</literal></expr></argument>, <argument pos:start="10:39" pos:end="10:56"><expr pos:start="10:39" pos:end="10:56"><call pos:start="10:39" pos:end="10:56"><name pos:start="10:39" pos:end="10:48">mp_get_vlc</name><argument_list pos:start="10:49" pos:end="10:56">(<argument pos:start="10:50" pos:end="10:51"><expr pos:start="10:50" pos:end="10:51"><name pos:start="10:50" pos:end="10:51">mp</name></expr></argument>, <argument pos:start="10:54" pos:end="10:55"><expr pos:start="10:54" pos:end="10:55"><name pos:start="10:54" pos:end="10:55">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:38"><expr pos:start="11:13" pos:end="11:37"><name pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:13">p</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:15">y</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:37"><name pos:start="11:19" pos:end="11:25">av_clip</name><argument_list pos:start="11:26" pos:end="11:37">(<argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:27">p</name><operator pos:start="11:28" pos:end="11:28">.</operator><name pos:start="11:29" pos:end="11:29">y</name></name></expr></argument>, <argument pos:start="11:32" pos:end="11:32"><expr pos:start="11:32" pos:end="11:32"><literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr></argument>, <argument pos:start="11:35" pos:end="11:36"><expr pos:start="11:35" pos:end="11:36"><literal type="number" pos:start="11:35" pos:end="11:36">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="12:13" pos:end="17:13"><if pos:start="12:13" pos:end="17:13">if <condition pos:start="12:16" pos:end="12:29">(<expr pos:start="12:17" pos:end="12:28"><operator pos:start="12:17" pos:end="12:17">(</operator><name pos:start="12:18" pos:end="12:18">y</name> <operator pos:start="12:20" pos:end="12:20">&amp;</operator> <literal type="number" pos:start="12:22" pos:end="12:22">3</literal><operator pos:start="12:23" pos:end="12:23">)</operator> <operator pos:start="12:25" pos:end="12:26">==</operator> <literal type="number" pos:start="12:28" pos:end="12:28">0</literal></expr>)</condition> <block pos:start="12:31" pos:end="17:13">{<block_content pos:start="13:17" pos:end="16:44">
                <expr_stmt pos:start="13:17" pos:end="13:62"><expr pos:start="13:17" pos:end="13:61"><name pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:17">p</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:19">v</name></name> <operator pos:start="13:21" pos:end="13:22">+=</operator> <call pos:start="13:24" pos:end="13:61"><name pos:start="13:24" pos:end="13:34">mp_gradient</name><argument_list pos:start="13:35" pos:end="13:61">(<argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><name pos:start="13:36" pos:end="13:37">mp</name></expr></argument>, <argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">1</literal></expr></argument>, <argument pos:start="13:43" pos:end="13:60"><expr pos:start="13:43" pos:end="13:60"><call pos:start="13:43" pos:end="13:60"><name pos:start="13:43" pos:end="13:52">mp_get_vlc</name><argument_list pos:start="13:53" pos:end="13:60">(<argument pos:start="13:54" pos:end="13:55"><expr pos:start="13:54" pos:end="13:55"><name pos:start="13:54" pos:end="13:55">mp</name></expr></argument>, <argument pos:start="13:58" pos:end="13:59"><expr pos:start="13:58" pos:end="13:59"><name pos:start="13:58" pos:end="13:59">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="14:17" pos:end="14:44"><expr pos:start="14:17" pos:end="14:43"><name pos:start="14:17" pos:end="14:19"><name pos:start="14:17" pos:end="14:17">p</name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:19">v</name></name> <operator pos:start="14:21" pos:end="14:21">=</operator> <call pos:start="14:23" pos:end="14:43"><name pos:start="14:23" pos:end="14:29">av_clip</name><argument_list pos:start="14:30" pos:end="14:43">(<argument pos:start="14:31" pos:end="14:33"><expr pos:start="14:31" pos:end="14:33"><name pos:start="14:31" pos:end="14:33"><name pos:start="14:31" pos:end="14:31">p</name><operator pos:start="14:32" pos:end="14:32">.</operator><name pos:start="14:33" pos:end="14:33">v</name></name></expr></argument>, <argument pos:start="14:36" pos:end="14:38"><expr pos:start="14:36" pos:end="14:38"><operator pos:start="14:36" pos:end="14:36">-</operator><literal type="number" pos:start="14:37" pos:end="14:38">32</literal></expr></argument>, <argument pos:start="14:41" pos:end="14:42"><expr pos:start="14:41" pos:end="14:42"><literal type="number" pos:start="14:41" pos:end="14:42">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:62"><expr pos:start="15:17" pos:end="15:61"><name pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:17">p</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:19">u</name></name> <operator pos:start="15:21" pos:end="15:22">+=</operator> <call pos:start="15:24" pos:end="15:61"><name pos:start="15:24" pos:end="15:34">mp_gradient</name><argument_list pos:start="15:35" pos:end="15:61">(<argument pos:start="15:36" pos:end="15:37"><expr pos:start="15:36" pos:end="15:37"><name pos:start="15:36" pos:end="15:37">mp</name></expr></argument>, <argument pos:start="15:40" pos:end="15:40"><expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">2</literal></expr></argument>, <argument pos:start="15:43" pos:end="15:60"><expr pos:start="15:43" pos:end="15:60"><call pos:start="15:43" pos:end="15:60"><name pos:start="15:43" pos:end="15:52">mp_get_vlc</name><argument_list pos:start="15:53" pos:end="15:60">(<argument pos:start="15:54" pos:end="15:55"><expr pos:start="15:54" pos:end="15:55"><name pos:start="15:54" pos:end="15:55">mp</name></expr></argument>, <argument pos:start="15:58" pos:end="15:59"><expr pos:start="15:58" pos:end="15:59"><name pos:start="15:58" pos:end="15:59">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:44"><expr pos:start="16:17" pos:end="16:43"><name pos:start="16:17" pos:end="16:19"><name pos:start="16:17" pos:end="16:17">p</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:19">u</name></name> <operator pos:start="16:21" pos:end="16:21">=</operator> <call pos:start="16:23" pos:end="16:43"><name pos:start="16:23" pos:end="16:29">av_clip</name><argument_list pos:start="16:30" pos:end="16:43">(<argument pos:start="16:31" pos:end="16:33"><expr pos:start="16:31" pos:end="16:33"><name pos:start="16:31" pos:end="16:33"><name pos:start="16:31" pos:end="16:31">p</name><operator pos:start="16:32" pos:end="16:32">.</operator><name pos:start="16:33" pos:end="16:33">u</name></name></expr></argument>, <argument pos:start="16:36" pos:end="16:38"><expr pos:start="16:36" pos:end="16:38"><operator pos:start="16:36" pos:end="16:36">-</operator><literal type="number" pos:start="16:37" pos:end="16:38">32</literal></expr></argument>, <argument pos:start="16:41" pos:end="16:42"><expr pos:start="16:41" pos:end="16:42"><literal type="number" pos:start="16:41" pos:end="16:42">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:27"><expr pos:start="18:13" pos:end="18:26"><name pos:start="18:13" pos:end="18:22"><name pos:start="18:13" pos:end="18:14">mp</name><operator pos:start="18:15" pos:end="18:16">-&gt;</operator><name pos:start="18:17" pos:end="18:19">vpt</name><index pos:start="18:20" pos:end="18:22">[<expr pos:start="18:21" pos:end="18:21"><name pos:start="18:21" pos:end="18:21">y</name></expr>]</index></name> <operator pos:start="18:24" pos:end="18:24">=</operator> <name pos:start="18:26" pos:end="18:26">p</name></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:46"><expr pos:start="19:13" pos:end="19:45"><call pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:31">mp_set_rgb_from_yuv</name><argument_list pos:start="19:32" pos:end="19:45">(<argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><name pos:start="19:33" pos:end="19:34">mp</name></expr></argument>, <argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:40"><expr pos:start="19:40" pos:end="19:40"><name pos:start="19:40" pos:end="19:40">y</name></expr></argument>, <argument pos:start="19:43" pos:end="19:44"><expr pos:start="19:43" pos:end="19:44"><operator pos:start="19:43" pos:end="19:43">&amp;</operator><name pos:start="19:44" pos:end="19:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <for pos:start="22:5" pos:end="24:38">for <control pos:start="22:9" pos:end="22:30">(<init pos:start="22:10" pos:end="22:16"><expr pos:start="22:10" pos:end="22:15"><name pos:start="22:10" pos:end="22:11">y0</name> <operator pos:start="22:13" pos:end="22:13">=</operator> <literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr>;</init> <condition pos:start="22:18" pos:end="22:24"><expr pos:start="22:18" pos:end="22:23"><name pos:start="22:18" pos:end="22:19">y0</name> <operator pos:start="22:21" pos:end="22:21">&lt;</operator> <literal type="number" pos:start="22:23" pos:end="22:23">2</literal></expr>;</condition> <incr pos:start="22:26" pos:end="22:29"><expr pos:start="22:26" pos:end="22:29"><operator pos:start="22:26" pos:end="22:27">++</operator><name pos:start="22:28" pos:end="22:29">y0</name></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="24:38"><block_content pos:start="23:9" pos:end="24:38">
        <for pos:start="23:9" pos:end="24:38">for <control pos:start="23:13" pos:end="23:51">(<init pos:start="23:14" pos:end="23:20"><expr pos:start="23:14" pos:end="23:19"><name pos:start="23:14" pos:end="23:14">y</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:19">y0</name></expr>;</init> <condition pos:start="23:22" pos:end="23:43"><expr pos:start="23:22" pos:end="23:42"><name pos:start="23:22" pos:end="23:22">y</name> <operator pos:start="23:24" pos:end="23:24">&lt;</operator> <name pos:start="23:26" pos:end="23:42"><name pos:start="23:26" pos:end="23:27">mp</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:34">avctx</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:42">height</name></name></expr>;</condition> <incr pos:start="23:45" pos:end="23:50"><expr pos:start="23:45" pos:end="23:50"><name pos:start="23:45" pos:end="23:45">y</name> <operator pos:start="23:47" pos:end="23:48">+=</operator> <literal type="number" pos:start="23:50" pos:end="23:50">2</literal></expr></incr>)</control><block type="pseudo" pos:start="24:13" pos:end="24:38"><block_content pos:start="24:13" pos:end="24:38">
            <expr_stmt pos:start="24:13" pos:end="24:38"><expr pos:start="24:13" pos:end="24:37"><call pos:start="24:13" pos:end="24:37"><name pos:start="24:13" pos:end="24:26">mp_decode_line</name><argument_list pos:start="24:27" pos:end="24:37">(<argument pos:start="24:28" pos:end="24:29"><expr pos:start="24:28" pos:end="24:29"><name pos:start="24:28" pos:end="24:29">mp</name></expr></argument>, <argument pos:start="24:32" pos:end="24:33"><expr pos:start="24:32" pos:end="24:33"><name pos:start="24:32" pos:end="24:33">gb</name></expr></argument>, <argument pos:start="24:36" pos:end="24:36"><expr pos:start="24:36" pos:end="24:36"><name pos:start="24:36" pos:end="24:36">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>
</block_content>}</block></function></unit>
