<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6821.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">openpic_load</name><parameter_list pos:start="1:24" pos:end="1:66">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:32">QEMUFile</name><modifier pos:start="1:33" pos:end="1:33">*</modifier></type> <name pos:start="1:35" pos:end="1:35">f</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:65">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:46">= <expr pos:start="5:25" pos:end="5:46"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:37">OpenPICState</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator><name pos:start="5:41" pos:end="5:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:18">version_id</name> <operator pos:start="11:20" pos:end="11:21">!=</operator> <literal type="number" pos:start="11:23" pos:end="11:23">1</literal></expr>)</condition> <block pos:start="11:26" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:23">

        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:18">qemu_get_be32s</name><argument_list pos:start="19:19" pos:end="19:32">(<argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">f</name></expr></argument>, <argument pos:start="19:23" pos:end="19:31"><expr pos:start="19:23" pos:end="19:31"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:26">opp</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:31">gcr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:18">qemu_get_be32s</name><argument_list pos:start="21:19" pos:end="21:32">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">f</name></expr></argument>, <argument pos:start="21:23" pos:end="21:31"><expr pos:start="21:23" pos:end="21:31"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:26">opp</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:31">vir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><call pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:18">qemu_get_be32s</name><argument_list pos:start="23:19" pos:end="23:32">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">f</name></expr></argument>, <argument pos:start="23:23" pos:end="23:31"><expr pos:start="23:23" pos:end="23:31"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:31"><name pos:start="23:24" pos:end="23:26">opp</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:31">pir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><call pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:18">qemu_get_be32s</name><argument_list pos:start="25:19" pos:end="25:33">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">f</name></expr></argument>, <argument pos:start="25:23" pos:end="25:32"><expr pos:start="25:23" pos:end="25:32"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:26">opp</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:32">spve</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:18">qemu_get_be32s</name><argument_list pos:start="27:19" pos:end="27:33">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">f</name></expr></argument>, <argument pos:start="27:23" pos:end="27:32"><expr pos:start="27:23" pos:end="27:32"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:26">opp</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:32">tfrr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:18">qemu_get_be32s</name><argument_list pos:start="31:19" pos:end="31:36">(<argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">f</name></expr></argument>, <argument pos:start="31:23" pos:end="31:35"><expr pos:start="31:23" pos:end="31:35"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:35"><name pos:start="31:24" pos:end="31:26">opp</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:35">nb_cpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="47:5">for <control pos:start="35:9" pos:end="35:38">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:23">opp</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:32">nb_cpus</name></name></expr>;</condition> <incr pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:35">i</name><operator pos:start="35:36" pos:end="35:37">++</operator></expr></incr>)</control> <block pos:start="35:40" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:60">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><call pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:23">qemu_get_sbe32s</name><argument_list pos:start="37:24" pos:end="37:45">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">f</name></expr></argument>, <argument pos:start="37:28" pos:end="37:44"><expr pos:start="37:28" pos:end="37:44"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:31">opp</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:36">dst</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">i</name></expr>]</index></name><operator pos:start="37:40" pos:end="37:40">.</operator><name pos:start="37:41" pos:end="37:44">ctpr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><call pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:30">openpic_load_IRQ_queue</name><argument_list pos:start="39:31" pos:end="39:54">(<argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">f</name></expr></argument>, <argument pos:start="39:35" pos:end="39:53"><expr pos:start="39:35" pos:end="39:53"><operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:46"><name pos:start="39:36" pos:end="39:38">opp</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:43">dst</name><index pos:start="39:44" pos:end="39:46">[<expr pos:start="39:45" pos:end="39:45"><name pos:start="39:45" pos:end="39:45">i</name></expr>]</index></name><operator pos:start="39:47" pos:end="39:47">.</operator><name pos:start="39:48" pos:end="39:53">raised</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><call pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:30">openpic_load_IRQ_queue</name><argument_list pos:start="41:31" pos:end="41:57">(<argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">f</name></expr></argument>, <argument pos:start="41:35" pos:end="41:56"><expr pos:start="41:35" pos:end="41:56"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:46"><name pos:start="41:36" pos:end="41:38">opp</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:43">dst</name><index pos:start="41:44" pos:end="41:46">[<expr pos:start="41:45" pos:end="41:45"><name pos:start="41:45" pos:end="41:45">i</name></expr>]</index></name><operator pos:start="41:47" pos:end="41:47">.</operator><name pos:start="41:48" pos:end="41:56">servicing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="45:60"><expr pos:start="43:9" pos:end="45:59"><call pos:start="43:9" pos:end="45:59"><name pos:start="43:9" pos:end="43:23">qemu_get_buffer</name><argument_list pos:start="43:24" pos:end="45:59">(<argument pos:start="43:25" pos:end="43:25"><expr pos:start="43:25" pos:end="43:25"><name pos:start="43:25" pos:end="43:25">f</name></expr></argument>, <argument pos:start="43:28" pos:end="43:65"><expr pos:start="43:28" pos:end="43:65"><operator pos:start="43:28" pos:end="43:28">(</operator><name pos:start="43:29" pos:end="43:35">uint8_t</name> <operator pos:start="43:37" pos:end="43:37">*</operator><operator pos:start="43:38" pos:end="43:38">)</operator><operator pos:start="43:39" pos:end="43:39">&amp;</operator><name pos:start="43:40" pos:end="43:50"><name pos:start="43:40" pos:end="43:42">opp</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:47">dst</name><index pos:start="43:48" pos:end="43:50">[<expr pos:start="43:49" pos:end="43:49"><name pos:start="43:49" pos:end="43:49">i</name></expr>]</index></name><operator pos:start="43:51" pos:end="43:51">.</operator><name pos:start="43:52" pos:end="43:65">outputs_active</name></expr></argument>,

                        <argument pos:start="45:25" pos:end="45:58"><expr pos:start="45:25" pos:end="45:58"><sizeof pos:start="45:25" pos:end="45:58">sizeof<argument_list pos:start="45:31" pos:end="45:58">(<argument pos:start="45:32" pos:end="45:57"><expr pos:start="45:32" pos:end="45:57"><name pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:34">opp</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:39">dst</name><index pos:start="45:40" pos:end="45:42">[<expr pos:start="45:41" pos:end="45:41"><name pos:start="45:41" pos:end="45:41">i</name></expr>]</index></name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:57">outputs_active</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="51:5" pos:end="57:5">for <control pos:start="51:9" pos:end="51:41">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:36"><expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:35">OPENPIC_MAX_TMR</name></expr>;</condition> <incr pos:start="51:38" pos:end="51:40"><expr pos:start="51:38" pos:end="51:40"><name pos:start="51:38" pos:end="51:38">i</name><operator pos:start="51:39" pos:end="51:40">++</operator></expr></incr>)</control> <block pos:start="51:43" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:48">

        <expr_stmt pos:start="53:9" pos:end="53:48"><expr pos:start="53:9" pos:end="53:47"><call pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:22">qemu_get_be32s</name><argument_list pos:start="53:23" pos:end="53:47">(<argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><name pos:start="53:24" pos:end="53:24">f</name></expr></argument>, <argument pos:start="53:27" pos:end="53:46"><expr pos:start="53:27" pos:end="53:46"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:41"><name pos:start="53:28" pos:end="53:30">opp</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:38">timers</name><index pos:start="53:39" pos:end="53:41">[<expr pos:start="53:40" pos:end="53:40"><name pos:start="53:40" pos:end="53:40">i</name></expr>]</index></name><operator pos:start="53:42" pos:end="53:42">.</operator><name pos:start="53:43" pos:end="53:46">tccr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><call pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:22">qemu_get_be32s</name><argument_list pos:start="55:23" pos:end="55:47">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">f</name></expr></argument>, <argument pos:start="55:27" pos:end="55:46"><expr pos:start="55:27" pos:end="55:46"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:41"><name pos:start="55:28" pos:end="55:30">opp</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:38">timers</name><index pos:start="55:39" pos:end="55:41">[<expr pos:start="55:40" pos:end="55:40"><name pos:start="55:40" pos:end="55:40">i</name></expr>]</index></name><operator pos:start="55:42" pos:end="55:42">.</operator><name pos:start="55:43" pos:end="55:46">tbcr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="61:5" pos:end="87:5">for <control pos:start="61:9" pos:end="61:38">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:33"><expr pos:start="61:17" pos:end="61:32"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:32"><name pos:start="61:21" pos:end="61:23">opp</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:32">max_irq</name></name></expr>;</condition> <incr pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:35">i</name><operator pos:start="61:36" pos:end="61:37">++</operator></expr></incr>)</control> <block pos:start="61:40" pos:end="87:5">{<block_content pos:start="63:9" pos:end="85:49">

        <decl_stmt pos:start="63:9" pos:end="63:21"><decl pos:start="63:9" pos:end="63:20"><type pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:16">uint32_t</name></type> <name pos:start="63:18" pos:end="63:20">val</name></decl>;</decl_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:31"><expr pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:11">val</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:30"><name pos:start="67:15" pos:end="67:27">qemu_get_be32</name><argument_list pos:start="67:28" pos:end="67:30">(<argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><call pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:24">write_IRQreg_idr</name><argument_list pos:start="69:25" pos:end="69:37">(<argument pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">opp</name></expr></argument>, <argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">i</name></expr></argument>, <argument pos:start="69:34" pos:end="69:36"><expr pos:start="69:34" pos:end="69:36"><name pos:start="69:34" pos:end="69:36">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:11">val</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:30"><name pos:start="71:15" pos:end="71:27">qemu_get_be32</name><argument_list pos:start="71:28" pos:end="71:30">(<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><call pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:25">write_IRQreg_ivpr</name><argument_list pos:start="73:26" pos:end="73:38">(<argument pos:start="73:27" pos:end="73:29"><expr pos:start="73:27" pos:end="73:29"><name pos:start="73:27" pos:end="73:29">opp</name></expr></argument>, <argument pos:start="73:32" pos:end="73:32"><expr pos:start="73:32" pos:end="73:32"><name pos:start="73:32" pos:end="73:32">i</name></expr></argument>, <argument pos:start="73:35" pos:end="73:37"><expr pos:start="73:35" pos:end="73:37"><name pos:start="73:35" pos:end="73:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><call pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:22">qemu_get_be32s</name><argument_list pos:start="77:23" pos:end="77:44">(<argument pos:start="77:24" pos:end="77:24"><expr pos:start="77:24" pos:end="77:24"><name pos:start="77:24" pos:end="77:24">f</name></expr></argument>, <argument pos:start="77:27" pos:end="77:43"><expr pos:start="77:27" pos:end="77:43"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:38"><name pos:start="77:28" pos:end="77:30">opp</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:35">src</name><index pos:start="77:36" pos:end="77:38">[<expr pos:start="77:37" pos:end="77:37"><name pos:start="77:37" pos:end="77:37">i</name></expr>]</index></name><operator pos:start="77:39" pos:end="77:39">.</operator><name pos:start="77:40" pos:end="77:43">ivpr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:44"><expr pos:start="79:9" pos:end="79:43"><call pos:start="79:9" pos:end="79:43"><name pos:start="79:9" pos:end="79:22">qemu_get_be32s</name><argument_list pos:start="79:23" pos:end="79:43">(<argument pos:start="79:24" pos:end="79:24"><expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">f</name></expr></argument>, <argument pos:start="79:27" pos:end="79:42"><expr pos:start="79:27" pos:end="79:42"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:38"><name pos:start="79:28" pos:end="79:30">opp</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:35">src</name><index pos:start="79:36" pos:end="79:38">[<expr pos:start="79:37" pos:end="79:37"><name pos:start="79:37" pos:end="79:37">i</name></expr>]</index></name><operator pos:start="79:39" pos:end="79:39">.</operator><name pos:start="79:40" pos:end="79:42">idr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:49"><expr pos:start="81:9" pos:end="81:48"><call pos:start="81:9" pos:end="81:48"><name pos:start="81:9" pos:end="81:22">qemu_get_be32s</name><argument_list pos:start="81:23" pos:end="81:48">(<argument pos:start="81:24" pos:end="81:24"><expr pos:start="81:24" pos:end="81:24"><name pos:start="81:24" pos:end="81:24">f</name></expr></argument>, <argument pos:start="81:27" pos:end="81:47"><expr pos:start="81:27" pos:end="81:47"><operator pos:start="81:27" pos:end="81:27">&amp;</operator><name pos:start="81:28" pos:end="81:38"><name pos:start="81:28" pos:end="81:30">opp</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:35">src</name><index pos:start="81:36" pos:end="81:38">[<expr pos:start="81:37" pos:end="81:37"><name pos:start="81:37" pos:end="81:37">i</name></expr>]</index></name><operator pos:start="81:39" pos:end="81:39">.</operator><name pos:start="81:40" pos:end="81:47">destmask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:50"><expr pos:start="83:9" pos:end="83:49"><call pos:start="83:9" pos:end="83:49"><name pos:start="83:9" pos:end="83:23">qemu_get_sbe32s</name><argument_list pos:start="83:24" pos:end="83:49">(<argument pos:start="83:25" pos:end="83:25"><expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">f</name></expr></argument>, <argument pos:start="83:28" pos:end="83:48"><expr pos:start="83:28" pos:end="83:48"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:39"><name pos:start="83:29" pos:end="83:31">opp</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:36">src</name><index pos:start="83:37" pos:end="83:39">[<expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">i</name></expr>]</index></name><operator pos:start="83:40" pos:end="83:40">.</operator><name pos:start="83:41" pos:end="83:48">last_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:49"><expr pos:start="85:9" pos:end="85:48"><call pos:start="85:9" pos:end="85:48"><name pos:start="85:9" pos:end="85:23">qemu_get_sbe32s</name><argument_list pos:start="85:24" pos:end="85:48">(<argument pos:start="85:25" pos:end="85:25"><expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">f</name></expr></argument>, <argument pos:start="85:28" pos:end="85:47"><expr pos:start="85:28" pos:end="85:47"><operator pos:start="85:28" pos:end="85:28">&amp;</operator><name pos:start="85:29" pos:end="85:39"><name pos:start="85:29" pos:end="85:31">opp</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:36">src</name><index pos:start="85:37" pos:end="85:39">[<expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">i</name></expr>]</index></name><operator pos:start="85:40" pos:end="85:40">.</operator><name pos:start="85:41" pos:end="85:47">pending</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
