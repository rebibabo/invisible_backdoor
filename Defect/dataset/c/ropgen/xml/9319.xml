<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9319.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">nelly_decode_block</name><parameter_list pos:start="1:24" pos:end="1:117">(<parameter pos:start="1:25" pos:end="1:50"><decl pos:start="1:25" pos:end="1:50"><type pos:start="1:25" pos:end="1:50"><name pos:start="1:25" pos:end="1:47">NellyMoserDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:88"><decl pos:start="1:53" pos:end="1:88"><type pos:start="1:53" pos:end="1:71"><name pos:start="1:53" pos:end="1:60">unsigned</name> <name pos:start="1:62" pos:end="1:65">char</name></type> <name pos:start="1:67" pos:end="1:88"><name pos:start="1:67" pos:end="1:71">block</name><index pos:start="1:72" pos:end="1:88">[<expr pos:start="1:73" pos:end="1:87"><name pos:start="1:73" pos:end="1:87">NELLY_BLOCK_LEN</name></expr>]</index></name></decl></parameter>, <parameter pos:start="1:91" pos:end="1:116"><decl pos:start="1:91" pos:end="1:116"><type pos:start="1:91" pos:end="1:101"><name pos:start="1:91" pos:end="1:95">float</name></type> <name pos:start="1:97" pos:end="1:116"><name pos:start="1:97" pos:end="1:101">audio</name><index pos:start="1:102" pos:end="1:116">[<expr pos:start="1:103" pos:end="1:115"><name pos:start="1:103" pos:end="1:115">NELLY_SAMPLES</name></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>,<decl pos:start="5:11" pos:end="5:11"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:11" pos:end="5:11">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">float</name></type> <name pos:start="7:11" pos:end="7:29"><name pos:start="7:11" pos:end="7:13">buf</name><index pos:start="7:14" pos:end="7:29">[<expr pos:start="7:15" pos:end="7:28"><name pos:start="7:15" pos:end="7:28">NELLY_FILL_LEN</name></expr>]</index></name></decl>, <decl pos:start="7:32" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:32" pos:end="7:51"><name pos:start="7:32" pos:end="7:35">pows</name><index pos:start="7:36" pos:end="7:51">[<expr pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:50">NELLY_FILL_LEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:15">aptr</name></decl>, <decl pos:start="9:18" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">bptr</name></decl>, <decl pos:start="9:25" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:29">pptr</name></decl>, <decl pos:start="9:32" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:32" pos:end="9:34">val</name></decl>, <decl pos:start="9:37" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:37" pos:end="9:40">pval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:12">bits</name><index pos:start="11:13" pos:end="11:27">[<expr pos:start="11:14" pos:end="11:26"><name pos:start="11:14" pos:end="11:26">NELLY_BUF_LEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:19">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:17">init_get_bits</name><argument_list pos:start="17:18" pos:end="17:53">(<argument pos:start="17:19" pos:end="17:24"><expr pos:start="17:19" pos:end="17:24"><operator pos:start="17:19" pos:end="17:19">&amp;</operator><name pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:24">gb</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:31">block</name></expr></argument>, <argument pos:start="17:34" pos:end="17:52"><expr pos:start="17:34" pos:end="17:52"><name pos:start="17:34" pos:end="17:48">NELLY_BLOCK_LEN</name> <operator pos:start="17:50" pos:end="17:50">*</operator> <literal type="number" pos:start="17:52" pos:end="17:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">bptr</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:14">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:8">pptr</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:15">pows</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:7">val</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:47"><name pos:start="25:11" pos:end="25:26">nelly_init_table</name><index pos:start="25:27" pos:end="25:47">[<expr pos:start="25:28" pos:end="25:46"><call pos:start="25:28" pos:end="25:46"><name pos:start="25:28" pos:end="25:35">get_bits</name><argument_list pos:start="25:36" pos:end="25:46">(<argument pos:start="25:37" pos:end="25:42"><expr pos:start="25:37" pos:end="25:42"><operator pos:start="25:37" pos:end="25:37">&amp;</operator><name pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:42">gb</name></name></expr></argument>, <argument pos:start="25:45" pos:end="25:45"><expr pos:start="25:45" pos:end="25:45"><literal type="number" pos:start="25:45" pos:end="25:45">6</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="45:5">for <control pos:start="27:9" pos:end="27:35">(<init pos:start="27:10" pos:end="27:14"><expr pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:10">i</name><operator pos:start="27:11" pos:end="27:11">=</operator><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr> ;</init> <condition pos:start="27:16" pos:end="27:30"><expr pos:start="27:16" pos:end="27:28"><name pos:start="27:16" pos:end="27:16">i</name><operator pos:start="27:17" pos:end="27:17">&lt;</operator><name pos:start="27:18" pos:end="27:28">NELLY_BANDS</name></expr> ;</condition> <incr pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:32">i</name><operator pos:start="27:33" pos:end="27:34">++</operator></expr></incr>)</control> <block pos:start="27:37" pos:end="45:5">{<block_content pos:start="29:9" pos:end="41:9">

        <if_stmt pos:start="29:9" pos:end="31:58"><if pos:start="29:9" pos:end="31:58">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:15">&gt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:58"><block_content pos:start="31:13" pos:end="31:58">

            <expr_stmt pos:start="31:13" pos:end="31:58"><expr pos:start="31:13" pos:end="31:57"><name pos:start="31:13" pos:end="31:15">val</name> <operator pos:start="31:17" pos:end="31:18">+=</operator> <name pos:start="31:20" pos:end="31:57"><name pos:start="31:20" pos:end="31:36">nelly_delta_table</name><index pos:start="31:37" pos:end="31:57">[<expr pos:start="31:38" pos:end="31:56"><call pos:start="31:38" pos:end="31:56"><name pos:start="31:38" pos:end="31:45">get_bits</name><argument_list pos:start="31:46" pos:end="31:56">(<argument pos:start="31:47" pos:end="31:52"><expr pos:start="31:47" pos:end="31:52"><operator pos:start="31:47" pos:end="31:47">&amp;</operator><name pos:start="31:48" pos:end="31:52"><name pos:start="31:48" pos:end="31:48">s</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:52">gb</name></name></expr></argument>, <argument pos:start="31:55" pos:end="31:55"><expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">5</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:12">pval</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:18">pow</name><argument_list pos:start="33:19" pos:end="33:31">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">2</literal></expr></argument>, <argument pos:start="33:23" pos:end="33:30"><expr pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:25">val</name><operator pos:start="33:26" pos:end="33:26">/</operator><literal type="number" pos:start="33:27" pos:end="33:30">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="35:9" pos:end="41:9">for <control pos:start="35:13" pos:end="35:55">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">j</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:50"><expr pos:start="35:21" pos:end="35:49"><name pos:start="35:21" pos:end="35:21">j</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:49"><name pos:start="35:25" pos:end="35:46">nelly_band_sizes_table</name><index pos:start="35:47" pos:end="35:49">[<expr pos:start="35:48" pos:end="35:48"><name pos:start="35:48" pos:end="35:48">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="35:52" pos:end="35:54"><expr pos:start="35:52" pos:end="35:54"><name pos:start="35:52" pos:end="35:52">j</name><operator pos:start="35:53" pos:end="35:54">++</operator></expr></incr>)</control> <block pos:start="35:57" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:27">

            <expr_stmt pos:start="37:13" pos:end="37:26"><expr pos:start="37:13" pos:end="37:25"><operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:17">bptr</name><operator pos:start="37:18" pos:end="37:19">++</operator> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:25">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:27"><expr pos:start="39:13" pos:end="39:26"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:17">pptr</name><operator pos:start="39:18" pos:end="39:19">++</operator> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:26">pval</name></expr>;</expr_stmt>

        </block_content>}</block></for>



    </block_content>}</block></for>



    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><call pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:19">get_sample_bits</name><argument_list pos:start="49:20" pos:end="49:30">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">buf</name></expr></argument>, <argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="53:5" pos:end="109:5">for <control pos:start="53:9" pos:end="53:27">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:21"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <literal type="number" pos:start="53:21" pos:end="53:21">2</literal></expr>;</condition> <incr pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:24">i</name><operator pos:start="53:25" pos:end="53:26">++</operator></expr></incr>)</control> <block pos:start="53:29" pos:end="109:5">{<block_content pos:start="55:9" pos:end="107:46">

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:12">aptr</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:20">audio</name> <operator pos:start="55:22" pos:end="55:22">+</operator> <name pos:start="55:24" pos:end="55:24">i</name> <operator pos:start="55:26" pos:end="55:26">*</operator> <name pos:start="55:28" pos:end="55:40">NELLY_BUF_LEN</name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:58"><expr pos:start="59:9" pos:end="59:57"><call pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:21">init_get_bits</name><argument_list pos:start="59:22" pos:end="59:57">(<argument pos:start="59:23" pos:end="59:28"><expr pos:start="59:23" pos:end="59:28"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:28"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:28">gb</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:35"><expr pos:start="59:31" pos:end="59:35"><name pos:start="59:31" pos:end="59:35">block</name></expr></argument>, <argument pos:start="59:38" pos:end="59:56"><expr pos:start="59:38" pos:end="59:56"><name pos:start="59:38" pos:end="59:52">NELLY_BLOCK_LEN</name> <operator pos:start="59:54" pos:end="59:54">*</operator> <literal type="number" pos:start="59:56" pos:end="59:56">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:67"><expr pos:start="61:9" pos:end="61:66"><call pos:start="61:9" pos:end="61:66"><name pos:start="61:9" pos:end="61:17">skip_bits</name><argument_list pos:start="61:18" pos:end="61:66">(<argument pos:start="61:19" pos:end="61:24"><expr pos:start="61:19" pos:end="61:24"><operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:24">gb</name></name></expr></argument>, <argument pos:start="61:27" pos:end="61:65"><expr pos:start="61:27" pos:end="61:65"><name pos:start="61:27" pos:end="61:43">NELLY_HEADER_BITS</name> <operator pos:start="61:45" pos:end="61:45">+</operator> <name pos:start="61:47" pos:end="61:47">i</name><operator pos:start="61:48" pos:end="61:48">*</operator><name pos:start="61:49" pos:end="61:65">NELLY_DETAIL_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="65:9" pos:end="83:9">for <control pos:start="65:13" pos:end="65:44">(<init pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">j</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</init> <condition pos:start="65:21" pos:end="65:39"><expr pos:start="65:21" pos:end="65:38"><name pos:start="65:21" pos:end="65:21">j</name> <operator pos:start="65:23" pos:end="65:23">&lt;</operator> <name pos:start="65:25" pos:end="65:38">NELLY_FILL_LEN</name></expr>;</condition> <incr pos:start="65:41" pos:end="65:43"><expr pos:start="65:41" pos:end="65:43"><name pos:start="65:41" pos:end="65:41">j</name><operator pos:start="65:42" pos:end="65:43">++</operator></expr></incr>)</control> <block pos:start="65:46" pos:end="83:9">{<block_content pos:start="67:13" pos:end="81:13">

            <if_stmt pos:start="67:13" pos:end="81:13"><if pos:start="67:13" pos:end="75:13">if <condition pos:start="67:16" pos:end="67:29">(<expr pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:20">bits</name><index pos:start="67:21" pos:end="67:23">[<expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">j</name></expr>]</index></name> <operator pos:start="67:25" pos:end="67:26">&lt;=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr>)</condition> <block pos:start="67:31" pos:end="75:13">{<block_content pos:start="69:17" pos:end="73:36">

                <expr_stmt pos:start="69:17" pos:end="69:44"><expr pos:start="69:17" pos:end="69:43"><name pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:20">aptr</name><index pos:start="69:21" pos:end="69:23">[<expr pos:start="69:22" pos:end="69:22"><name pos:start="69:22" pos:end="69:22">j</name></expr>]</index></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:35">M_SQRT1_2</name><operator pos:start="69:36" pos:end="69:36">*</operator><name pos:start="69:37" pos:end="69:43"><name pos:start="69:37" pos:end="69:40">pows</name><index pos:start="69:41" pos:end="69:43">[<expr pos:start="69:42" pos:end="69:42"><name pos:start="69:42" pos:end="69:42">j</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="73:36"><if pos:start="71:17" pos:end="73:36">if <condition pos:start="71:20" pos:end="71:52">(<expr pos:start="71:21" pos:end="71:51"><call pos:start="71:21" pos:end="71:47"><name pos:start="71:21" pos:end="71:29">av_random</name><argument_list pos:start="71:30" pos:end="71:47">(<argument pos:start="71:31" pos:end="71:46"><expr pos:start="71:31" pos:end="71:46"><operator pos:start="71:31" pos:end="71:31">&amp;</operator><name pos:start="71:32" pos:end="71:46"><name pos:start="71:32" pos:end="71:32">s</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:46">random_state</name></name></expr></argument>)</argument_list></call> <operator pos:start="71:49" pos:end="71:49">&amp;</operator> <literal type="number" pos:start="71:51" pos:end="71:51">1</literal></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:36"><block_content pos:start="73:21" pos:end="73:36">

                    <expr_stmt pos:start="73:21" pos:end="73:36"><expr pos:start="73:21" pos:end="73:35"><name pos:start="73:21" pos:end="73:27"><name pos:start="73:21" pos:end="73:24">aptr</name><index pos:start="73:25" pos:end="73:27">[<expr pos:start="73:26" pos:end="73:26"><name pos:start="73:26" pos:end="73:26">j</name></expr>]</index></name> <operator pos:start="73:29" pos:end="73:30">*=</operator> <operator pos:start="73:32" pos:end="73:32">-</operator><literal type="number" pos:start="73:33" pos:end="73:35">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="75:15" pos:end="81:13">else <block pos:start="75:20" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:73">

                <expr_stmt pos:start="77:17" pos:end="77:46"><expr pos:start="77:17" pos:end="77:45"><name pos:start="77:17" pos:end="77:17">v</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <call pos:start="77:21" pos:end="77:45"><name pos:start="77:21" pos:end="77:28">get_bits</name><argument_list pos:start="77:29" pos:end="77:45">(<argument pos:start="77:30" pos:end="77:35"><expr pos:start="77:30" pos:end="77:35"><operator pos:start="77:30" pos:end="77:30">&amp;</operator><name pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:31">s</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:35">gb</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:44"><expr pos:start="77:38" pos:end="77:44"><name pos:start="77:38" pos:end="77:44"><name pos:start="77:38" pos:end="77:41">bits</name><index pos:start="77:42" pos:end="77:44">[<expr pos:start="77:43" pos:end="77:43"><name pos:start="77:43" pos:end="77:43">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:73"><expr pos:start="79:17" pos:end="79:72"><name pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:20">aptr</name><index pos:start="79:21" pos:end="79:23">[<expr pos:start="79:22" pos:end="79:22"><name pos:start="79:22" pos:end="79:22">j</name></expr>]</index></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:64"><name pos:start="79:27" pos:end="79:46">dequantization_table</name><index pos:start="79:47" pos:end="79:64">[<expr pos:start="79:48" pos:end="79:63"><operator pos:start="79:48" pos:end="79:48">(</operator><literal type="number" pos:start="79:49" pos:end="79:49">1</literal><operator pos:start="79:50" pos:end="79:51">&lt;&lt;</operator><name pos:start="79:52" pos:end="79:58"><name pos:start="79:52" pos:end="79:55">bits</name><index pos:start="79:56" pos:end="79:58">[<expr pos:start="79:57" pos:end="79:57"><name pos:start="79:57" pos:end="79:57">j</name></expr>]</index></name><operator pos:start="79:59" pos:end="79:59">)</operator><operator pos:start="79:60" pos:end="79:60">-</operator><literal type="number" pos:start="79:61" pos:end="79:62">1</literal><operator pos:start="79:62" pos:end="79:62">+</operator><name pos:start="79:63" pos:end="79:63">v</name></expr>]</index></name><operator pos:start="79:65" pos:end="79:65">*</operator><name pos:start="79:66" pos:end="79:72"><name pos:start="79:66" pos:end="79:69">pows</name><index pos:start="79:70" pos:end="79:72">[<expr pos:start="79:71" pos:end="79:71"><name pos:start="79:71" pos:end="79:71">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="85:9" pos:end="87:65"><expr pos:start="85:9" pos:end="87:64"><call pos:start="85:9" pos:end="87:64"><name pos:start="85:9" pos:end="85:14">memset</name><argument_list pos:start="85:15" pos:end="87:64">(<argument pos:start="85:16" pos:end="85:36"><expr pos:start="85:16" pos:end="85:36"><operator pos:start="85:16" pos:end="85:16">&amp;</operator><name pos:start="85:17" pos:end="85:36"><name pos:start="85:17" pos:end="85:20">aptr</name><index pos:start="85:21" pos:end="85:36">[<expr pos:start="85:22" pos:end="85:35"><name pos:start="85:22" pos:end="85:35">NELLY_FILL_LEN</name></expr>]</index></name></expr></argument>, <argument pos:start="85:39" pos:end="85:39"><expr pos:start="85:39" pos:end="85:39"><literal type="number" pos:start="85:39" pos:end="85:39">0</literal></expr></argument>,

               <argument pos:start="87:16" pos:end="87:63"><expr pos:start="87:16" pos:end="87:63"><operator pos:start="87:16" pos:end="87:16">(</operator><name pos:start="87:17" pos:end="87:29">NELLY_BUF_LEN</name> <operator pos:start="87:31" pos:end="87:31">-</operator> <name pos:start="87:33" pos:end="87:46">NELLY_FILL_LEN</name><operator pos:start="87:47" pos:end="87:47">)</operator> <operator pos:start="87:49" pos:end="87:49">*</operator> <sizeof pos:start="87:51" pos:end="87:63">sizeof<argument_list pos:start="87:57" pos:end="87:63">(<argument pos:start="87:58" pos:end="87:62"><expr pos:start="87:58" pos:end="87:62"><name pos:start="87:58" pos:end="87:62">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="93:56"><expr pos:start="91:9" pos:end="93:55"><call pos:start="91:9" pos:end="93:55"><name pos:start="91:9" pos:end="91:35"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:20">imdct_ctx</name><operator pos:start="91:21" pos:end="91:21">.</operator><name pos:start="91:22" pos:end="91:24">fft</name><operator pos:start="91:25" pos:end="91:25">.</operator><name pos:start="91:26" pos:end="91:35">imdct_calc</name></name><argument_list pos:start="91:36" pos:end="93:55">(<argument pos:start="91:37" pos:end="91:49"><expr pos:start="91:37" pos:end="91:49"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:49"><name pos:start="91:38" pos:end="91:38">s</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:49">imdct_ctx</name></name></expr></argument>, <argument pos:start="91:52" pos:end="91:63"><expr pos:start="91:52" pos:end="91:63"><name pos:start="91:52" pos:end="91:63"><name pos:start="91:52" pos:end="91:52">s</name><operator pos:start="91:53" pos:end="91:54">-&gt;</operator><name pos:start="91:55" pos:end="91:63">imdct_out</name></name></expr></argument>,

                                    <argument pos:start="93:37" pos:end="93:40"><expr pos:start="93:37" pos:end="93:40"><name pos:start="93:37" pos:end="93:40">aptr</name></expr></argument>, <argument pos:start="93:43" pos:end="93:54"><expr pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:43">s</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:54">imdct_tmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="95:9" pos:end="97:36">/* XXX: overlapping and windowing should be part of a more

           generic imdct function */</comment>

        <for pos:start="99:9" pos:end="105:9">for<control pos:start="99:12" pos:end="99:46">(<init pos:start="99:13" pos:end="99:18"><expr pos:start="99:13" pos:end="99:17"><name pos:start="99:13" pos:end="99:13">j</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <literal type="number" pos:start="99:17" pos:end="99:17">0</literal></expr>;</init> <condition pos:start="99:20" pos:end="99:41"><expr pos:start="99:20" pos:end="99:40"><name pos:start="99:20" pos:end="99:20">j</name> <operator pos:start="99:22" pos:end="99:22">&lt;</operator> <name pos:start="99:24" pos:end="99:36">NELLY_BUF_LEN</name> <operator pos:start="99:38" pos:end="99:38">/</operator> <literal type="number" pos:start="99:40" pos:end="99:40">2</literal></expr>;</condition> <incr pos:start="99:43" pos:end="99:45"><expr pos:start="99:43" pos:end="99:45"><name pos:start="99:43" pos:end="99:43">j</name><operator pos:start="99:44" pos:end="99:45">++</operator></expr></incr>)</control> <block pos:start="99:48" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:58">

            <expr_stmt pos:start="101:13" pos:end="101:74"><expr pos:start="101:13" pos:end="101:73"><name pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:16">aptr</name><index pos:start="101:17" pos:end="101:19">[<expr pos:start="101:18" pos:end="101:18"><name pos:start="101:18" pos:end="101:18">j</name></expr>]</index></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:73"><name pos:start="101:23" pos:end="101:23">s</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:34">imdct_out</name><index pos:start="101:35" pos:end="101:73">[<expr pos:start="101:36" pos:end="101:72"><name pos:start="101:36" pos:end="101:36">j</name> <operator pos:start="101:38" pos:end="101:38">+</operator> <name pos:start="101:40" pos:end="101:52">NELLY_BUF_LEN</name> <operator pos:start="101:54" pos:end="101:54">+</operator> <name pos:start="101:56" pos:end="101:68">NELLY_BUF_LEN</name> <operator pos:start="101:70" pos:end="101:70">/</operator> <literal type="number" pos:start="101:72" pos:end="101:72">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:58"><expr pos:start="103:13" pos:end="103:57"><name pos:start="103:13" pos:end="103:39"><name pos:start="103:13" pos:end="103:16">aptr</name><index pos:start="103:17" pos:end="103:39">[<expr pos:start="103:18" pos:end="103:38"><name pos:start="103:18" pos:end="103:18">j</name> <operator pos:start="103:20" pos:end="103:20">+</operator> <name pos:start="103:22" pos:end="103:34">NELLY_BUF_LEN</name> <operator pos:start="103:36" pos:end="103:36">/</operator> <literal type="number" pos:start="103:38" pos:end="103:38">2</literal></expr>]</index></name> <operator pos:start="103:41" pos:end="103:41">=</operator> <name pos:start="103:43" pos:end="103:57"><name pos:start="103:43" pos:end="103:43">s</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:54">imdct_out</name><index pos:start="103:55" pos:end="103:57">[<expr pos:start="103:56" pos:end="103:56"><name pos:start="103:56" pos:end="103:56">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="107:9" pos:end="107:46"><expr pos:start="107:9" pos:end="107:45"><call pos:start="107:9" pos:end="107:45"><name pos:start="107:9" pos:end="107:26">overlap_and_window</name><argument_list pos:start="107:27" pos:end="107:45">(<argument pos:start="107:28" pos:end="107:28"><expr pos:start="107:28" pos:end="107:28"><name pos:start="107:28" pos:end="107:28">s</name></expr></argument>, <argument pos:start="107:31" pos:end="107:38"><expr pos:start="107:31" pos:end="107:38"><name pos:start="107:31" pos:end="107:38"><name pos:start="107:31" pos:end="107:31">s</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:38">state</name></name></expr></argument>, <argument pos:start="107:41" pos:end="107:44"><expr pos:start="107:41" pos:end="107:44"><name pos:start="107:41" pos:end="107:44">aptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
