<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/192.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">expand_rle_row16</name><parameter_list pos:start="1:28" pos:end="3:53">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:36">SgiState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:49">uint16_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:58">out_buf</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:35"><decl pos:start="3:29" pos:end="3:35"><type pos:start="3:29" pos:end="3:35"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:35">len</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:52"><decl pos:start="3:38" pos:end="3:52"><type pos:start="3:38" pos:end="3:52"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:52">pixelstride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:42">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:18">short</name></type> <name pos:start="7:20" pos:end="7:24">pixel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:23">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:18">short</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">orig</name> <init pos:start="11:26" pos:end="11:34">= <expr pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:34">out_buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:21">out_end</name> <init pos:start="13:23" pos:end="13:37">= <expr pos:start="13:25" pos:end="13:37"><name pos:start="13:25" pos:end="13:31">out_buf</name> <operator pos:start="13:33" pos:end="13:33">+</operator> <name pos:start="13:35" pos:end="13:37">len</name></expr></init></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="71:5">while <condition pos:start="17:11" pos:end="17:29">(<expr pos:start="17:12" pos:end="17:28"><name pos:start="17:12" pos:end="17:18">out_buf</name> <operator pos:start="17:20" pos:end="17:20">&lt;</operator> <name pos:start="17:22" pos:end="17:28">out_end</name></expr>)</condition> <block pos:start="17:31" pos:end="71:5">{<block_content pos:start="19:9" pos:end="69:9">

        <if_stmt pos:start="19:9" pos:end="21:39"><if pos:start="19:9" pos:end="21:39">if <condition pos:start="19:12" pos:end="19:50">(<expr pos:start="19:13" pos:end="19:49"><call pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:38">bytestream2_get_bytes_left</name><argument_list pos:start="19:39" pos:end="19:45">(<argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><operator pos:start="19:40" pos:end="19:40">&amp;</operator><name pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:47" pos:end="19:47">&lt;</operator> <literal type="number" pos:start="19:49" pos:end="19:49">2</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:39"><block_content pos:start="21:13" pos:end="21:39">

            <return pos:start="21:13" pos:end="21:39">return <expr pos:start="21:20" pos:end="21:38"><name pos:start="21:20" pos:end="21:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:13">pixel</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:37">bytestream2_get_be16u</name><argument_list pos:start="23:38" pos:end="23:44">(<argument pos:start="23:39" pos:end="23:43"><expr pos:start="23:39" pos:end="23:43"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:43">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:38">(<expr pos:start="25:13" pos:end="25:37"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:19">count</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <operator pos:start="25:23" pos:end="25:23">(</operator><name pos:start="25:24" pos:end="25:28">pixel</name> <operator pos:start="25:30" pos:end="25:30">&amp;</operator> <literal type="number" pos:start="25:32" pos:end="25:35">0x7f</literal><operator pos:start="25:36" pos:end="25:36">)</operator><operator pos:start="25:37" pos:end="25:37">)</operator></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="31:9" pos:end="31:40">/* Check for buffer overflow. */</comment>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:45">(<expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:23">pixelstride</name> <operator pos:start="33:25" pos:end="33:25">*</operator> <operator pos:start="33:27" pos:end="33:27">(</operator><name pos:start="33:28" pos:end="33:32">count</name> <operator pos:start="33:34" pos:end="33:34">-</operator> <literal type="number" pos:start="33:36" pos:end="33:36">1</literal><operator pos:start="33:37" pos:end="33:37">)</operator> <operator pos:start="33:39" pos:end="33:40">&gt;=</operator> <name pos:start="33:42" pos:end="33:44">len</name></expr>)</condition> <block pos:start="33:47" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:39">

            <expr_stmt pos:start="35:13" pos:end="35:69"><expr pos:start="35:13" pos:end="35:68"><call pos:start="35:13" pos:end="35:68"><name pos:start="35:13" pos:end="35:18">av_log</name><argument_list pos:start="35:19" pos:end="35:68">(<argument pos:start="35:20" pos:end="35:27"><expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:20">s</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:27">avctx</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:44" pos:end="35:67"><expr pos:start="35:44" pos:end="35:67"><literal type="string" pos:start="35:44" pos:end="35:67">"Invalid pixel count.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:39">return <expr pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="43:9" pos:end="69:9"><if pos:start="43:9" pos:end="55:9">if <condition pos:start="43:12" pos:end="43:25">(<expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:17">pixel</name> <operator pos:start="43:19" pos:end="43:19">&amp;</operator> <literal type="number" pos:start="43:21" pos:end="43:24">0x80</literal></expr>)</condition> <block pos:start="43:27" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:13">

            <while pos:start="45:13" pos:end="53:13">while <condition pos:start="45:19" pos:end="45:27">(<expr pos:start="45:20" pos:end="45:26"><name pos:start="45:20" pos:end="45:24">count</name><operator pos:start="45:25" pos:end="45:26">--</operator></expr>)</condition> <block pos:start="45:29" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:39">

                <expr_stmt pos:start="47:17" pos:end="47:52"><expr pos:start="47:17" pos:end="47:51"><name pos:start="47:17" pos:end="47:21">pixel</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:51"><name pos:start="47:25" pos:end="47:44">bytestream2_get_ne16</name><argument_list pos:start="47:45" pos:end="47:51">(<argument pos:start="47:46" pos:end="47:50"><expr pos:start="47:46" pos:end="47:50"><operator pos:start="47:46" pos:end="47:46">&amp;</operator><name pos:start="47:47" pos:end="47:50"><name pos:start="47:47" pos:end="47:47">s</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:50">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:41"><expr pos:start="49:17" pos:end="49:40"><call pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:24">AV_WN16A</name><argument_list pos:start="49:25" pos:end="49:40">(<argument pos:start="49:26" pos:end="49:32"><expr pos:start="49:26" pos:end="49:32"><name pos:start="49:26" pos:end="49:32">out_buf</name></expr></argument>, <argument pos:start="49:35" pos:end="49:39"><expr pos:start="49:35" pos:end="49:39"><name pos:start="49:35" pos:end="49:39">pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:39"><expr pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:23">out_buf</name> <operator pos:start="51:25" pos:end="51:26">+=</operator> <name pos:start="51:28" pos:end="51:38">pixelstride</name></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="69:9">else <block pos:start="55:16" pos:end="69:9">{<block_content pos:start="57:13" pos:end="67:13">

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:17">pixel</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:47"><name pos:start="57:21" pos:end="57:40">bytestream2_get_ne16</name><argument_list pos:start="57:41" pos:end="57:47">(<argument pos:start="57:42" pos:end="57:46"><expr pos:start="57:42" pos:end="57:46"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><name pos:start="57:43" pos:end="57:46"><name pos:start="57:43" pos:end="57:43">s</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:46">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <while pos:start="61:13" pos:end="67:13">while <condition pos:start="61:19" pos:end="61:27">(<expr pos:start="61:20" pos:end="61:26"><name pos:start="61:20" pos:end="61:24">count</name><operator pos:start="61:25" pos:end="61:26">--</operator></expr>)</condition> <block pos:start="61:29" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:39">

                <expr_stmt pos:start="63:17" pos:end="63:41"><expr pos:start="63:17" pos:end="63:40"><call pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:24">AV_WN16A</name><argument_list pos:start="63:25" pos:end="63:40">(<argument pos:start="63:26" pos:end="63:32"><expr pos:start="63:26" pos:end="63:32"><name pos:start="63:26" pos:end="63:32">out_buf</name></expr></argument>, <argument pos:start="63:35" pos:end="63:39"><expr pos:start="63:35" pos:end="63:39"><name pos:start="63:35" pos:end="63:39">pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:39"><expr pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:23">out_buf</name> <operator pos:start="65:25" pos:end="65:26">+=</operator> <name pos:start="65:28" pos:end="65:38">pixelstride</name></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="73:5" pos:end="73:42">return <expr pos:start="73:12" pos:end="73:41"><operator pos:start="73:12" pos:end="73:12">(</operator><name pos:start="73:13" pos:end="73:19">out_buf</name> <operator pos:start="73:21" pos:end="73:21">-</operator> <name pos:start="73:23" pos:end="73:26">orig</name><operator pos:start="73:27" pos:end="73:27">)</operator> <operator pos:start="73:29" pos:end="73:29">/</operator> <name pos:start="73:31" pos:end="73:41">pixelstride</name></expr>;</return>

</block_content>}</block></function>
</unit>
