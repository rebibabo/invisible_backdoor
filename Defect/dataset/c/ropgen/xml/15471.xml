<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15471.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:61">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:63"><decl pos:start="1:34" pos:end="1:63"><type pos:start="1:34" pos:end="1:63"><name pos:start="1:34" pos:end="1:58"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:58">emulated_sigaction</name></name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type> <name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:60"><decl pos:start="3:47" pos:end="3:60"><type pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:54">CPUState</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:60">regs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:11">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:19">sigframe</name></name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:26">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:14">frame_addr</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:55"><name pos:start="15:18" pos:end="15:29">get_sigframe</name><argument_list pos:start="15:30" pos:end="15:55">(<argument pos:start="15:31" pos:end="15:32"><expr pos:start="15:31" pos:end="15:32"><name pos:start="15:31" pos:end="15:32">ka</name></expr></argument>, <argument pos:start="15:35" pos:end="15:38"><expr pos:start="15:35" pos:end="15:38"><name pos:start="15:35" pos:end="15:38">regs</name></expr></argument>, <argument pos:start="15:41" pos:end="15:54"><expr pos:start="15:41" pos:end="15:54"><sizeof pos:start="15:41" pos:end="15:54">sizeof<argument_list pos:start="15:47" pos:end="15:54">(<argument pos:start="15:48" pos:end="15:53"><expr pos:start="15:48" pos:end="15:53"><operator pos:start="15:48" pos:end="15:48">*</operator><name pos:start="15:49" pos:end="15:53">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:26"><if pos:start="17:5" pos:end="19:26">if <condition pos:start="17:8" pos:end="17:62">(<expr pos:start="17:9" pos:end="17:61"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:61"><name pos:start="17:10" pos:end="17:25">lock_user_struct</name><argument_list pos:start="17:26" pos:end="17:61">(<argument pos:start="17:27" pos:end="17:38"><expr pos:start="17:27" pos:end="17:38"><name pos:start="17:27" pos:end="17:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="17:41" pos:end="17:45"><expr pos:start="17:41" pos:end="17:45"><name pos:start="17:41" pos:end="17:45">frame</name></expr></argument>, <argument pos:start="17:48" pos:end="17:57"><expr pos:start="17:48" pos:end="17:57"><name pos:start="17:48" pos:end="17:57">frame_addr</name></expr></argument>, <argument pos:start="17:60" pos:end="17:60"><expr pos:start="17:60" pos:end="17:60"><literal type="number" pos:start="17:60" pos:end="17:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:26"><block_content pos:start="19:9" pos:end="19:26">

	<goto pos:start="19:9" pos:end="19:26">goto <name pos:start="19:14" pos:end="19:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><call pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:20">install_sigtramp</name><argument_list pos:start="23:21" pos:end="23:57">(<argument pos:start="23:22" pos:end="23:35"><expr pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:26">frame</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:35">sf_code</name></name></expr></argument>, <argument pos:start="23:38" pos:end="23:56"><expr pos:start="23:38" pos:end="23:56"><name pos:start="23:38" pos:end="23:56">TARGET_NR_sigreturn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="29:26"><if pos:start="27:5" pos:end="29:26">if<condition pos:start="27:7" pos:end="27:45">(<expr pos:start="27:8" pos:end="27:44"><call pos:start="27:8" pos:end="27:44"><name pos:start="27:8" pos:end="27:23">setup_sigcontext</name><argument_list pos:start="27:24" pos:end="27:44">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">regs</name></expr></argument>, <argument pos:start="27:31" pos:end="27:43"><expr pos:start="27:31" pos:end="27:43"><operator pos:start="27:31" pos:end="27:31">&amp;</operator><name pos:start="27:32" pos:end="27:43"><name pos:start="27:32" pos:end="27:36">frame</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:43">sf_sc</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:26"><block_content pos:start="29:9" pos:end="29:26">

	<goto pos:start="29:9" pos:end="29:26">goto <name pos:start="29:14" pos:end="29:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="33:5" pos:end="39:5">for<control pos:start="33:8" pos:end="33:42">(<init pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</init> <condition pos:start="33:16" pos:end="33:37"><expr pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:16">i</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:39">i</name><operator pos:start="33:40" pos:end="33:41">++</operator></expr></incr>)</control> <block pos:start="33:44" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:30">

	<if_stmt pos:start="35:9" pos:end="37:30"><if pos:start="35:9" pos:end="37:30">if<condition pos:start="35:11" pos:end="35:59">(<expr pos:start="35:12" pos:end="35:58"><call pos:start="35:12" pos:end="35:58"><name pos:start="35:12" pos:end="35:21">__put_user</name><argument_list pos:start="35:22" pos:end="35:58">(<argument pos:start="35:23" pos:end="35:33"><expr pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:25">set</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:30">sig</name><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:36" pos:end="35:57"><expr pos:start="35:36" pos:end="35:57"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:57"><name pos:start="35:37" pos:end="35:41">frame</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:50">sf_mask</name><operator pos:start="35:51" pos:end="35:51">.</operator><name pos:start="35:52" pos:end="35:54">sig</name><index pos:start="35:55" pos:end="35:57">[<expr pos:start="35:56" pos:end="35:56"><name pos:start="35:56" pos:end="35:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:30"><block_content pos:start="37:13" pos:end="37:30">

	    <goto pos:start="37:13" pos:end="37:30">goto <name pos:start="37:18" pos:end="37:29">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="43:5" pos:end="61:6">/*

    * Arguments to signal handler:

    *

    *   a0 = signal number

    *   a1 = 0 (should be cause)

    *   a2 = pointer to struct sigcontext

    *

    * $25 and PC point to the signal handler, $29 points to the

    * struct sigframe.

    */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:8">regs</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:13">gpr</name><index pos:start="63:14" pos:end="63:17">[ <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">4</literal></expr>]</index><index pos:start="63:18" pos:end="63:35">[<expr pos:start="63:19" pos:end="63:34"><name pos:start="63:19" pos:end="63:34"><name pos:start="63:19" pos:end="63:22">regs</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:34">current_tc</name></name></expr>]</index></name> <operator pos:start="63:37" pos:end="63:37">=</operator> <name pos:start="63:39" pos:end="63:41">sig</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:8">regs</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:13">gpr</name><index pos:start="65:14" pos:end="65:17">[ <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">5</literal></expr>]</index><index pos:start="65:18" pos:end="65:35">[<expr pos:start="65:19" pos:end="65:34"><name pos:start="65:19" pos:end="65:34"><name pos:start="65:19" pos:end="65:22">regs</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:34">current_tc</name></name></expr>]</index></name> <operator pos:start="65:37" pos:end="65:37">=</operator> <literal type="number" pos:start="65:39" pos:end="65:39">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:57"><expr pos:start="67:5" pos:end="67:56"><name pos:start="67:5" pos:end="67:35"><name pos:start="67:5" pos:end="67:8">regs</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:13">gpr</name><index pos:start="67:14" pos:end="67:17">[ <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">6</literal></expr>]</index><index pos:start="67:18" pos:end="67:35">[<expr pos:start="67:19" pos:end="67:34"><name pos:start="67:19" pos:end="67:34"><name pos:start="67:19" pos:end="67:22">regs</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:34">current_tc</name></name></expr>]</index></name> <operator pos:start="67:37" pos:end="67:37">=</operator> <call pos:start="67:39" pos:end="67:56"><name pos:start="67:39" pos:end="67:41">h2g</name><argument_list pos:start="67:42" pos:end="67:56">(<argument pos:start="67:43" pos:end="67:55"><expr pos:start="67:43" pos:end="67:55"><operator pos:start="67:43" pos:end="67:43">&amp;</operator><name pos:start="67:44" pos:end="67:55"><name pos:start="67:44" pos:end="67:48">frame</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:55">sf_sc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:8">regs</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:13">gpr</name><index pos:start="69:14" pos:end="69:17">[<expr pos:start="69:15" pos:end="69:16"><literal type="number" pos:start="69:15" pos:end="69:16">29</literal></expr>]</index><index pos:start="69:18" pos:end="69:35">[<expr pos:start="69:19" pos:end="69:34"><name pos:start="69:19" pos:end="69:34"><name pos:start="69:19" pos:end="69:22">regs</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:34">current_tc</name></name></expr>]</index></name> <operator pos:start="69:37" pos:end="69:37">=</operator> <call pos:start="69:39" pos:end="69:48"><name pos:start="69:39" pos:end="69:41">h2g</name><argument_list pos:start="69:42" pos:end="69:48">(<argument pos:start="69:43" pos:end="69:47"><expr pos:start="69:43" pos:end="69:47"><name pos:start="69:43" pos:end="69:47">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:58"><expr pos:start="71:5" pos:end="71:57"><name pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:8">regs</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:13">gpr</name><index pos:start="71:14" pos:end="71:17">[<expr pos:start="71:15" pos:end="71:16"><literal type="number" pos:start="71:15" pos:end="71:16">31</literal></expr>]</index><index pos:start="71:18" pos:end="71:35">[<expr pos:start="71:19" pos:end="71:34"><name pos:start="71:19" pos:end="71:34"><name pos:start="71:19" pos:end="71:22">regs</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:34">current_tc</name></name></expr>]</index></name> <operator pos:start="71:37" pos:end="71:37">=</operator> <call pos:start="71:39" pos:end="71:57"><name pos:start="71:39" pos:end="71:41">h2g</name><argument_list pos:start="71:42" pos:end="71:57">(<argument pos:start="71:43" pos:end="71:56"><expr pos:start="71:43" pos:end="71:56"><name pos:start="71:43" pos:end="71:56"><name pos:start="71:43" pos:end="71:47">frame</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:56">sf_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="77:60">/* The original kernel code sets CP0_EPC to the handler

    * since it returns to userland using eret

    * we cannot do this here, and we must set PC directly */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:86"><expr pos:start="79:5" pos:end="79:85"><name pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:8">regs</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:12">PC</name><index pos:start="79:13" pos:end="79:30">[<expr pos:start="79:14" pos:end="79:29"><name pos:start="79:14" pos:end="79:29"><name pos:start="79:14" pos:end="79:17">regs</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:29">current_tc</name></name></expr>]</index></name> <operator pos:start="79:32" pos:end="79:32">=</operator> <name pos:start="79:34" pos:end="79:64"><name pos:start="79:34" pos:end="79:37">regs</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:42">gpr</name><index pos:start="79:43" pos:end="79:46">[<expr pos:start="79:44" pos:end="79:45"><literal type="number" pos:start="79:44" pos:end="79:45">25</literal></expr>]</index><index pos:start="79:47" pos:end="79:64">[<expr pos:start="79:48" pos:end="79:63"><name pos:start="79:48" pos:end="79:63"><name pos:start="79:48" pos:end="79:51">regs</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:63">current_tc</name></name></expr>]</index></name> <operator pos:start="79:66" pos:end="79:66">=</operator> <name pos:start="79:68" pos:end="79:85"><name pos:start="79:68" pos:end="79:69">ka</name><operator pos:start="79:70" pos:end="79:71">-&gt;</operator><name pos:start="79:72" pos:end="79:73">sa</name><operator pos:start="79:74" pos:end="79:74">.</operator><name pos:start="79:75" pos:end="79:85">_sa_handler</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:45"><expr pos:start="81:5" pos:end="81:44"><call pos:start="81:5" pos:end="81:44"><name pos:start="81:5" pos:end="81:22">unlock_user_struct</name><argument_list pos:start="81:23" pos:end="81:44">(<argument pos:start="81:24" pos:end="81:28"><expr pos:start="81:24" pos:end="81:28"><name pos:start="81:24" pos:end="81:28">frame</name></expr></argument>, <argument pos:start="81:31" pos:end="81:40"><expr pos:start="81:31" pos:end="81:40"><name pos:start="81:31" pos:end="81:40">frame_addr</name></expr></argument>, <argument pos:start="81:43" pos:end="81:43"><expr pos:start="81:43" pos:end="81:43"><literal type="number" pos:start="81:43" pos:end="81:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:11">return;</return>



<label pos:start="87:1" pos:end="87:13"><name pos:start="87:1" pos:end="87:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="89:5" pos:end="89:45"><expr pos:start="89:5" pos:end="89:44"><call pos:start="89:5" pos:end="89:44"><name pos:start="89:5" pos:end="89:22">unlock_user_struct</name><argument_list pos:start="89:23" pos:end="89:44">(<argument pos:start="89:24" pos:end="89:28"><expr pos:start="89:24" pos:end="89:28"><name pos:start="89:24" pos:end="89:28">frame</name></expr></argument>, <argument pos:start="89:31" pos:end="89:40"><expr pos:start="89:31" pos:end="89:40"><name pos:start="89:31" pos:end="89:40">frame_addr</name></expr></argument>, <argument pos:start="89:43" pos:end="89:43"><expr pos:start="89:43" pos:end="89:43"><literal type="number" pos:start="89:43" pos:end="89:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:43"><expr pos:start="91:5" pos:end="91:42"><call pos:start="91:5" pos:end="91:42"><name pos:start="91:5" pos:end="91:13">force_sig</name><argument_list pos:start="91:14" pos:end="91:42">(<argument pos:start="91:15" pos:end="91:28"><expr pos:start="91:15" pos:end="91:28"><name pos:start="91:15" pos:end="91:28">TARGET_SIGSEGV</name></expr></argument><comment type="block" pos:start="91:29" pos:end="91:41">/*, current*/</comment>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:11">return;</return>

</block_content>}</block></function>
</unit>
