<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7438.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">arm_sysctl_read</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:71"><decl pos:start="1:47" pos:end="1:71"><type pos:start="1:47" pos:end="1:71"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:71">offset</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="191:1">{<block_content pos:start="7:5" pos:end="189:5">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">arm_sysctl_state</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:52">= <expr pos:start="7:27" pos:end="7:52"><operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:43">arm_sysctl_state</name> <operator pos:start="7:45" pos:end="7:45">*</operator><operator pos:start="7:46" pos:end="7:46">)</operator><name pos:start="7:47" pos:end="7:52">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="189:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="189:5">{<block_content pos:start="13:5" pos:end="187:17">

    <case pos:start="13:5" pos:end="13:14">case <expr pos:start="13:10" pos:end="13:13"><literal type="number" pos:start="13:10" pos:end="13:13">0x00</literal></expr>:</case> <comment type="block" pos:start="13:16" pos:end="13:23">/* ID */</comment>

        <return pos:start="15:9" pos:end="15:25">return <expr pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:24">sys_id</name></name></expr>;</return>

    <case pos:start="17:5" pos:end="17:14">case <expr pos:start="17:10" pos:end="17:13"><literal type="number" pos:start="17:10" pos:end="17:13">0x04</literal></expr>:</case> <comment type="block" pos:start="17:16" pos:end="17:23">/* SW */</comment>

        <comment type="block" pos:start="19:9" pos:end="21:72">/* General purpose hardware switches.

           We don't have a useful way of exposing these to the user.  */</comment>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x08</literal></expr>:</case> <comment type="block" pos:start="25:16" pos:end="25:24">/* LED */</comment>

        <return pos:start="27:9" pos:end="27:23">return <expr pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:22">leds</name></name></expr>;</return>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x20</literal></expr>:</case> <comment type="block" pos:start="29:16" pos:end="29:25">/* LOCK */</comment>

        <return pos:start="31:9" pos:end="31:26">return <expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:25">lockval</name></name></expr>;</return>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x0c</literal></expr>:</case> <comment type="block" pos:start="33:16" pos:end="33:25">/* OSC0 */</comment>

    <case pos:start="35:5" pos:end="35:14">case <expr pos:start="35:10" pos:end="35:13"><literal type="number" pos:start="35:10" pos:end="35:13">0x10</literal></expr>:</case> <comment type="block" pos:start="35:16" pos:end="35:25">/* OSC1 */</comment>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x14</literal></expr>:</case> <comment type="block" pos:start="37:16" pos:end="37:25">/* OSC2 */</comment>

    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x18</literal></expr>:</case> <comment type="block" pos:start="39:16" pos:end="39:25">/* OSC3 */</comment>

    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><literal type="number" pos:start="41:10" pos:end="41:13">0x1c</literal></expr>:</case> <comment type="block" pos:start="41:16" pos:end="41:25">/* OSC4 */</comment>

    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x24</literal></expr>:</case> <comment type="block" pos:start="43:16" pos:end="43:26">/* 100HZ */</comment>

        <comment type="block" pos:start="45:9" pos:end="45:35">/* ??? Implement these.  */</comment>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><literal type="number" pos:start="49:10" pos:end="49:13">0x28</literal></expr>:</case> <comment type="block" pos:start="49:16" pos:end="49:29">/* CFGDATA1 */</comment>

        <return pos:start="51:9" pos:end="51:27">return <expr pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:26">cfgdata1</name></name></expr>;</return>

    <case pos:start="53:5" pos:end="53:14">case <expr pos:start="53:10" pos:end="53:13"><literal type="number" pos:start="53:10" pos:end="53:13">0x2c</literal></expr>:</case> <comment type="block" pos:start="53:16" pos:end="53:29">/* CFGDATA2 */</comment>

        <return pos:start="55:9" pos:end="55:27">return <expr pos:start="55:16" pos:end="55:26"><name pos:start="55:16" pos:end="55:26"><name pos:start="55:16" pos:end="55:16">s</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:26">cfgdata2</name></name></expr>;</return>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x30</literal></expr>:</case> <comment type="block" pos:start="57:16" pos:end="57:26">/* FLAGS */</comment>

        <return pos:start="59:9" pos:end="59:24">return <expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">flags</name></name></expr>;</return>

    <case pos:start="61:5" pos:end="61:14">case <expr pos:start="61:10" pos:end="61:13"><literal type="number" pos:start="61:10" pos:end="61:13">0x38</literal></expr>:</case> <comment type="block" pos:start="61:16" pos:end="61:28">/* NVFLAGS */</comment>

        <return pos:start="63:9" pos:end="63:26">return <expr pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:25">nvflags</name></name></expr>;</return>

    <case pos:start="65:5" pos:end="65:14">case <expr pos:start="65:10" pos:end="65:13"><literal type="number" pos:start="65:10" pos:end="65:13">0x40</literal></expr>:</case> <comment type="block" pos:start="65:16" pos:end="65:29">/* RESETCTL */</comment>

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:45">(<expr pos:start="67:13" pos:end="67:44"><call pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:20">board_id</name><argument_list pos:start="67:21" pos:end="67:23">(<argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">s</name></expr></argument>)</argument_list></call> <operator pos:start="67:25" pos:end="67:26">==</operator> <name pos:start="67:28" pos:end="67:44">BOARD_ID_VEXPRESS</name></expr>)</condition> <block pos:start="67:47" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:21">

            <comment type="block" pos:start="69:13" pos:end="69:34">/* reserved: RAZ/WI */</comment>

            <return pos:start="71:13" pos:end="71:21">return <expr pos:start="71:20" pos:end="71:20"><literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="75:9" pos:end="75:29">return <expr pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:28">resetlevel</name></name></expr>;</return>

    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x44</literal></expr>:</case> <comment type="block" pos:start="77:16" pos:end="77:27">/* PCICTL */</comment>

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">1</literal></expr>;</return>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x48</literal></expr>:</case> <comment type="block" pos:start="81:16" pos:end="81:24">/* MCI */</comment>

        <return pos:start="83:9" pos:end="83:26">return <expr pos:start="83:16" pos:end="83:25"><name pos:start="83:16" pos:end="83:25"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:25">sys_mci</name></name></expr>;</return>

    <case pos:start="85:5" pos:end="85:14">case <expr pos:start="85:10" pos:end="85:13"><literal type="number" pos:start="85:10" pos:end="85:13">0x4c</literal></expr>:</case> <comment type="block" pos:start="85:16" pos:end="85:26">/* FLASH */</comment>

        <return pos:start="87:9" pos:end="87:17">return <expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</return>

    <case pos:start="89:5" pos:end="89:14">case <expr pos:start="89:10" pos:end="89:13"><literal type="number" pos:start="89:10" pos:end="89:13">0x50</literal></expr>:</case> <comment type="block" pos:start="89:16" pos:end="89:25">/* CLCD */</comment>

        <return pos:start="91:9" pos:end="91:27">return <expr pos:start="91:16" pos:end="91:26"><name pos:start="91:16" pos:end="91:26"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:26">sys_clcd</name></name></expr>;</return>

    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x54</literal></expr>:</case> <comment type="block" pos:start="93:16" pos:end="93:28">/* CLCDSER */</comment>

        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">0</literal></expr>;</return>

    <case pos:start="97:5" pos:end="97:14">case <expr pos:start="97:10" pos:end="97:13"><literal type="number" pos:start="97:10" pos:end="97:13">0x58</literal></expr>:</case> <comment type="block" pos:start="97:16" pos:end="97:27">/* BOOTCS */</comment>

        <return pos:start="99:9" pos:end="99:17">return <expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</return>

    <case pos:start="101:5" pos:end="101:14">case <expr pos:start="101:10" pos:end="101:13"><literal type="number" pos:start="101:10" pos:end="101:13">0x5c</literal></expr>:</case> <comment type="block" pos:start="101:16" pos:end="101:26">/* 24MHz */</comment>

        <return pos:start="103:9" pos:end="103:84">return <expr pos:start="103:16" pos:end="103:83"><call pos:start="103:16" pos:end="103:83"><name pos:start="103:16" pos:end="103:23">muldiv64</name><argument_list pos:start="103:24" pos:end="103:83">(<argument pos:start="103:25" pos:end="103:51"><expr pos:start="103:25" pos:end="103:51"><call pos:start="103:25" pos:end="103:51"><name pos:start="103:25" pos:end="103:41">qemu_get_clock_ns</name><argument_list pos:start="103:42" pos:end="103:51">(<argument pos:start="103:43" pos:end="103:50"><expr pos:start="103:43" pos:end="103:50"><name pos:start="103:43" pos:end="103:50">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:54" pos:end="103:61"><expr pos:start="103:54" pos:end="103:61"><literal type="number" pos:start="103:54" pos:end="103:61">24000000</literal></expr></argument>, <argument pos:start="103:64" pos:end="103:82"><expr pos:start="103:64" pos:end="103:82"><call pos:start="103:64" pos:end="103:82"><name pos:start="103:64" pos:end="103:80">get_ticks_per_sec</name><argument_list pos:start="103:81" pos:end="103:82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x60</literal></expr>:</case> <comment type="block" pos:start="105:16" pos:end="105:25">/* MISC */</comment>

        <return pos:start="107:9" pos:end="107:17">return <expr pos:start="107:16" pos:end="107:16"><literal type="number" pos:start="107:16" pos:end="107:16">0</literal></expr>;</return>

    <case pos:start="109:5" pos:end="109:14">case <expr pos:start="109:10" pos:end="109:13"><literal type="number" pos:start="109:10" pos:end="109:13">0x84</literal></expr>:</case> <comment type="block" pos:start="109:16" pos:end="109:28">/* PROCID0 */</comment>

        <return pos:start="111:9" pos:end="111:26">return <expr pos:start="111:16" pos:end="111:25"><name pos:start="111:16" pos:end="111:25"><name pos:start="111:16" pos:end="111:16">s</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:25">proc_id</name></name></expr>;</return>

    <case pos:start="113:5" pos:end="113:14">case <expr pos:start="113:10" pos:end="113:13"><literal type="number" pos:start="113:10" pos:end="113:13">0x88</literal></expr>:</case> <comment type="block" pos:start="113:16" pos:end="113:28">/* PROCID1 */</comment>

        <return pos:start="115:9" pos:end="115:26">return <expr pos:start="115:16" pos:end="115:25"><literal type="number" pos:start="115:16" pos:end="115:25">0xff000000</literal></expr>;</return>

    <case pos:start="117:5" pos:end="117:14">case <expr pos:start="117:10" pos:end="117:13"><literal type="number" pos:start="117:10" pos:end="117:13">0x64</literal></expr>:</case> <comment type="block" pos:start="117:16" pos:end="117:28">/* DMAPSR0 */</comment>

    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x68</literal></expr>:</case> <comment type="block" pos:start="119:16" pos:end="119:28">/* DMAPSR1 */</comment>

    <case pos:start="121:5" pos:end="121:14">case <expr pos:start="121:10" pos:end="121:13"><literal type="number" pos:start="121:10" pos:end="121:13">0x6c</literal></expr>:</case> <comment type="block" pos:start="121:16" pos:end="121:28">/* DMAPSR2 */</comment>

    <case pos:start="123:5" pos:end="123:14">case <expr pos:start="123:10" pos:end="123:13"><literal type="number" pos:start="123:10" pos:end="123:13">0x70</literal></expr>:</case> <comment type="block" pos:start="123:16" pos:end="123:26">/* IOSEL */</comment>

    <case pos:start="125:5" pos:end="125:14">case <expr pos:start="125:10" pos:end="125:13"><literal type="number" pos:start="125:10" pos:end="125:13">0x74</literal></expr>:</case> <comment type="block" pos:start="125:16" pos:end="125:27">/* PLDCTL */</comment>

    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x80</literal></expr>:</case> <comment type="block" pos:start="127:16" pos:end="127:26">/* BUSID */</comment>

    <case pos:start="129:5" pos:end="129:14">case <expr pos:start="129:10" pos:end="129:13"><literal type="number" pos:start="129:10" pos:end="129:13">0x8c</literal></expr>:</case> <comment type="block" pos:start="129:16" pos:end="129:30">/* OSCRESET0 */</comment>

    <case pos:start="131:5" pos:end="131:14">case <expr pos:start="131:10" pos:end="131:13"><literal type="number" pos:start="131:10" pos:end="131:13">0x90</literal></expr>:</case> <comment type="block" pos:start="131:16" pos:end="131:30">/* OSCRESET1 */</comment>

    <case pos:start="133:5" pos:end="133:14">case <expr pos:start="133:10" pos:end="133:13"><literal type="number" pos:start="133:10" pos:end="133:13">0x94</literal></expr>:</case> <comment type="block" pos:start="133:16" pos:end="133:30">/* OSCRESET2 */</comment>

    <case pos:start="135:5" pos:end="135:14">case <expr pos:start="135:10" pos:end="135:13"><literal type="number" pos:start="135:10" pos:end="135:13">0x98</literal></expr>:</case> <comment type="block" pos:start="135:16" pos:end="135:30">/* OSCRESET3 */</comment>

    <case pos:start="137:5" pos:end="137:14">case <expr pos:start="137:10" pos:end="137:13"><literal type="number" pos:start="137:10" pos:end="137:13">0x9c</literal></expr>:</case> <comment type="block" pos:start="137:16" pos:end="137:30">/* OSCRESET4 */</comment>

    <case pos:start="139:5" pos:end="139:14">case <expr pos:start="139:10" pos:end="139:13"><literal type="number" pos:start="139:10" pos:end="139:13">0xc0</literal></expr>:</case> <comment type="block" pos:start="139:16" pos:end="139:34">/* SYS_TEST_OSC0 */</comment>

    <case pos:start="141:5" pos:end="141:14">case <expr pos:start="141:10" pos:end="141:13"><literal type="number" pos:start="141:10" pos:end="141:13">0xc4</literal></expr>:</case> <comment type="block" pos:start="141:16" pos:end="141:34">/* SYS_TEST_OSC1 */</comment>

    <case pos:start="143:5" pos:end="143:14">case <expr pos:start="143:10" pos:end="143:13"><literal type="number" pos:start="143:10" pos:end="143:13">0xc8</literal></expr>:</case> <comment type="block" pos:start="143:16" pos:end="143:34">/* SYS_TEST_OSC2 */</comment>

    <case pos:start="145:5" pos:end="145:14">case <expr pos:start="145:10" pos:end="145:13"><literal type="number" pos:start="145:10" pos:end="145:13">0xcc</literal></expr>:</case> <comment type="block" pos:start="145:16" pos:end="145:34">/* SYS_TEST_OSC3 */</comment>

    <case pos:start="147:5" pos:end="147:14">case <expr pos:start="147:10" pos:end="147:13"><literal type="number" pos:start="147:10" pos:end="147:13">0xd0</literal></expr>:</case> <comment type="block" pos:start="147:16" pos:end="147:34">/* SYS_TEST_OSC4 */</comment>

        <return pos:start="149:9" pos:end="149:17">return <expr pos:start="149:16" pos:end="149:16"><literal type="number" pos:start="149:16" pos:end="149:16">0</literal></expr>;</return>

    <case pos:start="151:5" pos:end="151:14">case <expr pos:start="151:10" pos:end="151:13"><literal type="number" pos:start="151:10" pos:end="151:13">0xa0</literal></expr>:</case> <comment type="block" pos:start="151:16" pos:end="151:32">/* SYS_CFGDATA */</comment>

        <if_stmt pos:start="153:9" pos:end="157:9"><if pos:start="153:9" pos:end="157:9">if <condition pos:start="153:12" pos:end="153:45">(<expr pos:start="153:13" pos:end="153:44"><call pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:20">board_id</name><argument_list pos:start="153:21" pos:end="153:23">(<argument pos:start="153:22" pos:end="153:22"><expr pos:start="153:22" pos:end="153:22"><name pos:start="153:22" pos:end="153:22">s</name></expr></argument>)</argument_list></call> <operator pos:start="153:25" pos:end="153:26">!=</operator> <name pos:start="153:28" pos:end="153:44">BOARD_ID_VEXPRESS</name></expr>)</condition> <block pos:start="153:47" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:25">

            <goto pos:start="155:13" pos:end="155:25">goto <name pos:start="155:18" pos:end="155:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="159:9" pos:end="159:30">return <expr pos:start="159:16" pos:end="159:29"><name pos:start="159:16" pos:end="159:29"><name pos:start="159:16" pos:end="159:16">s</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:29">sys_cfgdata</name></name></expr>;</return>

    <case pos:start="161:5" pos:end="161:14">case <expr pos:start="161:10" pos:end="161:13"><literal type="number" pos:start="161:10" pos:end="161:13">0xa4</literal></expr>:</case> <comment type="block" pos:start="161:16" pos:end="161:32">/* SYS_CFGCTRL */</comment>

        <if_stmt pos:start="163:9" pos:end="167:9"><if pos:start="163:9" pos:end="167:9">if <condition pos:start="163:12" pos:end="163:45">(<expr pos:start="163:13" pos:end="163:44"><call pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:20">board_id</name><argument_list pos:start="163:21" pos:end="163:23">(<argument pos:start="163:22" pos:end="163:22"><expr pos:start="163:22" pos:end="163:22"><name pos:start="163:22" pos:end="163:22">s</name></expr></argument>)</argument_list></call> <operator pos:start="163:25" pos:end="163:26">!=</operator> <name pos:start="163:28" pos:end="163:44">BOARD_ID_VEXPRESS</name></expr>)</condition> <block pos:start="163:47" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:25">

            <goto pos:start="165:13" pos:end="165:25">goto <name pos:start="165:18" pos:end="165:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="169:9" pos:end="169:30">return <expr pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:16">s</name><operator pos:start="169:17" pos:end="169:18">-&gt;</operator><name pos:start="169:19" pos:end="169:29">sys_cfgctrl</name></name></expr>;</return>

    <case pos:start="171:5" pos:end="171:14">case <expr pos:start="171:10" pos:end="171:13"><literal type="number" pos:start="171:10" pos:end="171:13">0xa8</literal></expr>:</case> <comment type="block" pos:start="171:16" pos:end="171:32">/* SYS_CFGSTAT */</comment>

        <if_stmt pos:start="173:9" pos:end="177:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:45">(<expr pos:start="173:13" pos:end="173:44"><call pos:start="173:13" pos:end="173:23"><name pos:start="173:13" pos:end="173:20">board_id</name><argument_list pos:start="173:21" pos:end="173:23">(<argument pos:start="173:22" pos:end="173:22"><expr pos:start="173:22" pos:end="173:22"><name pos:start="173:22" pos:end="173:22">s</name></expr></argument>)</argument_list></call> <operator pos:start="173:25" pos:end="173:26">!=</operator> <name pos:start="173:28" pos:end="173:44">BOARD_ID_VEXPRESS</name></expr>)</condition> <block pos:start="173:47" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:25">

            <goto pos:start="175:13" pos:end="175:25">goto <name pos:start="175:18" pos:end="175:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="179:9" pos:end="179:30">return <expr pos:start="179:16" pos:end="179:29"><name pos:start="179:16" pos:end="179:29"><name pos:start="179:16" pos:end="179:16">s</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:29">sys_cfgstat</name></name></expr>;</return>

    <default pos:start="181:5" pos:end="181:12">default:</default>

    <label pos:start="183:5" pos:end="183:12"><name pos:start="183:5" pos:end="183:11">bad_reg</name>:</label>

        <expr_stmt pos:start="185:9" pos:end="185:76"><expr pos:start="185:9" pos:end="185:75"><call pos:start="185:9" pos:end="185:75"><name pos:start="185:9" pos:end="185:14">printf</name> <argument_list pos:start="185:16" pos:end="185:75">(<argument pos:start="185:17" pos:end="185:61"><expr pos:start="185:17" pos:end="185:61"><literal type="string" pos:start="185:17" pos:end="185:61">"arm_sysctl_read: Bad register offset 0x%x\n"</literal></expr></argument>, <argument pos:start="185:64" pos:end="185:74"><expr pos:start="185:64" pos:end="185:74"><operator pos:start="185:64" pos:end="185:64">(</operator><name pos:start="185:65" pos:end="185:67">int</name><operator pos:start="185:68" pos:end="185:68">)</operator><name pos:start="185:69" pos:end="185:74">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="187:9" pos:end="187:17">return <expr pos:start="187:16" pos:end="187:16"><literal type="number" pos:start="187:16" pos:end="187:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
