<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2733.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">numa_cpu_pre_plug</name><parameter_list pos:start="1:23" pos:end="1:77">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:38">CPUArchId</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">slot</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:57">DeviceState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">dev</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:69">Error</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier><modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:22">mapped_node_id</name></decl>;</decl_stmt> <comment type="block" pos:start="5:25" pos:end="5:49">/* set by -numa option */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:80"><decl pos:start="7:5" pos:end="7:79"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">node_id</name> <init pos:start="7:17" pos:end="7:79">= <expr pos:start="7:19" pos:end="7:79"><call pos:start="7:19" pos:end="7:79"><name pos:start="7:19" pos:end="7:41">object_property_get_int</name><argument_list pos:start="7:42" pos:end="7:79">(<argument pos:start="7:43" pos:end="7:53"><expr pos:start="7:43" pos:end="7:53"><call pos:start="7:43" pos:end="7:53"><name pos:start="7:43" pos:end="7:48">OBJECT</name><argument_list pos:start="7:49" pos:end="7:53">(<argument pos:start="7:50" pos:end="7:52"><expr pos:start="7:50" pos:end="7:52"><name pos:start="7:50" pos:end="7:52">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="7:56" pos:end="7:64"><expr pos:start="7:56" pos:end="7:64"><literal type="string" pos:start="7:56" pos:end="7:64">"node-id"</literal></expr></argument>, <argument pos:start="7:67" pos:end="7:78"><expr pos:start="7:67" pos:end="7:78"><operator pos:start="7:67" pos:end="7:67">&amp;</operator><name pos:start="7:68" pos:end="7:78">error_abort</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="15:7">/* by default CPUState::numa_node was 0 if it wasn't set explicitly

     * TODO: make it error when incomplete numa mapping support is removed

     */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:18">mapped_node_id</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:40"><name pos:start="17:22" pos:end="17:25">slot</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:32">props</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:40">node_id</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:33">(<expr pos:start="19:9" pos:end="19:32"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:32"><name pos:start="19:10" pos:end="19:13">slot</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:20">props</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:32">has_node_id</name></name></expr>)</condition> <block pos:start="19:35" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:27">

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:22">mapped_node_id</name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="41:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:42">(<expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:15">node_id</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <name pos:start="27:20" pos:end="27:41">CPU_UNSET_NUMA_NODE_ID</name></expr>)</condition> <block pos:start="27:44" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:78">

        <comment type="block" pos:start="29:9" pos:end="31:66">/* due to bug in libvirt, it doesn't pass node-id from props on

         * device_add as expected, so we have to fix it up here */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:78"><expr pos:start="33:9" pos:end="33:77"><call pos:start="33:9" pos:end="33:77"><name pos:start="33:9" pos:end="33:31">object_property_set_int</name><argument_list pos:start="33:32" pos:end="33:77">(<argument pos:start="33:33" pos:end="33:43"><expr pos:start="33:33" pos:end="33:43"><call pos:start="33:33" pos:end="33:43"><name pos:start="33:33" pos:end="33:38">OBJECT</name><argument_list pos:start="33:39" pos:end="33:43">(<argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:42">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:46" pos:end="33:59"><expr pos:start="33:46" pos:end="33:59"><name pos:start="33:46" pos:end="33:59">mapped_node_id</name></expr></argument>, <argument pos:start="33:62" pos:end="33:70"><expr pos:start="33:62" pos:end="33:70"><literal type="string" pos:start="33:62" pos:end="33:70">"node-id"</literal></expr></argument>, <argument pos:start="33:73" pos:end="33:76"><expr pos:start="33:73" pos:end="33:76"><name pos:start="33:73" pos:end="33:76">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="41:5">else if <condition pos:start="35:15" pos:end="35:41">(<expr pos:start="35:16" pos:end="35:40"><name pos:start="35:16" pos:end="35:22">node_id</name> <operator pos:start="35:24" pos:end="35:25">!=</operator> <name pos:start="35:27" pos:end="35:40">mapped_node_id</name></expr>)</condition> <block pos:start="35:43" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:49">

        <expr_stmt pos:start="37:9" pos:end="39:49"><expr pos:start="37:9" pos:end="39:48"><call pos:start="37:9" pos:end="39:48"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="39:48">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="39:38"><expr pos:start="37:26" pos:end="39:38"><literal type="string" pos:start="37:26" pos:end="37:69">"node-id=%d must match numa node specified "</literal>

                   <literal type="string" pos:start="39:20" pos:end="39:38">"with -numa option"</literal></expr></argument>, <argument pos:start="39:41" pos:end="39:47"><expr pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:47">node_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
