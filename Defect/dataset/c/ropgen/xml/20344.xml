<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20344.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:28"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">v9fs_unlinkat</name><parameter_list pos:start="1:26" pos:end="1:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="35:28">{<block_content pos:start="3:5" pos:end="35:28">
    <decl_stmt pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:15"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:11">err</name> <init pos:start="3:13" pos:end="3:15">= <expr pos:start="3:15" pos:end="3:15"><literal type="number" pos:start="3:15" pos:end="3:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:20"><decl pos:start="4:5" pos:end="4:19"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:14">V9fsString</name></type> <name pos:start="4:16" pos:end="4:19">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:16">dfid</name></decl>, <decl pos:start="5:19" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:19" pos:end="5:23">flags</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:22"><decl pos:start="6:5" pos:end="6:21"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">size_t</name></type> <name pos:start="6:12" pos:end="6:17">offset</name> <init pos:start="6:19" pos:end="6:21">= <expr pos:start="6:21" pos:end="6:21"><literal type="number" pos:start="6:21" pos:end="6:21">7</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">V9fsPath</name></type> <name pos:start="7:14" pos:end="7:17">path</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:24"><decl pos:start="8:5" pos:end="8:23"><type pos:start="8:5" pos:end="8:18"><name pos:start="8:5" pos:end="8:16">V9fsFidState</name> <modifier pos:start="8:18" pos:end="8:18">*</modifier></type><name pos:start="8:19" pos:end="8:23">dfidp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">V9fsPDU</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">pdu</name> <init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:25">opaque</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:28"><expr pos:start="10:5" pos:end="10:27"><call pos:start="10:5" pos:end="10:27"><name pos:start="10:5" pos:end="10:20">v9fs_string_init</name><argument_list pos:start="10:21" pos:end="10:27">(<argument pos:start="10:22" pos:end="10:26"><expr pos:start="10:22" pos:end="10:26"><operator pos:start="10:22" pos:end="10:22">&amp;</operator><name pos:start="10:23" pos:end="10:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:66"><expr pos:start="11:5" pos:end="11:65"><name pos:start="11:5" pos:end="11:7">err</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:65"><name pos:start="11:11" pos:end="11:23">pdu_unmarshal</name><argument_list pos:start="11:24" pos:end="11:65">(<argument pos:start="11:25" pos:end="11:27"><expr pos:start="11:25" pos:end="11:27"><name pos:start="11:25" pos:end="11:27">pdu</name></expr></argument>, <argument pos:start="11:30" pos:end="11:35"><expr pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:35">offset</name></expr></argument>, <argument pos:start="11:38" pos:end="11:42"><expr pos:start="11:38" pos:end="11:42"><literal type="string" pos:start="11:38" pos:end="11:42">"dsd"</literal></expr></argument>, <argument pos:start="11:45" pos:end="11:49"><expr pos:start="11:45" pos:end="11:49"><operator pos:start="11:45" pos:end="11:45">&amp;</operator><name pos:start="11:46" pos:end="11:49">dfid</name></expr></argument>, <argument pos:start="11:52" pos:end="11:56"><expr pos:start="11:52" pos:end="11:56"><operator pos:start="11:52" pos:end="11:52">&amp;</operator><name pos:start="11:53" pos:end="11:56">name</name></expr></argument>, <argument pos:start="11:59" pos:end="11:64"><expr pos:start="11:59" pos:end="11:64"><operator pos:start="11:59" pos:end="11:59">&amp;</operator><name pos:start="11:60" pos:end="11:64">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="35:28"><if pos:start="12:5" pos:end="35:28">if <condition pos:start="12:8" pos:end="12:16">(<expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:11">err</name> <operator pos:start="12:13" pos:end="12:13">&lt;</operator> <literal type="number" pos:start="12:15" pos:end="12:15">0</literal></expr>)</condition> <block pos:start="12:18" pos:end="35:28">{<block_content pos:start="13:5" pos:end="35:28">
    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:9">dfidp</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:19">get_fid</name><argument_list pos:start="13:20" pos:end="13:30">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">pdu</name></expr></argument>, <argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">dfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="35:28"><if pos:start="14:5" pos:end="35:28">if <condition pos:start="14:8" pos:end="14:22">(<expr pos:start="14:9" pos:end="14:21"><name pos:start="14:9" pos:end="14:13">dfidp</name> <operator pos:start="14:15" pos:end="14:16">==</operator> <name pos:start="14:18" pos:end="14:21">NULL</name></expr>)</condition> <block pos:start="14:24" pos:end="35:28">{<block_content pos:start="15:9" pos:end="35:28">
        <expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">-</operator><name pos:start="15:16" pos:end="15:21">EINVAL</name></expr>;</expr_stmt>
    <comment type="block" pos:start="16:5" pos:end="19:7">/*
     * IF the file is unlinked, we cannot reopen
     * the file later. So don't reclaim fd
     */</comment>
    <expr_stmt pos:start="20:5" pos:end="20:26"><expr pos:start="20:5" pos:end="20:25"><call pos:start="20:5" pos:end="20:25"><name pos:start="20:5" pos:end="20:18">v9fs_path_init</name><argument_list pos:start="20:19" pos:end="20:25">(<argument pos:start="20:20" pos:end="20:24"><expr pos:start="20:20" pos:end="20:24"><operator pos:start="20:20" pos:end="20:20">&amp;</operator><name pos:start="20:21" pos:end="20:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:68"><expr pos:start="21:5" pos:end="21:67"><name pos:start="21:5" pos:end="21:7">err</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:67"><name pos:start="21:11" pos:end="21:30">v9fs_co_name_to_path</name><argument_list pos:start="21:31" pos:end="21:67">(<argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">pdu</name></expr></argument>, <argument pos:start="21:37" pos:end="21:48"><expr pos:start="21:37" pos:end="21:48"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:48"><name pos:start="21:38" pos:end="21:42">dfidp</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:48">path</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:59"><expr pos:start="21:51" pos:end="21:59"><name pos:start="21:51" pos:end="21:59"><name pos:start="21:51" pos:end="21:54">name</name><operator pos:start="21:55" pos:end="21:55">.</operator><name pos:start="21:56" pos:end="21:59">data</name></name></expr></argument>, <argument pos:start="21:62" pos:end="21:66"><expr pos:start="21:62" pos:end="21:66"><operator pos:start="21:62" pos:end="21:62">&amp;</operator><name pos:start="21:63" pos:end="21:66">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="35:28"><if pos:start="22:5" pos:end="35:28">if <condition pos:start="22:8" pos:end="22:16">(<expr pos:start="22:9" pos:end="22:15"><name pos:start="22:9" pos:end="22:11">err</name> <operator pos:start="22:13" pos:end="22:13">&lt;</operator> <literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr>)</condition> <block pos:start="22:18" pos:end="35:28">{<block_content pos:start="23:9" pos:end="35:28">
        <goto pos:start="23:9" pos:end="23:21">goto <name pos:start="23:14" pos:end="23:20">out_err</name>;</goto>
    <expr_stmt pos:start="24:5" pos:end="24:47"><expr pos:start="24:5" pos:end="24:46"><name pos:start="24:5" pos:end="24:7">err</name> <operator pos:start="24:9" pos:end="24:9">=</operator> <call pos:start="24:11" pos:end="24:46"><name pos:start="24:11" pos:end="24:34">v9fs_mark_fids_unreclaim</name><argument_list pos:start="24:35" pos:end="24:46">(<argument pos:start="24:36" pos:end="24:38"><expr pos:start="24:36" pos:end="24:38"><name pos:start="24:36" pos:end="24:38">pdu</name></expr></argument>, <argument pos:start="24:41" pos:end="24:45"><expr pos:start="24:41" pos:end="24:45"><operator pos:start="24:41" pos:end="24:41">&amp;</operator><name pos:start="24:42" pos:end="24:45">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="35:28"><if pos:start="25:5" pos:end="35:28">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">err</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition> <block pos:start="25:18" pos:end="35:28">{<block_content pos:start="26:9" pos:end="35:28">
        <goto pos:start="26:9" pos:end="26:21">goto <name pos:start="26:14" pos:end="26:20">out_err</name>;</goto>
    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:7">err</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:59"><name pos:start="27:11" pos:end="27:26">v9fs_co_unlinkat</name><argument_list pos:start="27:27" pos:end="27:59">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">pdu</name></expr></argument>, <argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:44"><name pos:start="27:34" pos:end="27:38">dfidp</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:44">path</name></name></expr></argument>, <argument pos:start="27:47" pos:end="27:51"><expr pos:start="27:47" pos:end="27:51"><operator pos:start="27:47" pos:end="27:47">&amp;</operator><name pos:start="27:48" pos:end="27:51">name</name></expr></argument>, <argument pos:start="27:54" pos:end="27:58"><expr pos:start="27:54" pos:end="27:58"><name pos:start="27:54" pos:end="27:58">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="28:5" pos:end="35:28"><if pos:start="28:5" pos:end="35:28">if <condition pos:start="28:8" pos:end="28:13">(<expr pos:start="28:9" pos:end="28:12"><operator pos:start="28:9" pos:end="28:9">!</operator><name pos:start="28:10" pos:end="28:12">err</name></expr>)</condition> <block pos:start="28:15" pos:end="35:28">{<block_content pos:start="29:9" pos:end="35:28">
        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:11">err</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:20">offset</name></expr>;</expr_stmt>
<label pos:start="30:1" pos:end="30:8"><name pos:start="30:1" pos:end="30:7">out_err</name>:</label>
    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:11">put_fid</name><argument_list pos:start="31:12" pos:end="31:23">(<argument pos:start="31:13" pos:end="31:15"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">pdu</name></expr></argument>, <argument pos:start="31:18" pos:end="31:22"><expr pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:22">dfidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:26"><expr pos:start="32:5" pos:end="32:25"><call pos:start="32:5" pos:end="32:25"><name pos:start="32:5" pos:end="32:18">v9fs_path_free</name><argument_list pos:start="32:19" pos:end="32:25">(<argument pos:start="32:20" pos:end="32:24"><expr pos:start="32:20" pos:end="32:24"><operator pos:start="32:20" pos:end="32:20">&amp;</operator><name pos:start="32:21" pos:end="32:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="33:1" pos:end="33:10"><name pos:start="33:1" pos:end="33:9">out_nofid</name>:</label>
    <expr_stmt pos:start="34:5" pos:end="34:27"><expr pos:start="34:5" pos:end="34:26"><call pos:start="34:5" pos:end="34:26"><name pos:start="34:5" pos:end="34:16">pdu_complete</name><argument_list pos:start="34:17" pos:end="34:26">(<argument pos:start="34:18" pos:end="34:20"><expr pos:start="34:18" pos:end="34:20"><name pos:start="34:18" pos:end="34:20">pdu</name></expr></argument>, <argument pos:start="34:23" pos:end="34:25"><expr pos:start="34:23" pos:end="34:25"><name pos:start="34:23" pos:end="34:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><call pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:20">v9fs_string_free</name><argument_list pos:start="35:21" pos:end="35:27">(<argument pos:start="35:22" pos:end="35:26"><expr pos:start="35:22" pos:end="35:26"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
