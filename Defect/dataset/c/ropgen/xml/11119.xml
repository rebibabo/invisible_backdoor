<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11119.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">subtitle_thread</name><parameter_list pos:start="1:27" pos:end="1:37">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VideoState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">is</name> <init pos:start="5:20" pos:end="5:24">= <expr pos:start="5:22" pos:end="5:24"><name pos:start="5:22" pos:end="5:24">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Frame</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:13">sp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">got_subtitle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:14">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">r</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">g</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">b</name></decl>, <decl pos:start="15:18" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:18">y</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:21">u</name></decl>, <decl pos:start="15:24" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:24" pos:end="15:24">v</name></decl>, <decl pos:start="15:27" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:27">a</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="91:5">for <control pos:start="19:9" pos:end="19:12">(<init pos:start="19:10" pos:end="19:10">;</init><condition pos:start="19:11" pos:end="19:11">;</condition><incr/>)</control> <block pos:start="19:14" pos:end="91:5">{<block_content pos:start="21:9" pos:end="89:9">

        <while pos:start="21:9" pos:end="25:9">while <condition pos:start="21:15" pos:end="21:58">(<expr pos:start="21:16" pos:end="21:57"><name pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:17">is</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:25">paused</name></name> <operator pos:start="21:27" pos:end="21:28">&amp;&amp;</operator> <operator pos:start="21:30" pos:end="21:30">!</operator><name pos:start="21:31" pos:end="21:57"><name pos:start="21:31" pos:end="21:32">is</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:43">subtitleq</name><operator pos:start="21:44" pos:end="21:44">.</operator><name pos:start="21:45" pos:end="21:57">abort_request</name></name></expr>)</condition> <block pos:start="21:60" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:26">

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><call pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21">SDL_Delay</name><argument_list pos:start="23:22" pos:end="23:25">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><literal type="number" pos:start="23:23" pos:end="23:24">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="29:9" pos:end="31:21"><if pos:start="29:9" pos:end="31:21">if <condition pos:start="29:12" pos:end="29:58">(<expr pos:start="29:13" pos:end="29:57"><operator pos:start="29:13" pos:end="29:13">!</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:16">sp</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:56"><name pos:start="29:20" pos:end="29:44">frame_queue_peek_writable</name><argument_list pos:start="29:45" pos:end="29:56">(<argument pos:start="29:46" pos:end="29:55"><expr pos:start="29:46" pos:end="29:55"><operator pos:start="29:46" pos:end="29:46">&amp;</operator><name pos:start="29:47" pos:end="29:55"><name pos:start="29:47" pos:end="29:48">is</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:55">subpq</name></name></expr></argument>)</argument_list></call><operator pos:start="29:57" pos:end="29:57">)</operator></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:21"><block_content pos:start="31:13" pos:end="31:21">

            <return pos:start="31:13" pos:end="31:21">return <expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="37:18"><if pos:start="35:9" pos:end="37:18">if <condition pos:start="35:12" pos:end="35:77">(<expr pos:start="35:13" pos:end="35:76"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:25">got_subtitle</name> <operator pos:start="35:27" pos:end="35:27">=</operator> <call pos:start="35:29" pos:end="35:71"><name pos:start="35:29" pos:end="35:48">decoder_decode_frame</name><argument_list pos:start="35:49" pos:end="35:71">(<argument pos:start="35:50" pos:end="35:60"><expr pos:start="35:50" pos:end="35:60"><operator pos:start="35:50" pos:end="35:50">&amp;</operator><name pos:start="35:51" pos:end="35:60"><name pos:start="35:51" pos:end="35:52">is</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:60">subdec</name></name></expr></argument>, <argument pos:start="35:63" pos:end="35:70"><expr pos:start="35:63" pos:end="35:70"><operator pos:start="35:63" pos:end="35:63">&amp;</operator><name pos:start="35:64" pos:end="35:70"><name pos:start="35:64" pos:end="35:65">sp</name><operator pos:start="35:66" pos:end="35:67">-&gt;</operator><name pos:start="35:68" pos:end="35:70">sub</name></name></expr></argument>)</argument_list></call><operator pos:start="35:72" pos:end="35:72">)</operator> <operator pos:start="35:74" pos:end="35:74">&lt;</operator> <literal type="number" pos:start="35:76" pos:end="35:76">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:18"><block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:16"><expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">pts</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="89:9"><if pos:start="45:9" pos:end="85:9">if <condition pos:start="45:12" pos:end="45:48">(<expr pos:start="45:13" pos:end="45:47"><name pos:start="45:13" pos:end="45:24">got_subtitle</name> <operator pos:start="45:26" pos:end="45:27">&amp;&amp;</operator> <name pos:start="45:29" pos:end="45:42"><name pos:start="45:29" pos:end="45:30">sp</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:35">sub</name><operator pos:start="45:36" pos:end="45:36">.</operator><name pos:start="45:37" pos:end="45:42">format</name></name> <operator pos:start="45:44" pos:end="45:45">==</operator> <literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr>)</condition> <block pos:start="45:50" pos:end="85:9">{<block_content pos:start="47:13" pos:end="83:41">

            <if_stmt pos:start="47:13" pos:end="49:57"><if pos:start="47:13" pos:end="49:57">if <condition pos:start="47:16" pos:end="47:46">(<expr pos:start="47:17" pos:end="47:45"><name pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:18">sp</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:23">sub</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:27">pts</name></name> <operator pos:start="47:29" pos:end="47:30">!=</operator> <name pos:start="47:32" pos:end="47:45">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:57"><block_content pos:start="49:17" pos:end="49:57">

                <expr_stmt pos:start="49:17" pos:end="49:57"><expr pos:start="49:17" pos:end="49:56"><name pos:start="49:17" pos:end="49:19">pts</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:33"><name pos:start="49:23" pos:end="49:24">sp</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:29">sub</name><operator pos:start="49:30" pos:end="49:30">.</operator><name pos:start="49:31" pos:end="49:33">pts</name></name> <operator pos:start="49:35" pos:end="49:35">/</operator> <operator pos:start="49:37" pos:end="49:37">(</operator><name pos:start="49:38" pos:end="49:43">double</name><operator pos:start="49:44" pos:end="49:44">)</operator><name pos:start="49:45" pos:end="49:56">AV_TIME_BASE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:26"><expr pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:14">sp</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:19">pts</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:25">pts</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:47"><expr pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:14">sp</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:22">serial</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:46"><name pos:start="53:26" pos:end="53:27">is</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:35">subdec</name><operator pos:start="53:36" pos:end="53:36">.</operator><name pos:start="53:37" pos:end="53:46">pkt_serial</name></name></expr>;</expr_stmt>



            <for pos:start="57:13" pos:end="77:13">for <control pos:start="57:17" pos:end="57:51">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">i</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:46"><expr pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:25">i</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:45"><name pos:start="57:29" pos:end="57:30">sp</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:35">sub</name><operator pos:start="57:36" pos:end="57:36">.</operator><name pos:start="57:37" pos:end="57:45">num_rects</name></name></expr>;</condition> <incr pos:start="57:48" pos:end="57:50"><expr pos:start="57:48" pos:end="57:50"><name pos:start="57:48" pos:end="57:48">i</name><operator pos:start="57:49" pos:end="57:50">++</operator></expr></incr>)</control>

            <block pos:start="59:13" pos:end="77:13">{<block_content pos:start="61:17" pos:end="75:17">

                <for pos:start="61:17" pos:end="75:17">for <control pos:start="61:21" pos:end="61:65">(<init pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:26"><name pos:start="61:22" pos:end="61:22">j</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr>;</init> <condition pos:start="61:29" pos:end="61:60"><expr pos:start="61:29" pos:end="61:59"><name pos:start="61:29" pos:end="61:29">j</name> <operator pos:start="61:31" pos:end="61:31">&lt;</operator> <name pos:start="61:33" pos:end="61:48"><name pos:start="61:33" pos:end="61:34">sp</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:39">sub</name><operator pos:start="61:40" pos:end="61:40">.</operator><name pos:start="61:41" pos:end="61:45">rects</name><index pos:start="61:46" pos:end="61:48">[<expr pos:start="61:47" pos:end="61:47"><name pos:start="61:47" pos:end="61:47">i</name></expr>]</index></name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:59">nb_colors</name></expr>;</condition> <incr pos:start="61:62" pos:end="61:64"><expr pos:start="61:62" pos:end="61:64"><name pos:start="61:62" pos:end="61:62">j</name><operator pos:start="61:63" pos:end="61:64">++</operator></expr></incr>)</control>

                <block pos:start="63:17" pos:end="75:17">{<block_content pos:start="65:21" pos:end="73:88">

                    <expr_stmt pos:start="65:21" pos:end="65:87"><expr pos:start="65:21" pos:end="65:86"><call pos:start="65:21" pos:end="65:86"><name pos:start="65:21" pos:end="65:27">RGBA_IN</name><argument_list pos:start="65:28" pos:end="65:86">(<argument pos:start="65:29" pos:end="65:29"><expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">r</name></expr></argument>, <argument pos:start="65:32" pos:end="65:32"><expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">g</name></expr></argument>, <argument pos:start="65:35" pos:end="65:35"><expr pos:start="65:35" pos:end="65:35"><name pos:start="65:35" pos:end="65:35">b</name></expr></argument>, <argument pos:start="65:38" pos:end="65:38"><expr pos:start="65:38" pos:end="65:38"><name pos:start="65:38" pos:end="65:38">a</name></expr></argument>, <argument pos:start="65:41" pos:end="65:85"><expr pos:start="65:41" pos:end="65:85"><operator pos:start="65:41" pos:end="65:41">(</operator><name pos:start="65:42" pos:end="65:49">uint32_t</name><operator pos:start="65:50" pos:end="65:50">*</operator><operator pos:start="65:51" pos:end="65:51">)</operator><name pos:start="65:52" pos:end="65:67"><name pos:start="65:52" pos:end="65:53">sp</name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:58">sub</name><operator pos:start="65:59" pos:end="65:59">.</operator><name pos:start="65:60" pos:end="65:64">rects</name><index pos:start="65:65" pos:end="65:67">[<expr pos:start="65:66" pos:end="65:66"><name pos:start="65:66" pos:end="65:66">i</name></expr>]</index></name><operator pos:start="65:68" pos:end="65:69">-&gt;</operator><name pos:start="65:70" pos:end="65:81"><name pos:start="65:70" pos:end="65:73">pict</name><operator pos:start="65:74" pos:end="65:74">.</operator><name pos:start="65:75" pos:end="65:78">data</name><index pos:start="65:79" pos:end="65:81">[<expr pos:start="65:80" pos:end="65:80"><literal type="number" pos:start="65:80" pos:end="65:80">1</literal></expr>]</index></name> <operator pos:start="65:83" pos:end="65:83">+</operator> <name pos:start="65:85" pos:end="65:85">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:47"><expr pos:start="67:21" pos:end="67:46"><name pos:start="67:21" pos:end="67:21">y</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <call pos:start="67:25" pos:end="67:46"><name pos:start="67:25" pos:end="67:37">RGB_TO_Y_CCIR</name><argument_list pos:start="67:38" pos:end="67:46">(<argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><name pos:start="67:39" pos:end="67:39">r</name></expr></argument>, <argument pos:start="67:42" pos:end="67:42"><expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">g</name></expr></argument>, <argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:50"><expr pos:start="69:21" pos:end="69:49"><name pos:start="69:21" pos:end="69:21">u</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="69:49"><name pos:start="69:25" pos:end="69:37">RGB_TO_U_CCIR</name><argument_list pos:start="69:38" pos:end="69:49">(<argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><name pos:start="69:39" pos:end="69:39">r</name></expr></argument>, <argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><name pos:start="69:42" pos:end="69:42">g</name></expr></argument>, <argument pos:start="69:45" pos:end="69:45"><expr pos:start="69:45" pos:end="69:45"><name pos:start="69:45" pos:end="69:45">b</name></expr></argument>, <argument pos:start="69:48" pos:end="69:48"><expr pos:start="69:48" pos:end="69:48"><literal type="number" pos:start="69:48" pos:end="69:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:50"><expr pos:start="71:21" pos:end="71:49"><name pos:start="71:21" pos:end="71:21">v</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:49"><name pos:start="71:25" pos:end="71:37">RGB_TO_V_CCIR</name><argument_list pos:start="71:38" pos:end="71:49">(<argument pos:start="71:39" pos:end="71:39"><expr pos:start="71:39" pos:end="71:39"><name pos:start="71:39" pos:end="71:39">r</name></expr></argument>, <argument pos:start="71:42" pos:end="71:42"><expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">g</name></expr></argument>, <argument pos:start="71:45" pos:end="71:45"><expr pos:start="71:45" pos:end="71:45"><name pos:start="71:45" pos:end="71:45">b</name></expr></argument>, <argument pos:start="71:48" pos:end="71:48"><expr pos:start="71:48" pos:end="71:48"><literal type="number" pos:start="71:48" pos:end="71:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:88"><expr pos:start="73:21" pos:end="73:87"><call pos:start="73:21" pos:end="73:87"><name pos:start="73:21" pos:end="73:28">YUVA_OUT</name><argument_list pos:start="73:29" pos:end="73:87">(<argument pos:start="73:30" pos:end="73:74"><expr pos:start="73:30" pos:end="73:74"><operator pos:start="73:30" pos:end="73:30">(</operator><name pos:start="73:31" pos:end="73:38">uint32_t</name><operator pos:start="73:39" pos:end="73:39">*</operator><operator pos:start="73:40" pos:end="73:40">)</operator><name pos:start="73:41" pos:end="73:56"><name pos:start="73:41" pos:end="73:42">sp</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:47">sub</name><operator pos:start="73:48" pos:end="73:48">.</operator><name pos:start="73:49" pos:end="73:53">rects</name><index pos:start="73:54" pos:end="73:56">[<expr pos:start="73:55" pos:end="73:55"><name pos:start="73:55" pos:end="73:55">i</name></expr>]</index></name><operator pos:start="73:57" pos:end="73:58">-&gt;</operator><name pos:start="73:59" pos:end="73:70"><name pos:start="73:59" pos:end="73:62">pict</name><operator pos:start="73:63" pos:end="73:63">.</operator><name pos:start="73:64" pos:end="73:67">data</name><index pos:start="73:68" pos:end="73:70">[<expr pos:start="73:69" pos:end="73:69"><literal type="number" pos:start="73:69" pos:end="73:69">1</literal></expr>]</index></name> <operator pos:start="73:72" pos:end="73:72">+</operator> <name pos:start="73:74" pos:end="73:74">j</name></expr></argument>, <argument pos:start="73:77" pos:end="73:77"><expr pos:start="73:77" pos:end="73:77"><name pos:start="73:77" pos:end="73:77">y</name></expr></argument>, <argument pos:start="73:80" pos:end="73:80"><expr pos:start="73:80" pos:end="73:80"><name pos:start="73:80" pos:end="73:80">u</name></expr></argument>, <argument pos:start="73:83" pos:end="73:83"><expr pos:start="73:83" pos:end="73:83"><name pos:start="73:83" pos:end="73:83">v</name></expr></argument>, <argument pos:start="73:86" pos:end="73:86"><expr pos:start="73:86" pos:end="73:86"><name pos:start="73:86" pos:end="73:86">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <comment type="block" pos:start="81:13" pos:end="81:53">/* now we can update the picture count */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:41"><expr pos:start="83:13" pos:end="83:40"><call pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:28">frame_queue_push</name><argument_list pos:start="83:29" pos:end="83:40">(<argument pos:start="83:30" pos:end="83:39"><expr pos:start="83:30" pos:end="83:39"><operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:39"><name pos:start="83:31" pos:end="83:32">is</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:39">subpq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="85:11" pos:end="89:9">else if <condition pos:start="85:19" pos:end="85:32">(<expr pos:start="85:20" pos:end="85:31"><name pos:start="85:20" pos:end="85:31">got_subtitle</name></expr>)</condition> <block pos:start="85:34" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:38">

            <expr_stmt pos:start="87:13" pos:end="87:38"><expr pos:start="87:13" pos:end="87:37"><call pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:27">avsubtitle_free</name><argument_list pos:start="87:28" pos:end="87:37">(<argument pos:start="87:29" pos:end="87:36"><expr pos:start="87:29" pos:end="87:36"><operator pos:start="87:29" pos:end="87:29">&amp;</operator><name pos:start="87:30" pos:end="87:36"><name pos:start="87:30" pos:end="87:31">sp</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:36">sub</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
