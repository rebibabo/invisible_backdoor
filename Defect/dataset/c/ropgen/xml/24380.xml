<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24380.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="75:1"><decl pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">SoftFloat</name></type> <name pos:start="1:18" pos:end="1:33">sbr_sum_square_c</name><argument_list pos:start="1:34" pos:end="1:53">(<argument pos:start="1:35" pos:end="1:45"><expr pos:start="1:35" pos:end="1:45"><call pos:start="1:35" pos:end="1:42"><name pos:start="1:35" pos:end="1:37">int</name> <argument_list pos:start="1:39" pos:end="1:42">(<argument pos:start="1:40" pos:end="1:41"><expr pos:start="1:40" pos:end="1:41"><operator pos:start="1:40" pos:end="1:40">*</operator><name pos:start="1:41" pos:end="1:41">x</name></expr></argument>)</argument_list></call><index pos:start="1:43" pos:end="1:45">[<expr pos:start="1:44" pos:end="1:44"><literal type="number" pos:start="1:44" pos:end="1:44">2</literal></expr>]</index></expr></argument>, <argument pos:start="1:48" pos:end="1:52"><expr pos:start="1:48" pos:end="1:52"><name pos:start="1:48" pos:end="1:50">int</name> <name pos:start="1:52" pos:end="1:52">n</name></expr></argument>)</argument_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">SoftFloat</name></type> <name pos:start="5:15" pos:end="5:17">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">accu</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>, <decl pos:start="7:24" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:24" pos:end="7:28">round</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:13"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:13">nz</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:14">u</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="35:5">for <control pos:start="15:9" pos:end="15:30">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:21"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:21">n</name></expr>;</condition> <incr pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:24">i</name> <operator pos:start="15:26" pos:end="15:27">+=</operator> <literal type="number" pos:start="15:29" pos:end="15:29">2</literal></expr></incr>)</control> <block pos:start="15:32" pos:end="35:5">{<block_content pos:start="19:9" pos:end="33:51">

        <comment type="line" pos:start="17:9" pos:end="17:71">// Larger values are inavlid and could cause overflows of accu.</comment>

        <expr_stmt pos:start="19:9" pos:end="19:50"><expr pos:start="19:9" pos:end="19:49"><call pos:start="19:9" pos:end="19:49"><name pos:start="19:9" pos:end="19:18">av_assert2</name><argument_list pos:start="19:19" pos:end="19:49">(<argument pos:start="19:20" pos:end="19:48"><expr pos:start="19:20" pos:end="19:48"><call pos:start="19:20" pos:end="19:37"><name pos:start="19:20" pos:end="19:24">FFABS</name><argument_list pos:start="19:25" pos:end="19:37">(<argument pos:start="19:26" pos:end="19:36"><expr pos:start="19:26" pos:end="19:36"><name pos:start="19:26" pos:end="19:36"><name pos:start="19:26" pos:end="19:26">x</name><index pos:start="19:27" pos:end="19:33">[<expr pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:28">i</name> <operator pos:start="19:30" pos:end="19:30">+</operator> <literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr>]</index><index pos:start="19:34" pos:end="19:36">[<expr pos:start="19:35" pos:end="19:35"><literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="19:39" pos:end="19:40">&gt;&gt;</operator> <literal type="number" pos:start="19:42" pos:end="19:43">29</literal> <operator pos:start="19:45" pos:end="19:46">==</operator> <literal type="number" pos:start="19:48" pos:end="19:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:12">accu</name> <operator pos:start="21:14" pos:end="21:15">+=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:24">int64_t</name><operator pos:start="21:25" pos:end="21:25">)</operator><name pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:26">x</name><index pos:start="21:27" pos:end="21:33">[<expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:28">i</name> <operator pos:start="21:30" pos:end="21:30">+</operator> <literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr>]</index><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr>]</index></name> <operator pos:start="21:38" pos:end="21:38">*</operator> <name pos:start="21:40" pos:end="21:50"><name pos:start="21:40" pos:end="21:40">x</name><index pos:start="21:41" pos:end="21:47">[<expr pos:start="21:42" pos:end="21:46"><name pos:start="21:42" pos:end="21:42">i</name> <operator pos:start="21:44" pos:end="21:44">+</operator> <literal type="number" pos:start="21:46" pos:end="21:46">0</literal></expr>]</index><index pos:start="21:48" pos:end="21:50">[<expr pos:start="21:49" pos:end="21:49"><literal type="number" pos:start="21:49" pos:end="21:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><call pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:18">av_assert2</name><argument_list pos:start="23:19" pos:end="23:49">(<argument pos:start="23:20" pos:end="23:48"><expr pos:start="23:20" pos:end="23:48"><call pos:start="23:20" pos:end="23:37"><name pos:start="23:20" pos:end="23:24">FFABS</name><argument_list pos:start="23:25" pos:end="23:37">(<argument pos:start="23:26" pos:end="23:36"><expr pos:start="23:26" pos:end="23:36"><name pos:start="23:26" pos:end="23:36"><name pos:start="23:26" pos:end="23:26">x</name><index pos:start="23:27" pos:end="23:33">[<expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:28">i</name> <operator pos:start="23:30" pos:end="23:30">+</operator> <literal type="number" pos:start="23:32" pos:end="23:32">0</literal></expr>]</index><index pos:start="23:34" pos:end="23:36">[<expr pos:start="23:35" pos:end="23:35"><literal type="number" pos:start="23:35" pos:end="23:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="23:39" pos:end="23:40">&gt;&gt;</operator> <literal type="number" pos:start="23:42" pos:end="23:43">29</literal> <operator pos:start="23:45" pos:end="23:46">==</operator> <literal type="number" pos:start="23:48" pos:end="23:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:12">accu</name> <operator pos:start="25:14" pos:end="25:15">+=</operator> <operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:24">int64_t</name><operator pos:start="25:25" pos:end="25:25">)</operator><name pos:start="25:26" pos:end="25:36"><name pos:start="25:26" pos:end="25:26">x</name><index pos:start="25:27" pos:end="25:33">[<expr pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:28">i</name> <operator pos:start="25:30" pos:end="25:30">+</operator> <literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>]</index><index pos:start="25:34" pos:end="25:36">[<expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">1</literal></expr>]</index></name> <operator pos:start="25:38" pos:end="25:38">*</operator> <name pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:40">x</name><index pos:start="25:41" pos:end="25:47">[<expr pos:start="25:42" pos:end="25:46"><name pos:start="25:42" pos:end="25:42">i</name> <operator pos:start="25:44" pos:end="25:44">+</operator> <literal type="number" pos:start="25:46" pos:end="25:46">0</literal></expr>]</index><index pos:start="25:48" pos:end="25:50">[<expr pos:start="25:49" pos:end="25:49"><literal type="number" pos:start="25:49" pos:end="25:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><call pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:18">av_assert2</name><argument_list pos:start="27:19" pos:end="27:49">(<argument pos:start="27:20" pos:end="27:48"><expr pos:start="27:20" pos:end="27:48"><call pos:start="27:20" pos:end="27:37"><name pos:start="27:20" pos:end="27:24">FFABS</name><argument_list pos:start="27:25" pos:end="27:37">(<argument pos:start="27:26" pos:end="27:36"><expr pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:26">x</name><index pos:start="27:27" pos:end="27:33">[<expr pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:28">i</name> <operator pos:start="27:30" pos:end="27:30">+</operator> <literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr>]</index><index pos:start="27:34" pos:end="27:36">[<expr pos:start="27:35" pos:end="27:35"><literal type="number" pos:start="27:35" pos:end="27:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="27:39" pos:end="27:40">&gt;&gt;</operator> <literal type="number" pos:start="27:42" pos:end="27:43">29</literal> <operator pos:start="27:45" pos:end="27:46">==</operator> <literal type="number" pos:start="27:48" pos:end="27:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:12">accu</name> <operator pos:start="29:14" pos:end="29:15">+=</operator> <operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:24">int64_t</name><operator pos:start="29:25" pos:end="29:25">)</operator><name pos:start="29:26" pos:end="29:36"><name pos:start="29:26" pos:end="29:26">x</name><index pos:start="29:27" pos:end="29:33">[<expr pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:28">i</name> <operator pos:start="29:30" pos:end="29:30">+</operator> <literal type="number" pos:start="29:32" pos:end="29:32">1</literal></expr>]</index><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><literal type="number" pos:start="29:35" pos:end="29:35">0</literal></expr>]</index></name> <operator pos:start="29:38" pos:end="29:38">*</operator> <name pos:start="29:40" pos:end="29:50"><name pos:start="29:40" pos:end="29:40">x</name><index pos:start="29:41" pos:end="29:47">[<expr pos:start="29:42" pos:end="29:46"><name pos:start="29:42" pos:end="29:42">i</name> <operator pos:start="29:44" pos:end="29:44">+</operator> <literal type="number" pos:start="29:46" pos:end="29:46">1</literal></expr>]</index><index pos:start="29:48" pos:end="29:50">[<expr pos:start="29:49" pos:end="29:49"><literal type="number" pos:start="29:49" pos:end="29:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><call pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:18">av_assert2</name><argument_list pos:start="31:19" pos:end="31:49">(<argument pos:start="31:20" pos:end="31:48"><expr pos:start="31:20" pos:end="31:48"><call pos:start="31:20" pos:end="31:37"><name pos:start="31:20" pos:end="31:24">FFABS</name><argument_list pos:start="31:25" pos:end="31:37">(<argument pos:start="31:26" pos:end="31:36"><expr pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:26">x</name><index pos:start="31:27" pos:end="31:33">[<expr pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:28">i</name> <operator pos:start="31:30" pos:end="31:30">+</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr>]</index><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="31:39" pos:end="31:40">&gt;&gt;</operator> <literal type="number" pos:start="31:42" pos:end="31:43">29</literal> <operator pos:start="31:45" pos:end="31:46">==</operator> <literal type="number" pos:start="31:48" pos:end="31:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:51"><expr pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:12">accu</name> <operator pos:start="33:14" pos:end="33:15">+=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:24">int64_t</name><operator pos:start="33:25" pos:end="33:25">)</operator><name pos:start="33:26" pos:end="33:36"><name pos:start="33:26" pos:end="33:26">x</name><index pos:start="33:27" pos:end="33:33">[<expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:28">i</name> <operator pos:start="33:30" pos:end="33:30">+</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr>]</index><index pos:start="33:34" pos:end="33:36">[<expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr>]</index></name> <operator pos:start="33:38" pos:end="33:38">*</operator> <name pos:start="33:40" pos:end="33:50"><name pos:start="33:40" pos:end="33:40">x</name><index pos:start="33:41" pos:end="33:47">[<expr pos:start="33:42" pos:end="33:46"><name pos:start="33:42" pos:end="33:42">i</name> <operator pos:start="33:44" pos:end="33:44">+</operator> <literal type="number" pos:start="33:46" pos:end="33:46">1</literal></expr>]</index><index pos:start="33:48" pos:end="33:50">[<expr pos:start="33:49" pos:end="33:49"><literal type="number" pos:start="33:49" pos:end="33:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:5">u</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <name pos:start="39:9" pos:end="39:12">accu</name> <operator pos:start="39:14" pos:end="39:15">&gt;&gt;</operator> <literal type="number" pos:start="39:17" pos:end="39:18">32</literal></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="59:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">u</name> <operator pos:start="41:11" pos:end="41:12">==</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>)</condition> <block pos:start="41:17" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:15">

        <expr_stmt pos:start="43:9" pos:end="43:15"><expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:10">nz</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="59:5">else <block pos:start="45:12" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:21">

        <expr_stmt pos:start="47:9" pos:end="47:16"><expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:10">nz</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <operator pos:start="47:14" pos:end="47:14">-</operator><literal type="number" pos:start="47:15" pos:end="47:15">1</literal></expr>;</expr_stmt>

        <while pos:start="49:9" pos:end="55:9">while <condition pos:start="49:15" pos:end="49:31">(<expr pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:16">u</name> <operator pos:start="49:18" pos:end="49:18">&lt;</operator> <literal type="number" pos:start="49:20" pos:end="49:30">0x80000000U</literal></expr>)</condition> <block pos:start="49:33" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:17">

            <expr_stmt pos:start="51:13" pos:end="51:20"><expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:13">u</name> <operator pos:start="51:15" pos:end="51:17">&lt;&lt;=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:17"><expr pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:14">nz</name><operator pos:start="53:15" pos:end="53:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:10">nz</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:17">32</literal> <operator pos:start="57:17" pos:end="57:17">-</operator> <name pos:start="57:19" pos:end="57:20">nz</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:9">round</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <literal type="number" pos:start="63:13" pos:end="63:16">1ULL</literal> <operator pos:start="63:18" pos:end="63:19">&lt;&lt;</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:23">nz</name><operator pos:start="63:24" pos:end="63:24">-</operator><literal type="number" pos:start="63:25" pos:end="63:25">1</literal><operator pos:start="63:26" pos:end="63:26">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:31"><expr pos:start="65:5" pos:end="65:30"><name pos:start="65:5" pos:end="65:5">u</name> <operator pos:start="65:7" pos:end="65:7">=</operator> <operator pos:start="65:9" pos:end="65:9">(</operator><operator pos:start="65:10" pos:end="65:10">(</operator><name pos:start="65:11" pos:end="65:14">accu</name> <operator pos:start="65:16" pos:end="65:16">+</operator> <name pos:start="65:18" pos:end="65:22">round</name><operator pos:start="65:23" pos:end="65:23">)</operator> <operator pos:start="65:25" pos:end="65:26">&gt;&gt;</operator> <name pos:start="65:28" pos:end="65:29">nz</name><operator pos:start="65:30" pos:end="65:30">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:12"><expr pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:5">u</name> <operator pos:start="67:7" pos:end="67:9">&gt;&gt;=</operator> <literal type="number" pos:start="67:11" pos:end="67:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:7">ret</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:31"><name pos:start="69:11" pos:end="69:19">av_int2sf</name><argument_list pos:start="69:20" pos:end="69:31">(<argument pos:start="69:21" pos:end="69:21"><expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">u</name></expr></argument>, <argument pos:start="69:24" pos:end="69:30"><expr pos:start="69:24" pos:end="69:30"><literal type="number" pos:start="69:24" pos:end="69:27">15</literal> <operator pos:start="69:27" pos:end="69:27">-</operator> <name pos:start="69:29" pos:end="69:30">nz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></decl></decl_stmt>
</unit>
