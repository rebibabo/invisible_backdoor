<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1423.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">gif_read_extension</name><parameter_list pos:start="1:30" pos:end="1:42">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:38">GifState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">ext_code</name></decl>, <decl pos:start="5:19" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:25">ext_len</name></decl>, <decl pos:start="5:28" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:36">gce_flags</name></decl>, <decl pos:start="5:39" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:39" pos:end="5:59">gce_transparent_index</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="11:59">/* There must be at least 2 bytes:

     * 1 for extension label and 1 for extension length. */</comment>

    <if_stmt pos:start="13:5" pos:end="15:35"><if pos:start="13:5" pos:end="15:35">if <condition pos:start="13:8" pos:end="13:47">(<expr pos:start="13:9" pos:end="13:46"><call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:34">bytestream2_get_bytes_left</name><argument_list pos:start="13:35" pos:end="13:42">(<argument pos:start="13:36" pos:end="13:41"><expr pos:start="13:36" pos:end="13:41"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:41"><name pos:start="13:37" pos:end="13:37">s</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:44" pos:end="13:44">&lt;</operator> <literal type="number" pos:start="13:46" pos:end="13:46">2</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:35"><block_content pos:start="15:9" pos:end="15:35">

        <return pos:start="15:9" pos:end="15:35">return <expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:12">ext_code</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:44"><name pos:start="19:16" pos:end="19:36">bytestream2_get_byteu</name><argument_list pos:start="19:37" pos:end="19:44">(<argument pos:start="19:38" pos:end="19:43"><expr pos:start="19:38" pos:end="19:43"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:43"><name pos:start="19:39" pos:end="19:39">s</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:11">ext_len</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:43"><name pos:start="21:15" pos:end="21:35">bytestream2_get_byteu</name><argument_list pos:start="21:36" pos:end="21:43">(<argument pos:start="21:37" pos:end="21:42"><expr pos:start="21:37" pos:end="21:42"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:42"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:67"><expr pos:start="25:5" pos:end="25:66"><call pos:start="25:5" pos:end="25:66"><name pos:start="25:5" pos:end="25:11">av_dlog</name><argument_list pos:start="25:12" pos:end="25:66">(<argument pos:start="25:13" pos:end="25:20"><expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">avctx</name></name></expr></argument>, <argument pos:start="25:23" pos:end="25:46"><expr pos:start="25:23" pos:end="25:46"><literal type="string" pos:start="25:23" pos:end="25:46">"ext_code=0x%x len=%d\n"</literal></expr></argument>, <argument pos:start="25:49" pos:end="25:56"><expr pos:start="25:49" pos:end="25:56"><name pos:start="25:49" pos:end="25:56">ext_code</name></expr></argument>, <argument pos:start="25:59" pos:end="25:65"><expr pos:start="25:59" pos:end="25:65"><name pos:start="25:59" pos:end="25:65">ext_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="29:5" pos:end="89:5">switch<condition pos:start="29:11" pos:end="29:20">(<expr pos:start="29:12" pos:end="29:19"><name pos:start="29:12" pos:end="29:19">ext_code</name></expr>)</condition> <block pos:start="29:22" pos:end="89:5">{<block_content pos:start="31:5" pos:end="87:14">

    <case pos:start="31:5" pos:end="31:27">case <expr pos:start="31:10" pos:end="31:26"><name pos:start="31:10" pos:end="31:26">GIF_GCE_EXT_LABEL</name></expr>:</case>

        <if_stmt pos:start="33:9" pos:end="35:29"><if pos:start="33:9" pos:end="35:29">if <condition pos:start="33:12" pos:end="33:25">(<expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:19">ext_len</name> <operator pos:start="33:21" pos:end="33:22">!=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">4</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:29"><block_content pos:start="35:13" pos:end="35:29">

            <goto pos:start="35:13" pos:end="35:29">goto <name pos:start="35:18" pos:end="35:28">discard_ext</name>;</goto></block_content></block></if></if_stmt>



        <comment type="block" pos:start="39:9" pos:end="41:40">/* We need at least 5 bytes more: 4 is for extension body

         * and 1 for next block size. */</comment>

        <if_stmt pos:start="43:9" pos:end="45:39"><if pos:start="43:9" pos:end="45:39">if <condition pos:start="43:12" pos:end="43:51">(<expr pos:start="43:13" pos:end="43:50"><call pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:38">bytestream2_get_bytes_left</name><argument_list pos:start="43:39" pos:end="43:46">(<argument pos:start="43:40" pos:end="43:45"><expr pos:start="43:40" pos:end="43:45"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:45"><name pos:start="43:41" pos:end="43:41">s</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:48" pos:end="43:48">&lt;</operator> <literal type="number" pos:start="43:50" pos:end="43:50">5</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:39"><block_content pos:start="45:13" pos:end="45:39">

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:17">gce_flags</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:49"><name pos:start="49:21" pos:end="49:41">bytestream2_get_byteu</name><argument_list pos:start="49:42" pos:end="49:49">(<argument pos:start="49:43" pos:end="49:48"><expr pos:start="49:43" pos:end="49:48"><operator pos:start="49:43" pos:end="49:43">&amp;</operator><name pos:start="49:44" pos:end="49:48"><name pos:start="49:44" pos:end="49:44">s</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><call pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:25">bytestream2_skipu</name><argument_list pos:start="51:26" pos:end="51:36">(<argument pos:start="51:27" pos:end="51:32"><expr pos:start="51:27" pos:end="51:32"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:28">s</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:32">gb</name></name></expr></argument>, <argument pos:start="51:35" pos:end="51:35"><expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="51:42" pos:end="51:81">// delay during which the frame is shown</comment>

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:29">gce_transparent_index</name> <operator pos:start="53:31" pos:end="53:31">=</operator> <call pos:start="53:33" pos:end="53:61"><name pos:start="53:33" pos:end="53:53">bytestream2_get_byteu</name><argument_list pos:start="53:54" pos:end="53:61">(<argument pos:start="53:55" pos:end="53:60"><expr pos:start="53:55" pos:end="53:60"><operator pos:start="53:55" pos:end="53:55">&amp;</operator><name pos:start="53:56" pos:end="53:60"><name pos:start="53:56" pos:end="53:56">s</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:60">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:44"><if pos:start="55:9" pos:end="57:63">if <condition pos:start="55:12" pos:end="55:29">(<expr pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:21">gce_flags</name> <operator pos:start="55:23" pos:end="55:23">&amp;</operator> <literal type="number" pos:start="55:25" pos:end="55:28">0x01</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:63"><block_content pos:start="57:13" pos:end="57:63">

            <expr_stmt pos:start="57:13" pos:end="57:63"><expr pos:start="57:13" pos:end="57:62"><name pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:38">transparent_color_index</name></name> <operator pos:start="57:40" pos:end="57:40">=</operator> <name pos:start="57:42" pos:end="57:62">gce_transparent_index</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="59:9" pos:end="61:44">else<block type="pseudo" pos:start="61:13" pos:end="61:44"><block_content pos:start="61:13" pos:end="61:44">

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:38">transparent_color_index</name></name> <operator pos:start="61:40" pos:end="61:40">=</operator> <operator pos:start="61:42" pos:end="61:42">-</operator><literal type="number" pos:start="61:43" pos:end="61:43">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:23">gce_disposal</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <operator pos:start="63:27" pos:end="63:27">(</operator><name pos:start="63:28" pos:end="63:36">gce_flags</name> <operator pos:start="63:38" pos:end="63:39">&gt;&gt;</operator> <literal type="number" pos:start="63:41" pos:end="63:41">2</literal><operator pos:start="63:42" pos:end="63:42">)</operator> <operator pos:start="63:44" pos:end="63:44">&amp;</operator> <literal type="number" pos:start="63:46" pos:end="63:48">0x7</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="71:60"><expr pos:start="67:9" pos:end="71:59"><call pos:start="67:9" pos:end="71:59"><name pos:start="67:9" pos:end="67:15">av_dlog</name><argument_list pos:start="67:16" pos:end="71:59">(<argument pos:start="67:17" pos:end="67:24"><expr pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:24">avctx</name></name></expr></argument>, <argument pos:start="67:27" pos:end="67:64"><expr pos:start="67:27" pos:end="67:64"><literal type="string" pos:start="67:27" pos:end="67:64">"gce_flags=%x tcolor=%d disposal=%d\n"</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:24"><expr pos:start="69:16" pos:end="69:24"><name pos:start="69:16" pos:end="69:24">gce_flags</name></expr></argument>,

               <argument pos:start="71:16" pos:end="71:41"><expr pos:start="71:16" pos:end="71:41"><name pos:start="71:16" pos:end="71:41"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:41">transparent_color_index</name></name></expr></argument>, <argument pos:start="71:44" pos:end="71:58"><expr pos:start="71:44" pos:end="71:58"><name pos:start="71:44" pos:end="71:58"><name pos:start="71:44" pos:end="71:44">s</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:58">gce_disposal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:32">(<expr pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:27">gce_disposal</name></name> <operator pos:start="75:29" pos:end="75:29">&gt;</operator> <literal type="number" pos:start="75:31" pos:end="75:31">3</literal></expr>)</condition> <block pos:start="75:34" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:106">

            <expr_stmt pos:start="77:13" pos:end="77:48"><expr pos:start="77:13" pos:end="77:47"><name pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:27">gce_disposal</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:47">GCE_DISPOSAL_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:106"><expr pos:start="79:13" pos:end="79:105"><call pos:start="79:13" pos:end="79:105"><name pos:start="79:13" pos:end="79:19">av_dlog</name><argument_list pos:start="79:20" pos:end="79:105">(<argument pos:start="79:21" pos:end="79:28"><expr pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:21">s</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:28">avctx</name></name></expr></argument>, <argument pos:start="79:31" pos:end="79:95"><expr pos:start="79:31" pos:end="79:95"><literal type="string" pos:start="79:31" pos:end="79:95">"invalid value in gce_disposal (%d). Using default value of 0.\n"</literal></expr></argument>, <argument pos:start="79:98" pos:end="79:104"><expr pos:start="79:98" pos:end="79:104"><name pos:start="79:98" pos:end="79:104">ext_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:15">ext_len</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:47"><name pos:start="85:19" pos:end="85:39">bytestream2_get_byteu</name><argument_list pos:start="85:40" pos:end="85:47">(<argument pos:start="85:41" pos:end="85:46"><expr pos:start="85:41" pos:end="85:46"><operator pos:start="85:41" pos:end="85:41">&amp;</operator><name pos:start="85:42" pos:end="85:46"><name pos:start="85:42" pos:end="85:42">s</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="93:5" pos:end="93:52">/* NOTE: many extension blocks can come after */</comment>

 <label pos:start="95:2" pos:end="95:13"><name pos:start="95:2" pos:end="95:12">discard_ext</name>:</label>

    <while pos:start="97:5" pos:end="115:5">while <condition pos:start="97:11" pos:end="97:24">(<expr pos:start="97:12" pos:end="97:23"><name pos:start="97:12" pos:end="97:18">ext_len</name> <operator pos:start="97:20" pos:end="97:21">!=</operator> <literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>)</condition> <block pos:start="97:26" pos:end="115:5">{<block_content pos:start="101:9" pos:end="113:52">

        <comment type="block" pos:start="99:9" pos:end="99:82">/* There must be at least ext_len bytes and 1 for next block size byte. */</comment>

        <if_stmt pos:start="101:9" pos:end="103:39"><if pos:start="101:9" pos:end="103:39">if <condition pos:start="101:12" pos:end="101:61">(<expr pos:start="101:13" pos:end="101:60"><call pos:start="101:13" pos:end="101:46"><name pos:start="101:13" pos:end="101:38">bytestream2_get_bytes_left</name><argument_list pos:start="101:39" pos:end="101:46">(<argument pos:start="101:40" pos:end="101:45"><expr pos:start="101:40" pos:end="101:45"><operator pos:start="101:40" pos:end="101:40">&amp;</operator><name pos:start="101:41" pos:end="101:45"><name pos:start="101:41" pos:end="101:41">s</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="101:48" pos:end="101:48">&lt;</operator> <name pos:start="101:50" pos:end="101:56">ext_len</name> <operator pos:start="101:58" pos:end="101:58">+</operator> <literal type="number" pos:start="101:60" pos:end="101:60">1</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:39"><block_content pos:start="103:13" pos:end="103:39">

            <return pos:start="103:13" pos:end="103:39">return <expr pos:start="103:20" pos:end="103:38"><name pos:start="103:20" pos:end="103:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:43"><expr pos:start="107:9" pos:end="107:42"><call pos:start="107:9" pos:end="107:42"><name pos:start="107:9" pos:end="107:25">bytestream2_skipu</name><argument_list pos:start="107:26" pos:end="107:42">(<argument pos:start="107:27" pos:end="107:32"><expr pos:start="107:27" pos:end="107:32"><operator pos:start="107:27" pos:end="107:27">&amp;</operator><name pos:start="107:28" pos:end="107:32"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:32">gb</name></name></expr></argument>, <argument pos:start="107:35" pos:end="107:41"><expr pos:start="107:35" pos:end="107:41"><name pos:start="107:35" pos:end="107:41">ext_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:48"><expr pos:start="109:9" pos:end="109:47"><name pos:start="109:9" pos:end="109:15">ext_len</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:47"><name pos:start="109:19" pos:end="109:39">bytestream2_get_byteu</name><argument_list pos:start="109:40" pos:end="109:47">(<argument pos:start="109:41" pos:end="109:46"><expr pos:start="109:41" pos:end="109:46"><operator pos:start="109:41" pos:end="109:41">&amp;</operator><name pos:start="109:42" pos:end="109:46"><name pos:start="109:42" pos:end="109:42">s</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:52"><expr pos:start="113:9" pos:end="113:51"><call pos:start="113:9" pos:end="113:51"><name pos:start="113:9" pos:end="113:15">av_dlog</name><argument_list pos:start="113:16" pos:end="113:51">(<argument pos:start="113:17" pos:end="113:24"><expr pos:start="113:17" pos:end="113:24"><name pos:start="113:17" pos:end="113:24"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:24">avctx</name></name></expr></argument>, <argument pos:start="113:27" pos:end="113:41"><expr pos:start="113:27" pos:end="113:41"><literal type="string" pos:start="113:27" pos:end="113:41">"ext_len1=%d\n"</literal></expr></argument>, <argument pos:start="113:44" pos:end="113:50"><expr pos:start="113:44" pos:end="113:50"><name pos:start="113:44" pos:end="113:50">ext_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
