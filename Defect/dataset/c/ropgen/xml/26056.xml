<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26056.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">qcow2_cache_table_release</name><parameter_list pos:start="1:38" pos:end="3:60">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:70">Qcow2Cache</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:73">c</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:43"><decl pos:start="3:39" pos:end="3:43"><type pos:start="3:39" pos:end="3:43"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:43">i</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:59"><decl pos:start="3:46" pos:end="3:59"><type pos:start="3:46" pos:end="3:59"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:59">num_tables</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="11:5" pos:end="30:0">

<comment type="block" pos:start="7:1" pos:end="7:71">/* Using MADV_DONTNEED to discard memory is a Linux-specific feature */</comment>

<cpp:ifdef pos:start="9:1" pos:end="9:19">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:19">CONFIG_LINUX</name></cpp:ifdef>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">BDRVQcow2State</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name> <init pos:start="11:23" pos:end="11:34">= <expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:26">bs</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:11">t</name> <init pos:start="13:13" pos:end="13:50">= <expr pos:start="13:15" pos:end="13:50"><call pos:start="13:15" pos:end="13:50"><name pos:start="13:15" pos:end="13:40">qcow2_cache_get_table_addr</name><argument_list pos:start="13:41" pos:end="13:50">(<argument pos:start="13:42" pos:end="13:43"><expr pos:start="13:42" pos:end="13:43"><name pos:start="13:42" pos:end="13:43">bs</name></expr></argument>, <argument pos:start="13:46" pos:end="13:46"><expr pos:start="13:46" pos:end="13:46"><name pos:start="13:46" pos:end="13:46">c</name></expr></argument>, <argument pos:start="13:49" pos:end="13:49"><expr pos:start="13:49" pos:end="13:49"><name pos:start="13:49" pos:end="13:49">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">align</name> <init pos:start="15:15" pos:end="15:29">= <expr pos:start="15:17" pos:end="15:29"><call pos:start="15:17" pos:end="15:29"><name pos:start="15:17" pos:end="15:27">getpagesize</name><argument_list pos:start="15:28" pos:end="15:29">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:60"><decl pos:start="17:5" pos:end="17:59"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:19">mem_size</name> <init pos:start="17:21" pos:end="17:59">= <expr pos:start="17:23" pos:end="17:59"><operator pos:start="17:23" pos:end="17:23">(</operator><name pos:start="17:24" pos:end="17:29">size_t</name><operator pos:start="17:30" pos:end="17:30">)</operator> <name pos:start="17:32" pos:end="17:46"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:46">cluster_size</name></name> <operator pos:start="17:48" pos:end="17:48">*</operator> <name pos:start="17:50" pos:end="17:59">num_tables</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:72"><decl pos:start="19:5" pos:end="19:71"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">size_t</name></type> <name pos:start="19:12" pos:end="19:17">offset</name> <init pos:start="19:19" pos:end="19:71">= <expr pos:start="19:21" pos:end="19:71"><call pos:start="19:21" pos:end="19:55"><name pos:start="19:21" pos:end="19:33">QEMU_ALIGN_UP</name><argument_list pos:start="19:34" pos:end="19:55">(<argument pos:start="19:35" pos:end="19:47"><expr pos:start="19:35" pos:end="19:47"><operator pos:start="19:35" pos:end="19:35">(</operator><name pos:start="19:36" pos:end="19:44">uintptr_t</name><operator pos:start="19:45" pos:end="19:45">)</operator> <name pos:start="19:47" pos:end="19:47">t</name></expr></argument>, <argument pos:start="19:50" pos:end="19:54"><expr pos:start="19:50" pos:end="19:54"><name pos:start="19:50" pos:end="19:54">align</name></expr></argument>)</argument_list></call> <operator pos:start="19:57" pos:end="19:57">-</operator> <operator pos:start="19:59" pos:end="19:59">(</operator><name pos:start="19:60" pos:end="19:68">uintptr_t</name><operator pos:start="19:69" pos:end="19:69">)</operator> <name pos:start="19:71" pos:end="19:71">t</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:62"><decl pos:start="21:5" pos:end="21:61"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">size_t</name></type> <name pos:start="21:12" pos:end="21:17">length</name> <init pos:start="21:19" pos:end="21:61">= <expr pos:start="21:21" pos:end="21:61"><call pos:start="21:21" pos:end="21:61"><name pos:start="21:21" pos:end="21:35">QEMU_ALIGN_DOWN</name><argument_list pos:start="21:36" pos:end="21:61">(<argument pos:start="21:37" pos:end="21:53"><expr pos:start="21:37" pos:end="21:53"><name pos:start="21:37" pos:end="21:44">mem_size</name> <operator pos:start="21:46" pos:end="21:46">-</operator> <name pos:start="21:48" pos:end="21:53">offset</name></expr></argument>, <argument pos:start="21:56" pos:end="21:60"><expr pos:start="21:56" pos:end="21:60"><name pos:start="21:56" pos:end="21:60">align</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="23:5" pos:end="30:0"><if pos:start="23:5" pos:end="30:0">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:14">length</name> <operator pos:start="23:16" pos:end="23:16">&gt;</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>)</condition> <block pos:start="23:21" pos:end="30:0">{<block_content pos:start="25:9" pos:end="25:63">

        <expr_stmt pos:start="25:9" pos:end="25:63"><expr pos:start="25:9" pos:end="25:62"><call pos:start="25:9" pos:end="25:62"><name pos:start="25:9" pos:end="25:15">madvise</name><argument_list pos:start="25:16" pos:end="25:62">(<argument pos:start="25:17" pos:end="25:38"><expr pos:start="25:17" pos:end="25:38"><operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:24">uint8_t</name> <operator pos:start="25:26" pos:end="25:26">*</operator><operator pos:start="25:27" pos:end="25:27">)</operator> <name pos:start="25:29" pos:end="25:29">t</name> <operator pos:start="25:31" pos:end="25:31">+</operator> <name pos:start="25:33" pos:end="25:38">offset</name></expr></argument>, <argument pos:start="25:41" pos:end="25:46"><expr pos:start="25:41" pos:end="25:46"><name pos:start="25:41" pos:end="25:46">length</name></expr></argument>, <argument pos:start="25:49" pos:end="25:61"><expr pos:start="25:49" pos:end="25:61"><name pos:start="25:49" pos:end="25:61">MADV_DONTNEED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
