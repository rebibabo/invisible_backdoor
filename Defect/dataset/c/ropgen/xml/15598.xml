<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15598.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">matroska_parse_block</name><parameter_list pos:start="1:32" pos:end="9:77">(<parameter pos:start="1:33" pos:end="1:62"><decl pos:start="1:33" pos:end="1:62"><type pos:start="1:33" pos:end="1:62"><name pos:start="1:33" pos:end="1:52">MatroskaDemuxContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">matroska</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:40"><decl pos:start="3:33" pos:end="3:40"><type pos:start="3:33" pos:end="3:40"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:40">size</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:53"><decl pos:start="3:43" pos:end="3:53"><type pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:49">int64_t</name></type> <name pos:start="3:51" pos:end="3:53">pos</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:76"><decl pos:start="3:56" pos:end="3:76"><type pos:start="3:56" pos:end="3:76"><name pos:start="3:56" pos:end="3:63">uint64_t</name></type> <name pos:start="3:65" pos:end="3:76">cluster_time</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:55"><decl pos:start="5:33" pos:end="5:55"><type pos:start="5:33" pos:end="5:55"><name pos:start="5:33" pos:end="5:40">uint64_t</name></type> <name pos:start="5:42" pos:end="5:55">block_duration</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:72"><decl pos:start="5:58" pos:end="5:72"><type pos:start="5:58" pos:end="5:72"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:72">is_keyframe</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:51"><decl pos:start="7:33" pos:end="7:51"><type pos:start="7:33" pos:end="7:51"><name pos:start="7:33" pos:end="7:39">uint8_t</name> <modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:51">additional</name></decl></parameter>, <parameter pos:start="7:54" pos:end="7:75"><decl pos:start="7:54" pos:end="7:75"><type pos:start="7:54" pos:end="7:75"><name pos:start="7:54" pos:end="7:61">uint64_t</name></type> <name pos:start="7:63" pos:end="7:75">additional_id</name></decl></parameter>, <parameter pos:start="7:78" pos:end="7:96"><decl pos:start="7:78" pos:end="7:96"><type pos:start="7:78" pos:end="7:96"><name pos:start="7:78" pos:end="7:80">int</name></type> <name pos:start="7:82" pos:end="7:96">additional_size</name></decl></parameter>,

                                <parameter pos:start="9:33" pos:end="9:51"><decl pos:start="9:33" pos:end="9:51"><type pos:start="9:33" pos:end="9:51"><name pos:start="9:33" pos:end="9:39">int64_t</name></type> <name pos:start="9:41" pos:end="9:51">cluster_pos</name></decl></parameter>, <parameter pos:start="9:54" pos:end="9:76"><decl pos:start="9:54" pos:end="9:76"><type pos:start="9:54" pos:end="9:76"><name pos:start="9:54" pos:end="9:60">int64_t</name></type> <name pos:start="9:62" pos:end="9:76">discard_padding</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="263:1">{<block_content pos:start="13:5" pos:end="261:15">

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:21">timecode</name> <init pos:start="13:23" pos:end="13:38">= <expr pos:start="13:25" pos:end="13:38"><name pos:start="13:25" pos:end="13:38">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">MatroskaTrack</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:24">track</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">res</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">AVStream</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int16_t</name></type> <name pos:start="21:13" pos:end="21:22">block_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:30"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">uint32_t</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:23">lace_size</name> <init pos:start="23:25" pos:end="23:30">= <expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">n</name></decl>, <decl pos:start="25:12" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:16">flags</name></decl>, <decl pos:start="25:19" pos:end="25:27"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:19" pos:end="25:23">laces</name> <init pos:start="25:25" pos:end="25:27">= <expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint64_t</name></type> <name pos:start="27:14" pos:end="27:16">num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:35"><decl pos:start="29:5" pos:end="29:34"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:30">trust_default_duration</name> <init pos:start="29:32" pos:end="29:34">= <expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:68">(<expr pos:start="33:9" pos:end="33:67"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:10">n</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:62"><name pos:start="33:14" pos:end="33:34">matroska_ebmlnum_uint</name><argument_list pos:start="33:35" pos:end="33:62">(<argument pos:start="33:36" pos:end="33:43"><expr pos:start="33:36" pos:end="33:43"><name pos:start="33:36" pos:end="33:43">matroska</name></expr></argument>, <argument pos:start="33:46" pos:end="33:49"><expr pos:start="33:46" pos:end="33:49"><name pos:start="33:46" pos:end="33:49">data</name></expr></argument>, <argument pos:start="33:52" pos:end="33:55"><expr pos:start="33:52" pos:end="33:55"><name pos:start="33:52" pos:end="33:55">size</name></expr></argument>, <argument pos:start="33:58" pos:end="33:61"><expr pos:start="33:58" pos:end="33:61"><operator pos:start="33:58" pos:end="33:58">&amp;</operator><name pos:start="33:59" pos:end="33:61">num</name></expr></argument>)</argument_list></call><operator pos:start="33:63" pos:end="33:63">)</operator> <operator pos:start="33:65" pos:end="33:65">&lt;</operator> <literal type="number" pos:start="33:67" pos:end="33:67">0</literal></expr>)</condition> <block pos:start="33:70" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><call pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:70">(<argument pos:start="35:16" pos:end="35:28"><expr pos:start="35:16" pos:end="35:28"><name pos:start="35:16" pos:end="35:28"><name pos:start="35:16" pos:end="35:23">matroska</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:28">ctx</name></name></expr></argument>, <argument pos:start="35:31" pos:end="35:42"><expr pos:start="35:31" pos:end="35:42"><name pos:start="35:31" pos:end="35:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:45" pos:end="35:69"><expr pos:start="35:45" pos:end="35:69"><literal type="string" pos:start="35:45" pos:end="35:69">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">n</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:14"><expr pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:8">data</name> <operator pos:start="41:10" pos:end="41:11">+=</operator> <name pos:start="41:13" pos:end="41:13">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:8">size</name> <operator pos:start="43:10" pos:end="43:11">-=</operator> <name pos:start="43:13" pos:end="43:13">n</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:9">track</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:53"><name pos:start="47:13" pos:end="47:38">matroska_find_track_by_num</name><argument_list pos:start="47:39" pos:end="47:53">(<argument pos:start="47:40" pos:end="47:47"><expr pos:start="47:40" pos:end="47:47"><name pos:start="47:40" pos:end="47:47">matroska</name></expr></argument>, <argument pos:start="47:50" pos:end="47:52"><expr pos:start="47:50" pos:end="47:52"><name pos:start="47:50" pos:end="47:52">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="59:17"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:33">(<expr pos:start="49:9" pos:end="49:32"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:14">track</name> <operator pos:start="49:16" pos:end="49:17">||</operator> <operator pos:start="49:19" pos:end="49:19">!</operator><name pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:24">track</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:32">stream</name></name></expr>)</condition> <block pos:start="49:35" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:35">

        <expr_stmt pos:start="51:9" pos:end="53:67"><expr pos:start="51:9" pos:end="53:66"><call pos:start="51:9" pos:end="53:66"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="53:66">(<argument pos:start="51:16" pos:end="51:28"><expr pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:23">matroska</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:28">ctx</name></name></expr></argument>, <argument pos:start="51:31" pos:end="51:41"><expr pos:start="51:31" pos:end="51:41"><name pos:start="51:31" pos:end="51:41">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="53:16" pos:end="53:54"><expr pos:start="53:16" pos:end="53:54"><literal type="string" pos:start="53:16" pos:end="53:33">"Invalid stream %"</literal><name pos:start="53:34" pos:end="53:39">PRIu64</name><literal type="string" pos:start="53:40" pos:end="53:54">" or size %u\n"</literal></expr></argument>, <argument pos:start="53:57" pos:end="53:59"><expr pos:start="53:57" pos:end="53:59"><name pos:start="53:57" pos:end="53:59">num</name></expr></argument>, <argument pos:start="53:62" pos:end="53:65"><expr pos:start="53:62" pos:end="53:65"><name pos:start="53:62" pos:end="53:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="59:17">else if <condition pos:start="57:15" pos:end="57:25">(<expr pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:19">size</name> <operator pos:start="57:21" pos:end="57:22">&lt;=</operator> <literal type="number" pos:start="57:24" pos:end="57:24">3</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:17"><block_content pos:start="59:9" pos:end="59:17">

        <return pos:start="59:9" pos:end="59:17">return <expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:23"><expr pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:6">st</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <name pos:start="61:10" pos:end="61:22"><name pos:start="61:10" pos:end="61:14">track</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:22">stream</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:19"><if pos:start="63:5" pos:end="65:19">if <condition pos:start="63:8" pos:end="63:37">(<expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:19">discard</name></name> <operator pos:start="63:21" pos:end="63:22">&gt;=</operator> <name pos:start="63:24" pos:end="63:36">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:19"><block_content pos:start="65:9" pos:end="65:19">

        <return pos:start="65:9" pos:end="65:19">return <expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:49"><expr pos:start="67:5" pos:end="67:48"><call pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:14">av_assert1</name><argument_list pos:start="67:15" pos:end="67:48">(<argument pos:start="67:16" pos:end="67:47"><expr pos:start="67:16" pos:end="67:47"><name pos:start="67:16" pos:end="67:29">block_duration</name> <operator pos:start="67:31" pos:end="67:32">!=</operator> <name pos:start="67:34" pos:end="67:47">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:14">block_time</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:47"><name pos:start="71:18" pos:end="71:28">sign_extend</name><argument_list pos:start="71:29" pos:end="71:47">(<argument pos:start="71:30" pos:end="71:42"><expr pos:start="71:30" pos:end="71:42"><call pos:start="71:30" pos:end="71:42"><name pos:start="71:30" pos:end="71:36">AV_RB16</name><argument_list pos:start="71:37" pos:end="71:42">(<argument pos:start="71:38" pos:end="71:41"><expr pos:start="71:38" pos:end="71:41"><name pos:start="71:38" pos:end="71:41">data</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:45" pos:end="71:46"><expr pos:start="71:45" pos:end="71:46"><literal type="number" pos:start="71:45" pos:end="71:46">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:8">data</name>      <operator pos:start="73:15" pos:end="73:16">+=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:9">flags</name>      <operator pos:start="75:16" pos:end="75:16">=</operator> <operator pos:start="75:18" pos:end="75:18">*</operator><name pos:start="75:19" pos:end="75:22">data</name><operator pos:start="75:23" pos:end="75:24">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:19"><expr pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:8">size</name>      <operator pos:start="77:15" pos:end="77:16">-=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:57"><if pos:start="79:5" pos:end="81:57">if <condition pos:start="79:8" pos:end="79:26">(<expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:19">is_keyframe</name> <operator pos:start="79:21" pos:end="79:22">==</operator> <operator pos:start="79:24" pos:end="79:24">-</operator><literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:57"><block_content pos:start="81:9" pos:end="81:57">

        <expr_stmt pos:start="81:9" pos:end="81:57"><expr pos:start="81:9" pos:end="81:56"><name pos:start="81:9" pos:end="81:19">is_keyframe</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <ternary pos:start="81:23" pos:end="81:56"><condition pos:start="81:23" pos:end="81:36"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:27">flags</name> <operator pos:start="81:29" pos:end="81:29">&amp;</operator> <literal type="number" pos:start="81:31" pos:end="81:34">0x80</literal></expr> ?</condition><then pos:start="81:38" pos:end="81:52"> <expr pos:start="81:38" pos:end="81:52"><name pos:start="81:38" pos:end="81:52">AV_PKT_FLAG_KEY</name></expr> </then><else pos:start="81:54" pos:end="81:56">: <expr pos:start="81:56" pos:end="81:56"><literal type="number" pos:start="81:56" pos:end="81:56">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="103:5"><if pos:start="85:5" pos:end="103:5">if <condition pos:start="85:8" pos:end="87:57">(<expr pos:start="85:9" pos:end="87:56"><name pos:start="85:9" pos:end="85:20">cluster_time</name> <operator pos:start="85:22" pos:end="85:23">!=</operator> <operator pos:start="85:25" pos:end="85:25">(</operator><name pos:start="85:26" pos:end="85:33">uint64_t</name><operator pos:start="85:34" pos:end="85:34">)</operator> <operator pos:start="85:36" pos:end="85:36">-</operator><literal type="number" pos:start="85:37" pos:end="85:37">1</literal> <operator pos:start="85:39" pos:end="85:40">&amp;&amp;</operator>

        <operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:19">block_time</name> <operator pos:start="87:21" pos:end="87:22">&gt;=</operator> <literal type="number" pos:start="87:24" pos:end="87:24">0</literal> <operator pos:start="87:26" pos:end="87:27">||</operator> <name pos:start="87:29" pos:end="87:40">cluster_time</name> <operator pos:start="87:42" pos:end="87:43">&gt;=</operator> <operator pos:start="87:45" pos:end="87:45">-</operator><name pos:start="87:46" pos:end="87:55">block_time</name><operator pos:start="87:56" pos:end="87:56">)</operator></expr>)</condition> <block pos:start="87:59" pos:end="103:5">{<block_content pos:start="89:9" pos:end="101:49">

        <expr_stmt pos:start="89:9" pos:end="89:78"><expr pos:start="89:9" pos:end="89:77"><name pos:start="89:9" pos:end="89:16">timecode</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:31">cluster_time</name> <operator pos:start="89:33" pos:end="89:33">+</operator> <name pos:start="89:35" pos:end="89:44">block_time</name> <operator pos:start="89:46" pos:end="89:46">-</operator> <name pos:start="89:48" pos:end="89:77"><name pos:start="89:48" pos:end="89:52">track</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:77">codec_delay_in_track_tb</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="95:28"><if pos:start="91:9" pos:end="95:28">if <condition pos:start="91:12" pos:end="93:43">(<expr pos:start="91:13" pos:end="93:42"><name pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:17">track</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:23">type</name></name> <operator pos:start="91:25" pos:end="91:26">==</operator> <name pos:start="91:28" pos:end="91:55">MATROSKA_TRACK_TYPE_SUBTITLE</name> <operator pos:start="91:57" pos:end="91:58">&amp;&amp;</operator>

            <name pos:start="93:13" pos:end="93:20">timecode</name> <operator pos:start="93:22" pos:end="93:22">&lt;</operator> <name pos:start="93:24" pos:end="93:42"><name pos:start="93:24" pos:end="93:28">track</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:42">end_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:28"><block_content pos:start="95:13" pos:end="95:28">

            <expr_stmt pos:start="95:13" pos:end="95:28"><expr pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:23">is_keyframe</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <literal type="number" pos:start="95:27" pos:end="95:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="95:31" pos:end="95:75">/* overlapping subtitles are not key frame */</comment>

        <if_stmt pos:start="97:9" pos:end="101:49"><if pos:start="97:9" pos:end="101:49">if <condition pos:start="97:12" pos:end="97:24">(<expr pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:23">is_keyframe</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="101:49"><block_content pos:start="99:13" pos:end="101:49">

            <expr_stmt pos:start="99:13" pos:end="101:49"><expr pos:start="99:13" pos:end="101:48"><call pos:start="99:13" pos:end="101:48"><name pos:start="99:13" pos:end="99:30">av_add_index_entry</name><argument_list pos:start="99:31" pos:end="101:48">(<argument pos:start="99:32" pos:end="99:33"><expr pos:start="99:32" pos:end="99:33"><name pos:start="99:32" pos:end="99:33">st</name></expr></argument>, <argument pos:start="99:36" pos:end="99:46"><expr pos:start="99:36" pos:end="99:46"><name pos:start="99:36" pos:end="99:46">cluster_pos</name></expr></argument>, <argument pos:start="99:49" pos:end="99:56"><expr pos:start="99:49" pos:end="99:56"><name pos:start="99:49" pos:end="99:56">timecode</name></expr></argument>, <argument pos:start="99:59" pos:end="99:59"><expr pos:start="99:59" pos:end="99:59"><literal type="number" pos:start="99:59" pos:end="99:59">0</literal></expr></argument>, <argument pos:start="99:62" pos:end="99:62"><expr pos:start="99:62" pos:end="99:62"><literal type="number" pos:start="99:62" pos:end="99:62">0</literal></expr></argument>,

                               <argument pos:start="101:32" pos:end="101:47"><expr pos:start="101:32" pos:end="101:47"><name pos:start="101:32" pos:end="101:47">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="127:5"><if pos:start="107:5" pos:end="127:5">if <condition pos:start="107:8" pos:end="109:52">(<expr pos:start="107:9" pos:end="109:51"><name pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:16">matroska</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:34">skip_to_keyframe</name></name> <operator pos:start="107:36" pos:end="107:37">&amp;&amp;</operator>

        <name pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:13">track</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:19">type</name></name> <operator pos:start="109:21" pos:end="109:22">!=</operator> <name pos:start="109:24" pos:end="109:51">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="109:54" pos:end="127:5">{<block_content pos:start="111:9" pos:end="125:9">

        <if_stmt pos:start="111:9" pos:end="113:23"><if pos:start="111:9" pos:end="113:23">if <condition pos:start="111:12" pos:end="111:50">(<expr pos:start="111:13" pos:end="111:49"><name pos:start="111:13" pos:end="111:20">timecode</name> <operator pos:start="111:22" pos:end="111:22">&lt;</operator> <name pos:start="111:24" pos:end="111:49"><name pos:start="111:24" pos:end="111:31">matroska</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:49">skip_to_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:23"><block_content pos:start="113:13" pos:end="113:23">

            <return pos:start="113:13" pos:end="113:23">return <expr pos:start="113:20" pos:end="113:22"><name pos:start="113:20" pos:end="113:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="125:9"><if pos:start="115:9" pos:end="117:43">if <condition pos:start="115:12" pos:end="115:24">(<expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:23">is_keyframe</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:43"><block_content pos:start="117:13" pos:end="117:43">

            <expr_stmt pos:start="117:13" pos:end="117:43"><expr pos:start="117:13" pos:end="117:42"><name pos:start="117:13" pos:end="117:38"><name pos:start="117:13" pos:end="117:20">matroska</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:38">skip_to_keyframe</name></name> <operator pos:start="117:40" pos:end="117:40">=</operator> <literal type="number" pos:start="117:42" pos:end="117:42">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="119:9" pos:end="125:9">else if <condition pos:start="119:17" pos:end="119:39">(<expr pos:start="119:18" pos:end="119:38"><operator pos:start="119:18" pos:end="119:18">!</operator><name pos:start="119:19" pos:end="119:38"><name pos:start="119:19" pos:end="119:20">st</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:38">skip_to_keyframe</name></name></expr>)</condition> <block pos:start="119:41" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:43">

            <expr_stmt pos:start="121:13" pos:end="121:101"><expr pos:start="121:13" pos:end="121:100"><call pos:start="121:13" pos:end="121:100"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="121:100">(<argument pos:start="121:20" pos:end="121:32"><expr pos:start="121:20" pos:end="121:32"><name pos:start="121:20" pos:end="121:32"><name pos:start="121:20" pos:end="121:27">matroska</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:32">ctx</name></name></expr></argument>, <argument pos:start="121:35" pos:end="121:46"><expr pos:start="121:35" pos:end="121:46"><name pos:start="121:35" pos:end="121:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:49" pos:end="121:99"><expr pos:start="121:49" pos:end="121:99"><literal type="string" pos:start="121:49" pos:end="121:99">"File is broken, keyframes not correctly marked!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:43"><expr pos:start="123:13" pos:end="123:42"><name pos:start="123:13" pos:end="123:38"><name pos:start="123:13" pos:end="123:20">matroska</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:38">skip_to_keyframe</name></name> <operator pos:start="123:40" pos:end="123:40">=</operator> <literal type="number" pos:start="123:42" pos:end="123:42">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="133:51"><expr pos:start="131:5" pos:end="133:50"><name pos:start="131:5" pos:end="131:7">res</name> <operator pos:start="131:9" pos:end="131:9">=</operator> <call pos:start="131:11" pos:end="133:50"><name pos:start="131:11" pos:end="131:30">matroska_parse_laces</name><argument_list pos:start="131:31" pos:end="133:50">(<argument pos:start="131:32" pos:end="131:39"><expr pos:start="131:32" pos:end="131:39"><name pos:start="131:32" pos:end="131:39">matroska</name></expr></argument>, <argument pos:start="131:42" pos:end="131:46"><expr pos:start="131:42" pos:end="131:46"><operator pos:start="131:42" pos:end="131:42">&amp;</operator><name pos:start="131:43" pos:end="131:46">data</name></expr></argument>, <argument pos:start="131:49" pos:end="131:53"><expr pos:start="131:49" pos:end="131:53"><operator pos:start="131:49" pos:end="131:49">&amp;</operator><name pos:start="131:50" pos:end="131:53">size</name></expr></argument>, <argument pos:start="131:56" pos:end="131:74"><expr pos:start="131:56" pos:end="131:74"><operator pos:start="131:56" pos:end="131:56">(</operator><name pos:start="131:57" pos:end="131:61">flags</name> <operator pos:start="131:63" pos:end="131:63">&amp;</operator> <literal type="number" pos:start="131:65" pos:end="131:68">0x06</literal><operator pos:start="131:69" pos:end="131:69">)</operator> <operator pos:start="131:71" pos:end="131:72">&gt;&gt;</operator> <literal type="number" pos:start="131:74" pos:end="131:74">1</literal></expr></argument>,

                               <argument pos:start="133:32" pos:end="133:41"><expr pos:start="133:32" pos:end="133:41"><operator pos:start="133:32" pos:end="133:32">&amp;</operator><name pos:start="133:33" pos:end="133:41">lace_size</name></expr></argument>, <argument pos:start="133:44" pos:end="133:49"><expr pos:start="133:44" pos:end="133:49"><operator pos:start="133:44" pos:end="133:44">&amp;</operator><name pos:start="133:45" pos:end="133:49">laces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="137:5" pos:end="139:17"><if pos:start="137:5" pos:end="139:17">if <condition pos:start="137:8" pos:end="137:12">(<expr pos:start="137:9" pos:end="137:11"><name pos:start="137:9" pos:end="137:11">res</name></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:17"><block_content pos:start="139:9" pos:end="139:17">

        <goto pos:start="139:9" pos:end="139:17">goto <name pos:start="139:14" pos:end="139:16">end</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="155:5"><if pos:start="143:5" pos:end="155:5">if <condition pos:start="143:8" pos:end="143:40">(<expr pos:start="143:9" pos:end="143:39"><name pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:13">track</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">audio</name><operator pos:start="143:21" pos:end="143:21">.</operator><name pos:start="143:22" pos:end="143:31">samplerate</name></name> <operator pos:start="143:33" pos:end="143:34">==</operator> <literal type="number" pos:start="143:36" pos:end="143:39">8000</literal></expr>)</condition> <block pos:start="143:42" pos:end="155:5">{<block_content pos:start="147:9" pos:end="153:9">

        <comment type="line" pos:start="145:9" pos:end="145:64">// If this is needed for more codecs, then add them here</comment>

        <if_stmt pos:start="147:9" pos:end="153:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:54">(<expr pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:34"><name pos:start="147:13" pos:end="147:14">st</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:24">codecpar</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:34">codec_id</name></name> <operator pos:start="147:36" pos:end="147:37">==</operator> <name pos:start="147:39" pos:end="147:53">AV_CODEC_ID_AC3</name></expr>)</condition> <block pos:start="147:56" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:43">

            <if_stmt pos:start="149:13" pos:end="151:43"><if pos:start="149:13" pos:end="151:43">if <condition pos:start="149:16" pos:end="149:98">(<expr pos:start="149:17" pos:end="149:97"><name pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:21">track</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:28">audio</name><operator pos:start="149:29" pos:end="149:29">.</operator><name pos:start="149:30" pos:end="149:39">samplerate</name></name> <operator pos:start="149:41" pos:end="149:42">!=</operator> <name pos:start="149:44" pos:end="149:68"><name pos:start="149:44" pos:end="149:45">st</name><operator pos:start="149:46" pos:end="149:47">-&gt;</operator><name pos:start="149:48" pos:end="149:55">codecpar</name><operator pos:start="149:56" pos:end="149:57">-&gt;</operator><name pos:start="149:58" pos:end="149:68">sample_rate</name></name> <operator pos:start="149:70" pos:end="149:71">||</operator> <operator pos:start="149:73" pos:end="149:73">!</operator><name pos:start="149:74" pos:end="149:97"><name pos:start="149:74" pos:end="149:75">st</name><operator pos:start="149:76" pos:end="149:77">-&gt;</operator><name pos:start="149:78" pos:end="149:85">codecpar</name><operator pos:start="149:86" pos:end="149:87">-&gt;</operator><name pos:start="149:88" pos:end="149:97">frame_size</name></name></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:43"><block_content pos:start="151:17" pos:end="151:43">

                <expr_stmt pos:start="151:17" pos:end="151:43"><expr pos:start="151:17" pos:end="151:42"><name pos:start="151:17" pos:end="151:38">trust_default_duration</name> <operator pos:start="151:40" pos:end="151:40">=</operator> <literal type="number" pos:start="151:42" pos:end="151:42">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="161:80"><if pos:start="159:5" pos:end="161:80">if <condition pos:start="159:8" pos:end="159:50">(<expr pos:start="159:9" pos:end="159:49"><operator pos:start="159:9" pos:end="159:9">!</operator><name pos:start="159:10" pos:end="159:23">block_duration</name> <operator pos:start="159:25" pos:end="159:26">&amp;&amp;</operator> <name pos:start="159:28" pos:end="159:49">trust_default_duration</name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:80"><block_content pos:start="161:9" pos:end="161:80">

        <expr_stmt pos:start="161:9" pos:end="161:80"><expr pos:start="161:9" pos:end="161:79"><name pos:start="161:9" pos:end="161:22">block_duration</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <name pos:start="161:26" pos:end="161:48"><name pos:start="161:26" pos:end="161:30">track</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:48">default_duration</name></name> <operator pos:start="161:50" pos:end="161:50">*</operator> <name pos:start="161:52" pos:end="161:56">laces</name> <operator pos:start="161:58" pos:end="161:58">/</operator> <name pos:start="161:60" pos:end="161:79"><name pos:start="161:60" pos:end="161:67">matroska</name><operator pos:start="161:68" pos:end="161:69">-&gt;</operator><name pos:start="161:70" pos:end="161:79">time_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="165:5" pos:end="169:66"><if pos:start="165:5" pos:end="169:66">if <condition pos:start="165:8" pos:end="165:89">(<expr pos:start="165:9" pos:end="165:88"><name pos:start="165:9" pos:end="165:20">cluster_time</name> <operator pos:start="165:22" pos:end="165:23">!=</operator> <operator pos:start="165:25" pos:end="165:25">(</operator><name pos:start="165:26" pos:end="165:33">uint64_t</name><operator pos:start="165:34" pos:end="165:34">)</operator><operator pos:start="165:35" pos:end="165:35">-</operator><literal type="number" pos:start="165:36" pos:end="165:36">1</literal> <operator pos:start="165:38" pos:end="165:39">&amp;&amp;</operator> <operator pos:start="165:41" pos:end="165:41">(</operator><name pos:start="165:42" pos:end="165:51">block_time</name> <operator pos:start="165:53" pos:end="165:54">&gt;=</operator> <literal type="number" pos:start="165:56" pos:end="165:56">0</literal> <operator pos:start="165:58" pos:end="165:59">||</operator> <name pos:start="165:61" pos:end="165:72">cluster_time</name> <operator pos:start="165:74" pos:end="165:75">&gt;=</operator> <operator pos:start="165:77" pos:end="165:77">-</operator><name pos:start="165:78" pos:end="165:87">block_time</name><operator pos:start="165:88" pos:end="165:88">)</operator></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="169:66"><block_content pos:start="167:9" pos:end="169:66">

        <expr_stmt pos:start="167:9" pos:end="169:66"><expr pos:start="167:9" pos:end="169:65"><name pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:13">track</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:27">end_timecode</name></name> <operator pos:start="167:29" pos:end="167:29">=</operator>

            <call pos:start="169:13" pos:end="169:65"><name pos:start="169:13" pos:end="169:17">FFMAX</name><argument_list pos:start="169:18" pos:end="169:65">(<argument pos:start="169:19" pos:end="169:37"><expr pos:start="169:19" pos:end="169:37"><name pos:start="169:19" pos:end="169:37"><name pos:start="169:19" pos:end="169:23">track</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:37">end_timecode</name></name></expr></argument>, <argument pos:start="169:40" pos:end="169:64"><expr pos:start="169:40" pos:end="169:64"><name pos:start="169:40" pos:end="169:47">timecode</name> <operator pos:start="169:49" pos:end="169:49">+</operator> <name pos:start="169:51" pos:end="169:64">block_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="173:5" pos:end="253:5">for <control pos:start="173:9" pos:end="173:31">(<init pos:start="173:10" pos:end="173:15"><expr pos:start="173:10" pos:end="173:14"><name pos:start="173:10" pos:end="173:10">n</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>;</init> <condition pos:start="173:17" pos:end="173:26"><expr pos:start="173:17" pos:end="173:25"><name pos:start="173:17" pos:end="173:17">n</name> <operator pos:start="173:19" pos:end="173:19">&lt;</operator> <name pos:start="173:21" pos:end="173:25">laces</name></expr>;</condition> <incr pos:start="173:28" pos:end="173:30"><expr pos:start="173:28" pos:end="173:30"><name pos:start="173:28" pos:end="173:28">n</name><operator pos:start="173:29" pos:end="173:30">++</operator></expr></incr>)</control> <block pos:start="173:33" pos:end="253:5">{<block_content pos:start="175:9" pos:end="251:29">

        <decl_stmt pos:start="175:9" pos:end="175:88"><decl pos:start="175:9" pos:end="175:87"><type pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:15">int64_t</name></type> <name pos:start="175:17" pos:end="175:29">lace_duration</name> <init pos:start="175:31" pos:end="175:87">= <expr pos:start="175:33" pos:end="175:87"><name pos:start="175:33" pos:end="175:46">block_duration</name><operator pos:start="175:47" pos:end="175:47">*</operator><operator pos:start="175:48" pos:end="175:48">(</operator><name pos:start="175:49" pos:end="175:49">n</name><operator pos:start="175:50" pos:end="175:50">+</operator><literal type="number" pos:start="175:51" pos:end="175:51">1</literal><operator pos:start="175:52" pos:end="175:52">)</operator> <operator pos:start="175:54" pos:end="175:54">/</operator> <name pos:start="175:56" pos:end="175:60">laces</name> <operator pos:start="175:62" pos:end="175:62">-</operator> <name pos:start="175:64" pos:end="175:77">block_duration</name><operator pos:start="175:78" pos:end="175:78">*</operator><name pos:start="175:79" pos:end="175:79">n</name> <operator pos:start="175:81" pos:end="175:81">/</operator> <name pos:start="175:83" pos:end="175:87">laces</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="179:9" pos:end="185:9"><if pos:start="179:9" pos:end="185:9">if <condition pos:start="179:12" pos:end="179:32">(<expr pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:24"><name pos:start="179:13" pos:end="179:21">lace_size</name><index pos:start="179:22" pos:end="179:24">[<expr pos:start="179:23" pos:end="179:23"><name pos:start="179:23" pos:end="179:23">n</name></expr>]</index></name> <operator pos:start="179:26" pos:end="179:26">&gt;</operator> <name pos:start="179:28" pos:end="179:31">size</name></expr>)</condition> <block pos:start="179:34" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:18">

            <expr_stmt pos:start="181:13" pos:end="181:73"><expr pos:start="181:13" pos:end="181:72"><call pos:start="181:13" pos:end="181:72"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="181:72">(<argument pos:start="181:20" pos:end="181:32"><expr pos:start="181:20" pos:end="181:32"><name pos:start="181:20" pos:end="181:32"><name pos:start="181:20" pos:end="181:27">matroska</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:32">ctx</name></name></expr></argument>, <argument pos:start="181:35" pos:end="181:46"><expr pos:start="181:35" pos:end="181:46"><name pos:start="181:35" pos:end="181:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:49" pos:end="181:71"><expr pos:start="181:49" pos:end="181:71"><literal type="string" pos:start="181:49" pos:end="181:71">"Invalid packet size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="189:9" pos:end="241:9"><if pos:start="189:9" pos:end="211:9">if <condition pos:start="189:12" pos:end="197:70">(<expr pos:start="189:13" pos:end="197:69"><operator pos:start="189:13" pos:end="189:13">(</operator><name pos:start="189:14" pos:end="189:35"><name pos:start="189:14" pos:end="189:15">st</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:25">codecpar</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:35">codec_id</name></name> <operator pos:start="189:37" pos:end="189:38">==</operator> <name pos:start="189:40" pos:end="189:57">AV_CODEC_ID_RA_288</name> <operator pos:start="189:59" pos:end="189:60">||</operator>

             <name pos:start="191:14" pos:end="191:35"><name pos:start="191:14" pos:end="191:15">st</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:25">codecpar</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:35">codec_id</name></name> <operator pos:start="191:37" pos:end="191:38">==</operator> <name pos:start="191:40" pos:end="191:55">AV_CODEC_ID_COOK</name>   <operator pos:start="191:59" pos:end="191:60">||</operator>

             <name pos:start="193:14" pos:end="193:35"><name pos:start="193:14" pos:end="193:15">st</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:25">codecpar</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:35">codec_id</name></name> <operator pos:start="193:37" pos:end="193:38">==</operator> <name pos:start="193:40" pos:end="193:55">AV_CODEC_ID_SIPR</name>   <operator pos:start="193:59" pos:end="193:60">||</operator>

             <name pos:start="195:14" pos:end="195:35"><name pos:start="195:14" pos:end="195:15">st</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:25">codecpar</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:35">codec_id</name></name> <operator pos:start="195:37" pos:end="195:38">==</operator> <name pos:start="195:40" pos:end="195:57">AV_CODEC_ID_ATRAC3</name><operator pos:start="195:58" pos:end="195:58">)</operator> <operator pos:start="195:60" pos:end="195:61">&amp;&amp;</operator>

            <name pos:start="197:13" pos:end="197:37"><name pos:start="197:13" pos:end="197:14">st</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:24">codecpar</name><operator pos:start="197:25" pos:end="197:26">-&gt;</operator><name pos:start="197:27" pos:end="197:37">block_align</name></name> <operator pos:start="197:39" pos:end="197:40">&amp;&amp;</operator> <name pos:start="197:42" pos:end="197:69"><name pos:start="197:42" pos:end="197:46">track</name><operator pos:start="197:47" pos:end="197:48">-&gt;</operator><name pos:start="197:49" pos:end="197:53">audio</name><operator pos:start="197:54" pos:end="197:54">.</operator><name pos:start="197:55" pos:end="197:69">sub_packet_size</name></name></expr>)</condition> <block pos:start="197:72" pos:end="211:9">{<block_content pos:start="199:13" pos:end="207:25">

            <expr_stmt pos:start="199:13" pos:end="203:57"><expr pos:start="199:13" pos:end="203:56"><name pos:start="199:13" pos:end="199:15">res</name> <operator pos:start="199:17" pos:end="199:17">=</operator> <call pos:start="199:19" pos:end="203:56"><name pos:start="199:19" pos:end="199:41">matroska_parse_rm_audio</name><argument_list pos:start="199:42" pos:end="203:56">(<argument pos:start="199:43" pos:end="199:50"><expr pos:start="199:43" pos:end="199:50"><name pos:start="199:43" pos:end="199:50">matroska</name></expr></argument>, <argument pos:start="199:53" pos:end="199:57"><expr pos:start="199:53" pos:end="199:57"><name pos:start="199:53" pos:end="199:57">track</name></expr></argument>, <argument pos:start="199:60" pos:end="199:61"><expr pos:start="199:60" pos:end="199:61"><name pos:start="199:60" pos:end="199:61">st</name></expr></argument>, <argument pos:start="199:64" pos:end="199:67"><expr pos:start="199:64" pos:end="199:67"><name pos:start="199:64" pos:end="199:67">data</name></expr></argument>,

                                          <argument pos:start="201:43" pos:end="201:54"><expr pos:start="201:43" pos:end="201:54"><name pos:start="201:43" pos:end="201:54"><name pos:start="201:43" pos:end="201:51">lace_size</name><index pos:start="201:52" pos:end="201:54">[<expr pos:start="201:53" pos:end="201:53"><name pos:start="201:53" pos:end="201:53">n</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="203:43" pos:end="203:50"><expr pos:start="203:43" pos:end="203:50"><name pos:start="203:43" pos:end="203:50">timecode</name></expr></argument>, <argument pos:start="203:53" pos:end="203:55"><expr pos:start="203:53" pos:end="203:55"><name pos:start="203:53" pos:end="203:55">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="207:25"><if pos:start="205:13" pos:end="207:25">if <condition pos:start="205:16" pos:end="205:20">(<expr pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:19">res</name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:25"><block_content pos:start="207:17" pos:end="207:25">

                <goto pos:start="207:17" pos:end="207:25">goto <name pos:start="207:22" pos:end="207:24">end</name>;</goto></block_content></block></if></if_stmt>



        </block_content>}</block></if> <if type="elseif" pos:start="211:11" pos:end="225:9">else if <condition pos:start="211:19" pos:end="211:64">(<expr pos:start="211:20" pos:end="211:63"><name pos:start="211:20" pos:end="211:41"><name pos:start="211:20" pos:end="211:21">st</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:31">codecpar</name><operator pos:start="211:32" pos:end="211:33">-&gt;</operator><name pos:start="211:34" pos:end="211:41">codec_id</name></name> <operator pos:start="211:43" pos:end="211:44">==</operator> <name pos:start="211:46" pos:end="211:63">AV_CODEC_ID_WEBVTT</name></expr>)</condition> <block pos:start="211:66" pos:end="225:9">{<block_content pos:start="213:13" pos:end="223:25">

            <expr_stmt pos:start="213:13" pos:end="219:45"><expr pos:start="213:13" pos:end="219:44"><name pos:start="213:13" pos:end="213:15">res</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <call pos:start="213:19" pos:end="219:44"><name pos:start="213:19" pos:end="213:39">matroska_parse_webvtt</name><argument_list pos:start="213:40" pos:end="219:44">(<argument pos:start="213:41" pos:end="213:48"><expr pos:start="213:41" pos:end="213:48"><name pos:start="213:41" pos:end="213:48">matroska</name></expr></argument>, <argument pos:start="213:51" pos:end="213:55"><expr pos:start="213:51" pos:end="213:55"><name pos:start="213:51" pos:end="213:55">track</name></expr></argument>, <argument pos:start="213:58" pos:end="213:59"><expr pos:start="213:58" pos:end="213:59"><name pos:start="213:58" pos:end="213:59">st</name></expr></argument>,

                                        <argument pos:start="215:41" pos:end="215:44"><expr pos:start="215:41" pos:end="215:44"><name pos:start="215:41" pos:end="215:44">data</name></expr></argument>, <argument pos:start="215:47" pos:end="215:58"><expr pos:start="215:47" pos:end="215:58"><name pos:start="215:47" pos:end="215:58"><name pos:start="215:47" pos:end="215:55">lace_size</name><index pos:start="215:56" pos:end="215:58">[<expr pos:start="215:57" pos:end="215:57"><name pos:start="215:57" pos:end="215:57">n</name></expr>]</index></name></expr></argument>,

                                        <argument pos:start="217:41" pos:end="217:48"><expr pos:start="217:41" pos:end="217:48"><name pos:start="217:41" pos:end="217:48">timecode</name></expr></argument>, <argument pos:start="217:51" pos:end="217:63"><expr pos:start="217:51" pos:end="217:63"><name pos:start="217:51" pos:end="217:63">lace_duration</name></expr></argument>,

                                        <argument pos:start="219:41" pos:end="219:43"><expr pos:start="219:41" pos:end="219:43"><name pos:start="219:41" pos:end="219:43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="221:13" pos:end="223:25"><if pos:start="221:13" pos:end="223:25">if <condition pos:start="221:16" pos:end="221:20">(<expr pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:19">res</name></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:25"><block_content pos:start="223:17" pos:end="223:25">

                <goto pos:start="223:17" pos:end="223:25">goto <name pos:start="223:22" pos:end="223:24">end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="225:11" pos:end="241:9">else <block pos:start="225:16" pos:end="241:9">{<block_content pos:start="227:13" pos:end="239:25">

            <expr_stmt pos:start="227:13" pos:end="235:56"><expr pos:start="227:13" pos:end="235:55"><name pos:start="227:13" pos:end="227:15">res</name> <operator pos:start="227:17" pos:end="227:17">=</operator> <call pos:start="227:19" pos:end="235:55"><name pos:start="227:19" pos:end="227:38">matroska_parse_frame</name><argument_list pos:start="227:39" pos:end="235:55">(<argument pos:start="227:40" pos:end="227:47"><expr pos:start="227:40" pos:end="227:47"><name pos:start="227:40" pos:end="227:47">matroska</name></expr></argument>, <argument pos:start="227:50" pos:end="227:54"><expr pos:start="227:50" pos:end="227:54"><name pos:start="227:50" pos:end="227:54">track</name></expr></argument>, <argument pos:start="227:57" pos:end="227:58"><expr pos:start="227:57" pos:end="227:58"><name pos:start="227:57" pos:end="227:58">st</name></expr></argument>, <argument pos:start="227:61" pos:end="227:64"><expr pos:start="227:61" pos:end="227:64"><name pos:start="227:61" pos:end="227:64">data</name></expr></argument>, <argument pos:start="227:67" pos:end="227:78"><expr pos:start="227:67" pos:end="227:78"><name pos:start="227:67" pos:end="227:78"><name pos:start="227:67" pos:end="227:75">lace_size</name><index pos:start="227:76" pos:end="227:78">[<expr pos:start="227:77" pos:end="227:77"><name pos:start="227:77" pos:end="227:77">n</name></expr>]</index></name></expr></argument>,

                                       <argument pos:start="229:40" pos:end="229:47"><expr pos:start="229:40" pos:end="229:47"><name pos:start="229:40" pos:end="229:47">timecode</name></expr></argument>, <argument pos:start="229:50" pos:end="229:62"><expr pos:start="229:50" pos:end="229:62"><name pos:start="229:50" pos:end="229:62">lace_duration</name></expr></argument>, <argument pos:start="229:65" pos:end="229:67"><expr pos:start="229:65" pos:end="229:67"><name pos:start="229:65" pos:end="229:67">pos</name></expr></argument>,

                                       <argument pos:start="231:40" pos:end="231:59"><expr pos:start="231:40" pos:end="231:59"><ternary pos:start="231:40" pos:end="231:59"><condition pos:start="231:40" pos:end="231:43"><expr pos:start="231:40" pos:end="231:41"><operator pos:start="231:40" pos:end="231:40">!</operator><name pos:start="231:41" pos:end="231:41">n</name></expr> ?</condition><then pos:start="231:45" pos:end="231:55"> <expr pos:start="231:45" pos:end="231:55"><name pos:start="231:45" pos:end="231:55">is_keyframe</name></expr> </then><else pos:start="231:57" pos:end="231:59">: <expr pos:start="231:59" pos:end="231:59"><literal type="number" pos:start="231:59" pos:end="231:59">0</literal></expr></else></ternary></expr></argument>,

                                       <argument pos:start="233:40" pos:end="233:49"><expr pos:start="233:40" pos:end="233:49"><name pos:start="233:40" pos:end="233:49">additional</name></expr></argument>, <argument pos:start="233:52" pos:end="233:64"><expr pos:start="233:52" pos:end="233:64"><name pos:start="233:52" pos:end="233:64">additional_id</name></expr></argument>, <argument pos:start="233:67" pos:end="233:81"><expr pos:start="233:67" pos:end="233:81"><name pos:start="233:67" pos:end="233:81">additional_size</name></expr></argument>,

                                       <argument pos:start="235:40" pos:end="235:54"><expr pos:start="235:40" pos:end="235:54"><name pos:start="235:40" pos:end="235:54">discard_padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="237:13" pos:end="239:25"><if pos:start="237:13" pos:end="239:25">if <condition pos:start="237:16" pos:end="237:20">(<expr pos:start="237:17" pos:end="237:19"><name pos:start="237:17" pos:end="237:19">res</name></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:25"><block_content pos:start="239:17" pos:end="239:25">

                <goto pos:start="239:17" pos:end="239:25">goto <name pos:start="239:22" pos:end="239:24">end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="245:9" pos:end="247:81"><if pos:start="245:9" pos:end="247:81">if <condition pos:start="245:12" pos:end="245:39">(<expr pos:start="245:13" pos:end="245:38"><name pos:start="245:13" pos:end="245:20">timecode</name> <operator pos:start="245:22" pos:end="245:23">!=</operator> <name pos:start="245:25" pos:end="245:38">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="247:13" pos:end="247:81"><block_content pos:start="247:13" pos:end="247:81">

            <expr_stmt pos:start="247:13" pos:end="247:81"><expr pos:start="247:13" pos:end="247:80"><name pos:start="247:13" pos:end="247:20">timecode</name> <operator pos:start="247:22" pos:end="247:22">=</operator> <ternary pos:start="247:24" pos:end="247:80"><condition pos:start="247:24" pos:end="247:38"><expr pos:start="247:24" pos:end="247:36"><name pos:start="247:24" pos:end="247:36">lace_duration</name></expr> ?</condition><then pos:start="247:40" pos:end="247:63"> <expr pos:start="247:40" pos:end="247:63"><name pos:start="247:40" pos:end="247:47">timecode</name> <operator pos:start="247:49" pos:end="247:49">+</operator> <name pos:start="247:51" pos:end="247:63">lace_duration</name></expr> </then><else pos:start="247:65" pos:end="247:80">: <expr pos:start="247:67" pos:end="247:80"><name pos:start="247:67" pos:end="247:80">AV_NOPTS_VALUE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:29"><expr pos:start="249:9" pos:end="249:28"><name pos:start="249:9" pos:end="249:12">data</name> <operator pos:start="249:14" pos:end="249:15">+=</operator> <name pos:start="249:17" pos:end="249:28"><name pos:start="249:17" pos:end="249:25">lace_size</name><index pos:start="249:26" pos:end="249:28">[<expr pos:start="249:27" pos:end="249:27"><name pos:start="249:27" pos:end="249:27">n</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:29"><expr pos:start="251:9" pos:end="251:28"><name pos:start="251:9" pos:end="251:12">size</name> <operator pos:start="251:14" pos:end="251:15">-=</operator> <name pos:start="251:17" pos:end="251:28"><name pos:start="251:17" pos:end="251:25">lace_size</name><index pos:start="251:26" pos:end="251:28">[<expr pos:start="251:27" pos:end="251:27"><name pos:start="251:27" pos:end="251:27">n</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



<label pos:start="257:1" pos:end="257:4"><name pos:start="257:1" pos:end="257:3">end</name>:</label>

    <expr_stmt pos:start="259:5" pos:end="259:23"><expr pos:start="259:5" pos:end="259:22"><call pos:start="259:5" pos:end="259:22"><name pos:start="259:5" pos:end="259:11">av_free</name><argument_list pos:start="259:12" pos:end="259:22">(<argument pos:start="259:13" pos:end="259:21"><expr pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:21">lace_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="261:5" pos:end="261:15">return <expr pos:start="261:12" pos:end="261:14"><name pos:start="261:12" pos:end="261:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
