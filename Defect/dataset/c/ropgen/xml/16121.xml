<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16121.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">load_symbols</name><parameter_list pos:start="1:25" pos:end="1:52">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:31">struct</name> <name pos:start="1:33" pos:end="1:38">elfhdr</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">hdr</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:51"><decl pos:start="1:46" pos:end="1:51"><type pos:start="1:46" pos:end="1:51"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:51">fd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:17">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:18">i</name></decl>, <decl pos:start="5:21" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:21" pos:end="5:25">nsyms</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:19">elf_shdr</name></name></type> <name pos:start="7:21" pos:end="7:26">sechdr</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:19"/><name pos:start="7:29" pos:end="7:34">symtab</name></decl>, <decl pos:start="7:37" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:19"/><name pos:start="7:37" pos:end="7:42">strtab</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">strings</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">syminfo</name></name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:18">elf_sym</name></name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:24">syms</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><call pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:9">lseek</name><argument_list pos:start="17:10" pos:end="17:37">(<argument pos:start="17:11" pos:end="17:12"><expr pos:start="17:11" pos:end="17:12"><name pos:start="17:11" pos:end="17:12">fd</name></expr></argument>, <argument pos:start="17:15" pos:end="17:26"><expr pos:start="17:15" pos:end="17:26"><name pos:start="17:15" pos:end="17:26"><name pos:start="17:15" pos:end="17:17">hdr</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:26">e_shoff</name></name></expr></argument>, <argument pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:36"><name pos:start="17:29" pos:end="17:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="55:5">for <control pos:start="19:9" pos:end="19:38">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:33"><expr pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:23">hdr</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:32">e_shnum</name></name></expr>;</condition> <incr pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:35">i</name><operator pos:start="19:36" pos:end="19:37">++</operator></expr></incr>)</control> <block pos:start="19:40" pos:end="55:5">{<block_content pos:start="21:9" pos:end="53:9">

        <if_stmt pos:start="21:9" pos:end="26:0"><if pos:start="21:9" pos:end="26:0">if <condition pos:start="21:12" pos:end="21:64">(<expr pos:start="21:13" pos:end="21:63"><call pos:start="21:13" pos:end="21:45"><name pos:start="21:13" pos:end="21:16">read</name><argument_list pos:start="21:17" pos:end="21:45">(<argument pos:start="21:18" pos:end="21:19"><expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">fd</name></expr></argument>, <argument pos:start="21:22" pos:end="21:28"><expr pos:start="21:22" pos:end="21:28"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:28">sechdr</name></expr></argument>, <argument pos:start="21:31" pos:end="21:44"><expr pos:start="21:31" pos:end="21:44"><sizeof pos:start="21:31" pos:end="21:44">sizeof<argument_list pos:start="21:37" pos:end="21:44">(<argument pos:start="21:38" pos:end="21:43"><expr pos:start="21:38" pos:end="21:43"><name pos:start="21:38" pos:end="21:43">sechdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="21:47" pos:end="21:48">!=</operator> <sizeof pos:start="21:50" pos:end="21:63">sizeof<argument_list pos:start="21:56" pos:end="21:63">(<argument pos:start="21:57" pos:end="21:62"><expr pos:start="21:57" pos:end="21:62"><name pos:start="21:57" pos:end="21:62">sechdr</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="26:0"><block_content pos:start="23:13" pos:end="26:0">

            <return pos:start="23:13" pos:end="26:0">return;</return></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="25:1" pos:end="25:19">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:19">BSWAP_NEEDED</name></cpp:ifdef>

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:27"><call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:18">bswap_shdr</name><argument_list pos:start="27:19" pos:end="27:27">(<argument pos:start="27:20" pos:end="27:26"><expr pos:start="27:20" pos:end="27:26"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:26">sechdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="31:9" pos:end="53:9"><if pos:start="31:9" pos:end="53:9">if <condition pos:start="31:12" pos:end="31:41">(<expr pos:start="31:13" pos:end="31:40"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:18">sechdr</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:26">sh_type</name></name> <operator pos:start="31:28" pos:end="31:29">==</operator> <name pos:start="31:31" pos:end="31:40">SHT_SYMTAB</name></expr>)</condition> <block pos:start="31:43" pos:end="53:9">{<block_content pos:start="33:13" pos:end="51:23">

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:18">symtab</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:27">sechdr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="37:63"><expr pos:start="35:13" pos:end="37:62"><call pos:start="35:13" pos:end="37:62"><name pos:start="35:13" pos:end="35:17">lseek</name><argument_list pos:start="35:18" pos:end="37:62">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">fd</name></expr></argument>, <argument pos:start="35:23" pos:end="37:51"><expr pos:start="35:23" pos:end="37:51"><name pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:25">hdr</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:34">e_shoff</name></name>

                  <operator pos:start="37:19" pos:end="37:19">+</operator> <sizeof pos:start="37:21" pos:end="37:34">sizeof<argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33">sechdr</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:36" pos:end="37:36">*</operator> <name pos:start="37:38" pos:end="37:51"><name pos:start="37:38" pos:end="37:43">sechdr</name><operator pos:start="37:44" pos:end="37:44">.</operator><name pos:start="37:45" pos:end="37:51">sh_link</name></name></expr></argument>, <argument pos:start="37:54" pos:end="37:61"><expr pos:start="37:54" pos:end="37:61"><name pos:start="37:54" pos:end="37:61">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="46:0"><if pos:start="39:13" pos:end="46:0">if <condition pos:start="39:16" pos:end="41:34">(<expr pos:start="39:17" pos:end="41:33"><call pos:start="39:17" pos:end="39:49"><name pos:start="39:17" pos:end="39:20">read</name><argument_list pos:start="39:21" pos:end="39:49">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">fd</name></expr></argument>, <argument pos:start="39:26" pos:end="39:32"><expr pos:start="39:26" pos:end="39:32"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:32">strtab</name></expr></argument>, <argument pos:start="39:35" pos:end="39:48"><expr pos:start="39:35" pos:end="39:48"><sizeof pos:start="39:35" pos:end="39:48">sizeof<argument_list pos:start="39:41" pos:end="39:48">(<argument pos:start="39:42" pos:end="39:47"><expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47">strtab</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call>

                <operator pos:start="41:17" pos:end="41:18">!=</operator> <sizeof pos:start="41:20" pos:end="41:33">sizeof<argument_list pos:start="41:26" pos:end="41:33">(<argument pos:start="41:27" pos:end="41:32"><expr pos:start="41:27" pos:end="41:32"><name pos:start="41:27" pos:end="41:32">strtab</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="46:0"><block_content pos:start="43:17" pos:end="46:0">

                <return pos:start="43:17" pos:end="46:0">return;</return></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="45:1" pos:end="45:19">#<cpp:directive pos:start="45:2" pos:end="45:6">ifdef</cpp:directive> <name pos:start="45:8" pos:end="45:19">BSWAP_NEEDED</name></cpp:ifdef>

            <expr_stmt pos:start="47:13" pos:end="50:0"><expr pos:start="47:13" pos:end="47:31"><call pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:22">bswap_shdr</name><argument_list pos:start="47:23" pos:end="47:31">(<argument pos:start="47:24" pos:end="47:30"><expr pos:start="47:24" pos:end="47:30"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:30">strtab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

            <goto pos:start="51:13" pos:end="51:23">goto <name pos:start="51:18" pos:end="51:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="57:5" pos:end="57:11">return;</return> <comment type="block" pos:start="57:13" pos:end="57:37">/* Shouldn't happen... */</comment>



 <label pos:start="61:2" pos:end="61:7"><name pos:start="61:2" pos:end="61:6">found</name>:</label>

    <comment type="block" pos:start="63:5" pos:end="63:64">/* Now know where the strtab and symtab are.  Snarf them. */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:5">s</name> <operator pos:start="65:7" pos:end="65:7">=</operator> <call pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:14">malloc</name><argument_list pos:start="65:15" pos:end="65:26">(<argument pos:start="65:16" pos:end="65:25"><expr pos:start="65:16" pos:end="65:25"><sizeof pos:start="65:16" pos:end="65:25">sizeof<argument_list pos:start="65:22" pos:end="65:25">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><operator pos:start="65:23" pos:end="65:23">*</operator><name pos:start="65:24" pos:end="65:24">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:8">syms</name> <operator pos:start="67:10" pos:end="67:10">=</operator> <call pos:start="67:12" pos:end="67:33"><name pos:start="67:12" pos:end="67:17">malloc</name><argument_list pos:start="67:18" pos:end="67:33">(<argument pos:start="67:19" pos:end="67:32"><expr pos:start="67:19" pos:end="67:32"><name pos:start="67:19" pos:end="67:32"><name pos:start="67:19" pos:end="67:24">symtab</name><operator pos:start="67:25" pos:end="67:25">.</operator><name pos:start="67:26" pos:end="67:32">sh_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:15"><if pos:start="69:5" pos:end="71:15">if <condition pos:start="69:8" pos:end="69:14">(<expr pos:start="69:9" pos:end="69:13"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:13">syms</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:15"><block_content pos:start="71:9" pos:end="71:15">

        <return pos:start="71:9" pos:end="71:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:19">disas_strtab</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:29">strings</name> <operator pos:start="73:31" pos:end="73:31">=</operator> <call pos:start="73:33" pos:end="73:54"><name pos:start="73:33" pos:end="73:38">malloc</name><argument_list pos:start="73:39" pos:end="73:54">(<argument pos:start="73:40" pos:end="73:53"><expr pos:start="73:40" pos:end="73:53"><name pos:start="73:40" pos:end="73:53"><name pos:start="73:40" pos:end="73:45">strtab</name><operator pos:start="73:46" pos:end="73:46">.</operator><name pos:start="73:47" pos:end="73:53">sh_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:15"><if pos:start="75:5" pos:end="77:15">if <condition pos:start="75:8" pos:end="75:25">(<expr pos:start="75:9" pos:end="75:24"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:24"><name pos:start="75:10" pos:end="75:10">s</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:24">disas_strtab</name></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:15"><block_content pos:start="77:9" pos:end="77:15">

        <return pos:start="77:9" pos:end="77:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:42"><expr pos:start="81:5" pos:end="81:41"><call pos:start="81:5" pos:end="81:41"><name pos:start="81:5" pos:end="81:9">lseek</name><argument_list pos:start="81:10" pos:end="81:41">(<argument pos:start="81:11" pos:end="81:12"><expr pos:start="81:11" pos:end="81:12"><name pos:start="81:11" pos:end="81:12">fd</name></expr></argument>, <argument pos:start="81:15" pos:end="81:30"><expr pos:start="81:15" pos:end="81:30"><name pos:start="81:15" pos:end="81:30"><name pos:start="81:15" pos:end="81:20">symtab</name><operator pos:start="81:21" pos:end="81:21">.</operator><name pos:start="81:22" pos:end="81:30">sh_offset</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:40"><expr pos:start="81:33" pos:end="81:40"><name pos:start="81:33" pos:end="81:40">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="85:15"><if pos:start="83:5" pos:end="85:15">if <condition pos:start="83:8" pos:end="83:57">(<expr pos:start="83:9" pos:end="83:56"><call pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:12">read</name><argument_list pos:start="83:13" pos:end="83:38">(<argument pos:start="83:14" pos:end="83:15"><expr pos:start="83:14" pos:end="83:15"><name pos:start="83:14" pos:end="83:15">fd</name></expr></argument>, <argument pos:start="83:18" pos:end="83:21"><expr pos:start="83:18" pos:end="83:21"><name pos:start="83:18" pos:end="83:21">syms</name></expr></argument>, <argument pos:start="83:24" pos:end="83:37"><expr pos:start="83:24" pos:end="83:37"><name pos:start="83:24" pos:end="83:37"><name pos:start="83:24" pos:end="83:29">symtab</name><operator pos:start="83:30" pos:end="83:30">.</operator><name pos:start="83:31" pos:end="83:37">sh_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:40" pos:end="83:41">!=</operator> <name pos:start="83:43" pos:end="83:56"><name pos:start="83:43" pos:end="83:48">symtab</name><operator pos:start="83:49" pos:end="83:49">.</operator><name pos:start="83:50" pos:end="83:56">sh_size</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:15"><block_content pos:start="85:9" pos:end="85:15">

        <return pos:start="85:9" pos:end="85:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:52"><expr pos:start="89:5" pos:end="89:51"><name pos:start="89:5" pos:end="89:9">nsyms</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <name pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:18">symtab</name><operator pos:start="89:19" pos:end="89:19">.</operator><name pos:start="89:20" pos:end="89:26">sh_size</name></name> <operator pos:start="89:28" pos:end="89:28">/</operator> <sizeof pos:start="89:30" pos:end="89:51">sizeof<argument_list pos:start="89:36" pos:end="89:51">(<argument pos:start="89:37" pos:end="89:50"><expr pos:start="89:37" pos:end="89:50">struct <name pos:start="89:44" pos:end="89:50">elf_sym</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:10"><expr pos:start="93:5" pos:end="93:9"><name pos:start="93:5" pos:end="93:5">i</name> <operator pos:start="93:7" pos:end="93:7">=</operator> <literal type="number" pos:start="93:9" pos:end="93:9">0</literal></expr>;</expr_stmt>

    <while pos:start="95:5" pos:end="133:5">while <condition pos:start="95:11" pos:end="95:21">(<expr pos:start="95:12" pos:end="95:20"><name pos:start="95:12" pos:end="95:12">i</name> <operator pos:start="95:14" pos:end="95:14">&lt;</operator> <name pos:start="95:16" pos:end="95:20">nsyms</name></expr>)</condition> <block pos:start="95:23" pos:end="133:5">{<block_content pos:start="99:9" pos:end="131:12">

<cpp:ifdef pos:start="97:1" pos:end="97:19">#<cpp:directive pos:start="97:2" pos:end="97:6">ifdef</cpp:directive> <name pos:start="97:8" pos:end="97:19">BSWAP_NEEDED</name></cpp:ifdef>

        <expr_stmt pos:start="99:9" pos:end="102:0"><expr pos:start="99:9" pos:end="99:27"><call pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:17">bswap_sym</name><argument_list pos:start="99:18" pos:end="99:27">(<argument pos:start="99:19" pos:end="99:26"><expr pos:start="99:19" pos:end="99:26"><name pos:start="99:19" pos:end="99:22">syms</name> <operator pos:start="99:24" pos:end="99:24">+</operator> <name pos:start="99:26" pos:end="99:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>

        <comment type="line" pos:start="103:9" pos:end="103:51">// Throw away entries which we do not need.</comment>

        <if_stmt pos:start="105:9" pos:end="124:0"><if pos:start="105:9" pos:end="124:0">if <condition pos:start="105:12" pos:end="109:57">(<expr pos:start="105:13" pos:end="109:56"><name pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:16">syms</name><index pos:start="105:17" pos:end="105:19">[<expr pos:start="105:18" pos:end="105:18"><name pos:start="105:18" pos:end="105:18">i</name></expr>]</index></name><operator pos:start="105:20" pos:end="105:20">.</operator><name pos:start="105:21" pos:end="105:28">st_shndx</name> <operator pos:start="105:30" pos:end="105:31">==</operator> <name pos:start="105:33" pos:end="105:41">SHN_UNDEF</name> <operator pos:start="105:43" pos:end="105:44">||</operator>

                <name pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:20">syms</name><index pos:start="107:21" pos:end="107:23">[<expr pos:start="107:22" pos:end="107:22"><name pos:start="107:22" pos:end="107:22">i</name></expr>]</index></name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:32">st_shndx</name> <operator pos:start="107:34" pos:end="107:35">&gt;=</operator> <name pos:start="107:37" pos:end="107:49">SHN_LORESERVE</name> <operator pos:start="107:51" pos:end="107:52">||</operator>

                <call pos:start="109:17" pos:end="109:44"><name pos:start="109:17" pos:end="109:27">ELF_ST_TYPE</name><argument_list pos:start="109:28" pos:end="109:44">(<argument pos:start="109:29" pos:end="109:43"><expr pos:start="109:29" pos:end="109:43"><name pos:start="109:29" pos:end="109:35"><name pos:start="109:29" pos:end="109:32">syms</name><index pos:start="109:33" pos:end="109:35">[<expr pos:start="109:34" pos:end="109:34"><name pos:start="109:34" pos:end="109:34">i</name></expr>]</index></name><operator pos:start="109:36" pos:end="109:36">.</operator><name pos:start="109:37" pos:end="109:43">st_info</name></expr></argument>)</argument_list></call> <operator pos:start="109:46" pos:end="109:47">!=</operator> <name pos:start="109:49" pos:end="109:56">STT_FUNC</name></expr>)</condition> <block pos:start="109:59" pos:end="124:0">{<block_content pos:start="111:13" pos:end="119:21">

            <expr_stmt pos:start="111:13" pos:end="111:20"><expr pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:17">nsyms</name><operator pos:start="111:18" pos:end="111:19">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="117:13"><if pos:start="113:13" pos:end="117:13">if <condition pos:start="113:16" pos:end="113:26">(<expr pos:start="113:17" pos:end="113:25"><name pos:start="113:17" pos:end="113:17">i</name> <operator pos:start="113:19" pos:end="113:19">&lt;</operator> <name pos:start="113:21" pos:end="113:25">nsyms</name></expr>)</condition> <block pos:start="113:28" pos:end="117:13">{<block_content pos:start="115:17" pos:end="115:38">

                <expr_stmt pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:20">syms</name><index pos:start="115:21" pos:end="115:23">[<expr pos:start="115:22" pos:end="115:22"><name pos:start="115:22" pos:end="115:22">i</name></expr>]</index></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:37"><name pos:start="115:27" pos:end="115:30">syms</name><index pos:start="115:31" pos:end="115:37">[<expr pos:start="115:32" pos:end="115:36"><name pos:start="115:32" pos:end="115:36">nsyms</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <continue pos:start="119:13" pos:end="119:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="123:1" pos:end="123:48">#<cpp:directive pos:start="123:2" pos:end="123:3">if</cpp:directive> <expr pos:start="123:5" pos:end="123:48"><call pos:start="123:5" pos:end="123:23"><name pos:start="123:5" pos:end="123:11">defined</name><argument_list pos:start="123:12" pos:end="123:23">(<argument pos:start="123:13" pos:end="123:22"><expr pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:22">TARGET_ARM</name></expr></argument>)</argument_list></call> <operator pos:start="123:25" pos:end="123:26">||</operator> <call pos:start="123:28" pos:end="123:48"><name pos:start="123:28" pos:end="123:34">defined</name> <argument_list pos:start="123:36" pos:end="123:48">(<argument pos:start="123:37" pos:end="123:47"><expr pos:start="123:37" pos:end="123:47"><name pos:start="123:37" pos:end="123:47">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <comment type="block" pos:start="125:9" pos:end="125:69">/* The bottom address bit marks a Thumb or MIPS16 symbol.  */</comment>

        <expr_stmt pos:start="127:9" pos:end="130:0"><expr pos:start="127:9" pos:end="127:44"><name pos:start="127:9" pos:end="127:15"><name pos:start="127:9" pos:end="127:12">syms</name><index pos:start="127:13" pos:end="127:15">[<expr pos:start="127:14" pos:end="127:14"><name pos:start="127:14" pos:end="127:14">i</name></expr>]</index></name><operator pos:start="127:16" pos:end="127:16">.</operator><name pos:start="127:17" pos:end="127:24">st_value</name> <operator pos:start="127:26" pos:end="127:27">&amp;=</operator> <operator pos:start="127:29" pos:end="127:29">~</operator><operator pos:start="127:30" pos:end="127:30">(</operator><name pos:start="127:31" pos:end="127:42">target_ulong</name><operator pos:start="127:43" pos:end="127:43">)</operator><literal type="number" pos:start="127:44" pos:end="127:44">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="131:9" pos:end="131:12"><expr pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:9">i</name><operator pos:start="131:10" pos:end="131:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="135:5" pos:end="135:48"><expr pos:start="135:5" pos:end="135:47"><name pos:start="135:5" pos:end="135:8">syms</name> <operator pos:start="135:10" pos:end="135:10">=</operator> <call pos:start="135:12" pos:end="135:47"><name pos:start="135:12" pos:end="135:18">realloc</name><argument_list pos:start="135:19" pos:end="135:47">(<argument pos:start="135:20" pos:end="135:23"><expr pos:start="135:20" pos:end="135:23"><name pos:start="135:20" pos:end="135:23">syms</name></expr></argument>, <argument pos:start="135:26" pos:end="135:46"><expr pos:start="135:26" pos:end="135:46"><name pos:start="135:26" pos:end="135:30">nsyms</name> <operator pos:start="135:32" pos:end="135:32">*</operator> <sizeof pos:start="135:34" pos:end="135:46">sizeof<argument_list pos:start="135:40" pos:end="135:46">(<argument pos:start="135:41" pos:end="135:45"><expr pos:start="135:41" pos:end="135:45"><operator pos:start="135:41" pos:end="135:41">*</operator><name pos:start="135:42" pos:end="135:45">syms</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:46"><expr pos:start="139:5" pos:end="139:45"><call pos:start="139:5" pos:end="139:45"><name pos:start="139:5" pos:end="139:9">qsort</name><argument_list pos:start="139:10" pos:end="139:45">(<argument pos:start="139:11" pos:end="139:14"><expr pos:start="139:11" pos:end="139:14"><name pos:start="139:11" pos:end="139:14">syms</name></expr></argument>, <argument pos:start="139:17" pos:end="139:21"><expr pos:start="139:17" pos:end="139:21"><name pos:start="139:17" pos:end="139:21">nsyms</name></expr></argument>, <argument pos:start="139:24" pos:end="139:36"><expr pos:start="139:24" pos:end="139:36"><sizeof pos:start="139:24" pos:end="139:36">sizeof<argument_list pos:start="139:30" pos:end="139:36">(<argument pos:start="139:31" pos:end="139:35"><expr pos:start="139:31" pos:end="139:35"><operator pos:start="139:31" pos:end="139:31">*</operator><name pos:start="139:32" pos:end="139:35">syms</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="139:39" pos:end="139:44"><expr pos:start="139:39" pos:end="139:44"><name pos:start="139:39" pos:end="139:44">symcmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:42"><expr pos:start="143:5" pos:end="143:41"><call pos:start="143:5" pos:end="143:41"><name pos:start="143:5" pos:end="143:9">lseek</name><argument_list pos:start="143:10" pos:end="143:41">(<argument pos:start="143:11" pos:end="143:12"><expr pos:start="143:11" pos:end="143:12"><name pos:start="143:11" pos:end="143:12">fd</name></expr></argument>, <argument pos:start="143:15" pos:end="143:30"><expr pos:start="143:15" pos:end="143:30"><name pos:start="143:15" pos:end="143:30"><name pos:start="143:15" pos:end="143:20">strtab</name><operator pos:start="143:21" pos:end="143:21">.</operator><name pos:start="143:22" pos:end="143:30">sh_offset</name></name></expr></argument>, <argument pos:start="143:33" pos:end="143:40"><expr pos:start="143:33" pos:end="143:40"><name pos:start="143:33" pos:end="143:40">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:15"><if pos:start="145:5" pos:end="147:15">if <condition pos:start="145:8" pos:end="145:60">(<expr pos:start="145:9" pos:end="145:59"><call pos:start="145:9" pos:end="145:41"><name pos:start="145:9" pos:end="145:12">read</name><argument_list pos:start="145:13" pos:end="145:41">(<argument pos:start="145:14" pos:end="145:15"><expr pos:start="145:14" pos:end="145:15"><name pos:start="145:14" pos:end="145:15">fd</name></expr></argument>, <argument pos:start="145:18" pos:end="145:24"><expr pos:start="145:18" pos:end="145:24"><name pos:start="145:18" pos:end="145:24">strings</name></expr></argument>, <argument pos:start="145:27" pos:end="145:40"><expr pos:start="145:27" pos:end="145:40"><name pos:start="145:27" pos:end="145:40"><name pos:start="145:27" pos:end="145:32">strtab</name><operator pos:start="145:33" pos:end="145:33">.</operator><name pos:start="145:34" pos:end="145:40">sh_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="145:43" pos:end="145:44">!=</operator> <name pos:start="145:46" pos:end="145:59"><name pos:start="145:46" pos:end="145:51">strtab</name><operator pos:start="145:52" pos:end="145:52">.</operator><name pos:start="145:53" pos:end="145:59">sh_size</name></name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:15"><block_content pos:start="147:9" pos:end="147:15">

        <return pos:start="147:9" pos:end="147:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="149:5" pos:end="152:0"><expr pos:start="149:5" pos:end="149:29"><name pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:21">disas_num_syms</name></name> <operator pos:start="149:23" pos:end="149:23">=</operator> <name pos:start="149:25" pos:end="149:29">nsyms</name></expr>;</expr_stmt>

<cpp:if pos:start="151:1" pos:end="151:27">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:13">ELF_CLASS</name> <operator pos:start="151:15" pos:end="151:16">==</operator> <name pos:start="151:18" pos:end="151:27">ELFCLASS32</name></expr></cpp:if>

    <expr_stmt pos:start="153:5" pos:end="153:33"><expr pos:start="153:5" pos:end="153:32"><name pos:start="153:5" pos:end="153:25"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:19">disas_symtab</name><operator pos:start="153:20" pos:end="153:20">.</operator><name pos:start="153:21" pos:end="153:25">elf32</name></name> <operator pos:start="153:27" pos:end="153:27">=</operator> <name pos:start="153:29" pos:end="153:32">syms</name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="158:0"><expr pos:start="155:5" pos:end="155:55"><name pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:20">lookup_symbol</name></name> <operator pos:start="155:22" pos:end="155:22">=</operator> <operator pos:start="155:24" pos:end="155:24">(</operator><name pos:start="155:25" pos:end="155:39">lookup_symbol_t</name><operator pos:start="155:40" pos:end="155:40">)</operator><name pos:start="155:41" pos:end="155:55">lookup_symbolxx</name></expr>;</expr_stmt>

<cpp:else pos:start="157:1" pos:end="157:5">#<cpp:directive pos:start="157:2" pos:end="157:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="159:5" pos:end="159:33"><expr pos:start="159:5" pos:end="159:32"><name pos:start="159:5" pos:end="159:25"><name pos:start="159:5" pos:end="159:5">s</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:19">disas_symtab</name><operator pos:start="159:20" pos:end="159:20">.</operator><name pos:start="159:21" pos:end="159:25">elf64</name></name> <operator pos:start="159:27" pos:end="159:27">=</operator> <name pos:start="159:29" pos:end="159:32">syms</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="164:0"><expr pos:start="161:5" pos:end="161:55"><name pos:start="161:5" pos:end="161:20"><name pos:start="161:5" pos:end="161:5">s</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:20">lookup_symbol</name></name> <operator pos:start="161:22" pos:end="161:22">=</operator> <operator pos:start="161:24" pos:end="161:24">(</operator><name pos:start="161:25" pos:end="161:39">lookup_symbol_t</name><operator pos:start="161:40" pos:end="161:40">)</operator><name pos:start="161:41" pos:end="161:55">lookup_symbolxx</name></expr>;</expr_stmt>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="165:5" pos:end="165:23"><expr pos:start="165:5" pos:end="165:22"><name pos:start="165:5" pos:end="165:11"><name pos:start="165:5" pos:end="165:5">s</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:11">next</name></name> <operator pos:start="165:13" pos:end="165:13">=</operator> <name pos:start="165:15" pos:end="165:22">syminfos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:17"><expr pos:start="167:5" pos:end="167:16"><name pos:start="167:5" pos:end="167:12">syminfos</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <name pos:start="167:16" pos:end="167:16">s</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
