<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12222.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">init_entropy_decoder</name><parameter_list pos:start="1:33" pos:end="1:49">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">APEContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:30">

    <comment type="block" pos:start="5:5" pos:end="5:22">/* Read the CRC */</comment>

    <expr_stmt pos:start="7:5" pos:end="7:46"><expr pos:start="7:5" pos:end="7:45"><name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">ctx</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:12">CRC</name></name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:45"><name pos:start="7:16" pos:end="7:34">bytestream_get_be32</name><argument_list pos:start="7:35" pos:end="7:45">(<argument pos:start="7:36" pos:end="7:44"><expr pos:start="7:36" pos:end="7:44"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:44"><name pos:start="7:37" pos:end="7:39">ctx</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:44">ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:44">/* Read the frame flags if they exist */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:7">ctx</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:19">frameflags</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:61">(<expr pos:start="15:9" pos:end="15:60"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:25"><name pos:start="15:10" pos:end="15:12">ctx</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:25">fileversion</name></name> <operator pos:start="15:27" pos:end="15:27">&gt;</operator> <literal type="number" pos:start="15:29" pos:end="15:32">3820</literal><operator pos:start="15:33" pos:end="15:33">)</operator> <operator pos:start="15:35" pos:end="15:36">&amp;&amp;</operator> <operator pos:start="15:38" pos:end="15:38">(</operator><name pos:start="15:39" pos:end="15:46"><name pos:start="15:39" pos:end="15:41">ctx</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:46">CRC</name></name> <operator pos:start="15:48" pos:end="15:48">&amp;</operator> <literal type="number" pos:start="15:50" pos:end="15:59">0x80000000</literal><operator pos:start="15:60" pos:end="15:60">)</operator></expr>)</condition> <block pos:start="15:63" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:57">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">CRC</name></name> <operator pos:start="17:18" pos:end="17:19">&amp;=</operator> <operator pos:start="17:21" pos:end="17:21">~</operator><literal type="number" pos:start="17:22" pos:end="17:31">0x80000000</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:57"><expr pos:start="21:9" pos:end="21:56"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:23">frameflags</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:56"><name pos:start="21:27" pos:end="21:45">bytestream_get_be32</name><argument_list pos:start="21:46" pos:end="21:56">(<argument pos:start="21:47" pos:end="21:55"><expr pos:start="21:47" pos:end="21:55"><operator pos:start="21:47" pos:end="21:47">&amp;</operator><name pos:start="21:48" pos:end="21:55"><name pos:start="21:48" pos:end="21:50">ctx</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:55">ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:58">/* Keep a count of the blocks decoded in this frame */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:22">blocksdecoded</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:37">/* Initialize the rice structs */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:14">riceX</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:16">k</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <literal type="number" pos:start="35:20" pos:end="35:21">10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:14">riceX</name><operator pos:start="37:15" pos:end="37:15">.</operator><name pos:start="37:16" pos:end="37:19">ksum</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:23">(</operator><literal type="number" pos:start="37:24" pos:end="37:24">1</literal> <operator pos:start="37:26" pos:end="37:27">&lt;&lt;</operator> <name pos:start="37:29" pos:end="37:40"><name pos:start="37:29" pos:end="37:31">ctx</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:38">riceX</name><operator pos:start="37:39" pos:end="37:39">.</operator><name pos:start="37:40" pos:end="37:40">k</name></name><operator pos:start="37:41" pos:end="37:41">)</operator> <operator pos:start="37:43" pos:end="37:43">*</operator> <literal type="number" pos:start="37:45" pos:end="37:46">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:7">ctx</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:14">riceY</name><operator pos:start="39:15" pos:end="39:15">.</operator><name pos:start="39:16" pos:end="39:16">k</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:21">10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:14">riceY</name><operator pos:start="41:15" pos:end="41:15">.</operator><name pos:start="41:16" pos:end="41:19">ksum</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">(</operator><literal type="number" pos:start="41:24" pos:end="41:24">1</literal> <operator pos:start="41:26" pos:end="41:27">&lt;&lt;</operator> <name pos:start="41:29" pos:end="41:40"><name pos:start="41:29" pos:end="41:31">ctx</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:38">riceY</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:40">k</name></name><operator pos:start="41:41" pos:end="41:41">)</operator> <operator pos:start="41:43" pos:end="41:43">*</operator> <literal type="number" pos:start="41:45" pos:end="41:46">16</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:48">/* The first 8 bits of input are ignored. */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:15"><expr pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:7">ctx</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:12">ptr</name></name><operator pos:start="47:13" pos:end="47:14">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><call pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:24">range_start_decoding</name><argument_list pos:start="51:25" pos:end="51:29">(<argument pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
