<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2939.c" pos:tabs="8"><function pos:start="1:1" pos:end="302:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">msmpeg4_decode_picture_header</name><parameter_list pos:start="1:34" pos:end="1:53">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">MpegEncContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="302:13">{<block_content pos:start="5:5" pos:end="302:13">

    <decl_stmt pos:start="5:5" pos:end="26:0"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">code</name></decl>;</decl_stmt>



<cpp:if pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:5"><literal type="number" pos:start="9:5" pos:end="9:5">0</literal></expr></cpp:if>

{

int i;

for(i=0; i&lt;s-&gt;gb.size_in_bits; i++)

    printf("%d", get_bits1(&amp;s-&gt;gb));

<comment type="line" pos:start="19:1" pos:end="19:24">//    get_bits1(&amp;s-&gt;gb);</comment>

printf("END\n");



<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="29:5" pos:end="302:13"><if pos:start="29:5" pos:end="302:13">if<condition pos:start="29:7" pos:end="29:29">(<expr pos:start="29:8" pos:end="29:28"><name pos:start="29:8" pos:end="29:25"><name pos:start="29:8" pos:end="29:8">s</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:25">msmpeg4_version</name></name><operator pos:start="29:26" pos:end="29:27">==</operator><literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>)</condition><block pos:start="29:30" pos:end="302:13">{<block_content pos:start="31:9" pos:end="302:13">

        <decl_stmt pos:start="31:9" pos:end="31:28"><decl pos:start="31:9" pos:end="31:22"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:22">start_code</name></decl>, <decl pos:start="31:25" pos:end="31:27"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:25" pos:end="31:27">num</name></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:18">start_code</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <operator pos:start="33:22" pos:end="33:22">(</operator><call pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:30">get_bits</name><argument_list pos:start="33:31" pos:end="33:42">(<argument pos:start="33:32" pos:end="33:37"><expr pos:start="33:32" pos:end="33:37"><operator pos:start="33:32" pos:end="33:32">&amp;</operator><name pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:37">gb</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><literal type="number" pos:start="33:40" pos:end="33:41">16</literal></expr></argument>)</argument_list></call><operator pos:start="33:43" pos:end="33:44">&lt;&lt;</operator><literal type="number" pos:start="33:45" pos:end="33:46">16</literal><operator pos:start="33:47" pos:end="33:47">)</operator> <operator pos:start="33:49" pos:end="33:49">|</operator> <call pos:start="33:51" pos:end="33:70"><name pos:start="33:51" pos:end="33:58">get_bits</name><argument_list pos:start="33:59" pos:end="33:70">(<argument pos:start="33:60" pos:end="33:65"><expr pos:start="33:60" pos:end="33:65"><operator pos:start="33:60" pos:end="33:60">&amp;</operator><name pos:start="33:61" pos:end="33:65"><name pos:start="33:61" pos:end="33:61">s</name><operator pos:start="33:62" pos:end="33:63">-&gt;</operator><name pos:start="33:64" pos:end="33:65">gb</name></name></expr></argument>, <argument pos:start="33:68" pos:end="33:69"><expr pos:start="33:68" pos:end="33:69"><literal type="number" pos:start="33:68" pos:end="33:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="302:13"><if pos:start="35:9" pos:end="302:13">if<condition pos:start="35:11" pos:end="35:34">(<expr pos:start="35:12" pos:end="35:33"><name pos:start="35:12" pos:end="35:21">start_code</name><operator pos:start="35:22" pos:end="35:23">!=</operator><literal type="number" pos:start="35:24" pos:end="35:33">0x00000100</literal></expr>)</condition><block pos:start="35:35" pos:end="302:13">{<block_content pos:start="37:13" pos:end="302:13">

            <expr_stmt pos:start="37:13" pos:end="37:51"><expr pos:start="37:13" pos:end="37:50"><call pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="37:50">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">stderr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:49"><expr pos:start="37:29" pos:end="37:49"><literal type="string" pos:start="37:29" pos:end="37:49">"invalid startcode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:11">num</name><operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:32"><name pos:start="43:14" pos:end="43:21">get_bits</name><argument_list pos:start="43:22" pos:end="43:32">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">gb</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="43:35" pos:end="43:52">// frame number */</comment>




    <expr_stmt pos:start="48:5" pos:end="48:43"><expr pos:start="48:5" pos:end="48:42"><name pos:start="48:5" pos:end="48:16"><name pos:start="48:5" pos:end="48:5">s</name><operator pos:start="48:6" pos:end="48:7">-&gt;</operator><name pos:start="48:8" pos:end="48:16">pict_type</name></name> <operator pos:start="48:18" pos:end="48:18">=</operator> <call pos:start="48:20" pos:end="48:38"><name pos:start="48:20" pos:end="48:27">get_bits</name><argument_list pos:start="48:28" pos:end="48:38">(<argument pos:start="48:29" pos:end="48:34"><expr pos:start="48:29" pos:end="48:34"><operator pos:start="48:29" pos:end="48:29">&amp;</operator><name pos:start="48:30" pos:end="48:34"><name pos:start="48:30" pos:end="48:30">s</name><operator pos:start="48:31" pos:end="48:32">-&gt;</operator><name pos:start="48:33" pos:end="48:34">gb</name></name></expr></argument>, <argument pos:start="48:37" pos:end="48:37"><expr pos:start="48:37" pos:end="48:37"><literal type="number" pos:start="48:37" pos:end="48:37">2</literal></expr></argument>)</argument_list></call> <operator pos:start="48:40" pos:end="48:40">+</operator> <literal type="number" pos:start="48:42" pos:end="48:42">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="50:5" pos:end="302:13"><if pos:start="50:5" pos:end="302:13">if <condition pos:start="50:8" pos:end="52:31">(<expr pos:start="50:9" pos:end="52:30"><name pos:start="50:9" pos:end="50:20"><name pos:start="50:9" pos:end="50:9">s</name><operator pos:start="50:10" pos:end="50:11">-&gt;</operator><name pos:start="50:12" pos:end="50:20">pict_type</name></name> <operator pos:start="50:22" pos:end="50:23">!=</operator> <name pos:start="50:25" pos:end="50:30">I_TYPE</name> <operator pos:start="50:32" pos:end="50:33">&amp;&amp;</operator>

        <name pos:start="52:9" pos:end="52:20"><name pos:start="52:9" pos:end="52:9">s</name><operator pos:start="52:10" pos:end="52:11">-&gt;</operator><name pos:start="52:12" pos:end="52:20">pict_type</name></name> <operator pos:start="52:22" pos:end="52:23">!=</operator> <name pos:start="52:25" pos:end="52:30">P_TYPE</name></expr>)</condition><block pos:start="52:32" pos:end="302:13">{<block_content pos:start="54:9" pos:end="302:13">

        <expr_stmt pos:start="54:9" pos:end="70:0"><expr pos:start="54:9" pos:end="54:49"><call pos:start="54:9" pos:end="54:49"><name pos:start="54:9" pos:end="54:15">fprintf</name><argument_list pos:start="54:16" pos:end="54:49">(<argument pos:start="54:17" pos:end="54:22"><expr pos:start="54:17" pos:end="54:22"><name pos:start="54:17" pos:end="54:22">stderr</name></expr></argument>, <argument pos:start="54:25" pos:end="54:48"><expr pos:start="54:25" pos:end="54:48"><literal type="string" pos:start="54:25" pos:end="54:48">"invalid picture type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="58:1" pos:end="58:5">#<cpp:directive pos:start="58:2" pos:end="58:3">if</cpp:directive> <expr pos:start="58:5" pos:end="58:5"><literal type="number" pos:start="58:5" pos:end="58:5">0</literal></expr></cpp:if>

{

    static int had_i=0;

    if(s-&gt;pict_type == I_TYPE) had_i=1;

    if(!had_i) return -1;


<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:13">qscale</name></name> <operator pos:start="71:15" pos:end="71:15">=</operator> <call pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:24">get_bits</name><argument_list pos:start="71:25" pos:end="71:35">(<argument pos:start="71:26" pos:end="71:31"><expr pos:start="71:26" pos:end="71:31"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:31"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:31">gb</name></name></expr></argument>, <argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><literal type="number" pos:start="71:34" pos:end="71:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <if_stmt pos:start="79:5" pos:end="302:13"><if pos:start="79:5" pos:end="302:13">if <condition pos:start="79:8" pos:end="79:31">(<expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:20">pict_type</name></name> <operator pos:start="79:22" pos:end="79:23">==</operator> <name pos:start="79:25" pos:end="79:30">I_TYPE</name></expr>)</condition> <block pos:start="79:33" pos:end="302:13">{<block_content pos:start="81:9" pos:end="302:13">

        <expr_stmt pos:start="81:9" pos:end="81:35"><expr pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:12">code</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:34"><name pos:start="81:16" pos:end="81:23">get_bits</name><argument_list pos:start="81:24" pos:end="81:34">(<argument pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:30"><operator pos:start="81:25" pos:end="81:25">&amp;</operator><name pos:start="81:26" pos:end="81:30"><name pos:start="81:26" pos:end="81:26">s</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:30">gb</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:33"><expr pos:start="81:33" pos:end="81:33"><literal type="number" pos:start="81:33" pos:end="81:33">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

        <if_stmt pos:start="83:9" pos:end="302:13"><if pos:start="83:9" pos:end="302:13">if<condition pos:start="83:11" pos:end="83:33">(<expr pos:start="83:12" pos:end="83:32"><name pos:start="83:12" pos:end="83:29"><name pos:start="83:12" pos:end="83:12">s</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:29">msmpeg4_version</name></name><operator pos:start="83:30" pos:end="83:31">==</operator><literal type="number" pos:start="83:32" pos:end="83:32">1</literal></expr>)</condition><block pos:start="83:34" pos:end="302:13">{<block_content pos:start="85:13" pos:end="302:13">

            <if_stmt pos:start="85:13" pos:end="302:13"><if pos:start="85:13" pos:end="95:9">if<condition pos:start="85:15" pos:end="85:44">(<expr pos:start="85:16" pos:end="85:43"><name pos:start="85:16" pos:end="85:19">code</name><operator pos:start="85:20" pos:end="85:21">==</operator><literal type="number" pos:start="85:22" pos:end="85:22">0</literal> <operator pos:start="85:24" pos:end="85:25">||</operator> <name pos:start="85:27" pos:end="85:30">code</name><operator pos:start="85:31" pos:end="85:31">&gt;</operator><name pos:start="85:32" pos:end="85:43"><name pos:start="85:32" pos:end="85:32">s</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:43">mb_height</name></name></expr>)</condition><block pos:start="85:45" pos:end="95:9">{<block_content pos:start="87:17" pos:end="93:35">

                <expr_stmt pos:start="87:17" pos:end="87:67"><expr pos:start="87:17" pos:end="87:66"><call pos:start="87:17" pos:end="87:66"><name pos:start="87:17" pos:end="87:23">fprintf</name><argument_list pos:start="87:24" pos:end="87:66">(<argument pos:start="87:25" pos:end="87:30"><expr pos:start="87:25" pos:end="87:30"><name pos:start="87:25" pos:end="87:30">stderr</name></expr></argument>, <argument pos:start="87:33" pos:end="87:59"><expr pos:start="87:33" pos:end="87:59"><literal type="string" pos:start="87:33" pos:end="87:59">"invalid slice height %d\n"</literal></expr></argument>, <argument pos:start="87:62" pos:end="87:65"><expr pos:start="87:62" pos:end="87:65"><name pos:start="87:62" pos:end="87:65">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:27">slice_height</name></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="93:34">code</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="95:10" pos:end="302:13">else<block pos:start="95:14" pos:end="302:13">{<block_content pos:start="99:13" pos:end="302:13">

            <comment type="block" pos:start="97:13" pos:end="97:56">/* 0x17: one slice, 0x18: two slices, ... */</comment>

            <if_stmt pos:start="99:13" pos:end="302:13"><if pos:start="99:13" pos:end="302:13">if <condition pos:start="99:16" pos:end="99:28">(<expr pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:20">code</name> <operator pos:start="99:22" pos:end="99:22">&lt;</operator> <literal type="number" pos:start="99:24" pos:end="99:27">0x17</literal></expr>)</condition><block pos:start="99:29" pos:end="302:13">{<block_content pos:start="101:17" pos:end="302:13">

                <expr_stmt pos:start="101:17" pos:end="101:68"><expr pos:start="101:17" pos:end="101:67"><call pos:start="101:17" pos:end="101:67"><name pos:start="101:17" pos:end="101:23">fprintf</name><argument_list pos:start="101:24" pos:end="101:67">(<argument pos:start="101:25" pos:end="101:30"><expr pos:start="101:25" pos:end="101:30"><name pos:start="101:25" pos:end="101:30">stderr</name></expr></argument>, <argument pos:start="101:33" pos:end="101:60"><expr pos:start="101:33" pos:end="101:60"><literal type="string" pos:start="101:33" pos:end="101:60">"error, slice code was %X\n"</literal></expr></argument>, <argument pos:start="101:63" pos:end="101:66"><expr pos:start="101:63" pos:end="101:66"><name pos:start="101:63" pos:end="101:66">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="107:13" pos:end="107:59"><expr pos:start="107:13" pos:end="107:58"><name pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:27">slice_height</name></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <name pos:start="107:31" pos:end="107:42"><name pos:start="107:31" pos:end="107:31">s</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:42">mb_height</name></name> <operator pos:start="107:44" pos:end="107:44">/</operator> <operator pos:start="107:46" pos:end="107:46">(</operator><name pos:start="107:47" pos:end="107:50">code</name> <operator pos:start="107:52" pos:end="107:52">-</operator> <literal type="number" pos:start="107:54" pos:end="107:57">0x16</literal><operator pos:start="107:58" pos:end="107:58">)</operator></expr>;</expr_stmt>




        <switch pos:start="112:9" pos:end="302:13">switch<condition pos:start="112:15" pos:end="112:34">(<expr pos:start="112:16" pos:end="112:33"><name pos:start="112:16" pos:end="112:33"><name pos:start="112:16" pos:end="112:16">s</name><operator pos:start="112:17" pos:end="112:18">-&gt;</operator><name pos:start="112:19" pos:end="112:33">msmpeg4_version</name></name></expr>)</condition><block pos:start="112:35" pos:end="302:13">{<block_content pos:start="114:9" pos:end="302:13">

        <case pos:start="114:9" pos:end="114:15">case <expr pos:start="114:14" pos:end="114:14"><literal type="number" pos:start="114:14" pos:end="114:14">1</literal></expr>:</case>

        <case pos:start="116:9" pos:end="116:15">case <expr pos:start="116:14" pos:end="116:14"><literal type="number" pos:start="116:14" pos:end="116:14">2</literal></expr>:</case>

            <expr_stmt pos:start="118:13" pos:end="118:41"><expr pos:start="118:13" pos:end="118:40"><name pos:start="118:13" pos:end="118:36"><name pos:start="118:13" pos:end="118:13">s</name><operator pos:start="118:14" pos:end="118:15">-&gt;</operator><name pos:start="118:16" pos:end="118:36">rl_chroma_table_index</name></name> <operator pos:start="118:38" pos:end="118:38">=</operator> <literal type="number" pos:start="118:40" pos:end="118:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="120:13" pos:end="120:34"><expr pos:start="120:13" pos:end="120:33"><name pos:start="120:13" pos:end="120:29"><name pos:start="120:13" pos:end="120:13">s</name><operator pos:start="120:14" pos:end="120:15">-&gt;</operator><name pos:start="120:16" pos:end="120:29">rl_table_index</name></name> <operator pos:start="120:31" pos:end="120:31">=</operator> <literal type="number" pos:start="120:33" pos:end="120:33">2</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="124:13" pos:end="124:34"><expr pos:start="124:13" pos:end="124:33"><name pos:start="124:13" pos:end="124:29"><name pos:start="124:13" pos:end="124:13">s</name><operator pos:start="124:14" pos:end="124:15">-&gt;</operator><name pos:start="124:16" pos:end="124:29">dc_table_index</name></name> <operator pos:start="124:31" pos:end="124:31">=</operator> <literal type="number" pos:start="124:33" pos:end="124:33">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="124:36" pos:end="124:45">//not used</comment>

            <break pos:start="126:13" pos:end="126:18">break;</break>

        <case pos:start="128:9" pos:end="128:15">case <expr pos:start="128:14" pos:end="128:14"><literal type="number" pos:start="128:14" pos:end="128:14">3</literal></expr>:</case>

            <expr_stmt pos:start="130:13" pos:end="130:57"><expr pos:start="130:13" pos:end="130:56"><name pos:start="130:13" pos:end="130:36"><name pos:start="130:13" pos:end="130:13">s</name><operator pos:start="130:14" pos:end="130:15">-&gt;</operator><name pos:start="130:16" pos:end="130:36">rl_chroma_table_index</name></name> <operator pos:start="130:38" pos:end="130:38">=</operator> <call pos:start="130:40" pos:end="130:56"><name pos:start="130:40" pos:end="130:48">decode012</name><argument_list pos:start="130:49" pos:end="130:56">(<argument pos:start="130:50" pos:end="130:55"><expr pos:start="130:50" pos:end="130:55"><operator pos:start="130:50" pos:end="130:50">&amp;</operator><name pos:start="130:51" pos:end="130:55"><name pos:start="130:51" pos:end="130:51">s</name><operator pos:start="130:52" pos:end="130:53">-&gt;</operator><name pos:start="130:54" pos:end="130:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="132:13" pos:end="132:50"><expr pos:start="132:13" pos:end="132:49"><name pos:start="132:13" pos:end="132:29"><name pos:start="132:13" pos:end="132:13">s</name><operator pos:start="132:14" pos:end="132:15">-&gt;</operator><name pos:start="132:16" pos:end="132:29">rl_table_index</name></name> <operator pos:start="132:31" pos:end="132:31">=</operator> <call pos:start="132:33" pos:end="132:49"><name pos:start="132:33" pos:end="132:41">decode012</name><argument_list pos:start="132:42" pos:end="132:49">(<argument pos:start="132:43" pos:end="132:48"><expr pos:start="132:43" pos:end="132:48"><operator pos:start="132:43" pos:end="132:43">&amp;</operator><name pos:start="132:44" pos:end="132:48"><name pos:start="132:44" pos:end="132:44">s</name><operator pos:start="132:45" pos:end="132:46">-&gt;</operator><name pos:start="132:47" pos:end="132:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="136:13" pos:end="136:50"><expr pos:start="136:13" pos:end="136:49"><name pos:start="136:13" pos:end="136:29"><name pos:start="136:13" pos:end="136:13">s</name><operator pos:start="136:14" pos:end="136:15">-&gt;</operator><name pos:start="136:16" pos:end="136:29">dc_table_index</name></name> <operator pos:start="136:31" pos:end="136:31">=</operator> <call pos:start="136:33" pos:end="136:49"><name pos:start="136:33" pos:end="136:41">get_bits1</name><argument_list pos:start="136:42" pos:end="136:49">(<argument pos:start="136:43" pos:end="136:48"><expr pos:start="136:43" pos:end="136:48"><operator pos:start="136:43" pos:end="136:43">&amp;</operator><name pos:start="136:44" pos:end="136:48"><name pos:start="136:44" pos:end="136:44">s</name><operator pos:start="136:45" pos:end="136:46">-&gt;</operator><name pos:start="136:47" pos:end="136:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="138:13" pos:end="138:18">break;</break>

        <case pos:start="140:9" pos:end="140:15">case <expr pos:start="140:14" pos:end="140:14"><literal type="number" pos:start="140:14" pos:end="140:14">4</literal></expr>:</case>

            <expr_stmt pos:start="142:13" pos:end="142:57"><expr pos:start="142:13" pos:end="142:56"><call pos:start="142:13" pos:end="142:56"><name pos:start="142:13" pos:end="142:37">msmpeg4_decode_ext_header</name><argument_list pos:start="142:38" pos:end="142:56">(<argument pos:start="142:39" pos:end="142:39"><expr pos:start="142:39" pos:end="142:39"><name pos:start="142:39" pos:end="142:39">s</name></expr></argument>, <argument pos:start="142:42" pos:end="142:55"><expr pos:start="142:42" pos:end="142:55"><operator pos:start="142:42" pos:end="142:42">(</operator><literal type="number" pos:start="142:43" pos:end="142:44">2</literal><operator pos:start="142:44" pos:end="142:44">+</operator><literal type="number" pos:start="142:45" pos:end="142:46">5</literal><operator pos:start="142:46" pos:end="142:46">+</operator><literal type="number" pos:start="142:47" pos:end="142:48">5</literal><operator pos:start="142:48" pos:end="142:48">+</operator><literal type="number" pos:start="142:49" pos:end="142:51">17</literal><operator pos:start="142:51" pos:end="142:51">+</operator><literal type="number" pos:start="142:52" pos:end="142:52">7</literal><operator pos:start="142:53" pos:end="142:53">)</operator><operator pos:start="142:54" pos:end="142:54">/</operator><literal type="number" pos:start="142:55" pos:end="142:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="146:13" pos:end="148:65"><if pos:start="146:13" pos:end="146:81">if<condition pos:start="146:15" pos:end="146:42">(<expr pos:start="146:16" pos:end="146:41"><name pos:start="146:16" pos:end="146:26"><name pos:start="146:16" pos:end="146:16">s</name><operator pos:start="146:17" pos:end="146:18">-&gt;</operator><name pos:start="146:19" pos:end="146:26">bit_rate</name></name> <operator pos:start="146:28" pos:end="146:28">&gt;</operator> <name pos:start="146:30" pos:end="146:41">MBAC_BITRATE</name></expr>)</condition><block type="pseudo" pos:start="146:44" pos:end="146:81"><block_content pos:start="146:44" pos:end="146:81"> <expr_stmt pos:start="146:44" pos:end="146:81"><expr pos:start="146:44" pos:end="146:80"><name pos:start="146:44" pos:end="146:61"><name pos:start="146:44" pos:end="146:44">s</name><operator pos:start="146:45" pos:end="146:46">-&gt;</operator><name pos:start="146:47" pos:end="146:61">per_mb_rl_table</name></name><operator pos:start="146:62" pos:end="146:62">=</operator> <call pos:start="146:64" pos:end="146:80"><name pos:start="146:64" pos:end="146:72">get_bits1</name><argument_list pos:start="146:73" pos:end="146:80">(<argument pos:start="146:74" pos:end="146:79"><expr pos:start="146:74" pos:end="146:79"><operator pos:start="146:74" pos:end="146:74">&amp;</operator><name pos:start="146:75" pos:end="146:79"><name pos:start="146:75" pos:end="146:75">s</name><operator pos:start="146:76" pos:end="146:77">-&gt;</operator><name pos:start="146:78" pos:end="146:79">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="148:13" pos:end="148:65">else<block type="pseudo" pos:start="148:44" pos:end="148:65"><block_content pos:start="148:44" pos:end="148:65">                           <expr_stmt pos:start="148:44" pos:end="148:65"><expr pos:start="148:44" pos:end="148:64"><name pos:start="148:44" pos:end="148:61"><name pos:start="148:44" pos:end="148:44">s</name><operator pos:start="148:45" pos:end="148:46">-&gt;</operator><name pos:start="148:47" pos:end="148:61">per_mb_rl_table</name></name><operator pos:start="148:62" pos:end="148:62">=</operator> <literal type="number" pos:start="148:64" pos:end="148:64">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

            <if_stmt pos:start="152:13" pos:end="302:13"><if pos:start="152:13" pos:end="184:5">if<condition pos:start="152:15" pos:end="152:35">(<expr pos:start="152:16" pos:end="152:34"><operator pos:start="152:16" pos:end="152:16">!</operator><name pos:start="152:17" pos:end="152:34"><name pos:start="152:17" pos:end="152:17">s</name><operator pos:start="152:18" pos:end="152:19">-&gt;</operator><name pos:start="152:20" pos:end="152:34">per_mb_rl_table</name></name></expr>)</condition><block pos:start="152:36" pos:end="184:5">{<block_content pos:start="154:17" pos:end="168:27">

                <expr_stmt pos:start="154:17" pos:end="154:61"><expr pos:start="154:17" pos:end="154:60"><name pos:start="154:17" pos:end="154:40"><name pos:start="154:17" pos:end="154:17">s</name><operator pos:start="154:18" pos:end="154:19">-&gt;</operator><name pos:start="154:20" pos:end="154:40">rl_chroma_table_index</name></name> <operator pos:start="154:42" pos:end="154:42">=</operator> <call pos:start="154:44" pos:end="154:60"><name pos:start="154:44" pos:end="154:52">decode012</name><argument_list pos:start="154:53" pos:end="154:60">(<argument pos:start="154:54" pos:end="154:59"><expr pos:start="154:54" pos:end="154:59"><operator pos:start="154:54" pos:end="154:54">&amp;</operator><name pos:start="154:55" pos:end="154:59"><name pos:start="154:55" pos:end="154:55">s</name><operator pos:start="154:56" pos:end="154:57">-&gt;</operator><name pos:start="154:58" pos:end="154:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="156:17" pos:end="156:54"><expr pos:start="156:17" pos:end="156:53"><name pos:start="156:17" pos:end="156:33"><name pos:start="156:17" pos:end="156:17">s</name><operator pos:start="156:18" pos:end="156:19">-&gt;</operator><name pos:start="156:20" pos:end="156:33">rl_table_index</name></name> <operator pos:start="156:35" pos:end="156:35">=</operator> <call pos:start="156:37" pos:end="156:53"><name pos:start="156:37" pos:end="156:45">decode012</name><argument_list pos:start="156:46" pos:end="156:53">(<argument pos:start="156:47" pos:end="156:52"><expr pos:start="156:47" pos:end="156:52"><operator pos:start="156:47" pos:end="156:47">&amp;</operator><name pos:start="156:48" pos:end="156:52"><name pos:start="156:48" pos:end="156:48">s</name><operator pos:start="156:49" pos:end="156:50">-&gt;</operator><name pos:start="156:51" pos:end="156:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <expr_stmt pos:start="161:13" pos:end="161:50"><expr pos:start="161:13" pos:end="161:49"><name pos:start="161:13" pos:end="161:29"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:29">dc_table_index</name></name> <operator pos:start="161:31" pos:end="161:31">=</operator> <call pos:start="161:33" pos:end="161:49"><name pos:start="161:33" pos:end="161:41">get_bits1</name><argument_list pos:start="161:42" pos:end="161:49">(<argument pos:start="161:43" pos:end="161:48"><expr pos:start="161:43" pos:end="161:48"><operator pos:start="161:43" pos:end="161:43">&amp;</operator><name pos:start="161:44" pos:end="161:48"><name pos:start="161:44" pos:end="161:44">s</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:35"><expr pos:start="163:13" pos:end="163:34"><name pos:start="163:13" pos:end="163:31"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:31">inter_intra_pred</name></name><operator pos:start="163:32" pos:end="163:32">=</operator> <literal type="number" pos:start="163:34" pos:end="163:34">0</literal></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>


        <expr_stmt pos:start="168:9" pos:end="168:27"><expr pos:start="168:9" pos:end="168:26"><name pos:start="168:9" pos:end="168:22"><name pos:start="168:9" pos:end="168:9">s</name><operator pos:start="168:10" pos:end="168:11">-&gt;</operator><name pos:start="168:12" pos:end="168:22">no_rounding</name></name> <operator pos:start="168:24" pos:end="168:24">=</operator> <literal type="number" pos:start="168:26" pos:end="168:26">1</literal></expr>;</expr_stmt>

<comment type="block" pos:start="170:1" pos:end="182:35">/*	printf("qscale:%d rlc:%d rl:%d dc:%d mbrl:%d slice:%d   \n", 

		s-&gt;qscale,

		s-&gt;rl_chroma_table_index,

		s-&gt;rl_table_index, 

		s-&gt;dc_table_index,

                s-&gt;per_mb_rl_table,

                s-&gt;slice_height);*/</comment>

    </block_content>}</block></if> <else pos:start="184:7" pos:end="302:13">else <block pos:start="184:12" pos:end="302:13">{<block_content pos:start="186:9" pos:end="302:13">

        <switch pos:start="186:9" pos:end="302:13">switch<condition pos:start="186:15" pos:end="186:34">(<expr pos:start="186:16" pos:end="186:33"><name pos:start="186:16" pos:end="186:33"><name pos:start="186:16" pos:end="186:16">s</name><operator pos:start="186:17" pos:end="186:18">-&gt;</operator><name pos:start="186:19" pos:end="186:33">msmpeg4_version</name></name></expr>)</condition><block pos:start="186:35" pos:end="302:13">{<block_content pos:start="188:9" pos:end="302:13">

        <case pos:start="188:9" pos:end="188:15">case <expr pos:start="188:14" pos:end="188:14"><literal type="number" pos:start="188:14" pos:end="188:14">1</literal></expr>:</case>

        <case pos:start="190:9" pos:end="190:15">case <expr pos:start="190:14" pos:end="190:14"><literal type="number" pos:start="190:14" pos:end="190:14">2</literal></expr>:</case>

            <if_stmt pos:start="192:13" pos:end="198:56"><if pos:start="192:13" pos:end="194:40">if<condition pos:start="192:15" pos:end="192:37">(<expr pos:start="192:16" pos:end="192:36"><name pos:start="192:16" pos:end="192:33"><name pos:start="192:16" pos:end="192:16">s</name><operator pos:start="192:17" pos:end="192:18">-&gt;</operator><name pos:start="192:19" pos:end="192:33">msmpeg4_version</name></name><operator pos:start="192:34" pos:end="192:35">==</operator><literal type="number" pos:start="192:36" pos:end="192:36">1</literal></expr>)</condition><block type="pseudo" pos:start="194:17" pos:end="194:40"><block_content pos:start="194:17" pos:end="194:40">

                <expr_stmt pos:start="194:17" pos:end="194:40"><expr pos:start="194:17" pos:end="194:39"><name pos:start="194:17" pos:end="194:35"><name pos:start="194:17" pos:end="194:17">s</name><operator pos:start="194:18" pos:end="194:19">-&gt;</operator><name pos:start="194:20" pos:end="194:35">use_skip_mb_code</name></name> <operator pos:start="194:37" pos:end="194:37">=</operator> <literal type="number" pos:start="194:39" pos:end="194:39">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="196:13" pos:end="198:56">else<block type="pseudo" pos:start="198:17" pos:end="198:56"><block_content pos:start="198:17" pos:end="198:56">

                <expr_stmt pos:start="198:17" pos:end="198:56"><expr pos:start="198:17" pos:end="198:55"><name pos:start="198:17" pos:end="198:35"><name pos:start="198:17" pos:end="198:17">s</name><operator pos:start="198:18" pos:end="198:19">-&gt;</operator><name pos:start="198:20" pos:end="198:35">use_skip_mb_code</name></name> <operator pos:start="198:37" pos:end="198:37">=</operator> <call pos:start="198:39" pos:end="198:55"><name pos:start="198:39" pos:end="198:47">get_bits1</name><argument_list pos:start="198:48" pos:end="198:55">(<argument pos:start="198:49" pos:end="198:54"><expr pos:start="198:49" pos:end="198:54"><operator pos:start="198:49" pos:end="198:49">&amp;</operator><name pos:start="198:50" pos:end="198:54"><name pos:start="198:50" pos:end="198:50">s</name><operator pos:start="198:51" pos:end="198:52">-&gt;</operator><name pos:start="198:53" pos:end="198:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="200:13" pos:end="200:34"><expr pos:start="200:13" pos:end="200:33"><name pos:start="200:13" pos:end="200:29"><name pos:start="200:13" pos:end="200:13">s</name><operator pos:start="200:14" pos:end="200:15">-&gt;</operator><name pos:start="200:16" pos:end="200:29">rl_table_index</name></name> <operator pos:start="200:31" pos:end="200:31">=</operator> <literal type="number" pos:start="200:33" pos:end="200:33">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="202:13" pos:end="202:57"><expr pos:start="202:13" pos:end="202:56"><name pos:start="202:13" pos:end="202:36"><name pos:start="202:13" pos:end="202:13">s</name><operator pos:start="202:14" pos:end="202:15">-&gt;</operator><name pos:start="202:16" pos:end="202:36">rl_chroma_table_index</name></name> <operator pos:start="202:38" pos:end="202:38">=</operator> <name pos:start="202:40" pos:end="202:56"><name pos:start="202:40" pos:end="202:40">s</name><operator pos:start="202:41" pos:end="202:42">-&gt;</operator><name pos:start="202:43" pos:end="202:56">rl_table_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="204:13" pos:end="204:34"><expr pos:start="204:13" pos:end="204:33"><name pos:start="204:13" pos:end="204:29"><name pos:start="204:13" pos:end="204:13">s</name><operator pos:start="204:14" pos:end="204:15">-&gt;</operator><name pos:start="204:16" pos:end="204:29">dc_table_index</name></name> <operator pos:start="204:31" pos:end="204:31">=</operator> <literal type="number" pos:start="204:33" pos:end="204:33">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="204:36" pos:end="204:45">//not used</comment>

            <expr_stmt pos:start="206:13" pos:end="206:34"><expr pos:start="206:13" pos:end="206:33"><name pos:start="206:13" pos:end="206:29"><name pos:start="206:13" pos:end="206:13">s</name><operator pos:start="206:14" pos:end="206:15">-&gt;</operator><name pos:start="206:16" pos:end="206:29">mv_table_index</name></name> <operator pos:start="206:31" pos:end="206:31">=</operator> <literal type="number" pos:start="206:33" pos:end="206:33">0</literal></expr>;</expr_stmt>

            <break pos:start="208:13" pos:end="208:18">break;</break>

        <case pos:start="210:9" pos:end="210:15">case <expr pos:start="210:14" pos:end="210:14"><literal type="number" pos:start="210:14" pos:end="210:14">3</literal></expr>:</case>

            <expr_stmt pos:start="212:13" pos:end="212:52"><expr pos:start="212:13" pos:end="212:51"><name pos:start="212:13" pos:end="212:31"><name pos:start="212:13" pos:end="212:13">s</name><operator pos:start="212:14" pos:end="212:15">-&gt;</operator><name pos:start="212:16" pos:end="212:31">use_skip_mb_code</name></name> <operator pos:start="212:33" pos:end="212:33">=</operator> <call pos:start="212:35" pos:end="212:51"><name pos:start="212:35" pos:end="212:43">get_bits1</name><argument_list pos:start="212:44" pos:end="212:51">(<argument pos:start="212:45" pos:end="212:50"><expr pos:start="212:45" pos:end="212:50"><operator pos:start="212:45" pos:end="212:45">&amp;</operator><name pos:start="212:46" pos:end="212:50"><name pos:start="212:46" pos:end="212:46">s</name><operator pos:start="212:47" pos:end="212:48">-&gt;</operator><name pos:start="212:49" pos:end="212:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="214:13" pos:end="214:50"><expr pos:start="214:13" pos:end="214:49"><name pos:start="214:13" pos:end="214:29"><name pos:start="214:13" pos:end="214:13">s</name><operator pos:start="214:14" pos:end="214:15">-&gt;</operator><name pos:start="214:16" pos:end="214:29">rl_table_index</name></name> <operator pos:start="214:31" pos:end="214:31">=</operator> <call pos:start="214:33" pos:end="214:49"><name pos:start="214:33" pos:end="214:41">decode012</name><argument_list pos:start="214:42" pos:end="214:49">(<argument pos:start="214:43" pos:end="214:48"><expr pos:start="214:43" pos:end="214:48"><operator pos:start="214:43" pos:end="214:43">&amp;</operator><name pos:start="214:44" pos:end="214:48"><name pos:start="214:44" pos:end="214:44">s</name><operator pos:start="214:45" pos:end="214:46">-&gt;</operator><name pos:start="214:47" pos:end="214:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="216:13" pos:end="216:57"><expr pos:start="216:13" pos:end="216:56"><name pos:start="216:13" pos:end="216:36"><name pos:start="216:13" pos:end="216:13">s</name><operator pos:start="216:14" pos:end="216:15">-&gt;</operator><name pos:start="216:16" pos:end="216:36">rl_chroma_table_index</name></name> <operator pos:start="216:38" pos:end="216:38">=</operator> <name pos:start="216:40" pos:end="216:56"><name pos:start="216:40" pos:end="216:40">s</name><operator pos:start="216:41" pos:end="216:42">-&gt;</operator><name pos:start="216:43" pos:end="216:56">rl_table_index</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="220:13" pos:end="220:50"><expr pos:start="220:13" pos:end="220:49"><name pos:start="220:13" pos:end="220:29"><name pos:start="220:13" pos:end="220:13">s</name><operator pos:start="220:14" pos:end="220:15">-&gt;</operator><name pos:start="220:16" pos:end="220:29">dc_table_index</name></name> <operator pos:start="220:31" pos:end="220:31">=</operator> <call pos:start="220:33" pos:end="220:49"><name pos:start="220:33" pos:end="220:41">get_bits1</name><argument_list pos:start="220:42" pos:end="220:49">(<argument pos:start="220:43" pos:end="220:48"><expr pos:start="220:43" pos:end="220:48"><operator pos:start="220:43" pos:end="220:43">&amp;</operator><name pos:start="220:44" pos:end="220:48"><name pos:start="220:44" pos:end="220:44">s</name><operator pos:start="220:45" pos:end="220:46">-&gt;</operator><name pos:start="220:47" pos:end="220:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="224:13" pos:end="224:50"><expr pos:start="224:13" pos:end="224:49"><name pos:start="224:13" pos:end="224:29"><name pos:start="224:13" pos:end="224:13">s</name><operator pos:start="224:14" pos:end="224:15">-&gt;</operator><name pos:start="224:16" pos:end="224:29">mv_table_index</name></name> <operator pos:start="224:31" pos:end="224:31">=</operator> <call pos:start="224:33" pos:end="224:49"><name pos:start="224:33" pos:end="224:41">get_bits1</name><argument_list pos:start="224:42" pos:end="224:49">(<argument pos:start="224:43" pos:end="224:48"><expr pos:start="224:43" pos:end="224:48"><operator pos:start="224:43" pos:end="224:43">&amp;</operator><name pos:start="224:44" pos:end="224:48"><name pos:start="224:44" pos:end="224:44">s</name><operator pos:start="224:45" pos:end="224:46">-&gt;</operator><name pos:start="224:47" pos:end="224:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="226:13" pos:end="226:18">break;</break>

        <case pos:start="228:9" pos:end="228:15">case <expr pos:start="228:14" pos:end="228:14"><literal type="number" pos:start="228:14" pos:end="228:14">4</literal></expr>:</case>

            <expr_stmt pos:start="230:13" pos:end="230:52"><expr pos:start="230:13" pos:end="230:51"><name pos:start="230:13" pos:end="230:31"><name pos:start="230:13" pos:end="230:13">s</name><operator pos:start="230:14" pos:end="230:15">-&gt;</operator><name pos:start="230:16" pos:end="230:31">use_skip_mb_code</name></name> <operator pos:start="230:33" pos:end="230:33">=</operator> <call pos:start="230:35" pos:end="230:51"><name pos:start="230:35" pos:end="230:43">get_bits1</name><argument_list pos:start="230:44" pos:end="230:51">(<argument pos:start="230:45" pos:end="230:50"><expr pos:start="230:45" pos:end="230:50"><operator pos:start="230:45" pos:end="230:45">&amp;</operator><name pos:start="230:46" pos:end="230:50"><name pos:start="230:46" pos:end="230:46">s</name><operator pos:start="230:47" pos:end="230:48">-&gt;</operator><name pos:start="230:49" pos:end="230:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="234:13" pos:end="236:65"><if pos:start="234:13" pos:end="234:81">if<condition pos:start="234:15" pos:end="234:42">(<expr pos:start="234:16" pos:end="234:41"><name pos:start="234:16" pos:end="234:26"><name pos:start="234:16" pos:end="234:16">s</name><operator pos:start="234:17" pos:end="234:18">-&gt;</operator><name pos:start="234:19" pos:end="234:26">bit_rate</name></name> <operator pos:start="234:28" pos:end="234:28">&gt;</operator> <name pos:start="234:30" pos:end="234:41">MBAC_BITRATE</name></expr>)</condition><block type="pseudo" pos:start="234:44" pos:end="234:81"><block_content pos:start="234:44" pos:end="234:81"> <expr_stmt pos:start="234:44" pos:end="234:81"><expr pos:start="234:44" pos:end="234:80"><name pos:start="234:44" pos:end="234:61"><name pos:start="234:44" pos:end="234:44">s</name><operator pos:start="234:45" pos:end="234:46">-&gt;</operator><name pos:start="234:47" pos:end="234:61">per_mb_rl_table</name></name><operator pos:start="234:62" pos:end="234:62">=</operator> <call pos:start="234:64" pos:end="234:80"><name pos:start="234:64" pos:end="234:72">get_bits1</name><argument_list pos:start="234:73" pos:end="234:80">(<argument pos:start="234:74" pos:end="234:79"><expr pos:start="234:74" pos:end="234:79"><operator pos:start="234:74" pos:end="234:74">&amp;</operator><name pos:start="234:75" pos:end="234:79"><name pos:start="234:75" pos:end="234:75">s</name><operator pos:start="234:76" pos:end="234:77">-&gt;</operator><name pos:start="234:78" pos:end="234:79">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="236:13" pos:end="236:65">else<block type="pseudo" pos:start="236:44" pos:end="236:65"><block_content pos:start="236:44" pos:end="236:65">                           <expr_stmt pos:start="236:44" pos:end="236:65"><expr pos:start="236:44" pos:end="236:64"><name pos:start="236:44" pos:end="236:61"><name pos:start="236:44" pos:end="236:44">s</name><operator pos:start="236:45" pos:end="236:46">-&gt;</operator><name pos:start="236:47" pos:end="236:61">per_mb_rl_table</name></name><operator pos:start="236:62" pos:end="236:62">=</operator> <literal type="number" pos:start="236:64" pos:end="236:64">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="240:13" pos:end="302:13"><if pos:start="240:13" pos:end="302:13">if<condition pos:start="240:15" pos:end="240:35">(<expr pos:start="240:16" pos:end="240:34"><operator pos:start="240:16" pos:end="240:16">!</operator><name pos:start="240:17" pos:end="240:34"><name pos:start="240:17" pos:end="240:17">s</name><operator pos:start="240:18" pos:end="240:19">-&gt;</operator><name pos:start="240:20" pos:end="240:34">per_mb_rl_table</name></name></expr>)</condition><block pos:start="240:36" pos:end="302:13">{<block_content pos:start="242:17" pos:end="302:13">

                <expr_stmt pos:start="242:17" pos:end="242:54"><expr pos:start="242:17" pos:end="242:53"><name pos:start="242:17" pos:end="242:33"><name pos:start="242:17" pos:end="242:17">s</name><operator pos:start="242:18" pos:end="242:19">-&gt;</operator><name pos:start="242:20" pos:end="242:33">rl_table_index</name></name> <operator pos:start="242:35" pos:end="242:35">=</operator> <call pos:start="242:37" pos:end="242:53"><name pos:start="242:37" pos:end="242:45">decode012</name><argument_list pos:start="242:46" pos:end="242:53">(<argument pos:start="242:47" pos:end="242:52"><expr pos:start="242:47" pos:end="242:52"><operator pos:start="242:47" pos:end="242:47">&amp;</operator><name pos:start="242:48" pos:end="242:52"><name pos:start="242:48" pos:end="242:48">s</name><operator pos:start="242:49" pos:end="242:50">-&gt;</operator><name pos:start="242:51" pos:end="242:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="244:17" pos:end="244:61"><expr pos:start="244:17" pos:end="244:60"><name pos:start="244:17" pos:end="244:40"><name pos:start="244:17" pos:end="244:17">s</name><operator pos:start="244:18" pos:end="244:19">-&gt;</operator><name pos:start="244:20" pos:end="244:40">rl_chroma_table_index</name></name> <operator pos:start="244:42" pos:end="244:42">=</operator> <name pos:start="244:44" pos:end="244:60"><name pos:start="244:44" pos:end="244:44">s</name><operator pos:start="244:45" pos:end="244:46">-&gt;</operator><name pos:start="244:47" pos:end="244:60">rl_table_index</name></name></expr>;</expr_stmt>




            <expr_stmt pos:start="249:13" pos:end="249:50"><expr pos:start="249:13" pos:end="249:49"><name pos:start="249:13" pos:end="249:29"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:29">dc_table_index</name></name> <operator pos:start="249:31" pos:end="249:31">=</operator> <call pos:start="249:33" pos:end="249:49"><name pos:start="249:33" pos:end="249:41">get_bits1</name><argument_list pos:start="249:42" pos:end="249:49">(<argument pos:start="249:43" pos:end="249:48"><expr pos:start="249:43" pos:end="249:48"><operator pos:start="249:43" pos:end="249:43">&amp;</operator><name pos:start="249:44" pos:end="249:48"><name pos:start="249:44" pos:end="249:44">s</name><operator pos:start="249:45" pos:end="249:46">-&gt;</operator><name pos:start="249:47" pos:end="249:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="253:13" pos:end="253:50"><expr pos:start="253:13" pos:end="253:49"><name pos:start="253:13" pos:end="253:29"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:29">mv_table_index</name></name> <operator pos:start="253:31" pos:end="253:31">=</operator> <call pos:start="253:33" pos:end="253:49"><name pos:start="253:33" pos:end="253:41">get_bits1</name><argument_list pos:start="253:42" pos:end="253:49">(<argument pos:start="253:43" pos:end="253:48"><expr pos:start="253:43" pos:end="253:48"><operator pos:start="253:43" pos:end="253:43">&amp;</operator><name pos:start="253:44" pos:end="253:48"><name pos:start="253:44" pos:end="253:44">s</name><operator pos:start="253:45" pos:end="253:46">-&gt;</operator><name pos:start="253:47" pos:end="253:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:91"><expr pos:start="255:13" pos:end="255:90"><name pos:start="255:13" pos:end="255:31"><name pos:start="255:13" pos:end="255:13">s</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:31">inter_intra_pred</name></name><operator pos:start="255:32" pos:end="255:32">=</operator> <operator pos:start="255:34" pos:end="255:34">(</operator><name pos:start="255:35" pos:end="255:42"><name pos:start="255:35" pos:end="255:35">s</name><operator pos:start="255:36" pos:end="255:37">-&gt;</operator><name pos:start="255:38" pos:end="255:42">width</name></name><operator pos:start="255:43" pos:end="255:43">*</operator><name pos:start="255:44" pos:end="255:52"><name pos:start="255:44" pos:end="255:44">s</name><operator pos:start="255:45" pos:end="255:46">-&gt;</operator><name pos:start="255:47" pos:end="255:52">height</name></name> <operator pos:start="255:54" pos:end="255:54">&lt;</operator> <literal type="number" pos:start="255:56" pos:end="255:58">320</literal><operator pos:start="255:59" pos:end="255:59">*</operator><literal type="number" pos:start="255:60" pos:end="255:62">240</literal> <operator pos:start="255:64" pos:end="255:65">&amp;&amp;</operator> <name pos:start="255:67" pos:end="255:77"><name pos:start="255:67" pos:end="255:67">s</name><operator pos:start="255:68" pos:end="255:69">-&gt;</operator><name pos:start="255:70" pos:end="255:77">bit_rate</name></name><operator pos:start="255:78" pos:end="255:79">&lt;=</operator><name pos:start="255:80" pos:end="255:89">II_BITRATE</name><operator pos:start="255:90" pos:end="255:90">)</operator></expr>;</expr_stmt>

            <break pos:start="257:13" pos:end="257:18">break;</break>


<comment type="block" pos:start="260:1" pos:end="274:29">/*	printf("skip:%d rl:%d rlc:%d dc:%d mv:%d mbrl:%d qp:%d   \n", 

		s-&gt;use_skip_mb_code, 

		s-&gt;rl_table_index, 

		s-&gt;rl_chroma_table_index, 

		s-&gt;dc_table_index,

		s-&gt;mv_table_index,

                s-&gt;per_mb_rl_table,

                s-&gt;qscale);*/</comment>

	<if_stmt pos:start="276:9" pos:end="302:13"><if pos:start="276:9" pos:end="280:9">if<condition pos:start="276:11" pos:end="276:32">(<expr pos:start="276:12" pos:end="276:31"><name pos:start="276:12" pos:end="276:31"><name pos:start="276:12" pos:end="276:12">s</name><operator pos:start="276:13" pos:end="276:14">-&gt;</operator><name pos:start="276:15" pos:end="276:31">flipflop_rounding</name></name></expr>)</condition><block pos:start="276:33" pos:end="280:9">{<block_content pos:start="278:13" pos:end="278:32">

	    <expr_stmt pos:start="278:13" pos:end="278:32"><expr pos:start="278:13" pos:end="278:31"><name pos:start="278:13" pos:end="278:26"><name pos:start="278:13" pos:end="278:13">s</name><operator pos:start="278:14" pos:end="278:15">-&gt;</operator><name pos:start="278:16" pos:end="278:26">no_rounding</name></name> <operator pos:start="278:28" pos:end="278:29">^=</operator> <literal type="number" pos:start="278:31" pos:end="278:31">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if><else pos:start="280:10" pos:end="302:13">else<block pos:start="280:14" pos:end="302:13">{<block_content pos:start="282:13" pos:end="302:13">

	    <expr_stmt pos:start="282:13" pos:end="282:31"><expr pos:start="282:13" pos:end="282:30"><name pos:start="282:13" pos:end="282:26"><name pos:start="282:13" pos:end="282:13">s</name><operator pos:start="282:14" pos:end="282:15">-&gt;</operator><name pos:start="282:16" pos:end="282:26">no_rounding</name></name> <operator pos:start="282:28" pos:end="282:28">=</operator> <literal type="number" pos:start="282:30" pos:end="282:30">0</literal></expr>;</expr_stmt>



<comment type="line" pos:start="286:1" pos:end="286:98">//printf("%d %d %d %d %d\n", s-&gt;pict_type, s-&gt;bit_rate, s-&gt;inter_intra_pred, s-&gt;width, s-&gt;height);</comment>



    <expr_stmt pos:start="290:5" pos:end="290:28"><expr pos:start="290:5" pos:end="290:27"><name pos:start="290:5" pos:end="290:24"><name pos:start="290:5" pos:end="290:5">s</name><operator pos:start="290:6" pos:end="290:7">-&gt;</operator><name pos:start="290:8" pos:end="290:24">esc3_level_length</name></name><operator pos:start="290:25" pos:end="290:25">=</operator> <literal type="number" pos:start="290:27" pos:end="290:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="292:5" pos:end="297:0"><expr pos:start="292:5" pos:end="292:25"><name pos:start="292:5" pos:end="292:22"><name pos:start="292:5" pos:end="292:5">s</name><operator pos:start="292:6" pos:end="292:7">-&gt;</operator><name pos:start="292:8" pos:end="292:22">esc3_run_length</name></name><operator pos:start="292:23" pos:end="292:23">=</operator> <literal type="number" pos:start="292:25" pos:end="292:25">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="296:1" pos:end="296:12">#<cpp:directive pos:start="296:2" pos:end="296:6">ifdef</cpp:directive> <name pos:start="296:8" pos:end="296:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="298:5" pos:end="301:0"><expr pos:start="298:5" pos:end="298:45"><call pos:start="298:5" pos:end="298:45"><name pos:start="298:5" pos:end="298:10">printf</name><argument_list pos:start="298:11" pos:end="298:45">(<argument pos:start="298:12" pos:end="298:29"><expr pos:start="298:12" pos:end="298:29"><literal type="string" pos:start="298:12" pos:end="298:29">"*****frame %d:\n"</literal></expr></argument>, <argument pos:start="298:32" pos:end="298:44"><expr pos:start="298:32" pos:end="298:44"><name pos:start="298:32" pos:end="298:42">frame_count</name><operator pos:start="298:43" pos:end="298:44">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="300:1" pos:end="300:6">#<cpp:directive pos:start="300:2" pos:end="300:6">endif</cpp:directive></cpp:endif>

    <return pos:start="302:5" pos:end="302:13">return <expr pos:start="302:12" pos:end="302:12"><literal type="number" pos:start="302:12" pos:end="302:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></else></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
