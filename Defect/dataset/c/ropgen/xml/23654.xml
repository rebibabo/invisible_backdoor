<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23654.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:34">yuv2yuvX</name>)<parameter_list pos:start="1:36" pos:end="7:83">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:43">int16_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:54">lumFilter</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:72"><decl pos:start="1:57" pos:end="1:72"><type pos:start="1:57" pos:end="1:72"><name pos:start="1:57" pos:end="1:63">int16_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:72">lumSrc</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:91"><decl pos:start="1:75" pos:end="1:91"><type pos:start="1:75" pos:end="1:91"><name pos:start="1:75" pos:end="1:77">int</name></type> <name pos:start="1:79" pos:end="1:91">lumFilterSize</name></decl></parameter>,

				    <parameter pos:start="3:37" pos:end="3:54"><decl pos:start="3:37" pos:end="3:54"><type pos:start="3:37" pos:end="3:54"><name pos:start="3:37" pos:end="3:43">int16_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">chrFilter</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:72"><decl pos:start="3:57" pos:end="3:72"><type pos:start="3:57" pos:end="3:72"><name pos:start="3:57" pos:end="3:63">int16_t</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier><modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:72">chrSrc</name></decl></parameter>, <parameter pos:start="3:75" pos:end="3:91"><decl pos:start="3:75" pos:end="3:91"><type pos:start="3:75" pos:end="3:91"><name pos:start="3:75" pos:end="3:77">int</name></type> <name pos:start="3:79" pos:end="3:91">chrFilterSize</name></decl></parameter>,

				    <parameter pos:start="5:37" pos:end="5:49"><decl pos:start="5:37" pos:end="5:49"><type pos:start="5:37" pos:end="5:49"><name pos:start="5:37" pos:end="5:43">uint8_t</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:49">dest</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:65"><decl pos:start="5:52" pos:end="5:65"><type pos:start="5:52" pos:end="5:65"><name pos:start="5:52" pos:end="5:58">uint8_t</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:65">uDest</name></decl></parameter>, <parameter pos:start="5:68" pos:end="5:81"><decl pos:start="5:68" pos:end="5:81"><type pos:start="5:68" pos:end="5:81"><name pos:start="5:68" pos:end="5:74">uint8_t</name> <modifier pos:start="5:76" pos:end="5:76">*</modifier></type><name pos:start="5:77" pos:end="5:81">vDest</name></decl></parameter>, <parameter pos:start="5:84" pos:end="5:91"><decl pos:start="5:84" pos:end="5:91"><type pos:start="5:84" pos:end="5:91"><name pos:start="5:84" pos:end="5:86">int</name></type> <name pos:start="5:88" pos:end="5:91">dstW</name></decl></parameter>,

				    <parameter pos:start="7:37" pos:end="7:58"><decl pos:start="7:37" pos:end="7:58"><type pos:start="7:37" pos:end="7:58"><name pos:start="7:37" pos:end="7:43">int16_t</name> <modifier pos:start="7:45" pos:end="7:45">*</modifier></type> <name pos:start="7:47" pos:end="7:58">lumMmxFilter</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:82"><decl pos:start="7:61" pos:end="7:82"><type pos:start="7:61" pos:end="7:82"><name pos:start="7:61" pos:end="7:67">int16_t</name> <modifier pos:start="7:69" pos:end="7:69">*</modifier></type> <name pos:start="7:71" pos:end="7:82">chrMmxFilter</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="117:1">{<block_content pos:start="13:9" pos:end="116:0">

<cpp:ifdef pos:start="11:1" pos:end="11:15">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:15">HAVE_MMX</name></cpp:ifdef>

	<if_stmt pos:start="13:9" pos:end="43:9"><if pos:start="13:9" pos:end="43:9">if<condition pos:start="13:11" pos:end="13:25">(<expr pos:start="13:12" pos:end="13:24"><name pos:start="13:12" pos:end="13:16">uDest</name> <operator pos:start="13:18" pos:end="13:19">!=</operator> <name pos:start="13:21" pos:end="13:24">NULL</name></expr>)</condition>

	<block pos:start="15:9" pos:end="43:9">{<block_content pos:start="17:17" pos:end="41:26">

		<asm pos:start="17:17" pos:end="27:26">asm <specifier pos:start="17:21" pos:end="17:28">volatile</specifier>(

				YSCALEYUV2YV12X(0)

				:: "m" (-chrFilterSize), "r" (chrSrc+chrFilterSize),

				"r" (chrMmxFilter+chrFilterSize*4), "r" (uDest), "m" (dstW&gt;&gt;1)

				: "%eax", "%edx", "%esi"

			);</asm>



		<asm pos:start="31:17" pos:end="41:26">asm <specifier pos:start="31:21" pos:end="31:28">volatile</specifier>(

				YSCALEYUV2YV12X(4096)

				:: "m" (-chrFilterSize), "r" (chrSrc+chrFilterSize),

				"r" (chrMmxFilter+chrFilterSize*4), "r" (vDest), "m" (dstW&gt;&gt;1)

				: "%eax", "%edx", "%esi"

			);</asm>

	</block_content>}</block></if></if_stmt>



	<asm pos:start="47:9" pos:end="60:0">asm <specifier pos:start="47:13" pos:end="47:20">volatile</specifier>(

			YSCALEYUV2YV12X(0)

			:: "m" (-lumFilterSize), "r" (lumSrc+lumFilterSize),

			   "r" (lumMmxFilter+lumFilterSize*4), "r" (dest), "m" (dstW)

			: "%eax", "%edx", "%esi"

		);</asm>

<cpp:else pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:5">else</cpp:directive></cpp:else>

	<comment type="line" pos:start="61:9" pos:end="61:57">//FIXME Optimize (just quickly writen not opti..)</comment>

	<decl_stmt pos:start="63:9" pos:end="63:14"><decl pos:start="63:9" pos:end="63:13"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">i</name></decl>;</decl_stmt>

	<for pos:start="65:9" pos:end="81:9">for<control pos:start="65:12" pos:end="65:29">(<init pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:13">i</name><operator pos:start="65:14" pos:end="65:14">=</operator><literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>;</init> <condition pos:start="65:18" pos:end="65:24"><expr pos:start="65:18" pos:end="65:23"><name pos:start="65:18" pos:end="65:18">i</name><operator pos:start="65:19" pos:end="65:19">&lt;</operator><name pos:start="65:20" pos:end="65:23">dstW</name></expr>;</condition> <incr pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:26">i</name><operator pos:start="65:27" pos:end="65:28">++</operator></expr></incr>)</control>

	<block pos:start="67:9" pos:end="81:9">{<block_content pos:start="69:17" pos:end="79:51">

		<decl_stmt pos:start="69:17" pos:end="69:26"><decl pos:start="69:17" pos:end="69:25"><type pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">int</name></type> <name pos:start="69:21" pos:end="69:23">val</name><init pos:start="69:24" pos:end="69:25">=<expr pos:start="69:25" pos:end="69:25"><literal type="number" pos:start="69:25" pos:end="69:25">0</literal></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="71:17" pos:end="71:22"><decl pos:start="71:17" pos:end="71:21"><type pos:start="71:17" pos:end="71:19"><name pos:start="71:17" pos:end="71:19">int</name></type> <name pos:start="71:21" pos:end="71:21">j</name></decl>;</decl_stmt>

		<for pos:start="73:17" pos:end="75:59">for<control pos:start="73:20" pos:end="73:46">(<init pos:start="73:21" pos:end="73:24"><expr pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:21">j</name><operator pos:start="73:22" pos:end="73:22">=</operator><literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>;</init> <condition pos:start="73:26" pos:end="73:41"><expr pos:start="73:26" pos:end="73:40"><name pos:start="73:26" pos:end="73:26">j</name><operator pos:start="73:27" pos:end="73:27">&lt;</operator><name pos:start="73:28" pos:end="73:40">lumFilterSize</name></expr>;</condition> <incr pos:start="73:43" pos:end="73:45"><expr pos:start="73:43" pos:end="73:45"><name pos:start="73:43" pos:end="73:43">j</name><operator pos:start="73:44" pos:end="73:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:25" pos:end="75:59"><block_content pos:start="75:25" pos:end="75:59">

			<expr_stmt pos:start="75:25" pos:end="75:59"><expr pos:start="75:25" pos:end="75:58"><name pos:start="75:25" pos:end="75:27">val</name> <operator pos:start="75:29" pos:end="75:30">+=</operator> <name pos:start="75:32" pos:end="75:43"><name pos:start="75:32" pos:end="75:37">lumSrc</name><index pos:start="75:38" pos:end="75:40">[<expr pos:start="75:39" pos:end="75:39"><name pos:start="75:39" pos:end="75:39">j</name></expr>]</index><index pos:start="75:41" pos:end="75:43">[<expr pos:start="75:42" pos:end="75:42"><name pos:start="75:42" pos:end="75:42">i</name></expr>]</index></name> <operator pos:start="75:45" pos:end="75:45">*</operator> <name pos:start="75:47" pos:end="75:58"><name pos:start="75:47" pos:end="75:55">lumFilter</name><index pos:start="75:56" pos:end="75:58">[<expr pos:start="75:57" pos:end="75:57"><name pos:start="75:57" pos:end="75:57">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



		<expr_stmt pos:start="79:17" pos:end="79:51"><expr pos:start="79:17" pos:end="79:50"><name pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:20">dest</name><index pos:start="79:21" pos:end="79:23">[<expr pos:start="79:22" pos:end="79:22"><name pos:start="79:22" pos:end="79:22">i</name></expr>]</index></name><operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:50"><name pos:start="79:26" pos:end="79:28">MIN</name><argument_list pos:start="79:29" pos:end="79:50">(<argument pos:start="79:30" pos:end="79:44"><expr pos:start="79:30" pos:end="79:44"><call pos:start="79:30" pos:end="79:44"><name pos:start="79:30" pos:end="79:32">MAX</name><argument_list pos:start="79:33" pos:end="79:44">(<argument pos:start="79:34" pos:end="79:40"><expr pos:start="79:34" pos:end="79:40"><name pos:start="79:34" pos:end="79:36">val</name><operator pos:start="79:37" pos:end="79:38">&gt;&gt;</operator><literal type="number" pos:start="79:39" pos:end="79:40">19</literal></expr></argument>, <argument pos:start="79:43" pos:end="79:43"><expr pos:start="79:43" pos:end="79:43"><literal type="number" pos:start="79:43" pos:end="79:43">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:47" pos:end="79:49"><expr pos:start="79:47" pos:end="79:49"><literal type="number" pos:start="79:47" pos:end="79:49">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>



	<if_stmt pos:start="85:9" pos:end="116:0"><if pos:start="85:9" pos:end="116:0">if<condition pos:start="85:11" pos:end="85:25">(<expr pos:start="85:12" pos:end="85:24"><name pos:start="85:12" pos:end="85:16">uDest</name> <operator pos:start="85:18" pos:end="85:19">!=</operator> <name pos:start="85:21" pos:end="85:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="116:0"><block_content pos:start="87:17" pos:end="116:0">

		<for pos:start="87:17" pos:end="116:0">for<control pos:start="87:20" pos:end="87:42">(<init pos:start="87:21" pos:end="87:24"><expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:21">i</name><operator pos:start="87:22" pos:end="87:22">=</operator><literal type="number" pos:start="87:23" pos:end="87:23">0</literal></expr>;</init> <condition pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:36"><name pos:start="87:26" pos:end="87:26">i</name><operator pos:start="87:27" pos:end="87:27">&lt;</operator><operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:32">dstW</name><operator pos:start="87:33" pos:end="87:34">&gt;&gt;</operator><literal type="number" pos:start="87:35" pos:end="87:35">1</literal><operator pos:start="87:36" pos:end="87:36">)</operator></expr>;</condition> <incr pos:start="87:39" pos:end="87:41"><expr pos:start="87:39" pos:end="87:41"><name pos:start="87:39" pos:end="87:39">i</name><operator pos:start="87:40" pos:end="87:41">++</operator></expr></incr>)</control>

		<block pos:start="89:17" pos:end="116:0">{<block_content pos:start="91:25" pos:end="111:58">

			<decl_stmt pos:start="91:25" pos:end="91:32"><decl pos:start="91:25" pos:end="91:31"><type pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:27">int</name></type> <name pos:start="91:29" pos:end="91:29">u</name><init pos:start="91:30" pos:end="91:31">=<expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="93:25" pos:end="93:32"><decl pos:start="93:25" pos:end="93:31"><type pos:start="93:25" pos:end="93:27"><name pos:start="93:25" pos:end="93:27">int</name></type> <name pos:start="93:29" pos:end="93:29">v</name><init pos:start="93:30" pos:end="93:31">=<expr pos:start="93:31" pos:end="93:31"><literal type="number" pos:start="93:31" pos:end="93:31">0</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="95:25" pos:end="95:30"><decl pos:start="95:25" pos:end="95:29"><type pos:start="95:25" pos:end="95:27"><name pos:start="95:25" pos:end="95:27">int</name></type> <name pos:start="95:29" pos:end="95:29">j</name></decl>;</decl_stmt>

			<for pos:start="97:25" pos:end="105:25">for<control pos:start="97:28" pos:end="97:54">(<init pos:start="97:29" pos:end="97:32"><expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:29">j</name><operator pos:start="97:30" pos:end="97:30">=</operator><literal type="number" pos:start="97:31" pos:end="97:31">0</literal></expr>;</init> <condition pos:start="97:34" pos:end="97:49"><expr pos:start="97:34" pos:end="97:48"><name pos:start="97:34" pos:end="97:34">j</name><operator pos:start="97:35" pos:end="97:35">&lt;</operator><name pos:start="97:36" pos:end="97:48">lumFilterSize</name></expr>;</condition> <incr pos:start="97:51" pos:end="97:53"><expr pos:start="97:51" pos:end="97:53"><name pos:start="97:51" pos:end="97:51">j</name><operator pos:start="97:52" pos:end="97:53">++</operator></expr></incr>)</control>

			<block pos:start="99:25" pos:end="105:25">{<block_content pos:start="101:33" pos:end="103:72">

				<expr_stmt pos:start="101:33" pos:end="101:65"><expr pos:start="101:33" pos:end="101:64"><name pos:start="101:33" pos:end="101:33">u</name> <operator pos:start="101:35" pos:end="101:36">+=</operator> <name pos:start="101:38" pos:end="101:49"><name pos:start="101:38" pos:end="101:43">chrSrc</name><index pos:start="101:44" pos:end="101:46">[<expr pos:start="101:45" pos:end="101:45"><name pos:start="101:45" pos:end="101:45">j</name></expr>]</index><index pos:start="101:47" pos:end="101:49">[<expr pos:start="101:48" pos:end="101:48"><name pos:start="101:48" pos:end="101:48">i</name></expr>]</index></name> <operator pos:start="101:51" pos:end="101:51">*</operator> <name pos:start="101:53" pos:end="101:64"><name pos:start="101:53" pos:end="101:61">chrFilter</name><index pos:start="101:62" pos:end="101:64">[<expr pos:start="101:63" pos:end="101:63"><name pos:start="101:63" pos:end="101:63">j</name></expr>]</index></name></expr>;</expr_stmt>

				<expr_stmt pos:start="103:33" pos:end="103:72"><expr pos:start="103:33" pos:end="103:71"><name pos:start="103:33" pos:end="103:33">v</name> <operator pos:start="103:35" pos:end="103:36">+=</operator> <name pos:start="103:38" pos:end="103:56"><name pos:start="103:38" pos:end="103:43">chrSrc</name><index pos:start="103:44" pos:end="103:46">[<expr pos:start="103:45" pos:end="103:45"><name pos:start="103:45" pos:end="103:45">j</name></expr>]</index><index pos:start="103:47" pos:end="103:56">[<expr pos:start="103:48" pos:end="103:55"><name pos:start="103:48" pos:end="103:48">i</name> <operator pos:start="103:50" pos:end="103:50">+</operator> <literal type="number" pos:start="103:52" pos:end="103:55">2048</literal></expr>]</index></name> <operator pos:start="103:58" pos:end="103:58">*</operator> <name pos:start="103:60" pos:end="103:71"><name pos:start="103:60" pos:end="103:68">chrFilter</name><index pos:start="103:69" pos:end="103:71">[<expr pos:start="103:70" pos:end="103:70"><name pos:start="103:70" pos:end="103:70">j</name></expr>]</index></name></expr>;</expr_stmt>

			</block_content>}</block></for>



			<expr_stmt pos:start="109:25" pos:end="109:58"><expr pos:start="109:25" pos:end="109:57"><name pos:start="109:25" pos:end="109:32"><name pos:start="109:25" pos:end="109:29">uDest</name><index pos:start="109:30" pos:end="109:32">[<expr pos:start="109:31" pos:end="109:31"><name pos:start="109:31" pos:end="109:31">i</name></expr>]</index></name><operator pos:start="109:33" pos:end="109:33">=</operator> <call pos:start="109:35" pos:end="109:57"><name pos:start="109:35" pos:end="109:37">MIN</name><argument_list pos:start="109:38" pos:end="109:57">(<argument pos:start="109:39" pos:end="109:51"><expr pos:start="109:39" pos:end="109:51"><call pos:start="109:39" pos:end="109:51"><name pos:start="109:39" pos:end="109:41">MAX</name><argument_list pos:start="109:42" pos:end="109:51">(<argument pos:start="109:43" pos:end="109:47"><expr pos:start="109:43" pos:end="109:47"><name pos:start="109:43" pos:end="109:43">u</name><operator pos:start="109:44" pos:end="109:45">&gt;&gt;</operator><literal type="number" pos:start="109:46" pos:end="109:47">19</literal></expr></argument>, <argument pos:start="109:50" pos:end="109:50"><expr pos:start="109:50" pos:end="109:50"><literal type="number" pos:start="109:50" pos:end="109:50">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:54" pos:end="109:56"><expr pos:start="109:54" pos:end="109:56"><literal type="number" pos:start="109:54" pos:end="109:56">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="111:25" pos:end="111:58"><expr pos:start="111:25" pos:end="111:57"><name pos:start="111:25" pos:end="111:32"><name pos:start="111:25" pos:end="111:29">vDest</name><index pos:start="111:30" pos:end="111:32">[<expr pos:start="111:31" pos:end="111:31"><name pos:start="111:31" pos:end="111:31">i</name></expr>]</index></name><operator pos:start="111:33" pos:end="111:33">=</operator> <call pos:start="111:35" pos:end="111:57"><name pos:start="111:35" pos:end="111:37">MIN</name><argument_list pos:start="111:38" pos:end="111:57">(<argument pos:start="111:39" pos:end="111:51"><expr pos:start="111:39" pos:end="111:51"><call pos:start="111:39" pos:end="111:51"><name pos:start="111:39" pos:end="111:41">MAX</name><argument_list pos:start="111:42" pos:end="111:51">(<argument pos:start="111:43" pos:end="111:47"><expr pos:start="111:43" pos:end="111:47"><name pos:start="111:43" pos:end="111:43">v</name><operator pos:start="111:44" pos:end="111:45">&gt;&gt;</operator><literal type="number" pos:start="111:46" pos:end="111:47">19</literal></expr></argument>, <argument pos:start="111:50" pos:end="111:50"><expr pos:start="111:50" pos:end="111:50"><literal type="number" pos:start="111:50" pos:end="111:50">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:54" pos:end="111:56"><expr pos:start="111:54" pos:end="111:56"><literal type="number" pos:start="111:54" pos:end="111:56">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></for></block_content></block></if></if_stmt>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
