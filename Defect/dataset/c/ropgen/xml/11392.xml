<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11392.c" pos:tabs="8"><function pos:start="1:1" pos:end="54:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">mxf_read_index_entry_array</name><parameter_list pos:start="1:38" pos:end="1:85">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:49">AVIOContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">pb</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:84"><decl pos:start="1:56" pos:end="1:84"><type pos:start="1:56" pos:end="1:84"><name pos:start="1:56" pos:end="1:75">MXFIndexTableSegment</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:84">segment</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="54:1">{<block_content pos:start="5:5" pos:end="52:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:17">length</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:11">segment</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:29">nb_index_entries</name></name> <operator pos:start="9:31" pos:end="9:31">=</operator> <call pos:start="9:33" pos:end="9:45"><name pos:start="9:33" pos:end="9:41">avio_rb32</name><argument_list pos:start="9:42" pos:end="9:45">(<argument pos:start="9:43" pos:end="9:44"><expr pos:start="9:43" pos:end="9:44"><name pos:start="9:43" pos:end="9:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:10">length</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:22">avio_rb32</name><argument_list pos:start="13:23" pos:end="13:26">(<argument pos:start="13:24" pos:end="13:25"><expr pos:start="13:24" pos:end="13:25"><name pos:start="13:24" pos:end="13:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="23:122">(<expr pos:start="19:9" pos:end="23:121"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:42"><name pos:start="19:11" pos:end="19:17">segment</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:42">temporal_offset_entries</name></name><operator pos:start="19:43" pos:end="19:43">=</operator><call pos:start="19:44" pos:end="19:122"><name pos:start="19:44" pos:end="19:52">av_calloc</name><argument_list pos:start="19:53" pos:end="19:122">(<argument pos:start="19:54" pos:end="19:78"><expr pos:start="19:54" pos:end="19:78"><name pos:start="19:54" pos:end="19:78"><name pos:start="19:54" pos:end="19:60">segment</name><operator pos:start="19:61" pos:end="19:62">-&gt;</operator><name pos:start="19:63" pos:end="19:78">nb_index_entries</name></name></expr></argument>, <argument pos:start="19:81" pos:end="19:121"><expr pos:start="19:81" pos:end="19:121"><sizeof pos:start="19:81" pos:end="19:121">sizeof<argument_list pos:start="19:87" pos:end="19:121">(<argument pos:start="19:88" pos:end="19:120"><expr pos:start="19:88" pos:end="19:120"><operator pos:start="19:88" pos:end="19:88">*</operator><name pos:start="19:89" pos:end="19:120"><name pos:start="19:89" pos:end="19:95">segment</name><operator pos:start="19:96" pos:end="19:97">-&gt;</operator><name pos:start="19:98" pos:end="19:120">temporal_offset_entries</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="19:123" pos:end="19:123">)</operator> <operator pos:start="19:125" pos:end="19:126">||</operator>

        <operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:31"><name pos:start="21:11" pos:end="21:17">segment</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:31">flag_entries</name></name>          <operator pos:start="21:42" pos:end="21:42">=</operator> <call pos:start="21:44" pos:end="21:111"><name pos:start="21:44" pos:end="21:52">av_calloc</name><argument_list pos:start="21:53" pos:end="21:111">(<argument pos:start="21:54" pos:end="21:78"><expr pos:start="21:54" pos:end="21:78"><name pos:start="21:54" pos:end="21:78"><name pos:start="21:54" pos:end="21:60">segment</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:78">nb_index_entries</name></name></expr></argument>, <argument pos:start="21:81" pos:end="21:110"><expr pos:start="21:81" pos:end="21:110"><sizeof pos:start="21:81" pos:end="21:110">sizeof<argument_list pos:start="21:87" pos:end="21:110">(<argument pos:start="21:88" pos:end="21:109"><expr pos:start="21:88" pos:end="21:109"><operator pos:start="21:88" pos:end="21:88">*</operator><name pos:start="21:89" pos:end="21:109"><name pos:start="21:89" pos:end="21:95">segment</name><operator pos:start="21:96" pos:end="21:97">-&gt;</operator><name pos:start="21:98" pos:end="21:109">flag_entries</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="21:112" pos:end="21:112">)</operator> <operator pos:start="21:114" pos:end="21:115">||</operator>

        <operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:40"><name pos:start="23:11" pos:end="23:17">segment</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:40">stream_offset_entries</name></name> <operator pos:start="23:42" pos:end="23:42">=</operator> <call pos:start="23:44" pos:end="23:120"><name pos:start="23:44" pos:end="23:52">av_calloc</name><argument_list pos:start="23:53" pos:end="23:120">(<argument pos:start="23:54" pos:end="23:78"><expr pos:start="23:54" pos:end="23:78"><name pos:start="23:54" pos:end="23:78"><name pos:start="23:54" pos:end="23:60">segment</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:78">nb_index_entries</name></name></expr></argument>, <argument pos:start="23:81" pos:end="23:119"><expr pos:start="23:81" pos:end="23:119"><sizeof pos:start="23:81" pos:end="23:119">sizeof<argument_list pos:start="23:87" pos:end="23:119">(<argument pos:start="23:88" pos:end="23:118"><expr pos:start="23:88" pos:end="23:118"><operator pos:start="23:88" pos:end="23:88">*</operator><name pos:start="23:89" pos:end="23:118"><name pos:start="23:89" pos:end="23:95">segment</name><operator pos:start="23:96" pos:end="23:97">-&gt;</operator><name pos:start="23:98" pos:end="23:118">stream_offset_entries</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="23:121" pos:end="23:121">)</operator></expr>)</condition> <block pos:start="23:124" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:31">

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><call pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:16">av_freep</name><argument_list pos:start="25:17" pos:end="25:51">(<argument pos:start="25:18" pos:end="25:50"><expr pos:start="25:18" pos:end="25:50"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:50"><name pos:start="25:19" pos:end="25:25">segment</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:50">temporal_offset_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:16">av_freep</name><argument_list pos:start="27:17" pos:end="27:40">(<argument pos:start="27:18" pos:end="27:39"><expr pos:start="27:18" pos:end="27:39"><operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:39"><name pos:start="27:19" pos:end="27:25">segment</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:39">flag_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="35:5" pos:end="50:5">for <control pos:start="35:9" pos:end="35:51">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:46"><expr pos:start="35:17" pos:end="35:45"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:27">segment</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:45">nb_index_entries</name></name></expr>;</condition> <incr pos:start="35:48" pos:end="35:50"><expr pos:start="35:48" pos:end="35:50"><name pos:start="35:48" pos:end="35:48">i</name><operator pos:start="35:49" pos:end="35:50">++</operator></expr></incr>)</control> <block pos:start="35:53" pos:end="50:5">{<block_content pos:start="37:9" pos:end="48:35">

        <if_stmt pos:start="37:9" pos:end="40:58"><if pos:start="37:9" pos:end="40:58">if<condition pos:start="37:11" pos:end="37:25">(<expr pos:start="37:12" pos:end="37:24"><call pos:start="37:12" pos:end="37:24"><name pos:start="37:12" pos:end="37:20">avio_feof</name><argument_list pos:start="37:21" pos:end="37:24">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="40:9" pos:end="40:58"><block_content pos:start="40:9" pos:end="40:58">


        <expr_stmt pos:start="40:9" pos:end="40:58"><expr pos:start="40:9" pos:end="40:57"><name pos:start="40:9" pos:end="40:43"><name pos:start="40:9" pos:end="40:15">segment</name><operator pos:start="40:16" pos:end="40:17">-&gt;</operator><name pos:start="40:18" pos:end="40:40">temporal_offset_entries</name><index pos:start="40:41" pos:end="40:43">[<expr pos:start="40:42" pos:end="40:42"><name pos:start="40:42" pos:end="40:42">i</name></expr>]</index></name> <operator pos:start="40:45" pos:end="40:45">=</operator> <call pos:start="40:47" pos:end="40:57"><name pos:start="40:47" pos:end="40:53">avio_r8</name><argument_list pos:start="40:54" pos:end="40:57">(<argument pos:start="40:55" pos:end="40:56"><expr pos:start="40:55" pos:end="40:56"><name pos:start="40:55" pos:end="40:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="42:9" pos:end="42:20"><expr pos:start="42:9" pos:end="42:19"><call pos:start="42:9" pos:end="42:19"><name pos:start="42:9" pos:end="42:15">avio_r8</name><argument_list pos:start="42:16" pos:end="42:19">(<argument pos:start="42:17" pos:end="42:18"><expr pos:start="42:17" pos:end="42:18"><name pos:start="42:17" pos:end="42:18">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                                        <comment type="block" pos:start="42:61" pos:end="42:80">/* KeyFrameOffset */</comment>

        <expr_stmt pos:start="44:9" pos:end="44:47"><expr pos:start="44:9" pos:end="44:46"><name pos:start="44:9" pos:end="44:32"><name pos:start="44:9" pos:end="44:15">segment</name><operator pos:start="44:16" pos:end="44:17">-&gt;</operator><name pos:start="44:18" pos:end="44:29">flag_entries</name><index pos:start="44:30" pos:end="44:32">[<expr pos:start="44:31" pos:end="44:31"><name pos:start="44:31" pos:end="44:31">i</name></expr>]</index></name> <operator pos:start="44:34" pos:end="44:34">=</operator> <call pos:start="44:36" pos:end="44:46"><name pos:start="44:36" pos:end="44:42">avio_r8</name><argument_list pos:start="44:43" pos:end="44:46">(<argument pos:start="44:44" pos:end="44:45"><expr pos:start="44:44" pos:end="44:45"><name pos:start="44:44" pos:end="44:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="46:9" pos:end="46:58"><expr pos:start="46:9" pos:end="46:57"><name pos:start="46:9" pos:end="46:41"><name pos:start="46:9" pos:end="46:15">segment</name><operator pos:start="46:16" pos:end="46:17">-&gt;</operator><name pos:start="46:18" pos:end="46:38">stream_offset_entries</name><index pos:start="46:39" pos:end="46:41">[<expr pos:start="46:40" pos:end="46:40"><name pos:start="46:40" pos:end="46:40">i</name></expr>]</index></name> <operator pos:start="46:43" pos:end="46:43">=</operator> <call pos:start="46:45" pos:end="46:57"><name pos:start="46:45" pos:end="46:53">avio_rb64</name><argument_list pos:start="46:54" pos:end="46:57">(<argument pos:start="46:55" pos:end="46:56"><expr pos:start="46:55" pos:end="46:56"><name pos:start="46:55" pos:end="46:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:35"><expr pos:start="48:9" pos:end="48:34"><call pos:start="48:9" pos:end="48:34"><name pos:start="48:9" pos:end="48:17">avio_skip</name><argument_list pos:start="48:18" pos:end="48:34">(<argument pos:start="48:19" pos:end="48:20"><expr pos:start="48:19" pos:end="48:20"><name pos:start="48:19" pos:end="48:20">pb</name></expr></argument>, <argument pos:start="48:23" pos:end="48:33"><expr pos:start="48:23" pos:end="48:33"><name pos:start="48:23" pos:end="48:28">length</name> <operator pos:start="48:30" pos:end="48:30">-</operator> <literal type="number" pos:start="48:32" pos:end="48:33">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="52:5" pos:end="52:13">return <expr pos:start="52:12" pos:end="52:12"><literal type="number" pos:start="52:12" pos:end="52:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
