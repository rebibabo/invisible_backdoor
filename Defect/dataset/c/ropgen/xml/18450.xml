<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18450.c" pos:tabs="8"><function pos:start="1:1" pos:end="341:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:33">vmsvga_value_read</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:64">address</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="341:1">{<block_content pos:start="5:5" pos:end="339:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">vmsvga_state_s</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:28">s</name> <init pos:start="7:30" pos:end="7:37">= <expr pos:start="7:32" pos:end="7:37"><name pos:start="7:32" pos:end="7:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">DisplaySurface</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">surface</name> <init pos:start="9:29" pos:end="9:62">= <expr pos:start="9:31" pos:end="9:62"><call pos:start="9:31" pos:end="9:62"><name pos:start="9:31" pos:end="9:50">qemu_console_surface</name><argument_list pos:start="9:51" pos:end="9:62">(<argument pos:start="9:52" pos:end="9:61"><expr pos:start="9:52" pos:end="9:61"><name pos:start="9:52" pos:end="9:61"><name pos:start="9:52" pos:end="9:52">s</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:57">vga</name><operator pos:start="9:58" pos:end="9:58">.</operator><name pos:start="9:59" pos:end="9:61">con</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">ret</name></decl>;</decl_stmt>



    <switch pos:start="15:5" pos:end="321:5">switch <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">index</name></name></expr>)</condition> <block pos:start="15:23" pos:end="321:5">{<block_content pos:start="17:5" pos:end="319:14">

    <case pos:start="17:5" pos:end="17:21">case <expr pos:start="17:10" pos:end="17:20"><name pos:start="17:10" pos:end="17:20">SVGA_REG_ID</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:23"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:23">svgaid</name></name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>



    <case pos:start="25:5" pos:end="25:25">case <expr pos:start="25:10" pos:end="25:24"><name pos:start="25:10" pos:end="25:24">SVGA_REG_ENABLE</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:23"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:23">enable</name></name></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>



    <case pos:start="33:5" pos:end="33:24">case <expr pos:start="33:10" pos:end="33:23"><name pos:start="33:10" pos:end="33:23">SVGA_REG_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:36"><name pos:start="35:15" pos:end="35:27">surface_width</name><argument_list pos:start="35:28" pos:end="35:36">(<argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:35">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>



    <case pos:start="41:5" pos:end="41:25">case <expr pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:24">SVGA_REG_HEIGHT</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:37"><name pos:start="43:15" pos:end="43:28">surface_height</name><argument_list pos:start="43:29" pos:end="43:37">(<argument pos:start="43:30" pos:end="43:36"><expr pos:start="43:30" pos:end="43:36"><name pos:start="43:30" pos:end="43:36">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>



    <case pos:start="49:5" pos:end="49:28">case <expr pos:start="49:10" pos:end="49:27"><name pos:start="49:10" pos:end="49:27">SVGA_REG_MAX_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:28">SVGA_MAX_WIDTH</name></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>



    <case pos:start="57:5" pos:end="57:29">case <expr pos:start="57:10" pos:end="57:28"><name pos:start="57:10" pos:end="57:28">SVGA_REG_MAX_HEIGHT</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:29">SVGA_MAX_HEIGHT</name></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>



    <case pos:start="65:5" pos:end="65:24">case <expr pos:start="65:10" pos:end="65:23"><name pos:start="65:10" pos:end="65:23">SVGA_REG_DEPTH</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:22"><name pos:start="67:15" pos:end="67:15">s</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:22">depth</name></name></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:33">case <expr pos:start="73:10" pos:end="73:32"><name pos:start="73:10" pos:end="73:32">SVGA_REG_BITS_PER_PIXEL</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">(</operator><name pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">depth</name></name> <operator pos:start="75:25" pos:end="75:25">+</operator> <literal type="number" pos:start="75:27" pos:end="75:27">7</literal><operator pos:start="75:28" pos:end="75:28">)</operator> <operator pos:start="75:30" pos:end="75:30">&amp;</operator> <operator pos:start="75:32" pos:end="75:32">~</operator><literal type="number" pos:start="75:33" pos:end="75:33">7</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>



    <case pos:start="81:5" pos:end="81:30">case <expr pos:start="81:10" pos:end="81:29"><name pos:start="81:10" pos:end="81:29">SVGA_REG_PSEUDOCOLOR</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:18"><expr pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <literal type="number" pos:start="83:15" pos:end="83:17">0x0</literal></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>



    <case pos:start="89:5" pos:end="89:27">case <expr pos:start="89:10" pos:end="89:26"><name pos:start="89:10" pos:end="89:26">SVGA_REG_RED_MASK</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:31"><name pos:start="91:15" pos:end="91:21">surface</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:25">pf</name><operator pos:start="91:26" pos:end="91:26">.</operator><name pos:start="91:27" pos:end="91:31">rmask</name></name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>



    <case pos:start="97:5" pos:end="97:29">case <expr pos:start="97:10" pos:end="97:28"><name pos:start="97:10" pos:end="97:28">SVGA_REG_GREEN_MASK</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:32"><expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <name pos:start="99:15" pos:end="99:31"><name pos:start="99:15" pos:end="99:21">surface</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:25">pf</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:31">gmask</name></name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>



    <case pos:start="105:5" pos:end="105:28">case <expr pos:start="105:10" pos:end="105:27"><name pos:start="105:10" pos:end="105:27">SVGA_REG_BLUE_MASK</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:32"><expr pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <name pos:start="107:15" pos:end="107:31"><name pos:start="107:15" pos:end="107:21">surface</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:25">pf</name><operator pos:start="107:26" pos:end="107:26">.</operator><name pos:start="107:27" pos:end="107:31">bmask</name></name></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>



    <case pos:start="113:5" pos:end="113:33">case <expr pos:start="113:10" pos:end="113:32"><name pos:start="113:10" pos:end="113:32">SVGA_REG_BYTES_PER_LINE</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <name pos:start="115:15" pos:end="115:21"><name pos:start="115:15" pos:end="115:15">s</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:21">bypp</name></name> <operator pos:start="115:23" pos:end="115:23">*</operator> <name pos:start="115:25" pos:end="115:36"><name pos:start="115:25" pos:end="115:25">s</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:36">new_width</name></name></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>



    <case pos:start="121:5" pos:end="121:27">case <expr pos:start="121:10" pos:end="121:26"><name pos:start="121:10" pos:end="121:26">SVGA_REG_FB_START</name></expr>:</case> <block pos:start="121:29" pos:end="131:5">{<block_content pos:start="123:9" pos:end="129:14">

        <decl_stmt pos:start="123:9" pos:end="125:63"><decl pos:start="123:9" pos:end="125:62"><type pos:start="123:9" pos:end="123:35"><name pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:14">struct</name> <name pos:start="123:16" pos:end="123:33">pci_vmsvga_state_s</name></name> <modifier pos:start="123:35" pos:end="123:35">*</modifier></type><name pos:start="123:36" pos:end="123:45">pci_vmsvga</name>

            <init pos:start="125:13" pos:end="125:62">= <expr pos:start="125:15" pos:end="125:62"><call pos:start="125:15" pos:end="125:62"><name pos:start="125:15" pos:end="125:26">container_of</name><argument_list pos:start="125:27" pos:end="125:62">(<argument pos:start="125:28" pos:end="125:28"><expr pos:start="125:28" pos:end="125:28"><name pos:start="125:28" pos:end="125:28">s</name></expr></argument>, <argument pos:start="125:31" pos:end="125:55"><expr pos:start="125:31" pos:end="125:55">struct <name pos:start="125:38" pos:end="125:55">pci_vmsvga_state_s</name></expr></argument>, <argument pos:start="125:58" pos:end="125:61"><expr pos:start="125:58" pos:end="125:61"><name pos:start="125:58" pos:end="125:61">chip</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:53"><expr pos:start="127:9" pos:end="127:52"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:52"><name pos:start="127:15" pos:end="127:30">pci_get_bar_addr</name><argument_list pos:start="127:31" pos:end="127:52">(<argument pos:start="127:32" pos:end="127:48"><expr pos:start="127:32" pos:end="127:48"><operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:48"><name pos:start="127:33" pos:end="127:42">pci_vmsvga</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:48">card</name></name></expr></argument>, <argument pos:start="127:51" pos:end="127:51"><expr pos:start="127:51" pos:end="127:51"><literal type="number" pos:start="127:51" pos:end="127:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    </block_content>}</block>



    <case pos:start="135:5" pos:end="135:28">case <expr pos:start="135:10" pos:end="135:27"><name pos:start="135:10" pos:end="135:27">SVGA_REG_FB_OFFSET</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:18"><expr pos:start="137:9" pos:end="137:17"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <literal type="number" pos:start="137:15" pos:end="137:17">0x0</literal></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>



    <case pos:start="143:5" pos:end="143:28">case <expr pos:start="143:10" pos:end="143:27"><name pos:start="143:10" pos:end="143:27">SVGA_REG_VRAM_SIZE</name></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:31"><expr pos:start="145:9" pos:end="145:30"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <name pos:start="145:15" pos:end="145:30"><name pos:start="145:15" pos:end="145:15">s</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:20">vga</name><operator pos:start="145:21" pos:end="145:21">.</operator><name pos:start="145:22" pos:end="145:30">vram_size</name></name></expr>;</expr_stmt> <comment type="block" pos:start="145:33" pos:end="145:78">/* No physical VRAM besides the framebuffer */</comment>

        <break pos:start="147:9" pos:end="147:14">break;</break>



    <case pos:start="151:5" pos:end="151:26">case <expr pos:start="151:10" pos:end="151:25"><name pos:start="151:10" pos:end="151:25">SVGA_REG_FB_SIZE</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:31"><expr pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">=</operator> <name pos:start="153:15" pos:end="153:30"><name pos:start="153:15" pos:end="153:15">s</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:20">vga</name><operator pos:start="153:21" pos:end="153:21">.</operator><name pos:start="153:22" pos:end="153:30">vram_size</name></name></expr>;</expr_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>



    <case pos:start="159:5" pos:end="159:31">case <expr pos:start="159:10" pos:end="159:30"><name pos:start="159:10" pos:end="159:30">SVGA_REG_CAPABILITIES</name></expr>:</case>

        <expr_stmt pos:start="161:9" pos:end="164:0"><expr pos:start="161:9" pos:end="161:28"><name pos:start="161:9" pos:end="161:12">caps</name> <operator pos:start="161:14" pos:end="161:14">=</operator> <name pos:start="161:16" pos:end="161:28">SVGA_CAP_NONE</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="163:1" pos:end="163:20">#<cpp:directive pos:start="163:2" pos:end="163:6">ifdef</cpp:directive> <name pos:start="163:8" pos:end="163:20">HW_RECT_ACCEL</name></cpp:ifdef>

        <expr_stmt pos:start="165:9" pos:end="170:0"><expr pos:start="165:9" pos:end="165:34"><name pos:start="165:9" pos:end="165:12">caps</name> <operator pos:start="165:14" pos:end="165:15">|=</operator> <name pos:start="165:17" pos:end="165:34">SVGA_CAP_RECT_COPY</name></expr>;</expr_stmt>

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="169:1" pos:end="169:20">#<cpp:directive pos:start="169:2" pos:end="169:6">ifdef</cpp:directive> <name pos:start="169:8" pos:end="169:20">HW_FILL_ACCEL</name></cpp:ifdef>

        <expr_stmt pos:start="171:9" pos:end="176:0"><expr pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:12">caps</name> <operator pos:start="171:14" pos:end="171:15">|=</operator> <name pos:start="171:17" pos:end="171:34">SVGA_CAP_RECT_FILL</name></expr>;</expr_stmt>

<cpp:endif pos:start="173:1" pos:end="173:6">#<cpp:directive pos:start="173:2" pos:end="173:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="175:1" pos:end="175:21">#<cpp:directive pos:start="175:2" pos:end="175:6">ifdef</cpp:directive> <name pos:start="175:8" pos:end="175:21">HW_MOUSE_ACCEL</name></cpp:ifdef>

        <if_stmt pos:start="177:9" pos:end="186:0"><if pos:start="177:9" pos:end="186:0">if <condition pos:start="177:12" pos:end="177:52">(<expr pos:start="177:13" pos:end="177:51"><call pos:start="177:13" pos:end="177:51"><name pos:start="177:13" pos:end="177:39">dpy_cursor_define_supported</name><argument_list pos:start="177:40" pos:end="177:51">(<argument pos:start="177:41" pos:end="177:50"><expr pos:start="177:41" pos:end="177:50"><name pos:start="177:41" pos:end="177:50"><name pos:start="177:41" pos:end="177:41">s</name><operator pos:start="177:42" pos:end="177:43">-&gt;</operator><name pos:start="177:44" pos:end="177:46">vga</name><operator pos:start="177:47" pos:end="177:47">.</operator><name pos:start="177:48" pos:end="177:50">con</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:54" pos:end="186:0">{<block_content pos:start="179:13" pos:end="181:43">

            <expr_stmt pos:start="179:13" pos:end="181:43"><expr pos:start="179:13" pos:end="181:42"><name pos:start="179:13" pos:end="179:16">caps</name> <operator pos:start="179:18" pos:end="179:19">|=</operator> <name pos:start="179:21" pos:end="179:35">SVGA_CAP_CURSOR</name> <operator pos:start="179:37" pos:end="179:37">|</operator> <name pos:start="179:39" pos:end="179:62">SVGA_CAP_CURSOR_BYPASS_2</name> <operator pos:start="179:64" pos:end="179:64">|</operator>

                    <name pos:start="181:21" pos:end="181:42">SVGA_CAP_CURSOR_BYPASS</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="187:9" pos:end="187:19"><expr pos:start="187:9" pos:end="187:18"><name pos:start="187:9" pos:end="187:11">ret</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <name pos:start="187:15" pos:end="187:18">caps</name></expr>;</expr_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>



    <case pos:start="193:5" pos:end="193:28">case <expr pos:start="193:10" pos:end="193:27"><name pos:start="193:10" pos:end="193:27">SVGA_REG_MEM_START</name></expr>:</case> <block pos:start="193:30" pos:end="203:5">{<block_content pos:start="195:9" pos:end="201:14">

        <decl_stmt pos:start="195:9" pos:end="197:63"><decl pos:start="195:9" pos:end="197:62"><type pos:start="195:9" pos:end="195:35"><name pos:start="195:9" pos:end="195:33"><name pos:start="195:9" pos:end="195:14">struct</name> <name pos:start="195:16" pos:end="195:33">pci_vmsvga_state_s</name></name> <modifier pos:start="195:35" pos:end="195:35">*</modifier></type><name pos:start="195:36" pos:end="195:45">pci_vmsvga</name>

            <init pos:start="197:13" pos:end="197:62">= <expr pos:start="197:15" pos:end="197:62"><call pos:start="197:15" pos:end="197:62"><name pos:start="197:15" pos:end="197:26">container_of</name><argument_list pos:start="197:27" pos:end="197:62">(<argument pos:start="197:28" pos:end="197:28"><expr pos:start="197:28" pos:end="197:28"><name pos:start="197:28" pos:end="197:28">s</name></expr></argument>, <argument pos:start="197:31" pos:end="197:55"><expr pos:start="197:31" pos:end="197:55">struct <name pos:start="197:38" pos:end="197:55">pci_vmsvga_state_s</name></expr></argument>, <argument pos:start="197:58" pos:end="197:61"><expr pos:start="197:58" pos:end="197:61"><name pos:start="197:58" pos:end="197:61">chip</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:53"><expr pos:start="199:9" pos:end="199:52"><name pos:start="199:9" pos:end="199:11">ret</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <call pos:start="199:15" pos:end="199:52"><name pos:start="199:15" pos:end="199:30">pci_get_bar_addr</name><argument_list pos:start="199:31" pos:end="199:52">(<argument pos:start="199:32" pos:end="199:48"><expr pos:start="199:32" pos:end="199:48"><operator pos:start="199:32" pos:end="199:32">&amp;</operator><name pos:start="199:33" pos:end="199:48"><name pos:start="199:33" pos:end="199:42">pci_vmsvga</name><operator pos:start="199:43" pos:end="199:44">-&gt;</operator><name pos:start="199:45" pos:end="199:48">card</name></name></expr></argument>, <argument pos:start="199:51" pos:end="199:51"><expr pos:start="199:51" pos:end="199:51"><literal type="number" pos:start="199:51" pos:end="199:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="201:9" pos:end="201:14">break;</break>

    </block_content>}</block>



    <case pos:start="207:5" pos:end="207:27">case <expr pos:start="207:10" pos:end="207:26"><name pos:start="207:10" pos:end="207:26">SVGA_REG_MEM_SIZE</name></expr>:</case>

        <expr_stmt pos:start="209:9" pos:end="209:27"><expr pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:11">ret</name> <operator pos:start="209:13" pos:end="209:13">=</operator> <name pos:start="209:15" pos:end="209:26"><name pos:start="209:15" pos:end="209:15">s</name><operator pos:start="209:16" pos:end="209:17">-&gt;</operator><name pos:start="209:18" pos:end="209:26">fifo_size</name></name></expr>;</expr_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>



    <case pos:start="215:5" pos:end="215:30">case <expr pos:start="215:10" pos:end="215:29"><name pos:start="215:10" pos:end="215:29">SVGA_REG_CONFIG_DONE</name></expr>:</case>

        <expr_stmt pos:start="217:9" pos:end="217:24"><expr pos:start="217:9" pos:end="217:23"><name pos:start="217:9" pos:end="217:11">ret</name> <operator pos:start="217:13" pos:end="217:13">=</operator> <name pos:start="217:15" pos:end="217:23"><name pos:start="217:15" pos:end="217:15">s</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:23">config</name></name></expr>;</expr_stmt>

        <break pos:start="219:9" pos:end="219:14">break;</break>



    <case pos:start="223:5" pos:end="223:23">case <expr pos:start="223:10" pos:end="223:22"><name pos:start="223:10" pos:end="223:22">SVGA_REG_SYNC</name></expr>:</case>

    <case pos:start="225:5" pos:end="225:23">case <expr pos:start="225:10" pos:end="225:22"><name pos:start="225:10" pos:end="225:22">SVGA_REG_BUSY</name></expr>:</case>

        <expr_stmt pos:start="227:9" pos:end="227:25"><expr pos:start="227:9" pos:end="227:24"><name pos:start="227:9" pos:end="227:11">ret</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <name pos:start="227:15" pos:end="227:24"><name pos:start="227:15" pos:end="227:15">s</name><operator pos:start="227:16" pos:end="227:17">-&gt;</operator><name pos:start="227:18" pos:end="227:24">syncing</name></name></expr>;</expr_stmt>

        <break pos:start="229:9" pos:end="229:14">break;</break>



    <case pos:start="233:5" pos:end="233:27">case <expr pos:start="233:10" pos:end="233:26"><name pos:start="233:10" pos:end="233:26">SVGA_REG_GUEST_ID</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:23"><expr pos:start="235:9" pos:end="235:22"><name pos:start="235:9" pos:end="235:11">ret</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <name pos:start="235:15" pos:end="235:22"><name pos:start="235:15" pos:end="235:15">s</name><operator pos:start="235:16" pos:end="235:17">-&gt;</operator><name pos:start="235:18" pos:end="235:22">guest</name></name></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>



    <case pos:start="241:5" pos:end="241:28">case <expr pos:start="241:10" pos:end="241:27"><name pos:start="241:10" pos:end="241:27">SVGA_REG_CURSOR_ID</name></expr>:</case>

        <expr_stmt pos:start="243:9" pos:end="243:27"><expr pos:start="243:9" pos:end="243:26"><name pos:start="243:9" pos:end="243:11">ret</name> <operator pos:start="243:13" pos:end="243:13">=</operator> <name pos:start="243:15" pos:end="243:26"><name pos:start="243:15" pos:end="243:15">s</name><operator pos:start="243:16" pos:end="243:17">-&gt;</operator><name pos:start="243:18" pos:end="243:23">cursor</name><operator pos:start="243:24" pos:end="243:24">.</operator><name pos:start="243:25" pos:end="243:26">id</name></name></expr>;</expr_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>



    <case pos:start="249:5" pos:end="249:27">case <expr pos:start="249:10" pos:end="249:26"><name pos:start="249:10" pos:end="249:26">SVGA_REG_CURSOR_X</name></expr>:</case>

        <expr_stmt pos:start="251:9" pos:end="251:26"><expr pos:start="251:9" pos:end="251:25"><name pos:start="251:9" pos:end="251:11">ret</name> <operator pos:start="251:13" pos:end="251:13">=</operator> <name pos:start="251:15" pos:end="251:25"><name pos:start="251:15" pos:end="251:15">s</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:23">cursor</name><operator pos:start="251:24" pos:end="251:24">.</operator><name pos:start="251:25" pos:end="251:25">x</name></name></expr>;</expr_stmt>

        <break pos:start="253:9" pos:end="253:14">break;</break>



    <case pos:start="257:5" pos:end="257:27">case <expr pos:start="257:10" pos:end="257:26"><name pos:start="257:10" pos:end="257:26">SVGA_REG_CURSOR_Y</name></expr>:</case>

        <expr_stmt pos:start="259:9" pos:end="259:26"><expr pos:start="259:9" pos:end="259:25"><name pos:start="259:9" pos:end="259:11">ret</name> <operator pos:start="259:13" pos:end="259:13">=</operator> <name pos:start="259:15" pos:end="259:25"><name pos:start="259:15" pos:end="259:15">s</name><operator pos:start="259:16" pos:end="259:17">-&gt;</operator><name pos:start="259:18" pos:end="259:23">cursor</name><operator pos:start="259:24" pos:end="259:24">.</operator><name pos:start="259:25" pos:end="259:25">x</name></name></expr>;</expr_stmt>

        <break pos:start="261:9" pos:end="261:14">break;</break>



    <case pos:start="265:5" pos:end="265:28">case <expr pos:start="265:10" pos:end="265:27"><name pos:start="265:10" pos:end="265:27">SVGA_REG_CURSOR_ON</name></expr>:</case>

        <expr_stmt pos:start="267:9" pos:end="267:27"><expr pos:start="267:9" pos:end="267:26"><name pos:start="267:9" pos:end="267:11">ret</name> <operator pos:start="267:13" pos:end="267:13">=</operator> <name pos:start="267:15" pos:end="267:26"><name pos:start="267:15" pos:end="267:15">s</name><operator pos:start="267:16" pos:end="267:17">-&gt;</operator><name pos:start="267:18" pos:end="267:23">cursor</name><operator pos:start="267:24" pos:end="267:24">.</operator><name pos:start="267:25" pos:end="267:26">on</name></name></expr>;</expr_stmt>

        <break pos:start="269:9" pos:end="269:14">break;</break>



    <case pos:start="273:5" pos:end="273:38">case <expr pos:start="273:10" pos:end="273:37"><name pos:start="273:10" pos:end="273:37">SVGA_REG_HOST_BITS_PER_PIXEL</name></expr>:</case>

        <expr_stmt pos:start="275:9" pos:end="275:34"><expr pos:start="275:9" pos:end="275:33"><name pos:start="275:9" pos:end="275:11">ret</name> <operator pos:start="275:13" pos:end="275:13">=</operator> <operator pos:start="275:15" pos:end="275:15">(</operator><name pos:start="275:16" pos:end="275:23"><name pos:start="275:16" pos:end="275:16">s</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:23">depth</name></name> <operator pos:start="275:25" pos:end="275:25">+</operator> <literal type="number" pos:start="275:27" pos:end="275:27">7</literal><operator pos:start="275:28" pos:end="275:28">)</operator> <operator pos:start="275:30" pos:end="275:30">&amp;</operator> <operator pos:start="275:32" pos:end="275:32">~</operator><literal type="number" pos:start="275:33" pos:end="275:33">7</literal></expr>;</expr_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>



    <case pos:start="281:5" pos:end="281:31">case <expr pos:start="281:10" pos:end="281:30"><name pos:start="281:10" pos:end="281:30">SVGA_REG_SCRATCH_SIZE</name></expr>:</case>

        <expr_stmt pos:start="283:9" pos:end="283:30"><expr pos:start="283:9" pos:end="283:29"><name pos:start="283:9" pos:end="283:11">ret</name> <operator pos:start="283:13" pos:end="283:13">=</operator> <name pos:start="283:15" pos:end="283:29"><name pos:start="283:15" pos:end="283:15">s</name><operator pos:start="283:16" pos:end="283:17">-&gt;</operator><name pos:start="283:18" pos:end="283:29">scratch_size</name></name></expr>;</expr_stmt>

        <break pos:start="285:9" pos:end="285:14">break;</break>



    <case pos:start="289:5" pos:end="289:27">case <expr pos:start="289:10" pos:end="289:26"><name pos:start="289:10" pos:end="289:26">SVGA_REG_MEM_REGS</name></expr>:</case>

    <case pos:start="291:5" pos:end="291:31">case <expr pos:start="291:10" pos:end="291:30"><name pos:start="291:10" pos:end="291:30">SVGA_REG_NUM_DISPLAYS</name></expr>:</case>

    <case pos:start="293:5" pos:end="293:28">case <expr pos:start="293:10" pos:end="293:27"><name pos:start="293:10" pos:end="293:27">SVGA_REG_PITCHLOCK</name></expr>:</case>

    <case pos:start="295:5" pos:end="295:48">case <expr pos:start="295:10" pos:end="295:47"><name pos:start="295:10" pos:end="295:26">SVGA_PALETTE_BASE</name> <operator pos:start="295:28" pos:end="295:30">...</operator> <name pos:start="295:32" pos:end="295:47">SVGA_PALETTE_END</name></expr>:</case>

        <expr_stmt pos:start="297:9" pos:end="297:16"><expr pos:start="297:9" pos:end="297:15"><name pos:start="297:9" pos:end="297:11">ret</name> <operator pos:start="297:13" pos:end="297:13">=</operator> <literal type="number" pos:start="297:15" pos:end="297:15">0</literal></expr>;</expr_stmt>

        <break pos:start="299:9" pos:end="299:14">break;</break>



    <default pos:start="303:5" pos:end="303:12">default:</default>

        <if_stmt pos:start="305:9" pos:end="313:9"><if pos:start="305:9" pos:end="313:9">if <condition pos:start="305:12" pos:end="307:59">(<expr pos:start="305:13" pos:end="307:58"><name pos:start="305:13" pos:end="305:20"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:20">index</name></name> <operator pos:start="305:22" pos:end="305:23">&gt;=</operator> <name pos:start="305:25" pos:end="305:41">SVGA_SCRATCH_BASE</name> <operator pos:start="305:43" pos:end="305:44">&amp;&amp;</operator>

            <name pos:start="307:13" pos:end="307:20"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:20">index</name></name> <operator pos:start="307:22" pos:end="307:22">&lt;</operator> <name pos:start="307:24" pos:end="307:40">SVGA_SCRATCH_BASE</name> <operator pos:start="307:42" pos:end="307:42">+</operator> <name pos:start="307:44" pos:end="307:58"><name pos:start="307:44" pos:end="307:44">s</name><operator pos:start="307:45" pos:end="307:46">-&gt;</operator><name pos:start="307:47" pos:end="307:58">scratch_size</name></name></expr>)</condition> <block pos:start="307:61" pos:end="313:9">{<block_content pos:start="309:13" pos:end="311:18">

            <expr_stmt pos:start="309:13" pos:end="309:59"><expr pos:start="309:13" pos:end="309:58"><name pos:start="309:13" pos:end="309:15">ret</name> <operator pos:start="309:17" pos:end="309:17">=</operator> <name pos:start="309:19" pos:end="309:58"><name pos:start="309:19" pos:end="309:19">s</name><operator pos:start="309:20" pos:end="309:21">-&gt;</operator><name pos:start="309:22" pos:end="309:28">scratch</name><index pos:start="309:29" pos:end="309:58">[<expr pos:start="309:30" pos:end="309:57"><name pos:start="309:30" pos:end="309:37"><name pos:start="309:30" pos:end="309:30">s</name><operator pos:start="309:31" pos:end="309:32">-&gt;</operator><name pos:start="309:33" pos:end="309:37">index</name></name> <operator pos:start="309:39" pos:end="309:39">-</operator> <name pos:start="309:41" pos:end="309:57">SVGA_SCRATCH_BASE</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="311:13" pos:end="311:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:62"><expr pos:start="315:9" pos:end="315:61"><call pos:start="315:9" pos:end="315:61"><name pos:start="315:9" pos:end="315:14">printf</name><argument_list pos:start="315:15" pos:end="315:61">(<argument pos:start="315:16" pos:end="315:40"><expr pos:start="315:16" pos:end="315:40"><literal type="string" pos:start="315:16" pos:end="315:40">"%s: Bad register %02x\n"</literal></expr></argument>, <argument pos:start="315:43" pos:end="315:50"><expr pos:start="315:43" pos:end="315:50"><name pos:start="315:43" pos:end="315:50">__func__</name></expr></argument>, <argument pos:start="315:53" pos:end="315:60"><expr pos:start="315:53" pos:end="315:60"><name pos:start="315:53" pos:end="315:60"><name pos:start="315:53" pos:end="315:53">s</name><operator pos:start="315:54" pos:end="315:55">-&gt;</operator><name pos:start="315:56" pos:end="315:60">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:16"><expr pos:start="317:9" pos:end="317:15"><name pos:start="317:9" pos:end="317:11">ret</name> <operator pos:start="317:13" pos:end="317:13">=</operator> <literal type="number" pos:start="317:15" pos:end="317:15">0</literal></expr>;</expr_stmt>

        <break pos:start="319:9" pos:end="319:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="325:5" pos:end="337:5"><if pos:start="325:5" pos:end="329:5">if <condition pos:start="325:8" pos:end="325:38">(<expr pos:start="325:9" pos:end="325:37"><name pos:start="325:9" pos:end="325:16"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:16">index</name></name> <operator pos:start="325:18" pos:end="325:19">&gt;=</operator> <name pos:start="325:21" pos:end="325:37">SVGA_SCRATCH_BASE</name></expr>)</condition> <block pos:start="325:40" pos:end="329:5">{<block_content pos:start="327:9" pos:end="327:49">

        <expr_stmt pos:start="327:9" pos:end="327:49"><expr pos:start="327:9" pos:end="327:48"><call pos:start="327:9" pos:end="327:48"><name pos:start="327:9" pos:end="327:33">trace_vmware_scratch_read</name><argument_list pos:start="327:34" pos:end="327:48">(<argument pos:start="327:35" pos:end="327:42"><expr pos:start="327:35" pos:end="327:42"><name pos:start="327:35" pos:end="327:42"><name pos:start="327:35" pos:end="327:35">s</name><operator pos:start="327:36" pos:end="327:37">-&gt;</operator><name pos:start="327:38" pos:end="327:42">index</name></name></expr></argument>, <argument pos:start="327:45" pos:end="327:47"><expr pos:start="327:45" pos:end="327:47"><name pos:start="327:45" pos:end="327:47">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="329:7" pos:end="333:5">else if <condition pos:start="329:15" pos:end="329:45">(<expr pos:start="329:16" pos:end="329:44"><name pos:start="329:16" pos:end="329:23"><name pos:start="329:16" pos:end="329:16">s</name><operator pos:start="329:17" pos:end="329:18">-&gt;</operator><name pos:start="329:19" pos:end="329:23">index</name></name> <operator pos:start="329:25" pos:end="329:26">&gt;=</operator> <name pos:start="329:28" pos:end="329:44">SVGA_PALETTE_BASE</name></expr>)</condition> <block pos:start="329:47" pos:end="333:5">{<block_content pos:start="331:9" pos:end="331:49">

        <expr_stmt pos:start="331:9" pos:end="331:49"><expr pos:start="331:9" pos:end="331:48"><call pos:start="331:9" pos:end="331:48"><name pos:start="331:9" pos:end="331:33">trace_vmware_palette_read</name><argument_list pos:start="331:34" pos:end="331:48">(<argument pos:start="331:35" pos:end="331:42"><expr pos:start="331:35" pos:end="331:42"><name pos:start="331:35" pos:end="331:42"><name pos:start="331:35" pos:end="331:35">s</name><operator pos:start="331:36" pos:end="331:37">-&gt;</operator><name pos:start="331:38" pos:end="331:42">index</name></name></expr></argument>, <argument pos:start="331:45" pos:end="331:47"><expr pos:start="331:45" pos:end="331:47"><name pos:start="331:45" pos:end="331:47">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="333:7" pos:end="337:5">else <block pos:start="333:12" pos:end="337:5">{<block_content pos:start="335:9" pos:end="335:47">

        <expr_stmt pos:start="335:9" pos:end="335:47"><expr pos:start="335:9" pos:end="335:46"><call pos:start="335:9" pos:end="335:46"><name pos:start="335:9" pos:end="335:31">trace_vmware_value_read</name><argument_list pos:start="335:32" pos:end="335:46">(<argument pos:start="335:33" pos:end="335:40"><expr pos:start="335:33" pos:end="335:40"><name pos:start="335:33" pos:end="335:40"><name pos:start="335:33" pos:end="335:33">s</name><operator pos:start="335:34" pos:end="335:35">-&gt;</operator><name pos:start="335:36" pos:end="335:40">index</name></name></expr></argument>, <argument pos:start="335:43" pos:end="335:45"><expr pos:start="335:43" pos:end="335:45"><name pos:start="335:43" pos:end="335:45">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="339:5" pos:end="339:15">return <expr pos:start="339:12" pos:end="339:14"><name pos:start="339:12" pos:end="339:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
