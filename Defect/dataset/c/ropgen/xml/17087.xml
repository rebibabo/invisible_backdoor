<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17087.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:27">get_scale</name><parameter_list pos:start="1:28" pos:end="1:68">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:41">GetBitContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">gb</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">level</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:17">

    <if_stmt pos:start="5:5" pos:end="13:40"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:18">(<expr pos:start="5:9" pos:end="5:17"><name pos:start="5:9" pos:end="5:13">level</name> <operator pos:start="5:15" pos:end="5:15">&lt;</operator> <literal type="number" pos:start="5:17" pos:end="5:17">5</literal></expr>)</condition> <block pos:start="5:20" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:59">

        <comment type="block" pos:start="7:9" pos:end="7:29">/* huffman encoded */</comment>

        <expr_stmt pos:start="9:9" pos:end="9:59"><expr pos:start="9:9" pos:end="9:58"><name pos:start="9:9" pos:end="9:13">value</name> <operator pos:start="9:15" pos:end="9:16">+=</operator> <call pos:start="9:18" pos:end="9:58"><name pos:start="9:18" pos:end="9:29">get_bitalloc</name><argument_list pos:start="9:30" pos:end="9:58">(<argument pos:start="9:31" pos:end="9:32"><expr pos:start="9:31" pos:end="9:32"><name pos:start="9:31" pos:end="9:32">gb</name></expr></argument>, <argument pos:start="9:35" pos:end="9:50"><expr pos:start="9:35" pos:end="9:50"><operator pos:start="9:35" pos:end="9:35">&amp;</operator><name pos:start="9:36" pos:end="9:50">dca_scalefactor</name></expr></argument>, <argument pos:start="9:53" pos:end="9:57"><expr pos:start="9:53" pos:end="9:57"><name pos:start="9:53" pos:end="9:57">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="13:40">else if <condition pos:start="11:15" pos:end="11:25">(<expr pos:start="11:16" pos:end="11:24"><name pos:start="11:16" pos:end="11:20">level</name> <operator pos:start="11:22" pos:end="11:22">&lt;</operator> <literal type="number" pos:start="11:24" pos:end="11:24">8</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:40"><block_content pos:start="13:9" pos:end="13:40">

        <expr_stmt pos:start="13:9" pos:end="13:40"><expr pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:13">value</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:39"><name pos:start="13:17" pos:end="13:24">get_bits</name><argument_list pos:start="13:25" pos:end="13:39">(<argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><name pos:start="13:26" pos:end="13:27">gb</name></expr></argument>, <argument pos:start="13:30" pos:end="13:38"><expr pos:start="13:30" pos:end="13:38"><name pos:start="13:30" pos:end="13:34">level</name> <operator pos:start="13:36" pos:end="13:36">+</operator> <literal type="number" pos:start="13:38" pos:end="13:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="15:5" pos:end="15:17">return <expr pos:start="15:12" pos:end="15:16"><name pos:start="15:12" pos:end="15:16">value</name></expr>;</return>

</block_content>}</block></function>
</unit>
