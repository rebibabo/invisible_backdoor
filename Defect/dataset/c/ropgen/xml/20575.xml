<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20575.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:32">get_bat</name> <parameter_list pos:start="1:34" pos:end="3:73">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:42">CPUState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:58">mmu_ctx_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">ctx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:54"><decl pos:start="3:35" pos:end="3:54"><type pos:start="3:35" pos:end="3:54"><name pos:start="3:35" pos:end="3:46">target_ulong</name></type> <name pos:start="3:48" pos:end="3:54">virtual</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:62"><decl pos:start="3:57" pos:end="3:62"><type pos:start="3:57" pos:end="3:62"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:62">rw</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:72"><decl pos:start="3:65" pos:end="3:72"><type pos:start="3:65" pos:end="3:72"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:72">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="197:1">{<block_content pos:start="7:5" pos:end="195:15">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">target_ulong</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">BATlt</name></decl>, <decl pos:start="7:26" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:31">BATut</name></decl>, <decl pos:start="7:34" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:38">BATu</name></decl>, <decl pos:start="7:41" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:45">BATl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">base</name></decl>, <decl pos:start="9:24" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:24" pos:end="9:28">BEPIl</name></decl>, <decl pos:start="9:31" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:31" pos:end="9:35">BEPIu</name></decl>, <decl pos:start="9:38" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:38" pos:end="9:39">bl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:13"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:13">pp</name></decl>, <decl pos:start="11:16" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:17">pr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="18:0"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:16">= <expr pos:start="13:15" pos:end="13:16"><operator pos:start="13:15" pos:end="13:15">-</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="17:1" pos:end="17:24">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:24"><call pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:11">defined</name> <argument_list pos:start="17:13" pos:end="17:24">(<argument pos:start="17:14" pos:end="17:23"><expr pos:start="17:14" pos:end="17:23"><name pos:start="17:14" pos:end="17:23">DEBUG_BATS</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="19:5" pos:end="28:0"><if pos:start="19:5" pos:end="28:0">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:16">loglevel</name> <operator pos:start="19:18" pos:end="19:19">!=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>)</condition> <block pos:start="19:24" pos:end="28:0">{<block_content pos:start="21:9" pos:end="23:58">

        <expr_stmt pos:start="21:9" pos:end="23:58"><expr pos:start="21:9" pos:end="23:57"><call pos:start="21:9" pos:end="23:57"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="23:57">(<argument pos:start="21:17" pos:end="21:23"><expr pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:23">logfile</name></expr></argument>, <argument pos:start="21:26" pos:end="21:52"><expr pos:start="21:26" pos:end="21:52"><literal type="string" pos:start="21:26" pos:end="21:41">"%s: %cBAT v 0x"</literal> <name pos:start="21:43" pos:end="21:47">ADDRX</name> <literal type="string" pos:start="21:49" pos:end="21:52">"\n"</literal></expr></argument>, <argument pos:start="21:55" pos:end="21:62"><expr pos:start="21:55" pos:end="21:62"><name pos:start="21:55" pos:end="21:62">__func__</name></expr></argument>,

                <argument pos:start="23:17" pos:end="23:47"><expr pos:start="23:17" pos:end="23:47"><ternary pos:start="23:17" pos:end="23:47"><condition pos:start="23:17" pos:end="23:37"><expr pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:20">type</name> <operator pos:start="23:22" pos:end="23:23">==</operator> <name pos:start="23:25" pos:end="23:35">ACCESS_CODE</name></expr> ?</condition><then pos:start="23:39" pos:end="23:41"> <expr pos:start="23:39" pos:end="23:41"><literal type="char" pos:start="23:39" pos:end="23:41">'I'</literal></expr> </then><else pos:start="23:43" pos:end="23:47">: <expr pos:start="23:45" pos:end="23:47"><literal type="char" pos:start="23:45" pos:end="23:47">'D'</literal></expr></else></ternary></expr></argument>, <argument pos:start="23:50" pos:end="23:56"><expr pos:start="23:50" pos:end="23:56"><name pos:start="23:50" pos:end="23:56">virtual</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:6">pr</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:15">msr_pr</name></expr>;</expr_stmt>

    <switch pos:start="31:5" pos:end="52:0">switch <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">type</name></expr>)</condition> <block pos:start="31:19" pos:end="52:0">{<block_content pos:start="33:5" pos:end="47:14">

    <case pos:start="33:5" pos:end="33:21">case <expr pos:start="33:10" pos:end="33:20"><name pos:start="33:10" pos:end="33:20">ACCESS_CODE</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:13">BATlt</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:19">env</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">IBAT</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:13">BATut</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:19">env</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:25">IBAT</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><literal type="number" pos:start="37:27" pos:end="37:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:13">BATlt</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:19">env</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:25">DBAT</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><literal type="number" pos:start="43:27" pos:end="43:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:13">BATut</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:19">env</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:25">DBAT</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    </block_content>}</block></switch>

<cpp:if pos:start="51:1" pos:end="51:24">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:24"><call pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:11">defined</name> <argument_list pos:start="51:13" pos:end="51:24">(<argument pos:start="51:14" pos:end="51:23"><expr pos:start="51:14" pos:end="51:23"><name pos:start="51:14" pos:end="51:23">DEBUG_BATS</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="53:5" pos:end="62:0"><if pos:start="53:5" pos:end="62:0">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:16">loglevel</name> <operator pos:start="53:18" pos:end="53:19">!=</operator> <literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>)</condition> <block pos:start="53:24" pos:end="62:0">{<block_content pos:start="55:9" pos:end="57:58">

        <expr_stmt pos:start="55:9" pos:end="57:58"><expr pos:start="55:9" pos:end="57:57"><call pos:start="55:9" pos:end="57:57"><name pos:start="55:9" pos:end="55:15">fprintf</name><argument_list pos:start="55:16" pos:end="57:57">(<argument pos:start="55:17" pos:end="55:23"><expr pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:23">logfile</name></expr></argument>, <argument pos:start="55:26" pos:end="55:55"><expr pos:start="55:26" pos:end="55:55"><literal type="string" pos:start="55:26" pos:end="55:44">"%s...: %cBAT v 0x"</literal> <name pos:start="55:46" pos:end="55:50">ADDRX</name> <literal type="string" pos:start="55:52" pos:end="55:55">"\n"</literal></expr></argument>, <argument pos:start="55:58" pos:end="55:65"><expr pos:start="55:58" pos:end="55:65"><name pos:start="55:58" pos:end="55:65">__func__</name></expr></argument>,

                <argument pos:start="57:17" pos:end="57:47"><expr pos:start="57:17" pos:end="57:47"><ternary pos:start="57:17" pos:end="57:47"><condition pos:start="57:17" pos:end="57:37"><expr pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:20">type</name> <operator pos:start="57:22" pos:end="57:23">==</operator> <name pos:start="57:25" pos:end="57:35">ACCESS_CODE</name></expr> ?</condition><then pos:start="57:39" pos:end="57:41"> <expr pos:start="57:39" pos:end="57:41"><literal type="char" pos:start="57:39" pos:end="57:41">'I'</literal></expr> </then><else pos:start="57:43" pos:end="57:47">: <expr pos:start="57:45" pos:end="57:47"><literal type="char" pos:start="57:45" pos:end="57:47">'D'</literal></expr></else></ternary></expr></argument>, <argument pos:start="57:50" pos:end="57:56"><expr pos:start="57:50" pos:end="57:56"><name pos:start="57:50" pos:end="57:56">virtual</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:8">base</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <name pos:start="63:12" pos:end="63:18">virtual</name> <operator pos:start="63:20" pos:end="63:20">&amp;</operator> <literal type="number" pos:start="63:22" pos:end="63:31">0xFFFC0000</literal></expr>;</expr_stmt>

    <for pos:start="65:5" pos:end="151:5">for <control pos:start="65:9" pos:end="65:27">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <literal type="number" pos:start="65:21" pos:end="65:21">4</literal></expr>;</condition> <incr pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:24">i</name><operator pos:start="65:25" pos:end="65:26">++</operator></expr></incr>)</control> <block pos:start="65:29" pos:end="151:5">{<block_content pos:start="67:9" pos:end="149:9">

        <expr_stmt pos:start="67:9" pos:end="67:25"><expr pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:12">BATu</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <operator pos:start="67:16" pos:end="67:16">&amp;</operator><name pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:21">BATut</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:25"><expr pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:12">BATl</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <operator pos:start="69:16" pos:end="69:16">&amp;</operator><name pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:21">BATlt</name><index pos:start="69:22" pos:end="69:24">[<expr pos:start="69:23" pos:end="69:23"><name pos:start="69:23" pos:end="69:23">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:13">BEPIu</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <operator pos:start="71:17" pos:end="71:17">*</operator><name pos:start="71:18" pos:end="71:21">BATu</name> <operator pos:start="71:23" pos:end="71:23">&amp;</operator> <literal type="number" pos:start="71:25" pos:end="71:34">0xF0000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:13">BEPIl</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <operator pos:start="73:17" pos:end="73:17">*</operator><name pos:start="73:18" pos:end="73:21">BATu</name> <operator pos:start="73:23" pos:end="73:23">&amp;</operator> <literal type="number" pos:start="73:25" pos:end="73:34">0x0FFE0000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="78:0"><expr pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:10">bl</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <operator pos:start="75:14" pos:end="75:14">(</operator><operator pos:start="75:15" pos:end="75:15">*</operator><name pos:start="75:16" pos:end="75:19">BATu</name> <operator pos:start="75:21" pos:end="75:21">&amp;</operator> <literal type="number" pos:start="75:23" pos:end="75:32">0x00001FFC</literal><operator pos:start="75:33" pos:end="75:33">)</operator> <operator pos:start="75:35" pos:end="75:36">&lt;&lt;</operator> <literal type="number" pos:start="75:38" pos:end="75:39">15</literal></expr>;</expr_stmt>

<cpp:if pos:start="77:1" pos:end="77:24">#<cpp:directive pos:start="77:2" pos:end="77:3">if</cpp:directive> <expr pos:start="77:5" pos:end="77:24"><call pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:11">defined</name> <argument_list pos:start="77:13" pos:end="77:24">(<argument pos:start="77:14" pos:end="77:23"><expr pos:start="77:14" pos:end="77:23"><name pos:start="77:14" pos:end="77:23">DEBUG_BATS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="79:9" pos:end="92:0"><if pos:start="79:9" pos:end="92:0">if <condition pos:start="79:12" pos:end="79:26">(<expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:20">loglevel</name> <operator pos:start="79:22" pos:end="79:23">!=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">0</literal></expr>)</condition> <block pos:start="79:28" pos:end="92:0">{<block_content pos:start="81:13" pos:end="87:34">

            <expr_stmt pos:start="81:13" pos:end="87:34"><expr pos:start="81:13" pos:end="87:33"><call pos:start="81:13" pos:end="87:33"><name pos:start="81:13" pos:end="81:19">fprintf</name><argument_list pos:start="81:20" pos:end="87:33">(<argument pos:start="81:21" pos:end="81:27"><expr pos:start="81:21" pos:end="81:27"><name pos:start="81:21" pos:end="81:27">logfile</name></expr></argument>, <argument pos:start="81:30" pos:end="83:41"><expr pos:start="81:30" pos:end="83:41"><literal type="string" pos:start="81:30" pos:end="81:47">"%s: %cBAT%d v 0x"</literal> <name pos:start="81:49" pos:end="81:53">ADDRX</name> <literal type="string" pos:start="81:55" pos:end="81:64">" BATu 0x"</literal> <name pos:start="81:66" pos:end="81:70">ADDRX</name>

                    <literal type="string" pos:start="83:21" pos:end="83:30">" BATl 0x"</literal> <name pos:start="83:32" pos:end="83:36">ADDRX</name> <literal type="string" pos:start="83:38" pos:end="83:41">"\n"</literal></expr></argument>,

                    <argument pos:start="85:21" pos:end="85:28"><expr pos:start="85:21" pos:end="85:28"><name pos:start="85:21" pos:end="85:28">__func__</name></expr></argument>, <argument pos:start="85:31" pos:end="85:61"><expr pos:start="85:31" pos:end="85:61"><ternary pos:start="85:31" pos:end="85:61"><condition pos:start="85:31" pos:end="85:51"><expr pos:start="85:31" pos:end="85:49"><name pos:start="85:31" pos:end="85:34">type</name> <operator pos:start="85:36" pos:end="85:37">==</operator> <name pos:start="85:39" pos:end="85:49">ACCESS_CODE</name></expr> ?</condition><then pos:start="85:53" pos:end="85:55"> <expr pos:start="85:53" pos:end="85:55"><literal type="char" pos:start="85:53" pos:end="85:55">'I'</literal></expr> </then><else pos:start="85:57" pos:end="85:61">: <expr pos:start="85:59" pos:end="85:61"><literal type="char" pos:start="85:59" pos:end="85:61">'D'</literal></expr></else></ternary></expr></argument>, <argument pos:start="85:64" pos:end="85:64"><expr pos:start="85:64" pos:end="85:64"><name pos:start="85:64" pos:end="85:64">i</name></expr></argument>, <argument pos:start="85:67" pos:end="85:73"><expr pos:start="85:67" pos:end="85:73"><name pos:start="85:67" pos:end="85:73">virtual</name></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:25"><expr pos:start="87:21" pos:end="87:25"><operator pos:start="87:21" pos:end="87:21">*</operator><name pos:start="87:22" pos:end="87:25">BATu</name></expr></argument>, <argument pos:start="87:28" pos:end="87:32"><expr pos:start="87:28" pos:end="87:32"><operator pos:start="87:28" pos:end="87:28">*</operator><name pos:start="87:29" pos:end="87:32">BATl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="93:9" pos:end="149:9"><if pos:start="93:9" pos:end="149:9">if <condition pos:start="93:12" pos:end="95:52">(<expr pos:start="93:13" pos:end="95:51"><operator pos:start="93:13" pos:end="93:13">(</operator><name pos:start="93:14" pos:end="93:20">virtual</name> <operator pos:start="93:22" pos:end="93:22">&amp;</operator> <literal type="number" pos:start="93:24" pos:end="93:33">0xF0000000</literal><operator pos:start="93:34" pos:end="93:34">)</operator> <operator pos:start="93:36" pos:end="93:37">==</operator> <name pos:start="93:39" pos:end="93:43">BEPIu</name> <operator pos:start="93:45" pos:end="93:46">&amp;&amp;</operator>

            <operator pos:start="95:13" pos:end="95:13">(</operator><operator pos:start="95:14" pos:end="95:14">(</operator><name pos:start="95:15" pos:end="95:21">virtual</name> <operator pos:start="95:23" pos:end="95:23">&amp;</operator> <literal type="number" pos:start="95:25" pos:end="95:34">0x0FFE0000</literal><operator pos:start="95:35" pos:end="95:35">)</operator> <operator pos:start="95:37" pos:end="95:37">&amp;</operator> <operator pos:start="95:39" pos:end="95:39">~</operator><name pos:start="95:40" pos:end="95:41">bl</name><operator pos:start="95:42" pos:end="95:42">)</operator> <operator pos:start="95:44" pos:end="95:45">==</operator> <name pos:start="95:47" pos:end="95:51">BEPIl</name></expr>)</condition> <block pos:start="95:54" pos:end="149:9">{<block_content pos:start="99:13" pos:end="147:13">

            <comment type="block" pos:start="97:13" pos:end="97:29">/* BAT matches */</comment>

            <if_stmt pos:start="99:13" pos:end="147:13"><if pos:start="99:13" pos:end="147:13">if <condition pos:start="99:16" pos:end="101:52">(<expr pos:start="99:17" pos:end="101:51"><operator pos:start="99:17" pos:end="99:17">(</operator><operator pos:start="99:18" pos:end="99:18">(</operator><name pos:start="99:19" pos:end="99:20">pr</name> <operator pos:start="99:22" pos:end="99:23">==</operator> <literal type="number" pos:start="99:25" pos:end="99:25">0</literal><operator pos:start="99:26" pos:end="99:26">)</operator> <operator pos:start="99:28" pos:end="99:29">&amp;&amp;</operator> <operator pos:start="99:31" pos:end="99:31">(</operator><operator pos:start="99:32" pos:end="99:32">*</operator><name pos:start="99:33" pos:end="99:36">BATu</name> <operator pos:start="99:38" pos:end="99:38">&amp;</operator> <literal type="number" pos:start="99:40" pos:end="99:49">0x00000002</literal><operator pos:start="99:50" pos:end="99:50">)</operator><operator pos:start="99:51" pos:end="99:51">)</operator> <operator pos:start="99:53" pos:end="99:54">||</operator>

                <operator pos:start="101:17" pos:end="101:17">(</operator><operator pos:start="101:18" pos:end="101:18">(</operator><name pos:start="101:19" pos:end="101:20">pr</name> <operator pos:start="101:22" pos:end="101:23">!=</operator> <literal type="number" pos:start="101:25" pos:end="101:25">0</literal><operator pos:start="101:26" pos:end="101:26">)</operator> <operator pos:start="101:28" pos:end="101:29">&amp;&amp;</operator> <operator pos:start="101:31" pos:end="101:31">(</operator><operator pos:start="101:32" pos:end="101:32">*</operator><name pos:start="101:33" pos:end="101:36">BATu</name> <operator pos:start="101:38" pos:end="101:38">&amp;</operator> <literal type="number" pos:start="101:40" pos:end="101:49">0x00000001</literal><operator pos:start="101:50" pos:end="101:50">)</operator><operator pos:start="101:51" pos:end="101:51">)</operator></expr>)</condition> <block pos:start="101:54" pos:end="147:13">{<block_content pos:start="105:17" pos:end="145:22">

                <comment type="block" pos:start="103:17" pos:end="103:42">/* Get physical address */</comment>

                <expr_stmt pos:start="105:17" pos:end="109:43"><expr pos:start="105:17" pos:end="109:42"><name pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:19">ctx</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:26">raddr</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <operator pos:start="105:30" pos:end="105:30">(</operator><operator pos:start="105:31" pos:end="105:31">*</operator><name pos:start="105:32" pos:end="105:35">BATl</name> <operator pos:start="105:37" pos:end="105:37">&amp;</operator> <literal type="number" pos:start="105:39" pos:end="105:48">0xF0000000</literal><operator pos:start="105:49" pos:end="105:49">)</operator> <operator pos:start="105:51" pos:end="105:51">|</operator>

                    <operator pos:start="107:21" pos:end="107:21">(</operator><operator pos:start="107:22" pos:end="107:22">(</operator><name pos:start="107:23" pos:end="107:29">virtual</name> <operator pos:start="107:31" pos:end="107:31">&amp;</operator> <literal type="number" pos:start="107:33" pos:end="107:42">0x0FFE0000</literal> <operator pos:start="107:44" pos:end="107:44">&amp;</operator> <name pos:start="107:46" pos:end="107:47">bl</name><operator pos:start="107:48" pos:end="107:48">)</operator> <operator pos:start="107:50" pos:end="107:50">|</operator> <operator pos:start="107:52" pos:end="107:52">(</operator><operator pos:start="107:53" pos:end="107:53">*</operator><name pos:start="107:54" pos:end="107:57">BATl</name> <operator pos:start="107:59" pos:end="107:59">&amp;</operator> <literal type="number" pos:start="107:61" pos:end="107:70">0x0FFE0000</literal><operator pos:start="107:71" pos:end="107:71">)</operator><operator pos:start="107:72" pos:end="107:72">)</operator> <operator pos:start="107:74" pos:end="107:74">|</operator>

                    <operator pos:start="109:21" pos:end="109:21">(</operator><name pos:start="109:22" pos:end="109:28">virtual</name> <operator pos:start="109:30" pos:end="109:30">&amp;</operator> <literal type="number" pos:start="109:32" pos:end="109:41">0x0001F000</literal><operator pos:start="109:42" pos:end="109:42">)</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="111:17" pos:end="111:43">/* Compute access rights */</comment>

                <expr_stmt pos:start="113:17" pos:end="113:40"><expr pos:start="113:17" pos:end="113:39"><name pos:start="113:17" pos:end="113:18">pp</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <operator pos:start="113:22" pos:end="113:22">*</operator><name pos:start="113:23" pos:end="113:26">BATl</name> <operator pos:start="113:28" pos:end="113:28">&amp;</operator> <literal type="number" pos:start="113:30" pos:end="113:39">0x00000003</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:30"><expr pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:25"><name pos:start="115:17" pos:end="115:19">ctx</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:25">prot</name></name> <operator pos:start="115:27" pos:end="115:27">=</operator> <literal type="number" pos:start="115:29" pos:end="115:29">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="117:17" pos:end="125:17"><if pos:start="117:17" pos:end="125:17">if <condition pos:start="117:20" pos:end="117:28">(<expr pos:start="117:21" pos:end="117:27"><name pos:start="117:21" pos:end="117:22">pp</name> <operator pos:start="117:24" pos:end="117:25">!=</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>)</condition> <block pos:start="117:30" pos:end="125:17">{<block_content pos:start="119:21" pos:end="123:48">

                    <expr_stmt pos:start="119:21" pos:end="119:54"><expr pos:start="119:21" pos:end="119:53"><name pos:start="119:21" pos:end="119:29"><name pos:start="119:21" pos:end="119:23">ctx</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:29">prot</name></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:41">PAGE_READ</name> <operator pos:start="119:43" pos:end="119:43">|</operator> <name pos:start="119:45" pos:end="119:53">PAGE_EXEC</name></expr>;</expr_stmt>

                    <if_stmt pos:start="121:21" pos:end="123:48"><if pos:start="121:21" pos:end="123:48">if <condition pos:start="121:24" pos:end="121:34">(<expr pos:start="121:25" pos:end="121:33"><name pos:start="121:25" pos:end="121:26">pp</name> <operator pos:start="121:28" pos:end="121:29">==</operator> <literal type="number" pos:start="121:31" pos:end="121:33">0x2</literal></expr>)</condition><block type="pseudo" pos:start="123:25" pos:end="123:48"><block_content pos:start="123:25" pos:end="123:48">

                        <expr_stmt pos:start="123:25" pos:end="123:48"><expr pos:start="123:25" pos:end="123:47"><name pos:start="123:25" pos:end="123:33"><name pos:start="123:25" pos:end="123:27">ctx</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:33">prot</name></name> <operator pos:start="123:35" pos:end="123:36">|=</operator> <name pos:start="123:38" pos:end="123:47">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="127:17" pos:end="130:0"><expr pos:start="127:17" pos:end="127:53"><name pos:start="127:17" pos:end="127:19">ret</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <call pos:start="127:23" pos:end="127:53"><name pos:start="127:23" pos:end="127:32">check_prot</name><argument_list pos:start="127:33" pos:end="127:53">(<argument pos:start="127:34" pos:end="127:42"><expr pos:start="127:34" pos:end="127:42"><name pos:start="127:34" pos:end="127:42"><name pos:start="127:34" pos:end="127:36">ctx</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:42">prot</name></name></expr></argument>, <argument pos:start="127:45" pos:end="127:46"><expr pos:start="127:45" pos:end="127:46"><name pos:start="127:45" pos:end="127:46">rw</name></expr></argument>, <argument pos:start="127:49" pos:end="127:52"><expr pos:start="127:49" pos:end="127:52"><name pos:start="127:49" pos:end="127:52">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="129:1" pos:end="129:24">#<cpp:directive pos:start="129:2" pos:end="129:3">if</cpp:directive> <expr pos:start="129:5" pos:end="129:24"><call pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:11">defined</name> <argument_list pos:start="129:13" pos:end="129:24">(<argument pos:start="129:14" pos:end="129:23"><expr pos:start="129:14" pos:end="129:23"><name pos:start="129:14" pos:end="129:23">DEBUG_BATS</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="131:17" pos:end="144:0"><if pos:start="131:17" pos:end="144:0">if <condition pos:start="131:20" pos:end="131:46">(<expr pos:start="131:21" pos:end="131:45"><name pos:start="131:21" pos:end="131:23">ret</name> <operator pos:start="131:25" pos:end="131:26">==</operator> <literal type="number" pos:start="131:28" pos:end="131:28">0</literal> <operator pos:start="131:30" pos:end="131:31">&amp;&amp;</operator> <name pos:start="131:33" pos:end="131:40">loglevel</name> <operator pos:start="131:42" pos:end="131:43">!=</operator> <literal type="number" pos:start="131:45" pos:end="131:45">0</literal></expr>)</condition> <block pos:start="131:48" pos:end="144:0">{<block_content pos:start="133:21" pos:end="139:64">

                    <expr_stmt pos:start="133:21" pos:end="139:64"><expr pos:start="133:21" pos:end="139:63"><call pos:start="133:21" pos:end="139:63"><name pos:start="133:21" pos:end="133:27">fprintf</name><argument_list pos:start="133:28" pos:end="139:63">(<argument pos:start="133:29" pos:end="133:35"><expr pos:start="133:29" pos:end="133:35"><name pos:start="133:29" pos:end="133:35">logfile</name></expr></argument>, <argument pos:start="133:38" pos:end="135:42"><expr pos:start="133:38" pos:end="135:42"><literal type="string" pos:start="133:38" pos:end="133:57">"BAT %d match: r 0x"</literal> <name pos:start="133:59" pos:end="133:64">PADDRX</name>

                            <literal type="string" pos:start="135:29" pos:end="135:42">" prot=%c%c\n"</literal></expr></argument>,

                            <argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><name pos:start="137:29" pos:end="137:29">i</name></expr></argument>, <argument pos:start="137:32" pos:end="137:41"><expr pos:start="137:32" pos:end="137:41"><name pos:start="137:32" pos:end="137:41"><name pos:start="137:32" pos:end="137:34">ctx</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:41">raddr</name></name></expr></argument>, <argument pos:start="137:44" pos:end="137:76"><expr pos:start="137:44" pos:end="137:76"><ternary pos:start="137:44" pos:end="137:76"><condition pos:start="137:44" pos:end="137:66"><expr pos:start="137:44" pos:end="137:64"><name pos:start="137:44" pos:end="137:52"><name pos:start="137:44" pos:end="137:46">ctx</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:52">prot</name></name> <operator pos:start="137:54" pos:end="137:54">&amp;</operator> <name pos:start="137:56" pos:end="137:64">PAGE_READ</name></expr> ?</condition><then pos:start="137:68" pos:end="137:70"> <expr pos:start="137:68" pos:end="137:70"><literal type="char" pos:start="137:68" pos:end="137:70">'R'</literal></expr> </then><else pos:start="137:72" pos:end="137:76">: <expr pos:start="137:74" pos:end="137:76"><literal type="char" pos:start="137:74" pos:end="137:76">'-'</literal></expr></else></ternary></expr></argument>,

                            <argument pos:start="139:29" pos:end="139:62"><expr pos:start="139:29" pos:end="139:62"><ternary pos:start="139:29" pos:end="139:62"><condition pos:start="139:29" pos:end="139:52"><expr pos:start="139:29" pos:end="139:50"><name pos:start="139:29" pos:end="139:37"><name pos:start="139:29" pos:end="139:31">ctx</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:37">prot</name></name> <operator pos:start="139:39" pos:end="139:39">&amp;</operator> <name pos:start="139:41" pos:end="139:50">PAGE_WRITE</name></expr> ?</condition><then pos:start="139:54" pos:end="139:56"> <expr pos:start="139:54" pos:end="139:56"><literal type="char" pos:start="139:54" pos:end="139:56">'W'</literal></expr> </then><else pos:start="139:58" pos:end="139:62">: <expr pos:start="139:60" pos:end="139:62"><literal type="char" pos:start="139:60" pos:end="139:62">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>

                <break pos:start="145:17" pos:end="145:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="153:5" pos:end="189:5"><if pos:start="153:5" pos:end="189:5">if <condition pos:start="153:8" pos:end="153:16">(<expr pos:start="153:9" pos:end="153:15"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">&lt;</operator> <literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>)</condition> <block pos:start="153:18" pos:end="189:5">{<block_content pos:start="157:9" pos:end="188:0">

<cpp:if pos:start="155:1" pos:end="155:24">#<cpp:directive pos:start="155:2" pos:end="155:3">if</cpp:directive> <expr pos:start="155:5" pos:end="155:24"><call pos:start="155:5" pos:end="155:24"><name pos:start="155:5" pos:end="155:11">defined</name> <argument_list pos:start="155:13" pos:end="155:24">(<argument pos:start="155:14" pos:end="155:23"><expr pos:start="155:14" pos:end="155:23"><name pos:start="155:14" pos:end="155:23">DEBUG_BATS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="157:9" pos:end="188:0"><if pos:start="157:9" pos:end="188:0">if <condition pos:start="157:12" pos:end="157:26">(<expr pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:20">loglevel</name> <operator pos:start="157:22" pos:end="157:23">!=</operator> <literal type="number" pos:start="157:25" pos:end="157:25">0</literal></expr>)</condition> <block pos:start="157:28" pos:end="188:0">{<block_content pos:start="159:13" pos:end="183:13">

            <expr_stmt pos:start="159:13" pos:end="159:73"><expr pos:start="159:13" pos:end="159:72"><call pos:start="159:13" pos:end="159:72"><name pos:start="159:13" pos:end="159:19">fprintf</name><argument_list pos:start="159:20" pos:end="159:72">(<argument pos:start="159:21" pos:end="159:27"><expr pos:start="159:21" pos:end="159:27"><name pos:start="159:21" pos:end="159:27">logfile</name></expr></argument>, <argument pos:start="159:30" pos:end="159:62"><expr pos:start="159:30" pos:end="159:62"><literal type="string" pos:start="159:30" pos:end="159:50">"no BAT match for 0x"</literal> <name pos:start="159:52" pos:end="159:56">ADDRX</name> <literal type="string" pos:start="159:58" pos:end="159:62">":\n"</literal></expr></argument>, <argument pos:start="159:65" pos:end="159:71"><expr pos:start="159:65" pos:end="159:71"><name pos:start="159:65" pos:end="159:71">virtual</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="161:13" pos:end="183:13">for <control pos:start="161:17" pos:end="161:35">(<init pos:start="161:18" pos:end="161:23"><expr pos:start="161:18" pos:end="161:22"><name pos:start="161:18" pos:end="161:18">i</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <literal type="number" pos:start="161:22" pos:end="161:22">0</literal></expr>;</init> <condition pos:start="161:25" pos:end="161:30"><expr pos:start="161:25" pos:end="161:29"><name pos:start="161:25" pos:end="161:25">i</name> <operator pos:start="161:27" pos:end="161:27">&lt;</operator> <literal type="number" pos:start="161:29" pos:end="161:29">4</literal></expr>;</condition> <incr pos:start="161:32" pos:end="161:34"><expr pos:start="161:32" pos:end="161:34"><name pos:start="161:32" pos:end="161:32">i</name><operator pos:start="161:33" pos:end="161:34">++</operator></expr></incr>)</control> <block pos:start="161:37" pos:end="183:13">{<block_content pos:start="163:17" pos:end="181:56">

                <expr_stmt pos:start="163:17" pos:end="163:33"><expr pos:start="163:17" pos:end="163:32"><name pos:start="163:17" pos:end="163:20">BATu</name> <operator pos:start="163:22" pos:end="163:22">=</operator> <operator pos:start="163:24" pos:end="163:24">&amp;</operator><name pos:start="163:25" pos:end="163:32"><name pos:start="163:25" pos:end="163:29">BATut</name><index pos:start="163:30" pos:end="163:32">[<expr pos:start="163:31" pos:end="163:31"><name pos:start="163:31" pos:end="163:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:33"><expr pos:start="165:17" pos:end="165:32"><name pos:start="165:17" pos:end="165:20">BATl</name> <operator pos:start="165:22" pos:end="165:22">=</operator> <operator pos:start="165:24" pos:end="165:24">&amp;</operator><name pos:start="165:25" pos:end="165:32"><name pos:start="165:25" pos:end="165:29">BATlt</name><index pos:start="165:30" pos:end="165:32">[<expr pos:start="165:31" pos:end="165:31"><name pos:start="165:31" pos:end="165:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:43"><expr pos:start="167:17" pos:end="167:42"><name pos:start="167:17" pos:end="167:21">BEPIu</name> <operator pos:start="167:23" pos:end="167:23">=</operator> <operator pos:start="167:25" pos:end="167:25">*</operator><name pos:start="167:26" pos:end="167:29">BATu</name> <operator pos:start="167:31" pos:end="167:31">&amp;</operator> <literal type="number" pos:start="167:33" pos:end="167:42">0xF0000000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:43"><expr pos:start="169:17" pos:end="169:42"><name pos:start="169:17" pos:end="169:21">BEPIl</name> <operator pos:start="169:23" pos:end="169:23">=</operator> <operator pos:start="169:25" pos:end="169:25">*</operator><name pos:start="169:26" pos:end="169:29">BATu</name> <operator pos:start="169:31" pos:end="169:31">&amp;</operator> <literal type="number" pos:start="169:33" pos:end="169:42">0x0FFE0000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:48"><expr pos:start="171:17" pos:end="171:47"><name pos:start="171:17" pos:end="171:18">bl</name> <operator pos:start="171:20" pos:end="171:20">=</operator> <operator pos:start="171:22" pos:end="171:22">(</operator><operator pos:start="171:23" pos:end="171:23">*</operator><name pos:start="171:24" pos:end="171:27">BATu</name> <operator pos:start="171:29" pos:end="171:29">&amp;</operator> <literal type="number" pos:start="171:31" pos:end="171:40">0x00001FFC</literal><operator pos:start="171:41" pos:end="171:41">)</operator> <operator pos:start="171:43" pos:end="171:44">&lt;&lt;</operator> <literal type="number" pos:start="171:46" pos:end="171:47">15</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="181:56"><expr pos:start="173:17" pos:end="181:55"><call pos:start="173:17" pos:end="181:55"><name pos:start="173:17" pos:end="173:23">fprintf</name><argument_list pos:start="173:24" pos:end="181:55">(<argument pos:start="173:25" pos:end="173:31"><expr pos:start="173:25" pos:end="173:31"><name pos:start="173:25" pos:end="173:31">logfile</name></expr></argument>, <argument pos:start="173:34" pos:end="177:63"><expr pos:start="173:34" pos:end="177:63"><literal type="string" pos:start="173:34" pos:end="173:51">"%s: %cBAT%d v 0x"</literal> <name pos:start="173:53" pos:end="173:57">ADDRX</name> <literal type="string" pos:start="173:59" pos:end="173:68">" BATu 0x"</literal> <name pos:start="173:70" pos:end="173:74">ADDRX</name>

                        <literal type="string" pos:start="175:25" pos:end="175:34">" BATl 0x"</literal> <name pos:start="175:36" pos:end="175:40">ADDRX</name> <literal type="string" pos:start="175:42" pos:end="175:48">" \n\t"</literal>

                        <literal type="string" pos:start="177:25" pos:end="177:28">"0x"</literal> <name pos:start="177:30" pos:end="177:34">ADDRX</name> <literal type="string" pos:start="177:36" pos:end="177:40">" 0x"</literal> <name pos:start="177:42" pos:end="177:46">ADDRX</name> <literal type="string" pos:start="177:48" pos:end="177:52">" 0x"</literal> <name pos:start="177:54" pos:end="177:58">ADDRX</name> <literal type="string" pos:start="177:60" pos:end="177:63">"\n"</literal></expr></argument>,

                        <argument pos:start="179:25" pos:end="179:32"><expr pos:start="179:25" pos:end="179:32"><name pos:start="179:25" pos:end="179:32">__func__</name></expr></argument>, <argument pos:start="179:35" pos:end="179:65"><expr pos:start="179:35" pos:end="179:65"><ternary pos:start="179:35" pos:end="179:65"><condition pos:start="179:35" pos:end="179:55"><expr pos:start="179:35" pos:end="179:53"><name pos:start="179:35" pos:end="179:38">type</name> <operator pos:start="179:40" pos:end="179:41">==</operator> <name pos:start="179:43" pos:end="179:53">ACCESS_CODE</name></expr> ?</condition><then pos:start="179:57" pos:end="179:59"> <expr pos:start="179:57" pos:end="179:59"><literal type="char" pos:start="179:57" pos:end="179:59">'I'</literal></expr> </then><else pos:start="179:61" pos:end="179:65">: <expr pos:start="179:63" pos:end="179:65"><literal type="char" pos:start="179:63" pos:end="179:65">'D'</literal></expr></else></ternary></expr></argument>, <argument pos:start="179:68" pos:end="179:68"><expr pos:start="179:68" pos:end="179:68"><name pos:start="179:68" pos:end="179:68">i</name></expr></argument>, <argument pos:start="179:71" pos:end="179:77"><expr pos:start="179:71" pos:end="179:77"><name pos:start="179:71" pos:end="179:77">virtual</name></expr></argument>,

                        <argument pos:start="181:25" pos:end="181:29"><expr pos:start="181:25" pos:end="181:29"><operator pos:start="181:25" pos:end="181:25">*</operator><name pos:start="181:26" pos:end="181:29">BATu</name></expr></argument>, <argument pos:start="181:32" pos:end="181:36"><expr pos:start="181:32" pos:end="181:36"><operator pos:start="181:32" pos:end="181:32">*</operator><name pos:start="181:33" pos:end="181:36">BATl</name></expr></argument>, <argument pos:start="181:39" pos:end="181:43"><expr pos:start="181:39" pos:end="181:43"><name pos:start="181:39" pos:end="181:43">BEPIu</name></expr></argument>, <argument pos:start="181:46" pos:end="181:50"><expr pos:start="181:46" pos:end="181:50"><name pos:start="181:46" pos:end="181:50">BEPIl</name></expr></argument>, <argument pos:start="181:53" pos:end="181:54"><expr pos:start="181:53" pos:end="181:54"><name pos:start="181:53" pos:end="181:54">bl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="187:1" pos:end="187:6">#<cpp:directive pos:start="187:2" pos:end="187:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="193:5" pos:end="193:16">/* No hit */</comment>

    <return pos:start="195:5" pos:end="195:15">return <expr pos:start="195:12" pos:end="195:14"><name pos:start="195:12" pos:end="195:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
