<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7718.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">mov_parse_stsd_video</name><parameter_list pos:start="1:33" pos:end="3:68">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">MOVContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:59">AVIOContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">pb</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:41">AVStream</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:45">st</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:67"><decl pos:start="3:48" pos:end="3:67"><type pos:start="3:48" pos:end="3:67"><name pos:start="3:48" pos:end="3:63">MOVStreamContext</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:67">sc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:5">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:26"><name pos:start="7:13" pos:end="7:22">codec_name</name><index pos:start="7:23" pos:end="7:26">[<expr pos:start="7:24" pos:end="7:25"><literal type="number" pos:start="7:24" pos:end="7:25">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">stsd_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:20">len</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:44">/* The first 16 bytes of the video sample description are already

     * read in ff_mov_read_stsd_entries() */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:14">stsd_start</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:30"><name pos:start="19:18" pos:end="19:26">avio_tell</name><argument_list pos:start="19:27" pos:end="19:30">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">pb</name></expr></argument>)</argument_list></call> <operator pos:start="19:32" pos:end="19:32">-</operator> <literal type="number" pos:start="19:34" pos:end="19:35">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><call pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:13">avio_rb16</name><argument_list pos:start="23:14" pos:end="23:17">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:20" pos:end="23:32">/* version */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">avio_rb16</name><argument_list pos:start="25:14" pos:end="25:17">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:20" pos:end="25:39">/* revision level */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><call pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:13">avio_rb32</name><argument_list pos:start="27:14" pos:end="27:17">(<argument pos:start="27:15" pos:end="27:16"><expr pos:start="27:15" pos:end="27:16"><name pos:start="27:15" pos:end="27:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:20" pos:end="27:31">/* vendor */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">avio_rb32</name><argument_list pos:start="29:14" pos:end="29:17">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:20" pos:end="29:41">/* temporal quality */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><call pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:13">avio_rb32</name><argument_list pos:start="31:14" pos:end="31:17">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:20" pos:end="31:40">/* spatial quality */</comment>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:6">st</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:16">codecpar</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">width</name></name>  <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:36">avio_rb16</name><argument_list pos:start="35:37" pos:end="35:40">(<argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:43" pos:end="35:53">/* width */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:16">codecpar</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:24">height</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:40"><name pos:start="37:28" pos:end="37:36">avio_rb16</name><argument_list pos:start="37:37" pos:end="37:40">(<argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><name pos:start="37:38" pos:end="37:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:43" pos:end="37:54">/* height */</comment>



    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><call pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:13">avio_rb32</name><argument_list pos:start="41:14" pos:end="41:17">(<argument pos:start="41:15" pos:end="41:16"><expr pos:start="41:15" pos:end="41:16"><name pos:start="41:15" pos:end="41:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:20" pos:end="41:41">/* horiz resolution */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><call pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:13">avio_rb32</name><argument_list pos:start="43:14" pos:end="43:17">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="43:20" pos:end="43:40">/* vert resolution */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><call pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:13">avio_rb32</name><argument_list pos:start="45:14" pos:end="45:17">(<argument pos:start="45:15" pos:end="45:16"><expr pos:start="45:15" pos:end="45:16"><name pos:start="45:15" pos:end="45:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:20" pos:end="45:44">/* data size, always 0 */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><call pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:13">avio_rb16</name><argument_list pos:start="47:14" pos:end="47:17">(<argument pos:start="47:15" pos:end="47:16"><expr pos:start="47:15" pos:end="47:16"><name pos:start="47:15" pos:end="47:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:20" pos:end="47:43">/* frames per samples */</comment>



    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:7">len</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:21"><name pos:start="51:11" pos:end="51:17">avio_r8</name><argument_list pos:start="51:18" pos:end="51:21">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:24" pos:end="51:54">/* codec name, pascal string */</comment>

    <if_stmt pos:start="53:5" pos:end="55:17"><if pos:start="53:5" pos:end="55:17">if <condition pos:start="53:8" pos:end="53:17">(<expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">len</name> <operator pos:start="53:13" pos:end="53:13">&gt;</operator> <literal type="number" pos:start="53:15" pos:end="53:16">31</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:17"><block_content pos:start="55:9" pos:end="55:17">

        <expr_stmt pos:start="55:9" pos:end="55:17"><expr pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:11">len</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <literal type="number" pos:start="55:15" pos:end="55:16">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:68"><expr pos:start="57:5" pos:end="57:67"><call pos:start="57:5" pos:end="57:67"><name pos:start="57:5" pos:end="57:23">mov_read_mac_string</name><argument_list pos:start="57:24" pos:end="57:67">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">c</name></expr></argument>, <argument pos:start="57:28" pos:end="57:29"><expr pos:start="57:28" pos:end="57:29"><name pos:start="57:28" pos:end="57:29">pb</name></expr></argument>, <argument pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><name pos:start="57:32" pos:end="57:34">len</name></expr></argument>, <argument pos:start="57:37" pos:end="57:46"><expr pos:start="57:37" pos:end="57:46"><name pos:start="57:37" pos:end="57:46">codec_name</name></expr></argument>, <argument pos:start="57:49" pos:end="57:66"><expr pos:start="57:49" pos:end="57:66"><sizeof pos:start="57:49" pos:end="57:66">sizeof<argument_list pos:start="57:55" pos:end="57:66">(<argument pos:start="57:56" pos:end="57:65"><expr pos:start="57:56" pos:end="57:65"><name pos:start="57:56" pos:end="57:65">codec_name</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:32"><if pos:start="59:5" pos:end="61:32">if <condition pos:start="59:8" pos:end="59:17">(<expr pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:11">len</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:16">31</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:32"><block_content pos:start="61:9" pos:end="61:32">

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><call pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:17">avio_skip</name><argument_list pos:start="61:18" pos:end="61:31">(<argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><name pos:start="61:19" pos:end="61:20">pb</name></expr></argument>, <argument pos:start="61:23" pos:end="61:30"><expr pos:start="61:23" pos:end="61:30"><literal type="number" pos:start="61:23" pos:end="61:26">31</literal> <operator pos:start="61:26" pos:end="61:26">-</operator> <name pos:start="61:28" pos:end="61:30">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="67:61"><if pos:start="65:5" pos:end="67:61">if <condition pos:start="65:8" pos:end="65:22">(<expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:18">codec_name</name><index pos:start="65:19" pos:end="65:21">[<expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:61"><block_content pos:start="67:9" pos:end="67:61">

        <expr_stmt pos:start="67:9" pos:end="67:61"><expr pos:start="67:9" pos:end="67:60"><call pos:start="67:9" pos:end="67:60"><name pos:start="67:9" pos:end="67:19">av_dict_set</name><argument_list pos:start="67:20" pos:end="67:60">(<argument pos:start="67:21" pos:end="67:33"><expr pos:start="67:21" pos:end="67:33"><operator pos:start="67:21" pos:end="67:21">&amp;</operator><name pos:start="67:22" pos:end="67:33"><name pos:start="67:22" pos:end="67:23">st</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:33">metadata</name></name></expr></argument>, <argument pos:start="67:36" pos:end="67:44"><expr pos:start="67:36" pos:end="67:44"><literal type="string" pos:start="67:36" pos:end="67:44">"encoder"</literal></expr></argument>, <argument pos:start="67:47" pos:end="67:56"><expr pos:start="67:47" pos:end="67:56"><name pos:start="67:47" pos:end="67:56">codec_name</name></expr></argument>, <argument pos:start="67:59" pos:end="67:59"><expr pos:start="67:59" pos:end="67:59"><literal type="number" pos:start="67:59" pos:end="67:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:56">/* codec_tag YV12 triggers an UV swap in rawdec.c */</comment>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:61">(<expr pos:start="73:9" pos:end="73:60"><operator pos:start="73:9" pos:end="73:9">!</operator><call pos:start="73:10" pos:end="73:60"><name pos:start="73:10" pos:end="73:15">memcmp</name><argument_list pos:start="73:16" pos:end="73:60">(<argument pos:start="73:17" pos:end="73:26"><expr pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:26">codec_name</name></expr></argument>, <argument pos:start="73:29" pos:end="73:55"><expr pos:start="73:29" pos:end="73:55"><literal type="string" pos:start="73:29" pos:end="73:55">"Planar Y'CbCr 8-bit 4:2:0"</literal></expr></argument>, <argument pos:start="73:58" pos:end="73:59"><expr pos:start="73:58" pos:end="73:59"><literal type="number" pos:start="73:58" pos:end="73:59">25</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:63" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:35">

        <expr_stmt pos:start="75:9" pos:end="75:60"><expr pos:start="75:9" pos:end="75:59"><name pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:10">st</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:20">codecpar</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:31">codec_tag</name></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <call pos:start="75:35" pos:end="75:59"><name pos:start="75:35" pos:end="75:39">MKTAG</name><argument_list pos:start="75:40" pos:end="75:59">(<argument pos:start="75:41" pos:end="75:43"><expr pos:start="75:41" pos:end="75:43"><literal type="char" pos:start="75:41" pos:end="75:43">'I'</literal></expr></argument>, <argument pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><literal type="char" pos:start="75:46" pos:end="75:48">'4'</literal></expr></argument>, <argument pos:start="75:51" pos:end="75:53"><expr pos:start="75:51" pos:end="75:53"><literal type="char" pos:start="75:51" pos:end="75:53">'2'</literal></expr></argument>, <argument pos:start="75:56" pos:end="75:58"><expr pos:start="75:56" pos:end="75:58"><literal type="char" pos:start="75:56" pos:end="75:58">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:20">codecpar</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">width</name></name> <operator pos:start="77:29" pos:end="77:30">&amp;=</operator> <operator pos:start="77:32" pos:end="77:32">~</operator><literal type="number" pos:start="77:33" pos:end="77:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:10">st</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:20">codecpar</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:28">height</name></name> <operator pos:start="79:30" pos:end="79:31">&amp;=</operator> <operator pos:start="79:33" pos:end="79:33">~</operator><literal type="number" pos:start="79:34" pos:end="79:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="83:5" pos:end="83:63">/* Flash Media Server uses tag H.263 with Sorenson Spark */</comment>

    <if_stmt pos:start="85:5" pos:end="89:50"><if pos:start="85:5" pos:end="89:50">if <condition pos:start="85:8" pos:end="87:49">(<expr pos:start="85:9" pos:end="87:48"><name pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:10">st</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:20">codecpar</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:31">codec_tag</name></name> <operator pos:start="85:33" pos:end="85:34">==</operator> <call pos:start="85:36" pos:end="85:57"><name pos:start="85:36" pos:end="85:40">MKTAG</name><argument_list pos:start="85:41" pos:end="85:57">(<argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><literal type="char" pos:start="85:42" pos:end="85:44">'H'</literal></expr></argument>,<argument pos:start="85:46" pos:end="85:48"><expr pos:start="85:46" pos:end="85:48"><literal type="char" pos:start="85:46" pos:end="85:48">'2'</literal></expr></argument>,<argument pos:start="85:50" pos:end="85:52"><expr pos:start="85:50" pos:end="85:52"><literal type="char" pos:start="85:50" pos:end="85:52">'6'</literal></expr></argument>,<argument pos:start="85:54" pos:end="85:56"><expr pos:start="85:54" pos:end="85:56"><literal type="char" pos:start="85:54" pos:end="85:56">'3'</literal></expr></argument>)</argument_list></call> <operator pos:start="85:59" pos:end="85:60">&amp;&amp;</operator>

        <operator pos:start="87:9" pos:end="87:9">!</operator><call pos:start="87:10" pos:end="87:48"><name pos:start="87:10" pos:end="87:15">memcmp</name><argument_list pos:start="87:16" pos:end="87:48">(<argument pos:start="87:17" pos:end="87:26"><expr pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:26">codec_name</name></expr></argument>, <argument pos:start="87:29" pos:end="87:43"><expr pos:start="87:29" pos:end="87:43"><literal type="string" pos:start="87:29" pos:end="87:43">"Sorenson H263"</literal></expr></argument>, <argument pos:start="87:46" pos:end="87:47"><expr pos:start="87:46" pos:end="87:47"><literal type="number" pos:start="87:46" pos:end="87:47">13</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:50"><block_content pos:start="89:9" pos:end="89:50">

        <expr_stmt pos:start="89:9" pos:end="89:50"><expr pos:start="89:9" pos:end="89:49"><name pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:10">st</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:20">codecpar</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:30">codec_id</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:49">AV_CODEC_ID_FLV1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:56"><expr pos:start="93:5" pos:end="93:55"><name pos:start="93:5" pos:end="93:39"><name pos:start="93:5" pos:end="93:6">st</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:16">codecpar</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:39">bits_per_coded_sample</name></name> <operator pos:start="93:41" pos:end="93:41">=</operator> <call pos:start="93:43" pos:end="93:55"><name pos:start="93:43" pos:end="93:51">avio_rb16</name><argument_list pos:start="93:52" pos:end="93:55">(<argument pos:start="93:53" pos:end="93:54"><expr pos:start="93:53" pos:end="93:54"><name pos:start="93:53" pos:end="93:54">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:58" pos:end="93:68">/* depth */</comment>



    <expr_stmt pos:start="97:5" pos:end="97:40"><expr pos:start="97:5" pos:end="97:39"><call pos:start="97:5" pos:end="97:39"><name pos:start="97:5" pos:end="97:13">avio_seek</name><argument_list pos:start="97:14" pos:end="97:39">(<argument pos:start="97:15" pos:end="97:16"><expr pos:start="97:15" pos:end="97:16"><name pos:start="97:15" pos:end="97:16">pb</name></expr></argument>, <argument pos:start="97:19" pos:end="97:28"><expr pos:start="97:19" pos:end="97:28"><name pos:start="97:19" pos:end="97:28">stsd_start</name></expr></argument>, <argument pos:start="97:31" pos:end="97:38"><expr pos:start="97:31" pos:end="97:38"><name pos:start="97:31" pos:end="97:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:66">(<expr pos:start="101:9" pos:end="101:65"><call pos:start="101:9" pos:end="101:65"><name pos:start="101:9" pos:end="101:24">ff_get_qtpalette</name><argument_list pos:start="101:25" pos:end="101:65">(<argument pos:start="101:26" pos:end="101:47"><expr pos:start="101:26" pos:end="101:47"><name pos:start="101:26" pos:end="101:47"><name pos:start="101:26" pos:end="101:27">st</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:37">codecpar</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:47">codec_id</name></name></expr></argument>, <argument pos:start="101:50" pos:end="101:51"><expr pos:start="101:50" pos:end="101:51"><name pos:start="101:50" pos:end="101:51">pb</name></expr></argument>, <argument pos:start="101:54" pos:end="101:64"><expr pos:start="101:54" pos:end="101:64"><name pos:start="101:54" pos:end="101:64"><name pos:start="101:54" pos:end="101:55">sc</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:64">palette</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:68" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:28">

        <expr_stmt pos:start="103:9" pos:end="103:52"><expr pos:start="103:9" pos:end="103:51"><name pos:start="103:9" pos:end="103:43"><name pos:start="103:9" pos:end="103:10">st</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:20">codecpar</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:43">bits_per_coded_sample</name></name> <operator pos:start="103:45" pos:end="103:46">&amp;=</operator> <literal type="number" pos:start="103:48" pos:end="103:51">0x1F</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:10">sc</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:23">has_palette</name></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <literal type="number" pos:start="105:27" pos:end="105:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
