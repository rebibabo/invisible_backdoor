<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26076.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ast_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ASTMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">ast</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:26">codec_tag</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:21">nb_streams</name></name> <operator pos:start="15:23" pos:end="15:24">==</operator> <literal type="number" pos:start="15:26" pos:end="15:26">1</literal></expr>)</condition> <block pos:start="15:29" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:35">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:11">enc</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:27"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:24">streams</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>]</index></name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:34">codec</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="25:5">else <block pos:start="19:12" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:31">

        <expr_stmt pos:start="21:9" pos:end="21:66"><expr pos:start="21:9" pos:end="21:65"><call pos:start="21:9" pos:end="21:65"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:65">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">s</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:33" pos:end="21:64"><expr pos:start="21:33" pos:end="21:64"><literal type="string" pos:start="21:33" pos:end="21:64">"only one stream is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:47">(<expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:11">enc</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:21">codec_id</name></name> <operator pos:start="29:23" pos:end="29:24">==</operator> <name pos:start="29:26" pos:end="29:46">AV_CODEC_ID_ADPCM_AFC</name></expr>)</condition> <block pos:start="29:49" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:36">

        <expr_stmt pos:start="31:9" pos:end="31:73"><expr pos:start="31:9" pos:end="31:72"><call pos:start="31:9" pos:end="31:72"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:72">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">s</name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:33" pos:end="31:71"><expr pos:start="31:33" pos:end="31:71"><literal type="string" pos:start="31:33" pos:end="31:71">"muxing ADPCM AFC is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:36">return <expr pos:start="33:16" pos:end="33:35"><name pos:start="33:16" pos:end="33:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:67"><expr pos:start="39:5" pos:end="39:66"><name pos:start="39:5" pos:end="39:13">codec_tag</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:66"><name pos:start="39:17" pos:end="39:32">ff_codec_get_tag</name><argument_list pos:start="39:33" pos:end="39:66">(<argument pos:start="39:34" pos:end="39:50"><expr pos:start="39:34" pos:end="39:50"><name pos:start="39:34" pos:end="39:50">ff_codec_ast_tags</name></expr></argument>, <argument pos:start="39:53" pos:end="39:65"><expr pos:start="39:53" pos:end="39:65"><name pos:start="39:53" pos:end="39:65"><name pos:start="39:53" pos:end="39:55">enc</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:65">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:18">codec_tag</name></expr>)</condition> <block pos:start="41:21" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:31">

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:54">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:53"><expr pos:start="43:33" pos:end="43:53"><literal type="string" pos:start="43:33" pos:end="43:53">"unsupported codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:73">(<expr pos:start="51:9" pos:end="51:72"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:11">ast</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:22">loopstart</name></name> <operator pos:start="51:24" pos:end="51:25">&amp;&amp;</operator> <name pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:29">ast</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:38">loopend</name></name> <operator pos:start="51:40" pos:end="51:41">&amp;&amp;</operator> <name pos:start="51:43" pos:end="51:56"><name pos:start="51:43" pos:end="51:45">ast</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:56">loopstart</name></name> <operator pos:start="51:58" pos:end="51:59">&gt;=</operator> <name pos:start="51:61" pos:end="51:72"><name pos:start="51:61" pos:end="51:63">ast</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:72">loopend</name></name></expr>)</condition> <block pos:start="51:75" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:31">

        <expr_stmt pos:start="53:9" pos:end="53:81"><expr pos:start="53:9" pos:end="53:80"><call pos:start="53:9" pos:end="53:80"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:80">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:79"><expr pos:start="53:33" pos:end="53:79"><literal type="string" pos:start="53:33" pos:end="53:79">"loopend can't be less or equal to loopstart\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:41">/* Convert milliseconds to samples */</comment>

    <macro pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:14">CHECK_LOOP</name><argument_list pos:start="63:15" pos:end="63:21">(<argument pos:start="63:16" pos:end="63:20">start</argument>)</argument_list></macro>

    <macro pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:14">CHECK_LOOP</name><argument_list pos:start="65:15" pos:end="65:19">(<argument pos:start="65:16" pos:end="65:18">end</argument>)</argument_list></macro>



    <expr_stmt pos:start="69:5" pos:end="69:29"><expr pos:start="69:5" pos:end="69:28"><call pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:16">ffio_wfourcc</name><argument_list pos:start="69:17" pos:end="69:28">(<argument pos:start="69:18" pos:end="69:19"><expr pos:start="69:18" pos:end="69:19"><name pos:start="69:18" pos:end="69:19">pb</name></expr></argument>, <argument pos:start="69:22" pos:end="69:27"><expr pos:start="69:22" pos:end="69:27"><literal type="string" pos:start="69:22" pos:end="69:27">"STRM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:7">ast</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:13">size</name></name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:25">avio_tell</name><argument_list pos:start="73:26" pos:end="73:29">(<argument pos:start="73:27" pos:end="73:28"><expr pos:start="73:27" pos:end="73:28"><name pos:start="73:27" pos:end="73:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><call pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:13">avio_wb32</name><argument_list pos:start="75:14" pos:end="75:20">(<argument pos:start="75:15" pos:end="75:16"><expr pos:start="75:15" pos:end="75:16"><name pos:start="75:15" pos:end="75:16">pb</name></expr></argument>, <argument pos:start="75:19" pos:end="75:19"><expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:23" pos:end="75:50">/* File size minus header */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><call pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:13">avio_wb16</name><argument_list pos:start="77:14" pos:end="77:28">(<argument pos:start="77:15" pos:end="77:16"><expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">pb</name></expr></argument>, <argument pos:start="77:19" pos:end="77:27"><expr pos:start="77:19" pos:end="77:27"><name pos:start="77:19" pos:end="77:27">codec_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:22"><expr pos:start="79:5" pos:end="79:21"><call pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:13">avio_wb16</name><argument_list pos:start="79:14" pos:end="79:21">(<argument pos:start="79:15" pos:end="79:16"><expr pos:start="79:15" pos:end="79:16"><name pos:start="79:15" pos:end="79:16">pb</name></expr></argument>, <argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><literal type="number" pos:start="79:19" pos:end="79:20">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:24" pos:end="79:38">/* Bit depth */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:33"><expr pos:start="81:5" pos:end="81:32"><call pos:start="81:5" pos:end="81:32"><name pos:start="81:5" pos:end="81:13">avio_wb16</name><argument_list pos:start="81:14" pos:end="81:32">(<argument pos:start="81:15" pos:end="81:16"><expr pos:start="81:15" pos:end="81:16"><name pos:start="81:15" pos:end="81:16">pb</name></expr></argument>, <argument pos:start="81:19" pos:end="81:31"><expr pos:start="81:19" pos:end="81:31"><name pos:start="81:19" pos:end="81:31"><name pos:start="81:19" pos:end="81:21">enc</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:31">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><call pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:13">avio_wb16</name><argument_list pos:start="83:14" pos:end="83:25">(<argument pos:start="83:15" pos:end="83:16"><expr pos:start="83:15" pos:end="83:16"><name pos:start="83:15" pos:end="83:16">pb</name></expr></argument>, <argument pos:start="83:19" pos:end="83:24"><expr pos:start="83:19" pos:end="83:24"><literal type="number" pos:start="83:19" pos:end="83:24">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><call pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:13">avio_wb32</name><argument_list pos:start="85:14" pos:end="85:35">(<argument pos:start="85:15" pos:end="85:16"><expr pos:start="85:15" pos:end="85:16"><name pos:start="85:15" pos:end="85:16">pb</name></expr></argument>, <argument pos:start="85:19" pos:end="85:34"><expr pos:start="85:19" pos:end="85:34"><name pos:start="85:19" pos:end="85:34"><name pos:start="85:19" pos:end="85:21">enc</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:34">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:7">ast</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:16">samples</name></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:32"><name pos:start="89:20" pos:end="89:28">avio_tell</name><argument_list pos:start="89:29" pos:end="89:32">(<argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:21"><expr pos:start="91:5" pos:end="91:20"><call pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:13">avio_wb32</name><argument_list pos:start="91:14" pos:end="91:20">(<argument pos:start="91:15" pos:end="91:16"><expr pos:start="91:15" pos:end="91:16"><name pos:start="91:15" pos:end="91:16">pb</name></expr></argument>, <argument pos:start="91:19" pos:end="91:19"><expr pos:start="91:19" pos:end="91:19"><literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:23" pos:end="91:45">/* Number of samples */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:21"><expr pos:start="93:5" pos:end="93:20"><call pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:13">avio_wb32</name><argument_list pos:start="93:14" pos:end="93:20">(<argument pos:start="93:15" pos:end="93:16"><expr pos:start="93:15" pos:end="93:16"><name pos:start="93:15" pos:end="93:16">pb</name></expr></argument>, <argument pos:start="93:19" pos:end="93:19"><expr pos:start="93:19" pos:end="93:19"><literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:23" pos:end="93:37">/* Loopstart */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:13">avio_wb32</name><argument_list pos:start="95:14" pos:end="95:20">(<argument pos:start="95:15" pos:end="95:16"><expr pos:start="95:15" pos:end="95:16"><name pos:start="95:15" pos:end="95:16">pb</name></expr></argument>, <argument pos:start="95:19" pos:end="95:19"><expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:23" pos:end="95:35">/* Loopend */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:21"><expr pos:start="97:5" pos:end="97:20"><call pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:13">avio_wb32</name><argument_list pos:start="97:14" pos:end="97:20">(<argument pos:start="97:15" pos:end="97:16"><expr pos:start="97:15" pos:end="97:16"><name pos:start="97:15" pos:end="97:16">pb</name></expr></argument>, <argument pos:start="97:19" pos:end="97:19"><expr pos:start="97:19" pos:end="97:19"><literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="97:23" pos:end="97:47">/* Size of first block */</comment>



    <comment type="block" pos:start="101:5" pos:end="101:17">/* Unknown */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><call pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:13">avio_wb32</name><argument_list pos:start="103:14" pos:end="103:20">(<argument pos:start="103:15" pos:end="103:16"><expr pos:start="103:15" pos:end="103:16"><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:19"><expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><call pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:13">avio_wl32</name><argument_list pos:start="105:14" pos:end="105:23">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:22"><expr pos:start="105:19" pos:end="105:22"><literal type="number" pos:start="105:19" pos:end="105:22">0x7F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><call pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:13">avio_wb64</name><argument_list pos:start="107:14" pos:end="107:20">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:21"><expr pos:start="109:5" pos:end="109:20"><call pos:start="109:5" pos:end="109:20"><name pos:start="109:5" pos:end="109:13">avio_wb64</name><argument_list pos:start="109:14" pos:end="109:20">(<argument pos:start="109:15" pos:end="109:16"><expr pos:start="109:15" pos:end="109:16"><name pos:start="109:15" pos:end="109:16">pb</name></expr></argument>, <argument pos:start="109:19" pos:end="109:19"><expr pos:start="109:19" pos:end="109:19"><literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:21"><expr pos:start="111:5" pos:end="111:20"><call pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:13">avio_wb32</name><argument_list pos:start="111:14" pos:end="111:20">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:19"><expr pos:start="111:19" pos:end="111:19"><literal type="number" pos:start="111:19" pos:end="111:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:19"><expr pos:start="115:5" pos:end="115:18"><call pos:start="115:5" pos:end="115:18"><name pos:start="115:5" pos:end="115:14">avio_flush</name><argument_list pos:start="115:15" pos:end="115:18">(<argument pos:start="115:16" pos:end="115:17"><expr pos:start="115:16" pos:end="115:17"><name pos:start="115:16" pos:end="115:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
