<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10134.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">xenfb_guest_copy</name><parameter_list pos:start="1:29" pos:end="1:77">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:41">XenFB</name></name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">xenfb</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:55"><decl pos:start="1:51" pos:end="1:55"><type pos:start="1:51" pos:end="1:55"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:55">x</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:62"><decl pos:start="1:58" pos:end="1:62"><type pos:start="1:58" pos:end="1:62"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:62">y</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:69"><decl pos:start="1:65" pos:end="1:69"><type pos:start="1:65" pos:end="1:69"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:69">w</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:76"><decl pos:start="1:72" pos:end="1:76"><type pos:start="1:72" pos:end="1:76"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:76">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:45">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">DisplaySurface</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:27">surface</name> <init pos:start="5:29" pos:end="5:64">= <expr pos:start="5:31" pos:end="5:64"><call pos:start="5:31" pos:end="5:64"><name pos:start="5:31" pos:end="5:50">qemu_console_surface</name><argument_list pos:start="5:51" pos:end="5:64">(<argument pos:start="5:52" pos:end="5:63"><expr pos:start="5:52" pos:end="5:63"><name pos:start="5:52" pos:end="5:63"><name pos:start="5:52" pos:end="5:56">xenfb</name><operator pos:start="5:57" pos:end="5:58">-&gt;</operator><name pos:start="5:59" pos:end="5:59">c</name><operator pos:start="5:60" pos:end="5:60">.</operator><name pos:start="5:61" pos:end="5:63">con</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">line</name></decl>, <decl pos:start="7:15" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">oops</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">bpp</name> <init pos:start="9:13" pos:end="9:45">= <expr pos:start="9:15" pos:end="9:45"><call pos:start="9:15" pos:end="9:45"><name pos:start="9:15" pos:end="9:36">surface_bits_per_pixel</name><argument_list pos:start="9:37" pos:end="9:45">(<argument pos:start="9:38" pos:end="9:44"><expr pos:start="9:38" pos:end="9:44"><name pos:start="9:38" pos:end="9:44">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">linesize</name> <init pos:start="11:18" pos:end="11:42">= <expr pos:start="11:20" pos:end="11:42"><call pos:start="11:20" pos:end="11:42"><name pos:start="11:20" pos:end="11:33">surface_stride</name><argument_list pos:start="11:34" pos:end="11:42">(<argument pos:start="11:35" pos:end="11:41"><expr pos:start="11:35" pos:end="11:41"><name pos:start="11:35" pos:end="11:41">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">data</name> <init pos:start="13:19" pos:end="13:41">= <expr pos:start="13:21" pos:end="13:41"><call pos:start="13:21" pos:end="13:41"><name pos:start="13:21" pos:end="13:32">surface_data</name><argument_list pos:start="13:33" pos:end="13:41">(<argument pos:start="13:34" pos:end="13:40"><expr pos:start="13:34" pos:end="13:40"><name pos:start="13:34" pos:end="13:40">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="63:5"><if pos:start="17:5" pos:end="63:5">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:34"><name pos:start="17:10" pos:end="17:25">is_buffer_shared</name><argument_list pos:start="17:26" pos:end="17:34">(<argument pos:start="17:27" pos:end="17:33"><expr pos:start="17:27" pos:end="17:33"><name pos:start="17:27" pos:end="17:33">surface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:37" pos:end="63:5">{<block_content pos:start="19:9" pos:end="61:9">

        <switch pos:start="19:9" pos:end="61:9">switch <condition pos:start="19:16" pos:end="19:29">(<expr pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:21">xenfb</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:28">depth</name></name></expr>)</condition> <block pos:start="19:31" pos:end="61:9">{<block_content pos:start="21:9" pos:end="59:21">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">8</literal></expr>:</case>

            <if_stmt pos:start="23:13" pos:end="35:13"><if pos:start="23:13" pos:end="27:13">if <condition pos:start="23:16" pos:end="23:26">(<expr pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:19">bpp</name> <operator pos:start="23:21" pos:end="23:22">==</operator> <literal type="number" pos:start="23:24" pos:end="23:25">16</literal></expr>)</condition> <block pos:start="23:28" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:61">

                <expr_stmt pos:start="25:17" pos:end="25:61"><expr pos:start="25:17" pos:end="25:60"><call pos:start="25:17" pos:end="25:60"><name pos:start="25:17" pos:end="25:19">BLT</name><argument_list pos:start="25:20" pos:end="25:60">(<argument pos:start="25:21" pos:end="25:27"><expr pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:27">uint8_t</name></expr></argument>, <argument pos:start="25:30" pos:end="25:37"><expr pos:start="25:30" pos:end="25:37"><name pos:start="25:30" pos:end="25:37">uint16_t</name></expr></argument>,   <argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">3</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:45"><expr pos:start="25:45" pos:end="25:45"><literal type="number" pos:start="25:45" pos:end="25:45">3</literal></expr></argument>, <argument pos:start="25:48" pos:end="25:48"><expr pos:start="25:48" pos:end="25:48"><literal type="number" pos:start="25:48" pos:end="25:48">2</literal></expr></argument>,   <argument pos:start="25:53" pos:end="25:53"><expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">5</literal></expr></argument>, <argument pos:start="25:56" pos:end="25:56"><expr pos:start="25:56" pos:end="25:56"><literal type="number" pos:start="25:56" pos:end="25:56">6</literal></expr></argument>, <argument pos:start="25:59" pos:end="25:59"><expr pos:start="25:59" pos:end="25:59"><literal type="number" pos:start="25:59" pos:end="25:59">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="27:15" pos:end="31:13">else if <condition pos:start="27:23" pos:end="27:33">(<expr pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:26">bpp</name> <operator pos:start="27:28" pos:end="27:29">==</operator> <literal type="number" pos:start="27:31" pos:end="27:32">32</literal></expr>)</condition> <block pos:start="27:35" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:61">

                <expr_stmt pos:start="29:17" pos:end="29:61"><expr pos:start="29:17" pos:end="29:60"><call pos:start="29:17" pos:end="29:60"><name pos:start="29:17" pos:end="29:19">BLT</name><argument_list pos:start="29:20" pos:end="29:60">(<argument pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:27">uint8_t</name></expr></argument>, <argument pos:start="29:30" pos:end="29:37"><expr pos:start="29:30" pos:end="29:37"><name pos:start="29:30" pos:end="29:37">uint32_t</name></expr></argument>,   <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">3</literal></expr></argument>, <argument pos:start="29:45" pos:end="29:45"><expr pos:start="29:45" pos:end="29:45"><literal type="number" pos:start="29:45" pos:end="29:45">3</literal></expr></argument>, <argument pos:start="29:48" pos:end="29:48"><expr pos:start="29:48" pos:end="29:48"><literal type="number" pos:start="29:48" pos:end="29:48">2</literal></expr></argument>,   <argument pos:start="29:53" pos:end="29:53"><expr pos:start="29:53" pos:end="29:53"><literal type="number" pos:start="29:53" pos:end="29:53">8</literal></expr></argument>, <argument pos:start="29:56" pos:end="29:56"><expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">8</literal></expr></argument>, <argument pos:start="29:59" pos:end="29:59"><expr pos:start="29:59" pos:end="29:59"><literal type="number" pos:start="29:59" pos:end="29:59">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="31:15" pos:end="35:13">else <block pos:start="31:20" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:25">

                <expr_stmt pos:start="33:17" pos:end="33:25"><expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:20">oops</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:16">case <expr pos:start="39:14" pos:end="39:15"><literal type="number" pos:start="39:14" pos:end="39:15">24</literal></expr>:</case>

            <if_stmt pos:start="41:13" pos:end="53:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:26">(<expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:19">bpp</name> <operator pos:start="41:21" pos:end="41:22">==</operator> <literal type="number" pos:start="41:24" pos:end="41:25">16</literal></expr>)</condition> <block pos:start="41:28" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:61">

                <expr_stmt pos:start="43:17" pos:end="43:61"><expr pos:start="43:17" pos:end="43:60"><call pos:start="43:17" pos:end="43:60"><name pos:start="43:17" pos:end="43:19">BLT</name><argument_list pos:start="43:20" pos:end="43:60">(<argument pos:start="43:21" pos:end="43:28"><expr pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:28">uint32_t</name></expr></argument>, <argument pos:start="43:31" pos:end="43:38"><expr pos:start="43:31" pos:end="43:38"><name pos:start="43:31" pos:end="43:38">uint16_t</name></expr></argument>,  <argument pos:start="43:42" pos:end="43:42"><expr pos:start="43:42" pos:end="43:42"><literal type="number" pos:start="43:42" pos:end="43:42">8</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:45"><expr pos:start="43:45" pos:end="43:45"><literal type="number" pos:start="43:45" pos:end="43:45">8</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:48"><expr pos:start="43:48" pos:end="43:48"><literal type="number" pos:start="43:48" pos:end="43:48">8</literal></expr></argument>,   <argument pos:start="43:53" pos:end="43:53"><expr pos:start="43:53" pos:end="43:53"><literal type="number" pos:start="43:53" pos:end="43:53">5</literal></expr></argument>, <argument pos:start="43:56" pos:end="43:56"><expr pos:start="43:56" pos:end="43:56"><literal type="number" pos:start="43:56" pos:end="43:56">6</literal></expr></argument>, <argument pos:start="43:59" pos:end="43:59"><expr pos:start="43:59" pos:end="43:59"><literal type="number" pos:start="43:59" pos:end="43:59">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="45:15" pos:end="49:13">else if <condition pos:start="45:23" pos:end="45:33">(<expr pos:start="45:24" pos:end="45:32"><name pos:start="45:24" pos:end="45:26">bpp</name> <operator pos:start="45:28" pos:end="45:29">==</operator> <literal type="number" pos:start="45:31" pos:end="45:32">32</literal></expr>)</condition> <block pos:start="45:35" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:61">

                <expr_stmt pos:start="47:17" pos:end="47:61"><expr pos:start="47:17" pos:end="47:60"><call pos:start="47:17" pos:end="47:60"><name pos:start="47:17" pos:end="47:19">BLT</name><argument_list pos:start="47:20" pos:end="47:60">(<argument pos:start="47:21" pos:end="47:28"><expr pos:start="47:21" pos:end="47:28"><name pos:start="47:21" pos:end="47:28">uint32_t</name></expr></argument>, <argument pos:start="47:31" pos:end="47:38"><expr pos:start="47:31" pos:end="47:38"><name pos:start="47:31" pos:end="47:38">uint32_t</name></expr></argument>,  <argument pos:start="47:42" pos:end="47:42"><expr pos:start="47:42" pos:end="47:42"><literal type="number" pos:start="47:42" pos:end="47:42">8</literal></expr></argument>, <argument pos:start="47:45" pos:end="47:45"><expr pos:start="47:45" pos:end="47:45"><literal type="number" pos:start="47:45" pos:end="47:45">8</literal></expr></argument>, <argument pos:start="47:48" pos:end="47:48"><expr pos:start="47:48" pos:end="47:48"><literal type="number" pos:start="47:48" pos:end="47:48">8</literal></expr></argument>,   <argument pos:start="47:53" pos:end="47:53"><expr pos:start="47:53" pos:end="47:53"><literal type="number" pos:start="47:53" pos:end="47:53">8</literal></expr></argument>, <argument pos:start="47:56" pos:end="47:56"><expr pos:start="47:56" pos:end="47:56"><literal type="number" pos:start="47:56" pos:end="47:56">8</literal></expr></argument>, <argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><literal type="number" pos:start="47:59" pos:end="47:59">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="49:15" pos:end="53:13">else <block pos:start="49:20" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:25">

                <expr_stmt pos:start="51:17" pos:end="51:25"><expr pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:20">oops</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <literal type="number" pos:start="51:24" pos:end="51:24">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <default pos:start="57:9" pos:end="57:16">default:</default>

            <expr_stmt pos:start="59:13" pos:end="59:21"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:16">oops</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">1</literal></expr>;</expr_stmt>

	</block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="69:55"><if pos:start="65:5" pos:end="69:55">if <condition pos:start="65:8" pos:end="65:13">(<expr pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:12">oops</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="69:55"><block_content pos:start="67:9" pos:end="69:55"> <comment type="block" pos:start="65:15" pos:end="65:37">/* should not happen */</comment>

        <expr_stmt pos:start="67:9" pos:end="69:55"><expr pos:start="67:9" pos:end="69:54"><call pos:start="67:9" pos:end="69:54"><name pos:start="67:9" pos:end="67:21">xen_pv_printf</name><argument_list pos:start="67:22" pos:end="69:54">(<argument pos:start="67:23" pos:end="67:38"><expr pos:start="67:23" pos:end="67:38"><operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:38"><name pos:start="67:24" pos:end="67:28">xenfb</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:31">c</name><operator pos:start="67:32" pos:end="67:32">.</operator><name pos:start="67:33" pos:end="67:38">xendev</name></name></expr></argument>, <argument pos:start="67:41" pos:end="67:41"><expr pos:start="67:41" pos:end="67:41"><literal type="number" pos:start="67:41" pos:end="67:41">0</literal></expr></argument>, <argument pos:start="67:44" pos:end="67:78"><expr pos:start="67:44" pos:end="67:78"><literal type="string" pos:start="67:44" pos:end="67:78">"%s: oops: convert %d -&gt; %d bpp?\n"</literal></expr></argument>,

                      <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">__FUNCTION__</name></expr></argument>, <argument pos:start="69:37" pos:end="69:48"><expr pos:start="69:37" pos:end="69:48"><name pos:start="69:37" pos:end="69:48"><name pos:start="69:37" pos:end="69:41">xenfb</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:48">depth</name></name></expr></argument>, <argument pos:start="69:51" pos:end="69:53"><expr pos:start="69:51" pos:end="69:53"><name pos:start="69:51" pos:end="69:53">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:45"><expr pos:start="73:5" pos:end="73:44"><call pos:start="73:5" pos:end="73:44"><name pos:start="73:5" pos:end="73:18">dpy_gfx_update</name><argument_list pos:start="73:19" pos:end="73:44">(<argument pos:start="73:20" pos:end="73:31"><expr pos:start="73:20" pos:end="73:31"><name pos:start="73:20" pos:end="73:31"><name pos:start="73:20" pos:end="73:24">xenfb</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:27">c</name><operator pos:start="73:28" pos:end="73:28">.</operator><name pos:start="73:29" pos:end="73:31">con</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><name pos:start="73:34" pos:end="73:34">x</name></expr></argument>, <argument pos:start="73:37" pos:end="73:37"><expr pos:start="73:37" pos:end="73:37"><name pos:start="73:37" pos:end="73:37">y</name></expr></argument>, <argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">w</name></expr></argument>, <argument pos:start="73:43" pos:end="73:43"><expr pos:start="73:43" pos:end="73:43"><name pos:start="73:43" pos:end="73:43">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
