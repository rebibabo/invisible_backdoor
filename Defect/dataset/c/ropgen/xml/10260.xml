<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10260.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nic_can_receive</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">NetClientState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">nc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="16:0">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">EEPRO100State</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:46">= <expr pos:start="5:24" pos:end="5:46"><call pos:start="5:24" pos:end="5:46"><name pos:start="5:24" pos:end="5:42">qemu_get_nic_opaque</name><argument_list pos:start="5:43" pos:end="5:46">(<argument pos:start="5:44" pos:end="5:45"><expr pos:start="5:44" pos:end="5:45"><name pos:start="5:44" pos:end="5:45">nc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:35"><expr pos:start="7:5" pos:end="7:34"><call pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:9">TRACE</name><argument_list pos:start="7:10" pos:end="7:34">(<argument pos:start="7:11" pos:end="7:14"><expr pos:start="7:11" pos:end="7:14"><name pos:start="7:11" pos:end="7:14">RXTX</name></expr></argument>, <argument pos:start="7:17" pos:end="7:33"><expr pos:start="7:17" pos:end="7:33"><call pos:start="7:17" pos:end="7:33"><name pos:start="7:17" pos:end="7:22">logout</name><argument_list pos:start="7:23" pos:end="7:33">(<argument pos:start="7:24" pos:end="7:29"><expr pos:start="7:24" pos:end="7:29"><literal type="string" pos:start="7:24" pos:end="7:29">"%p\n"</literal></expr></argument>, <argument pos:start="7:32" pos:end="7:32"><expr pos:start="7:32" pos:end="7:32"><name pos:start="7:32" pos:end="7:32">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="9:5" pos:end="16:0">return <expr pos:start="9:12" pos:end="9:38"><call pos:start="9:12" pos:end="9:26"><name pos:start="9:12" pos:end="9:23">get_ru_state</name><argument_list pos:start="9:24" pos:end="9:26">(<argument pos:start="9:25" pos:end="9:25"><expr pos:start="9:25" pos:end="9:25"><name pos:start="9:25" pos:end="9:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="9:28" pos:end="9:29">==</operator> <name pos:start="9:31" pos:end="9:38">ru_ready</name></expr>;</return>

<cpp:if pos:start="11:1" pos:end="11:5">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:5"><literal type="number" pos:start="11:5" pos:end="11:5">0</literal></expr></cpp:if>

    return !eepro100_buffer_full(s);

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
