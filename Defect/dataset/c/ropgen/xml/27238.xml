<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27238.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:62"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">usb_ohci_init</name><parameter_list pos:start="1:26" pos:end="4:57">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:35">OHCIState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">ohci</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:54">DeviceState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dev</name></decl></parameter>,
                          <parameter pos:start="2:27" pos:end="2:39"><decl pos:start="2:27" pos:end="2:39"><type pos:start="2:27" pos:end="2:39"><name pos:start="2:27" pos:end="2:29">int</name></type> <name pos:start="2:31" pos:end="2:39">num_ports</name></decl></parameter>, <parameter pos:start="2:42" pos:end="2:65"><decl pos:start="2:42" pos:end="2:65"><type pos:start="2:42" pos:end="2:65"><name pos:start="2:42" pos:end="2:51">dma_addr_t</name></type> <name pos:start="2:53" pos:end="2:65">localmem_base</name></decl></parameter>,
                          <parameter pos:start="3:27" pos:end="3:41"><decl pos:start="3:27" pos:end="3:41"><type pos:start="3:27" pos:end="3:41"><name pos:start="3:27" pos:end="3:30">char</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:41">masterbus</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:61"><decl pos:start="3:44" pos:end="3:61"><type pos:start="3:44" pos:end="3:61"><name pos:start="3:44" pos:end="3:51">uint32_t</name></type> <name pos:start="3:53" pos:end="3:61">firstport</name></decl></parameter>,
                          <parameter pos:start="4:27" pos:end="4:42"><decl pos:start="4:27" pos:end="4:42"><type pos:start="4:27" pos:end="4:42"><name pos:start="4:27" pos:end="4:38">AddressSpace</name> <modifier pos:start="4:40" pos:end="4:40">*</modifier></type><name pos:start="4:41" pos:end="4:42">as</name></decl></parameter>, <parameter pos:start="4:45" pos:end="4:56"><decl pos:start="4:45" pos:end="4:56"><type pos:start="4:45" pos:end="4:56"><name pos:start="4:45" pos:end="4:49">Error</name> <modifier pos:start="4:51" pos:end="4:51">*</modifier><modifier pos:start="4:52" pos:end="4:52">*</modifier></type><name pos:start="4:53" pos:end="4:56">errp</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="45:62">{<block_content pos:start="6:5" pos:end="45:62">
    <decl_stmt pos:start="6:5" pos:end="6:22"><decl pos:start="6:5" pos:end="6:21"><type pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:9">Error</name> <modifier pos:start="6:11" pos:end="6:11">*</modifier></type><name pos:start="6:12" pos:end="6:14">err</name> <init pos:start="6:16" pos:end="6:21">= <expr pos:start="6:18" pos:end="6:21"><name pos:start="6:18" pos:end="6:21">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:18"><expr pos:start="8:5" pos:end="8:17"><name pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:8">ohci</name><operator pos:start="8:9" pos:end="8:10">-&gt;</operator><name pos:start="8:11" pos:end="8:12">as</name></name> <operator pos:start="8:14" pos:end="8:14">=</operator> <name pos:start="8:16" pos:end="8:17">as</name></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="45:62"><if pos:start="9:5" pos:end="45:62">if <condition pos:start="9:8" pos:end="9:28">(<expr pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:22">usb_frame_time</name> <operator pos:start="9:24" pos:end="9:25">==</operator> <literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr>)</condition> <block pos:start="9:30" pos:end="45:62">{<block_content pos:start="11:9" pos:end="45:62">
<cpp:ifdef pos:start="10:1" pos:end="10:21">#<cpp:directive pos:start="10:2" pos:end="10:6">ifdef</cpp:directive> <name pos:start="10:8" pos:end="10:21">OHCI_TIME_WARP</name></cpp:ifdef>
        <expr_stmt pos:start="11:9" pos:end="11:48"><expr pos:start="11:9" pos:end="11:47"><name pos:start="11:9" pos:end="11:22">usb_frame_time</name> <operator pos:start="11:24" pos:end="11:24">=</operator> <name pos:start="11:26" pos:end="11:47">NANOSECONDS_PER_SECOND</name></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="14:0"><expr pos:start="12:9" pos:end="12:63"><name pos:start="12:9" pos:end="12:20">usb_bit_time</name> <operator pos:start="12:22" pos:end="12:22">=</operator> <name pos:start="12:24" pos:end="12:45">NANOSECONDS_PER_SECOND</name> <operator pos:start="12:47" pos:end="12:47">/</operator> <operator pos:start="12:49" pos:end="12:49">(</operator><name pos:start="12:50" pos:end="12:55">USB_HZ</name> <operator pos:start="12:57" pos:end="12:57">/</operator> <literal type="number" pos:start="12:59" pos:end="12:62">1000</literal><operator pos:start="12:63" pos:end="12:63">)</operator></expr>;</expr_stmt>
<cpp:else pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:5">else</cpp:directive></cpp:else>
        <expr_stmt pos:start="14:9" pos:end="14:55"><expr pos:start="14:9" pos:end="14:54"><name pos:start="14:9" pos:end="14:22">usb_frame_time</name> <operator pos:start="14:24" pos:end="14:24">=</operator> <name pos:start="14:26" pos:end="14:47">NANOSECONDS_PER_SECOND</name> <operator pos:start="14:49" pos:end="14:49">/</operator> <literal type="number" pos:start="14:51" pos:end="14:54">1000</literal></expr>;</expr_stmt>
        <if_stmt pos:start="15:9" pos:end="45:62"><if pos:start="15:9" pos:end="17:9">if <condition pos:start="15:12" pos:end="15:45">(<expr pos:start="15:13" pos:end="15:44"><name pos:start="15:13" pos:end="15:34">NANOSECONDS_PER_SECOND</name> <operator pos:start="15:36" pos:end="15:37">&gt;=</operator> <name pos:start="15:39" pos:end="15:44">USB_HZ</name></expr>)</condition> <block pos:start="15:47" pos:end="17:9">{<block_content pos:start="16:13" pos:end="16:59">
            <expr_stmt pos:start="16:13" pos:end="16:59"><expr pos:start="16:13" pos:end="16:58"><name pos:start="16:13" pos:end="16:24">usb_bit_time</name> <operator pos:start="16:26" pos:end="16:26">=</operator> <name pos:start="16:28" pos:end="16:49">NANOSECONDS_PER_SECOND</name> <operator pos:start="16:51" pos:end="16:51">/</operator> <name pos:start="16:53" pos:end="16:58">USB_HZ</name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="17:11" pos:end="45:62">else <block pos:start="17:16" pos:end="45:62">{<block_content pos:start="18:13" pos:end="45:62">
            <expr_stmt pos:start="18:13" pos:end="20:0"><expr pos:start="18:13" pos:end="18:28"><name pos:start="18:13" pos:end="18:24">usb_bit_time</name> <operator pos:start="18:26" pos:end="18:26">=</operator> <literal type="number" pos:start="18:28" pos:end="18:28">1</literal></expr>;</expr_stmt>
<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>
        <expr_stmt pos:start="20:9" pos:end="20:63"><expr pos:start="20:9" pos:end="20:62"><call pos:start="20:9" pos:end="20:62"><name pos:start="20:9" pos:end="20:32">trace_usb_ohci_init_time</name><argument_list pos:start="20:33" pos:end="20:62">(<argument pos:start="20:34" pos:end="20:47"><expr pos:start="20:34" pos:end="20:47"><name pos:start="20:34" pos:end="20:47">usb_frame_time</name></expr></argument>, <argument pos:start="20:50" pos:end="20:61"><expr pos:start="20:50" pos:end="20:61"><name pos:start="20:50" pos:end="20:61">usb_bit_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:8">ohci</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:19">num_ports</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:31">num_ports</name></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="45:62"><if pos:start="22:5" pos:end="45:62">if <condition pos:start="22:8" pos:end="22:18">(<expr pos:start="22:9" pos:end="22:17"><name pos:start="22:9" pos:end="22:17">masterbus</name></expr>)</condition> <block pos:start="22:20" pos:end="45:62">{<block_content pos:start="23:9" pos:end="45:62">
        <decl_stmt pos:start="23:9" pos:end="23:39"><decl pos:start="23:9" pos:end="23:38"><type pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:15">USBPort</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:38"><name pos:start="23:18" pos:end="23:22">ports</name><index pos:start="23:23" pos:end="23:38">[<expr pos:start="23:24" pos:end="23:37"><name pos:start="23:24" pos:end="23:37">OHCI_MAX_PORTS</name></expr>]</index></name></decl>;</decl_stmt>
        <for pos:start="24:9" pos:end="45:62">for<control pos:start="24:12" pos:end="24:38">(<init pos:start="24:13" pos:end="24:18"><expr pos:start="24:13" pos:end="24:17"><name pos:start="24:13" pos:end="24:13">i</name> <operator pos:start="24:15" pos:end="24:15">=</operator> <literal type="number" pos:start="24:17" pos:end="24:17">0</literal></expr>;</init> <condition pos:start="24:20" pos:end="24:33"><expr pos:start="24:20" pos:end="24:32"><name pos:start="24:20" pos:end="24:20">i</name> <operator pos:start="24:22" pos:end="24:22">&lt;</operator> <name pos:start="24:24" pos:end="24:32">num_ports</name></expr>;</condition> <incr pos:start="24:35" pos:end="24:37"><expr pos:start="24:35" pos:end="24:37"><name pos:start="24:35" pos:end="24:35">i</name><operator pos:start="24:36" pos:end="24:37">++</operator></expr></incr>)</control> <block pos:start="24:40" pos:end="45:62">{<block_content pos:start="25:13" pos:end="45:62">
            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:17">ports</name><index pos:start="25:18" pos:end="25:20">[<expr pos:start="25:19" pos:end="25:19"><name pos:start="25:19" pos:end="25:19">i</name></expr>]</index></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:28">ohci</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:36">rhport</name><index pos:start="25:37" pos:end="25:39">[<expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">i</name></expr>]</index></name><operator pos:start="25:40" pos:end="25:40">.</operator><name pos:start="25:41" pos:end="25:44">port</name></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="29:37"><expr pos:start="26:9" pos:end="29:36"><call pos:start="26:9" pos:end="29:36"><name pos:start="26:9" pos:end="26:30">usb_register_companion</name><argument_list pos:start="26:31" pos:end="29:36">(<argument pos:start="26:32" pos:end="26:40"><expr pos:start="26:32" pos:end="26:40"><name pos:start="26:32" pos:end="26:40">masterbus</name></expr></argument>, <argument pos:start="26:43" pos:end="26:47"><expr pos:start="26:43" pos:end="26:47"><name pos:start="26:43" pos:end="26:47">ports</name></expr></argument>, <argument pos:start="26:50" pos:end="26:58"><expr pos:start="26:50" pos:end="26:58"><name pos:start="26:50" pos:end="26:58">num_ports</name></expr></argument>,
                               <argument pos:start="27:32" pos:end="27:40"><expr pos:start="27:32" pos:end="27:40"><name pos:start="27:32" pos:end="27:40">firstport</name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">ohci</name></expr></argument>, <argument pos:start="27:49" pos:end="27:62"><expr pos:start="27:49" pos:end="27:62"><operator pos:start="27:49" pos:end="27:49">&amp;</operator><name pos:start="27:50" pos:end="27:62">ohci_port_ops</name></expr></argument>,
                               <argument pos:start="28:32" pos:end="28:71"><expr pos:start="28:32" pos:end="28:71"><name pos:start="28:32" pos:end="28:49">USB_SPEED_MASK_LOW</name> <operator pos:start="28:51" pos:end="28:51">|</operator> <name pos:start="28:53" pos:end="28:71">USB_SPEED_MASK_FULL</name></expr></argument>,
                               <argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:35">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="30:9" pos:end="45:62"><if pos:start="30:9" pos:end="32:5">if <condition pos:start="30:12" pos:end="30:16">(<expr pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">err</name></expr>)</condition> <block pos:start="30:18" pos:end="32:5">{<block_content pos:start="31:13" pos:end="31:39">
            <expr_stmt pos:start="31:13" pos:end="31:39"><expr pos:start="31:13" pos:end="31:38"><call pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:27">error_propagate</name><argument_list pos:start="31:28" pos:end="31:38">(<argument pos:start="31:29" pos:end="31:32"><expr pos:start="31:29" pos:end="31:32"><name pos:start="31:29" pos:end="31:32">errp</name></expr></argument>, <argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="32:7" pos:end="45:62">else <block pos:start="32:12" pos:end="45:62">{<block_content pos:start="33:9" pos:end="45:62">
        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><call pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:19">usb_bus_new</name><argument_list pos:start="33:20" pos:end="33:70">(<argument pos:start="33:21" pos:end="33:30"><expr pos:start="33:21" pos:end="33:30"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:30"><name pos:start="33:22" pos:end="33:25">ohci</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:30">bus</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:49"><expr pos:start="33:33" pos:end="33:49"><sizeof pos:start="33:33" pos:end="33:49">sizeof<argument_list pos:start="33:39" pos:end="33:49">(<argument pos:start="33:40" pos:end="33:48"><expr pos:start="33:40" pos:end="33:48"><name pos:start="33:40" pos:end="33:48"><name pos:start="33:40" pos:end="33:43">ohci</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:48">bus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:52" pos:end="33:64"><expr pos:start="33:52" pos:end="33:64"><operator pos:start="33:52" pos:end="33:52">&amp;</operator><name pos:start="33:53" pos:end="33:64">ohci_bus_ops</name></expr></argument>, <argument pos:start="33:67" pos:end="33:69"><expr pos:start="33:67" pos:end="33:69"><name pos:start="33:67" pos:end="33:69">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="34:9" pos:end="45:62">for <control pos:start="34:13" pos:end="34:39">(<init pos:start="34:14" pos:end="34:19"><expr pos:start="34:14" pos:end="34:18"><name pos:start="34:14" pos:end="34:14">i</name> <operator pos:start="34:16" pos:end="34:16">=</operator> <literal type="number" pos:start="34:18" pos:end="34:18">0</literal></expr>;</init> <condition pos:start="34:21" pos:end="34:34"><expr pos:start="34:21" pos:end="34:33"><name pos:start="34:21" pos:end="34:21">i</name> <operator pos:start="34:23" pos:end="34:23">&lt;</operator> <name pos:start="34:25" pos:end="34:33">num_ports</name></expr>;</condition> <incr pos:start="34:36" pos:end="34:38"><expr pos:start="34:36" pos:end="34:38"><name pos:start="34:36" pos:end="34:36">i</name><operator pos:start="34:37" pos:end="34:38">++</operator></expr></incr>)</control> <block pos:start="34:41" pos:end="45:62">{<block_content pos:start="35:13" pos:end="45:62">
            <expr_stmt pos:start="35:13" pos:end="37:72"><expr pos:start="35:13" pos:end="37:71"><call pos:start="35:13" pos:end="37:71"><name pos:start="35:13" pos:end="35:29">usb_register_port</name><argument_list pos:start="35:30" pos:end="37:71">(<argument pos:start="35:31" pos:end="35:40"><expr pos:start="35:31" pos:end="35:40"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:40"><name pos:start="35:32" pos:end="35:35">ohci</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:40">bus</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:63"><expr pos:start="35:43" pos:end="35:63"><operator pos:start="35:43" pos:end="35:43">&amp;</operator><name pos:start="35:44" pos:end="35:58"><name pos:start="35:44" pos:end="35:47">ohci</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:55">rhport</name><index pos:start="35:56" pos:end="35:58">[<expr pos:start="35:57" pos:end="35:57"><name pos:start="35:57" pos:end="35:57">i</name></expr>]</index></name><operator pos:start="35:59" pos:end="35:59">.</operator><name pos:start="35:60" pos:end="35:63">port</name></expr></argument>,
                              <argument pos:start="36:31" pos:end="36:34"><expr pos:start="36:31" pos:end="36:34"><name pos:start="36:31" pos:end="36:34">ohci</name></expr></argument>, <argument pos:start="36:37" pos:end="36:37"><expr pos:start="36:37" pos:end="36:37"><name pos:start="36:37" pos:end="36:37">i</name></expr></argument>, <argument pos:start="36:40" pos:end="36:53"><expr pos:start="36:40" pos:end="36:53"><operator pos:start="36:40" pos:end="36:40">&amp;</operator><name pos:start="36:41" pos:end="36:53">ohci_port_ops</name></expr></argument>,
                              <argument pos:start="37:31" pos:end="37:70"><expr pos:start="37:31" pos:end="37:70"><name pos:start="37:31" pos:end="37:48">USB_SPEED_MASK_LOW</name> <operator pos:start="37:50" pos:end="37:50">|</operator> <name pos:start="37:52" pos:end="37:70">USB_SPEED_MASK_FULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="39:45"><expr pos:start="38:5" pos:end="39:44"><call pos:start="38:5" pos:end="39:44"><name pos:start="38:5" pos:end="38:25">memory_region_init_io</name><argument_list pos:start="38:26" pos:end="39:44">(<argument pos:start="38:27" pos:end="38:36"><expr pos:start="38:27" pos:end="38:36"><operator pos:start="38:27" pos:end="38:27">&amp;</operator><name pos:start="38:28" pos:end="38:36"><name pos:start="38:28" pos:end="38:31">ohci</name><operator pos:start="38:32" pos:end="38:33">-&gt;</operator><name pos:start="38:34" pos:end="38:36">mem</name></name></expr></argument>, <argument pos:start="38:39" pos:end="38:49"><expr pos:start="38:39" pos:end="38:49"><call pos:start="38:39" pos:end="38:49"><name pos:start="38:39" pos:end="38:44">OBJECT</name><argument_list pos:start="38:45" pos:end="38:49">(<argument pos:start="38:46" pos:end="38:48"><expr pos:start="38:46" pos:end="38:48"><name pos:start="38:46" pos:end="38:48">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="38:52" pos:end="38:64"><expr pos:start="38:52" pos:end="38:64"><operator pos:start="38:52" pos:end="38:52">&amp;</operator><name pos:start="38:53" pos:end="38:64">ohci_mem_ops</name></expr></argument>,
                          <argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">ohci</name></expr></argument>, <argument pos:start="39:33" pos:end="39:38"><expr pos:start="39:33" pos:end="39:38"><literal type="string" pos:start="39:33" pos:end="39:38">"ohci"</literal></expr></argument>, <argument pos:start="39:41" pos:end="39:43"><expr pos:start="39:41" pos:end="39:43"><literal type="number" pos:start="39:41" pos:end="39:43">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:40"><expr pos:start="40:5" pos:end="40:39"><name pos:start="40:5" pos:end="40:23"><name pos:start="40:5" pos:end="40:8">ohci</name><operator pos:start="40:9" pos:end="40:10">-&gt;</operator><name pos:start="40:11" pos:end="40:23">localmem_base</name></name> <operator pos:start="40:25" pos:end="40:25">=</operator> <name pos:start="40:27" pos:end="40:39">localmem_base</name></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:50"><expr pos:start="41:5" pos:end="41:49"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:8">ohci</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:14">name</name></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:49"><name pos:start="41:18" pos:end="41:36">object_get_typename</name><argument_list pos:start="41:37" pos:end="41:49">(<argument pos:start="41:38" pos:end="41:48"><expr pos:start="41:38" pos:end="41:48"><call pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:43">OBJECT</name><argument_list pos:start="41:44" pos:end="41:48">(<argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:39"><expr pos:start="42:5" pos:end="42:38"><call pos:start="42:5" pos:end="42:38"><name pos:start="42:5" pos:end="42:19">usb_packet_init</name><argument_list pos:start="42:20" pos:end="42:38">(<argument pos:start="42:21" pos:end="42:37"><expr pos:start="42:21" pos:end="42:37"><operator pos:start="42:21" pos:end="42:21">&amp;</operator><name pos:start="42:22" pos:end="42:37"><name pos:start="42:22" pos:end="42:25">ohci</name><operator pos:start="42:26" pos:end="42:27">-&gt;</operator><name pos:start="42:28" pos:end="42:37">usb_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:8">ohci</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:18">async_td</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="45:62"><expr pos:start="44:5" pos:end="45:61"><name pos:start="44:5" pos:end="44:19"><name pos:start="44:5" pos:end="44:8">ohci</name><operator pos:start="44:9" pos:end="44:10">-&gt;</operator><name pos:start="44:11" pos:end="44:19">eof_timer</name></name> <operator pos:start="44:21" pos:end="44:21">=</operator> <call pos:start="44:23" pos:end="45:61"><name pos:start="44:23" pos:end="44:34">timer_new_ns</name><argument_list pos:start="44:35" pos:end="45:61">(<argument pos:start="44:36" pos:end="44:53"><expr pos:start="44:36" pos:end="44:53"><name pos:start="44:36" pos:end="44:53">QEMU_CLOCK_VIRTUAL</name></expr></argument>,
                                   <argument pos:start="45:36" pos:end="45:54"><expr pos:start="45:36" pos:end="45:54"><name pos:start="45:36" pos:end="45:54">ohci_frame_boundary</name></expr></argument>, <argument pos:start="45:57" pos:end="45:60"><expr pos:start="45:57" pos:end="45:60"><name pos:start="45:57" pos:end="45:60">ohci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
