<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11966.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">openpic_reset</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:18">

    <decl_stmt pos:start="5:5" pos:end="5:72"><decl pos:start="5:5" pos:end="5:71"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:71">= <expr pos:start="5:25" pos:end="5:71"><call pos:start="5:25" pos:end="5:71"><name pos:start="5:25" pos:end="5:35">FROM_SYSBUS</name><argument_list pos:start="5:36" pos:end="5:71">(<argument pos:start="5:37" pos:end="5:49"><expr pos:start="5:37" pos:end="5:49"><call pos:start="5:37" pos:end="5:49"><name pos:start="5:37" pos:end="5:42">typeof</name> <argument_list pos:start="5:44" pos:end="5:49">(<argument pos:start="5:45" pos:end="5:48"><expr pos:start="5:45" pos:end="5:48"><operator pos:start="5:45" pos:end="5:45">*</operator><name pos:start="5:46" pos:end="5:48">opp</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="5:52" pos:end="5:70"><expr pos:start="5:52" pos:end="5:70"><call pos:start="5:52" pos:end="5:70"><name pos:start="5:52" pos:end="5:67">sysbus_from_qdev</name><argument_list pos:start="5:68" pos:end="5:70">(<argument pos:start="5:69" pos:end="5:69"><expr pos:start="5:69" pos:end="5:69"><name pos:start="5:69" pos:end="5:69">d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:7">opp</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:13">glbc</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:26">GLBC_RESET</name></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:41">/* Initialise controller registers */</comment>

    <expr_stmt pos:start="15:5" pos:end="19:45"><expr pos:start="15:5" pos:end="19:44"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:7">opp</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:13">frep</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><operator pos:start="15:18" pos:end="15:18">(</operator><name pos:start="15:19" pos:end="15:30"><name pos:start="15:19" pos:end="15:21">opp</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:30">nb_irqs</name></name> <operator pos:start="15:32" pos:end="15:32">-</operator><literal type="number" pos:start="15:33" pos:end="15:33">1</literal><operator pos:start="15:34" pos:end="15:34">)</operator> <operator pos:start="15:36" pos:end="15:37">&lt;&lt;</operator> <name pos:start="15:39" pos:end="15:53">FREP_NIRQ_SHIFT</name><operator pos:start="15:54" pos:end="15:54">)</operator> <operator pos:start="15:56" pos:end="15:56">|</operator>

                <operator pos:start="17:17" pos:end="17:17">(</operator><operator pos:start="17:18" pos:end="17:18">(</operator><name pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:21">opp</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:30">nb_cpus</name></name> <operator pos:start="17:32" pos:end="17:32">-</operator><literal type="number" pos:start="17:33" pos:end="17:33">1</literal><operator pos:start="17:34" pos:end="17:34">)</operator> <operator pos:start="17:36" pos:end="17:37">&lt;&lt;</operator> <name pos:start="17:39" pos:end="17:53">FREP_NCPU_SHIFT</name><operator pos:start="17:54" pos:end="17:54">)</operator> <operator pos:start="17:56" pos:end="17:56">|</operator>

                <operator pos:start="19:17" pos:end="19:17">(</operator><name pos:start="19:18" pos:end="19:25"><name pos:start="19:18" pos:end="19:20">opp</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:25">vid</name></name> <operator pos:start="19:27" pos:end="19:28">&lt;&lt;</operator> <name pos:start="19:30" pos:end="19:43">FREP_VID_SHIFT</name><operator pos:start="19:44" pos:end="19:44">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:7">opp</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:13">pint</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">opp</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">spve</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <operator pos:start="25:17" pos:end="25:17">-</operator><literal type="number" pos:start="25:18" pos:end="25:18">1</literal> <operator pos:start="25:20" pos:end="25:20">&amp;</operator> <name pos:start="25:22" pos:end="25:35"><name pos:start="25:22" pos:end="25:24">opp</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:35">spve_mask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">opp</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">tifr</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:19">opp</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:31">tifr_reset</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:32">/* Initialise IRQ sources */</comment>

    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="31:38">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:33"><expr pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:32"><name pos:start="31:21" pos:end="31:23">opp</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:32">max_irq</name></name></expr>;</condition> <incr pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:35">i</name><operator pos:start="31:36" pos:end="31:37">++</operator></expr></incr>)</control> <block pos:start="31:40" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:42">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">opp</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">src</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">i</name></expr>]</index></name><operator pos:start="33:20" pos:end="33:20">.</operator><name pos:start="33:21" pos:end="33:24">ipvp</name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:30">opp</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:42">ipvp_reset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11">opp</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">src</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">i</name></expr>]</index></name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:23">ide</name>  <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:30">opp</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:41">ide_reset</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="39:5" pos:end="39:37">/* Initialise IRQ destinations */</comment>

    <for pos:start="41:5" pos:end="55:5">for <control pos:start="41:9" pos:end="41:33">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:28"><expr pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:27">MAX_CPU</name></expr>;</condition> <incr pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:30">i</name><operator pos:start="41:31" pos:end="41:32">++</operator></expr></incr>)</control> <block pos:start="41:35" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:40">

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:11">opp</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">dst</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">i</name></expr>]</index></name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:24">pctp</name>      <operator pos:start="43:31" pos:end="43:31">=</operator> <literal type="number" pos:start="43:33" pos:end="43:34">15</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:11">opp</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">dst</name><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><name pos:start="45:18" pos:end="45:18">i</name></expr>]</index></name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:24">pcsr</name>      <operator pos:start="45:31" pos:end="45:31">=</operator> <literal type="number" pos:start="45:33" pos:end="45:42">0x00000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:14">memset</name><argument_list pos:start="47:15" pos:end="47:59">(<argument pos:start="47:16" pos:end="47:34"><expr pos:start="47:16" pos:end="47:34"><operator pos:start="47:16" pos:end="47:16">&amp;</operator><name pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:19">opp</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:24">dst</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">i</name></expr>]</index></name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:34">raised</name></expr></argument>, <argument pos:start="47:37" pos:end="47:37"><expr pos:start="47:37" pos:end="47:37"><literal type="number" pos:start="47:37" pos:end="47:37">0</literal></expr></argument>, <argument pos:start="47:40" pos:end="47:58"><expr pos:start="47:40" pos:end="47:58"><sizeof pos:start="47:40" pos:end="47:58">sizeof<argument_list pos:start="47:46" pos:end="47:58">(<argument pos:start="47:47" pos:end="47:57"><expr pos:start="47:47" pos:end="47:57"><name pos:start="47:47" pos:end="47:57">IRQ_queue_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:11">opp</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:16">dst</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><name pos:start="49:18" pos:end="49:18">i</name></expr>]</index></name><operator pos:start="49:20" pos:end="49:20">.</operator><name pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:26">raised</name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:31">next</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <operator pos:start="49:35" pos:end="49:35">-</operator><literal type="number" pos:start="49:36" pos:end="49:36">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:63"><expr pos:start="51:9" pos:end="51:62"><call pos:start="51:9" pos:end="51:62"><name pos:start="51:9" pos:end="51:14">memset</name><argument_list pos:start="51:15" pos:end="51:62">(<argument pos:start="51:16" pos:end="51:37"><expr pos:start="51:16" pos:end="51:37"><operator pos:start="51:16" pos:end="51:16">&amp;</operator><name pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:19">opp</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:24">dst</name><index pos:start="51:25" pos:end="51:27">[<expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">i</name></expr>]</index></name><operator pos:start="51:28" pos:end="51:28">.</operator><name pos:start="51:29" pos:end="51:37">servicing</name></expr></argument>, <argument pos:start="51:40" pos:end="51:40"><expr pos:start="51:40" pos:end="51:40"><literal type="number" pos:start="51:40" pos:end="51:40">0</literal></expr></argument>, <argument pos:start="51:43" pos:end="51:61"><expr pos:start="51:43" pos:end="51:61"><sizeof pos:start="51:43" pos:end="51:61">sizeof<argument_list pos:start="51:49" pos:end="51:61">(<argument pos:start="51:50" pos:end="51:60"><expr pos:start="51:50" pos:end="51:60"><name pos:start="51:50" pos:end="51:60">IRQ_queue_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:11">opp</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:16">dst</name><index pos:start="53:17" pos:end="53:19">[<expr pos:start="53:18" pos:end="53:18"><name pos:start="53:18" pos:end="53:18">i</name></expr>]</index></name><operator pos:start="53:20" pos:end="53:20">.</operator><name pos:start="53:21" pos:end="53:34"><name pos:start="53:21" pos:end="53:29">servicing</name><operator pos:start="53:30" pos:end="53:30">.</operator><name pos:start="53:31" pos:end="53:34">next</name></name> <operator pos:start="53:36" pos:end="53:36">=</operator> <operator pos:start="53:38" pos:end="53:38">-</operator><literal type="number" pos:start="53:39" pos:end="53:39">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="57:5" pos:end="57:27">/* Initialise timers */</comment>

    <for pos:start="59:5" pos:end="65:5">for <control pos:start="59:9" pos:end="59:33">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:28"><expr pos:start="59:17" pos:end="59:27"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:27">MAX_TMR</name></expr>;</condition> <incr pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:30">i</name><operator pos:start="59:31" pos:end="59:32">++</operator></expr></incr>)</control> <block pos:start="59:35" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:38">

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:11">opp</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:19">timers</name><index pos:start="61:20" pos:end="61:22">[<expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">i</name></expr>]</index></name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:27">ticc</name> <operator pos:start="61:29" pos:end="61:29">=</operator> <literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:11">opp</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:19">timers</name><index pos:start="63:20" pos:end="63:22">[<expr pos:start="63:21" pos:end="63:21"><name pos:start="63:21" pos:end="63:21">i</name></expr>]</index></name><operator pos:start="63:23" pos:end="63:23">.</operator><name pos:start="63:24" pos:end="63:27">tibc</name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:37">TIBC_CI</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="67:5" pos:end="67:31">/* Go out of RESET state */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:18"><expr pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:7">opp</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:13">glbc</name></name> <operator pos:start="69:15" pos:end="69:15">=</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
