<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24690.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">gen_spr_BookE206</name><parameter_list pos:start="1:29" pos:end="3:48">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:64">mas_mask</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:47"><decl pos:start="3:31" pos:end="3:47"><type pos:start="3:31" pos:end="3:47"><name pos:start="3:31" pos:end="3:38">uint32_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:47">tlbncfg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="9:5" pos:end="147:24">

<cpp:if pos:start="7:1" pos:end="7:30">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:30"><operator pos:start="7:5" pos:end="7:5">!</operator><call pos:start="7:6" pos:end="7:30"><name pos:start="7:6" pos:end="7:12">defined</name><argument_list pos:start="7:13" pos:end="7:30">(<argument pos:start="7:14" pos:end="7:29"><expr pos:start="7:14" pos:end="7:29"><name pos:start="7:14" pos:end="7:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="9:5" pos:end="13:6"><decl pos:start="9:5" pos:end="13:5"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:28"><name pos:start="9:17" pos:end="9:25">mas_names</name><index pos:start="9:26" pos:end="9:28">[<expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">8</literal></expr>]</index></name> <init pos:start="9:30" pos:end="13:5">= <expr pos:start="9:32" pos:end="13:5"><block pos:start="9:32" pos:end="13:5">{

        <expr pos:start="11:9" pos:end="11:14"><literal type="string" pos:start="11:9" pos:end="11:14">"MAS0"</literal></expr>, <expr pos:start="11:17" pos:end="11:22"><literal type="string" pos:start="11:17" pos:end="11:22">"MAS1"</literal></expr>, <expr pos:start="11:25" pos:end="11:30"><literal type="string" pos:start="11:25" pos:end="11:30">"MAS2"</literal></expr>, <expr pos:start="11:33" pos:end="11:38"><literal type="string" pos:start="11:33" pos:end="11:38">"MAS3"</literal></expr>, <expr pos:start="11:41" pos:end="11:46"><literal type="string" pos:start="11:41" pos:end="11:46">"MAS4"</literal></expr>, <expr pos:start="11:49" pos:end="11:54"><literal type="string" pos:start="11:49" pos:end="11:54">"MAS5"</literal></expr>, <expr pos:start="11:57" pos:end="11:62"><literal type="string" pos:start="11:57" pos:end="11:62">"MAS6"</literal></expr>, <expr pos:start="11:65" pos:end="11:70"><literal type="string" pos:start="11:65" pos:end="11:70">"MAS7"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="21:6"><decl pos:start="15:5" pos:end="21:5"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:16">mas_sprn</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">8</literal></expr>]</index></name> <init pos:start="15:21" pos:end="21:5">= <expr pos:start="15:23" pos:end="21:5"><block pos:start="15:23" pos:end="21:5">{

        <expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:22">SPR_BOOKE_MAS0</name></expr>, <expr pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:38">SPR_BOOKE_MAS1</name></expr>, <expr pos:start="17:41" pos:end="17:54"><name pos:start="17:41" pos:end="17:54">SPR_BOOKE_MAS2</name></expr>, <expr pos:start="17:57" pos:end="17:70"><name pos:start="17:57" pos:end="17:70">SPR_BOOKE_MAS3</name></expr>,

        <expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22">SPR_BOOKE_MAS4</name></expr>, <expr pos:start="19:25" pos:end="19:38"><name pos:start="19:25" pos:end="19:38">SPR_BOOKE_MAS5</name></expr>, <expr pos:start="19:41" pos:end="19:54"><name pos:start="19:41" pos:end="19:54">SPR_BOOKE_MAS6</name></expr>, <expr pos:start="19:57" pos:end="19:70"><name pos:start="19:57" pos:end="19:70">SPR_BOOKE_MAS7</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:30">/* TLB assist registers */</comment>

    <comment type="block" pos:start="29:5" pos:end="29:31">/* XXX : not implemented */</comment>

    <for pos:start="31:5" pos:end="45:5">for <control pos:start="31:9" pos:end="31:27">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:21">8</literal></expr>;</condition> <incr pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:24">i</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr></incr>)</control> <block pos:start="31:29" pos:end="45:5">{<block_content pos:start="33:9" pos:end="43:9">

        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:32">(<expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:20">mas_mask</name> <operator pos:start="33:22" pos:end="33:22">&amp;</operator> <operator pos:start="33:24" pos:end="33:24">(</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal> <operator pos:start="33:27" pos:end="33:28">&lt;&lt;</operator> <name pos:start="33:30" pos:end="33:30">i</name><operator pos:start="33:31" pos:end="33:31">)</operator></expr>)</condition> <block pos:start="33:34" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:37">

            <expr_stmt pos:start="35:13" pos:end="41:37"><expr pos:start="35:13" pos:end="41:36"><call pos:start="35:13" pos:end="41:36"><name pos:start="35:13" pos:end="35:24">spr_register</name><argument_list pos:start="35:25" pos:end="41:36">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">env</name></expr></argument>, <argument pos:start="35:31" pos:end="35:41"><expr pos:start="35:31" pos:end="35:41"><name pos:start="35:31" pos:end="35:41"><name pos:start="35:31" pos:end="35:38">mas_sprn</name><index pos:start="35:39" pos:end="35:41">[<expr pos:start="35:40" pos:end="35:40"><name pos:start="35:40" pos:end="35:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:44" pos:end="35:55"><expr pos:start="35:44" pos:end="35:55"><name pos:start="35:44" pos:end="35:55"><name pos:start="35:44" pos:end="35:52">mas_names</name><index pos:start="35:53" pos:end="35:55">[<expr pos:start="35:54" pos:end="35:54"><name pos:start="35:54" pos:end="35:54">i</name></expr>]</index></name></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:37"><expr pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:37">SPR_NOACCESS</name></expr></argument>, <argument pos:start="37:40" pos:end="37:51"><expr pos:start="37:40" pos:end="37:51"><name pos:start="37:40" pos:end="37:51">SPR_NOACCESS</name></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:42"><expr pos:start="39:26" pos:end="39:42"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:42">spr_read_generic</name></expr></argument>, <argument pos:start="39:45" pos:end="39:62"><expr pos:start="39:45" pos:end="39:62"><operator pos:start="39:45" pos:end="39:45">&amp;</operator><name pos:start="39:46" pos:end="39:62">spr_write_generic</name></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:35"><expr pos:start="41:26" pos:end="41:35"><literal type="number" pos:start="41:26" pos:end="41:35">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="47:5" pos:end="59:5"><if pos:start="47:5" pos:end="59:5">if <condition pos:start="47:8" pos:end="47:25">(<expr pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:11">env</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:20">nb_pids</name></name> <operator pos:start="47:22" pos:end="47:22">&gt;</operator> <literal type="number" pos:start="47:24" pos:end="47:24">1</literal></expr>)</condition> <block pos:start="47:27" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:33">

        <comment type="block" pos:start="49:9" pos:end="49:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="51:9" pos:end="57:33"><expr pos:start="51:9" pos:end="57:32"><call pos:start="51:9" pos:end="57:32"><name pos:start="51:9" pos:end="51:20">spr_register</name><argument_list pos:start="51:21" pos:end="57:32">(<argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:24">env</name></expr></argument>, <argument pos:start="51:27" pos:end="51:40"><expr pos:start="51:27" pos:end="51:40"><name pos:start="51:27" pos:end="51:40">SPR_BOOKE_PID1</name></expr></argument>, <argument pos:start="51:43" pos:end="51:48"><expr pos:start="51:43" pos:end="51:48"><literal type="string" pos:start="51:43" pos:end="51:48">"PID1"</literal></expr></argument>,

                     <argument pos:start="53:22" pos:end="53:33"><expr pos:start="53:22" pos:end="53:33"><name pos:start="53:22" pos:end="53:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="53:36" pos:end="53:47"><expr pos:start="53:36" pos:end="53:47"><name pos:start="53:36" pos:end="53:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="55:22" pos:end="55:38"><expr pos:start="55:22" pos:end="55:38"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:38">spr_read_generic</name></expr></argument>, <argument pos:start="55:41" pos:end="55:60"><expr pos:start="55:41" pos:end="55:60"><operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:60">spr_write_booke_pid</name></expr></argument>,

                     <argument pos:start="57:22" pos:end="57:31"><expr pos:start="57:22" pos:end="57:31"><literal type="number" pos:start="57:22" pos:end="57:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="73:5"><if pos:start="61:5" pos:end="73:5">if <condition pos:start="61:8" pos:end="61:25">(<expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:11">env</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:20">nb_pids</name></name> <operator pos:start="61:22" pos:end="61:22">&gt;</operator> <literal type="number" pos:start="61:24" pos:end="61:24">2</literal></expr>)</condition> <block pos:start="61:27" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:33">

        <comment type="block" pos:start="63:9" pos:end="63:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="65:9" pos:end="71:33"><expr pos:start="65:9" pos:end="71:32"><call pos:start="65:9" pos:end="71:32"><name pos:start="65:9" pos:end="65:20">spr_register</name><argument_list pos:start="65:21" pos:end="71:32">(<argument pos:start="65:22" pos:end="65:24"><expr pos:start="65:22" pos:end="65:24"><name pos:start="65:22" pos:end="65:24">env</name></expr></argument>, <argument pos:start="65:27" pos:end="65:40"><expr pos:start="65:27" pos:end="65:40"><name pos:start="65:27" pos:end="65:40">SPR_BOOKE_PID2</name></expr></argument>, <argument pos:start="65:43" pos:end="65:48"><expr pos:start="65:43" pos:end="65:48"><literal type="string" pos:start="65:43" pos:end="65:48">"PID2"</literal></expr></argument>,

                     <argument pos:start="67:22" pos:end="67:33"><expr pos:start="67:22" pos:end="67:33"><name pos:start="67:22" pos:end="67:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="67:36" pos:end="67:47"><expr pos:start="67:36" pos:end="67:47"><name pos:start="67:36" pos:end="67:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="69:22" pos:end="69:38"><expr pos:start="69:22" pos:end="69:38"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:38">spr_read_generic</name></expr></argument>, <argument pos:start="69:41" pos:end="69:60"><expr pos:start="69:41" pos:end="69:60"><operator pos:start="69:41" pos:end="69:41">&amp;</operator><name pos:start="69:42" pos:end="69:60">spr_write_booke_pid</name></expr></argument>,

                     <argument pos:start="71:22" pos:end="71:31"><expr pos:start="71:22" pos:end="71:31"><literal type="number" pos:start="71:22" pos:end="71:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="75:5" pos:end="75:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="77:5" pos:end="83:29"><expr pos:start="77:5" pos:end="83:28"><call pos:start="77:5" pos:end="83:28"><name pos:start="77:5" pos:end="77:16">spr_register</name><argument_list pos:start="77:17" pos:end="83:28">(<argument pos:start="77:18" pos:end="77:20"><expr pos:start="77:18" pos:end="77:20"><name pos:start="77:18" pos:end="77:20">env</name></expr></argument>, <argument pos:start="77:23" pos:end="77:32"><expr pos:start="77:23" pos:end="77:32"><name pos:start="77:23" pos:end="77:32">SPR_MMUCFG</name></expr></argument>, <argument pos:start="77:35" pos:end="77:42"><expr pos:start="77:35" pos:end="77:42"><literal type="string" pos:start="77:35" pos:end="77:42">"MMUCFG"</literal></expr></argument>,

                 <argument pos:start="79:18" pos:end="79:29"><expr pos:start="79:18" pos:end="79:29"><name pos:start="79:18" pos:end="79:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="79:32" pos:end="79:43"><expr pos:start="79:32" pos:end="79:43"><name pos:start="79:32" pos:end="79:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="81:18" pos:end="81:34"><expr pos:start="81:18" pos:end="81:34"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:34">spr_read_generic</name></expr></argument>, <argument pos:start="81:37" pos:end="81:48"><expr pos:start="81:37" pos:end="81:48"><name pos:start="81:37" pos:end="81:48">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="83:18" pos:end="83:27"><expr pos:start="83:18" pos:end="83:27"><literal type="number" pos:start="83:18" pos:end="83:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:31" pos:end="83:41">/* TOFIX */</comment>

    <switch pos:start="85:5" pos:end="144:0">switch <condition pos:start="85:12" pos:end="85:25">(<expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:15">env</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:24">nb_ways</name></name></expr>)</condition> <block pos:start="85:27" pos:end="144:0">{<block_content pos:start="87:5" pos:end="139:14">

    <case pos:start="87:5" pos:end="87:11">case <expr pos:start="87:10" pos:end="87:10"><literal type="number" pos:start="87:10" pos:end="87:10">4</literal></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="95:33"><expr pos:start="89:9" pos:end="95:32"><call pos:start="89:9" pos:end="95:32"><name pos:start="89:9" pos:end="89:20">spr_register</name><argument_list pos:start="89:21" pos:end="95:32">(<argument pos:start="89:22" pos:end="89:24"><expr pos:start="89:22" pos:end="89:24"><name pos:start="89:22" pos:end="89:24">env</name></expr></argument>, <argument pos:start="89:27" pos:end="89:43"><expr pos:start="89:27" pos:end="89:43"><name pos:start="89:27" pos:end="89:43">SPR_BOOKE_TLB3CFG</name></expr></argument>, <argument pos:start="89:46" pos:end="89:54"><expr pos:start="89:46" pos:end="89:54"><literal type="string" pos:start="89:46" pos:end="89:54">"TLB3CFG"</literal></expr></argument>,

                     <argument pos:start="91:22" pos:end="91:33"><expr pos:start="91:22" pos:end="91:33"><name pos:start="91:22" pos:end="91:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="91:36" pos:end="91:47"><expr pos:start="91:36" pos:end="91:47"><name pos:start="91:36" pos:end="91:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="93:22" pos:end="93:38"><expr pos:start="93:22" pos:end="93:38"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:38">spr_read_generic</name></expr></argument>, <argument pos:start="93:41" pos:end="93:52"><expr pos:start="93:41" pos:end="93:52"><name pos:start="93:41" pos:end="93:52">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="95:22" pos:end="95:31"><expr pos:start="95:22" pos:end="95:31"><name pos:start="95:22" pos:end="95:31"><name pos:start="95:22" pos:end="95:28">tlbncfg</name><index pos:start="95:29" pos:end="95:31">[<expr pos:start="95:30" pos:end="95:30"><literal type="number" pos:start="95:30" pos:end="95:30">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="97:9" pos:end="97:22">/* Fallthru */</comment>

    <case pos:start="99:5" pos:end="99:11">case <expr pos:start="99:10" pos:end="99:10"><literal type="number" pos:start="99:10" pos:end="99:10">3</literal></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="107:33"><expr pos:start="101:9" pos:end="107:32"><call pos:start="101:9" pos:end="107:32"><name pos:start="101:9" pos:end="101:20">spr_register</name><argument_list pos:start="101:21" pos:end="107:32">(<argument pos:start="101:22" pos:end="101:24"><expr pos:start="101:22" pos:end="101:24"><name pos:start="101:22" pos:end="101:24">env</name></expr></argument>, <argument pos:start="101:27" pos:end="101:43"><expr pos:start="101:27" pos:end="101:43"><name pos:start="101:27" pos:end="101:43">SPR_BOOKE_TLB2CFG</name></expr></argument>, <argument pos:start="101:46" pos:end="101:54"><expr pos:start="101:46" pos:end="101:54"><literal type="string" pos:start="101:46" pos:end="101:54">"TLB2CFG"</literal></expr></argument>,

                     <argument pos:start="103:22" pos:end="103:33"><expr pos:start="103:22" pos:end="103:33"><name pos:start="103:22" pos:end="103:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="103:36" pos:end="103:47"><expr pos:start="103:36" pos:end="103:47"><name pos:start="103:36" pos:end="103:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="105:22" pos:end="105:38"><expr pos:start="105:22" pos:end="105:38"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:38">spr_read_generic</name></expr></argument>, <argument pos:start="105:41" pos:end="105:52"><expr pos:start="105:41" pos:end="105:52"><name pos:start="105:41" pos:end="105:52">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="107:22" pos:end="107:31"><expr pos:start="107:22" pos:end="107:31"><name pos:start="107:22" pos:end="107:31"><name pos:start="107:22" pos:end="107:28">tlbncfg</name><index pos:start="107:29" pos:end="107:31">[<expr pos:start="107:30" pos:end="107:30"><literal type="number" pos:start="107:30" pos:end="107:30">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="109:9" pos:end="109:22">/* Fallthru */</comment>

    <case pos:start="111:5" pos:end="111:11">case <expr pos:start="111:10" pos:end="111:10"><literal type="number" pos:start="111:10" pos:end="111:10">2</literal></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="119:33"><expr pos:start="113:9" pos:end="119:32"><call pos:start="113:9" pos:end="119:32"><name pos:start="113:9" pos:end="113:20">spr_register</name><argument_list pos:start="113:21" pos:end="119:32">(<argument pos:start="113:22" pos:end="113:24"><expr pos:start="113:22" pos:end="113:24"><name pos:start="113:22" pos:end="113:24">env</name></expr></argument>, <argument pos:start="113:27" pos:end="113:43"><expr pos:start="113:27" pos:end="113:43"><name pos:start="113:27" pos:end="113:43">SPR_BOOKE_TLB1CFG</name></expr></argument>, <argument pos:start="113:46" pos:end="113:54"><expr pos:start="113:46" pos:end="113:54"><literal type="string" pos:start="113:46" pos:end="113:54">"TLB1CFG"</literal></expr></argument>,

                     <argument pos:start="115:22" pos:end="115:33"><expr pos:start="115:22" pos:end="115:33"><name pos:start="115:22" pos:end="115:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="115:36" pos:end="115:47"><expr pos:start="115:36" pos:end="115:47"><name pos:start="115:36" pos:end="115:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="117:22" pos:end="117:38"><expr pos:start="117:22" pos:end="117:38"><operator pos:start="117:22" pos:end="117:22">&amp;</operator><name pos:start="117:23" pos:end="117:38">spr_read_generic</name></expr></argument>, <argument pos:start="117:41" pos:end="117:52"><expr pos:start="117:41" pos:end="117:52"><name pos:start="117:41" pos:end="117:52">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="119:22" pos:end="119:31"><expr pos:start="119:22" pos:end="119:31"><name pos:start="119:22" pos:end="119:31"><name pos:start="119:22" pos:end="119:28">tlbncfg</name><index pos:start="119:29" pos:end="119:31">[<expr pos:start="119:30" pos:end="119:30"><literal type="number" pos:start="119:30" pos:end="119:30">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="121:9" pos:end="121:22">/* Fallthru */</comment>

    <case pos:start="123:5" pos:end="123:11">case <expr pos:start="123:10" pos:end="123:10"><literal type="number" pos:start="123:10" pos:end="123:10">1</literal></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="131:33"><expr pos:start="125:9" pos:end="131:32"><call pos:start="125:9" pos:end="131:32"><name pos:start="125:9" pos:end="125:20">spr_register</name><argument_list pos:start="125:21" pos:end="131:32">(<argument pos:start="125:22" pos:end="125:24"><expr pos:start="125:22" pos:end="125:24"><name pos:start="125:22" pos:end="125:24">env</name></expr></argument>, <argument pos:start="125:27" pos:end="125:43"><expr pos:start="125:27" pos:end="125:43"><name pos:start="125:27" pos:end="125:43">SPR_BOOKE_TLB0CFG</name></expr></argument>, <argument pos:start="125:46" pos:end="125:54"><expr pos:start="125:46" pos:end="125:54"><literal type="string" pos:start="125:46" pos:end="125:54">"TLB0CFG"</literal></expr></argument>,

                     <argument pos:start="127:22" pos:end="127:33"><expr pos:start="127:22" pos:end="127:33"><name pos:start="127:22" pos:end="127:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="127:36" pos:end="127:47"><expr pos:start="127:36" pos:end="127:47"><name pos:start="127:36" pos:end="127:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="129:22" pos:end="129:38"><expr pos:start="129:22" pos:end="129:38"><operator pos:start="129:22" pos:end="129:22">&amp;</operator><name pos:start="129:23" pos:end="129:38">spr_read_generic</name></expr></argument>, <argument pos:start="129:41" pos:end="129:52"><expr pos:start="129:41" pos:end="129:52"><name pos:start="129:41" pos:end="129:52">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="131:22" pos:end="131:31"><expr pos:start="131:22" pos:end="131:31"><name pos:start="131:22" pos:end="131:31"><name pos:start="131:22" pos:end="131:28">tlbncfg</name><index pos:start="131:29" pos:end="131:31">[<expr pos:start="131:30" pos:end="131:30"><literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="133:9" pos:end="133:22">/* Fallthru */</comment>

    <case pos:start="135:5" pos:end="135:11">case <expr pos:start="135:10" pos:end="135:10"><literal type="number" pos:start="135:10" pos:end="135:10">0</literal></expr>:</case>

    <default pos:start="137:5" pos:end="137:12">default:</default>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    </block_content>}</block></switch>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="147:5" pos:end="147:24"><expr pos:start="147:5" pos:end="147:23"><call pos:start="147:5" pos:end="147:23"><name pos:start="147:5" pos:end="147:18">gen_spr_usprgh</name><argument_list pos:start="147:19" pos:end="147:23">(<argument pos:start="147:20" pos:end="147:22"><expr pos:start="147:20" pos:end="147:22"><name pos:start="147:20" pos:end="147:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
