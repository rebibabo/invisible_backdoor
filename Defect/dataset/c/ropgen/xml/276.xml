<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/276.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">check_loopfilter</name><parameter_list pos:start="1:29" pos:end="1:34">(<parameter pos:start="1:30" pos:end="1:33"><decl pos:start="1:30" pos:end="1:33"><type pos:start="1:30" pos:end="1:33"><name pos:start="1:30" pos:end="1:33">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:25">

    <expr_stmt pos:start="5:5" pos:end="5:57"><expr pos:start="5:5" pos:end="5:56"><call pos:start="5:5" pos:end="5:56"><name pos:start="5:5" pos:end="5:20">LOCAL_ALIGNED_32</name><argument_list pos:start="5:21" pos:end="5:56">(<argument pos:start="5:22" pos:end="5:28"><expr pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:28">uint8_t</name></expr></argument>, <argument pos:start="5:31" pos:end="5:35"><expr pos:start="5:31" pos:end="5:35"><name pos:start="5:31" pos:end="5:35">base0</name></expr></argument>, <argument pos:start="5:38" pos:end="5:55"><expr pos:start="5:38" pos:end="5:55"><index pos:start="5:38" pos:end="5:55">[<expr pos:start="5:39" pos:end="5:54"><literal type="number" pos:start="5:39" pos:end="5:42">32</literal> <operator pos:start="5:42" pos:end="5:42">+</operator> <literal type="number" pos:start="5:44" pos:end="5:45">16</literal> <operator pos:start="5:47" pos:end="5:47">*</operator> <literal type="number" pos:start="5:49" pos:end="5:50">16</literal> <operator pos:start="5:52" pos:end="5:52">*</operator> <literal type="number" pos:start="5:54" pos:end="5:54">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:57"><expr pos:start="7:5" pos:end="7:56"><call pos:start="7:5" pos:end="7:56"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_32</name><argument_list pos:start="7:21" pos:end="7:56">(<argument pos:start="7:22" pos:end="7:28"><expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28">uint8_t</name></expr></argument>, <argument pos:start="7:31" pos:end="7:35"><expr pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:35">base1</name></expr></argument>, <argument pos:start="7:38" pos:end="7:55"><expr pos:start="7:38" pos:end="7:55"><index pos:start="7:38" pos:end="7:55">[<expr pos:start="7:39" pos:end="7:54"><literal type="number" pos:start="7:39" pos:end="7:42">32</literal> <operator pos:start="7:42" pos:end="7:42">+</operator> <literal type="number" pos:start="7:44" pos:end="7:45">16</literal> <operator pos:start="7:47" pos:end="7:47">*</operator> <literal type="number" pos:start="7:49" pos:end="7:50">16</literal> <operator pos:start="7:52" pos:end="7:52">*</operator> <literal type="number" pos:start="7:54" pos:end="7:54">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">VP9DSPContext</name></type> <name pos:start="9:19" pos:end="9:21">dsp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">dir</name></decl>, <decl pos:start="11:14" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:15">wd</name></decl>, <decl pos:start="11:18" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:20">wd2</name></decl>, <decl pos:start="11:23" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:31">bit_depth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:28"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <specifier pos:start="13:12" pos:end="13:16">const</specifier> <name pos:start="13:18" pos:end="13:21">char</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier><specifier pos:start="13:24" pos:end="13:28">const</specifier></type> <name pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:37">dir_name</name><index pos:start="13:38" pos:end="13:40">[<expr pos:start="13:39" pos:end="13:39"><literal type="number" pos:start="13:39" pos:end="13:39">2</literal></expr>]</index></name> <init pos:start="13:42" pos:end="13:55">= <expr pos:start="13:44" pos:end="13:55"><block pos:start="13:44" pos:end="13:55">{ <expr pos:start="13:46" pos:end="13:48"><literal type="string" pos:start="13:46" pos:end="13:48">"h"</literal></expr>, <expr pos:start="13:51" pos:end="13:53"><literal type="string" pos:start="13:51" pos:end="13:53">"v"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:20"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <specifier pos:start="15:12" pos:end="15:16">const</specifier> <name pos:start="15:18" pos:end="15:20">int</name></type> <name pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:22">E</name><index pos:start="15:23" pos:end="15:25">[<expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">2</literal></expr>]</index></name> <init pos:start="15:27" pos:end="15:38">= <expr pos:start="15:29" pos:end="15:38"><block pos:start="15:29" pos:end="15:38">{ <expr pos:start="15:31" pos:end="15:32"><literal type="number" pos:start="15:31" pos:end="15:32">20</literal></expr>, <expr pos:start="15:35" pos:end="15:36"><literal type="number" pos:start="15:35" pos:end="15:36">28</literal></expr> }</block></expr></init></decl>, <decl pos:start="15:41" pos:end="15:57"><type ref="prev" pos:start="15:5" pos:end="15:20"/><name pos:start="15:41" pos:end="15:44"><name pos:start="15:41" pos:end="15:41">I</name><index pos:start="15:42" pos:end="15:44">[<expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">2</literal></expr>]</index></name> <init pos:start="15:46" pos:end="15:57">= <expr pos:start="15:48" pos:end="15:57"><block pos:start="15:48" pos:end="15:57">{ <expr pos:start="15:50" pos:end="15:51"><literal type="number" pos:start="15:50" pos:end="15:51">10</literal></expr>, <expr pos:start="15:54" pos:end="15:55"><literal type="number" pos:start="15:54" pos:end="15:55">16</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:20"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <specifier pos:start="17:12" pos:end="17:16">const</specifier> <name pos:start="17:18" pos:end="17:20">int</name></type> <name pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:22">H</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">2</literal></expr>]</index></name> <init pos:start="17:27" pos:end="17:37">= <expr pos:start="17:29" pos:end="17:37"><block pos:start="17:29" pos:end="17:37">{ <expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">7</literal></expr>, <expr pos:start="17:34" pos:end="17:35"><literal type="number" pos:start="17:34" pos:end="17:35">11</literal></expr> }</block></expr></init></decl>, <decl pos:start="17:40" pos:end="17:54"><type ref="prev" pos:start="17:5" pos:end="17:20"/><name pos:start="17:40" pos:end="17:43"><name pos:start="17:40" pos:end="17:40">F</name><index pos:start="17:41" pos:end="17:43">[<expr pos:start="17:42" pos:end="17:42"><literal type="number" pos:start="17:42" pos:end="17:42">2</literal></expr>]</index></name> <init pos:start="17:45" pos:end="17:54">= <expr pos:start="17:47" pos:end="17:54"><block pos:start="17:47" pos:end="17:54">{ <expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">1</literal></expr>, <expr pos:start="17:52" pos:end="17:52"><literal type="number" pos:start="17:52" pos:end="17:52">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <macro pos:start="19:5" pos:end="19:75"><name pos:start="19:5" pos:end="19:16">declare_func</name><argument_list pos:start="19:17" pos:end="19:75">(<argument pos:start="19:18" pos:end="19:21">void</argument>, <argument pos:start="19:24" pos:end="19:35">uint8_t *dst</argument>, <argument pos:start="19:38" pos:end="19:53">ptrdiff_t stride</argument>, <argument pos:start="19:56" pos:end="19:60">int E</argument>, <argument pos:start="19:63" pos:end="19:67">int I</argument>, <argument pos:start="19:70" pos:end="19:74">int H</argument>)</argument_list></macro><empty_stmt pos:start="19:76" pos:end="19:76">;</empty_stmt>



    <for pos:start="23:5" pos:end="153:5">for <control pos:start="23:9" pos:end="23:56">(<init pos:start="23:10" pos:end="23:23"><expr pos:start="23:10" pos:end="23:22"><name pos:start="23:10" pos:end="23:18">bit_depth</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">8</literal></expr>;</init> <condition pos:start="23:25" pos:end="23:40"><expr pos:start="23:25" pos:end="23:39"><name pos:start="23:25" pos:end="23:33">bit_depth</name> <operator pos:start="23:35" pos:end="23:36">&lt;=</operator> <literal type="number" pos:start="23:38" pos:end="23:39">12</literal></expr>;</condition> <incr pos:start="23:42" pos:end="23:55"><expr pos:start="23:42" pos:end="23:55"><name pos:start="23:42" pos:end="23:50">bit_depth</name> <operator pos:start="23:52" pos:end="23:53">+=</operator> <literal type="number" pos:start="23:55" pos:end="23:55">2</literal></expr></incr>)</control> <block pos:start="23:58" pos:end="153:5">{<block_content pos:start="25:9" pos:end="151:9">

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:22">ff_vp9dsp_init</name><argument_list pos:start="25:23" pos:end="25:42">(<argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:27">dsp</name></expr></argument>, <argument pos:start="25:30" pos:end="25:38"><expr pos:start="25:30" pos:end="25:38"><name pos:start="25:30" pos:end="25:38">bit_depth</name></expr></argument>, <argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><literal type="number" pos:start="25:41" pos:end="25:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="29:9" pos:end="151:9">for <control pos:start="29:13" pos:end="29:37">(<init pos:start="29:14" pos:end="29:21"><expr pos:start="29:14" pos:end="29:20"><name pos:start="29:14" pos:end="29:16">dir</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</init> <condition pos:start="29:23" pos:end="29:30"><expr pos:start="29:23" pos:end="29:29"><name pos:start="29:23" pos:end="29:25">dir</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <literal type="number" pos:start="29:29" pos:end="29:29">2</literal></expr>;</condition> <incr pos:start="29:32" pos:end="29:36"><expr pos:start="29:32" pos:end="29:36"><name pos:start="29:32" pos:end="29:34">dir</name><operator pos:start="29:35" pos:end="29:36">++</operator></expr></incr>)</control> <block pos:start="29:39" pos:end="151:9">{<block_content pos:start="31:13" pos:end="149:13">

            <decl_stmt pos:start="31:13" pos:end="31:58"><decl pos:start="31:13" pos:end="31:57"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:22">midoff</name> <init pos:start="31:24" pos:end="31:57">= <expr pos:start="31:26" pos:end="31:57"><operator pos:start="31:26" pos:end="31:26">(</operator><ternary pos:start="31:27" pos:end="31:41"><condition pos:start="31:27" pos:end="31:31"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">dir</name></expr> ?</condition><then pos:start="31:33" pos:end="31:37"> <expr pos:start="31:33" pos:end="31:37"><literal type="number" pos:start="31:33" pos:end="31:33">8</literal> <operator pos:start="31:35" pos:end="31:35">*</operator> <literal type="number" pos:start="31:37" pos:end="31:37">8</literal></expr> </then><else pos:start="31:39" pos:end="31:41">: <expr pos:start="31:41" pos:end="31:41"><literal type="number" pos:start="31:41" pos:end="31:41">8</literal></expr></else></ternary><operator pos:start="31:42" pos:end="31:42">)</operator> <operator pos:start="31:44" pos:end="31:44">*</operator> <name pos:start="31:46" pos:end="31:57">SIZEOF_PIXEL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:67"><decl pos:start="33:13" pos:end="33:66"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:30">midoff_aligned</name> <init pos:start="33:32" pos:end="33:66">= <expr pos:start="33:34" pos:end="33:66"><operator pos:start="33:34" pos:end="33:34">(</operator><ternary pos:start="33:35" pos:end="33:50"><condition pos:start="33:35" pos:end="33:39"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:37">dir</name></expr> ?</condition><then pos:start="33:41" pos:end="33:45"> <expr pos:start="33:41" pos:end="33:45"><literal type="number" pos:start="33:41" pos:end="33:41">8</literal> <operator pos:start="33:43" pos:end="33:43">*</operator> <literal type="number" pos:start="33:45" pos:end="33:45">8</literal></expr> </then><else pos:start="33:47" pos:end="33:50">: <expr pos:start="33:49" pos:end="33:50"><literal type="number" pos:start="33:49" pos:end="33:50">16</literal></expr></else></ternary><operator pos:start="33:51" pos:end="33:51">)</operator> <operator pos:start="33:53" pos:end="33:53">*</operator> <name pos:start="33:55" pos:end="33:66">SIZEOF_PIXEL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:51"><decl pos:start="35:13" pos:end="35:50"><type pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:19">uint8_t</name> <modifier pos:start="35:21" pos:end="35:21">*</modifier></type><name pos:start="35:22" pos:end="35:25">buf0</name> <init pos:start="35:27" pos:end="35:50">= <expr pos:start="35:29" pos:end="35:50"><name pos:start="35:29" pos:end="35:33">base0</name> <operator pos:start="35:35" pos:end="35:35">+</operator> <name pos:start="35:37" pos:end="35:50">midoff_aligned</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:51"><decl pos:start="37:13" pos:end="37:50"><type pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:19">uint8_t</name> <modifier pos:start="37:21" pos:end="37:21">*</modifier></type><name pos:start="37:22" pos:end="37:25">buf1</name> <init pos:start="37:27" pos:end="37:50">= <expr pos:start="37:29" pos:end="37:50"><name pos:start="37:29" pos:end="37:33">base1</name> <operator pos:start="37:35" pos:end="37:35">+</operator> <name pos:start="37:37" pos:end="37:50">midoff_aligned</name></expr></init></decl>;</decl_stmt>



            <for pos:start="41:13" pos:end="69:13">for <control pos:start="41:17" pos:end="41:38">(<init pos:start="41:18" pos:end="41:24"><expr pos:start="41:18" pos:end="41:23"><name pos:start="41:18" pos:end="41:19">wd</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>;</init> <condition pos:start="41:26" pos:end="41:32"><expr pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:27">wd</name> <operator pos:start="41:29" pos:end="41:29">&lt;</operator> <literal type="number" pos:start="41:31" pos:end="41:31">3</literal></expr>;</condition> <incr pos:start="41:34" pos:end="41:37"><expr pos:start="41:34" pos:end="41:37"><name pos:start="41:34" pos:end="41:35">wd</name><operator pos:start="41:36" pos:end="41:37">++</operator></expr></incr>)</control> <block pos:start="41:40" pos:end="69:13">{<block_content pos:start="45:17" pos:end="67:17">

                <comment type="line" pos:start="43:17" pos:end="43:31">// 4/8/16wd_8px</comment>

                <if_stmt pos:start="45:17" pos:end="67:17"><if pos:start="45:17" pos:end="67:17">if <condition pos:start="45:20" pos:end="49:66">(<expr pos:start="45:21" pos:end="49:65"><call pos:start="45:21" pos:end="49:65"><name pos:start="45:21" pos:end="45:30">check_func</name><argument_list pos:start="45:31" pos:end="49:65">(<argument pos:start="45:32" pos:end="45:57"><expr pos:start="45:32" pos:end="45:57"><name pos:start="45:32" pos:end="45:57"><name pos:start="45:32" pos:end="45:34">dsp</name><operator pos:start="45:35" pos:end="45:35">.</operator><name pos:start="45:36" pos:end="45:48">loop_filter_8</name><index pos:start="45:49" pos:end="45:52">[<expr pos:start="45:50" pos:end="45:51"><name pos:start="45:50" pos:end="45:51">wd</name></expr>]</index><index pos:start="45:53" pos:end="45:57">[<expr pos:start="45:54" pos:end="45:56"><name pos:start="45:54" pos:end="45:56">dir</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="47:32" pos:end="47:62"><expr pos:start="47:32" pos:end="47:62"><literal type="string" pos:start="47:32" pos:end="47:62">"vp9_loop_filter_%s_%d_8_%dbpp"</literal></expr></argument>,

                               <argument pos:start="49:32" pos:end="49:44"><expr pos:start="49:32" pos:end="49:44"><name pos:start="49:32" pos:end="49:44"><name pos:start="49:32" pos:end="49:39">dir_name</name><index pos:start="49:40" pos:end="49:44">[<expr pos:start="49:41" pos:end="49:43"><name pos:start="49:41" pos:end="49:43">dir</name></expr>]</index></name></expr></argument>, <argument pos:start="49:47" pos:end="49:53"><expr pos:start="49:47" pos:end="49:53"><literal type="number" pos:start="49:47" pos:end="49:47">4</literal> <operator pos:start="49:49" pos:end="49:50">&lt;&lt;</operator> <name pos:start="49:52" pos:end="49:53">wd</name></expr></argument>, <argument pos:start="49:56" pos:end="49:64"><expr pos:start="49:56" pos:end="49:64"><name pos:start="49:56" pos:end="49:64">bit_depth</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:68" pos:end="67:17">{<block_content pos:start="51:21" pos:end="65:80">

                    <expr_stmt pos:start="51:21" pos:end="51:47"><expr pos:start="51:21" pos:end="51:46"><call pos:start="51:21" pos:end="51:46"><name pos:start="51:21" pos:end="51:37">randomize_buffers</name><argument_list pos:start="51:38" pos:end="51:46">(<argument pos:start="51:39" pos:end="51:39"><expr pos:start="51:39" pos:end="51:39"><literal type="number" pos:start="51:39" pos:end="51:39">0</literal></expr></argument>, <argument pos:start="51:42" pos:end="51:42"><expr pos:start="51:42" pos:end="51:42"><literal type="number" pos:start="51:42" pos:end="51:42">0</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:45"><expr pos:start="51:45" pos:end="51:45"><literal type="number" pos:start="51:45" pos:end="51:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="55:50"><expr pos:start="53:21" pos:end="55:49"><call pos:start="53:21" pos:end="55:49"><name pos:start="53:21" pos:end="53:26">memcpy</name><argument_list pos:start="53:27" pos:end="55:49">(<argument pos:start="53:28" pos:end="53:40"><expr pos:start="53:28" pos:end="53:40"><name pos:start="53:28" pos:end="53:31">buf1</name> <operator pos:start="53:33" pos:end="53:33">-</operator> <name pos:start="53:35" pos:end="53:40">midoff</name></expr></argument>, <argument pos:start="53:43" pos:end="53:55"><expr pos:start="53:43" pos:end="53:55"><name pos:start="53:43" pos:end="53:46">buf0</name> <operator pos:start="53:48" pos:end="53:48">-</operator> <name pos:start="53:50" pos:end="53:55">midoff</name></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:48"><expr pos:start="55:28" pos:end="55:48"><literal type="number" pos:start="55:28" pos:end="55:29">16</literal> <operator pos:start="55:31" pos:end="55:31">*</operator> <literal type="number" pos:start="55:33" pos:end="55:33">8</literal> <operator pos:start="55:35" pos:end="55:35">*</operator> <name pos:start="55:37" pos:end="55:48">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:79"><expr pos:start="57:21" pos:end="57:78"><call pos:start="57:21" pos:end="57:78"><name pos:start="57:21" pos:end="57:28">call_ref</name><argument_list pos:start="57:29" pos:end="57:78">(<argument pos:start="57:30" pos:end="57:33"><expr pos:start="57:30" pos:end="57:33"><name pos:start="57:30" pos:end="57:33">buf0</name></expr></argument>, <argument pos:start="57:36" pos:end="57:59"><expr pos:start="57:36" pos:end="57:59"><literal type="number" pos:start="57:36" pos:end="57:37">16</literal> <operator pos:start="57:39" pos:end="57:39">*</operator> <name pos:start="57:41" pos:end="57:52">SIZEOF_PIXEL</name> <operator pos:start="57:54" pos:end="57:55">&gt;&gt;</operator> <name pos:start="57:57" pos:end="57:59">dir</name></expr></argument>, <argument pos:start="57:62" pos:end="57:65"><expr pos:start="57:62" pos:end="57:65"><name pos:start="57:62" pos:end="57:65"><name pos:start="57:62" pos:end="57:62">E</name><index pos:start="57:63" pos:end="57:65">[<expr pos:start="57:64" pos:end="57:64"><literal type="number" pos:start="57:64" pos:end="57:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:68" pos:end="57:71"><expr pos:start="57:68" pos:end="57:71"><name pos:start="57:68" pos:end="57:71"><name pos:start="57:68" pos:end="57:68">I</name><index pos:start="57:69" pos:end="57:71">[<expr pos:start="57:70" pos:end="57:70"><literal type="number" pos:start="57:70" pos:end="57:70">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:74" pos:end="57:77"><expr pos:start="57:74" pos:end="57:77"><name pos:start="57:74" pos:end="57:77"><name pos:start="57:74" pos:end="57:74">H</name><index pos:start="57:75" pos:end="57:77">[<expr pos:start="57:76" pos:end="57:76"><literal type="number" pos:start="57:76" pos:end="57:76">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:79"><expr pos:start="59:21" pos:end="59:78"><call pos:start="59:21" pos:end="59:78"><name pos:start="59:21" pos:end="59:28">call_new</name><argument_list pos:start="59:29" pos:end="59:78">(<argument pos:start="59:30" pos:end="59:33"><expr pos:start="59:30" pos:end="59:33"><name pos:start="59:30" pos:end="59:33">buf1</name></expr></argument>, <argument pos:start="59:36" pos:end="59:59"><expr pos:start="59:36" pos:end="59:59"><literal type="number" pos:start="59:36" pos:end="59:37">16</literal> <operator pos:start="59:39" pos:end="59:39">*</operator> <name pos:start="59:41" pos:end="59:52">SIZEOF_PIXEL</name> <operator pos:start="59:54" pos:end="59:55">&gt;&gt;</operator> <name pos:start="59:57" pos:end="59:59">dir</name></expr></argument>, <argument pos:start="59:62" pos:end="59:65"><expr pos:start="59:62" pos:end="59:65"><name pos:start="59:62" pos:end="59:65"><name pos:start="59:62" pos:end="59:62">E</name><index pos:start="59:63" pos:end="59:65">[<expr pos:start="59:64" pos:end="59:64"><literal type="number" pos:start="59:64" pos:end="59:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="59:68" pos:end="59:71"><expr pos:start="59:68" pos:end="59:71"><name pos:start="59:68" pos:end="59:71"><name pos:start="59:68" pos:end="59:68">I</name><index pos:start="59:69" pos:end="59:71">[<expr pos:start="59:70" pos:end="59:70"><literal type="number" pos:start="59:70" pos:end="59:70">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="59:74" pos:end="59:77"><expr pos:start="59:74" pos:end="59:77"><name pos:start="59:74" pos:end="59:77"><name pos:start="59:74" pos:end="59:74">H</name><index pos:start="59:75" pos:end="59:77">[<expr pos:start="59:76" pos:end="59:76"><literal type="number" pos:start="59:76" pos:end="59:76">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="61:21" pos:end="63:31"><if pos:start="61:21" pos:end="63:31">if <condition pos:start="61:24" pos:end="61:84">(<expr pos:start="61:25" pos:end="61:83"><call pos:start="61:25" pos:end="61:83"><name pos:start="61:25" pos:end="61:30">memcmp</name><argument_list pos:start="61:31" pos:end="61:83">(<argument pos:start="61:32" pos:end="61:44"><expr pos:start="61:32" pos:end="61:44"><name pos:start="61:32" pos:end="61:35">buf0</name> <operator pos:start="61:37" pos:end="61:37">-</operator> <name pos:start="61:39" pos:end="61:44">midoff</name></expr></argument>, <argument pos:start="61:47" pos:end="61:59"><expr pos:start="61:47" pos:end="61:59"><name pos:start="61:47" pos:end="61:50">buf1</name> <operator pos:start="61:52" pos:end="61:52">-</operator> <name pos:start="61:54" pos:end="61:59">midoff</name></expr></argument>, <argument pos:start="61:62" pos:end="61:82"><expr pos:start="61:62" pos:end="61:82"><literal type="number" pos:start="61:62" pos:end="61:63">16</literal> <operator pos:start="61:65" pos:end="61:65">*</operator> <literal type="number" pos:start="61:67" pos:end="61:67">8</literal> <operator pos:start="61:69" pos:end="61:69">*</operator> <name pos:start="61:71" pos:end="61:82">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:25" pos:end="63:31"><block_content pos:start="63:25" pos:end="63:31">

                        <expr_stmt pos:start="63:25" pos:end="63:31"><expr pos:start="63:25" pos:end="63:30"><call pos:start="63:25" pos:end="63:30"><name pos:start="63:25" pos:end="63:28">fail</name><argument_list pos:start="63:29" pos:end="63:30">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:80"><expr pos:start="65:21" pos:end="65:79"><call pos:start="65:21" pos:end="65:79"><name pos:start="65:21" pos:end="65:29">bench_new</name><argument_list pos:start="65:30" pos:end="65:79">(<argument pos:start="65:31" pos:end="65:34"><expr pos:start="65:31" pos:end="65:34"><name pos:start="65:31" pos:end="65:34">buf1</name></expr></argument>, <argument pos:start="65:37" pos:end="65:60"><expr pos:start="65:37" pos:end="65:60"><literal type="number" pos:start="65:37" pos:end="65:38">16</literal> <operator pos:start="65:40" pos:end="65:40">*</operator> <name pos:start="65:42" pos:end="65:53">SIZEOF_PIXEL</name> <operator pos:start="65:55" pos:end="65:56">&gt;&gt;</operator> <name pos:start="65:58" pos:end="65:60">dir</name></expr></argument>, <argument pos:start="65:63" pos:end="65:66"><expr pos:start="65:63" pos:end="65:66"><name pos:start="65:63" pos:end="65:66"><name pos:start="65:63" pos:end="65:63">E</name><index pos:start="65:64" pos:end="65:66">[<expr pos:start="65:65" pos:end="65:65"><literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:69" pos:end="65:72"><expr pos:start="65:69" pos:end="65:72"><name pos:start="65:69" pos:end="65:72"><name pos:start="65:69" pos:end="65:69">I</name><index pos:start="65:70" pos:end="65:72">[<expr pos:start="65:71" pos:end="65:71"><literal type="number" pos:start="65:71" pos:end="65:71">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:75" pos:end="65:78"><expr pos:start="65:75" pos:end="65:78"><name pos:start="65:75" pos:end="65:78"><name pos:start="65:75" pos:end="65:75">H</name><index pos:start="65:76" pos:end="65:78">[<expr pos:start="65:77" pos:end="65:77"><literal type="number" pos:start="65:77" pos:end="65:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="73:13" pos:end="73:55"><expr pos:start="73:13" pos:end="73:54"><name pos:start="73:13" pos:end="73:18">midoff</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <operator pos:start="73:22" pos:end="73:22">(</operator><ternary pos:start="73:23" pos:end="73:38"><condition pos:start="73:23" pos:end="73:27"><expr pos:start="73:23" pos:end="73:25"><name pos:start="73:23" pos:end="73:25">dir</name></expr> ?</condition><then pos:start="73:29" pos:end="73:34"> <expr pos:start="73:29" pos:end="73:34"><literal type="number" pos:start="73:29" pos:end="73:30">16</literal> <operator pos:start="73:32" pos:end="73:32">*</operator> <literal type="number" pos:start="73:34" pos:end="73:34">8</literal></expr> </then><else pos:start="73:36" pos:end="73:38">: <expr pos:start="73:38" pos:end="73:38"><literal type="number" pos:start="73:38" pos:end="73:38">8</literal></expr></else></ternary><operator pos:start="73:39" pos:end="73:39">)</operator> <operator pos:start="73:41" pos:end="73:41">*</operator> <name pos:start="73:43" pos:end="73:54">SIZEOF_PIXEL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:64"><expr pos:start="75:13" pos:end="75:63"><name pos:start="75:13" pos:end="75:26">midoff_aligned</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <operator pos:start="75:30" pos:end="75:30">(</operator><ternary pos:start="75:31" pos:end="75:47"><condition pos:start="75:31" pos:end="75:35"><expr pos:start="75:31" pos:end="75:33"><name pos:start="75:31" pos:end="75:33">dir</name></expr> ?</condition><then pos:start="75:37" pos:end="75:42"> <expr pos:start="75:37" pos:end="75:42"><literal type="number" pos:start="75:37" pos:end="75:38">16</literal> <operator pos:start="75:40" pos:end="75:40">*</operator> <literal type="number" pos:start="75:42" pos:end="75:42">8</literal></expr> </then><else pos:start="75:44" pos:end="75:47">: <expr pos:start="75:46" pos:end="75:47"><literal type="number" pos:start="75:46" pos:end="75:47">16</literal></expr></else></ternary><operator pos:start="75:48" pos:end="75:48">)</operator> <operator pos:start="75:50" pos:end="75:50">*</operator> <name pos:start="75:52" pos:end="75:63">SIZEOF_PIXEL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:42"><expr pos:start="79:13" pos:end="79:41"><name pos:start="79:13" pos:end="79:16">buf0</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:24">base0</name> <operator pos:start="79:26" pos:end="79:26">+</operator> <name pos:start="79:28" pos:end="79:41">midoff_aligned</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:42"><expr pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:16">buf1</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:24">base1</name> <operator pos:start="81:26" pos:end="81:26">+</operator> <name pos:start="81:28" pos:end="81:41">midoff_aligned</name></expr>;</expr_stmt>



            <comment type="line" pos:start="85:13" pos:end="85:35">// 16wd_16px loopfilter</comment>

            <if_stmt pos:start="87:13" pos:end="109:13"><if pos:start="87:13" pos:end="109:13">if <condition pos:start="87:16" pos:end="91:53">(<expr pos:start="87:17" pos:end="91:52"><call pos:start="87:17" pos:end="91:52"><name pos:start="87:17" pos:end="87:26">check_func</name><argument_list pos:start="87:27" pos:end="91:52">(<argument pos:start="87:28" pos:end="87:50"><expr pos:start="87:28" pos:end="87:50"><name pos:start="87:28" pos:end="87:50"><name pos:start="87:28" pos:end="87:30">dsp</name><operator pos:start="87:31" pos:end="87:31">.</operator><name pos:start="87:32" pos:end="87:45">loop_filter_16</name><index pos:start="87:46" pos:end="87:50">[<expr pos:start="87:47" pos:end="87:49"><name pos:start="87:47" pos:end="87:49">dir</name></expr>]</index></name></expr></argument>,

                           <argument pos:start="89:28" pos:end="89:59"><expr pos:start="89:28" pos:end="89:59"><literal type="string" pos:start="89:28" pos:end="89:59">"vp9_loop_filter_%s_16_16_%dbpp"</literal></expr></argument>,

                           <argument pos:start="91:28" pos:end="91:40"><expr pos:start="91:28" pos:end="91:40"><name pos:start="91:28" pos:end="91:40"><name pos:start="91:28" pos:end="91:35">dir_name</name><index pos:start="91:36" pos:end="91:40">[<expr pos:start="91:37" pos:end="91:39"><name pos:start="91:37" pos:end="91:39">dir</name></expr>]</index></name></expr></argument>, <argument pos:start="91:43" pos:end="91:51"><expr pos:start="91:43" pos:end="91:51"><name pos:start="91:43" pos:end="91:51">bit_depth</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:55" pos:end="109:13">{<block_content pos:start="93:17" pos:end="107:69">

                <expr_stmt pos:start="93:17" pos:end="93:44"><expr pos:start="93:17" pos:end="93:43"><call pos:start="93:17" pos:end="93:43"><name pos:start="93:17" pos:end="93:33">randomize_buffers</name><argument_list pos:start="93:34" pos:end="93:43">(<argument pos:start="93:35" pos:end="93:35"><expr pos:start="93:35" pos:end="93:35"><literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr></argument>, <argument pos:start="93:38" pos:end="93:38"><expr pos:start="93:38" pos:end="93:38"><literal type="number" pos:start="93:38" pos:end="93:38">0</literal></expr></argument>, <argument pos:start="93:41" pos:end="93:42"><expr pos:start="93:41" pos:end="93:42"><literal type="number" pos:start="93:41" pos:end="93:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:44"><expr pos:start="95:17" pos:end="95:43"><call pos:start="95:17" pos:end="95:43"><name pos:start="95:17" pos:end="95:33">randomize_buffers</name><argument_list pos:start="95:34" pos:end="95:43">(<argument pos:start="95:35" pos:end="95:35"><expr pos:start="95:35" pos:end="95:35"><literal type="number" pos:start="95:35" pos:end="95:35">0</literal></expr></argument>, <argument pos:start="95:38" pos:end="95:38"><expr pos:start="95:38" pos:end="95:38"><literal type="number" pos:start="95:38" pos:end="95:38">8</literal></expr></argument>, <argument pos:start="95:41" pos:end="95:42"><expr pos:start="95:41" pos:end="95:42"><literal type="number" pos:start="95:41" pos:end="95:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:77"><expr pos:start="97:17" pos:end="97:76"><call pos:start="97:17" pos:end="97:76"><name pos:start="97:17" pos:end="97:22">memcpy</name><argument_list pos:start="97:23" pos:end="97:76">(<argument pos:start="97:24" pos:end="97:36"><expr pos:start="97:24" pos:end="97:36"><name pos:start="97:24" pos:end="97:27">buf1</name> <operator pos:start="97:29" pos:end="97:29">-</operator> <name pos:start="97:31" pos:end="97:36">midoff</name></expr></argument>, <argument pos:start="97:39" pos:end="97:51"><expr pos:start="97:39" pos:end="97:51"><name pos:start="97:39" pos:end="97:42">buf0</name> <operator pos:start="97:44" pos:end="97:44">-</operator> <name pos:start="97:46" pos:end="97:51">midoff</name></expr></argument>, <argument pos:start="97:54" pos:end="97:75"><expr pos:start="97:54" pos:end="97:75"><literal type="number" pos:start="97:54" pos:end="97:55">16</literal> <operator pos:start="97:57" pos:end="97:57">*</operator> <literal type="number" pos:start="97:59" pos:end="97:60">16</literal> <operator pos:start="97:62" pos:end="97:62">*</operator> <name pos:start="97:64" pos:end="97:75">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:68"><expr pos:start="99:17" pos:end="99:67"><call pos:start="99:17" pos:end="99:67"><name pos:start="99:17" pos:end="99:24">call_ref</name><argument_list pos:start="99:25" pos:end="99:67">(<argument pos:start="99:26" pos:end="99:29"><expr pos:start="99:26" pos:end="99:29"><name pos:start="99:26" pos:end="99:29">buf0</name></expr></argument>, <argument pos:start="99:32" pos:end="99:48"><expr pos:start="99:32" pos:end="99:48"><literal type="number" pos:start="99:32" pos:end="99:33">16</literal> <operator pos:start="99:35" pos:end="99:35">*</operator> <name pos:start="99:37" pos:end="99:48">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="99:51" pos:end="99:54"><expr pos:start="99:51" pos:end="99:54"><name pos:start="99:51" pos:end="99:54"><name pos:start="99:51" pos:end="99:51">E</name><index pos:start="99:52" pos:end="99:54">[<expr pos:start="99:53" pos:end="99:53"><literal type="number" pos:start="99:53" pos:end="99:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:57" pos:end="99:60"><expr pos:start="99:57" pos:end="99:60"><name pos:start="99:57" pos:end="99:60"><name pos:start="99:57" pos:end="99:57">I</name><index pos:start="99:58" pos:end="99:60">[<expr pos:start="99:59" pos:end="99:59"><literal type="number" pos:start="99:59" pos:end="99:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:63" pos:end="99:66"><expr pos:start="99:63" pos:end="99:66"><name pos:start="99:63" pos:end="99:66"><name pos:start="99:63" pos:end="99:63">H</name><index pos:start="99:64" pos:end="99:66">[<expr pos:start="99:65" pos:end="99:65"><literal type="number" pos:start="99:65" pos:end="99:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:68"><expr pos:start="101:17" pos:end="101:67"><call pos:start="101:17" pos:end="101:67"><name pos:start="101:17" pos:end="101:24">call_new</name><argument_list pos:start="101:25" pos:end="101:67">(<argument pos:start="101:26" pos:end="101:29"><expr pos:start="101:26" pos:end="101:29"><name pos:start="101:26" pos:end="101:29">buf1</name></expr></argument>, <argument pos:start="101:32" pos:end="101:48"><expr pos:start="101:32" pos:end="101:48"><literal type="number" pos:start="101:32" pos:end="101:33">16</literal> <operator pos:start="101:35" pos:end="101:35">*</operator> <name pos:start="101:37" pos:end="101:48">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="101:51" pos:end="101:54"><expr pos:start="101:51" pos:end="101:54"><name pos:start="101:51" pos:end="101:54"><name pos:start="101:51" pos:end="101:51">E</name><index pos:start="101:52" pos:end="101:54">[<expr pos:start="101:53" pos:end="101:53"><literal type="number" pos:start="101:53" pos:end="101:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:57" pos:end="101:60"><expr pos:start="101:57" pos:end="101:60"><name pos:start="101:57" pos:end="101:60"><name pos:start="101:57" pos:end="101:57">I</name><index pos:start="101:58" pos:end="101:60">[<expr pos:start="101:59" pos:end="101:59"><literal type="number" pos:start="101:59" pos:end="101:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:63" pos:end="101:66"><expr pos:start="101:63" pos:end="101:66"><name pos:start="101:63" pos:end="101:66"><name pos:start="101:63" pos:end="101:63">H</name><index pos:start="101:64" pos:end="101:66">[<expr pos:start="101:65" pos:end="101:65"><literal type="number" pos:start="101:65" pos:end="101:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="105:27"><if pos:start="103:17" pos:end="105:27">if <condition pos:start="103:20" pos:end="103:81">(<expr pos:start="103:21" pos:end="103:80"><call pos:start="103:21" pos:end="103:80"><name pos:start="103:21" pos:end="103:26">memcmp</name><argument_list pos:start="103:27" pos:end="103:80">(<argument pos:start="103:28" pos:end="103:40"><expr pos:start="103:28" pos:end="103:40"><name pos:start="103:28" pos:end="103:31">buf0</name> <operator pos:start="103:33" pos:end="103:33">-</operator> <name pos:start="103:35" pos:end="103:40">midoff</name></expr></argument>, <argument pos:start="103:43" pos:end="103:55"><expr pos:start="103:43" pos:end="103:55"><name pos:start="103:43" pos:end="103:46">buf1</name> <operator pos:start="103:48" pos:end="103:48">-</operator> <name pos:start="103:50" pos:end="103:55">midoff</name></expr></argument>, <argument pos:start="103:58" pos:end="103:79"><expr pos:start="103:58" pos:end="103:79"><literal type="number" pos:start="103:58" pos:end="103:59">16</literal> <operator pos:start="103:61" pos:end="103:61">*</operator> <literal type="number" pos:start="103:63" pos:end="103:64">16</literal> <operator pos:start="103:66" pos:end="103:66">*</operator> <name pos:start="103:68" pos:end="103:79">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:27"><block_content pos:start="105:21" pos:end="105:27">

                    <expr_stmt pos:start="105:21" pos:end="105:27"><expr pos:start="105:21" pos:end="105:26"><call pos:start="105:21" pos:end="105:26"><name pos:start="105:21" pos:end="105:24">fail</name><argument_list pos:start="105:25" pos:end="105:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:69"><expr pos:start="107:17" pos:end="107:68"><call pos:start="107:17" pos:end="107:68"><name pos:start="107:17" pos:end="107:25">bench_new</name><argument_list pos:start="107:26" pos:end="107:68">(<argument pos:start="107:27" pos:end="107:30"><expr pos:start="107:27" pos:end="107:30"><name pos:start="107:27" pos:end="107:30">buf1</name></expr></argument>, <argument pos:start="107:33" pos:end="107:49"><expr pos:start="107:33" pos:end="107:49"><literal type="number" pos:start="107:33" pos:end="107:34">16</literal> <operator pos:start="107:36" pos:end="107:36">*</operator> <name pos:start="107:38" pos:end="107:49">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="107:52" pos:end="107:55"><expr pos:start="107:52" pos:end="107:55"><name pos:start="107:52" pos:end="107:55"><name pos:start="107:52" pos:end="107:52">E</name><index pos:start="107:53" pos:end="107:55">[<expr pos:start="107:54" pos:end="107:54"><literal type="number" pos:start="107:54" pos:end="107:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:58" pos:end="107:61"><expr pos:start="107:58" pos:end="107:61"><name pos:start="107:58" pos:end="107:61"><name pos:start="107:58" pos:end="107:58">I</name><index pos:start="107:59" pos:end="107:61">[<expr pos:start="107:60" pos:end="107:60"><literal type="number" pos:start="107:60" pos:end="107:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:64" pos:end="107:67"><expr pos:start="107:64" pos:end="107:67"><name pos:start="107:64" pos:end="107:67"><name pos:start="107:64" pos:end="107:64">H</name><index pos:start="107:65" pos:end="107:67">[<expr pos:start="107:66" pos:end="107:66"><literal type="number" pos:start="107:66" pos:end="107:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <for pos:start="113:13" pos:end="149:13">for <control pos:start="113:17" pos:end="113:38">(<init pos:start="113:18" pos:end="113:24"><expr pos:start="113:18" pos:end="113:23"><name pos:start="113:18" pos:end="113:19">wd</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <literal type="number" pos:start="113:23" pos:end="113:23">0</literal></expr>;</init> <condition pos:start="113:26" pos:end="113:32"><expr pos:start="113:26" pos:end="113:31"><name pos:start="113:26" pos:end="113:27">wd</name> <operator pos:start="113:29" pos:end="113:29">&lt;</operator> <literal type="number" pos:start="113:31" pos:end="113:31">2</literal></expr>;</condition> <incr pos:start="113:34" pos:end="113:37"><expr pos:start="113:34" pos:end="113:37"><name pos:start="113:34" pos:end="113:35">wd</name><operator pos:start="113:36" pos:end="113:37">++</operator></expr></incr>)</control> <block pos:start="113:40" pos:end="149:13">{<block_content pos:start="115:17" pos:end="147:17">

                <for pos:start="115:17" pos:end="147:17">for <control pos:start="115:21" pos:end="115:45">(<init pos:start="115:22" pos:end="115:29"><expr pos:start="115:22" pos:end="115:28"><name pos:start="115:22" pos:end="115:24">wd2</name> <operator pos:start="115:26" pos:end="115:26">=</operator> <literal type="number" pos:start="115:28" pos:end="115:28">0</literal></expr>;</init> <condition pos:start="115:31" pos:end="115:38"><expr pos:start="115:31" pos:end="115:37"><name pos:start="115:31" pos:end="115:33">wd2</name> <operator pos:start="115:35" pos:end="115:35">&lt;</operator> <literal type="number" pos:start="115:37" pos:end="115:37">2</literal></expr>;</condition> <incr pos:start="115:40" pos:end="115:44"><expr pos:start="115:40" pos:end="115:44"><name pos:start="115:40" pos:end="115:42">wd2</name><operator pos:start="115:43" pos:end="115:44">++</operator></expr></incr>)</control> <block pos:start="115:47" pos:end="147:17">{<block_content pos:start="119:21" pos:end="145:21">

                    <comment type="line" pos:start="117:21" pos:end="117:38">// mix2 loopfilter</comment>

                    <if_stmt pos:start="119:21" pos:end="145:21"><if pos:start="119:21" pos:end="145:21">if <condition pos:start="119:24" pos:end="123:80">(<expr pos:start="119:25" pos:end="123:79"><call pos:start="119:25" pos:end="123:79"><name pos:start="119:25" pos:end="119:34">check_func</name><argument_list pos:start="119:35" pos:end="123:79">(<argument pos:start="119:36" pos:end="119:69"><expr pos:start="119:36" pos:end="119:69"><name pos:start="119:36" pos:end="119:69"><name pos:start="119:36" pos:end="119:38">dsp</name><operator pos:start="119:39" pos:end="119:39">.</operator><name pos:start="119:40" pos:end="119:55">loop_filter_mix2</name><index pos:start="119:56" pos:end="119:59">[<expr pos:start="119:57" pos:end="119:58"><name pos:start="119:57" pos:end="119:58">wd</name></expr>]</index><index pos:start="119:60" pos:end="119:64">[<expr pos:start="119:61" pos:end="119:63"><name pos:start="119:61" pos:end="119:63">wd2</name></expr>]</index><index pos:start="119:65" pos:end="119:69">[<expr pos:start="119:66" pos:end="119:68"><name pos:start="119:66" pos:end="119:68">dir</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="121:36" pos:end="121:74"><expr pos:start="121:36" pos:end="121:74"><literal type="string" pos:start="121:36" pos:end="121:74">"vp9_loop_filter_mix2_%s_%d%d_16_%dbpp"</literal></expr></argument>,

                                   <argument pos:start="123:36" pos:end="123:48"><expr pos:start="123:36" pos:end="123:48"><name pos:start="123:36" pos:end="123:48"><name pos:start="123:36" pos:end="123:43">dir_name</name><index pos:start="123:44" pos:end="123:48">[<expr pos:start="123:45" pos:end="123:47"><name pos:start="123:45" pos:end="123:47">dir</name></expr>]</index></name></expr></argument>, <argument pos:start="123:51" pos:end="123:57"><expr pos:start="123:51" pos:end="123:57"><literal type="number" pos:start="123:51" pos:end="123:51">4</literal> <operator pos:start="123:53" pos:end="123:54">&lt;&lt;</operator> <name pos:start="123:56" pos:end="123:57">wd</name></expr></argument>, <argument pos:start="123:60" pos:end="123:67"><expr pos:start="123:60" pos:end="123:67"><literal type="number" pos:start="123:60" pos:end="123:60">4</literal> <operator pos:start="123:62" pos:end="123:63">&lt;&lt;</operator> <name pos:start="123:65" pos:end="123:67">wd2</name></expr></argument>, <argument pos:start="123:70" pos:end="123:78"><expr pos:start="123:70" pos:end="123:78"><name pos:start="123:70" pos:end="123:78">bit_depth</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:82" pos:end="145:21">{<block_content pos:start="125:25" pos:end="144:0">

                        <expr_stmt pos:start="125:25" pos:end="125:52"><expr pos:start="125:25" pos:end="125:51"><call pos:start="125:25" pos:end="125:51"><name pos:start="125:25" pos:end="125:41">randomize_buffers</name><argument_list pos:start="125:42" pos:end="125:51">(<argument pos:start="125:43" pos:end="125:43"><expr pos:start="125:43" pos:end="125:43"><literal type="number" pos:start="125:43" pos:end="125:43">0</literal></expr></argument>, <argument pos:start="125:46" pos:end="125:46"><expr pos:start="125:46" pos:end="125:46"><literal type="number" pos:start="125:46" pos:end="125:46">0</literal></expr></argument>, <argument pos:start="125:49" pos:end="125:50"><expr pos:start="125:49" pos:end="125:50"><literal type="number" pos:start="125:49" pos:end="125:50">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="127:25" pos:end="127:52"><expr pos:start="127:25" pos:end="127:51"><call pos:start="127:25" pos:end="127:51"><name pos:start="127:25" pos:end="127:41">randomize_buffers</name><argument_list pos:start="127:42" pos:end="127:51">(<argument pos:start="127:43" pos:end="127:43"><expr pos:start="127:43" pos:end="127:43"><literal type="number" pos:start="127:43" pos:end="127:43">1</literal></expr></argument>, <argument pos:start="127:46" pos:end="127:46"><expr pos:start="127:46" pos:end="127:46"><literal type="number" pos:start="127:46" pos:end="127:46">8</literal></expr></argument>, <argument pos:start="127:49" pos:end="127:50"><expr pos:start="127:49" pos:end="127:50"><literal type="number" pos:start="127:49" pos:end="127:50">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="129:25" pos:end="132:0"><expr pos:start="129:25" pos:end="129:84"><call pos:start="129:25" pos:end="129:84"><name pos:start="129:25" pos:end="129:30">memcpy</name><argument_list pos:start="129:31" pos:end="129:84">(<argument pos:start="129:32" pos:end="129:44"><expr pos:start="129:32" pos:end="129:44"><name pos:start="129:32" pos:end="129:35">buf1</name> <operator pos:start="129:37" pos:end="129:37">-</operator> <name pos:start="129:39" pos:end="129:44">midoff</name></expr></argument>, <argument pos:start="129:47" pos:end="129:59"><expr pos:start="129:47" pos:end="129:59"><name pos:start="129:47" pos:end="129:50">buf0</name> <operator pos:start="129:52" pos:end="129:52">-</operator> <name pos:start="129:54" pos:end="129:59">midoff</name></expr></argument>, <argument pos:start="129:62" pos:end="129:83"><expr pos:start="129:62" pos:end="129:83"><literal type="number" pos:start="129:62" pos:end="129:63">16</literal> <operator pos:start="129:65" pos:end="129:65">*</operator> <literal type="number" pos:start="129:67" pos:end="129:68">16</literal> <operator pos:start="129:70" pos:end="129:70">*</operator> <name pos:start="129:72" pos:end="129:83">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define pos:start="131:1" pos:end="131:37">#<cpp:directive pos:start="131:2" pos:end="131:7">define</cpp:directive> <cpp:macro pos:start="131:9" pos:end="131:12"><name pos:start="131:9" pos:end="131:9">M</name><parameter_list pos:start="131:10" pos:end="131:12">(<parameter pos:start="131:11" pos:end="131:11"><type pos:start="131:11" pos:end="131:11"><name pos:start="131:11" pos:end="131:11">a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="131:14" pos:end="131:37">(((a)[1] &lt;&lt; 8) | (a)[0])</cpp:value></cpp:define>

                        <expr_stmt pos:start="133:25" pos:end="133:76"><expr pos:start="133:25" pos:end="133:75"><call pos:start="133:25" pos:end="133:75"><name pos:start="133:25" pos:end="133:32">call_ref</name><argument_list pos:start="133:33" pos:end="133:75">(<argument pos:start="133:34" pos:end="133:37"><expr pos:start="133:34" pos:end="133:37"><name pos:start="133:34" pos:end="133:37">buf0</name></expr></argument>, <argument pos:start="133:40" pos:end="133:56"><expr pos:start="133:40" pos:end="133:56"><literal type="number" pos:start="133:40" pos:end="133:41">16</literal> <operator pos:start="133:43" pos:end="133:43">*</operator> <name pos:start="133:45" pos:end="133:56">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="133:59" pos:end="133:62"><expr pos:start="133:59" pos:end="133:62"><call pos:start="133:59" pos:end="133:62"><name pos:start="133:59" pos:end="133:59">M</name><argument_list pos:start="133:60" pos:end="133:62">(<argument pos:start="133:61" pos:end="133:61"><expr pos:start="133:61" pos:end="133:61"><name pos:start="133:61" pos:end="133:61">E</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:65" pos:end="133:68"><expr pos:start="133:65" pos:end="133:68"><call pos:start="133:65" pos:end="133:68"><name pos:start="133:65" pos:end="133:65">M</name><argument_list pos:start="133:66" pos:end="133:68">(<argument pos:start="133:67" pos:end="133:67"><expr pos:start="133:67" pos:end="133:67"><name pos:start="133:67" pos:end="133:67">I</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:71" pos:end="133:74"><expr pos:start="133:71" pos:end="133:74"><call pos:start="133:71" pos:end="133:74"><name pos:start="133:71" pos:end="133:71">M</name><argument_list pos:start="133:72" pos:end="133:74">(<argument pos:start="133:73" pos:end="133:73"><expr pos:start="133:73" pos:end="133:73"><name pos:start="133:73" pos:end="133:73">H</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:76"><expr pos:start="135:25" pos:end="135:75"><call pos:start="135:25" pos:end="135:75"><name pos:start="135:25" pos:end="135:32">call_new</name><argument_list pos:start="135:33" pos:end="135:75">(<argument pos:start="135:34" pos:end="135:37"><expr pos:start="135:34" pos:end="135:37"><name pos:start="135:34" pos:end="135:37">buf1</name></expr></argument>, <argument pos:start="135:40" pos:end="135:56"><expr pos:start="135:40" pos:end="135:56"><literal type="number" pos:start="135:40" pos:end="135:41">16</literal> <operator pos:start="135:43" pos:end="135:43">*</operator> <name pos:start="135:45" pos:end="135:56">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="135:59" pos:end="135:62"><expr pos:start="135:59" pos:end="135:62"><call pos:start="135:59" pos:end="135:62"><name pos:start="135:59" pos:end="135:59">M</name><argument_list pos:start="135:60" pos:end="135:62">(<argument pos:start="135:61" pos:end="135:61"><expr pos:start="135:61" pos:end="135:61"><name pos:start="135:61" pos:end="135:61">E</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:65" pos:end="135:68"><expr pos:start="135:65" pos:end="135:68"><call pos:start="135:65" pos:end="135:68"><name pos:start="135:65" pos:end="135:65">M</name><argument_list pos:start="135:66" pos:end="135:68">(<argument pos:start="135:67" pos:end="135:67"><expr pos:start="135:67" pos:end="135:67"><name pos:start="135:67" pos:end="135:67">I</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:71" pos:end="135:74"><expr pos:start="135:71" pos:end="135:74"><call pos:start="135:71" pos:end="135:74"><name pos:start="135:71" pos:end="135:71">M</name><argument_list pos:start="135:72" pos:end="135:74">(<argument pos:start="135:73" pos:end="135:73"><expr pos:start="135:73" pos:end="135:73"><name pos:start="135:73" pos:end="135:73">H</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="137:25" pos:end="139:35"><if pos:start="137:25" pos:end="139:35">if <condition pos:start="137:28" pos:end="137:89">(<expr pos:start="137:29" pos:end="137:88"><call pos:start="137:29" pos:end="137:88"><name pos:start="137:29" pos:end="137:34">memcmp</name><argument_list pos:start="137:35" pos:end="137:88">(<argument pos:start="137:36" pos:end="137:48"><expr pos:start="137:36" pos:end="137:48"><name pos:start="137:36" pos:end="137:39">buf0</name> <operator pos:start="137:41" pos:end="137:41">-</operator> <name pos:start="137:43" pos:end="137:48">midoff</name></expr></argument>, <argument pos:start="137:51" pos:end="137:63"><expr pos:start="137:51" pos:end="137:63"><name pos:start="137:51" pos:end="137:54">buf1</name> <operator pos:start="137:56" pos:end="137:56">-</operator> <name pos:start="137:58" pos:end="137:63">midoff</name></expr></argument>, <argument pos:start="137:66" pos:end="137:87"><expr pos:start="137:66" pos:end="137:87"><literal type="number" pos:start="137:66" pos:end="137:67">16</literal> <operator pos:start="137:69" pos:end="137:69">*</operator> <literal type="number" pos:start="137:71" pos:end="137:72">16</literal> <operator pos:start="137:74" pos:end="137:74">*</operator> <name pos:start="137:76" pos:end="137:87">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:29" pos:end="139:35"><block_content pos:start="139:29" pos:end="139:35">

                            <expr_stmt pos:start="139:29" pos:end="139:35"><expr pos:start="139:29" pos:end="139:34"><call pos:start="139:29" pos:end="139:34"><name pos:start="139:29" pos:end="139:32">fail</name><argument_list pos:start="139:33" pos:end="139:34">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="141:25" pos:end="144:0"><expr pos:start="141:25" pos:end="141:76"><call pos:start="141:25" pos:end="141:76"><name pos:start="141:25" pos:end="141:33">bench_new</name><argument_list pos:start="141:34" pos:end="141:76">(<argument pos:start="141:35" pos:end="141:38"><expr pos:start="141:35" pos:end="141:38"><name pos:start="141:35" pos:end="141:38">buf1</name></expr></argument>, <argument pos:start="141:41" pos:end="141:57"><expr pos:start="141:41" pos:end="141:57"><literal type="number" pos:start="141:41" pos:end="141:42">16</literal> <operator pos:start="141:44" pos:end="141:44">*</operator> <name pos:start="141:46" pos:end="141:57">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="141:60" pos:end="141:63"><expr pos:start="141:60" pos:end="141:63"><call pos:start="141:60" pos:end="141:63"><name pos:start="141:60" pos:end="141:60">M</name><argument_list pos:start="141:61" pos:end="141:63">(<argument pos:start="141:62" pos:end="141:62"><expr pos:start="141:62" pos:end="141:62"><name pos:start="141:62" pos:end="141:62">E</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:66" pos:end="141:69"><expr pos:start="141:66" pos:end="141:69"><call pos:start="141:66" pos:end="141:69"><name pos:start="141:66" pos:end="141:66">M</name><argument_list pos:start="141:67" pos:end="141:69">(<argument pos:start="141:68" pos:end="141:68"><expr pos:start="141:68" pos:end="141:68"><name pos:start="141:68" pos:end="141:68">I</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:72" pos:end="141:75"><expr pos:start="141:72" pos:end="141:75"><call pos:start="141:72" pos:end="141:75"><name pos:start="141:72" pos:end="141:72">M</name><argument_list pos:start="141:73" pos:end="141:75">(<argument pos:start="141:74" pos:end="141:74"><expr pos:start="141:74" pos:end="141:74"><name pos:start="141:74" pos:end="141:74">H</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="143:1" pos:end="143:8">#<cpp:directive pos:start="143:2" pos:end="143:6">undef</cpp:directive> <name pos:start="143:8" pos:end="143:8">M</name></cpp:undef>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="155:5" pos:end="155:25"><expr pos:start="155:5" pos:end="155:24"><call pos:start="155:5" pos:end="155:24"><name pos:start="155:5" pos:end="155:10">report</name><argument_list pos:start="155:11" pos:end="155:24">(<argument pos:start="155:12" pos:end="155:23"><expr pos:start="155:12" pos:end="155:23"><literal type="string" pos:start="155:12" pos:end="155:23">"loopfilter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
