<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8919.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">av_interleave_packet_per_dts</name><parameter_list pos:start="1:33" pos:end="1:93">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">out</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:81"><decl pos:start="1:69" pos:end="1:81"><type pos:start="1:69" pos:end="1:81"><name pos:start="1:69" pos:end="1:76">AVPacket</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:81">pkt</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:92"><decl pos:start="1:84" pos:end="1:92"><type pos:start="1:84" pos:end="1:92"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:92">flush</name></decl></parameter>)</parameter_list><block pos:start="1:94" pos:end="103:1">{<block_content pos:start="3:5" pos:end="101:5">

    <decl_stmt pos:start="3:5" pos:end="3:49"><decl pos:start="3:5" pos:end="3:22"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:16">AVPacketList</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:22">pktl</name></decl>, <decl pos:start="3:25" pos:end="3:36"><type ref="prev" pos:start="3:5" pos:end="3:18"><modifier pos:start="3:25" pos:end="3:25">*</modifier><modifier pos:start="3:26" pos:end="3:26">*</modifier></type><name pos:start="3:27" pos:end="3:36">next_point</name></decl>, <decl pos:start="3:39" pos:end="3:48"><type ref="prev" pos:start="3:5" pos:end="3:18"><modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:48">this_pktl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:20">stream_count</name><init pos:start="5:21" pos:end="5:22">=<expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:15">streams</name><index pos:start="7:16" pos:end="7:28">[<expr pos:start="7:17" pos:end="7:27"><name pos:start="7:17" pos:end="7:27">MAX_STREAMS</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="57:5"><if pos:start="11:5" pos:end="57:5">if<condition pos:start="11:7" pos:end="11:11">(<expr pos:start="11:8" pos:end="11:10"><name pos:start="11:8" pos:end="11:10">pkt</name></expr>)</condition><block pos:start="11:12" pos:end="57:5">{<block_content pos:start="13:9" pos:end="55:31">

        <decl_stmt pos:start="13:9" pos:end="13:53"><decl pos:start="13:9" pos:end="13:52"><type pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:16">AVStream</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">st</name><init pos:start="13:21" pos:end="13:52">= <expr pos:start="13:23" pos:end="13:52"><name pos:start="13:23" pos:end="13:52"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:32">streams</name><index pos:start="13:33" pos:end="13:52">[ <expr pos:start="13:35" pos:end="13:51"><name pos:start="13:35" pos:end="13:51"><name pos:start="13:35" pos:end="13:37">pkt</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:51">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



<comment type="line" pos:start="17:1" pos:end="17:62">//        assert(pkt-&gt;destruct != av_destruct_packet); //FIXME</comment>



        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:17">this_pktl</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:52"><name pos:start="21:21" pos:end="21:30">av_mallocz</name><argument_list pos:start="21:31" pos:end="21:52">(<argument pos:start="21:32" pos:end="21:51"><expr pos:start="21:32" pos:end="21:51"><sizeof pos:start="21:32" pos:end="21:51">sizeof<argument_list pos:start="21:38" pos:end="21:51">(<argument pos:start="21:39" pos:end="21:50"><expr pos:start="21:39" pos:end="21:50"><name pos:start="21:39" pos:end="21:50">AVPacketList</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:17">this_pktl</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">pkt</name></name><operator pos:start="23:23" pos:end="23:23">=</operator> <operator pos:start="23:25" pos:end="23:25">*</operator><name pos:start="23:26" pos:end="23:28">pkt</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:43"><if pos:start="25:9" pos:end="27:32">if<condition pos:start="25:11" pos:end="25:47">(<expr pos:start="25:12" pos:end="25:46"><name pos:start="25:12" pos:end="25:24"><name pos:start="25:12" pos:end="25:14">pkt</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:24">destruct</name></name> <operator pos:start="25:26" pos:end="25:27">==</operator> <name pos:start="25:29" pos:end="25:46">av_destruct_packet</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:32"><block_content pos:start="27:13" pos:end="27:32">

            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:15">pkt</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:25">destruct</name></name><operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:31">NULL</name></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="27:34" pos:end="27:85">// not shared -&gt; must keep original from being freed</comment>

        <else pos:start="29:9" pos:end="31:43">else<block type="pseudo" pos:start="31:13" pos:end="31:43"><block_content pos:start="31:13" pos:end="31:43">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><call pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:25">av_dup_packet</name><argument_list pos:start="31:26" pos:end="31:42">(<argument pos:start="31:27" pos:end="31:41"><expr pos:start="31:27" pos:end="31:41"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:36">this_pktl</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:41">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>  <comment type="line" pos:start="31:46" pos:end="31:65">//shared -&gt; must dup</comment>



        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:18">next_point</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:38"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:38">packet_buffer</name></name></expr>;</expr_stmt>

        <while pos:start="37:9" pos:end="51:9">while<condition pos:start="37:14" pos:end="37:26">(<expr pos:start="37:15" pos:end="37:25"><operator pos:start="37:15" pos:end="37:15">*</operator><name pos:start="37:16" pos:end="37:25">next_point</name></expr>)</condition><block pos:start="37:27" pos:end="51:9">{<block_content pos:start="39:13" pos:end="49:45">

            <decl_stmt pos:start="39:13" pos:end="39:72"><decl pos:start="39:13" pos:end="39:71"><type pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:20">AVStream</name> <modifier pos:start="39:22" pos:end="39:22">*</modifier></type><name pos:start="39:23" pos:end="39:25">st2</name><init pos:start="39:26" pos:end="39:71">= <expr pos:start="39:28" pos:end="39:71"><name pos:start="39:28" pos:end="39:71"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:37">streams</name><index pos:start="39:38" pos:end="39:71">[ <expr pos:start="39:40" pos:end="39:70"><name pos:start="39:40" pos:end="39:70"><operator pos:start="39:40" pos:end="39:40">(</operator><operator pos:start="39:41" pos:end="39:41">*</operator><name pos:start="39:42" pos:end="39:51">next_point</name><operator pos:start="39:52" pos:end="39:52">)</operator><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:70"><name pos:start="39:55" pos:end="39:57">pkt</name><operator pos:start="39:58" pos:end="39:58">.</operator><name pos:start="39:59" pos:end="39:70">stream_index</name></name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:76"><decl pos:start="41:13" pos:end="41:75"><type pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:19">int64_t</name></type> <name pos:start="41:21" pos:end="41:24">left</name><init pos:start="41:25" pos:end="41:75">=  <expr pos:start="41:28" pos:end="41:75"><name pos:start="41:28" pos:end="41:45"><name pos:start="41:28" pos:end="41:30">st2</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:41">time_base</name><operator pos:start="41:42" pos:end="41:42">.</operator><name pos:start="41:43" pos:end="41:45">num</name></name> <operator pos:start="41:47" pos:end="41:47">*</operator> <operator pos:start="41:49" pos:end="41:49">(</operator><name pos:start="41:50" pos:end="41:56">int64_t</name><operator pos:start="41:57" pos:end="41:57">)</operator><name pos:start="41:58" pos:end="41:75"><name pos:start="41:58" pos:end="41:59">st</name> <operator pos:start="41:61" pos:end="41:62">-&gt;</operator><name pos:start="41:63" pos:end="41:71">time_base</name><operator pos:start="41:72" pos:end="41:72">.</operator><name pos:start="41:73" pos:end="41:75">den</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:76"><decl pos:start="43:13" pos:end="43:75"><type pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:19">int64_t</name></type> <name pos:start="43:21" pos:end="43:25">right</name><init pos:start="43:26" pos:end="43:75">= <expr pos:start="43:28" pos:end="43:75"><name pos:start="43:28" pos:end="43:45"><name pos:start="43:28" pos:end="43:29">st</name> <operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:41">time_base</name><operator pos:start="43:42" pos:end="43:42">.</operator><name pos:start="43:43" pos:end="43:45">num</name></name> <operator pos:start="43:47" pos:end="43:47">*</operator> <operator pos:start="43:49" pos:end="43:49">(</operator><name pos:start="43:50" pos:end="43:56">int64_t</name><operator pos:start="43:57" pos:end="43:57">)</operator><name pos:start="43:58" pos:end="43:75"><name pos:start="43:58" pos:end="43:60">st2</name><operator pos:start="43:61" pos:end="43:62">-&gt;</operator><name pos:start="43:63" pos:end="43:71">time_base</name><operator pos:start="43:72" pos:end="43:72">.</operator><name pos:start="43:73" pos:end="43:75">den</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="45:13" pos:end="47:22"><if pos:start="45:13" pos:end="47:22">if<condition pos:start="45:15" pos:end="45:64">(<expr pos:start="45:16" pos:end="45:63"><name pos:start="45:16" pos:end="45:37"><operator pos:start="45:16" pos:end="45:16">(</operator><operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:27">next_point</name><operator pos:start="45:28" pos:end="45:28">)</operator><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:33">pkt</name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:37">dts</name></name></name> <operator pos:start="45:39" pos:end="45:39">*</operator> <name pos:start="45:41" pos:end="45:44">left</name> <operator pos:start="45:46" pos:end="45:46">&gt;</operator> <name pos:start="45:48" pos:end="45:55"><name pos:start="45:48" pos:end="45:50">pkt</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:55">dts</name></name> <operator pos:start="45:57" pos:end="45:57">*</operator> <name pos:start="45:59" pos:end="45:63">right</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:22"><block_content pos:start="47:17" pos:end="47:22"> <comment type="line" pos:start="45:66" pos:end="45:90">//FIXME this can overflow</comment>

                <break pos:start="47:17" pos:end="47:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:45"><expr pos:start="49:13" pos:end="49:44"><name pos:start="49:13" pos:end="49:22">next_point</name><operator pos:start="49:23" pos:end="49:23">=</operator> <operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:44"><operator pos:start="49:26" pos:end="49:26">(</operator><operator pos:start="49:27" pos:end="49:27">*</operator><name pos:start="49:28" pos:end="49:37">next_point</name><operator pos:start="49:38" pos:end="49:38">)</operator><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:44">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:17">this_pktl</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:23">next</name></name><operator pos:start="53:24" pos:end="53:24">=</operator> <operator pos:start="53:26" pos:end="53:26">*</operator><name pos:start="53:27" pos:end="53:36">next_point</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:19">next_point</name><operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:30">this_pktl</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:40"><expr pos:start="61:5" pos:end="61:39"><call pos:start="61:5" pos:end="61:39"><name pos:start="61:5" pos:end="61:10">memset</name><argument_list pos:start="61:11" pos:end="61:39">(<argument pos:start="61:12" pos:end="61:18"><expr pos:start="61:12" pos:end="61:18"><name pos:start="61:12" pos:end="61:18">streams</name></expr></argument>, <argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr></argument>, <argument pos:start="61:24" pos:end="61:38"><expr pos:start="61:24" pos:end="61:38"><sizeof pos:start="61:24" pos:end="61:38">sizeof<argument_list pos:start="61:30" pos:end="61:38">(<argument pos:start="61:31" pos:end="61:37"><expr pos:start="61:31" pos:end="61:37"><name pos:start="61:31" pos:end="61:37">streams</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:8">pktl</name><operator pos:start="63:9" pos:end="63:9">=</operator> <name pos:start="63:11" pos:end="63:26"><name pos:start="63:11" pos:end="63:11">s</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:26">packet_buffer</name></name></expr>;</expr_stmt>

    <while pos:start="65:5" pos:end="77:5">while<condition pos:start="65:10" pos:end="65:15">(<expr pos:start="65:11" pos:end="65:14"><name pos:start="65:11" pos:end="65:14">pktl</name></expr>)</condition><block pos:start="65:16" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:25">

<comment type="line" pos:start="67:1" pos:end="67:95">//av_log(s, AV_LOG_DEBUG, "show st:%d dts:%"PRId64"\n", pktl-&gt;pkt.stream_index, pktl-&gt;pkt.dts);</comment>

        <if_stmt pos:start="69:9" pos:end="71:27"><if pos:start="69:9" pos:end="71:27">if<condition pos:start="69:11" pos:end="69:50">(<expr pos:start="69:12" pos:end="69:49"><name pos:start="69:12" pos:end="69:44"><name pos:start="69:12" pos:end="69:18">streams</name><index pos:start="69:19" pos:end="69:44">[ <expr pos:start="69:21" pos:end="69:42"><name pos:start="69:21" pos:end="69:42"><name pos:start="69:21" pos:end="69:24">pktl</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:29">pkt</name><operator pos:start="69:30" pos:end="69:30">.</operator><name pos:start="69:31" pos:end="69:42">stream_index</name></name></expr> ]</index></name> <operator pos:start="69:46" pos:end="69:47">==</operator> <literal type="number" pos:start="69:49" pos:end="69:49">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:27"><block_content pos:start="71:13" pos:end="71:27">

            <expr_stmt pos:start="71:13" pos:end="71:27"><expr pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:24">stream_count</name><operator pos:start="71:25" pos:end="71:26">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:15">streams</name><index pos:start="73:16" pos:end="73:41">[ <expr pos:start="73:18" pos:end="73:39"><name pos:start="73:18" pos:end="73:39"><name pos:start="73:18" pos:end="73:21">pktl</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:26">pkt</name><operator pos:start="73:27" pos:end="73:27">.</operator><name pos:start="73:28" pos:end="73:39">stream_index</name></name></expr> ]</index></name><operator pos:start="73:42" pos:end="73:43">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:12">pktl</name><operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:24"><name pos:start="75:15" pos:end="75:18">pktl</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:24">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="81:5" pos:end="101:5"><if pos:start="81:5" pos:end="95:5">if<condition pos:start="81:7" pos:end="81:64">(<expr pos:start="81:8" pos:end="81:63"><name pos:start="81:8" pos:end="81:20"><name pos:start="81:8" pos:end="81:8">s</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:20">nb_streams</name></name> <operator pos:start="81:22" pos:end="81:23">==</operator> <name pos:start="81:25" pos:end="81:36">stream_count</name> <operator pos:start="81:38" pos:end="81:39">||</operator> <operator pos:start="81:41" pos:end="81:41">(</operator><name pos:start="81:42" pos:end="81:46">flush</name> <operator pos:start="81:48" pos:end="81:49">&amp;&amp;</operator> <name pos:start="81:51" pos:end="81:62">stream_count</name><operator pos:start="81:63" pos:end="81:63">)</operator></expr>)</condition><block pos:start="81:65" pos:end="95:5">{<block_content pos:start="83:9" pos:end="93:17">

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:12">pktl</name><operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:30"><name pos:start="83:15" pos:end="83:15">s</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:30">packet_buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:24"><expr pos:start="85:9" pos:end="85:23"><operator pos:start="85:9" pos:end="85:9">*</operator><name pos:start="85:10" pos:end="85:12">out</name><operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:23"><name pos:start="85:15" pos:end="85:18">pktl</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:23">pkt</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:37"><expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:24">packet_buffer</name></name><operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:36"><name pos:start="89:27" pos:end="89:30">pktl</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:36">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:24"><expr pos:start="91:9" pos:end="91:23"><call pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:16">av_freep</name><argument_list pos:start="91:17" pos:end="91:23">(<argument pos:start="91:18" pos:end="91:22"><expr pos:start="91:18" pos:end="91:22"><operator pos:start="91:18" pos:end="91:18">&amp;</operator><name pos:start="91:19" pos:end="91:22">pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:17">return <expr pos:start="93:16" pos:end="93:16"><literal type="number" pos:start="93:16" pos:end="93:16">1</literal></expr>;</return>

    </block_content>}</block></if><else pos:start="95:6" pos:end="101:5">else<block pos:start="95:10" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:17">

        <expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><call pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:22">av_init_packet</name><argument_list pos:start="97:23" pos:end="97:27">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:17">return <expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
