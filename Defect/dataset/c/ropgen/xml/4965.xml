<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4965.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">ftp_status</name><parameter_list pos:start="1:22" pos:end="1:77">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">FTPContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier><modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">line</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:76"><decl pos:start="1:51" pos:end="1:76"><type pos:start="1:51" pos:end="1:74"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:76"><name pos:start="1:61" pos:end="1:74">response_codes</name><index pos:start="1:75" pos:end="1:76">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:18">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>, <decl pos:start="5:17" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:22">result</name> <init pos:start="5:24" pos:end="5:26">= <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr></init></decl>, <decl pos:start="5:29" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:43">pref_code_found</name> <init pos:start="5:45" pos:end="5:47">= <expr pos:start="5:47" pos:end="5:47"><literal type="number" pos:start="5:47" pos:end="5:47">0</literal></expr></init></decl>, <decl pos:start="5:50" pos:end="5:65"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:50" pos:end="5:59">wait_count</name> <init pos:start="5:61" pos:end="5:65">= <expr pos:start="5:63" pos:end="5:65"><literal type="number" pos:start="5:63" pos:end="5:65">100</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:33"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:33">[<expr pos:start="7:14" pos:end="7:32"><name pos:start="7:14" pos:end="7:32">CONTROL_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:27">/* Set blocking mode */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:30">conn_control_block_flag</name></name> <operator pos:start="13:32" pos:end="13:32">=</operator> <literal type="number" pos:start="13:34" pos:end="13:34">0</literal></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="89:5">for <control pos:start="15:9" pos:end="15:12">(<init pos:start="15:10" pos:end="15:10">;</init><condition pos:start="15:11" pos:end="15:11">;</condition><incr/>)</control> <block pos:start="15:14" pos:end="89:5">{<block_content pos:start="17:9" pos:end="87:9">

        <if_stmt pos:start="17:9" pos:end="33:9"><if pos:start="17:9" pos:end="33:9">if <condition pos:start="17:12" pos:end="17:58">(<expr pos:start="17:13" pos:end="17:57"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:16">err</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:52"><name pos:start="17:20" pos:end="17:31">ftp_get_line</name><argument_list pos:start="17:32" pos:end="17:52">(<argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><name pos:start="17:33" pos:end="17:33">s</name></expr></argument>, <argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">buf</name></expr></argument>, <argument pos:start="17:41" pos:end="17:51"><expr pos:start="17:41" pos:end="17:51"><sizeof pos:start="17:41" pos:end="17:51">sizeof<argument_list pos:start="17:47" pos:end="17:51">(<argument pos:start="17:48" pos:end="17:50"><expr pos:start="17:48" pos:end="17:50"><name pos:start="17:48" pos:end="17:50">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="17:53" pos:end="17:53">)</operator> <operator pos:start="17:55" pos:end="17:55">&lt;</operator> <literal type="number" pos:start="17:57" pos:end="17:57">0</literal></expr>)</condition> <block pos:start="17:60" pos:end="33:9">{<block_content pos:start="19:13" pos:end="31:26">

            <if_stmt pos:start="19:13" pos:end="29:13"><if pos:start="19:13" pos:end="29:13">if <condition pos:start="19:16" pos:end="19:36">(<expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:19">err</name> <operator pos:start="19:21" pos:end="19:22">==</operator> <name pos:start="19:24" pos:end="19:35">AVERROR_EXIT</name></expr>)</condition> <block pos:start="19:38" pos:end="29:13">{<block_content pos:start="21:17" pos:end="27:17">

                <if_stmt pos:start="21:17" pos:end="27:17"><if pos:start="21:17" pos:end="27:17">if <condition pos:start="21:20" pos:end="21:53">(<expr pos:start="21:21" pos:end="21:52"><operator pos:start="21:21" pos:end="21:21">!</operator><name pos:start="21:22" pos:end="21:36">pref_code_found</name> <operator pos:start="21:38" pos:end="21:39">&amp;&amp;</operator> <name pos:start="21:41" pos:end="21:50">wait_count</name><operator pos:start="21:51" pos:end="21:52">--</operator></expr>)</condition> <block pos:start="21:55" pos:end="27:17">{<block_content pos:start="23:21" pos:end="25:29">

                    <expr_stmt pos:start="23:21" pos:end="23:37"><expr pos:start="23:21" pos:end="23:36"><call pos:start="23:21" pos:end="23:36"><name pos:start="23:21" pos:end="23:29">av_usleep</name><argument_list pos:start="23:30" pos:end="23:36">(<argument pos:start="23:31" pos:end="23:35"><expr pos:start="23:31" pos:end="23:35"><literal type="number" pos:start="23:31" pos:end="23:35">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="25:21" pos:end="25:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="31:13" pos:end="31:26">return <expr pos:start="31:20" pos:end="31:25"><name pos:start="31:20" pos:end="31:25">result</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><call pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:44">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>, <argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:33" pos:end="37:38"><expr pos:start="37:33" pos:end="37:38"><literal type="string" pos:start="37:33" pos:end="37:38">"%s\n"</literal></expr></argument>, <argument pos:start="37:41" pos:end="37:43"><expr pos:start="37:41" pos:end="37:43"><name pos:start="37:41" pos:end="37:43">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="87:9"><if pos:start="41:9" pos:end="87:9">if <condition pos:start="41:12" pos:end="41:29">(<expr pos:start="41:13" pos:end="41:28"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:28">pref_code_found</name></expr>)</condition> <block pos:start="41:31" pos:end="87:9">{<block_content pos:start="43:13" pos:end="85:13">

            <if_stmt pos:start="43:13" pos:end="45:25"><if pos:start="43:13" pos:end="45:25">if <condition pos:start="43:16" pos:end="43:32">(<expr pos:start="43:17" pos:end="43:31"><call pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:22">strlen</name><argument_list pos:start="43:23" pos:end="43:27">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">buf</name></expr></argument>)</argument_list></call> <operator pos:start="43:29" pos:end="43:29">&lt;</operator> <literal type="number" pos:start="43:31" pos:end="43:31">3</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:25"><block_content pos:start="45:17" pos:end="45:25">

                <continue pos:start="45:17" pos:end="45:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</expr_stmt>

            <for pos:start="51:13" pos:end="61:13">for <control pos:start="51:17" pos:end="51:35">(<init pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">i</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</init> <condition pos:start="51:25" pos:end="51:30"><expr pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:25">i</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <literal type="number" pos:start="51:29" pos:end="51:29">3</literal></expr>;</condition> <incr pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><operator pos:start="51:32" pos:end="51:33">++</operator><name pos:start="51:34" pos:end="51:34">i</name></expr></incr>)</control> <block pos:start="51:37" pos:end="61:13">{<block_content pos:start="53:17" pos:end="59:36">

                <if_stmt pos:start="53:17" pos:end="55:29"><if pos:start="53:17" pos:end="55:29">if <condition pos:start="53:20" pos:end="53:49">(<expr pos:start="53:21" pos:end="53:48"><name pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:23">buf</name><index pos:start="53:24" pos:end="53:26">[<expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">i</name></expr>]</index></name> <operator pos:start="53:28" pos:end="53:28">&lt;</operator> <literal type="char" pos:start="53:30" pos:end="53:32">'0'</literal> <operator pos:start="53:34" pos:end="53:35">||</operator> <name pos:start="53:37" pos:end="53:42"><name pos:start="53:37" pos:end="53:39">buf</name><index pos:start="53:40" pos:end="53:42">[<expr pos:start="53:41" pos:end="53:41"><name pos:start="53:41" pos:end="53:41">i</name></expr>]</index></name> <operator pos:start="53:44" pos:end="53:44">&gt;</operator> <literal type="char" pos:start="53:46" pos:end="53:48">'9'</literal></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:29"><block_content pos:start="55:21" pos:end="55:29">

                    <continue pos:start="55:21" pos:end="55:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:26"><expr pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:19">err</name> <operator pos:start="57:21" pos:end="57:22">*=</operator> <literal type="number" pos:start="57:24" pos:end="57:25">10</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:36"><expr pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:19">err</name> <operator pos:start="59:21" pos:end="59:22">+=</operator> <name pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:26">buf</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">i</name></expr>]</index></name> <operator pos:start="59:31" pos:end="59:31">-</operator> <literal type="char" pos:start="59:33" pos:end="59:35">'0'</literal></expr>;</expr_stmt>

            </block_content>}</block></for>



            <for pos:start="65:13" pos:end="85:13">for <control pos:start="65:17" pos:end="65:47">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">i</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:42"><expr pos:start="65:25" pos:end="65:41"><name pos:start="65:25" pos:end="65:41"><name pos:start="65:25" pos:end="65:38">response_codes</name><index pos:start="65:39" pos:end="65:41">[<expr pos:start="65:40" pos:end="65:40"><name pos:start="65:40" pos:end="65:40">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="65:44" pos:end="65:46"><expr pos:start="65:44" pos:end="65:46"><operator pos:start="65:44" pos:end="65:45">++</operator><name pos:start="65:46" pos:end="65:46">i</name></expr></incr>)</control> <block pos:start="65:49" pos:end="85:13">{<block_content pos:start="67:17" pos:end="83:17">

                <if_stmt pos:start="67:17" pos:end="83:17"><if pos:start="67:17" pos:end="83:17">if <condition pos:start="67:20" pos:end="67:45">(<expr pos:start="67:21" pos:end="67:44"><name pos:start="67:21" pos:end="67:23">err</name> <operator pos:start="67:25" pos:end="67:26">==</operator> <name pos:start="67:28" pos:end="67:44"><name pos:start="67:28" pos:end="67:41">response_codes</name><index pos:start="67:42" pos:end="67:44">[<expr pos:start="67:43" pos:end="67:43"><name pos:start="67:43" pos:end="67:43">i</name></expr>]</index></name></expr>)</condition> <block pos:start="67:47" pos:end="83:17">{<block_content pos:start="71:21" pos:end="81:26">

                    <comment type="block" pos:start="69:21" pos:end="69:85">/* first code received. Now get all lines in non blocking mode */</comment>

                    <expr_stmt pos:start="71:21" pos:end="71:51"><expr pos:start="71:21" pos:end="71:50"><name pos:start="71:21" pos:end="71:46"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:46">conn_control_block_flag</name></name> <operator pos:start="71:48" pos:end="71:48">=</operator> <literal type="number" pos:start="71:50" pos:end="71:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:40"><expr pos:start="73:21" pos:end="73:39"><name pos:start="73:21" pos:end="73:35">pref_code_found</name> <operator pos:start="73:37" pos:end="73:37">=</operator> <literal type="number" pos:start="73:39" pos:end="73:39">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:33"><expr pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:26">result</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:32">err</name></expr>;</expr_stmt>

                    <if_stmt pos:start="77:21" pos:end="79:47"><if pos:start="77:21" pos:end="79:47">if <condition pos:start="77:24" pos:end="77:29">(<expr pos:start="77:25" pos:end="77:28"><name pos:start="77:25" pos:end="77:28">line</name></expr>)</condition><block type="pseudo" pos:start="79:25" pos:end="79:47"><block_content pos:start="79:25" pos:end="79:47">

                        <expr_stmt pos:start="79:25" pos:end="79:47"><expr pos:start="79:25" pos:end="79:46"><operator pos:start="79:25" pos:end="79:25">*</operator><name pos:start="79:26" pos:end="79:29">line</name> <operator pos:start="79:31" pos:end="79:31">=</operator> <call pos:start="79:33" pos:end="79:46"><name pos:start="79:33" pos:end="79:41">av_strdup</name><argument_list pos:start="79:42" pos:end="79:46">(<argument pos:start="79:43" pos:end="79:45"><expr pos:start="79:43" pos:end="79:45"><name pos:start="79:43" pos:end="79:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <break pos:start="81:21" pos:end="81:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="91:5" pos:end="91:18">return <expr pos:start="91:12" pos:end="91:17"><name pos:start="91:12" pos:end="91:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
