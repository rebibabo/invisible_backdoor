<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20905.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:36">qmp_input_get_object</name><parameter_list pos:start="1:37" pos:end="5:50">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:52">QmpInputVisitor</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">qiv</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:47">char</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">name</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:41">bool</name></type> <name pos:start="5:43" pos:end="5:49">consume</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="9:5" pos:end="69:15">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">StackObject</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">tos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">QObject</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">qobj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">QObject</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:12">qiv</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:22">nb_stack</name></name></expr>)</condition> <block pos:start="17:25" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:25">

        <comment type="block" pos:start="19:9" pos:end="19:48">/* Starting at root, name is ignored. */</comment>

        <return pos:start="21:9" pos:end="21:25">return <expr pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:18">qiv</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">root</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:55">/* We are in a container; find the next element. */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:7">tos</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <operator pos:start="29:11" pos:end="29:11">&amp;</operator><name pos:start="29:12" pos:end="29:40"><name pos:start="29:12" pos:end="29:14">qiv</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:21">stack</name><index pos:start="29:22" pos:end="29:40">[<expr pos:start="29:23" pos:end="29:39"><name pos:start="29:23" pos:end="29:35"><name pos:start="29:23" pos:end="29:25">qiv</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:35">nb_stack</name></name> <operator pos:start="29:37" pos:end="29:37">-</operator> <literal type="number" pos:start="29:39" pos:end="29:39">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:20"><expr pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:8">qobj</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:19"><name pos:start="31:12" pos:end="31:14">tos</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:19">obj</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><call pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:16">(<argument pos:start="33:12" pos:end="33:15"><expr pos:start="33:12" pos:end="33:15"><name pos:start="33:12" pos:end="33:15">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="65:5"><if pos:start="37:5" pos:end="51:5">if <condition pos:start="37:8" pos:end="37:42">(<expr pos:start="37:9" pos:end="37:41"><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:20">qobject_type</name><argument_list pos:start="37:21" pos:end="37:26">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">qobj</name></expr></argument>)</argument_list></call> <operator pos:start="37:28" pos:end="37:29">==</operator> <name pos:start="37:31" pos:end="37:41">QTYPE_QDICT</name></expr>)</condition> <block pos:start="37:44" pos:end="51:5">{<block_content pos:start="39:9" pos:end="49:9">

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:14">assert</name><argument_list pos:start="39:15" pos:end="39:20">(<argument pos:start="39:16" pos:end="39:19"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:53"><name pos:start="41:15" pos:end="41:23">qdict_get</name><argument_list pos:start="41:24" pos:end="41:53">(<argument pos:start="41:25" pos:end="41:46"><expr pos:start="41:25" pos:end="41:46"><call pos:start="41:25" pos:end="41:46"><name pos:start="41:25" pos:end="41:40">qobject_to_qdict</name><argument_list pos:start="41:41" pos:end="41:46">(<argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">qobj</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><name pos:start="41:49" pos:end="41:52">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:37">(<expr pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:18"><name pos:start="43:13" pos:end="43:15">tos</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:18">h</name></name> <operator pos:start="43:20" pos:end="43:21">&amp;&amp;</operator> <name pos:start="43:23" pos:end="43:29">consume</name> <operator pos:start="43:31" pos:end="43:32">&amp;&amp;</operator> <name pos:start="43:34" pos:end="43:36">ret</name></expr>)</condition> <block pos:start="43:39" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:28">

            <decl_stmt pos:start="45:13" pos:end="45:61"><decl pos:start="45:13" pos:end="45:60"><type pos:start="45:13" pos:end="45:16"><name pos:start="45:13" pos:end="45:16">bool</name></type> <name pos:start="45:18" pos:end="45:24">removed</name> <init pos:start="45:26" pos:end="45:60">= <expr pos:start="45:28" pos:end="45:60"><call pos:start="45:28" pos:end="45:60"><name pos:start="45:28" pos:end="45:46">g_hash_table_remove</name><argument_list pos:start="45:47" pos:end="45:60">(<argument pos:start="45:48" pos:end="45:53"><expr pos:start="45:48" pos:end="45:53"><name pos:start="45:48" pos:end="45:53"><name pos:start="45:48" pos:end="45:50">tos</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:53">h</name></name></expr></argument>, <argument pos:start="45:56" pos:end="45:59"><expr pos:start="45:56" pos:end="45:59"><name pos:start="45:56" pos:end="45:59">name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:27"><call pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:18">assert</name><argument_list pos:start="47:19" pos:end="47:27">(<argument pos:start="47:20" pos:end="47:26"><expr pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:26">removed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="65:5">else <block pos:start="51:12" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:9">

        <expr_stmt pos:start="53:9" pos:end="53:50"><expr pos:start="53:9" pos:end="53:49"><call pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:14">assert</name><argument_list pos:start="53:15" pos:end="53:49">(<argument pos:start="53:16" pos:end="53:48"><expr pos:start="53:16" pos:end="53:48"><call pos:start="53:16" pos:end="53:33"><name pos:start="53:16" pos:end="53:27">qobject_type</name><argument_list pos:start="53:28" pos:end="53:33">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">qobj</name></expr></argument>)</argument_list></call> <operator pos:start="53:35" pos:end="53:36">==</operator> <name pos:start="53:38" pos:end="53:48">QTYPE_QLIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:14">assert</name><argument_list pos:start="55:15" pos:end="55:21">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><operator pos:start="55:16" pos:end="55:16">!</operator><name pos:start="55:17" pos:end="55:20">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:41"><name pos:start="57:15" pos:end="57:29">qlist_entry_obj</name><argument_list pos:start="57:30" pos:end="57:41">(<argument pos:start="57:31" pos:end="57:40"><expr pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:33">tos</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:40">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:20">(<expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:19">consume</name></expr>)</condition> <block pos:start="59:22" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:48">

            <expr_stmt pos:start="61:13" pos:end="61:48"><expr pos:start="61:13" pos:end="61:47"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:15">tos</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">entry</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:47"><name pos:start="61:26" pos:end="61:35">qlist_next</name><argument_list pos:start="61:36" pos:end="61:47">(<argument pos:start="61:37" pos:end="61:46"><expr pos:start="61:37" pos:end="61:46"><name pos:start="61:37" pos:end="61:46"><name pos:start="61:37" pos:end="61:39">tos</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:46">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="69:5" pos:end="69:15">return <expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
