<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9413.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">mxf_write_package</name><parameter_list pos:start="1:30" pos:end="1:105">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:78"><decl pos:start="1:51" pos:end="1:78"><type pos:start="1:51" pos:end="1:78"><name pos:start="1:51" pos:end="1:73"><name pos:start="1:51" pos:end="1:54">enum</name> <name pos:start="1:56" pos:end="1:73">MXFMetadataSetType</name></name></type> <name pos:start="1:75" pos:end="1:78">type</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:104"><decl pos:start="1:81" pos:end="1:104"><type pos:start="1:81" pos:end="1:104"><specifier pos:start="1:81" pos:end="1:85">const</specifier> <name pos:start="1:87" pos:end="1:90">char</name> <modifier pos:start="1:92" pos:end="1:92">*</modifier></type><name pos:start="1:93" pos:end="1:104">package_name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:22">track_count</name> <init pos:start="9:24" pos:end="9:40">= <expr pos:start="9:26" pos:end="9:40"><name pos:start="9:26" pos:end="9:38"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:38">nb_streams</name></name><operator pos:start="9:39" pos:end="9:39">+</operator><literal type="number" pos:start="9:40" pos:end="9:40">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:61"><decl pos:start="11:5" pos:end="11:60"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">name_size</name> <init pos:start="11:19" pos:end="11:60">= <expr pos:start="11:21" pos:end="11:60"><call pos:start="11:21" pos:end="11:60"><name pos:start="11:21" pos:end="11:46">mxf_utf16_local_tag_length</name><argument_list pos:start="11:47" pos:end="11:60">(<argument pos:start="11:48" pos:end="11:59"><expr pos:start="11:48" pos:end="11:59"><name pos:start="11:48" pos:end="11:59">package_name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:26">user_comment_count</name> <init pos:start="13:28" pos:end="13:30">= <expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:32">(<expr pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:12">type</name> <operator pos:start="17:14" pos:end="17:15">==</operator> <name pos:start="17:17" pos:end="17:31">MaterialPackage</name></expr>)</condition> <block pos:start="17:34" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:125">

        <if_stmt pos:start="19:9" pos:end="21:73"><if pos:start="19:9" pos:end="21:73">if <condition pos:start="19:12" pos:end="19:37">(<expr pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:15">mxf</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:36">store_user_comments</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:73"><block_content pos:start="21:13" pos:end="21:73">

            <expr_stmt pos:start="21:13" pos:end="21:73"><expr pos:start="21:13" pos:end="21:72"><name pos:start="21:13" pos:end="21:30">user_comment_count</name> <operator pos:start="21:32" pos:end="21:32">=</operator> <call pos:start="21:34" pos:end="21:72"><name pos:start="21:34" pos:end="21:56">mxf_write_user_comments</name><argument_list pos:start="21:57" pos:end="21:72">(<argument pos:start="21:58" pos:end="21:58"><expr pos:start="21:58" pos:end="21:58"><name pos:start="21:58" pos:end="21:58">s</name></expr></argument>, <argument pos:start="21:61" pos:end="21:71"><expr pos:start="21:61" pos:end="21:71"><name pos:start="21:61" pos:end="21:71"><name pos:start="21:61" pos:end="21:61">s</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:71">metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><call pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:30">mxf_write_metadata_key</name><argument_list pos:start="23:31" pos:end="23:44">(<argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><name pos:start="23:32" pos:end="23:33">pb</name></expr></argument>, <argument pos:start="23:36" pos:end="23:43"><expr pos:start="23:36" pos:end="23:43"><literal type="number" pos:start="23:36" pos:end="23:43">0x013600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:63"><expr pos:start="25:9" pos:end="25:62"><call pos:start="25:9" pos:end="25:62"><name pos:start="25:9" pos:end="25:17">PRINT_KEY</name><argument_list pos:start="25:18" pos:end="25:62">(<argument pos:start="25:19" pos:end="25:19"><expr pos:start="25:19" pos:end="25:19"><name pos:start="25:19" pos:end="25:19">s</name></expr></argument>, <argument pos:start="25:22" pos:end="25:43"><expr pos:start="25:22" pos:end="25:43"><literal type="string" pos:start="25:22" pos:end="25:43">"Material Package key"</literal></expr></argument>, <argument pos:start="25:46" pos:end="25:61"><expr pos:start="25:46" pos:end="25:61"><name pos:start="25:46" pos:end="25:56"><name pos:start="25:46" pos:end="25:47">pb</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:56">buf_ptr</name></name> <operator pos:start="25:58" pos:end="25:58">-</operator> <literal type="number" pos:start="25:60" pos:end="25:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:125"><expr pos:start="27:9" pos:end="27:124"><call pos:start="27:9" pos:end="27:124"><name pos:start="27:9" pos:end="27:29">klv_encode_ber_length</name><argument_list pos:start="27:30" pos:end="27:124">(<argument pos:start="27:31" pos:end="27:32"><expr pos:start="27:31" pos:end="27:32"><name pos:start="27:31" pos:end="27:32">pb</name></expr></argument>, <argument pos:start="27:35" pos:end="27:123"><expr pos:start="27:35" pos:end="27:123"><literal type="number" pos:start="27:35" pos:end="27:38">92</literal> <operator pos:start="27:38" pos:end="27:38">+</operator> <name pos:start="27:40" pos:end="27:48">name_size</name> <operator pos:start="27:50" pos:end="27:50">+</operator> <operator pos:start="27:52" pos:end="27:52">(</operator><literal type="number" pos:start="27:53" pos:end="27:54">16</literal><operator pos:start="27:55" pos:end="27:55">*</operator><name pos:start="27:56" pos:end="27:66">track_count</name><operator pos:start="27:67" pos:end="27:67">)</operator> <operator pos:start="27:69" pos:end="27:69">+</operator> <operator pos:start="27:71" pos:end="27:71">(</operator><literal type="number" pos:start="27:72" pos:end="27:73">16</literal><operator pos:start="27:74" pos:end="27:74">*</operator><name pos:start="27:75" pos:end="27:92">user_comment_count</name><operator pos:start="27:93" pos:end="27:93">)</operator> <operator pos:start="27:95" pos:end="27:95">+</operator> <literal type="number" pos:start="27:97" pos:end="27:98">12</literal><operator pos:start="27:99" pos:end="27:99">*</operator><name pos:start="27:100" pos:end="27:123"><name pos:start="27:100" pos:end="27:102">mxf</name><operator pos:start="27:103" pos:end="27:104">-&gt;</operator><name pos:start="27:105" pos:end="27:123">store_user_comments</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="37:5">else <block pos:start="29:12" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:100">

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:30">mxf_write_metadata_key</name><argument_list pos:start="31:31" pos:end="31:44">(<argument pos:start="31:32" pos:end="31:33"><expr pos:start="31:32" pos:end="31:33"><name pos:start="31:32" pos:end="31:33">pb</name></expr></argument>, <argument pos:start="31:36" pos:end="31:43"><expr pos:start="31:36" pos:end="31:43"><literal type="number" pos:start="31:36" pos:end="31:43">0x013700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><call pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:17">PRINT_KEY</name><argument_list pos:start="33:18" pos:end="33:60">(<argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">s</name></expr></argument>, <argument pos:start="33:22" pos:end="33:41"><expr pos:start="33:22" pos:end="33:41"><literal type="string" pos:start="33:22" pos:end="33:41">"Source Package key"</literal></expr></argument>, <argument pos:start="33:44" pos:end="33:59"><expr pos:start="33:44" pos:end="33:59"><name pos:start="33:44" pos:end="33:54"><name pos:start="33:44" pos:end="33:45">pb</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:54">buf_ptr</name></name> <operator pos:start="33:56" pos:end="33:56">-</operator> <literal type="number" pos:start="33:58" pos:end="33:59">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:100"><expr pos:start="35:9" pos:end="35:99"><call pos:start="35:9" pos:end="35:99"><name pos:start="35:9" pos:end="35:29">klv_encode_ber_length</name><argument_list pos:start="35:30" pos:end="35:99">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">pb</name></expr></argument>, <argument pos:start="35:35" pos:end="35:98"><expr pos:start="35:35" pos:end="35:98"><literal type="number" pos:start="35:35" pos:end="35:39">112</literal> <operator pos:start="35:39" pos:end="35:39">+</operator> <name pos:start="35:41" pos:end="35:49">name_size</name> <operator pos:start="35:51" pos:end="35:51">+</operator> <operator pos:start="35:53" pos:end="35:53">(</operator><literal type="number" pos:start="35:54" pos:end="35:55">16</literal><operator pos:start="35:56" pos:end="35:56">*</operator><name pos:start="35:57" pos:end="35:67">track_count</name><operator pos:start="35:68" pos:end="35:68">)</operator> <operator pos:start="35:70" pos:end="35:70">+</operator> <literal type="number" pos:start="35:72" pos:end="35:73">12</literal><operator pos:start="35:74" pos:end="35:74">*</operator><name pos:start="35:75" pos:end="35:98"><name pos:start="35:75" pos:end="35:77">mxf</name><operator pos:start="35:78" pos:end="35:79">-&gt;</operator><name pos:start="35:80" pos:end="35:98">store_user_comments</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="35:102" pos:end="35:144">// 20 bytes length for descriptor reference</comment>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="41:5" pos:end="41:16">// write uid</comment>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:23">mxf_write_local_tag</name><argument_list pos:start="43:24" pos:end="43:39">(<argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">pb</name></expr></argument>, <argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><literal type="number" pos:start="43:29" pos:end="43:30">16</literal></expr></argument>, <argument pos:start="43:33" pos:end="43:38"><expr pos:start="43:33" pos:end="43:38"><literal type="number" pos:start="43:33" pos:end="43:38">0x3C0A</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><call pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:18">mxf_write_uuid</name><argument_list pos:start="45:19" pos:end="45:31">(<argument pos:start="45:20" pos:end="45:21"><expr pos:start="45:20" pos:end="45:21"><name pos:start="45:20" pos:end="45:21">pb</name></expr></argument>, <argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">type</name></expr></argument>, <argument pos:start="45:30" pos:end="45:30"><expr pos:start="45:30" pos:end="45:30"><literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><call pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:10">av_log</name><argument_list pos:start="47:11" pos:end="47:53">(<argument pos:start="47:12" pos:end="47:12"><expr pos:start="47:12" pos:end="47:12"><name pos:start="47:12" pos:end="47:12">s</name></expr></argument>,<argument pos:start="47:14" pos:end="47:25"><expr pos:start="47:14" pos:end="47:25"><name pos:start="47:14" pos:end="47:25">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="47:28" pos:end="47:46"><expr pos:start="47:28" pos:end="47:46"><literal type="string" pos:start="47:28" pos:end="47:46">"package type:%d\n"</literal></expr></argument>, <argument pos:start="47:49" pos:end="47:52"><expr pos:start="47:49" pos:end="47:52"><name pos:start="47:49" pos:end="47:52">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><call pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:13">PRINT_KEY</name><argument_list pos:start="49:14" pos:end="49:49">(<argument pos:start="49:15" pos:end="49:15"><expr pos:start="49:15" pos:end="49:15"><name pos:start="49:15" pos:end="49:15">s</name></expr></argument>, <argument pos:start="49:18" pos:end="49:30"><expr pos:start="49:18" pos:end="49:30"><literal type="string" pos:start="49:18" pos:end="49:30">"package uid"</literal></expr></argument>, <argument pos:start="49:33" pos:end="49:48"><expr pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:43"><name pos:start="49:33" pos:end="49:34">pb</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:43">buf_ptr</name></name> <operator pos:start="49:45" pos:end="49:45">-</operator> <literal type="number" pos:start="49:47" pos:end="49:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="53:5" pos:end="53:25">// write package umid</comment>

    <expr_stmt pos:start="55:5" pos:end="55:40"><expr pos:start="55:5" pos:end="55:39"><call pos:start="55:5" pos:end="55:39"><name pos:start="55:5" pos:end="55:23">mxf_write_local_tag</name><argument_list pos:start="55:24" pos:end="55:39">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">pb</name></expr></argument>, <argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><literal type="number" pos:start="55:29" pos:end="55:30">32</literal></expr></argument>, <argument pos:start="55:33" pos:end="55:38"><expr pos:start="55:33" pos:end="55:38"><literal type="number" pos:start="55:33" pos:end="55:38">0x4401</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><call pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:18">mxf_write_umid</name><argument_list pos:start="57:19" pos:end="57:44">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">s</name></expr></argument>, <argument pos:start="57:23" pos:end="57:43"><expr pos:start="57:23" pos:end="57:43"><name pos:start="57:23" pos:end="57:26">type</name> <operator pos:start="57:28" pos:end="57:29">==</operator> <name pos:start="57:31" pos:end="57:43">SourcePackage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:63"><expr pos:start="59:5" pos:end="59:62"><call pos:start="59:5" pos:end="59:62"><name pos:start="59:5" pos:end="59:13">PRINT_KEY</name><argument_list pos:start="59:14" pos:end="59:62">(<argument pos:start="59:15" pos:end="59:15"><expr pos:start="59:15" pos:end="59:15"><name pos:start="59:15" pos:end="59:15">s</name></expr></argument>, <argument pos:start="59:18" pos:end="59:43"><expr pos:start="59:18" pos:end="59:43"><literal type="string" pos:start="59:18" pos:end="59:43">"package umid second part"</literal></expr></argument>, <argument pos:start="59:46" pos:end="59:61"><expr pos:start="59:46" pos:end="59:61"><name pos:start="59:46" pos:end="59:56"><name pos:start="59:46" pos:end="59:47">pb</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:56">buf_ptr</name></name> <operator pos:start="59:58" pos:end="59:58">-</operator> <literal type="number" pos:start="59:60" pos:end="59:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="63:5" pos:end="63:19">// package name</comment>

    <if_stmt pos:start="65:5" pos:end="67:60"><if pos:start="65:5" pos:end="67:60">if <condition pos:start="65:8" pos:end="65:18">(<expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:17">name_size</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:60"><block_content pos:start="67:9" pos:end="67:60">

        <expr_stmt pos:start="67:9" pos:end="67:60"><expr pos:start="67:9" pos:end="67:59"><call pos:start="67:9" pos:end="67:59"><name pos:start="67:9" pos:end="67:33">mxf_write_local_tag_utf16</name><argument_list pos:start="67:34" pos:end="67:59">(<argument pos:start="67:35" pos:end="67:36"><expr pos:start="67:35" pos:end="67:36"><name pos:start="67:35" pos:end="67:36">pb</name></expr></argument>, <argument pos:start="67:39" pos:end="67:44"><expr pos:start="67:39" pos:end="67:44"><literal type="number" pos:start="67:39" pos:end="67:44">0x4402</literal></expr></argument>, <argument pos:start="67:47" pos:end="67:58"><expr pos:start="67:47" pos:end="67:58"><name pos:start="67:47" pos:end="67:58">package_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="71:5" pos:end="71:28">// package creation date</comment>

    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><call pos:start="73:5" pos:end="73:38"><name pos:start="73:5" pos:end="73:23">mxf_write_local_tag</name><argument_list pos:start="73:24" pos:end="73:38">(<argument pos:start="73:25" pos:end="73:26"><expr pos:start="73:25" pos:end="73:26"><name pos:start="73:25" pos:end="73:26">pb</name></expr></argument>, <argument pos:start="73:29" pos:end="73:29"><expr pos:start="73:29" pos:end="73:29"><literal type="number" pos:start="73:29" pos:end="73:29">8</literal></expr></argument>, <argument pos:start="73:32" pos:end="73:37"><expr pos:start="73:32" pos:end="73:37"><literal type="number" pos:start="73:32" pos:end="73:37">0x4405</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:34"><expr pos:start="75:5" pos:end="75:33"><call pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:13">avio_wb64</name><argument_list pos:start="75:14" pos:end="75:33">(<argument pos:start="75:15" pos:end="75:16"><expr pos:start="75:15" pos:end="75:16"><name pos:start="75:15" pos:end="75:16">pb</name></expr></argument>, <argument pos:start="75:19" pos:end="75:32"><expr pos:start="75:19" pos:end="75:32"><name pos:start="75:19" pos:end="75:32"><name pos:start="75:19" pos:end="75:21">mxf</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:32">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="79:5" pos:end="79:28">// package modified date</comment>

    <expr_stmt pos:start="81:5" pos:end="81:39"><expr pos:start="81:5" pos:end="81:38"><call pos:start="81:5" pos:end="81:38"><name pos:start="81:5" pos:end="81:23">mxf_write_local_tag</name><argument_list pos:start="81:24" pos:end="81:38">(<argument pos:start="81:25" pos:end="81:26"><expr pos:start="81:25" pos:end="81:26"><name pos:start="81:25" pos:end="81:26">pb</name></expr></argument>, <argument pos:start="81:29" pos:end="81:29"><expr pos:start="81:29" pos:end="81:29"><literal type="number" pos:start="81:29" pos:end="81:29">8</literal></expr></argument>, <argument pos:start="81:32" pos:end="81:37"><expr pos:start="81:32" pos:end="81:37"><literal type="number" pos:start="81:32" pos:end="81:37">0x4404</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:34"><expr pos:start="83:5" pos:end="83:33"><call pos:start="83:5" pos:end="83:33"><name pos:start="83:5" pos:end="83:13">avio_wb64</name><argument_list pos:start="83:14" pos:end="83:33">(<argument pos:start="83:15" pos:end="83:16"><expr pos:start="83:15" pos:end="83:16"><name pos:start="83:15" pos:end="83:16">pb</name></expr></argument>, <argument pos:start="83:19" pos:end="83:32"><expr pos:start="83:19" pos:end="83:32"><name pos:start="83:19" pos:end="83:32"><name pos:start="83:19" pos:end="83:21">mxf</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:32">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="87:5" pos:end="87:23">// write track refs</comment>

    <expr_stmt pos:start="89:5" pos:end="89:56"><expr pos:start="89:5" pos:end="89:55"><call pos:start="89:5" pos:end="89:55"><name pos:start="89:5" pos:end="89:23">mxf_write_local_tag</name><argument_list pos:start="89:24" pos:end="89:55">(<argument pos:start="89:25" pos:end="89:26"><expr pos:start="89:25" pos:end="89:26"><name pos:start="89:25" pos:end="89:26">pb</name></expr></argument>, <argument pos:start="89:29" pos:end="89:46"><expr pos:start="89:29" pos:end="89:46"><name pos:start="89:29" pos:end="89:39">track_count</name><operator pos:start="89:40" pos:end="89:40">*</operator><literal type="number" pos:start="89:41" pos:end="89:44">16</literal> <operator pos:start="89:44" pos:end="89:44">+</operator> <literal type="number" pos:start="89:46" pos:end="89:46">8</literal></expr></argument>, <argument pos:start="89:49" pos:end="89:54"><expr pos:start="89:49" pos:end="89:54"><literal type="number" pos:start="89:49" pos:end="89:54">0x4403</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:42"><expr pos:start="91:5" pos:end="91:41"><call pos:start="91:5" pos:end="91:41"><name pos:start="91:5" pos:end="91:24">mxf_write_refs_count</name><argument_list pos:start="91:25" pos:end="91:41">(<argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><name pos:start="91:26" pos:end="91:27">pb</name></expr></argument>, <argument pos:start="91:30" pos:end="91:40"><expr pos:start="91:30" pos:end="91:40"><name pos:start="91:30" pos:end="91:40">track_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:43"><expr pos:start="93:5" pos:end="95:42"><call pos:start="93:5" pos:end="95:42"><name pos:start="93:5" pos:end="93:18">mxf_write_uuid</name><argument_list pos:start="93:19" pos:end="95:42">(<argument pos:start="93:20" pos:end="93:21"><expr pos:start="93:20" pos:end="93:21"><name pos:start="93:20" pos:end="93:21">pb</name></expr></argument>, <argument pos:start="93:24" pos:end="95:37"><expr pos:start="93:24" pos:end="95:37"><ternary pos:start="93:24" pos:end="95:37"><condition pos:start="93:24" pos:end="93:48"><expr pos:start="93:24" pos:end="93:46"><name pos:start="93:24" pos:end="93:27">type</name> <operator pos:start="93:29" pos:end="93:30">==</operator> <name pos:start="93:32" pos:end="93:46">MaterialPackage</name></expr> ?</condition><then pos:start="93:50" pos:end="93:54"> <expr pos:start="93:50" pos:end="93:54"><name pos:start="93:50" pos:end="93:54">Track</name></expr> </then><else pos:start="93:56" pos:end="95:37">:

                   <expr pos:start="95:20" pos:end="95:37"><name pos:start="95:20" pos:end="95:24">Track</name> <operator pos:start="95:26" pos:end="95:26">+</operator> <name pos:start="95:28" pos:end="95:37">TypeBottom</name></expr></else></ternary></expr></argument>, <argument pos:start="95:40" pos:end="95:41"><expr pos:start="95:40" pos:end="95:41"><operator pos:start="95:40" pos:end="95:40">-</operator><literal type="number" pos:start="95:41" pos:end="95:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="95:45" pos:end="95:61">// timecode track</comment>

    <for pos:start="97:5" pos:end="99:84">for <control pos:start="97:9" pos:end="97:39">(<init pos:start="97:10" pos:end="97:15"><expr pos:start="97:10" pos:end="97:14"><name pos:start="97:10" pos:end="97:10">i</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <literal type="number" pos:start="97:14" pos:end="97:14">0</literal></expr>;</init> <condition pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:17">i</name> <operator pos:start="97:19" pos:end="97:19">&lt;</operator> <name pos:start="97:21" pos:end="97:33"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:33">nb_streams</name></name></expr>;</condition> <incr pos:start="97:36" pos:end="97:38"><expr pos:start="97:36" pos:end="97:38"><name pos:start="97:36" pos:end="97:36">i</name><operator pos:start="97:37" pos:end="97:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:9" pos:end="99:84"><block_content pos:start="99:9" pos:end="99:84">

        <expr_stmt pos:start="99:9" pos:end="99:84"><expr pos:start="99:9" pos:end="99:83"><call pos:start="99:9" pos:end="99:83"><name pos:start="99:9" pos:end="99:22">mxf_write_uuid</name><argument_list pos:start="99:23" pos:end="99:83">(<argument pos:start="99:24" pos:end="99:25"><expr pos:start="99:24" pos:end="99:25"><name pos:start="99:24" pos:end="99:25">pb</name></expr></argument>, <argument pos:start="99:28" pos:end="99:79"><expr pos:start="99:28" pos:end="99:79"><ternary pos:start="99:28" pos:end="99:79"><condition pos:start="99:28" pos:end="99:52"><expr pos:start="99:28" pos:end="99:50"><name pos:start="99:28" pos:end="99:31">type</name> <operator pos:start="99:33" pos:end="99:34">==</operator> <name pos:start="99:36" pos:end="99:50">MaterialPackage</name></expr> ?</condition><then pos:start="99:54" pos:end="99:58"> <expr pos:start="99:54" pos:end="99:58"><name pos:start="99:54" pos:end="99:58">Track</name></expr> </then><else pos:start="99:60" pos:end="99:79">: <expr pos:start="99:62" pos:end="99:79"><name pos:start="99:62" pos:end="99:66">Track</name> <operator pos:start="99:68" pos:end="99:68">+</operator> <name pos:start="99:70" pos:end="99:79">TypeBottom</name></expr></else></ternary></expr></argument>, <argument pos:start="99:82" pos:end="99:82"><expr pos:start="99:82" pos:end="99:82"><name pos:start="99:82" pos:end="99:82">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="line" pos:start="103:5" pos:end="103:30">// write user comment refs</comment>

    <if_stmt pos:start="105:5" pos:end="115:5"><if pos:start="105:5" pos:end="115:5">if <condition pos:start="105:8" pos:end="105:33">(<expr pos:start="105:9" pos:end="105:32"><name pos:start="105:9" pos:end="105:32"><name pos:start="105:9" pos:end="105:11">mxf</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:32">store_user_comments</name></name></expr>)</condition> <block pos:start="105:35" pos:end="115:5">{<block_content pos:start="107:9" pos:end="113:94">

        <expr_stmt pos:start="107:9" pos:end="107:67"><expr pos:start="107:9" pos:end="107:66"><call pos:start="107:9" pos:end="107:66"><name pos:start="107:9" pos:end="107:27">mxf_write_local_tag</name><argument_list pos:start="107:28" pos:end="107:66">(<argument pos:start="107:29" pos:end="107:30"><expr pos:start="107:29" pos:end="107:30"><name pos:start="107:29" pos:end="107:30">pb</name></expr></argument>, <argument pos:start="107:33" pos:end="107:57"><expr pos:start="107:33" pos:end="107:57"><name pos:start="107:33" pos:end="107:50">user_comment_count</name><operator pos:start="107:51" pos:end="107:51">*</operator><literal type="number" pos:start="107:52" pos:end="107:55">16</literal> <operator pos:start="107:55" pos:end="107:55">+</operator> <literal type="number" pos:start="107:57" pos:end="107:57">8</literal></expr></argument>, <argument pos:start="107:60" pos:end="107:65"><expr pos:start="107:60" pos:end="107:65"><literal type="number" pos:start="107:60" pos:end="107:65">0x4406</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><call pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:28">mxf_write_refs_count</name><argument_list pos:start="109:29" pos:end="109:52">(<argument pos:start="109:30" pos:end="109:31"><expr pos:start="109:30" pos:end="109:31"><name pos:start="109:30" pos:end="109:31">pb</name></expr></argument>, <argument pos:start="109:34" pos:end="109:51"><expr pos:start="109:34" pos:end="109:51"><name pos:start="109:34" pos:end="109:51">user_comment_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="111:9" pos:end="113:94">for <control pos:start="111:13" pos:end="111:48">(<init pos:start="111:14" pos:end="111:19"><expr pos:start="111:14" pos:end="111:18"><name pos:start="111:14" pos:end="111:14">i</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>;</init> <condition pos:start="111:21" pos:end="111:43"><expr pos:start="111:21" pos:end="111:42"><name pos:start="111:21" pos:end="111:21">i</name> <operator pos:start="111:23" pos:end="111:23">&lt;</operator> <name pos:start="111:25" pos:end="111:42">user_comment_count</name></expr>;</condition> <incr pos:start="111:45" pos:end="111:47"><expr pos:start="111:45" pos:end="111:47"><name pos:start="111:45" pos:end="111:45">i</name><operator pos:start="111:46" pos:end="111:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:13" pos:end="113:94"><block_content pos:start="113:13" pos:end="113:94">

            <expr_stmt pos:start="113:13" pos:end="113:94"><expr pos:start="113:13" pos:end="113:93"><call pos:start="113:13" pos:end="113:93"><name pos:start="113:13" pos:end="113:26">mxf_write_uuid</name><argument_list pos:start="113:27" pos:end="113:93">(<argument pos:start="113:28" pos:end="113:29"><expr pos:start="113:28" pos:end="113:29"><name pos:start="113:28" pos:end="113:29">pb</name></expr></argument>, <argument pos:start="113:32" pos:end="113:42"><expr pos:start="113:32" pos:end="113:42"><name pos:start="113:32" pos:end="113:42">TaggedValue</name></expr></argument>, <argument pos:start="113:45" pos:end="113:92"><expr pos:start="113:45" pos:end="113:92"><name pos:start="113:45" pos:end="113:67"><name pos:start="113:45" pos:end="113:47">mxf</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:67">tagged_value_count</name></name> <operator pos:start="113:69" pos:end="113:69">-</operator> <name pos:start="113:71" pos:end="113:88">user_comment_count</name> <operator pos:start="113:90" pos:end="113:90">+</operator> <name pos:start="113:92" pos:end="113:92">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="119:5" pos:end="119:42">// write multiple descriptor reference</comment>

    <if_stmt pos:start="121:5" pos:end="135:5"><if pos:start="121:5" pos:end="135:5">if <condition pos:start="121:8" pos:end="121:30">(<expr pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:12">type</name> <operator pos:start="121:14" pos:end="121:15">==</operator> <name pos:start="121:17" pos:end="121:29">SourcePackage</name></expr>)</condition> <block pos:start="121:32" pos:end="135:5">{<block_content pos:start="123:9" pos:end="133:49">

        <expr_stmt pos:start="123:9" pos:end="123:44"><expr pos:start="123:9" pos:end="123:43"><call pos:start="123:9" pos:end="123:43"><name pos:start="123:9" pos:end="123:27">mxf_write_local_tag</name><argument_list pos:start="123:28" pos:end="123:43">(<argument pos:start="123:29" pos:end="123:30"><expr pos:start="123:29" pos:end="123:30"><name pos:start="123:29" pos:end="123:30">pb</name></expr></argument>, <argument pos:start="123:33" pos:end="123:34"><expr pos:start="123:33" pos:end="123:34"><literal type="number" pos:start="123:33" pos:end="123:34">16</literal></expr></argument>, <argument pos:start="123:37" pos:end="123:42"><expr pos:start="123:37" pos:end="123:42"><literal type="number" pos:start="123:37" pos:end="123:42">0x4701</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="133:49"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:30">(<expr pos:start="125:13" pos:end="125:29"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:25">nb_streams</name></name> <operator pos:start="125:27" pos:end="125:27">&gt;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">1</literal></expr>)</condition> <block pos:start="125:32" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:42">

            <expr_stmt pos:start="127:13" pos:end="127:54"><expr pos:start="127:13" pos:end="127:53"><call pos:start="127:13" pos:end="127:53"><name pos:start="127:13" pos:end="127:26">mxf_write_uuid</name><argument_list pos:start="127:27" pos:end="127:53">(<argument pos:start="127:28" pos:end="127:29"><expr pos:start="127:28" pos:end="127:29"><name pos:start="127:28" pos:end="127:29">pb</name></expr></argument>, <argument pos:start="127:32" pos:end="127:49"><expr pos:start="127:32" pos:end="127:49"><name pos:start="127:32" pos:end="127:49">MultipleDescriptor</name></expr></argument>, <argument pos:start="127:52" pos:end="127:52"><expr pos:start="127:52" pos:end="127:52"><literal type="number" pos:start="127:52" pos:end="127:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:42"><expr pos:start="129:13" pos:end="129:41"><call pos:start="129:13" pos:end="129:41"><name pos:start="129:13" pos:end="129:38">mxf_write_multi_descriptor</name><argument_list pos:start="129:39" pos:end="129:41">(<argument pos:start="129:40" pos:end="129:40"><expr pos:start="129:40" pos:end="129:40"><name pos:start="129:40" pos:end="129:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="133:49">else<block type="pseudo" pos:start="133:13" pos:end="133:49"><block_content pos:start="133:13" pos:end="133:49">

            <expr_stmt pos:start="133:13" pos:end="133:49"><expr pos:start="133:13" pos:end="133:48"><call pos:start="133:13" pos:end="133:48"><name pos:start="133:13" pos:end="133:26">mxf_write_uuid</name><argument_list pos:start="133:27" pos:end="133:48">(<argument pos:start="133:28" pos:end="133:29"><expr pos:start="133:28" pos:end="133:29"><name pos:start="133:28" pos:end="133:29">pb</name></expr></argument>, <argument pos:start="133:32" pos:end="133:44"><expr pos:start="133:32" pos:end="133:44"><name pos:start="133:32" pos:end="133:44">SubDescriptor</name></expr></argument>, <argument pos:start="133:47" pos:end="133:47"><expr pos:start="133:47" pos:end="133:47"><literal type="number" pos:start="133:47" pos:end="133:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="139:5" pos:end="139:27">// write timecode track</comment>

    <expr_stmt pos:start="141:5" pos:end="141:50"><expr pos:start="141:5" pos:end="141:49"><call pos:start="141:5" pos:end="141:49"><name pos:start="141:5" pos:end="141:19">mxf_write_track</name><argument_list pos:start="141:20" pos:end="141:49">(<argument pos:start="141:21" pos:end="141:21"><expr pos:start="141:21" pos:end="141:21"><name pos:start="141:21" pos:end="141:21">s</name></expr></argument>, <argument pos:start="141:24" pos:end="141:42"><expr pos:start="141:24" pos:end="141:42"><name pos:start="141:24" pos:end="141:42"><name pos:start="141:24" pos:end="141:26">mxf</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:42">timecode_track</name></name></expr></argument>, <argument pos:start="141:45" pos:end="141:48"><expr pos:start="141:45" pos:end="141:48"><name pos:start="141:45" pos:end="141:48">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:53"><expr pos:start="143:5" pos:end="143:52"><call pos:start="143:5" pos:end="143:52"><name pos:start="143:5" pos:end="143:22">mxf_write_sequence</name><argument_list pos:start="143:23" pos:end="143:52">(<argument pos:start="143:24" pos:end="143:24"><expr pos:start="143:24" pos:end="143:24"><name pos:start="143:24" pos:end="143:24">s</name></expr></argument>, <argument pos:start="143:27" pos:end="143:45"><expr pos:start="143:27" pos:end="143:45"><name pos:start="143:27" pos:end="143:45"><name pos:start="143:27" pos:end="143:29">mxf</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:45">timecode_track</name></name></expr></argument>, <argument pos:start="143:48" pos:end="143:51"><expr pos:start="143:48" pos:end="143:51"><name pos:start="143:48" pos:end="143:51">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:63"><expr pos:start="145:5" pos:end="145:62"><call pos:start="145:5" pos:end="145:62"><name pos:start="145:5" pos:end="145:32">mxf_write_timecode_component</name><argument_list pos:start="145:33" pos:end="145:62">(<argument pos:start="145:34" pos:end="145:34"><expr pos:start="145:34" pos:end="145:34"><name pos:start="145:34" pos:end="145:34">s</name></expr></argument>, <argument pos:start="145:37" pos:end="145:55"><expr pos:start="145:37" pos:end="145:55"><name pos:start="145:37" pos:end="145:55"><name pos:start="145:37" pos:end="145:39">mxf</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:55">timecode_track</name></name></expr></argument>, <argument pos:start="145:58" pos:end="145:61"><expr pos:start="145:58" pos:end="145:61"><name pos:start="145:58" pos:end="145:61">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="149:5" pos:end="169:5">for <control pos:start="149:9" pos:end="149:39">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:34"><expr pos:start="149:17" pos:end="149:33"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <name pos:start="149:21" pos:end="149:33"><name pos:start="149:21" pos:end="149:21">s</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:33">nb_streams</name></name></expr>;</condition> <incr pos:start="149:36" pos:end="149:38"><expr pos:start="149:36" pos:end="149:38"><name pos:start="149:36" pos:end="149:36">i</name><operator pos:start="149:37" pos:end="149:38">++</operator></expr></incr>)</control> <block pos:start="149:41" pos:end="169:5">{<block_content pos:start="151:9" pos:end="167:9">

        <decl_stmt pos:start="151:9" pos:end="151:37"><decl pos:start="151:9" pos:end="151:36"><type pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:16">AVStream</name> <modifier pos:start="151:18" pos:end="151:18">*</modifier></type><name pos:start="151:19" pos:end="151:20">st</name> <init pos:start="151:22" pos:end="151:36">= <expr pos:start="151:24" pos:end="151:36"><name pos:start="151:24" pos:end="151:36"><name pos:start="151:24" pos:end="151:24">s</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:33">streams</name><index pos:start="151:34" pos:end="151:36">[<expr pos:start="151:35" pos:end="151:35"><name pos:start="151:35" pos:end="151:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:37"><expr pos:start="153:9" pos:end="153:36"><call pos:start="153:9" pos:end="153:36"><name pos:start="153:9" pos:end="153:23">mxf_write_track</name><argument_list pos:start="153:24" pos:end="153:36">(<argument pos:start="153:25" pos:end="153:25"><expr pos:start="153:25" pos:end="153:25"><name pos:start="153:25" pos:end="153:25">s</name></expr></argument>, <argument pos:start="153:28" pos:end="153:29"><expr pos:start="153:28" pos:end="153:29"><name pos:start="153:28" pos:end="153:29">st</name></expr></argument>, <argument pos:start="153:32" pos:end="153:35"><expr pos:start="153:32" pos:end="153:35"><name pos:start="153:32" pos:end="153:35">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:40"><expr pos:start="155:9" pos:end="155:39"><call pos:start="155:9" pos:end="155:39"><name pos:start="155:9" pos:end="155:26">mxf_write_sequence</name><argument_list pos:start="155:27" pos:end="155:39">(<argument pos:start="155:28" pos:end="155:28"><expr pos:start="155:28" pos:end="155:28"><name pos:start="155:28" pos:end="155:28">s</name></expr></argument>, <argument pos:start="155:31" pos:end="155:32"><expr pos:start="155:31" pos:end="155:32"><name pos:start="155:31" pos:end="155:32">st</name></expr></argument>, <argument pos:start="155:35" pos:end="155:38"><expr pos:start="155:35" pos:end="155:38"><name pos:start="155:35" pos:end="155:38">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:52"><expr pos:start="157:9" pos:end="157:51"><call pos:start="157:9" pos:end="157:51"><name pos:start="157:9" pos:end="157:38">mxf_write_structural_component</name><argument_list pos:start="157:39" pos:end="157:51">(<argument pos:start="157:40" pos:end="157:40"><expr pos:start="157:40" pos:end="157:40"><name pos:start="157:40" pos:end="157:40">s</name></expr></argument>, <argument pos:start="157:43" pos:end="157:44"><expr pos:start="157:43" pos:end="157:44"><name pos:start="157:43" pos:end="157:44">st</name></expr></argument>, <argument pos:start="157:47" pos:end="157:50"><expr pos:start="157:47" pos:end="157:50"><name pos:start="157:47" pos:end="157:50">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="161:9" pos:end="167:9"><if pos:start="161:9" pos:end="167:9">if <condition pos:start="161:12" pos:end="161:34">(<expr pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:16">type</name> <operator pos:start="161:18" pos:end="161:19">==</operator> <name pos:start="161:21" pos:end="161:33">SourcePackage</name></expr>)</condition> <block pos:start="161:36" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:67">

            <decl_stmt pos:start="163:13" pos:end="163:49"><decl pos:start="163:13" pos:end="163:48"><type pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:28">MXFStreamContext</name> <modifier pos:start="163:30" pos:end="163:30">*</modifier></type><name pos:start="163:31" pos:end="163:32">sc</name> <init pos:start="163:34" pos:end="163:48">= <expr pos:start="163:36" pos:end="163:48"><name pos:start="163:36" pos:end="163:48"><name pos:start="163:36" pos:end="163:37">st</name><operator pos:start="163:38" pos:end="163:39">-&gt;</operator><name pos:start="163:40" pos:end="163:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:67"><expr pos:start="165:13" pos:end="165:66"><name pos:start="165:13" pos:end="165:48"><name pos:start="165:13" pos:end="165:37">mxf_essence_container_uls</name><index pos:start="165:38" pos:end="165:48">[<expr pos:start="165:39" pos:end="165:47"><name pos:start="165:39" pos:end="165:47"><name pos:start="165:39" pos:end="165:40">sc</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:47">index</name></name></expr>]</index></name><operator pos:start="165:49" pos:end="165:49">.</operator><call pos:start="165:50" pos:end="165:66"><name pos:start="165:50" pos:end="165:59">write_desc</name><argument_list pos:start="165:60" pos:end="165:66">(<argument pos:start="165:61" pos:end="165:61"><expr pos:start="165:61" pos:end="165:61"><name pos:start="165:61" pos:end="165:61">s</name></expr></argument>, <argument pos:start="165:64" pos:end="165:65"><expr pos:start="165:64" pos:end="165:65"><name pos:start="165:64" pos:end="165:65">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
