<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1660.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">encode_subband_c0run</name><parameter_list pos:start="1:32" pos:end="1:119">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">SnowContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:55">SubBand</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">b</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">DWTELEM</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">src</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:89"><decl pos:start="1:75" pos:end="1:89"><type pos:start="1:75" pos:end="1:89"><name pos:start="1:75" pos:end="1:81">DWTELEM</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:89">parent</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:101"><decl pos:start="1:92" pos:end="1:101"><type pos:start="1:92" pos:end="1:101"><name pos:start="1:92" pos:end="1:94">int</name></type> <name pos:start="1:96" pos:end="1:101">stride</name></decl></parameter>, <parameter pos:start="1:104" pos:end="1:118"><decl pos:start="1:104" pos:end="1:118"><type pos:start="1:104" pos:end="1:118"><name pos:start="1:104" pos:end="1:106">int</name></type> <name pos:start="1:108" pos:end="1:118">orientation</name></decl></parameter>)</parameter_list><block pos:start="1:120" pos:end="227:1">{<block_content pos:start="3:5" pos:end="225:13">

    <decl_stmt pos:start="3:5" pos:end="3:26"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:15">w</name><init pos:start="3:16" pos:end="3:25">= <expr pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:18">b</name><operator pos:start="3:19" pos:end="3:20">-&gt;</operator><name pos:start="3:21" pos:end="3:25">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">h</name><init pos:start="5:16" pos:end="5:26">= <expr pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:18">b</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:26">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">y</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="223:5"><if pos:start="11:5" pos:end="223:5">if<condition pos:start="11:7" pos:end="11:9">(<expr pos:start="11:8" pos:end="11:8"><literal type="number" pos:start="11:8" pos:end="11:8">1</literal></expr>)</condition><block pos:start="11:10" pos:end="223:5">{<block_content pos:start="13:9" pos:end="221:9">

        <decl_stmt pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">run</name><init pos:start="13:16" pos:end="13:17">=<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:22"><decl pos:start="15:9" pos:end="15:21"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:16">runs</name><index pos:start="15:17" pos:end="15:21">[<expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:18">w</name><operator pos:start="15:19" pos:end="15:19">*</operator><name pos:start="15:20" pos:end="15:20">h</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:24"><decl pos:start="17:9" pos:end="17:23"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:21">run_index</name><init pos:start="17:22" pos:end="17:23">=<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>

                

        <for pos:start="21:9" pos:end="95:9">for<control pos:start="21:12" pos:end="21:26">(<init pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">y</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</init> <condition pos:start="21:18" pos:end="21:21"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:18">y</name><operator pos:start="21:19" pos:end="21:19">&lt;</operator><name pos:start="21:20" pos:end="21:20">h</name></expr>;</condition> <incr pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">y</name><operator pos:start="21:24" pos:end="21:25">++</operator></expr></incr>)</control><block pos:start="21:27" pos:end="95:9">{<block_content pos:start="23:13" pos:end="93:13">

            <for pos:start="23:13" pos:end="93:13">for<control pos:start="23:16" pos:end="23:30">(<init pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">x</name><operator pos:start="23:18" pos:end="23:18">=</operator><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>;</init> <condition pos:start="23:22" pos:end="23:25"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:22">x</name><operator pos:start="23:23" pos:end="23:23">&lt;</operator><name pos:start="23:24" pos:end="23:24">w</name></expr>;</condition> <incr pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:27">x</name><operator pos:start="23:28" pos:end="23:29">++</operator></expr></incr>)</control><block pos:start="23:31" pos:end="93:13">{<block_content pos:start="25:17" pos:end="91:17">

                <decl_stmt pos:start="25:17" pos:end="25:27"><decl pos:start="25:17" pos:end="25:21"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:21">v</name></decl>, <decl pos:start="25:24" pos:end="25:26"><type ref="prev" pos:start="25:17" pos:end="25:19"/><name pos:start="25:24" pos:end="25:24">p</name><init pos:start="25:25" pos:end="25:26">=<expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="27:17" pos:end="27:51"><decl pos:start="27:17" pos:end="27:33"><type pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">int</name></type> <comment type="block" pos:start="27:21" pos:end="27:30">/*ll=0, */</comment><name pos:start="27:31" pos:end="27:31">l</name><init pos:start="27:32" pos:end="27:33">=<expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr></init></decl>, <decl pos:start="27:36" pos:end="27:39"><type ref="prev" pos:start="27:17" pos:end="27:19"/><name pos:start="27:36" pos:end="27:37">lt</name><init pos:start="27:38" pos:end="27:39">=<expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr></init></decl>, <decl pos:start="27:42" pos:end="27:44"><type ref="prev" pos:start="27:17" pos:end="27:19"/><name pos:start="27:42" pos:end="27:42">t</name><init pos:start="27:43" pos:end="27:44">=<expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr></init></decl>, <decl pos:start="27:47" pos:end="27:50"><type ref="prev" pos:start="27:17" pos:end="27:19"/><name pos:start="27:47" pos:end="27:48">rt</name><init pos:start="27:49" pos:end="27:50">=<expr pos:start="27:50" pos:end="27:50"><literal type="number" pos:start="27:50" pos:end="27:50">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:37"><expr pos:start="29:17" pos:end="29:36"><name pos:start="29:17" pos:end="29:17">v</name><operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:36"><name pos:start="29:20" pos:end="29:22">src</name><index pos:start="29:23" pos:end="29:36">[<expr pos:start="29:24" pos:end="29:35"><name pos:start="29:24" pos:end="29:24">x</name> <operator pos:start="29:26" pos:end="29:26">+</operator> <name pos:start="29:28" pos:end="29:28">y</name><operator pos:start="29:29" pos:end="29:29">*</operator><name pos:start="29:30" pos:end="29:35">stride</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="33:17" pos:end="49:17"><if pos:start="33:17" pos:end="49:17">if<condition pos:start="33:19" pos:end="33:21">(<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">y</name></expr>)</condition><block pos:start="33:22" pos:end="49:17">{<block_content pos:start="35:21" pos:end="47:21">

                    <expr_stmt pos:start="35:21" pos:end="35:45"><expr pos:start="35:21" pos:end="35:44"><name pos:start="35:21" pos:end="35:21">t</name><operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:44"><name pos:start="35:24" pos:end="35:26">src</name><index pos:start="35:27" pos:end="35:44">[<expr pos:start="35:28" pos:end="35:43"><name pos:start="35:28" pos:end="35:28">x</name> <operator pos:start="35:30" pos:end="35:30">+</operator> <operator pos:start="35:32" pos:end="35:32">(</operator><name pos:start="35:33" pos:end="35:33">y</name><operator pos:start="35:34" pos:end="35:34">-</operator><literal type="number" pos:start="35:35" pos:end="35:35">1</literal><operator pos:start="35:36" pos:end="35:36">)</operator><operator pos:start="35:37" pos:end="35:37">*</operator><name pos:start="35:38" pos:end="35:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="37:21" pos:end="41:21"><if pos:start="37:21" pos:end="41:21">if<condition pos:start="37:23" pos:end="37:25">(<expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">x</name></expr>)</condition><block pos:start="37:26" pos:end="41:21">{<block_content pos:start="39:25" pos:end="39:54">

                        <expr_stmt pos:start="39:25" pos:end="39:54"><expr pos:start="39:25" pos:end="39:53"><name pos:start="39:25" pos:end="39:26">lt</name><operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:53"><name pos:start="39:29" pos:end="39:31">src</name><index pos:start="39:32" pos:end="39:53">[<expr pos:start="39:33" pos:end="39:52"><name pos:start="39:33" pos:end="39:33">x</name> <operator pos:start="39:35" pos:end="39:35">-</operator> <literal type="number" pos:start="39:37" pos:end="39:39">1</literal> <operator pos:start="39:39" pos:end="39:39">+</operator> <operator pos:start="39:41" pos:end="39:41">(</operator><name pos:start="39:42" pos:end="39:42">y</name><operator pos:start="39:43" pos:end="39:43">-</operator><literal type="number" pos:start="39:44" pos:end="39:44">1</literal><operator pos:start="39:45" pos:end="39:45">)</operator><operator pos:start="39:46" pos:end="39:46">*</operator><name pos:start="39:47" pos:end="39:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="43:21" pos:end="47:21"><if pos:start="43:21" pos:end="47:21">if<condition pos:start="43:23" pos:end="43:33">(<expr pos:start="43:24" pos:end="43:32"><name pos:start="43:24" pos:end="43:24">x</name> <operator pos:start="43:26" pos:end="43:26">+</operator> <literal type="number" pos:start="43:28" pos:end="43:28">1</literal> <operator pos:start="43:30" pos:end="43:30">&lt;</operator> <name pos:start="43:32" pos:end="43:32">w</name></expr>)</condition><block pos:start="43:34" pos:end="47:21">{<block_content pos:start="45:25" pos:end="45:54">

                        <expr_stmt pos:start="45:25" pos:end="45:54"><expr pos:start="45:25" pos:end="45:53"><name pos:start="45:25" pos:end="45:26">rt</name><operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:53"><name pos:start="45:29" pos:end="45:31">src</name><index pos:start="45:32" pos:end="45:53">[<expr pos:start="45:33" pos:end="45:52"><name pos:start="45:33" pos:end="45:33">x</name> <operator pos:start="45:35" pos:end="45:35">+</operator> <literal type="number" pos:start="45:37" pos:end="45:39">1</literal> <operator pos:start="45:39" pos:end="45:39">+</operator> <operator pos:start="45:41" pos:end="45:41">(</operator><name pos:start="45:42" pos:end="45:42">y</name><operator pos:start="45:43" pos:end="45:43">-</operator><literal type="number" pos:start="45:44" pos:end="45:44">1</literal><operator pos:start="45:45" pos:end="45:45">)</operator><operator pos:start="45:46" pos:end="45:46">*</operator><name pos:start="45:47" pos:end="45:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="51:17" pos:end="63:17"><if pos:start="51:17" pos:end="63:17">if<condition pos:start="51:19" pos:end="51:21">(<expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">x</name></expr>)</condition><block pos:start="51:22" pos:end="63:17">{<block_content pos:start="53:21" pos:end="53:45">

                    <expr_stmt pos:start="53:21" pos:end="53:45"><expr pos:start="53:21" pos:end="53:44"><name pos:start="53:21" pos:end="53:21">l</name><operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:44"><name pos:start="53:24" pos:end="53:26">src</name><index pos:start="53:27" pos:end="53:44">[<expr pos:start="53:28" pos:end="53:43"><name pos:start="53:28" pos:end="53:28">x</name> <operator pos:start="53:30" pos:end="53:30">-</operator> <literal type="number" pos:start="53:32" pos:end="53:34">1</literal> <operator pos:start="53:34" pos:end="53:34">+</operator> <name pos:start="53:36" pos:end="53:36">y</name><operator pos:start="53:37" pos:end="53:37">*</operator><name pos:start="53:38" pos:end="53:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="55:21" pos:end="61:23">/*if(x &gt; 1){

                        if(orientation==1) ll= src[y + (x-2)*stride];

                        else               ll= src[x - 2 + y*stride];

                    }*/</comment>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="75:17"><if pos:start="65:17" pos:end="75:17">if<condition pos:start="65:19" pos:end="65:26">(<expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:25">parent</name></expr>)</condition><block pos:start="65:27" pos:end="75:17">{<block_content pos:start="67:21" pos:end="73:52">

                    <decl_stmt pos:start="67:21" pos:end="67:33"><decl pos:start="67:21" pos:end="67:32"><type pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">int</name></type> <name pos:start="67:25" pos:end="67:26">px</name><init pos:start="67:27" pos:end="67:32">= <expr pos:start="67:29" pos:end="67:32"><name pos:start="67:29" pos:end="67:29">x</name><operator pos:start="67:30" pos:end="67:31">&gt;&gt;</operator><literal type="number" pos:start="67:32" pos:end="67:32">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="69:21" pos:end="69:33"><decl pos:start="69:21" pos:end="69:32"><type pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">int</name></type> <name pos:start="69:25" pos:end="69:26">py</name><init pos:start="69:27" pos:end="69:32">= <expr pos:start="69:29" pos:end="69:32"><name pos:start="69:29" pos:end="69:29">y</name><operator pos:start="69:30" pos:end="69:31">&gt;&gt;</operator><literal type="number" pos:start="69:32" pos:end="69:32">1</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="71:21" pos:end="73:52"><if pos:start="71:21" pos:end="73:52">if<condition pos:start="71:23" pos:end="71:67">(<expr pos:start="71:24" pos:end="71:66"><name pos:start="71:24" pos:end="71:25">px</name><operator pos:start="71:26" pos:end="71:26">&lt;</operator><name pos:start="71:27" pos:end="71:42"><name pos:start="71:27" pos:end="71:27">b</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:35">parent</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:42">width</name></name> <operator pos:start="71:44" pos:end="71:45">&amp;&amp;</operator> <name pos:start="71:47" pos:end="71:48">py</name><operator pos:start="71:49" pos:end="71:49">&lt;</operator><name pos:start="71:50" pos:end="71:66"><name pos:start="71:50" pos:end="71:50">b</name><operator pos:start="71:51" pos:end="71:52">-&gt;</operator><name pos:start="71:53" pos:end="71:58">parent</name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:66">height</name></name></expr>)</condition><block type="pseudo" pos:start="73:25" pos:end="73:52"><block_content pos:start="73:25" pos:end="73:52"> 

                        <expr_stmt pos:start="73:25" pos:end="73:52"><expr pos:start="73:25" pos:end="73:51"><name pos:start="73:25" pos:end="73:25">p</name><operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:51"><name pos:start="73:28" pos:end="73:33">parent</name><index pos:start="73:34" pos:end="73:51">[<expr pos:start="73:35" pos:end="73:50"><name pos:start="73:35" pos:end="73:36">px</name> <operator pos:start="73:38" pos:end="73:38">+</operator> <name pos:start="73:40" pos:end="73:41">py</name><operator pos:start="73:42" pos:end="73:42">*</operator><literal type="number" pos:start="73:43" pos:end="73:43">2</literal><operator pos:start="73:44" pos:end="73:44">*</operator><name pos:start="73:45" pos:end="73:50">stride</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="77:17" pos:end="91:17"><if pos:start="77:17" pos:end="91:17">if<condition pos:start="77:19" pos:end="77:41">(<expr pos:start="77:20" pos:end="77:40"><operator pos:start="77:20" pos:end="77:20">!</operator><operator pos:start="77:21" pos:end="77:21">(</operator><comment type="block" pos:start="77:22" pos:end="77:28">/*ll|*/</comment><name pos:start="77:29" pos:end="77:29">l</name><operator pos:start="77:30" pos:end="77:30">|</operator><name pos:start="77:31" pos:end="77:32">lt</name><operator pos:start="77:33" pos:end="77:33">|</operator><name pos:start="77:34" pos:end="77:34">t</name><operator pos:start="77:35" pos:end="77:35">|</operator><name pos:start="77:36" pos:end="77:37">rt</name><operator pos:start="77:38" pos:end="77:38">|</operator><name pos:start="77:39" pos:end="77:39">p</name><operator pos:start="77:40" pos:end="77:40">)</operator></expr>)</condition><block pos:start="77:42" pos:end="91:17">{<block_content pos:start="79:21" pos:end="89:21">

                    <if_stmt pos:start="79:21" pos:end="89:21"><if pos:start="79:21" pos:end="85:21">if<condition pos:start="79:23" pos:end="79:25">(<expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">v</name></expr>)</condition><block pos:start="79:26" pos:end="85:21">{<block_content pos:start="81:25" pos:end="83:30">

                        <expr_stmt pos:start="81:25" pos:end="81:47"><expr pos:start="81:25" pos:end="81:46"><name pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:28">runs</name><index pos:start="81:29" pos:end="81:41">[<expr pos:start="81:30" pos:end="81:40"><name pos:start="81:30" pos:end="81:38">run_index</name><operator pos:start="81:39" pos:end="81:40">++</operator></expr>]</index></name><operator pos:start="81:42" pos:end="81:42">=</operator> <name pos:start="81:44" pos:end="81:46">run</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:30"><expr pos:start="83:25" pos:end="83:29"><name pos:start="83:25" pos:end="83:27">run</name><operator pos:start="83:28" pos:end="83:28">=</operator><literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="85:22" pos:end="89:21">else<block pos:start="85:26" pos:end="89:21">{<block_content pos:start="87:25" pos:end="87:30">

                        <expr_stmt pos:start="87:25" pos:end="87:30"><expr pos:start="87:25" pos:end="87:29"><name pos:start="87:25" pos:end="87:27">run</name><operator pos:start="87:28" pos:end="87:29">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:12">runs</name><index pos:start="97:13" pos:end="97:25">[<expr pos:start="97:14" pos:end="97:24"><name pos:start="97:14" pos:end="97:22">run_index</name><operator pos:start="97:23" pos:end="97:24">++</operator></expr>]</index></name><operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:30">run</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:20"><expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:17">run_index</name><operator pos:start="99:18" pos:end="99:18">=</operator><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:11">run</name><operator pos:start="101:12" pos:end="101:12">=</operator> <name pos:start="101:14" pos:end="101:30"><name pos:start="101:14" pos:end="101:17">runs</name><index pos:start="101:18" pos:end="101:30">[<expr pos:start="101:19" pos:end="101:29"><name pos:start="101:19" pos:end="101:27">run_index</name><operator pos:start="101:28" pos:end="101:29">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:48"><expr pos:start="105:9" pos:end="105:47"><call pos:start="105:9" pos:end="105:47"><name pos:start="105:9" pos:end="105:19">put_symbol2</name><argument_list pos:start="105:20" pos:end="105:47">(<argument pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:25"><operator pos:start="105:21" pos:end="105:21">&amp;</operator><name pos:start="105:22" pos:end="105:25"><name pos:start="105:22" pos:end="105:22">s</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:25">c</name></name></expr></argument>, <argument pos:start="105:28" pos:end="105:38"><expr pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:28">b</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:35">state</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><literal type="number" pos:start="105:37" pos:end="105:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:41" pos:end="105:43"><expr pos:start="105:41" pos:end="105:43"><name pos:start="105:41" pos:end="105:43">run</name></expr></argument>, <argument pos:start="105:46" pos:end="105:46"><expr pos:start="105:46" pos:end="105:46"><literal type="number" pos:start="105:46" pos:end="105:46">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <for pos:start="109:9" pos:end="221:9">for<control pos:start="109:12" pos:end="109:26">(<init pos:start="109:13" pos:end="109:16"><expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:13">y</name><operator pos:start="109:14" pos:end="109:14">=</operator><literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>;</init> <condition pos:start="109:18" pos:end="109:21"><expr pos:start="109:18" pos:end="109:20"><name pos:start="109:18" pos:end="109:18">y</name><operator pos:start="109:19" pos:end="109:19">&lt;</operator><name pos:start="109:20" pos:end="109:20">h</name></expr>;</condition> <incr pos:start="109:23" pos:end="109:25"><expr pos:start="109:23" pos:end="109:25"><name pos:start="109:23" pos:end="109:23">y</name><operator pos:start="109:24" pos:end="109:25">++</operator></expr></incr>)</control><block pos:start="109:27" pos:end="221:9">{<block_content pos:start="111:13" pos:end="219:13">

            <if_stmt pos:start="111:13" pos:end="117:13"><if pos:start="111:13" pos:end="117:13">if<condition pos:start="111:15" pos:end="111:60">(<expr pos:start="111:16" pos:end="111:59"><name pos:start="111:16" pos:end="111:34"><name pos:start="111:16" pos:end="111:16">s</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:19">c</name><operator pos:start="111:20" pos:end="111:20">.</operator><name pos:start="111:21" pos:end="111:34">bytestream_end</name></name> <operator pos:start="111:36" pos:end="111:36">-</operator> <name pos:start="111:38" pos:end="111:52"><name pos:start="111:38" pos:end="111:38">s</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:41">c</name><operator pos:start="111:42" pos:end="111:42">.</operator><name pos:start="111:43" pos:end="111:52">bytestream</name></name> <operator pos:start="111:54" pos:end="111:54">&lt;</operator> <name pos:start="111:56" pos:end="111:56">w</name><operator pos:start="111:57" pos:end="111:57">*</operator><literal type="number" pos:start="111:58" pos:end="111:59">40</literal></expr>)</condition><block pos:start="111:61" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:26">

                <expr_stmt pos:start="113:17" pos:end="113:76"><expr pos:start="113:17" pos:end="113:75"><call pos:start="113:17" pos:end="113:75"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:75">(<argument pos:start="113:24" pos:end="113:31"><expr pos:start="113:24" pos:end="113:31"><name pos:start="113:24" pos:end="113:31"><name pos:start="113:24" pos:end="113:24">s</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:31">avctx</name></name></expr></argument>, <argument pos:start="113:34" pos:end="113:45"><expr pos:start="113:34" pos:end="113:45"><name pos:start="113:34" pos:end="113:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:48" pos:end="113:74"><expr pos:start="113:48" pos:end="113:74"><literal type="string" pos:start="113:48" pos:end="113:74">"encoded frame too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="115:17" pos:end="115:26">return <expr pos:start="115:24" pos:end="115:25"><operator pos:start="115:24" pos:end="115:24">-</operator><literal type="number" pos:start="115:25" pos:end="115:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="119:13" pos:end="219:13">for<control pos:start="119:16" pos:end="119:30">(<init pos:start="119:17" pos:end="119:20"><expr pos:start="119:17" pos:end="119:19"><name pos:start="119:17" pos:end="119:17">x</name><operator pos:start="119:18" pos:end="119:18">=</operator><literal type="number" pos:start="119:19" pos:end="119:19">0</literal></expr>;</init> <condition pos:start="119:22" pos:end="119:25"><expr pos:start="119:22" pos:end="119:24"><name pos:start="119:22" pos:end="119:22">x</name><operator pos:start="119:23" pos:end="119:23">&lt;</operator><name pos:start="119:24" pos:end="119:24">w</name></expr>;</condition> <incr pos:start="119:27" pos:end="119:29"><expr pos:start="119:27" pos:end="119:29"><name pos:start="119:27" pos:end="119:27">x</name><operator pos:start="119:28" pos:end="119:29">++</operator></expr></incr>)</control><block pos:start="119:31" pos:end="219:13">{<block_content pos:start="121:17" pos:end="217:17">

                <decl_stmt pos:start="121:17" pos:end="121:27"><decl pos:start="121:17" pos:end="121:21"><type pos:start="121:17" pos:end="121:19"><name pos:start="121:17" pos:end="121:19">int</name></type> <name pos:start="121:21" pos:end="121:21">v</name></decl>, <decl pos:start="121:24" pos:end="121:26"><type ref="prev" pos:start="121:17" pos:end="121:19"/><name pos:start="121:24" pos:end="121:24">p</name><init pos:start="121:25" pos:end="121:26">=<expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="123:17" pos:end="123:51"><decl pos:start="123:17" pos:end="123:33"><type pos:start="123:17" pos:end="123:19"><name pos:start="123:17" pos:end="123:19">int</name></type> <comment type="block" pos:start="123:21" pos:end="123:30">/*ll=0, */</comment><name pos:start="123:31" pos:end="123:31">l</name><init pos:start="123:32" pos:end="123:33">=<expr pos:start="123:33" pos:end="123:33"><literal type="number" pos:start="123:33" pos:end="123:33">0</literal></expr></init></decl>, <decl pos:start="123:36" pos:end="123:39"><type ref="prev" pos:start="123:17" pos:end="123:19"/><name pos:start="123:36" pos:end="123:37">lt</name><init pos:start="123:38" pos:end="123:39">=<expr pos:start="123:39" pos:end="123:39"><literal type="number" pos:start="123:39" pos:end="123:39">0</literal></expr></init></decl>, <decl pos:start="123:42" pos:end="123:44"><type ref="prev" pos:start="123:17" pos:end="123:19"/><name pos:start="123:42" pos:end="123:42">t</name><init pos:start="123:43" pos:end="123:44">=<expr pos:start="123:44" pos:end="123:44"><literal type="number" pos:start="123:44" pos:end="123:44">0</literal></expr></init></decl>, <decl pos:start="123:47" pos:end="123:50"><type ref="prev" pos:start="123:17" pos:end="123:19"/><name pos:start="123:47" pos:end="123:48">rt</name><init pos:start="123:49" pos:end="123:50">=<expr pos:start="123:50" pos:end="123:50"><literal type="number" pos:start="123:50" pos:end="123:50">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:37"><expr pos:start="125:17" pos:end="125:36"><name pos:start="125:17" pos:end="125:17">v</name><operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:36"><name pos:start="125:20" pos:end="125:22">src</name><index pos:start="125:23" pos:end="125:36">[<expr pos:start="125:24" pos:end="125:35"><name pos:start="125:24" pos:end="125:24">x</name> <operator pos:start="125:26" pos:end="125:26">+</operator> <name pos:start="125:28" pos:end="125:28">y</name><operator pos:start="125:29" pos:end="125:29">*</operator><name pos:start="125:30" pos:end="125:35">stride</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="129:17" pos:end="145:17"><if pos:start="129:17" pos:end="145:17">if<condition pos:start="129:19" pos:end="129:21">(<expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">y</name></expr>)</condition><block pos:start="129:22" pos:end="145:17">{<block_content pos:start="131:21" pos:end="143:21">

                    <expr_stmt pos:start="131:21" pos:end="131:45"><expr pos:start="131:21" pos:end="131:44"><name pos:start="131:21" pos:end="131:21">t</name><operator pos:start="131:22" pos:end="131:22">=</operator> <name pos:start="131:24" pos:end="131:44"><name pos:start="131:24" pos:end="131:26">src</name><index pos:start="131:27" pos:end="131:44">[<expr pos:start="131:28" pos:end="131:43"><name pos:start="131:28" pos:end="131:28">x</name> <operator pos:start="131:30" pos:end="131:30">+</operator> <operator pos:start="131:32" pos:end="131:32">(</operator><name pos:start="131:33" pos:end="131:33">y</name><operator pos:start="131:34" pos:end="131:34">-</operator><literal type="number" pos:start="131:35" pos:end="131:35">1</literal><operator pos:start="131:36" pos:end="131:36">)</operator><operator pos:start="131:37" pos:end="131:37">*</operator><name pos:start="131:38" pos:end="131:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="133:21" pos:end="137:21"><if pos:start="133:21" pos:end="137:21">if<condition pos:start="133:23" pos:end="133:25">(<expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">x</name></expr>)</condition><block pos:start="133:26" pos:end="137:21">{<block_content pos:start="135:25" pos:end="135:54">

                        <expr_stmt pos:start="135:25" pos:end="135:54"><expr pos:start="135:25" pos:end="135:53"><name pos:start="135:25" pos:end="135:26">lt</name><operator pos:start="135:27" pos:end="135:27">=</operator> <name pos:start="135:29" pos:end="135:53"><name pos:start="135:29" pos:end="135:31">src</name><index pos:start="135:32" pos:end="135:53">[<expr pos:start="135:33" pos:end="135:52"><name pos:start="135:33" pos:end="135:33">x</name> <operator pos:start="135:35" pos:end="135:35">-</operator> <literal type="number" pos:start="135:37" pos:end="135:39">1</literal> <operator pos:start="135:39" pos:end="135:39">+</operator> <operator pos:start="135:41" pos:end="135:41">(</operator><name pos:start="135:42" pos:end="135:42">y</name><operator pos:start="135:43" pos:end="135:43">-</operator><literal type="number" pos:start="135:44" pos:end="135:44">1</literal><operator pos:start="135:45" pos:end="135:45">)</operator><operator pos:start="135:46" pos:end="135:46">*</operator><name pos:start="135:47" pos:end="135:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="139:21" pos:end="143:21"><if pos:start="139:21" pos:end="143:21">if<condition pos:start="139:23" pos:end="139:33">(<expr pos:start="139:24" pos:end="139:32"><name pos:start="139:24" pos:end="139:24">x</name> <operator pos:start="139:26" pos:end="139:26">+</operator> <literal type="number" pos:start="139:28" pos:end="139:28">1</literal> <operator pos:start="139:30" pos:end="139:30">&lt;</operator> <name pos:start="139:32" pos:end="139:32">w</name></expr>)</condition><block pos:start="139:34" pos:end="143:21">{<block_content pos:start="141:25" pos:end="141:54">

                        <expr_stmt pos:start="141:25" pos:end="141:54"><expr pos:start="141:25" pos:end="141:53"><name pos:start="141:25" pos:end="141:26">rt</name><operator pos:start="141:27" pos:end="141:27">=</operator> <name pos:start="141:29" pos:end="141:53"><name pos:start="141:29" pos:end="141:31">src</name><index pos:start="141:32" pos:end="141:53">[<expr pos:start="141:33" pos:end="141:52"><name pos:start="141:33" pos:end="141:33">x</name> <operator pos:start="141:35" pos:end="141:35">+</operator> <literal type="number" pos:start="141:37" pos:end="141:39">1</literal> <operator pos:start="141:39" pos:end="141:39">+</operator> <operator pos:start="141:41" pos:end="141:41">(</operator><name pos:start="141:42" pos:end="141:42">y</name><operator pos:start="141:43" pos:end="141:43">-</operator><literal type="number" pos:start="141:44" pos:end="141:44">1</literal><operator pos:start="141:45" pos:end="141:45">)</operator><operator pos:start="141:46" pos:end="141:46">*</operator><name pos:start="141:47" pos:end="141:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="147:17" pos:end="159:17"><if pos:start="147:17" pos:end="159:17">if<condition pos:start="147:19" pos:end="147:21">(<expr pos:start="147:20" pos:end="147:20"><name pos:start="147:20" pos:end="147:20">x</name></expr>)</condition><block pos:start="147:22" pos:end="159:17">{<block_content pos:start="149:21" pos:end="149:45">

                    <expr_stmt pos:start="149:21" pos:end="149:45"><expr pos:start="149:21" pos:end="149:44"><name pos:start="149:21" pos:end="149:21">l</name><operator pos:start="149:22" pos:end="149:22">=</operator> <name pos:start="149:24" pos:end="149:44"><name pos:start="149:24" pos:end="149:26">src</name><index pos:start="149:27" pos:end="149:44">[<expr pos:start="149:28" pos:end="149:43"><name pos:start="149:28" pos:end="149:28">x</name> <operator pos:start="149:30" pos:end="149:30">-</operator> <literal type="number" pos:start="149:32" pos:end="149:34">1</literal> <operator pos:start="149:34" pos:end="149:34">+</operator> <name pos:start="149:36" pos:end="149:36">y</name><operator pos:start="149:37" pos:end="149:37">*</operator><name pos:start="149:38" pos:end="149:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="151:21" pos:end="157:23">/*if(x &gt; 1){

                        if(orientation==1) ll= src[y + (x-2)*stride];

                        else               ll= src[x - 2 + y*stride];

                    }*/</comment>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="161:17" pos:end="171:17"><if pos:start="161:17" pos:end="171:17">if<condition pos:start="161:19" pos:end="161:26">(<expr pos:start="161:20" pos:end="161:25"><name pos:start="161:20" pos:end="161:25">parent</name></expr>)</condition><block pos:start="161:27" pos:end="171:17">{<block_content pos:start="163:21" pos:end="169:52">

                    <decl_stmt pos:start="163:21" pos:end="163:33"><decl pos:start="163:21" pos:end="163:32"><type pos:start="163:21" pos:end="163:23"><name pos:start="163:21" pos:end="163:23">int</name></type> <name pos:start="163:25" pos:end="163:26">px</name><init pos:start="163:27" pos:end="163:32">= <expr pos:start="163:29" pos:end="163:32"><name pos:start="163:29" pos:end="163:29">x</name><operator pos:start="163:30" pos:end="163:31">&gt;&gt;</operator><literal type="number" pos:start="163:32" pos:end="163:32">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="165:21" pos:end="165:33"><decl pos:start="165:21" pos:end="165:32"><type pos:start="165:21" pos:end="165:23"><name pos:start="165:21" pos:end="165:23">int</name></type> <name pos:start="165:25" pos:end="165:26">py</name><init pos:start="165:27" pos:end="165:32">= <expr pos:start="165:29" pos:end="165:32"><name pos:start="165:29" pos:end="165:29">y</name><operator pos:start="165:30" pos:end="165:31">&gt;&gt;</operator><literal type="number" pos:start="165:32" pos:end="165:32">1</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="167:21" pos:end="169:52"><if pos:start="167:21" pos:end="169:52">if<condition pos:start="167:23" pos:end="167:67">(<expr pos:start="167:24" pos:end="167:66"><name pos:start="167:24" pos:end="167:25">px</name><operator pos:start="167:26" pos:end="167:26">&lt;</operator><name pos:start="167:27" pos:end="167:42"><name pos:start="167:27" pos:end="167:27">b</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:35">parent</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:42">width</name></name> <operator pos:start="167:44" pos:end="167:45">&amp;&amp;</operator> <name pos:start="167:47" pos:end="167:48">py</name><operator pos:start="167:49" pos:end="167:49">&lt;</operator><name pos:start="167:50" pos:end="167:66"><name pos:start="167:50" pos:end="167:50">b</name><operator pos:start="167:51" pos:end="167:52">-&gt;</operator><name pos:start="167:53" pos:end="167:58">parent</name><operator pos:start="167:59" pos:end="167:60">-&gt;</operator><name pos:start="167:61" pos:end="167:66">height</name></name></expr>)</condition><block type="pseudo" pos:start="169:25" pos:end="169:52"><block_content pos:start="169:25" pos:end="169:52"> 

                        <expr_stmt pos:start="169:25" pos:end="169:52"><expr pos:start="169:25" pos:end="169:51"><name pos:start="169:25" pos:end="169:25">p</name><operator pos:start="169:26" pos:end="169:26">=</operator> <name pos:start="169:28" pos:end="169:51"><name pos:start="169:28" pos:end="169:33">parent</name><index pos:start="169:34" pos:end="169:51">[<expr pos:start="169:35" pos:end="169:50"><name pos:start="169:35" pos:end="169:36">px</name> <operator pos:start="169:38" pos:end="169:38">+</operator> <name pos:start="169:40" pos:end="169:41">py</name><operator pos:start="169:42" pos:end="169:42">*</operator><literal type="number" pos:start="169:43" pos:end="169:43">2</literal><operator pos:start="169:44" pos:end="169:44">*</operator><name pos:start="169:45" pos:end="169:50">stride</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="173:17" pos:end="201:17"><if pos:start="173:17" pos:end="181:17">if<condition pos:start="173:19" pos:end="173:38">(<comment type="block" pos:start="173:20" pos:end="173:26">/*ll|*/</comment><expr pos:start="173:27" pos:end="173:37"><name pos:start="173:27" pos:end="173:27">l</name><operator pos:start="173:28" pos:end="173:28">|</operator><name pos:start="173:29" pos:end="173:30">lt</name><operator pos:start="173:31" pos:end="173:31">|</operator><name pos:start="173:32" pos:end="173:32">t</name><operator pos:start="173:33" pos:end="173:33">|</operator><name pos:start="173:34" pos:end="173:35">rt</name><operator pos:start="173:36" pos:end="173:36">|</operator><name pos:start="173:37" pos:end="173:37">p</name></expr>)</condition><block pos:start="173:39" pos:end="181:17">{<block_content pos:start="175:21" pos:end="179:63">

                    <decl_stmt pos:start="175:21" pos:end="175:105"><decl pos:start="175:21" pos:end="175:104"><type pos:start="175:21" pos:end="175:23"><name pos:start="175:21" pos:end="175:23">int</name></type> <name pos:start="175:25" pos:end="175:31">context</name><init pos:start="175:32" pos:end="175:104">= <expr pos:start="175:34" pos:end="175:104"><call pos:start="175:34" pos:end="175:104"><name pos:start="175:34" pos:end="175:40">av_log2</name><argument_list pos:start="175:41" pos:end="175:104">(<comment type="block" pos:start="175:42" pos:end="175:55">/*ABS(ll) + */</comment><argument pos:start="175:56" pos:end="175:103"><expr pos:start="175:56" pos:end="175:103"><literal type="number" pos:start="175:56" pos:end="175:56">3</literal><operator pos:start="175:57" pos:end="175:57">*</operator><call pos:start="175:58" pos:end="175:63"><name pos:start="175:58" pos:end="175:60">ABS</name><argument_list pos:start="175:61" pos:end="175:63">(<argument pos:start="175:62" pos:end="175:62"><expr pos:start="175:62" pos:end="175:62"><name pos:start="175:62" pos:end="175:62">l</name></expr></argument>)</argument_list></call> <operator pos:start="175:65" pos:end="175:65">+</operator> <call pos:start="175:67" pos:end="175:73"><name pos:start="175:67" pos:end="175:69">ABS</name><argument_list pos:start="175:70" pos:end="175:73">(<argument pos:start="175:71" pos:end="175:72"><expr pos:start="175:71" pos:end="175:72"><name pos:start="175:71" pos:end="175:72">lt</name></expr></argument>)</argument_list></call> <operator pos:start="175:75" pos:end="175:75">+</operator> <literal type="number" pos:start="175:77" pos:end="175:77">2</literal><operator pos:start="175:78" pos:end="175:78">*</operator><call pos:start="175:79" pos:end="175:84"><name pos:start="175:79" pos:end="175:81">ABS</name><argument_list pos:start="175:82" pos:end="175:84">(<argument pos:start="175:83" pos:end="175:83"><expr pos:start="175:83" pos:end="175:83"><name pos:start="175:83" pos:end="175:83">t</name></expr></argument>)</argument_list></call> <operator pos:start="175:86" pos:end="175:86">+</operator> <call pos:start="175:88" pos:end="175:94"><name pos:start="175:88" pos:end="175:90">ABS</name><argument_list pos:start="175:91" pos:end="175:94">(<argument pos:start="175:92" pos:end="175:93"><expr pos:start="175:92" pos:end="175:93"><name pos:start="175:92" pos:end="175:93">rt</name></expr></argument>)</argument_list></call> <operator pos:start="175:96" pos:end="175:96">+</operator> <call pos:start="175:98" pos:end="175:103"><name pos:start="175:98" pos:end="175:100">ABS</name><argument_list pos:start="175:101" pos:end="175:103">(<argument pos:start="175:102" pos:end="175:102"><expr pos:start="175:102" pos:end="175:102"><name pos:start="175:102" pos:end="175:102">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="179:21" pos:end="179:63"><expr pos:start="179:21" pos:end="179:62"><call pos:start="179:21" pos:end="179:62"><name pos:start="179:21" pos:end="179:27">put_rac</name><argument_list pos:start="179:28" pos:end="179:62">(<argument pos:start="179:29" pos:end="179:33"><expr pos:start="179:29" pos:end="179:33"><operator pos:start="179:29" pos:end="179:29">&amp;</operator><name pos:start="179:30" pos:end="179:33"><name pos:start="179:30" pos:end="179:30">s</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:33">c</name></name></expr></argument>, <argument pos:start="179:36" pos:end="179:56"><expr pos:start="179:36" pos:end="179:56"><operator pos:start="179:36" pos:end="179:36">&amp;</operator><name pos:start="179:37" pos:end="179:56"><name pos:start="179:37" pos:end="179:37">b</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:44">state</name><index pos:start="179:45" pos:end="179:47">[<expr pos:start="179:46" pos:end="179:46"><literal type="number" pos:start="179:46" pos:end="179:46">0</literal></expr>]</index><index pos:start="179:48" pos:end="179:56">[<expr pos:start="179:49" pos:end="179:55"><name pos:start="179:49" pos:end="179:55">context</name></expr>]</index></name></expr></argument>, <argument pos:start="179:59" pos:end="179:61"><expr pos:start="179:59" pos:end="179:61"><operator pos:start="179:59" pos:end="179:59">!</operator><operator pos:start="179:60" pos:end="179:60">!</operator><name pos:start="179:61" pos:end="179:61">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="181:18" pos:end="201:17">else<block pos:start="181:22" pos:end="201:17">{<block_content pos:start="183:21" pos:end="199:21">

                    <if_stmt pos:start="183:21" pos:end="199:21"><if pos:start="183:21" pos:end="193:21">if<condition pos:start="183:23" pos:end="183:28">(<expr pos:start="183:24" pos:end="183:27"><operator pos:start="183:24" pos:end="183:24">!</operator><name pos:start="183:25" pos:end="183:27">run</name></expr>)</condition><block pos:start="183:29" pos:end="193:21">{<block_content pos:start="185:25" pos:end="191:34">

                        <expr_stmt pos:start="185:25" pos:end="185:47"><expr pos:start="185:25" pos:end="185:46"><name pos:start="185:25" pos:end="185:27">run</name><operator pos:start="185:28" pos:end="185:28">=</operator> <name pos:start="185:30" pos:end="185:46"><name pos:start="185:30" pos:end="185:33">runs</name><index pos:start="185:34" pos:end="185:46">[<expr pos:start="185:35" pos:end="185:45"><name pos:start="185:35" pos:end="185:43">run_index</name><operator pos:start="185:44" pos:end="185:45">++</operator></expr>]</index></name></expr>;</expr_stmt>



                        <expr_stmt pos:start="189:25" pos:end="189:64"><expr pos:start="189:25" pos:end="189:63"><call pos:start="189:25" pos:end="189:63"><name pos:start="189:25" pos:end="189:35">put_symbol2</name><argument_list pos:start="189:36" pos:end="189:63">(<argument pos:start="189:37" pos:end="189:41"><expr pos:start="189:37" pos:end="189:41"><operator pos:start="189:37" pos:end="189:37">&amp;</operator><name pos:start="189:38" pos:end="189:41"><name pos:start="189:38" pos:end="189:38">s</name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:41">c</name></name></expr></argument>, <argument pos:start="189:44" pos:end="189:54"><expr pos:start="189:44" pos:end="189:54"><name pos:start="189:44" pos:end="189:54"><name pos:start="189:44" pos:end="189:44">b</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:51">state</name><index pos:start="189:52" pos:end="189:54">[<expr pos:start="189:53" pos:end="189:53"><literal type="number" pos:start="189:53" pos:end="189:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="189:57" pos:end="189:59"><expr pos:start="189:57" pos:end="189:59"><name pos:start="189:57" pos:end="189:59">run</name></expr></argument>, <argument pos:start="189:62" pos:end="189:62"><expr pos:start="189:62" pos:end="189:62"><literal type="number" pos:start="189:62" pos:end="189:62">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="191:25" pos:end="191:34"><expr pos:start="191:25" pos:end="191:33"><call pos:start="191:25" pos:end="191:33"><name pos:start="191:25" pos:end="191:30">assert</name><argument_list pos:start="191:31" pos:end="191:33">(<argument pos:start="191:32" pos:end="191:32"><expr pos:start="191:32" pos:end="191:32"><name pos:start="191:32" pos:end="191:32">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="193:22" pos:end="199:21">else<block pos:start="193:26" pos:end="199:21">{<block_content pos:start="195:25" pos:end="197:35">

                        <expr_stmt pos:start="195:25" pos:end="195:30"><expr pos:start="195:25" pos:end="195:29"><name pos:start="195:25" pos:end="195:27">run</name><operator pos:start="195:28" pos:end="195:29">--</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="197:25" pos:end="197:35"><expr pos:start="197:25" pos:end="197:34"><call pos:start="197:25" pos:end="197:34"><name pos:start="197:25" pos:end="197:30">assert</name><argument_list pos:start="197:31" pos:end="197:34">(<argument pos:start="197:32" pos:end="197:33"><expr pos:start="197:32" pos:end="197:33"><operator pos:start="197:32" pos:end="197:32">!</operator><name pos:start="197:33" pos:end="197:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="203:17" pos:end="217:17"><if pos:start="203:17" pos:end="217:17">if<condition pos:start="203:19" pos:end="203:21">(<expr pos:start="203:20" pos:end="203:20"><name pos:start="203:20" pos:end="203:20">v</name></expr>)</condition><block pos:start="203:22" pos:end="217:17">{<block_content pos:start="205:21" pos:end="215:108">

                    <decl_stmt pos:start="205:21" pos:end="205:105"><decl pos:start="205:21" pos:end="205:104"><type pos:start="205:21" pos:end="205:23"><name pos:start="205:21" pos:end="205:23">int</name></type> <name pos:start="205:25" pos:end="205:31">context</name><init pos:start="205:32" pos:end="205:104">= <expr pos:start="205:34" pos:end="205:104"><call pos:start="205:34" pos:end="205:104"><name pos:start="205:34" pos:end="205:40">av_log2</name><argument_list pos:start="205:41" pos:end="205:104">(<comment type="block" pos:start="205:42" pos:end="205:55">/*ABS(ll) + */</comment><argument pos:start="205:56" pos:end="205:103"><expr pos:start="205:56" pos:end="205:103"><literal type="number" pos:start="205:56" pos:end="205:56">3</literal><operator pos:start="205:57" pos:end="205:57">*</operator><call pos:start="205:58" pos:end="205:63"><name pos:start="205:58" pos:end="205:60">ABS</name><argument_list pos:start="205:61" pos:end="205:63">(<argument pos:start="205:62" pos:end="205:62"><expr pos:start="205:62" pos:end="205:62"><name pos:start="205:62" pos:end="205:62">l</name></expr></argument>)</argument_list></call> <operator pos:start="205:65" pos:end="205:65">+</operator> <call pos:start="205:67" pos:end="205:73"><name pos:start="205:67" pos:end="205:69">ABS</name><argument_list pos:start="205:70" pos:end="205:73">(<argument pos:start="205:71" pos:end="205:72"><expr pos:start="205:71" pos:end="205:72"><name pos:start="205:71" pos:end="205:72">lt</name></expr></argument>)</argument_list></call> <operator pos:start="205:75" pos:end="205:75">+</operator> <literal type="number" pos:start="205:77" pos:end="205:77">2</literal><operator pos:start="205:78" pos:end="205:78">*</operator><call pos:start="205:79" pos:end="205:84"><name pos:start="205:79" pos:end="205:81">ABS</name><argument_list pos:start="205:82" pos:end="205:84">(<argument pos:start="205:83" pos:end="205:83"><expr pos:start="205:83" pos:end="205:83"><name pos:start="205:83" pos:end="205:83">t</name></expr></argument>)</argument_list></call> <operator pos:start="205:86" pos:end="205:86">+</operator> <call pos:start="205:88" pos:end="205:94"><name pos:start="205:88" pos:end="205:90">ABS</name><argument_list pos:start="205:91" pos:end="205:94">(<argument pos:start="205:92" pos:end="205:93"><expr pos:start="205:92" pos:end="205:93"><name pos:start="205:92" pos:end="205:93">rt</name></expr></argument>)</argument_list></call> <operator pos:start="205:96" pos:end="205:96">+</operator> <call pos:start="205:98" pos:end="205:103"><name pos:start="205:98" pos:end="205:100">ABS</name><argument_list pos:start="205:101" pos:end="205:103">(<argument pos:start="205:102" pos:end="205:102"><expr pos:start="205:102" pos:end="205:102"><name pos:start="205:102" pos:end="205:102">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="207:21" pos:end="207:45"><decl pos:start="207:21" pos:end="207:44"><type pos:start="207:21" pos:end="207:23"><name pos:start="207:21" pos:end="207:23">int</name></type> <name pos:start="207:25" pos:end="207:26">l2</name><init pos:start="207:27" pos:end="207:44">= <expr pos:start="207:29" pos:end="207:44"><literal type="number" pos:start="207:29" pos:end="207:29">2</literal><operator pos:start="207:30" pos:end="207:30">*</operator><call pos:start="207:31" pos:end="207:36"><name pos:start="207:31" pos:end="207:33">ABS</name><argument_list pos:start="207:34" pos:end="207:36">(<argument pos:start="207:35" pos:end="207:35"><expr pos:start="207:35" pos:end="207:35"><name pos:start="207:35" pos:end="207:35">l</name></expr></argument>)</argument_list></call> <operator pos:start="207:38" pos:end="207:38">+</operator> <operator pos:start="207:40" pos:end="207:40">(</operator><name pos:start="207:41" pos:end="207:41">l</name><operator pos:start="207:42" pos:end="207:42">&lt;</operator><literal type="number" pos:start="207:43" pos:end="207:43">0</literal><operator pos:start="207:44" pos:end="207:44">)</operator></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="209:21" pos:end="209:45"><decl pos:start="209:21" pos:end="209:44"><type pos:start="209:21" pos:end="209:23"><name pos:start="209:21" pos:end="209:23">int</name></type> <name pos:start="209:25" pos:end="209:26">t2</name><init pos:start="209:27" pos:end="209:44">= <expr pos:start="209:29" pos:end="209:44"><literal type="number" pos:start="209:29" pos:end="209:29">2</literal><operator pos:start="209:30" pos:end="209:30">*</operator><call pos:start="209:31" pos:end="209:36"><name pos:start="209:31" pos:end="209:33">ABS</name><argument_list pos:start="209:34" pos:end="209:36">(<argument pos:start="209:35" pos:end="209:35"><expr pos:start="209:35" pos:end="209:35"><name pos:start="209:35" pos:end="209:35">t</name></expr></argument>)</argument_list></call> <operator pos:start="209:38" pos:end="209:38">+</operator> <operator pos:start="209:40" pos:end="209:40">(</operator><name pos:start="209:41" pos:end="209:41">t</name><operator pos:start="209:42" pos:end="209:42">&lt;</operator><literal type="number" pos:start="209:43" pos:end="209:43">0</literal><operator pos:start="209:44" pos:end="209:44">)</operator></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="213:21" pos:end="213:83"><expr pos:start="213:21" pos:end="213:82"><call pos:start="213:21" pos:end="213:82"><name pos:start="213:21" pos:end="213:31">put_symbol2</name><argument_list pos:start="213:32" pos:end="213:82">(<argument pos:start="213:33" pos:end="213:37"><expr pos:start="213:33" pos:end="213:37"><operator pos:start="213:33" pos:end="213:33">&amp;</operator><name pos:start="213:34" pos:end="213:37"><name pos:start="213:34" pos:end="213:34">s</name><operator pos:start="213:35" pos:end="213:36">-&gt;</operator><name pos:start="213:37" pos:end="213:37">c</name></name></expr></argument>, <argument pos:start="213:40" pos:end="213:60"><expr pos:start="213:40" pos:end="213:60"><name pos:start="213:40" pos:end="213:60"><name pos:start="213:40" pos:end="213:40">b</name><operator pos:start="213:41" pos:end="213:42">-&gt;</operator><name pos:start="213:43" pos:end="213:47">state</name><index pos:start="213:48" pos:end="213:60">[<expr pos:start="213:49" pos:end="213:59"><name pos:start="213:49" pos:end="213:55">context</name> <operator pos:start="213:57" pos:end="213:57">+</operator> <literal type="number" pos:start="213:59" pos:end="213:59">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:63" pos:end="213:70"><expr pos:start="213:63" pos:end="213:70"><call pos:start="213:63" pos:end="213:68"><name pos:start="213:63" pos:end="213:65">ABS</name><argument_list pos:start="213:66" pos:end="213:68">(<argument pos:start="213:67" pos:end="213:67"><expr pos:start="213:67" pos:end="213:67"><name pos:start="213:67" pos:end="213:67">v</name></expr></argument>)</argument_list></call><operator pos:start="213:69" pos:end="213:69">-</operator><literal type="number" pos:start="213:70" pos:end="213:70">1</literal></expr></argument>, <argument pos:start="213:73" pos:end="213:81"><expr pos:start="213:73" pos:end="213:81"><name pos:start="213:73" pos:end="213:79">context</name><operator pos:start="213:80" pos:end="213:80">-</operator><literal type="number" pos:start="213:81" pos:end="213:81">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:108"><expr pos:start="215:21" pos:end="215:107"><call pos:start="215:21" pos:end="215:107"><name pos:start="215:21" pos:end="215:27">put_rac</name><argument_list pos:start="215:28" pos:end="215:107">(<argument pos:start="215:29" pos:end="215:33"><expr pos:start="215:29" pos:end="215:33"><operator pos:start="215:29" pos:end="215:29">&amp;</operator><name pos:start="215:30" pos:end="215:33"><name pos:start="215:30" pos:end="215:30">s</name><operator pos:start="215:31" pos:end="215:32">-&gt;</operator><name pos:start="215:33" pos:end="215:33">c</name></name></expr></argument>, <argument pos:start="215:36" pos:end="215:101"><expr pos:start="215:36" pos:end="215:101"><operator pos:start="215:36" pos:end="215:36">&amp;</operator><name pos:start="215:37" pos:end="215:101"><name pos:start="215:37" pos:end="215:37">b</name><operator pos:start="215:38" pos:end="215:39">-&gt;</operator><name pos:start="215:40" pos:end="215:44">state</name><index pos:start="215:45" pos:end="215:47">[<expr pos:start="215:46" pos:end="215:46"><literal type="number" pos:start="215:46" pos:end="215:46">0</literal></expr>]</index><index pos:start="215:48" pos:end="215:101">[<expr pos:start="215:49" pos:end="215:100"><literal type="number" pos:start="215:49" pos:end="215:52">16</literal> <operator pos:start="215:52" pos:end="215:52">+</operator> <literal type="number" pos:start="215:54" pos:end="215:56">1</literal> <operator pos:start="215:56" pos:end="215:56">+</operator> <literal type="number" pos:start="215:58" pos:end="215:60">3</literal> <operator pos:start="215:60" pos:end="215:60">+</operator> <name pos:start="215:62" pos:end="215:78"><name pos:start="215:62" pos:end="215:69">quant3bA</name><index pos:start="215:70" pos:end="215:78">[<expr pos:start="215:71" pos:end="215:77"><name pos:start="215:71" pos:end="215:72">l2</name><operator pos:start="215:73" pos:end="215:73">&amp;</operator><literal type="number" pos:start="215:74" pos:end="215:77">0xFF</literal></expr>]</index></name> <operator pos:start="215:80" pos:end="215:80">+</operator> <literal type="number" pos:start="215:82" pos:end="215:82">3</literal><operator pos:start="215:83" pos:end="215:83">*</operator><name pos:start="215:84" pos:end="215:100"><name pos:start="215:84" pos:end="215:91">quant3bA</name><index pos:start="215:92" pos:end="215:100">[<expr pos:start="215:93" pos:end="215:99"><name pos:start="215:93" pos:end="215:94">t2</name><operator pos:start="215:95" pos:end="215:95">&amp;</operator><literal type="number" pos:start="215:96" pos:end="215:99">0xFF</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="215:104" pos:end="215:106"><expr pos:start="215:104" pos:end="215:106"><name pos:start="215:104" pos:end="215:104">v</name><operator pos:start="215:105" pos:end="215:105">&lt;</operator><literal type="number" pos:start="215:106" pos:end="215:106">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
