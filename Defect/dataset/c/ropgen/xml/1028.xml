<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1028.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:38">virtio_pci_config_read</name><parameter_list pos:start="1:39" pos:end="3:53">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:43">void</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">opaque</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:59">hwaddr</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:47">unsigned</name></type> <name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:15">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:59">= <expr pos:start="9:26" pos:end="9:59"><call pos:start="9:26" pos:end="9:59"><name pos:start="9:26" pos:end="9:46">virtio_bus_get_device</name><argument_list pos:start="9:47" pos:end="9:59">(<argument pos:start="9:48" pos:end="9:58"><expr pos:start="9:48" pos:end="9:58"><operator pos:start="9:48" pos:end="9:48">&amp;</operator><name pos:start="9:49" pos:end="9:58"><name pos:start="9:49" pos:end="9:53">proxy</name><operator pos:start="9:54" pos:end="9:55">-&gt;</operator><name pos:start="9:56" pos:end="9:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">config</name> <init pos:start="11:21" pos:end="11:56">= <expr pos:start="11:23" pos:end="11:56"><call pos:start="11:23" pos:end="11:56"><name pos:start="11:23" pos:end="11:39">VIRTIO_PCI_CONFIG</name><argument_list pos:start="11:40" pos:end="11:56">(<argument pos:start="11:41" pos:end="11:55"><expr pos:start="11:41" pos:end="11:55"><operator pos:start="11:41" pos:end="11:41">&amp;</operator><name pos:start="11:42" pos:end="11:55"><name pos:start="11:42" pos:end="11:46">proxy</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:55">pci_dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:16">val</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:12">addr</name> <operator pos:start="15:14" pos:end="15:14">&lt;</operator> <name pos:start="15:16" pos:end="15:21">config</name></expr>)</condition> <block pos:start="15:24" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:47">

        <return pos:start="17:9" pos:end="17:47">return <expr pos:start="17:16" pos:end="17:46"><call pos:start="17:16" pos:end="17:46"><name pos:start="17:16" pos:end="17:33">virtio_ioport_read</name><argument_list pos:start="17:34" pos:end="17:46">(<argument pos:start="17:35" pos:end="17:39"><expr pos:start="17:35" pos:end="17:39"><name pos:start="17:35" pos:end="17:39">proxy</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:8">addr</name> <operator pos:start="21:10" pos:end="21:11">-=</operator> <name pos:start="21:13" pos:end="21:18">config</name></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="57:5">switch <condition pos:start="25:12" pos:end="25:17">(<expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:16">size</name></expr>)</condition> <block pos:start="25:19" pos:end="57:5">{<block_content pos:start="27:5" pos:end="55:14">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">1</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:11">val</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:45"><name pos:start="29:15" pos:end="29:33">virtio_config_readb</name><argument_list pos:start="29:34" pos:end="29:45">(<argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">vdev</name></expr></argument>, <argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">2</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:11">val</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:45"><name pos:start="35:15" pos:end="35:33">virtio_config_readw</name><argument_list pos:start="35:34" pos:end="35:45">(<argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:38">vdev</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:35">(<expr pos:start="37:13" pos:end="37:34"><call pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:32">virtio_is_big_endian</name><argument_list pos:start="37:33" pos:end="37:34">()</argument_list></call></expr>)</condition> <block pos:start="37:37" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:31">

            <expr_stmt pos:start="39:13" pos:end="39:31"><expr pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:15">val</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:25">bswap16</name><argument_list pos:start="39:26" pos:end="39:30">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">4</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:11">val</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:45"><name pos:start="47:15" pos:end="47:33">virtio_config_readl</name><argument_list pos:start="47:34" pos:end="47:45">(<argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">vdev</name></expr></argument>, <argument pos:start="47:41" pos:end="47:44"><expr pos:start="47:41" pos:end="47:44"><name pos:start="47:41" pos:end="47:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:35">(<expr pos:start="49:13" pos:end="49:34"><call pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:32">virtio_is_big_endian</name><argument_list pos:start="49:33" pos:end="49:34">()</argument_list></call></expr>)</condition> <block pos:start="49:37" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:31">

            <expr_stmt pos:start="51:13" pos:end="51:31"><expr pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:15">val</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:25">bswap32</name><argument_list pos:start="51:26" pos:end="51:30">(<argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
