<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13538.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:16">check</name><parameter_list pos:start="1:17" pos:end="1:68">(<parameter pos:start="1:18" pos:end="1:32"><decl pos:start="1:18" pos:end="1:32"><type pos:start="1:18" pos:end="1:32"><name pos:start="1:18" pos:end="1:28">AVIOContext</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:32">pb</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:41">int64_t</name></type> <name pos:start="1:43" pos:end="1:45">pos</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:67"><decl pos:start="1:48" pos:end="1:67"><type pos:start="1:48" pos:end="1:67"><name pos:start="1:48" pos:end="1:55">uint32_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:67">ret_header</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:25">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name> <init pos:start="5:17" pos:end="5:46">= <expr pos:start="5:19" pos:end="5:46"><call pos:start="5:19" pos:end="5:46"><name pos:start="5:19" pos:end="5:27">avio_seek</name><argument_list pos:start="5:28" pos:end="5:46">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">pb</name></expr></argument>, <argument pos:start="5:33" pos:end="5:35"><expr pos:start="5:33" pos:end="5:35"><name pos:start="5:33" pos:end="5:35">pos</name></expr></argument>, <argument pos:start="5:38" pos:end="5:45"><expr pos:start="5:38" pos:end="5:45"><name pos:start="5:38" pos:end="5:45">SEEK_SET</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:25"><name pos:start="7:13" pos:end="7:22">header_buf</name><index pos:start="7:23" pos:end="7:25">[<expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">MPADecodeHeader</name></type> <name pos:start="11:21" pos:end="11:22">sd</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="15:33"><if pos:start="13:5" pos:end="15:33">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">&lt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:33"><block_content pos:start="15:9" pos:end="15:33">

        <return pos:start="15:9" pos:end="15:33">return <expr pos:start="15:16" pos:end="15:32"><name pos:start="15:16" pos:end="15:32">CHECK_SEEK_FAILED</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:42"><name pos:start="19:11" pos:end="19:19">avio_read</name><argument_list pos:start="19:20" pos:end="19:42">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">pb</name></expr></argument>, <argument pos:start="19:25" pos:end="19:38"><expr pos:start="19:25" pos:end="19:38"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:38"><name pos:start="19:26" pos:end="19:35">header_buf</name><index pos:start="19:36" pos:end="19:38">[<expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:33"><if pos:start="21:5" pos:end="23:33">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:33"><block_content pos:start="23:9" pos:end="23:33">

        <return pos:start="23:9" pos:end="23:33">return <expr pos:start="23:16" pos:end="23:32"><name pos:start="23:16" pos:end="23:32">CHECK_SEEK_FAILED</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:10">header</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:36"><name pos:start="27:14" pos:end="27:20">AV_RB32</name><argument_list pos:start="27:21" pos:end="27:36">(<argument pos:start="27:22" pos:end="27:35"><expr pos:start="27:22" pos:end="27:35"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:35"><name pos:start="27:23" pos:end="27:32">header_buf</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:34"><if pos:start="29:5" pos:end="31:34">if <condition pos:start="29:8" pos:end="29:40">(<expr pos:start="29:9" pos:end="29:39"><call pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:27">ff_mpa_check_header</name><argument_list pos:start="29:28" pos:end="29:35">(<argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:34">header</name></expr></argument>)</argument_list></call> <operator pos:start="29:37" pos:end="29:37">&lt;</operator> <literal type="number" pos:start="29:39" pos:end="29:39">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:34"><block_content pos:start="31:9" pos:end="31:34">

        <return pos:start="31:9" pos:end="31:34">return <expr pos:start="31:16" pos:end="31:33"><name pos:start="31:16" pos:end="31:33">CHECK_WRONG_HEADER</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:34"><if pos:start="33:5" pos:end="35:34">if <condition pos:start="33:8" pos:end="33:57">(<expr pos:start="33:9" pos:end="33:56"><call pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:38">avpriv_mpegaudio_decode_header</name><argument_list pos:start="33:39" pos:end="33:51">(<argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><operator pos:start="33:40" pos:end="33:40">&amp;</operator><name pos:start="33:41" pos:end="33:42">sd</name></expr></argument>, <argument pos:start="33:45" pos:end="33:50"><expr pos:start="33:45" pos:end="33:50"><name pos:start="33:45" pos:end="33:50">header</name></expr></argument>)</argument_list></call> <operator pos:start="33:53" pos:end="33:54">==</operator> <literal type="number" pos:start="33:56" pos:end="33:56">1</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:34"><block_content pos:start="35:9" pos:end="35:34">

        <return pos:start="35:9" pos:end="35:34">return <expr pos:start="35:16" pos:end="35:33"><name pos:start="35:16" pos:end="35:33">CHECK_WRONG_HEADER</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:29"><if pos:start="39:5" pos:end="41:29">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:18">ret_header</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:29"><block_content pos:start="41:9" pos:end="41:29">

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:19">ret_header</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:28">header</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:25">return <expr pos:start="43:12" pos:end="43:24"><name pos:start="43:12" pos:end="43:24"><name pos:start="43:12" pos:end="43:13">sd</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:24">frame_size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
