<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9982.c" pos:tabs="8"><function pos:start="1:1" pos:end="423:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_header</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">FFV1Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="423:1">{<block_content pos:start="5:5" pos:end="421:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:31"><name pos:start="5:13" pos:end="5:17">state</name><index pos:start="5:18" pos:end="5:31">[<expr pos:start="5:19" pos:end="5:30"><name pos:start="5:19" pos:end="5:30">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:27">context_count</name> <init pos:start="7:29" pos:end="7:32">= <expr pos:start="7:31" pos:end="7:32"><operator pos:start="7:31" pos:end="7:31">-</operator><literal type="number" pos:start="7:32" pos:end="7:32">1</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="7:35" pos:end="7:55">//-1 to avoid warning</comment>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:14">RangeCoder</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier><specifier pos:start="9:17" pos:end="9:21">const</specifier></type> <name pos:start="9:23" pos:end="9:23">c</name> <init pos:start="9:25" pos:end="9:49">= <expr pos:start="9:27" pos:end="9:49"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:46"><name pos:start="9:28" pos:end="9:28">f</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:43">slice_context</name><index pos:start="9:44" pos:end="9:46">[<expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr>]</index></name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:49">c</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:37">(<argument pos:start="13:12" pos:end="13:16"><expr pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:16">state</name></expr></argument>, <argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><literal type="number" pos:start="13:19" pos:end="13:21">128</literal></expr></argument>, <argument pos:start="13:24" pos:end="13:36"><expr pos:start="13:24" pos:end="13:36"><sizeof pos:start="13:24" pos:end="13:36">sizeof<argument_list pos:start="13:30" pos:end="13:36">(<argument pos:start="13:31" pos:end="13:35"><expr pos:start="13:31" pos:end="13:35"><name pos:start="13:31" pos:end="13:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="99:5"><if pos:start="17:5" pos:end="99:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">f</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">version</name></name> <operator pos:start="17:20" pos:end="17:20">&lt;</operator> <literal type="number" pos:start="17:22" pos:end="17:22">2</literal></expr>)</condition> <block pos:start="17:25" pos:end="99:5">{<block_content pos:start="19:9" pos:end="97:48">

        <decl_stmt pos:start="19:9" pos:end="19:105"><decl pos:start="19:9" pos:end="19:25"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:25">chroma_planes</name></decl>, <decl pos:start="19:28" pos:end="19:41"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:28" pos:end="19:41">chroma_h_shift</name></decl>, <decl pos:start="19:44" pos:end="19:57"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:44" pos:end="19:57">chroma_v_shift</name></decl>, <decl pos:start="19:60" pos:end="19:71"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:60" pos:end="19:71">transparency</name></decl>, <decl pos:start="19:74" pos:end="19:83"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:74" pos:end="19:83">colorspace</name></decl>, <decl pos:start="19:86" pos:end="19:104"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:86" pos:end="19:104">bits_per_raw_sample</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:44"><decl pos:start="21:9" pos:end="21:43"><type pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16">unsigned</name></type> <name pos:start="21:18" pos:end="21:18">v</name><init pos:start="21:19" pos:end="21:43">= <expr pos:start="21:21" pos:end="21:43"><call pos:start="21:21" pos:end="21:43"><name pos:start="21:21" pos:end="21:30">get_symbol</name><argument_list pos:start="21:31" pos:end="21:43">(<argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">c</name></expr></argument>, <argument pos:start="21:35" pos:end="21:39"><expr pos:start="21:35" pos:end="21:39"><name pos:start="21:35" pos:end="21:39">state</name></expr></argument>, <argument pos:start="21:42" pos:end="21:42"><expr pos:start="21:42" pos:end="21:42"><literal type="number" pos:start="21:42" pos:end="21:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">v</name> <operator pos:start="23:15" pos:end="23:16">&gt;=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">2</literal></expr>)</condition> <block pos:start="23:21" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:39">

            <expr_stmt pos:start="25:13" pos:end="25:86"><expr pos:start="25:13" pos:end="25:85"><call pos:start="25:13" pos:end="25:85"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:85">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:20">f</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">avctx</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:44" pos:end="25:81"><expr pos:start="25:44" pos:end="25:81"><literal type="string" pos:start="25:44" pos:end="25:81">"invalid version %d in ver01 header\n"</literal></expr></argument>, <argument pos:start="25:84" pos:end="25:84"><expr pos:start="25:84" pos:end="25:84"><name pos:start="25:84" pos:end="25:84">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:39">return <expr pos:start="27:20" pos:end="27:38"><name pos:start="27:20" pos:end="27:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">f</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">version</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:22">v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:68"><expr pos:start="33:9" pos:end="33:67"><name pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">f</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:13">ac</name></name>      <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:41"><name pos:start="33:22" pos:end="33:22">f</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:29">avctx</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:41">coder_type</name></name> <operator pos:start="33:43" pos:end="33:43">=</operator> <call pos:start="33:45" pos:end="33:67"><name pos:start="33:45" pos:end="33:54">get_symbol</name><argument_list pos:start="33:55" pos:end="33:67">(<argument pos:start="33:56" pos:end="33:56"><expr pos:start="33:56" pos:end="33:56"><name pos:start="33:56" pos:end="33:56">c</name></expr></argument>, <argument pos:start="33:59" pos:end="33:63"><expr pos:start="33:59" pos:end="33:63"><name pos:start="33:59" pos:end="33:63">state</name></expr></argument>, <argument pos:start="33:66" pos:end="33:66"><expr pos:start="33:66" pos:end="33:66"><literal type="number" pos:start="33:66" pos:end="33:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:13">f</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">ac</name></name> <operator pos:start="35:19" pos:end="35:19">&gt;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>)</condition> <block pos:start="35:24" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:83">

            <for pos:start="37:13" pos:end="39:83">for <control pos:start="37:17" pos:end="37:37">(<init pos:start="37:18" pos:end="37:23"><expr pos:start="37:18" pos:end="37:22"><name pos:start="37:18" pos:end="37:18">i</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:32"><expr pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:25">i</name> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <literal type="number" pos:start="37:29" pos:end="37:31">256</literal></expr>;</condition> <incr pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:34">i</name><operator pos:start="37:35" pos:end="37:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:17" pos:end="39:83"><block_content pos:start="39:17" pos:end="39:83">

                <expr_stmt pos:start="39:17" pos:end="39:83"><expr pos:start="39:17" pos:end="39:82"><name pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:17">f</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:35">state_transition</name><index pos:start="39:36" pos:end="39:38">[<expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">i</name></expr>]</index></name> <operator pos:start="39:40" pos:end="39:40">=</operator> <call pos:start="39:42" pos:end="39:64"><name pos:start="39:42" pos:end="39:51">get_symbol</name><argument_list pos:start="39:52" pos:end="39:64">(<argument pos:start="39:53" pos:end="39:53"><expr pos:start="39:53" pos:end="39:53"><name pos:start="39:53" pos:end="39:53">c</name></expr></argument>, <argument pos:start="39:56" pos:end="39:60"><expr pos:start="39:56" pos:end="39:60"><name pos:start="39:56" pos:end="39:60">state</name></expr></argument>, <argument pos:start="39:63" pos:end="39:63"><expr pos:start="39:63" pos:end="39:63"><literal type="number" pos:start="39:63" pos:end="39:63">1</literal></expr></argument>)</argument_list></call> <operator pos:start="39:66" pos:end="39:66">+</operator> <name pos:start="39:68" pos:end="39:82"><name pos:start="39:68" pos:end="39:68">c</name><operator pos:start="39:69" pos:end="39:70">-&gt;</operator><name pos:start="39:71" pos:end="39:79">one_state</name><index pos:start="39:80" pos:end="39:82">[<expr pos:start="39:81" pos:end="39:81"><name pos:start="39:81" pos:end="39:81">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:18">colorspace</name>     <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:48"><name pos:start="45:26" pos:end="45:35">get_symbol</name><argument_list pos:start="45:36" pos:end="45:48">(<argument pos:start="45:37" pos:end="45:37"><expr pos:start="45:37" pos:end="45:37"><name pos:start="45:37" pos:end="45:37">c</name></expr></argument>, <argument pos:start="45:40" pos:end="45:44"><expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:44">state</name></expr></argument>, <argument pos:start="45:47" pos:end="45:47"><expr pos:start="45:47" pos:end="45:47"><literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="45:51" pos:end="45:63">//YUV cs type</comment>

        <expr_stmt pos:start="47:9" pos:end="47:103"><expr pos:start="47:9" pos:end="47:102"><name pos:start="47:9" pos:end="47:27">bits_per_raw_sample</name> <operator pos:start="47:29" pos:end="47:29">=</operator> <ternary pos:start="47:31" pos:end="47:102"><condition pos:start="47:31" pos:end="47:46"><expr pos:start="47:31" pos:end="47:44"><name pos:start="47:31" pos:end="47:40"><name pos:start="47:31" pos:end="47:31">f</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:40">version</name></name> <operator pos:start="47:42" pos:end="47:42">&gt;</operator> <literal type="number" pos:start="47:44" pos:end="47:44">0</literal></expr> ?</condition><then pos:start="47:48" pos:end="47:70"> <expr pos:start="47:48" pos:end="47:70"><call pos:start="47:48" pos:end="47:70"><name pos:start="47:48" pos:end="47:57">get_symbol</name><argument_list pos:start="47:58" pos:end="47:70">(<argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><name pos:start="47:59" pos:end="47:59">c</name></expr></argument>, <argument pos:start="47:62" pos:end="47:66"><expr pos:start="47:62" pos:end="47:66"><name pos:start="47:62" pos:end="47:66">state</name></expr></argument>, <argument pos:start="47:69" pos:end="47:69"><expr pos:start="47:69" pos:end="47:69"><literal type="number" pos:start="47:69" pos:end="47:69">0</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="47:72" pos:end="47:102">: <expr pos:start="47:74" pos:end="47:102"><name pos:start="47:74" pos:end="47:102"><name pos:start="47:74" pos:end="47:74">f</name><operator pos:start="47:75" pos:end="47:76">-&gt;</operator><name pos:start="47:77" pos:end="47:81">avctx</name><operator pos:start="47:82" pos:end="47:83">-&gt;</operator><name pos:start="47:84" pos:end="47:102">bits_per_raw_sample</name></name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:21">chroma_planes</name>  <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:42"><name pos:start="49:26" pos:end="49:32">get_rac</name><argument_list pos:start="49:33" pos:end="49:42">(<argument pos:start="49:34" pos:end="49:34"><expr pos:start="49:34" pos:end="49:34"><name pos:start="49:34" pos:end="49:34">c</name></expr></argument>, <argument pos:start="49:37" pos:end="49:41"><expr pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:41">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:22">chroma_h_shift</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:48"><name pos:start="51:26" pos:end="51:35">get_symbol</name><argument_list pos:start="51:36" pos:end="51:48">(<argument pos:start="51:37" pos:end="51:37"><expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">c</name></expr></argument>, <argument pos:start="51:40" pos:end="51:44"><expr pos:start="51:40" pos:end="51:44"><name pos:start="51:40" pos:end="51:44">state</name></expr></argument>, <argument pos:start="51:47" pos:end="51:47"><expr pos:start="51:47" pos:end="51:47"><literal type="number" pos:start="51:47" pos:end="51:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:22">chroma_v_shift</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <call pos:start="53:26" pos:end="53:48"><name pos:start="53:26" pos:end="53:35">get_symbol</name><argument_list pos:start="53:36" pos:end="53:48">(<argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><name pos:start="53:37" pos:end="53:37">c</name></expr></argument>, <argument pos:start="53:40" pos:end="53:44"><expr pos:start="53:40" pos:end="53:44"><name pos:start="53:40" pos:end="53:44">state</name></expr></argument>, <argument pos:start="53:47" pos:end="53:47"><expr pos:start="53:47" pos:end="53:47"><literal type="number" pos:start="53:47" pos:end="53:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:43"><expr pos:start="55:9" pos:end="55:42"><name pos:start="55:9" pos:end="55:20">transparency</name>   <operator pos:start="55:24" pos:end="55:24">=</operator> <call pos:start="55:26" pos:end="55:42"><name pos:start="55:26" pos:end="55:32">get_rac</name><argument_list pos:start="55:33" pos:end="55:42">(<argument pos:start="55:34" pos:end="55:34"><expr pos:start="55:34" pos:end="55:34"><name pos:start="55:34" pos:end="55:34">c</name></expr></argument>, <argument pos:start="55:37" pos:end="55:41"><expr pos:start="55:37" pos:end="55:41"><name pos:start="55:37" pos:end="55:41">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="79:9"><if pos:start="59:9" pos:end="79:9">if <condition pos:start="59:12" pos:end="59:27">(<expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:13">f</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:26">plane_count</name></name></expr>)</condition> <block pos:start="59:29" pos:end="79:9">{<block_content pos:start="61:13" pos:end="77:13">

            <if_stmt pos:start="61:13" pos:end="77:13"><if pos:start="61:13" pos:end="77:13">if <condition pos:start="61:16" pos:end="71:52">(   <expr pos:start="61:20" pos:end="71:51"><name pos:start="61:20" pos:end="61:29">colorspace</name>    <operator pos:start="61:34" pos:end="61:35">!=</operator> <name pos:start="61:37" pos:end="61:49"><name pos:start="61:37" pos:end="61:37">f</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:49">colorspace</name></name>

                <operator pos:start="63:17" pos:end="63:18">||</operator> <name pos:start="63:20" pos:end="63:38">bits_per_raw_sample</name> <operator pos:start="63:40" pos:end="63:41">!=</operator> <name pos:start="63:43" pos:end="63:71"><name pos:start="63:43" pos:end="63:43">f</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:50">avctx</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:71">bits_per_raw_sample</name></name>

                <operator pos:start="65:17" pos:end="65:18">||</operator> <name pos:start="65:20" pos:end="65:32">chroma_planes</name> <operator pos:start="65:34" pos:end="65:35">!=</operator> <name pos:start="65:37" pos:end="65:52"><name pos:start="65:37" pos:end="65:37">f</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:52">chroma_planes</name></name>

                <operator pos:start="67:17" pos:end="67:18">||</operator> <name pos:start="67:20" pos:end="67:33">chroma_h_shift</name><operator pos:start="67:34" pos:end="67:35">!=</operator> <name pos:start="67:37" pos:end="67:53"><name pos:start="67:37" pos:end="67:37">f</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:53">chroma_h_shift</name></name>

                <operator pos:start="69:17" pos:end="69:18">||</operator> <name pos:start="69:20" pos:end="69:33">chroma_v_shift</name><operator pos:start="69:34" pos:end="69:35">!=</operator> <name pos:start="69:37" pos:end="69:53"><name pos:start="69:37" pos:end="69:37">f</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:53">chroma_v_shift</name></name>

                <operator pos:start="71:17" pos:end="71:18">||</operator> <name pos:start="71:20" pos:end="71:31">transparency</name>  <operator pos:start="71:34" pos:end="71:35">!=</operator> <name pos:start="71:37" pos:end="71:51"><name pos:start="71:37" pos:end="71:37">f</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:51">transparency</name></name></expr>)</condition> <block pos:start="71:54" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:43">

                <expr_stmt pos:start="73:17" pos:end="73:88"><expr pos:start="73:17" pos:end="73:87"><call pos:start="73:17" pos:end="73:87"><name pos:start="73:17" pos:end="73:22">av_log</name><argument_list pos:start="73:23" pos:end="73:87">(<argument pos:start="73:24" pos:end="73:31"><expr pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:24">f</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">avctx</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:45"><expr pos:start="73:34" pos:end="73:45"><name pos:start="73:34" pos:end="73:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:48" pos:end="73:86"><expr pos:start="73:48" pos:end="73:86"><literal type="string" pos:start="73:48" pos:end="73:86">"Invalid change of global parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="75:17" pos:end="75:43">return <expr pos:start="75:24" pos:end="75:42"><name pos:start="75:24" pos:end="75:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:39"><expr pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:9">f</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:21">colorspace</name></name>     <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:38">colorspace</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:60"><expr pos:start="85:9" pos:end="85:59"><name pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:9">f</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:16">avctx</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:37">bits_per_raw_sample</name></name> <operator pos:start="85:39" pos:end="85:39">=</operator> <name pos:start="85:41" pos:end="85:59">bits_per_raw_sample</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:9">f</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:24">chroma_planes</name></name>  <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:41">chroma_planes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:9">f</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:25">chroma_h_shift</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:42">chroma_h_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:43"><expr pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:9">f</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:25">chroma_v_shift</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <name pos:start="91:29" pos:end="91:42">chroma_v_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:9">f</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:23">transparency</name></name>   <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:40">transparency</name></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:48"><expr pos:start="97:9" pos:end="97:47"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:9">f</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:22">plane_count</name></name>    <operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:31">2</literal> <operator pos:start="97:31" pos:end="97:31">+</operator> <name pos:start="97:33" pos:end="97:47"><name pos:start="97:33" pos:end="97:33">f</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:47">transparency</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="257:5"><if pos:start="103:5" pos:end="217:5">if <condition pos:start="103:8" pos:end="103:27">(<expr pos:start="103:9" pos:end="103:26"><name pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:9">f</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:21">colorspace</name></name> <operator pos:start="103:23" pos:end="103:24">==</operator> <literal type="number" pos:start="103:26" pos:end="103:26">0</literal></expr>)</condition> <block pos:start="103:29" pos:end="217:5">{<block_content pos:start="105:9" pos:end="215:9">

        <if_stmt pos:start="105:9" pos:end="215:9"><if pos:start="105:9" pos:end="115:9">if <condition pos:start="105:12" pos:end="105:50">(<expr pos:start="105:13" pos:end="105:49"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:28"><name pos:start="105:14" pos:end="105:14">f</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:28">transparency</name></name> <operator pos:start="105:30" pos:end="105:31">&amp;&amp;</operator> <operator pos:start="105:33" pos:end="105:33">!</operator><name pos:start="105:34" pos:end="105:49"><name pos:start="105:34" pos:end="105:34">f</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:49">chroma_planes</name></name></expr>)</condition> <block pos:start="105:52" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:54">

            <if_stmt pos:start="107:13" pos:end="113:54"><if pos:start="107:13" pos:end="109:53">if <condition pos:start="107:16" pos:end="107:51">(<expr pos:start="107:17" pos:end="107:50"><name pos:start="107:17" pos:end="107:45"><name pos:start="107:17" pos:end="107:17">f</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:24">avctx</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:45">bits_per_raw_sample</name></name> <operator pos:start="107:47" pos:end="107:48">&lt;=</operator> <literal type="number" pos:start="107:50" pos:end="107:50">8</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:53"><block_content pos:start="109:17" pos:end="109:53">

                <expr_stmt pos:start="109:17" pos:end="109:53"><expr pos:start="109:17" pos:end="109:52"><name pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:17">f</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:24">avctx</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:33">pix_fmt</name></name> <operator pos:start="109:35" pos:end="109:35">=</operator> <name pos:start="109:37" pos:end="109:52">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="111:13" pos:end="113:54">else<block type="pseudo" pos:start="113:17" pos:end="113:54"><block_content pos:start="113:17" pos:end="113:54">

                <expr_stmt pos:start="113:17" pos:end="113:54"><expr pos:start="113:17" pos:end="113:53"><name pos:start="113:17" pos:end="113:33"><name pos:start="113:17" pos:end="113:17">f</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:24">avctx</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:33">pix_fmt</name></name> <operator pos:start="113:35" pos:end="113:35">=</operator> <name pos:start="113:37" pos:end="113:53">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="115:11" pos:end="139:9">else if <condition pos:start="115:19" pos:end="115:72">(<expr pos:start="115:20" pos:end="115:71"><name pos:start="115:20" pos:end="115:48"><name pos:start="115:20" pos:end="115:20">f</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:48">bits_per_raw_sample</name></name><operator pos:start="115:49" pos:end="115:50">&lt;=</operator><literal type="number" pos:start="115:51" pos:end="115:51">8</literal> <operator pos:start="115:53" pos:end="115:54">&amp;&amp;</operator> <operator pos:start="115:56" pos:end="115:56">!</operator><name pos:start="115:57" pos:end="115:71"><name pos:start="115:57" pos:end="115:57">f</name><operator pos:start="115:58" pos:end="115:59">-&gt;</operator><name pos:start="115:60" pos:end="115:71">transparency</name></name></expr>)</condition> <block pos:start="115:74" pos:end="139:9">{<block_content pos:start="117:13" pos:end="137:13">

            <switch pos:start="117:13" pos:end="137:13">switch<condition pos:start="117:19" pos:end="117:62">(<expr pos:start="117:20" pos:end="117:61"><literal type="number" pos:start="117:20" pos:end="117:21">16</literal> <operator pos:start="117:23" pos:end="117:23">*</operator> <name pos:start="117:25" pos:end="117:41"><name pos:start="117:25" pos:end="117:25">f</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:41">chroma_h_shift</name></name> <operator pos:start="117:43" pos:end="117:43">+</operator> <name pos:start="117:45" pos:end="117:61"><name pos:start="117:45" pos:end="117:45">f</name><operator pos:start="117:46" pos:end="117:47">-&gt;</operator><name pos:start="117:48" pos:end="117:61">chroma_v_shift</name></name></expr>)</condition> <block pos:start="117:64" pos:end="137:13">{<block_content pos:start="119:13" pos:end="135:39">

            <case pos:start="119:13" pos:end="119:22">case <expr pos:start="119:18" pos:end="119:21"><literal type="number" pos:start="119:18" pos:end="119:21">0x00</literal></expr>:</case> <expr_stmt pos:start="119:24" pos:end="119:62"><expr pos:start="119:24" pos:end="119:61"><name pos:start="119:24" pos:end="119:40"><name pos:start="119:24" pos:end="119:24">f</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:31">avctx</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:40">pix_fmt</name></name> <operator pos:start="119:42" pos:end="119:42">=</operator> <name pos:start="119:44" pos:end="119:61">AV_PIX_FMT_YUV444P</name></expr>;</expr_stmt> <break pos:start="119:64" pos:end="119:69">break;</break>

            <case pos:start="121:13" pos:end="121:22">case <expr pos:start="121:18" pos:end="121:21"><literal type="number" pos:start="121:18" pos:end="121:21">0x01</literal></expr>:</case> <expr_stmt pos:start="121:24" pos:end="121:62"><expr pos:start="121:24" pos:end="121:61"><name pos:start="121:24" pos:end="121:40"><name pos:start="121:24" pos:end="121:24">f</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:31">avctx</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:40">pix_fmt</name></name> <operator pos:start="121:42" pos:end="121:42">=</operator> <name pos:start="121:44" pos:end="121:61">AV_PIX_FMT_YUV440P</name></expr>;</expr_stmt> <break pos:start="121:64" pos:end="121:69">break;</break>

            <case pos:start="123:13" pos:end="123:22">case <expr pos:start="123:18" pos:end="123:21"><literal type="number" pos:start="123:18" pos:end="123:21">0x10</literal></expr>:</case> <expr_stmt pos:start="123:24" pos:end="123:62"><expr pos:start="123:24" pos:end="123:61"><name pos:start="123:24" pos:end="123:40"><name pos:start="123:24" pos:end="123:24">f</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:31">avctx</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:40">pix_fmt</name></name> <operator pos:start="123:42" pos:end="123:42">=</operator> <name pos:start="123:44" pos:end="123:61">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt> <break pos:start="123:64" pos:end="123:69">break;</break>

            <case pos:start="125:13" pos:end="125:22">case <expr pos:start="125:18" pos:end="125:21"><literal type="number" pos:start="125:18" pos:end="125:21">0x11</literal></expr>:</case> <expr_stmt pos:start="125:24" pos:end="125:62"><expr pos:start="125:24" pos:end="125:61"><name pos:start="125:24" pos:end="125:40"><name pos:start="125:24" pos:end="125:24">f</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:31">avctx</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:40">pix_fmt</name></name> <operator pos:start="125:42" pos:end="125:42">=</operator> <name pos:start="125:44" pos:end="125:61">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt> <break pos:start="125:64" pos:end="125:69">break;</break>

            <case pos:start="127:13" pos:end="127:22">case <expr pos:start="127:18" pos:end="127:21"><literal type="number" pos:start="127:18" pos:end="127:21">0x20</literal></expr>:</case> <expr_stmt pos:start="127:24" pos:end="127:62"><expr pos:start="127:24" pos:end="127:61"><name pos:start="127:24" pos:end="127:40"><name pos:start="127:24" pos:end="127:24">f</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:31">avctx</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:40">pix_fmt</name></name> <operator pos:start="127:42" pos:end="127:42">=</operator> <name pos:start="127:44" pos:end="127:61">AV_PIX_FMT_YUV411P</name></expr>;</expr_stmt> <break pos:start="127:64" pos:end="127:69">break;</break>

            <case pos:start="129:13" pos:end="129:22">case <expr pos:start="129:18" pos:end="129:21"><literal type="number" pos:start="129:18" pos:end="129:21">0x22</literal></expr>:</case> <expr_stmt pos:start="129:24" pos:end="129:62"><expr pos:start="129:24" pos:end="129:61"><name pos:start="129:24" pos:end="129:40"><name pos:start="129:24" pos:end="129:24">f</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:31">avctx</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:40">pix_fmt</name></name> <operator pos:start="129:42" pos:end="129:42">=</operator> <name pos:start="129:44" pos:end="129:61">AV_PIX_FMT_YUV410P</name></expr>;</expr_stmt> <break pos:start="129:64" pos:end="129:69">break;</break>

            <default pos:start="131:13" pos:end="131:20">default:</default>

                <expr_stmt pos:start="133:17" pos:end="133:73"><expr pos:start="133:17" pos:end="133:72"><call pos:start="133:17" pos:end="133:72"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="133:72">(<argument pos:start="133:24" pos:end="133:31"><expr pos:start="133:24" pos:end="133:31"><name pos:start="133:24" pos:end="133:31"><name pos:start="133:24" pos:end="133:24">f</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:31">avctx</name></name></expr></argument>, <argument pos:start="133:34" pos:end="133:45"><expr pos:start="133:34" pos:end="133:45"><name pos:start="133:34" pos:end="133:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:48" pos:end="133:71"><expr pos:start="133:48" pos:end="133:71"><literal type="string" pos:start="133:48" pos:end="133:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="135:17" pos:end="135:39">return <expr pos:start="135:24" pos:end="135:38"><call pos:start="135:24" pos:end="135:38"><name pos:start="135:24" pos:end="135:30">AVERROR</name><argument_list pos:start="135:31" pos:end="135:38">(<argument pos:start="135:32" pos:end="135:37"><expr pos:start="135:32" pos:end="135:37"><name pos:start="135:32" pos:end="135:37">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="139:11" pos:end="157:9">else if <condition pos:start="139:19" pos:end="139:73">(<expr pos:start="139:20" pos:end="139:72"><name pos:start="139:20" pos:end="139:48"><name pos:start="139:20" pos:end="139:20">f</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:27">avctx</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:48">bits_per_raw_sample</name></name> <operator pos:start="139:50" pos:end="139:51">&lt;=</operator> <literal type="number" pos:start="139:53" pos:end="139:53">8</literal> <operator pos:start="139:55" pos:end="139:56">&amp;&amp;</operator> <name pos:start="139:58" pos:end="139:72"><name pos:start="139:58" pos:end="139:58">f</name><operator pos:start="139:59" pos:end="139:60">-&gt;</operator><name pos:start="139:61" pos:end="139:72">transparency</name></name></expr>)</condition> <block pos:start="139:75" pos:end="157:9">{<block_content pos:start="141:13" pos:end="155:13">

            <switch pos:start="141:13" pos:end="155:13">switch<condition pos:start="141:19" pos:end="141:60">(<expr pos:start="141:20" pos:end="141:59"><literal type="number" pos:start="141:20" pos:end="141:21">16</literal><operator pos:start="141:22" pos:end="141:22">*</operator><name pos:start="141:23" pos:end="141:39"><name pos:start="141:23" pos:end="141:23">f</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:39">chroma_h_shift</name></name> <operator pos:start="141:41" pos:end="141:41">+</operator> <name pos:start="141:43" pos:end="141:59"><name pos:start="141:43" pos:end="141:43">f</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:59">chroma_v_shift</name></name></expr>)</condition> <block pos:start="141:62" pos:end="155:13">{<block_content pos:start="143:13" pos:end="153:39">

            <case pos:start="143:13" pos:end="143:22">case <expr pos:start="143:18" pos:end="143:21"><literal type="number" pos:start="143:18" pos:end="143:21">0x00</literal></expr>:</case> <expr_stmt pos:start="143:24" pos:end="143:63"><expr pos:start="143:24" pos:end="143:62"><name pos:start="143:24" pos:end="143:40"><name pos:start="143:24" pos:end="143:24">f</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:31">avctx</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:40">pix_fmt</name></name> <operator pos:start="143:42" pos:end="143:42">=</operator> <name pos:start="143:44" pos:end="143:62">AV_PIX_FMT_YUVA444P</name></expr>;</expr_stmt> <break pos:start="143:65" pos:end="143:70">break;</break>

            <case pos:start="145:13" pos:end="145:22">case <expr pos:start="145:18" pos:end="145:21"><literal type="number" pos:start="145:18" pos:end="145:21">0x10</literal></expr>:</case> <expr_stmt pos:start="145:24" pos:end="145:63"><expr pos:start="145:24" pos:end="145:62"><name pos:start="145:24" pos:end="145:40"><name pos:start="145:24" pos:end="145:24">f</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:31">avctx</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:40">pix_fmt</name></name> <operator pos:start="145:42" pos:end="145:42">=</operator> <name pos:start="145:44" pos:end="145:62">AV_PIX_FMT_YUVA422P</name></expr>;</expr_stmt> <break pos:start="145:65" pos:end="145:70">break;</break>

            <case pos:start="147:13" pos:end="147:22">case <expr pos:start="147:18" pos:end="147:21"><literal type="number" pos:start="147:18" pos:end="147:21">0x11</literal></expr>:</case> <expr_stmt pos:start="147:24" pos:end="147:63"><expr pos:start="147:24" pos:end="147:62"><name pos:start="147:24" pos:end="147:40"><name pos:start="147:24" pos:end="147:24">f</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:31">avctx</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:40">pix_fmt</name></name> <operator pos:start="147:42" pos:end="147:42">=</operator> <name pos:start="147:44" pos:end="147:62">AV_PIX_FMT_YUVA420P</name></expr>;</expr_stmt> <break pos:start="147:65" pos:end="147:70">break;</break>

            <default pos:start="149:13" pos:end="149:20">default:</default>

                <expr_stmt pos:start="151:17" pos:end="151:73"><expr pos:start="151:17" pos:end="151:72"><call pos:start="151:17" pos:end="151:72"><name pos:start="151:17" pos:end="151:22">av_log</name><argument_list pos:start="151:23" pos:end="151:72">(<argument pos:start="151:24" pos:end="151:31"><expr pos:start="151:24" pos:end="151:31"><name pos:start="151:24" pos:end="151:31"><name pos:start="151:24" pos:end="151:24">f</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:31">avctx</name></name></expr></argument>, <argument pos:start="151:34" pos:end="151:45"><expr pos:start="151:34" pos:end="151:45"><name pos:start="151:34" pos:end="151:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="151:48" pos:end="151:71"><expr pos:start="151:48" pos:end="151:71"><literal type="string" pos:start="151:48" pos:end="151:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="153:17" pos:end="153:39">return <expr pos:start="153:24" pos:end="153:38"><call pos:start="153:24" pos:end="153:38"><name pos:start="153:24" pos:end="153:30">AVERROR</name><argument_list pos:start="153:31" pos:end="153:38">(<argument pos:start="153:32" pos:end="153:37"><expr pos:start="153:32" pos:end="153:37"><name pos:start="153:32" pos:end="153:37">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="157:11" pos:end="177:9">else if <condition pos:start="157:19" pos:end="157:54">(<expr pos:start="157:20" pos:end="157:53"><name pos:start="157:20" pos:end="157:48"><name pos:start="157:20" pos:end="157:20">f</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:27">avctx</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:48">bits_per_raw_sample</name></name> <operator pos:start="157:50" pos:end="157:51">==</operator> <literal type="number" pos:start="157:53" pos:end="157:53">9</literal></expr>)</condition> <block pos:start="157:56" pos:end="177:9">{<block_content pos:start="159:13" pos:end="175:13">

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:28"><name pos:start="159:13" pos:end="159:13">f</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:28">packed_at_lsb</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <literal type="number" pos:start="159:32" pos:end="159:32">1</literal></expr>;</expr_stmt>

            <switch pos:start="161:13" pos:end="175:13">switch<condition pos:start="161:19" pos:end="161:62">(<expr pos:start="161:20" pos:end="161:61"><literal type="number" pos:start="161:20" pos:end="161:21">16</literal> <operator pos:start="161:23" pos:end="161:23">*</operator> <name pos:start="161:25" pos:end="161:41"><name pos:start="161:25" pos:end="161:25">f</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:41">chroma_h_shift</name></name> <operator pos:start="161:43" pos:end="161:43">+</operator> <name pos:start="161:45" pos:end="161:61"><name pos:start="161:45" pos:end="161:45">f</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:61">chroma_v_shift</name></name></expr>)</condition> <block pos:start="161:64" pos:end="175:13">{<block_content pos:start="163:13" pos:end="173:39">

            <case pos:start="163:13" pos:end="163:22">case <expr pos:start="163:18" pos:end="163:21"><literal type="number" pos:start="163:18" pos:end="163:21">0x00</literal></expr>:</case> <expr_stmt pos:start="163:24" pos:end="163:63"><expr pos:start="163:24" pos:end="163:62"><name pos:start="163:24" pos:end="163:40"><name pos:start="163:24" pos:end="163:24">f</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:31">avctx</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:40">pix_fmt</name></name> <operator pos:start="163:42" pos:end="163:42">=</operator> <name pos:start="163:44" pos:end="163:62">AV_PIX_FMT_YUV444P9</name></expr>;</expr_stmt> <break pos:start="163:65" pos:end="163:70">break;</break>

            <case pos:start="165:13" pos:end="165:22">case <expr pos:start="165:18" pos:end="165:21"><literal type="number" pos:start="165:18" pos:end="165:21">0x10</literal></expr>:</case> <expr_stmt pos:start="165:24" pos:end="165:63"><expr pos:start="165:24" pos:end="165:62"><name pos:start="165:24" pos:end="165:40"><name pos:start="165:24" pos:end="165:24">f</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:31">avctx</name><operator pos:start="165:32" pos:end="165:33">-&gt;</operator><name pos:start="165:34" pos:end="165:40">pix_fmt</name></name> <operator pos:start="165:42" pos:end="165:42">=</operator> <name pos:start="165:44" pos:end="165:62">AV_PIX_FMT_YUV422P9</name></expr>;</expr_stmt> <break pos:start="165:65" pos:end="165:70">break;</break>

            <case pos:start="167:13" pos:end="167:22">case <expr pos:start="167:18" pos:end="167:21"><literal type="number" pos:start="167:18" pos:end="167:21">0x11</literal></expr>:</case> <expr_stmt pos:start="167:24" pos:end="167:63"><expr pos:start="167:24" pos:end="167:62"><name pos:start="167:24" pos:end="167:40"><name pos:start="167:24" pos:end="167:24">f</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:31">avctx</name><operator pos:start="167:32" pos:end="167:33">-&gt;</operator><name pos:start="167:34" pos:end="167:40">pix_fmt</name></name> <operator pos:start="167:42" pos:end="167:42">=</operator> <name pos:start="167:44" pos:end="167:62">AV_PIX_FMT_YUV420P9</name></expr>;</expr_stmt> <break pos:start="167:65" pos:end="167:70">break;</break>

            <default pos:start="169:13" pos:end="169:20">default:</default>

                <expr_stmt pos:start="171:17" pos:end="171:73"><expr pos:start="171:17" pos:end="171:72"><call pos:start="171:17" pos:end="171:72"><name pos:start="171:17" pos:end="171:22">av_log</name><argument_list pos:start="171:23" pos:end="171:72">(<argument pos:start="171:24" pos:end="171:31"><expr pos:start="171:24" pos:end="171:31"><name pos:start="171:24" pos:end="171:31"><name pos:start="171:24" pos:end="171:24">f</name><operator pos:start="171:25" pos:end="171:26">-&gt;</operator><name pos:start="171:27" pos:end="171:31">avctx</name></name></expr></argument>, <argument pos:start="171:34" pos:end="171:45"><expr pos:start="171:34" pos:end="171:45"><name pos:start="171:34" pos:end="171:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="171:48" pos:end="171:71"><expr pos:start="171:48" pos:end="171:71"><literal type="string" pos:start="171:48" pos:end="171:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="173:17" pos:end="173:39">return <expr pos:start="173:24" pos:end="173:38"><call pos:start="173:24" pos:end="173:38"><name pos:start="173:24" pos:end="173:30">AVERROR</name><argument_list pos:start="173:31" pos:end="173:38">(<argument pos:start="173:32" pos:end="173:37"><expr pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:37">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="177:11" pos:end="197:9">else if <condition pos:start="177:19" pos:end="177:55">(<expr pos:start="177:20" pos:end="177:54"><name pos:start="177:20" pos:end="177:48"><name pos:start="177:20" pos:end="177:20">f</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:27">avctx</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:48">bits_per_raw_sample</name></name> <operator pos:start="177:50" pos:end="177:51">==</operator> <literal type="number" pos:start="177:53" pos:end="177:54">10</literal></expr>)</condition> <block pos:start="177:57" pos:end="197:9">{<block_content pos:start="179:13" pos:end="195:13">

            <expr_stmt pos:start="179:13" pos:end="179:33"><expr pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:28"><name pos:start="179:13" pos:end="179:13">f</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:28">packed_at_lsb</name></name> <operator pos:start="179:30" pos:end="179:30">=</operator> <literal type="number" pos:start="179:32" pos:end="179:32">1</literal></expr>;</expr_stmt>

            <switch pos:start="181:13" pos:end="195:13">switch<condition pos:start="181:19" pos:end="181:62">(<expr pos:start="181:20" pos:end="181:61"><literal type="number" pos:start="181:20" pos:end="181:21">16</literal> <operator pos:start="181:23" pos:end="181:23">*</operator> <name pos:start="181:25" pos:end="181:41"><name pos:start="181:25" pos:end="181:25">f</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:41">chroma_h_shift</name></name> <operator pos:start="181:43" pos:end="181:43">+</operator> <name pos:start="181:45" pos:end="181:61"><name pos:start="181:45" pos:end="181:45">f</name><operator pos:start="181:46" pos:end="181:47">-&gt;</operator><name pos:start="181:48" pos:end="181:61">chroma_v_shift</name></name></expr>)</condition> <block pos:start="181:64" pos:end="195:13">{<block_content pos:start="183:13" pos:end="193:39">

            <case pos:start="183:13" pos:end="183:22">case <expr pos:start="183:18" pos:end="183:21"><literal type="number" pos:start="183:18" pos:end="183:21">0x00</literal></expr>:</case> <expr_stmt pos:start="183:24" pos:end="183:64"><expr pos:start="183:24" pos:end="183:63"><name pos:start="183:24" pos:end="183:40"><name pos:start="183:24" pos:end="183:24">f</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:31">avctx</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:40">pix_fmt</name></name> <operator pos:start="183:42" pos:end="183:42">=</operator> <name pos:start="183:44" pos:end="183:63">AV_PIX_FMT_YUV444P10</name></expr>;</expr_stmt> <break pos:start="183:66" pos:end="183:71">break;</break>

            <case pos:start="185:13" pos:end="185:22">case <expr pos:start="185:18" pos:end="185:21"><literal type="number" pos:start="185:18" pos:end="185:21">0x10</literal></expr>:</case> <expr_stmt pos:start="185:24" pos:end="185:64"><expr pos:start="185:24" pos:end="185:63"><name pos:start="185:24" pos:end="185:40"><name pos:start="185:24" pos:end="185:24">f</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:31">avctx</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:40">pix_fmt</name></name> <operator pos:start="185:42" pos:end="185:42">=</operator> <name pos:start="185:44" pos:end="185:63">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt> <break pos:start="185:66" pos:end="185:71">break;</break>

            <case pos:start="187:13" pos:end="187:22">case <expr pos:start="187:18" pos:end="187:21"><literal type="number" pos:start="187:18" pos:end="187:21">0x11</literal></expr>:</case> <expr_stmt pos:start="187:24" pos:end="187:64"><expr pos:start="187:24" pos:end="187:63"><name pos:start="187:24" pos:end="187:40"><name pos:start="187:24" pos:end="187:24">f</name><operator pos:start="187:25" pos:end="187:26">-&gt;</operator><name pos:start="187:27" pos:end="187:31">avctx</name><operator pos:start="187:32" pos:end="187:33">-&gt;</operator><name pos:start="187:34" pos:end="187:40">pix_fmt</name></name> <operator pos:start="187:42" pos:end="187:42">=</operator> <name pos:start="187:44" pos:end="187:63">AV_PIX_FMT_YUV420P10</name></expr>;</expr_stmt> <break pos:start="187:66" pos:end="187:71">break;</break>

            <default pos:start="189:13" pos:end="189:20">default:</default>

                <expr_stmt pos:start="191:17" pos:end="191:73"><expr pos:start="191:17" pos:end="191:72"><call pos:start="191:17" pos:end="191:72"><name pos:start="191:17" pos:end="191:22">av_log</name><argument_list pos:start="191:23" pos:end="191:72">(<argument pos:start="191:24" pos:end="191:31"><expr pos:start="191:24" pos:end="191:31"><name pos:start="191:24" pos:end="191:31"><name pos:start="191:24" pos:end="191:24">f</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:31">avctx</name></name></expr></argument>, <argument pos:start="191:34" pos:end="191:45"><expr pos:start="191:34" pos:end="191:45"><name pos:start="191:34" pos:end="191:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:48" pos:end="191:71"><expr pos:start="191:48" pos:end="191:71"><literal type="string" pos:start="191:48" pos:end="191:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="193:17" pos:end="193:39">return <expr pos:start="193:24" pos:end="193:38"><call pos:start="193:24" pos:end="193:38"><name pos:start="193:24" pos:end="193:30">AVERROR</name><argument_list pos:start="193:31" pos:end="193:38">(<argument pos:start="193:32" pos:end="193:37"><expr pos:start="193:32" pos:end="193:37"><name pos:start="193:32" pos:end="193:37">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="197:11" pos:end="215:9">else <block pos:start="197:16" pos:end="215:9">{<block_content pos:start="199:13" pos:end="213:13">

            <switch pos:start="199:13" pos:end="213:13">switch<condition pos:start="199:19" pos:end="199:62">(<expr pos:start="199:20" pos:end="199:61"><literal type="number" pos:start="199:20" pos:end="199:21">16</literal> <operator pos:start="199:23" pos:end="199:23">*</operator> <name pos:start="199:25" pos:end="199:41"><name pos:start="199:25" pos:end="199:25">f</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:41">chroma_h_shift</name></name> <operator pos:start="199:43" pos:end="199:43">+</operator> <name pos:start="199:45" pos:end="199:61"><name pos:start="199:45" pos:end="199:45">f</name><operator pos:start="199:46" pos:end="199:47">-&gt;</operator><name pos:start="199:48" pos:end="199:61">chroma_v_shift</name></name></expr>)</condition> <block pos:start="199:64" pos:end="213:13">{<block_content pos:start="201:13" pos:end="211:39">

            <case pos:start="201:13" pos:end="201:22">case <expr pos:start="201:18" pos:end="201:21"><literal type="number" pos:start="201:18" pos:end="201:21">0x00</literal></expr>:</case> <expr_stmt pos:start="201:24" pos:end="201:64"><expr pos:start="201:24" pos:end="201:63"><name pos:start="201:24" pos:end="201:40"><name pos:start="201:24" pos:end="201:24">f</name><operator pos:start="201:25" pos:end="201:26">-&gt;</operator><name pos:start="201:27" pos:end="201:31">avctx</name><operator pos:start="201:32" pos:end="201:33">-&gt;</operator><name pos:start="201:34" pos:end="201:40">pix_fmt</name></name> <operator pos:start="201:42" pos:end="201:42">=</operator> <name pos:start="201:44" pos:end="201:63">AV_PIX_FMT_YUV444P16</name></expr>;</expr_stmt> <break pos:start="201:66" pos:end="201:71">break;</break>

            <case pos:start="203:13" pos:end="203:22">case <expr pos:start="203:18" pos:end="203:21"><literal type="number" pos:start="203:18" pos:end="203:21">0x10</literal></expr>:</case> <expr_stmt pos:start="203:24" pos:end="203:64"><expr pos:start="203:24" pos:end="203:63"><name pos:start="203:24" pos:end="203:40"><name pos:start="203:24" pos:end="203:24">f</name><operator pos:start="203:25" pos:end="203:26">-&gt;</operator><name pos:start="203:27" pos:end="203:31">avctx</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:40">pix_fmt</name></name> <operator pos:start="203:42" pos:end="203:42">=</operator> <name pos:start="203:44" pos:end="203:63">AV_PIX_FMT_YUV422P16</name></expr>;</expr_stmt> <break pos:start="203:66" pos:end="203:71">break;</break>

            <case pos:start="205:13" pos:end="205:22">case <expr pos:start="205:18" pos:end="205:21"><literal type="number" pos:start="205:18" pos:end="205:21">0x11</literal></expr>:</case> <expr_stmt pos:start="205:24" pos:end="205:64"><expr pos:start="205:24" pos:end="205:63"><name pos:start="205:24" pos:end="205:40"><name pos:start="205:24" pos:end="205:24">f</name><operator pos:start="205:25" pos:end="205:26">-&gt;</operator><name pos:start="205:27" pos:end="205:31">avctx</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:40">pix_fmt</name></name> <operator pos:start="205:42" pos:end="205:42">=</operator> <name pos:start="205:44" pos:end="205:63">AV_PIX_FMT_YUV420P16</name></expr>;</expr_stmt> <break pos:start="205:66" pos:end="205:71">break;</break>

            <default pos:start="207:13" pos:end="207:20">default:</default>

                <expr_stmt pos:start="209:17" pos:end="209:73"><expr pos:start="209:17" pos:end="209:72"><call pos:start="209:17" pos:end="209:72"><name pos:start="209:17" pos:end="209:22">av_log</name><argument_list pos:start="209:23" pos:end="209:72">(<argument pos:start="209:24" pos:end="209:31"><expr pos:start="209:24" pos:end="209:31"><name pos:start="209:24" pos:end="209:31"><name pos:start="209:24" pos:end="209:24">f</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:31">avctx</name></name></expr></argument>, <argument pos:start="209:34" pos:end="209:45"><expr pos:start="209:34" pos:end="209:45"><name pos:start="209:34" pos:end="209:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:48" pos:end="209:71"><expr pos:start="209:48" pos:end="209:71"><literal type="string" pos:start="209:48" pos:end="209:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="211:17" pos:end="211:39">return <expr pos:start="211:24" pos:end="211:38"><call pos:start="211:24" pos:end="211:38"><name pos:start="211:24" pos:end="211:30">AVERROR</name><argument_list pos:start="211:31" pos:end="211:38">(<argument pos:start="211:32" pos:end="211:37"><expr pos:start="211:32" pos:end="211:37"><name pos:start="211:32" pos:end="211:37">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="217:7" pos:end="251:5">else if <condition pos:start="217:15" pos:end="217:34">(<expr pos:start="217:16" pos:end="217:33"><name pos:start="217:16" pos:end="217:28"><name pos:start="217:16" pos:end="217:16">f</name><operator pos:start="217:17" pos:end="217:18">-&gt;</operator><name pos:start="217:19" pos:end="217:28">colorspace</name></name> <operator pos:start="217:30" pos:end="217:31">==</operator> <literal type="number" pos:start="217:33" pos:end="217:33">1</literal></expr>)</condition> <block pos:start="217:36" pos:end="251:5">{<block_content pos:start="219:9" pos:end="249:67">

        <if_stmt pos:start="219:9" pos:end="227:9"><if pos:start="219:9" pos:end="227:9">if <condition pos:start="219:12" pos:end="219:51">(<expr pos:start="219:13" pos:end="219:50"><name pos:start="219:13" pos:end="219:29"><name pos:start="219:13" pos:end="219:13">f</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:29">chroma_h_shift</name></name> <operator pos:start="219:31" pos:end="219:32">||</operator> <name pos:start="219:34" pos:end="219:50"><name pos:start="219:34" pos:end="219:34">f</name><operator pos:start="219:35" pos:end="219:36">-&gt;</operator><name pos:start="219:37" pos:end="219:50">chroma_v_shift</name></name></expr>)</condition> <block pos:start="219:53" pos:end="227:9">{<block_content pos:start="221:13" pos:end="225:35">

            <expr_stmt pos:start="221:13" pos:end="223:76"><expr pos:start="221:13" pos:end="223:75"><call pos:start="221:13" pos:end="223:75"><name pos:start="221:13" pos:end="221:18">av_log</name><argument_list pos:start="221:19" pos:end="223:75">(<argument pos:start="221:20" pos:end="221:27"><expr pos:start="221:20" pos:end="221:27"><name pos:start="221:20" pos:end="221:27"><name pos:start="221:20" pos:end="221:20">f</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:27">avctx</name></name></expr></argument>, <argument pos:start="221:30" pos:end="221:41"><expr pos:start="221:30" pos:end="221:41"><name pos:start="221:30" pos:end="221:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="223:20" pos:end="223:74"><expr pos:start="223:20" pos:end="223:74"><literal type="string" pos:start="223:20" pos:end="223:74">"chroma subsampling not supported in this colorspace\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="225:13" pos:end="225:35">return <expr pos:start="225:20" pos:end="225:34"><call pos:start="225:20" pos:end="225:34"><name pos:start="225:20" pos:end="225:26">AVERROR</name><argument_list pos:start="225:27" pos:end="225:34">(<argument pos:start="225:28" pos:end="225:33"><expr pos:start="225:28" pos:end="225:33"><name pos:start="225:28" pos:end="225:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="229:9" pos:end="249:67"><if pos:start="229:9" pos:end="231:49">if <condition pos:start="229:12" pos:end="229:53">(     <expr pos:start="229:18" pos:end="229:52"><name pos:start="229:18" pos:end="229:46"><name pos:start="229:18" pos:end="229:18">f</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:25">avctx</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:46">bits_per_raw_sample</name></name> <operator pos:start="229:48" pos:end="229:49">==</operator>  <literal type="number" pos:start="229:52" pos:end="229:52">9</literal></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:49"><block_content pos:start="231:13" pos:end="231:49">

            <expr_stmt pos:start="231:13" pos:end="231:49"><expr pos:start="231:13" pos:end="231:48"><name pos:start="231:13" pos:end="231:29"><name pos:start="231:13" pos:end="231:13">f</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:20">avctx</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:29">pix_fmt</name></name> <operator pos:start="231:31" pos:end="231:31">=</operator> <name pos:start="231:33" pos:end="231:48">AV_PIX_FMT_GBRP9</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="233:9" pos:end="235:50">else if <condition pos:start="233:17" pos:end="233:53">(<expr pos:start="233:18" pos:end="233:52"><name pos:start="233:18" pos:end="233:46"><name pos:start="233:18" pos:end="233:18">f</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:25">avctx</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:46">bits_per_raw_sample</name></name> <operator pos:start="233:48" pos:end="233:49">==</operator> <literal type="number" pos:start="233:51" pos:end="233:52">10</literal></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:50"><block_content pos:start="235:13" pos:end="235:50">

            <expr_stmt pos:start="235:13" pos:end="235:50"><expr pos:start="235:13" pos:end="235:49"><name pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:13">f</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:20">avctx</name><operator pos:start="235:21" pos:end="235:22">-&gt;</operator><name pos:start="235:23" pos:end="235:29">pix_fmt</name></name> <operator pos:start="235:31" pos:end="235:31">=</operator> <name pos:start="235:33" pos:end="235:49">AV_PIX_FMT_GBRP10</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="237:9" pos:end="239:50">else if <condition pos:start="237:17" pos:end="237:53">(<expr pos:start="237:18" pos:end="237:52"><name pos:start="237:18" pos:end="237:46"><name pos:start="237:18" pos:end="237:18">f</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:25">avctx</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:46">bits_per_raw_sample</name></name> <operator pos:start="237:48" pos:end="237:49">==</operator> <literal type="number" pos:start="237:51" pos:end="237:52">12</literal></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:50"><block_content pos:start="239:13" pos:end="239:50">

            <expr_stmt pos:start="239:13" pos:end="239:50"><expr pos:start="239:13" pos:end="239:49"><name pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:13">f</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:20">avctx</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:29">pix_fmt</name></name> <operator pos:start="239:31" pos:end="239:31">=</operator> <name pos:start="239:33" pos:end="239:49">AV_PIX_FMT_GBRP12</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="241:9" pos:end="243:50">else if <condition pos:start="241:17" pos:end="241:53">(<expr pos:start="241:18" pos:end="241:52"><name pos:start="241:18" pos:end="241:46"><name pos:start="241:18" pos:end="241:18">f</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:25">avctx</name><operator pos:start="241:26" pos:end="241:27">-&gt;</operator><name pos:start="241:28" pos:end="241:46">bits_per_raw_sample</name></name> <operator pos:start="241:48" pos:end="241:49">==</operator> <literal type="number" pos:start="241:51" pos:end="241:52">14</literal></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:50"><block_content pos:start="243:13" pos:end="243:50">

            <expr_stmt pos:start="243:13" pos:end="243:50"><expr pos:start="243:13" pos:end="243:49"><name pos:start="243:13" pos:end="243:29"><name pos:start="243:13" pos:end="243:13">f</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:20">avctx</name><operator pos:start="243:21" pos:end="243:22">-&gt;</operator><name pos:start="243:23" pos:end="243:29">pix_fmt</name></name> <operator pos:start="243:31" pos:end="243:31">=</operator> <name pos:start="243:33" pos:end="243:49">AV_PIX_FMT_GBRP14</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="245:9" pos:end="247:66">else

        if <condition pos:start="247:12" pos:end="247:28">(<expr pos:start="247:13" pos:end="247:27"><name pos:start="247:13" pos:end="247:27"><name pos:start="247:13" pos:end="247:13">f</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:27">transparency</name></name></expr>)</condition><block type="pseudo" pos:start="247:30" pos:end="247:66"><block_content pos:start="247:30" pos:end="247:66"> <expr_stmt pos:start="247:30" pos:end="247:66"><expr pos:start="247:30" pos:end="247:65"><name pos:start="247:30" pos:end="247:46"><name pos:start="247:30" pos:end="247:30">f</name><operator pos:start="247:31" pos:end="247:32">-&gt;</operator><name pos:start="247:33" pos:end="247:37">avctx</name><operator pos:start="247:38" pos:end="247:39">-&gt;</operator><name pos:start="247:40" pos:end="247:46">pix_fmt</name></name> <operator pos:start="247:48" pos:end="247:48">=</operator> <name pos:start="247:50" pos:end="247:65">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="249:9" pos:end="249:67">else<block type="pseudo" pos:start="249:30" pos:end="249:67"><block_content pos:start="249:30" pos:end="249:67">                 <expr_stmt pos:start="249:30" pos:end="249:67"><expr pos:start="249:30" pos:end="249:66"><name pos:start="249:30" pos:end="249:46"><name pos:start="249:30" pos:end="249:30">f</name><operator pos:start="249:31" pos:end="249:32">-&gt;</operator><name pos:start="249:33" pos:end="249:37">avctx</name><operator pos:start="249:38" pos:end="249:39">-&gt;</operator><name pos:start="249:40" pos:end="249:46">pix_fmt</name></name> <operator pos:start="249:48" pos:end="249:48">=</operator> <name pos:start="249:50" pos:end="249:66">AV_PIX_FMT_0RGB32</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="251:7" pos:end="257:5">else <block pos:start="251:12" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:31">

        <expr_stmt pos:start="253:9" pos:end="253:69"><expr pos:start="253:9" pos:end="253:68"><call pos:start="253:9" pos:end="253:68"><name pos:start="253:9" pos:end="253:14">av_log</name><argument_list pos:start="253:15" pos:end="253:68">(<argument pos:start="253:16" pos:end="253:23"><expr pos:start="253:16" pos:end="253:23"><name pos:start="253:16" pos:end="253:23"><name pos:start="253:16" pos:end="253:16">f</name><operator pos:start="253:17" pos:end="253:18">-&gt;</operator><name pos:start="253:19" pos:end="253:23">avctx</name></name></expr></argument>, <argument pos:start="253:26" pos:end="253:37"><expr pos:start="253:26" pos:end="253:37"><name pos:start="253:26" pos:end="253:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="253:40" pos:end="253:67"><expr pos:start="253:40" pos:end="253:67"><literal type="string" pos:start="253:40" pos:end="253:67">"colorspace not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="255:9" pos:end="255:31">return <expr pos:start="255:16" pos:end="255:30"><call pos:start="255:16" pos:end="255:30"><name pos:start="255:16" pos:end="255:22">AVERROR</name><argument_list pos:start="255:23" pos:end="255:30">(<argument pos:start="255:24" pos:end="255:29"><expr pos:start="255:24" pos:end="255:29"><name pos:start="255:24" pos:end="255:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="261:5" pos:end="263:69"><expr pos:start="261:5" pos:end="263:68"><call pos:start="261:5" pos:end="263:68"><name pos:start="261:5" pos:end="261:11">av_dlog</name><argument_list pos:start="261:12" pos:end="263:68">(<argument pos:start="261:13" pos:end="261:20"><expr pos:start="261:13" pos:end="261:20"><name pos:start="261:13" pos:end="261:20"><name pos:start="261:13" pos:end="261:13">f</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:20">avctx</name></name></expr></argument>, <argument pos:start="261:23" pos:end="261:34"><expr pos:start="261:23" pos:end="261:34"><literal type="string" pos:start="261:23" pos:end="261:34">"%d %d %d\n"</literal></expr></argument>,

            <argument pos:start="263:13" pos:end="263:29"><expr pos:start="263:13" pos:end="263:29"><name pos:start="263:13" pos:end="263:29"><name pos:start="263:13" pos:end="263:13">f</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:29">chroma_h_shift</name></name></expr></argument>, <argument pos:start="263:32" pos:end="263:48"><expr pos:start="263:32" pos:end="263:48"><name pos:start="263:32" pos:end="263:48"><name pos:start="263:32" pos:end="263:32">f</name><operator pos:start="263:33" pos:end="263:34">-&gt;</operator><name pos:start="263:35" pos:end="263:48">chroma_v_shift</name></name></expr></argument>, <argument pos:start="263:51" pos:end="263:67"><expr pos:start="263:51" pos:end="263:67"><name pos:start="263:51" pos:end="263:67"><name pos:start="263:51" pos:end="263:51">f</name><operator pos:start="263:52" pos:end="263:53">-&gt;</operator><name pos:start="263:54" pos:end="263:58">avctx</name><operator pos:start="263:59" pos:end="263:60">-&gt;</operator><name pos:start="263:61" pos:end="263:67">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="265:5" pos:end="303:5"><if pos:start="265:5" pos:end="277:5">if <condition pos:start="265:8" pos:end="265:23">(<expr pos:start="265:9" pos:end="265:22"><name pos:start="265:9" pos:end="265:18"><name pos:start="265:9" pos:end="265:9">f</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:18">version</name></name> <operator pos:start="265:20" pos:end="265:20">&lt;</operator> <literal type="number" pos:start="265:22" pos:end="265:22">2</literal></expr>)</condition> <block pos:start="265:25" pos:end="277:5">{<block_content pos:start="267:9" pos:end="275:9">

        <expr_stmt pos:start="267:9" pos:end="267:61"><expr pos:start="267:9" pos:end="267:60"><name pos:start="267:9" pos:end="267:21">context_count</name> <operator pos:start="267:23" pos:end="267:23">=</operator> <call pos:start="267:25" pos:end="267:60"><name pos:start="267:25" pos:end="267:41">read_quant_tables</name><argument_list pos:start="267:42" pos:end="267:60">(<argument pos:start="267:43" pos:end="267:43"><expr pos:start="267:43" pos:end="267:43"><name pos:start="267:43" pos:end="267:43">c</name></expr></argument>, <argument pos:start="267:46" pos:end="267:59"><expr pos:start="267:46" pos:end="267:59"><name pos:start="267:46" pos:end="267:59"><name pos:start="267:46" pos:end="267:46">f</name><operator pos:start="267:47" pos:end="267:48">-&gt;</operator><name pos:start="267:49" pos:end="267:59">quant_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="269:9" pos:end="275:9"><if pos:start="269:9" pos:end="275:9">if <condition pos:start="269:12" pos:end="269:30">(<expr pos:start="269:13" pos:end="269:29"><name pos:start="269:13" pos:end="269:25">context_count</name> <operator pos:start="269:27" pos:end="269:27">&lt;</operator> <literal type="number" pos:start="269:29" pos:end="269:29">0</literal></expr>)</condition> <block pos:start="269:32" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:39">

            <expr_stmt pos:start="271:13" pos:end="271:71"><expr pos:start="271:13" pos:end="271:70"><call pos:start="271:13" pos:end="271:70"><name pos:start="271:13" pos:end="271:18">av_log</name><argument_list pos:start="271:19" pos:end="271:70">(<argument pos:start="271:20" pos:end="271:27"><expr pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:20">f</name><operator pos:start="271:21" pos:end="271:22">-&gt;</operator><name pos:start="271:23" pos:end="271:27">avctx</name></name></expr></argument>, <argument pos:start="271:30" pos:end="271:41"><expr pos:start="271:30" pos:end="271:41"><name pos:start="271:30" pos:end="271:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:44" pos:end="271:69"><expr pos:start="271:44" pos:end="271:69"><literal type="string" pos:start="271:44" pos:end="271:69">"read_quant_table error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="273:13" pos:end="273:39">return <expr pos:start="273:20" pos:end="273:38"><name pos:start="273:20" pos:end="273:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="277:7" pos:end="281:5">else if <condition pos:start="277:15" pos:end="277:30">(<expr pos:start="277:16" pos:end="277:29"><name pos:start="277:16" pos:end="277:25"><name pos:start="277:16" pos:end="277:16">f</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:25">version</name></name> <operator pos:start="277:27" pos:end="277:27">&lt;</operator> <literal type="number" pos:start="277:29" pos:end="277:29">3</literal></expr>)</condition> <block pos:start="277:32" pos:end="281:5">{<block_content pos:start="279:9" pos:end="279:49">

        <expr_stmt pos:start="279:9" pos:end="279:49"><expr pos:start="279:9" pos:end="279:48"><name pos:start="279:9" pos:end="279:22"><name pos:start="279:9" pos:end="279:9">f</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:22">slice_count</name></name> <operator pos:start="279:24" pos:end="279:24">=</operator> <call pos:start="279:26" pos:end="279:48"><name pos:start="279:26" pos:end="279:35">get_symbol</name><argument_list pos:start="279:36" pos:end="279:48">(<argument pos:start="279:37" pos:end="279:37"><expr pos:start="279:37" pos:end="279:37"><name pos:start="279:37" pos:end="279:37">c</name></expr></argument>, <argument pos:start="279:40" pos:end="279:44"><expr pos:start="279:40" pos:end="279:44"><name pos:start="279:40" pos:end="279:44">state</name></expr></argument>, <argument pos:start="279:47" pos:end="279:47"><expr pos:start="279:47" pos:end="279:47"><literal type="number" pos:start="279:47" pos:end="279:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="281:7" pos:end="303:5">else <block pos:start="281:12" pos:end="303:5">{<block_content pos:start="283:9" pos:end="301:9">

        <decl_stmt pos:start="283:9" pos:end="283:45"><decl pos:start="283:9" pos:end="283:44"><type pos:start="283:9" pos:end="283:23"><specifier pos:start="283:9" pos:end="283:13">const</specifier> <name pos:start="283:15" pos:end="283:21">uint8_t</name> <modifier pos:start="283:23" pos:end="283:23">*</modifier></type><name pos:start="283:24" pos:end="283:24">p</name> <init pos:start="283:26" pos:end="283:44">= <expr pos:start="283:28" pos:end="283:44"><name pos:start="283:28" pos:end="283:44"><name pos:start="283:28" pos:end="283:28">c</name><operator pos:start="283:29" pos:end="283:30">-&gt;</operator><name pos:start="283:31" pos:end="283:44">bytestream_end</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="285:9" pos:end="301:9">for <control pos:start="285:13" pos:end="289:30">(<init pos:start="285:14" pos:end="285:32"><expr pos:start="285:14" pos:end="285:31"><name pos:start="285:14" pos:end="285:27"><name pos:start="285:14" pos:end="285:14">f</name><operator pos:start="285:15" pos:end="285:16">-&gt;</operator><name pos:start="285:17" pos:end="285:27">slice_count</name></name> <operator pos:start="285:29" pos:end="285:29">=</operator> <literal type="number" pos:start="285:31" pos:end="285:31">0</literal></expr>;</init>

             <condition pos:start="287:14" pos:end="287:72"><expr pos:start="287:14" pos:end="287:71"><name pos:start="287:14" pos:end="287:27"><name pos:start="287:14" pos:end="287:14">f</name><operator pos:start="287:15" pos:end="287:16">-&gt;</operator><name pos:start="287:17" pos:end="287:27">slice_count</name></name> <operator pos:start="287:29" pos:end="287:29">&lt;</operator> <name pos:start="287:31" pos:end="287:40">MAX_SLICES</name> <operator pos:start="287:42" pos:end="287:43">&amp;&amp;</operator> <literal type="number" pos:start="287:45" pos:end="287:45">3</literal> <operator pos:start="287:47" pos:end="287:47">&lt;</operator> <name pos:start="287:49" pos:end="287:49">p</name> <operator pos:start="287:51" pos:end="287:51">-</operator> <name pos:start="287:53" pos:end="287:71"><name pos:start="287:53" pos:end="287:53">c</name><operator pos:start="287:54" pos:end="287:55">-&gt;</operator><name pos:start="287:56" pos:end="287:71">bytestream_start</name></name></expr>;</condition>

             <incr pos:start="289:14" pos:end="289:29"><expr pos:start="289:14" pos:end="289:29"><name pos:start="289:14" pos:end="289:27"><name pos:start="289:14" pos:end="289:14">f</name><operator pos:start="289:15" pos:end="289:16">-&gt;</operator><name pos:start="289:17" pos:end="289:27">slice_count</name></name><operator pos:start="289:28" pos:end="289:29">++</operator></expr></incr>)</control> <block pos:start="289:32" pos:end="301:9">{<block_content pos:start="291:13" pos:end="299:32">

            <decl_stmt pos:start="291:13" pos:end="291:40"><decl pos:start="291:13" pos:end="291:39"><type pos:start="291:13" pos:end="291:15"><name pos:start="291:13" pos:end="291:15">int</name></type> <name pos:start="291:17" pos:end="291:23">trailer</name> <init pos:start="291:25" pos:end="291:39">= <expr pos:start="291:27" pos:end="291:39"><literal type="number" pos:start="291:27" pos:end="291:29">3</literal> <operator pos:start="291:29" pos:end="291:29">+</operator> <literal type="number" pos:start="291:31" pos:end="291:31">5</literal><operator pos:start="291:32" pos:end="291:32">*</operator><operator pos:start="291:33" pos:end="291:33">!</operator><operator pos:start="291:34" pos:end="291:34">!</operator><name pos:start="291:35" pos:end="291:39"><name pos:start="291:35" pos:end="291:35">f</name><operator pos:start="291:36" pos:end="291:37">-&gt;</operator><name pos:start="291:38" pos:end="291:39">ec</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="293:13" pos:end="293:42"><decl pos:start="293:13" pos:end="293:41"><type pos:start="293:13" pos:end="293:15"><name pos:start="293:13" pos:end="293:15">int</name></type> <name pos:start="293:17" pos:end="293:20">size</name> <init pos:start="293:22" pos:end="293:41">= <expr pos:start="293:24" pos:end="293:41"><call pos:start="293:24" pos:end="293:41"><name pos:start="293:24" pos:end="293:30">AV_RB24</name><argument_list pos:start="293:31" pos:end="293:41">(<argument pos:start="293:32" pos:end="293:40"><expr pos:start="293:32" pos:end="293:40"><name pos:start="293:32" pos:end="293:32">p</name><operator pos:start="293:33" pos:end="293:33">-</operator><name pos:start="293:34" pos:end="293:40">trailer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="295:13" pos:end="297:22"><if pos:start="295:13" pos:end="297:22">if <condition pos:start="295:16" pos:end="295:57">(<expr pos:start="295:17" pos:end="295:56"><name pos:start="295:17" pos:end="295:20">size</name> <operator pos:start="295:22" pos:end="295:22">+</operator> <name pos:start="295:24" pos:end="295:30">trailer</name> <operator pos:start="295:32" pos:end="295:32">&gt;</operator> <name pos:start="295:34" pos:end="295:34">p</name> <operator pos:start="295:36" pos:end="295:36">-</operator> <name pos:start="295:38" pos:end="295:56"><name pos:start="295:38" pos:end="295:38">c</name><operator pos:start="295:39" pos:end="295:40">-&gt;</operator><name pos:start="295:41" pos:end="295:56">bytestream_start</name></name></expr>)</condition><block type="pseudo" pos:start="297:17" pos:end="297:22"><block_content pos:start="297:17" pos:end="297:22">

                <break pos:start="297:17" pos:end="297:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:32"><expr pos:start="299:13" pos:end="299:31"><name pos:start="299:13" pos:end="299:13">p</name> <operator pos:start="299:15" pos:end="299:16">-=</operator> <name pos:start="299:18" pos:end="299:21">size</name> <operator pos:start="299:23" pos:end="299:23">+</operator> <name pos:start="299:25" pos:end="299:31">trailer</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="305:5" pos:end="311:5"><if pos:start="305:5" pos:end="311:5">if <condition pos:start="305:8" pos:end="305:69">(<expr pos:start="305:9" pos:end="305:68"><name pos:start="305:9" pos:end="305:22"><name pos:start="305:9" pos:end="305:9">f</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:22">slice_count</name></name> <operator pos:start="305:24" pos:end="305:24">&gt;</operator> <operator pos:start="305:26" pos:end="305:26">(</operator><name pos:start="305:27" pos:end="305:34">unsigned</name><operator pos:start="305:35" pos:end="305:35">)</operator><name pos:start="305:36" pos:end="305:45">MAX_SLICES</name> <operator pos:start="305:47" pos:end="305:48">||</operator> <name pos:start="305:50" pos:end="305:63"><name pos:start="305:50" pos:end="305:50">f</name><operator pos:start="305:51" pos:end="305:52">-&gt;</operator><name pos:start="305:53" pos:end="305:63">slice_count</name></name> <operator pos:start="305:65" pos:end="305:66">&lt;=</operator> <literal type="number" pos:start="305:68" pos:end="305:68">0</literal></expr>)</condition> <block pos:start="305:71" pos:end="311:5">{<block_content pos:start="307:9" pos:end="309:35">

        <expr_stmt pos:start="307:9" pos:end="307:86"><expr pos:start="307:9" pos:end="307:85"><call pos:start="307:9" pos:end="307:85"><name pos:start="307:9" pos:end="307:14">av_log</name><argument_list pos:start="307:15" pos:end="307:85">(<argument pos:start="307:16" pos:end="307:23"><expr pos:start="307:16" pos:end="307:23"><name pos:start="307:16" pos:end="307:23"><name pos:start="307:16" pos:end="307:16">f</name><operator pos:start="307:17" pos:end="307:18">-&gt;</operator><name pos:start="307:19" pos:end="307:23">avctx</name></name></expr></argument>, <argument pos:start="307:26" pos:end="307:37"><expr pos:start="307:26" pos:end="307:37"><name pos:start="307:26" pos:end="307:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="307:40" pos:end="307:68"><expr pos:start="307:40" pos:end="307:68"><literal type="string" pos:start="307:40" pos:end="307:68">"slice count %d is invalid\n"</literal></expr></argument>, <argument pos:start="307:71" pos:end="307:84"><expr pos:start="307:71" pos:end="307:84"><name pos:start="307:71" pos:end="307:84"><name pos:start="307:71" pos:end="307:71">f</name><operator pos:start="307:72" pos:end="307:73">-&gt;</operator><name pos:start="307:74" pos:end="307:84">slice_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="309:9" pos:end="309:35">return <expr pos:start="309:16" pos:end="309:34"><name pos:start="309:16" pos:end="309:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="315:5" pos:end="419:5">for <control pos:start="315:9" pos:end="315:40">(<init pos:start="315:10" pos:end="315:15"><expr pos:start="315:10" pos:end="315:14"><name pos:start="315:10" pos:end="315:10">j</name> <operator pos:start="315:12" pos:end="315:12">=</operator> <literal type="number" pos:start="315:14" pos:end="315:14">0</literal></expr>;</init> <condition pos:start="315:17" pos:end="315:35"><expr pos:start="315:17" pos:end="315:34"><name pos:start="315:17" pos:end="315:17">j</name> <operator pos:start="315:19" pos:end="315:19">&lt;</operator> <name pos:start="315:21" pos:end="315:34"><name pos:start="315:21" pos:end="315:21">f</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:34">slice_count</name></name></expr>;</condition> <incr pos:start="315:37" pos:end="315:39"><expr pos:start="315:37" pos:end="315:39"><name pos:start="315:37" pos:end="315:37">j</name><operator pos:start="315:38" pos:end="315:39">++</operator></expr></incr>)</control> <block pos:start="315:42" pos:end="419:5">{<block_content pos:start="317:9" pos:end="417:9">

        <decl_stmt pos:start="317:9" pos:end="317:46"><decl pos:start="317:9" pos:end="317:45"><type pos:start="317:9" pos:end="317:21"><name pos:start="317:9" pos:end="317:19">FFV1Context</name> <modifier pos:start="317:21" pos:end="317:21">*</modifier></type><name pos:start="317:22" pos:end="317:23">fs</name> <init pos:start="317:25" pos:end="317:45">= <expr pos:start="317:27" pos:end="317:45"><name pos:start="317:27" pos:end="317:45"><name pos:start="317:27" pos:end="317:27">f</name><operator pos:start="317:28" pos:end="317:29">-&gt;</operator><name pos:start="317:30" pos:end="317:42">slice_context</name><index pos:start="317:43" pos:end="317:45">[<expr pos:start="317:44" pos:end="317:44"><name pos:start="317:44" pos:end="317:44">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:34"><expr pos:start="319:9" pos:end="319:33"><name pos:start="319:9" pos:end="319:14"><name pos:start="319:9" pos:end="319:10">fs</name><operator pos:start="319:11" pos:end="319:12">-&gt;</operator><name pos:start="319:13" pos:end="319:14">ac</name></name>            <operator pos:start="319:27" pos:end="319:27">=</operator> <name pos:start="319:29" pos:end="319:33"><name pos:start="319:29" pos:end="319:29">f</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:33">ac</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:45"><expr pos:start="321:9" pos:end="321:44"><name pos:start="321:9" pos:end="321:25"><name pos:start="321:9" pos:end="321:10">fs</name><operator pos:start="321:11" pos:end="321:12">-&gt;</operator><name pos:start="321:13" pos:end="321:25">packed_at_lsb</name></name> <operator pos:start="321:27" pos:end="321:27">=</operator> <name pos:start="321:29" pos:end="321:44"><name pos:start="321:29" pos:end="321:29">f</name><operator pos:start="321:30" pos:end="321:31">-&gt;</operator><name pos:start="321:32" pos:end="321:44">packed_at_lsb</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="325:9" pos:end="325:30"><expr pos:start="325:9" pos:end="325:29"><name pos:start="325:9" pos:end="325:25"><name pos:start="325:9" pos:end="325:10">fs</name><operator pos:start="325:11" pos:end="325:12">-&gt;</operator><name pos:start="325:13" pos:end="325:25">slice_damaged</name></name> <operator pos:start="325:27" pos:end="325:27">=</operator> <literal type="number" pos:start="325:29" pos:end="325:29">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="329:9" pos:end="361:9"><if pos:start="329:9" pos:end="361:9">if <condition pos:start="329:12" pos:end="329:28">(<expr pos:start="329:13" pos:end="329:27"><name pos:start="329:13" pos:end="329:22"><name pos:start="329:13" pos:end="329:13">f</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:22">version</name></name> <operator pos:start="329:24" pos:end="329:25">==</operator> <literal type="number" pos:start="329:27" pos:end="329:27">2</literal></expr>)</condition> <block pos:start="329:30" pos:end="361:9">{<block_content pos:start="331:13" pos:end="359:43">

            <expr_stmt pos:start="331:13" pos:end="331:73"><expr pos:start="331:13" pos:end="331:71"><name pos:start="331:13" pos:end="331:23"><name pos:start="331:13" pos:end="331:14">fs</name><operator pos:start="331:15" pos:end="331:16">-&gt;</operator><name pos:start="331:17" pos:end="331:23">slice_x</name></name>      <operator pos:start="331:30" pos:end="331:30">=</operator>  <call pos:start="331:33" pos:end="331:55"><name pos:start="331:33" pos:end="331:42">get_symbol</name><argument_list pos:start="331:43" pos:end="331:55">(<argument pos:start="331:44" pos:end="331:44"><expr pos:start="331:44" pos:end="331:44"><name pos:start="331:44" pos:end="331:44">c</name></expr></argument>, <argument pos:start="331:47" pos:end="331:51"><expr pos:start="331:47" pos:end="331:51"><name pos:start="331:47" pos:end="331:51">state</name></expr></argument>, <argument pos:start="331:54" pos:end="331:54"><expr pos:start="331:54" pos:end="331:54"><literal type="number" pos:start="331:54" pos:end="331:54">0</literal></expr></argument>)</argument_list></call>      <operator pos:start="331:62" pos:end="331:62">*</operator> <name pos:start="331:64" pos:end="331:71"><name pos:start="331:64" pos:end="331:64">f</name><operator pos:start="331:65" pos:end="331:66">-&gt;</operator><name pos:start="331:67" pos:end="331:71">width</name></name></expr> ;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:73"><expr pos:start="333:13" pos:end="333:72"><name pos:start="333:13" pos:end="333:23"><name pos:start="333:13" pos:end="333:14">fs</name><operator pos:start="333:15" pos:end="333:16">-&gt;</operator><name pos:start="333:17" pos:end="333:23">slice_y</name></name>      <operator pos:start="333:30" pos:end="333:30">=</operator>  <call pos:start="333:33" pos:end="333:55"><name pos:start="333:33" pos:end="333:42">get_symbol</name><argument_list pos:start="333:43" pos:end="333:55">(<argument pos:start="333:44" pos:end="333:44"><expr pos:start="333:44" pos:end="333:44"><name pos:start="333:44" pos:end="333:44">c</name></expr></argument>, <argument pos:start="333:47" pos:end="333:51"><expr pos:start="333:47" pos:end="333:51"><name pos:start="333:47" pos:end="333:51">state</name></expr></argument>, <argument pos:start="333:54" pos:end="333:54"><expr pos:start="333:54" pos:end="333:54"><literal type="number" pos:start="333:54" pos:end="333:54">0</literal></expr></argument>)</argument_list></call>      <operator pos:start="333:62" pos:end="333:62">*</operator> <name pos:start="333:64" pos:end="333:72"><name pos:start="333:64" pos:end="333:64">f</name><operator pos:start="333:65" pos:end="333:66">-&gt;</operator><name pos:start="333:67" pos:end="333:72">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:87"><expr pos:start="335:13" pos:end="335:86"><name pos:start="335:13" pos:end="335:27"><name pos:start="335:13" pos:end="335:14">fs</name><operator pos:start="335:15" pos:end="335:16">-&gt;</operator><name pos:start="335:17" pos:end="335:27">slice_width</name></name>  <operator pos:start="335:30" pos:end="335:30">=</operator> <operator pos:start="335:32" pos:end="335:32">(</operator><call pos:start="335:33" pos:end="335:55"><name pos:start="335:33" pos:end="335:42">get_symbol</name><argument_list pos:start="335:43" pos:end="335:55">(<argument pos:start="335:44" pos:end="335:44"><expr pos:start="335:44" pos:end="335:44"><name pos:start="335:44" pos:end="335:44">c</name></expr></argument>, <argument pos:start="335:47" pos:end="335:51"><expr pos:start="335:47" pos:end="335:51"><name pos:start="335:47" pos:end="335:51">state</name></expr></argument>, <argument pos:start="335:54" pos:end="335:54"><expr pos:start="335:54" pos:end="335:54"><literal type="number" pos:start="335:54" pos:end="335:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="335:57" pos:end="335:57">+</operator> <literal type="number" pos:start="335:59" pos:end="335:59">1</literal><operator pos:start="335:60" pos:end="335:60">)</operator> <operator pos:start="335:62" pos:end="335:62">*</operator> <name pos:start="335:64" pos:end="335:71"><name pos:start="335:64" pos:end="335:64">f</name><operator pos:start="335:65" pos:end="335:66">-&gt;</operator><name pos:start="335:67" pos:end="335:71">width</name></name>  <operator pos:start="335:74" pos:end="335:74">+</operator> <name pos:start="335:76" pos:end="335:86"><name pos:start="335:76" pos:end="335:77">fs</name><operator pos:start="335:78" pos:end="335:79">-&gt;</operator><name pos:start="335:80" pos:end="335:86">slice_x</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:87"><expr pos:start="337:13" pos:end="337:86"><name pos:start="337:13" pos:end="337:28"><name pos:start="337:13" pos:end="337:14">fs</name><operator pos:start="337:15" pos:end="337:16">-&gt;</operator><name pos:start="337:17" pos:end="337:28">slice_height</name></name> <operator pos:start="337:30" pos:end="337:30">=</operator> <operator pos:start="337:32" pos:end="337:32">(</operator><call pos:start="337:33" pos:end="337:55"><name pos:start="337:33" pos:end="337:42">get_symbol</name><argument_list pos:start="337:43" pos:end="337:55">(<argument pos:start="337:44" pos:end="337:44"><expr pos:start="337:44" pos:end="337:44"><name pos:start="337:44" pos:end="337:44">c</name></expr></argument>, <argument pos:start="337:47" pos:end="337:51"><expr pos:start="337:47" pos:end="337:51"><name pos:start="337:47" pos:end="337:51">state</name></expr></argument>, <argument pos:start="337:54" pos:end="337:54"><expr pos:start="337:54" pos:end="337:54"><literal type="number" pos:start="337:54" pos:end="337:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="337:57" pos:end="337:57">+</operator> <literal type="number" pos:start="337:59" pos:end="337:59">1</literal><operator pos:start="337:60" pos:end="337:60">)</operator> <operator pos:start="337:62" pos:end="337:62">*</operator> <name pos:start="337:64" pos:end="337:72"><name pos:start="337:64" pos:end="337:64">f</name><operator pos:start="337:65" pos:end="337:66">-&gt;</operator><name pos:start="337:67" pos:end="337:72">height</name></name> <operator pos:start="337:74" pos:end="337:74">+</operator> <name pos:start="337:76" pos:end="337:86"><name pos:start="337:76" pos:end="337:77">fs</name><operator pos:start="337:78" pos:end="337:79">-&gt;</operator><name pos:start="337:80" pos:end="337:86">slice_y</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="341:13" pos:end="341:47"><expr pos:start="341:13" pos:end="341:46"><name pos:start="341:13" pos:end="341:23"><name pos:start="341:13" pos:end="341:14">fs</name><operator pos:start="341:15" pos:end="341:16">-&gt;</operator><name pos:start="341:17" pos:end="341:23">slice_x</name></name>     <operator pos:start="341:29" pos:end="341:30">/=</operator> <name pos:start="341:32" pos:end="341:46"><name pos:start="341:32" pos:end="341:32">f</name><operator pos:start="341:33" pos:end="341:34">-&gt;</operator><name pos:start="341:35" pos:end="341:46">num_h_slices</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:47"><expr pos:start="343:13" pos:end="343:46"><name pos:start="343:13" pos:end="343:23"><name pos:start="343:13" pos:end="343:14">fs</name><operator pos:start="343:15" pos:end="343:16">-&gt;</operator><name pos:start="343:17" pos:end="343:23">slice_y</name></name>     <operator pos:start="343:29" pos:end="343:30">/=</operator> <name pos:start="343:32" pos:end="343:46"><name pos:start="343:32" pos:end="343:32">f</name><operator pos:start="343:33" pos:end="343:34">-&gt;</operator><name pos:start="343:35" pos:end="343:46">num_v_slices</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:80"><expr pos:start="345:13" pos:end="345:79"><name pos:start="345:13" pos:end="345:27"><name pos:start="345:13" pos:end="345:14">fs</name><operator pos:start="345:15" pos:end="345:16">-&gt;</operator><name pos:start="345:17" pos:end="345:27">slice_width</name></name>  <operator pos:start="345:30" pos:end="345:30">=</operator> <name pos:start="345:32" pos:end="345:46"><name pos:start="345:32" pos:end="345:33">fs</name><operator pos:start="345:34" pos:end="345:35">-&gt;</operator><name pos:start="345:36" pos:end="345:46">slice_width</name></name>  <operator pos:start="345:49" pos:end="345:49">/</operator> <name pos:start="345:51" pos:end="345:65"><name pos:start="345:51" pos:end="345:51">f</name><operator pos:start="345:52" pos:end="345:53">-&gt;</operator><name pos:start="345:54" pos:end="345:65">num_h_slices</name></name> <operator pos:start="345:67" pos:end="345:67">-</operator> <name pos:start="345:69" pos:end="345:79"><name pos:start="345:69" pos:end="345:70">fs</name><operator pos:start="345:71" pos:end="345:72">-&gt;</operator><name pos:start="345:73" pos:end="345:79">slice_x</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:80"><expr pos:start="347:13" pos:end="347:79"><name pos:start="347:13" pos:end="347:28"><name pos:start="347:13" pos:end="347:14">fs</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:28">slice_height</name></name> <operator pos:start="347:30" pos:end="347:30">=</operator> <name pos:start="347:32" pos:end="347:47"><name pos:start="347:32" pos:end="347:33">fs</name><operator pos:start="347:34" pos:end="347:35">-&gt;</operator><name pos:start="347:36" pos:end="347:47">slice_height</name></name> <operator pos:start="347:49" pos:end="347:49">/</operator> <name pos:start="347:51" pos:end="347:65"><name pos:start="347:51" pos:end="347:51">f</name><operator pos:start="347:52" pos:end="347:53">-&gt;</operator><name pos:start="347:54" pos:end="347:65">num_v_slices</name></name> <operator pos:start="347:67" pos:end="347:67">-</operator> <name pos:start="347:69" pos:end="347:79"><name pos:start="347:69" pos:end="347:70">fs</name><operator pos:start="347:71" pos:end="347:72">-&gt;</operator><name pos:start="347:73" pos:end="347:79">slice_y</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="349:13" pos:end="353:43"><if pos:start="349:13" pos:end="353:43">if <condition pos:start="349:16" pos:end="351:55">(<expr pos:start="349:17" pos:end="351:54"><operator pos:start="349:17" pos:end="349:17">(</operator><name pos:start="349:18" pos:end="349:25">unsigned</name><operator pos:start="349:26" pos:end="349:26">)</operator><name pos:start="349:27" pos:end="349:41"><name pos:start="349:27" pos:end="349:28">fs</name><operator pos:start="349:29" pos:end="349:30">-&gt;</operator><name pos:start="349:31" pos:end="349:41">slice_width</name></name>  <operator pos:start="349:44" pos:end="349:44">&gt;</operator> <name pos:start="349:46" pos:end="349:53"><name pos:start="349:46" pos:end="349:46">f</name><operator pos:start="349:47" pos:end="349:48">-&gt;</operator><name pos:start="349:49" pos:end="349:53">width</name></name> <operator pos:start="349:55" pos:end="349:56">||</operator>

                <operator pos:start="351:17" pos:end="351:17">(</operator><name pos:start="351:18" pos:end="351:25">unsigned</name><operator pos:start="351:26" pos:end="351:26">)</operator><name pos:start="351:27" pos:end="351:42"><name pos:start="351:27" pos:end="351:28">fs</name><operator pos:start="351:29" pos:end="351:30">-&gt;</operator><name pos:start="351:31" pos:end="351:42">slice_height</name></name> <operator pos:start="351:44" pos:end="351:44">&gt;</operator> <name pos:start="351:46" pos:end="351:54"><name pos:start="351:46" pos:end="351:46">f</name><operator pos:start="351:47" pos:end="351:48">-&gt;</operator><name pos:start="351:49" pos:end="351:54">height</name></name></expr>)</condition><block type="pseudo" pos:start="353:17" pos:end="353:43"><block_content pos:start="353:17" pos:end="353:43">

                <return pos:start="353:17" pos:end="353:43">return <expr pos:start="353:24" pos:end="353:42"><name pos:start="353:24" pos:end="353:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="355:13" pos:end="359:43"><if pos:start="355:13" pos:end="359:43">if <condition pos:start="355:16" pos:end="357:82">(   <expr pos:start="355:20" pos:end="357:81"><operator pos:start="355:20" pos:end="355:20">(</operator><name pos:start="355:21" pos:end="355:28">unsigned</name><operator pos:start="355:29" pos:end="355:29">)</operator><name pos:start="355:30" pos:end="355:40"><name pos:start="355:30" pos:end="355:31">fs</name><operator pos:start="355:32" pos:end="355:33">-&gt;</operator><name pos:start="355:34" pos:end="355:40">slice_x</name></name> <operator pos:start="355:42" pos:end="355:42">+</operator> <operator pos:start="355:44" pos:end="355:44">(</operator><name pos:start="355:45" pos:end="355:52">uint64_t</name><operator pos:start="355:53" pos:end="355:53">)</operator><name pos:start="355:54" pos:end="355:68"><name pos:start="355:54" pos:end="355:55">fs</name><operator pos:start="355:56" pos:end="355:57">-&gt;</operator><name pos:start="355:58" pos:end="355:68">slice_width</name></name>  <operator pos:start="355:71" pos:end="355:71">&gt;</operator> <name pos:start="355:73" pos:end="355:80"><name pos:start="355:73" pos:end="355:73">f</name><operator pos:start="355:74" pos:end="355:75">-&gt;</operator><name pos:start="355:76" pos:end="355:80">width</name></name>

                <operator pos:start="357:17" pos:end="357:18">||</operator> <operator pos:start="357:20" pos:end="357:20">(</operator><name pos:start="357:21" pos:end="357:28">unsigned</name><operator pos:start="357:29" pos:end="357:29">)</operator><name pos:start="357:30" pos:end="357:40"><name pos:start="357:30" pos:end="357:31">fs</name><operator pos:start="357:32" pos:end="357:33">-&gt;</operator><name pos:start="357:34" pos:end="357:40">slice_y</name></name> <operator pos:start="357:42" pos:end="357:42">+</operator> <operator pos:start="357:44" pos:end="357:44">(</operator><name pos:start="357:45" pos:end="357:52">uint64_t</name><operator pos:start="357:53" pos:end="357:53">)</operator><name pos:start="357:54" pos:end="357:69"><name pos:start="357:54" pos:end="357:55">fs</name><operator pos:start="357:56" pos:end="357:57">-&gt;</operator><name pos:start="357:58" pos:end="357:69">slice_height</name></name> <operator pos:start="357:71" pos:end="357:71">&gt;</operator> <name pos:start="357:73" pos:end="357:81"><name pos:start="357:73" pos:end="357:73">f</name><operator pos:start="357:74" pos:end="357:75">-&gt;</operator><name pos:start="357:76" pos:end="357:81">height</name></name></expr>)</condition><block type="pseudo" pos:start="359:17" pos:end="359:43"><block_content pos:start="359:17" pos:end="359:43">

                <return pos:start="359:17" pos:end="359:43">return <expr pos:start="359:24" pos:end="359:42"><name pos:start="359:24" pos:end="359:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="365:9" pos:end="417:9">for <control pos:start="365:13" pos:end="365:44">(<init pos:start="365:14" pos:end="365:19"><expr pos:start="365:14" pos:end="365:18"><name pos:start="365:14" pos:end="365:14">i</name> <operator pos:start="365:16" pos:end="365:16">=</operator> <literal type="number" pos:start="365:18" pos:end="365:18">0</literal></expr>;</init> <condition pos:start="365:21" pos:end="365:39"><expr pos:start="365:21" pos:end="365:38"><name pos:start="365:21" pos:end="365:21">i</name> <operator pos:start="365:23" pos:end="365:23">&lt;</operator> <name pos:start="365:25" pos:end="365:38"><name pos:start="365:25" pos:end="365:25">f</name><operator pos:start="365:26" pos:end="365:27">-&gt;</operator><name pos:start="365:28" pos:end="365:38">plane_count</name></name></expr>;</condition> <incr pos:start="365:41" pos:end="365:43"><expr pos:start="365:41" pos:end="365:43"><name pos:start="365:41" pos:end="365:41">i</name><operator pos:start="365:42" pos:end="365:43">++</operator></expr></incr>)</control> <block pos:start="365:46" pos:end="417:9">{<block_content pos:start="367:13" pos:end="415:13">

            <decl_stmt pos:start="367:13" pos:end="367:50"><decl pos:start="367:13" pos:end="367:49"><type pos:start="367:13" pos:end="367:31"><name pos:start="367:13" pos:end="367:24">PlaneContext</name> <modifier pos:start="367:26" pos:end="367:26">*</modifier><specifier pos:start="367:27" pos:end="367:31">const</specifier></type> <name pos:start="367:33" pos:end="367:33">p</name> <init pos:start="367:35" pos:end="367:49">= <expr pos:start="367:37" pos:end="367:49"><operator pos:start="367:37" pos:end="367:37">&amp;</operator><name pos:start="367:38" pos:end="367:49"><name pos:start="367:38" pos:end="367:39">fs</name><operator pos:start="367:40" pos:end="367:41">-&gt;</operator><name pos:start="367:42" pos:end="367:46">plane</name><index pos:start="367:47" pos:end="367:49">[<expr pos:start="367:48" pos:end="367:48"><name pos:start="367:48" pos:end="367:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="371:13" pos:end="397:13"><if pos:start="371:13" pos:end="393:13">if <condition pos:start="371:16" pos:end="371:32">(<expr pos:start="371:17" pos:end="371:31"><name pos:start="371:17" pos:end="371:26"><name pos:start="371:17" pos:end="371:17">f</name><operator pos:start="371:18" pos:end="371:19">-&gt;</operator><name pos:start="371:20" pos:end="371:26">version</name></name> <operator pos:start="371:28" pos:end="371:29">==</operator> <literal type="number" pos:start="371:31" pos:end="371:31">2</literal></expr>)</condition> <block pos:start="371:34" pos:end="393:13">{<block_content pos:start="373:17" pos:end="391:54">

                <decl_stmt pos:start="373:17" pos:end="373:50"><decl pos:start="373:17" pos:end="373:49"><type pos:start="373:17" pos:end="373:19"><name pos:start="373:17" pos:end="373:19">int</name></type> <name pos:start="373:21" pos:end="373:23">idx</name> <init pos:start="373:25" pos:end="373:49">= <expr pos:start="373:27" pos:end="373:49"><call pos:start="373:27" pos:end="373:49"><name pos:start="373:27" pos:end="373:36">get_symbol</name><argument_list pos:start="373:37" pos:end="373:49">(<argument pos:start="373:38" pos:end="373:38"><expr pos:start="373:38" pos:end="373:38"><name pos:start="373:38" pos:end="373:38">c</name></expr></argument>, <argument pos:start="373:41" pos:end="373:45"><expr pos:start="373:41" pos:end="373:45"><name pos:start="373:41" pos:end="373:45">state</name></expr></argument>, <argument pos:start="373:48" pos:end="373:48"><expr pos:start="373:48" pos:end="373:48"><literal type="number" pos:start="373:48" pos:end="373:48">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="375:17" pos:end="383:17"><if pos:start="375:17" pos:end="383:17">if <condition pos:start="375:20" pos:end="375:57">(<expr pos:start="375:21" pos:end="375:56"><name pos:start="375:21" pos:end="375:23">idx</name> <operator pos:start="375:25" pos:end="375:25">&gt;</operator> <operator pos:start="375:27" pos:end="375:27">(</operator><name pos:start="375:28" pos:end="375:35">unsigned</name><operator pos:start="375:36" pos:end="375:36">)</operator><name pos:start="375:37" pos:end="375:56"><name pos:start="375:37" pos:end="375:37">f</name><operator pos:start="375:38" pos:end="375:39">-&gt;</operator><name pos:start="375:40" pos:end="375:56">quant_table_count</name></name></expr>)</condition> <block pos:start="375:59" pos:end="383:17">{<block_content pos:start="377:21" pos:end="381:47">

                    <expr_stmt pos:start="377:21" pos:end="379:63"><expr pos:start="377:21" pos:end="379:62"><call pos:start="377:21" pos:end="379:62"><name pos:start="377:21" pos:end="377:26">av_log</name><argument_list pos:start="377:27" pos:end="379:62">(<argument pos:start="377:28" pos:end="377:35"><expr pos:start="377:28" pos:end="377:35"><name pos:start="377:28" pos:end="377:35"><name pos:start="377:28" pos:end="377:28">f</name><operator pos:start="377:29" pos:end="377:30">-&gt;</operator><name pos:start="377:31" pos:end="377:35">avctx</name></name></expr></argument>, <argument pos:start="377:38" pos:end="377:49"><expr pos:start="377:38" pos:end="377:49"><name pos:start="377:38" pos:end="377:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="379:28" pos:end="379:61"><expr pos:start="379:28" pos:end="379:61"><literal type="string" pos:start="379:28" pos:end="379:61">"quant_table_index out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="381:21" pos:end="381:47">return <expr pos:start="381:28" pos:end="381:46"><name pos:start="381:28" pos:end="381:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="385:17" pos:end="385:43"><expr pos:start="385:17" pos:end="385:42"><name pos:start="385:17" pos:end="385:36"><name pos:start="385:17" pos:end="385:17">p</name><operator pos:start="385:18" pos:end="385:19">-&gt;</operator><name pos:start="385:20" pos:end="385:36">quant_table_index</name></name> <operator pos:start="385:38" pos:end="385:38">=</operator> <name pos:start="385:40" pos:end="385:42">idx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="387:17" pos:end="389:47"><expr pos:start="387:17" pos:end="389:46"><call pos:start="387:17" pos:end="389:46"><name pos:start="387:17" pos:end="387:22">memcpy</name><argument_list pos:start="387:23" pos:end="389:46">(<argument pos:start="387:24" pos:end="387:37"><expr pos:start="387:24" pos:end="387:37"><name pos:start="387:24" pos:end="387:37"><name pos:start="387:24" pos:end="387:24">p</name><operator pos:start="387:25" pos:end="387:26">-&gt;</operator><name pos:start="387:27" pos:end="387:37">quant_table</name></name></expr></argument>, <argument pos:start="387:40" pos:end="387:59"><expr pos:start="387:40" pos:end="387:59"><name pos:start="387:40" pos:end="387:59"><name pos:start="387:40" pos:end="387:40">f</name><operator pos:start="387:41" pos:end="387:42">-&gt;</operator><name pos:start="387:43" pos:end="387:54">quant_tables</name><index pos:start="387:55" pos:end="387:59">[<expr pos:start="387:56" pos:end="387:58"><name pos:start="387:56" pos:end="387:58">idx</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="389:24" pos:end="389:45"><expr pos:start="389:24" pos:end="389:45"><sizeof pos:start="389:24" pos:end="389:45">sizeof<argument_list pos:start="389:30" pos:end="389:45">(<argument pos:start="389:31" pos:end="389:44"><expr pos:start="389:31" pos:end="389:44"><name pos:start="389:31" pos:end="389:44"><name pos:start="389:31" pos:end="389:31">p</name><operator pos:start="389:32" pos:end="389:33">-&gt;</operator><name pos:start="389:34" pos:end="389:44">quant_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="391:17" pos:end="391:54"><expr pos:start="391:17" pos:end="391:53"><name pos:start="391:17" pos:end="391:29">context_count</name> <operator pos:start="391:31" pos:end="391:31">=</operator> <name pos:start="391:33" pos:end="391:53"><name pos:start="391:33" pos:end="391:33">f</name><operator pos:start="391:34" pos:end="391:35">-&gt;</operator><name pos:start="391:36" pos:end="391:48">context_count</name><index pos:start="391:49" pos:end="391:53">[<expr pos:start="391:50" pos:end="391:52"><name pos:start="391:50" pos:end="391:52">idx</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="393:15" pos:end="397:13">else <block pos:start="393:20" pos:end="397:13">{<block_content pos:start="395:17" pos:end="395:79">

                <expr_stmt pos:start="395:17" pos:end="395:79"><expr pos:start="395:17" pos:end="395:78"><call pos:start="395:17" pos:end="395:78"><name pos:start="395:17" pos:end="395:22">memcpy</name><argument_list pos:start="395:23" pos:end="395:78">(<argument pos:start="395:24" pos:end="395:37"><expr pos:start="395:24" pos:end="395:37"><name pos:start="395:24" pos:end="395:37"><name pos:start="395:24" pos:end="395:24">p</name><operator pos:start="395:25" pos:end="395:26">-&gt;</operator><name pos:start="395:27" pos:end="395:37">quant_table</name></name></expr></argument>, <argument pos:start="395:40" pos:end="395:53"><expr pos:start="395:40" pos:end="395:53"><name pos:start="395:40" pos:end="395:53"><name pos:start="395:40" pos:end="395:40">f</name><operator pos:start="395:41" pos:end="395:42">-&gt;</operator><name pos:start="395:43" pos:end="395:53">quant_table</name></name></expr></argument>, <argument pos:start="395:56" pos:end="395:77"><expr pos:start="395:56" pos:end="395:77"><sizeof pos:start="395:56" pos:end="395:77">sizeof<argument_list pos:start="395:62" pos:end="395:77">(<argument pos:start="395:63" pos:end="395:76"><expr pos:start="395:63" pos:end="395:76"><name pos:start="395:63" pos:end="395:76"><name pos:start="395:63" pos:end="395:63">p</name><operator pos:start="395:64" pos:end="395:65">-&gt;</operator><name pos:start="395:66" pos:end="395:76">quant_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="401:13" pos:end="415:13"><if pos:start="401:13" pos:end="415:13">if <condition pos:start="401:16" pos:end="401:32">(<expr pos:start="401:17" pos:end="401:31"><name pos:start="401:17" pos:end="401:26"><name pos:start="401:17" pos:end="401:17">f</name><operator pos:start="401:18" pos:end="401:19">-&gt;</operator><name pos:start="401:20" pos:end="401:26">version</name></name> <operator pos:start="401:28" pos:end="401:29">&lt;=</operator> <literal type="number" pos:start="401:31" pos:end="401:31">2</literal></expr>)</condition> <block pos:start="401:34" pos:end="415:13">{<block_content pos:start="403:17" pos:end="413:49">

                <expr_stmt pos:start="403:17" pos:end="403:47"><expr pos:start="403:17" pos:end="403:46"><call pos:start="403:17" pos:end="403:46"><name pos:start="403:17" pos:end="403:26">av_assert0</name><argument_list pos:start="403:27" pos:end="403:46">(<argument pos:start="403:28" pos:end="403:45"><expr pos:start="403:28" pos:end="403:45"><name pos:start="403:28" pos:end="403:40">context_count</name> <operator pos:start="403:42" pos:end="403:43">&gt;=</operator> <literal type="number" pos:start="403:45" pos:end="403:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="405:17" pos:end="411:17"><if pos:start="405:17" pos:end="411:17">if <condition pos:start="405:20" pos:end="405:53">(<expr pos:start="405:21" pos:end="405:52"><name pos:start="405:21" pos:end="405:36"><name pos:start="405:21" pos:end="405:21">p</name><operator pos:start="405:22" pos:end="405:23">-&gt;</operator><name pos:start="405:24" pos:end="405:36">context_count</name></name> <operator pos:start="405:38" pos:end="405:38">&lt;</operator> <name pos:start="405:40" pos:end="405:52">context_count</name></expr>)</condition> <block pos:start="405:55" pos:end="411:17">{<block_content pos:start="407:21" pos:end="409:44">

                    <expr_stmt pos:start="407:21" pos:end="407:40"><expr pos:start="407:21" pos:end="407:39"><call pos:start="407:21" pos:end="407:39"><name pos:start="407:21" pos:end="407:28">av_freep</name><argument_list pos:start="407:29" pos:end="407:39">(<argument pos:start="407:30" pos:end="407:38"><expr pos:start="407:30" pos:end="407:38"><operator pos:start="407:30" pos:end="407:30">&amp;</operator><name pos:start="407:31" pos:end="407:38"><name pos:start="407:31" pos:end="407:31">p</name><operator pos:start="407:32" pos:end="407:33">-&gt;</operator><name pos:start="407:34" pos:end="407:38">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="409:21" pos:end="409:44"><expr pos:start="409:21" pos:end="409:43"><call pos:start="409:21" pos:end="409:43"><name pos:start="409:21" pos:end="409:28">av_freep</name><argument_list pos:start="409:29" pos:end="409:43">(<argument pos:start="409:30" pos:end="409:42"><expr pos:start="409:30" pos:end="409:42"><operator pos:start="409:30" pos:end="409:30">&amp;</operator><name pos:start="409:31" pos:end="409:42"><name pos:start="409:31" pos:end="409:31">p</name><operator pos:start="409:32" pos:end="409:33">-&gt;</operator><name pos:start="409:34" pos:end="409:42">vlc_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:49"><expr pos:start="413:17" pos:end="413:48"><name pos:start="413:17" pos:end="413:32"><name pos:start="413:17" pos:end="413:17">p</name><operator pos:start="413:18" pos:end="413:19">-&gt;</operator><name pos:start="413:20" pos:end="413:32">context_count</name></name> <operator pos:start="413:34" pos:end="413:34">=</operator> <name pos:start="413:36" pos:end="413:48">context_count</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="421:5" pos:end="421:13">return <expr pos:start="421:12" pos:end="421:12"><literal type="number" pos:start="421:12" pos:end="421:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
