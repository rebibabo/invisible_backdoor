<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11864.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:28">tcp_chr_read</name><parameter_list pos:start="1:29" pos:end="1:79">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:39">GIOChannel</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">chan</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:59">GIOCondition</name></type> <name pos:start="1:61" pos:end="1:64">cond</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:70">void</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:78">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">TCPCharDriver</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:34">= <expr pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:26">chr</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:29"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:29">[<expr pos:start="9:17" pos:end="9:28"><name pos:start="9:17" pos:end="9:28">READ_BUF_LEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>, <decl pos:start="11:14" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:17">size</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:42">(<expr pos:start="15:9" pos:end="15:41"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:21">connected</name></name> <operator pos:start="15:23" pos:end="15:24">||</operator> <name pos:start="15:26" pos:end="15:36"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:36">max_size</name></name> <operator pos:start="15:38" pos:end="15:39">&lt;=</operator> <literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>)</condition> <block pos:start="15:44" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">TRUE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:7">len</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <sizeof pos:start="21:11" pos:end="21:21">sizeof<argument_list pos:start="21:17" pos:end="21:21">(<argument pos:start="21:18" pos:end="21:20"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:20">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:26"><if pos:start="23:5" pos:end="25:26">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:13">&gt;</operator> <name pos:start="23:15" pos:end="23:25"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:25">max_size</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:26"><block_content pos:start="25:9" pos:end="25:26">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:25"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:25">max_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:8">size</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:46"><name pos:start="27:12" pos:end="27:23">tcp_chr_recv</name><argument_list pos:start="27:24" pos:end="27:46">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">chr</name></expr></argument>, <argument pos:start="27:30" pos:end="27:40"><expr pos:start="27:30" pos:end="27:40"><operator pos:start="27:30" pos:end="27:30">(</operator><name pos:start="27:31" pos:end="27:34">void</name> <operator pos:start="27:36" pos:end="27:36">*</operator><operator pos:start="27:37" pos:end="27:37">)</operator><name pos:start="27:38" pos:end="27:40">buf</name></expr></argument>, <argument pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="69:5"><if pos:start="29:5" pos:end="59:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:12">size</name> <operator pos:start="29:14" pos:end="29:15">==</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition> <block pos:start="29:20" pos:end="59:5">{<block_content pos:start="33:9" pos:end="57:49">

        <comment type="block" pos:start="31:9" pos:end="31:31">/* connection closed */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">connected</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:26">listen_chan</name></name></expr>)</condition> <block pos:start="35:29" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:89">

            <expr_stmt pos:start="37:13" pos:end="37:89"><expr pos:start="37:13" pos:end="37:88"><name pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:25">listen_tag</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <call pos:start="37:29" pos:end="37:88"><name pos:start="37:29" pos:end="37:42">g_io_add_watch</name><argument_list pos:start="37:43" pos:end="37:88">(<argument pos:start="37:44" pos:end="37:57"><expr pos:start="37:44" pos:end="37:57"><name pos:start="37:44" pos:end="37:57"><name pos:start="37:44" pos:end="37:44">s</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:57">listen_chan</name></name></expr></argument>, <argument pos:start="37:60" pos:end="37:66"><expr pos:start="37:60" pos:end="37:66"><name pos:start="37:60" pos:end="37:66">G_IO_IN</name></expr></argument>, <argument pos:start="37:69" pos:end="37:82"><expr pos:start="37:69" pos:end="37:82"><name pos:start="37:69" pos:end="37:82">tcp_chr_accept</name></expr></argument>, <argument pos:start="37:85" pos:end="37:87"><expr pos:start="37:85" pos:end="37:87"><name pos:start="37:85" pos:end="37:87">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:19">(<expr pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">tag</name></name></expr>)</condition> <block pos:start="41:21" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:23">

            <expr_stmt pos:start="43:13" pos:end="43:36"><expr pos:start="43:13" pos:end="43:35"><call pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:27">g_source_remove</name><argument_list pos:start="43:28" pos:end="43:35">(<argument pos:start="43:29" pos:end="43:34"><expr pos:start="43:29" pos:end="43:34"><name pos:start="43:29" pos:end="43:34"><name pos:start="43:29" pos:end="43:29">s</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:34">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">tag</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><call pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:26">g_io_channel_unref</name><argument_list pos:start="49:27" pos:end="49:35">(<argument pos:start="49:28" pos:end="49:34"><expr pos:start="49:28" pos:end="49:34"><name pos:start="49:28" pos:end="49:34"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:34">chan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">chan</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:22">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:19">closesocket</name><argument_list pos:start="53:20" pos:end="53:26">(<argument pos:start="53:21" pos:end="53:25"><expr pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:25">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:13">fd</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <operator pos:start="55:17" pos:end="55:17">-</operator><literal type="number" pos:start="55:18" pos:end="55:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><call pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:25">qemu_chr_be_event</name><argument_list pos:start="57:26" pos:end="57:48">(<argument pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:29">chr</name></expr></argument>, <argument pos:start="57:32" pos:end="57:47"><expr pos:start="57:32" pos:end="57:47"><name pos:start="57:32" pos:end="57:47">CHR_EVENT_CLOSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="69:5">else if <condition pos:start="59:15" pos:end="59:24">(<expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:19">size</name> <operator pos:start="59:21" pos:end="59:21">&gt;</operator> <literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>)</condition> <block pos:start="59:26" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:46">

        <if_stmt pos:start="61:9" pos:end="63:58"><if pos:start="61:9" pos:end="63:58">if <condition pos:start="61:12" pos:end="61:28">(<expr pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:27">do_telnetopt</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:58"><block_content pos:start="63:13" pos:end="63:58">

            <expr_stmt pos:start="63:13" pos:end="63:58"><expr pos:start="63:13" pos:end="63:57"><call pos:start="63:13" pos:end="63:57"><name pos:start="63:13" pos:end="63:37">tcp_chr_process_IAC_bytes</name><argument_list pos:start="63:38" pos:end="63:57">(<argument pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><name pos:start="63:39" pos:end="63:41">chr</name></expr></argument>, <argument pos:start="63:44" pos:end="63:44"><expr pos:start="63:44" pos:end="63:44"><name pos:start="63:44" pos:end="63:44">s</name></expr></argument>, <argument pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><name pos:start="63:47" pos:end="63:49">buf</name></expr></argument>, <argument pos:start="63:52" pos:end="63:56"><expr pos:start="63:52" pos:end="63:56"><operator pos:start="63:52" pos:end="63:52">&amp;</operator><name pos:start="63:53" pos:end="63:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="67:46"><if pos:start="65:9" pos:end="67:46">if <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:16">size</name> <operator pos:start="65:18" pos:end="65:18">&gt;</operator> <literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:46"><block_content pos:start="67:13" pos:end="67:46">

            <expr_stmt pos:start="67:13" pos:end="67:46"><expr pos:start="67:13" pos:end="67:45"><call pos:start="67:13" pos:end="67:45"><name pos:start="67:13" pos:end="67:29">qemu_chr_be_write</name><argument_list pos:start="67:30" pos:end="67:45">(<argument pos:start="67:31" pos:end="67:33"><expr pos:start="67:31" pos:end="67:33"><name pos:start="67:31" pos:end="67:33">chr</name></expr></argument>, <argument pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><name pos:start="67:36" pos:end="67:38">buf</name></expr></argument>, <argument pos:start="67:41" pos:end="67:44"><expr pos:start="67:41" pos:end="67:44"><name pos:start="67:41" pos:end="67:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="73:5" pos:end="73:16">return <expr pos:start="73:12" pos:end="73:15"><name pos:start="73:12" pos:end="73:15">TRUE</name></expr>;</return>

</block_content>}</block></function>
</unit>
