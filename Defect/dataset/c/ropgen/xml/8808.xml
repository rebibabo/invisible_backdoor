<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8808.c" pos:tabs="8"><function pos:start="1:1" pos:end="352:18"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:7">pp_mode</name> <modifier pos:start="1:9" pos:end="1:9">*</modifier></type><name pos:start="1:10" pos:end="1:40">pp_get_mode_by_name_and_quality</name><parameter_list pos:start="1:41" pos:end="1:71">(<parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">name</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:70"><decl pos:start="1:60" pos:end="1:70"><type pos:start="1:60" pos:end="1:70"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:70">quality</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="352:18">{<block_content pos:start="5:5" pos:end="352:18">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:35"><name pos:start="5:10" pos:end="5:13">temp</name><index pos:start="5:14" pos:end="5:35">[<expr pos:start="5:15" pos:end="5:34"><name pos:start="5:15" pos:end="5:34">GET_MODE_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name><init pos:start="7:12" pos:end="7:17">= <expr pos:start="7:14" pos:end="7:17"><name pos:start="7:14" pos:end="7:17">temp</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:21"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:21">char</name></type> <name pos:start="9:23" pos:end="9:40"><name pos:start="9:23" pos:end="9:38">filterDelimiters</name><index pos:start="9:39" pos:end="9:40">[]</index></name> <init pos:start="9:42" pos:end="9:47">= <expr pos:start="9:44" pos:end="9:47"><literal type="string" pos:start="9:44" pos:end="9:47">",/"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <specifier pos:start="11:12" pos:end="11:16">const</specifier> <name pos:start="11:18" pos:end="11:21">char</name></type> <name pos:start="11:23" pos:end="11:40"><name pos:start="11:23" pos:end="11:38">optionDelimiters</name><index pos:start="11:39" pos:end="11:40">[]</index></name> <init pos:start="11:42" pos:end="11:47">= <expr pos:start="11:44" pos:end="11:47"><literal type="string" pos:start="11:44" pos:end="11:47">":|"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:17">PPMode</name></name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:25">ppMode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:21">filterToken</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="352:18"><if pos:start="19:5" pos:end="352:18">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:13">name</name></expr>)</condition>  <block pos:start="19:17" pos:end="352:18">{<block_content pos:start="21:9" pos:end="352:18">

        <expr_stmt pos:start="21:9" pos:end="21:61"><expr pos:start="21:9" pos:end="21:60"><call pos:start="21:9" pos:end="21:60"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:60">(<argument pos:start="21:16" pos:end="21:19"><expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr></argument>, <argument pos:start="21:22" pos:end="21:33"><expr pos:start="21:22" pos:end="21:33"><name pos:start="21:22" pos:end="21:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:36" pos:end="21:59"><expr pos:start="21:36" pos:end="21:59"><literal type="string" pos:start="21:36" pos:end="21:59">"pp: Missing argument\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return>




    <if_stmt pos:start="28:5" pos:end="352:18"><if pos:start="28:5" pos:end="352:18">if <condition pos:start="28:8" pos:end="28:30">(<expr pos:start="28:9" pos:end="28:29"><operator pos:start="28:9" pos:end="28:9">!</operator><call pos:start="28:10" pos:end="28:29"><name pos:start="28:10" pos:end="28:15">strcmp</name><argument_list pos:start="28:16" pos:end="28:29">(<argument pos:start="28:17" pos:end="28:20"><expr pos:start="28:17" pos:end="28:20"><name pos:start="28:17" pos:end="28:20">name</name></expr></argument>, <argument pos:start="28:23" pos:end="28:28"><expr pos:start="28:23" pos:end="28:28"><literal type="string" pos:start="28:23" pos:end="28:28">"help"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="28:32" pos:end="352:18">{<block_content pos:start="30:9" pos:end="352:18">

        <decl_stmt pos:start="30:9" pos:end="30:22"><decl pos:start="30:9" pos:end="30:21"><type pos:start="30:9" pos:end="30:20"><specifier pos:start="30:9" pos:end="30:13">const</specifier> <name pos:start="30:15" pos:end="30:18">char</name> <modifier pos:start="30:20" pos:end="30:20">*</modifier></type><name pos:start="30:21" pos:end="30:21">p</name></decl>;</decl_stmt>

        <for pos:start="32:9" pos:end="352:18">for <control pos:start="32:13" pos:end="32:67">(<init pos:start="32:14" pos:end="32:25"><expr pos:start="32:14" pos:end="32:24"><name pos:start="32:14" pos:end="32:14">p</name> <operator pos:start="32:16" pos:end="32:16">=</operator> <name pos:start="32:18" pos:end="32:24">pp_help</name></expr>;</init> <condition pos:start="32:27" pos:end="32:42"><expr pos:start="32:27" pos:end="32:41"><call pos:start="32:27" pos:end="32:41"><name pos:start="32:27" pos:end="32:32">strchr</name><argument_list pos:start="32:33" pos:end="32:41">(<argument pos:start="32:34" pos:end="32:34"><expr pos:start="32:34" pos:end="32:34"><name pos:start="32:34" pos:end="32:34">p</name></expr></argument>, <argument pos:start="32:37" pos:end="32:40"><expr pos:start="32:37" pos:end="32:40"><literal type="char" pos:start="32:37" pos:end="32:40">'\n'</literal></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="32:44" pos:end="32:66"><expr pos:start="32:44" pos:end="32:66"><name pos:start="32:44" pos:end="32:44">p</name> <operator pos:start="32:46" pos:end="32:46">=</operator> <call pos:start="32:48" pos:end="32:62"><name pos:start="32:48" pos:end="32:53">strchr</name><argument_list pos:start="32:54" pos:end="32:62">(<argument pos:start="32:55" pos:end="32:55"><expr pos:start="32:55" pos:end="32:55"><name pos:start="32:55" pos:end="32:55">p</name></expr></argument>, <argument pos:start="32:58" pos:end="32:61"><expr pos:start="32:58" pos:end="32:61"><literal type="char" pos:start="32:58" pos:end="32:61">'\n'</literal></expr></argument>)</argument_list></call> <operator pos:start="32:64" pos:end="32:64">+</operator> <literal type="number" pos:start="32:66" pos:end="32:66">1</literal></expr></incr>)</control> <block pos:start="32:69" pos:end="352:18">{<block_content pos:start="34:13" pos:end="352:18">

            <expr_stmt pos:start="34:13" pos:end="34:78"><expr pos:start="34:13" pos:end="34:77"><call pos:start="34:13" pos:end="34:77"><name pos:start="34:13" pos:end="34:22">av_strlcpy</name><argument_list pos:start="34:23" pos:end="34:77">(<argument pos:start="34:24" pos:end="34:27"><expr pos:start="34:24" pos:end="34:27"><name pos:start="34:24" pos:end="34:27">temp</name></expr></argument>, <argument pos:start="34:30" pos:end="34:30"><expr pos:start="34:30" pos:end="34:30"><name pos:start="34:30" pos:end="34:30">p</name></expr></argument>, <argument pos:start="34:33" pos:end="34:76"><expr pos:start="34:33" pos:end="34:76"><call pos:start="34:33" pos:end="34:76"><name pos:start="34:33" pos:end="34:37">FFMIN</name><argument_list pos:start="34:38" pos:end="34:76">(<argument pos:start="34:39" pos:end="34:50"><expr pos:start="34:39" pos:end="34:50"><sizeof pos:start="34:39" pos:end="34:50">sizeof<argument_list pos:start="34:45" pos:end="34:50">(<argument pos:start="34:46" pos:end="34:49"><expr pos:start="34:46" pos:end="34:49"><name pos:start="34:46" pos:end="34:49">temp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="34:53" pos:end="34:75"><expr pos:start="34:53" pos:end="34:75"><call pos:start="34:53" pos:end="34:67"><name pos:start="34:53" pos:end="34:58">strchr</name><argument_list pos:start="34:59" pos:end="34:67">(<argument pos:start="34:60" pos:end="34:60"><expr pos:start="34:60" pos:end="34:60"><name pos:start="34:60" pos:end="34:60">p</name></expr></argument>, <argument pos:start="34:63" pos:end="34:66"><expr pos:start="34:63" pos:end="34:66"><literal type="char" pos:start="34:63" pos:end="34:66">'\n'</literal></expr></argument>)</argument_list></call> <operator pos:start="34:69" pos:end="34:69">-</operator> <name pos:start="34:71" pos:end="34:71">p</name> <operator pos:start="34:73" pos:end="34:73">+</operator> <literal type="number" pos:start="34:75" pos:end="34:75">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="36:13" pos:end="36:50"><expr pos:start="36:13" pos:end="36:49"><call pos:start="36:13" pos:end="36:49"><name pos:start="36:13" pos:end="36:18">av_log</name><argument_list pos:start="36:19" pos:end="36:49">(<argument pos:start="36:20" pos:end="36:23"><expr pos:start="36:20" pos:end="36:23"><name pos:start="36:20" pos:end="36:23">NULL</name></expr></argument>, <argument pos:start="36:26" pos:end="36:36"><expr pos:start="36:26" pos:end="36:36"><name pos:start="36:26" pos:end="36:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="36:39" pos:end="36:42"><expr pos:start="36:39" pos:end="36:42"><literal type="string" pos:start="36:39" pos:end="36:42">"%s"</literal></expr></argument>, <argument pos:start="36:45" pos:end="36:48"><expr pos:start="36:45" pos:end="36:48"><name pos:start="36:45" pos:end="36:48">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</return>




    <expr_stmt pos:start="44:5" pos:end="44:38"><expr pos:start="44:5" pos:end="44:37"><name pos:start="44:5" pos:end="44:10">ppMode</name><operator pos:start="44:11" pos:end="44:11">=</operator> <call pos:start="44:13" pos:end="44:37"><name pos:start="44:13" pos:end="44:21">av_malloc</name><argument_list pos:start="44:22" pos:end="44:37">(<argument pos:start="44:23" pos:end="44:36"><expr pos:start="44:23" pos:end="44:36"><sizeof pos:start="44:23" pos:end="44:36">sizeof<argument_list pos:start="44:29" pos:end="44:36">(<argument pos:start="44:30" pos:end="44:35"><expr pos:start="44:30" pos:end="44:35"><name pos:start="44:30" pos:end="44:35">PPMode</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="48:5" pos:end="48:23"><expr pos:start="48:5" pos:end="48:22"><name pos:start="48:5" pos:end="48:19"><name pos:start="48:5" pos:end="48:10">ppMode</name><operator pos:start="48:11" pos:end="48:12">-&gt;</operator><name pos:start="48:13" pos:end="48:19">lumMode</name></name><operator pos:start="48:20" pos:end="48:20">=</operator> <literal type="number" pos:start="48:22" pos:end="48:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="50:5" pos:end="50:25"><expr pos:start="50:5" pos:end="50:24"><name pos:start="50:5" pos:end="50:21"><name pos:start="50:5" pos:end="50:10">ppMode</name><operator pos:start="50:11" pos:end="50:12">-&gt;</operator><name pos:start="50:13" pos:end="50:21">chromMode</name></name><operator pos:start="50:22" pos:end="50:22">=</operator> <literal type="number" pos:start="50:24" pos:end="50:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:32"><expr pos:start="52:5" pos:end="52:31"><name pos:start="52:5" pos:end="52:26"><name pos:start="52:5" pos:end="52:10">ppMode</name><operator pos:start="52:11" pos:end="52:12">-&gt;</operator><name pos:start="52:13" pos:end="52:23">maxTmpNoise</name><index pos:start="52:24" pos:end="52:26">[<expr pos:start="52:25" pos:end="52:25"><literal type="number" pos:start="52:25" pos:end="52:25">0</literal></expr>]</index></name><operator pos:start="52:27" pos:end="52:27">=</operator> <literal type="number" pos:start="52:29" pos:end="52:31">700</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:33"><expr pos:start="54:5" pos:end="54:32"><name pos:start="54:5" pos:end="54:26"><name pos:start="54:5" pos:end="54:10">ppMode</name><operator pos:start="54:11" pos:end="54:12">-&gt;</operator><name pos:start="54:13" pos:end="54:23">maxTmpNoise</name><index pos:start="54:24" pos:end="54:26">[<expr pos:start="54:25" pos:end="54:25"><literal type="number" pos:start="54:25" pos:end="54:25">1</literal></expr>]</index></name><operator pos:start="54:27" pos:end="54:27">=</operator> <literal type="number" pos:start="54:29" pos:end="54:32">1500</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:33"><expr pos:start="56:5" pos:end="56:32"><name pos:start="56:5" pos:end="56:26"><name pos:start="56:5" pos:end="56:10">ppMode</name><operator pos:start="56:11" pos:end="56:12">-&gt;</operator><name pos:start="56:13" pos:end="56:23">maxTmpNoise</name><index pos:start="56:24" pos:end="56:26">[<expr pos:start="56:25" pos:end="56:25"><literal type="number" pos:start="56:25" pos:end="56:25">2</literal></expr>]</index></name><operator pos:start="56:27" pos:end="56:27">=</operator> <literal type="number" pos:start="56:29" pos:end="56:32">3000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="58:5" pos:end="58:29"><expr pos:start="58:5" pos:end="58:28"><name pos:start="58:5" pos:end="58:23"><name pos:start="58:5" pos:end="58:10">ppMode</name><operator pos:start="58:11" pos:end="58:12">-&gt;</operator><name pos:start="58:13" pos:end="58:23">maxAllowedY</name></name><operator pos:start="58:24" pos:end="58:24">=</operator> <literal type="number" pos:start="58:26" pos:end="58:28">234</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="60:5" pos:end="60:28"><expr pos:start="60:5" pos:end="60:27"><name pos:start="60:5" pos:end="60:23"><name pos:start="60:5" pos:end="60:10">ppMode</name><operator pos:start="60:11" pos:end="60:12">-&gt;</operator><name pos:start="60:13" pos:end="60:23">minAllowedY</name></name><operator pos:start="60:24" pos:end="60:24">=</operator> <literal type="number" pos:start="60:26" pos:end="60:27">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="62:5" pos:end="62:30"><expr pos:start="62:5" pos:end="62:29"><name pos:start="62:5" pos:end="62:22"><name pos:start="62:5" pos:end="62:10">ppMode</name><operator pos:start="62:11" pos:end="62:12">-&gt;</operator><name pos:start="62:13" pos:end="62:22">baseDcDiff</name></name><operator pos:start="62:23" pos:end="62:23">=</operator> <literal type="number" pos:start="62:25" pos:end="62:27">256</literal><operator pos:start="62:28" pos:end="62:28">/</operator><literal type="number" pos:start="62:29" pos:end="62:29">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="64:5" pos:end="64:39"><expr pos:start="64:5" pos:end="64:38"><name pos:start="64:5" pos:end="64:29"><name pos:start="64:5" pos:end="64:10">ppMode</name><operator pos:start="64:11" pos:end="64:12">-&gt;</operator><name pos:start="64:13" pos:end="64:29">flatnessThreshold</name></name><operator pos:start="64:30" pos:end="64:30">=</operator> <literal type="number" pos:start="64:32" pos:end="64:34">56</literal><operator pos:start="64:34" pos:end="64:34">-</operator><literal type="number" pos:start="64:35" pos:end="64:37">16</literal><operator pos:start="64:37" pos:end="64:37">-</operator><literal type="number" pos:start="64:38" pos:end="64:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="66:38"><expr pos:start="66:5" pos:end="66:37"><name pos:start="66:5" pos:end="66:31"><name pos:start="66:5" pos:end="66:10">ppMode</name><operator pos:start="66:11" pos:end="66:12">-&gt;</operator><name pos:start="66:13" pos:end="66:31">maxClippedThreshold</name></name><operator pos:start="66:32" pos:end="66:32">=</operator> <literal type="number" pos:start="66:34" pos:end="66:37">0.01</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:20"><expr pos:start="68:5" pos:end="68:19"><name pos:start="68:5" pos:end="68:17"><name pos:start="68:5" pos:end="68:10">ppMode</name><operator pos:start="68:11" pos:end="68:12">-&gt;</operator><name pos:start="68:13" pos:end="68:17">error</name></name><operator pos:start="68:18" pos:end="68:18">=</operator><literal type="number" pos:start="68:19" pos:end="68:19">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="72:5" pos:end="72:42"><expr pos:start="72:5" pos:end="72:41"><call pos:start="72:5" pos:end="72:41"><name pos:start="72:5" pos:end="72:10">memset</name><argument_list pos:start="72:11" pos:end="72:41">(<argument pos:start="72:12" pos:end="72:15"><expr pos:start="72:12" pos:end="72:15"><name pos:start="72:12" pos:end="72:15">temp</name></expr></argument>, <argument pos:start="72:18" pos:end="72:18"><expr pos:start="72:18" pos:end="72:18"><literal type="number" pos:start="72:18" pos:end="72:18">0</literal></expr></argument>, <argument pos:start="72:21" pos:end="72:40"><expr pos:start="72:21" pos:end="72:40"><name pos:start="72:21" pos:end="72:40">GET_MODE_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="74:53"><expr pos:start="74:5" pos:end="74:52"><call pos:start="74:5" pos:end="74:52"><name pos:start="74:5" pos:end="74:14">av_strlcpy</name><argument_list pos:start="74:15" pos:end="74:52">(<argument pos:start="74:16" pos:end="74:19"><expr pos:start="74:16" pos:end="74:19"><name pos:start="74:16" pos:end="74:19">temp</name></expr></argument>, <argument pos:start="74:22" pos:end="74:25"><expr pos:start="74:22" pos:end="74:25"><name pos:start="74:22" pos:end="74:25">name</name></expr></argument>, <argument pos:start="74:28" pos:end="74:51"><expr pos:start="74:28" pos:end="74:51"><name pos:start="74:28" pos:end="74:47">GET_MODE_BUFFER_SIZE</name> <operator pos:start="74:49" pos:end="74:49">-</operator> <literal type="number" pos:start="74:51" pos:end="74:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="78:5" pos:end="78:49"><expr pos:start="78:5" pos:end="78:48"><call pos:start="78:5" pos:end="78:48"><name pos:start="78:5" pos:end="78:10">av_log</name><argument_list pos:start="78:11" pos:end="78:48">(<argument pos:start="78:12" pos:end="78:15"><expr pos:start="78:12" pos:end="78:15"><name pos:start="78:12" pos:end="78:15">NULL</name></expr></argument>, <argument pos:start="78:18" pos:end="78:29"><expr pos:start="78:18" pos:end="78:29"><name pos:start="78:18" pos:end="78:29">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="78:32" pos:end="78:41"><expr pos:start="78:32" pos:end="78:41"><literal type="string" pos:start="78:32" pos:end="78:41">"pp: %s\n"</literal></expr></argument>, <argument pos:start="78:44" pos:end="78:47"><expr pos:start="78:44" pos:end="78:47"><name pos:start="78:44" pos:end="78:47">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="82:5" pos:end="352:18">for<control pos:start="82:8" pos:end="82:11">(<init pos:start="82:9" pos:end="82:9">;</init><condition pos:start="82:10" pos:end="82:10">;</condition><incr/>)</control><block pos:start="82:12" pos:end="352:18">{<block_content pos:start="84:9" pos:end="352:18">

        <decl_stmt pos:start="84:9" pos:end="84:25"><decl pos:start="84:9" pos:end="84:24"><type pos:start="84:9" pos:end="84:14"><name pos:start="84:9" pos:end="84:12">char</name> <modifier pos:start="84:14" pos:end="84:14">*</modifier></type><name pos:start="84:15" pos:end="84:24">filterName</name></decl>;</decl_stmt>

        <decl_stmt pos:start="86:9" pos:end="86:23"><decl pos:start="86:9" pos:end="86:22"><type pos:start="86:9" pos:end="86:11"><name pos:start="86:9" pos:end="86:11">int</name></type> <name pos:start="86:13" pos:end="86:13">q</name><init pos:start="86:14" pos:end="86:22">= <expr pos:start="86:16" pos:end="86:22"><literal type="number" pos:start="86:16" pos:end="86:22">1000000</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="86:25" pos:end="86:41">//PP_QUALITY_MAX;</comment>

        <decl_stmt pos:start="88:9" pos:end="88:21"><decl pos:start="88:9" pos:end="88:20"><type pos:start="88:9" pos:end="88:11"><name pos:start="88:9" pos:end="88:11">int</name></type> <name pos:start="88:13" pos:end="88:17">chrom</name><init pos:start="88:18" pos:end="88:20">=<expr pos:start="88:19" pos:end="88:20"><operator pos:start="88:19" pos:end="88:19">-</operator><literal type="number" pos:start="88:20" pos:end="88:20">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="90:9" pos:end="90:20"><decl pos:start="90:9" pos:end="90:19"><type pos:start="90:9" pos:end="90:11"><name pos:start="90:9" pos:end="90:11">int</name></type> <name pos:start="90:13" pos:end="90:16">luma</name><init pos:start="90:17" pos:end="90:19">=<expr pos:start="90:18" pos:end="90:19"><operator pos:start="90:18" pos:end="90:18">-</operator><literal type="number" pos:start="90:19" pos:end="90:19">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="92:9" pos:end="92:21"><decl pos:start="92:9" pos:end="92:20"><type pos:start="92:9" pos:end="92:14"><name pos:start="92:9" pos:end="92:12">char</name> <modifier pos:start="92:14" pos:end="92:14">*</modifier></type><name pos:start="92:15" pos:end="92:20">option</name></decl>;</decl_stmt>

        <decl_stmt pos:start="94:9" pos:end="94:42"><decl pos:start="94:9" pos:end="94:41"><type pos:start="94:9" pos:end="94:14"><name pos:start="94:9" pos:end="94:12">char</name> <modifier pos:start="94:14" pos:end="94:14">*</modifier></type><name pos:start="94:15" pos:end="94:41"><name pos:start="94:15" pos:end="94:21">options</name><index pos:start="94:22" pos:end="94:41">[<expr pos:start="94:23" pos:end="94:40"><name pos:start="94:23" pos:end="94:40">OPTIONS_ARRAY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="96:9" pos:end="96:14"><decl pos:start="96:9" pos:end="96:13"><type pos:start="96:9" pos:end="96:11"><name pos:start="96:9" pos:end="96:11">int</name></type> <name pos:start="96:13" pos:end="96:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="98:9" pos:end="98:27"><decl pos:start="98:9" pos:end="98:26"><type pos:start="98:9" pos:end="98:11"><name pos:start="98:9" pos:end="98:11">int</name></type> <name pos:start="98:13" pos:end="98:24">filterNameOk</name><init pos:start="98:25" pos:end="98:26">=<expr pos:start="98:26" pos:end="98:26"><literal type="number" pos:start="98:26" pos:end="98:26">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="100:9" pos:end="100:34"><decl pos:start="100:9" pos:end="100:33"><type pos:start="100:9" pos:end="100:11"><name pos:start="100:9" pos:end="100:11">int</name></type> <name pos:start="100:13" pos:end="100:31">numOfUnknownOptions</name><init pos:start="100:32" pos:end="100:33">=<expr pos:start="100:33" pos:end="100:33"><literal type="number" pos:start="100:33" pos:end="100:33">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="102:9" pos:end="102:21"><decl pos:start="102:9" pos:end="102:20"><type pos:start="102:9" pos:end="102:11"><name pos:start="102:9" pos:end="102:11">int</name></type> <name pos:start="102:13" pos:end="102:18">enable</name><init pos:start="102:19" pos:end="102:20">=<expr pos:start="102:20" pos:end="102:20"><literal type="number" pos:start="102:20" pos:end="102:20">1</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="102:23" pos:end="102:79">//does the user want us to enabled or disabled the filter</comment>



        <expr_stmt pos:start="106:9" pos:end="106:49"><expr pos:start="106:9" pos:end="106:48"><name pos:start="106:9" pos:end="106:19">filterToken</name><operator pos:start="106:20" pos:end="106:20">=</operator> <call pos:start="106:22" pos:end="106:48"><name pos:start="106:22" pos:end="106:27">strtok</name><argument_list pos:start="106:28" pos:end="106:48">(<argument pos:start="106:29" pos:end="106:29"><expr pos:start="106:29" pos:end="106:29"><name pos:start="106:29" pos:end="106:29">p</name></expr></argument>, <argument pos:start="106:32" pos:end="106:47"><expr pos:start="106:32" pos:end="106:47"><name pos:start="106:32" pos:end="106:47">filterDelimiters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="108:9" pos:end="108:38"><if pos:start="108:9" pos:end="108:38">if<condition pos:start="108:11" pos:end="108:31">(<expr pos:start="108:12" pos:end="108:30"><name pos:start="108:12" pos:end="108:22">filterToken</name> <operator pos:start="108:24" pos:end="108:25">==</operator> <name pos:start="108:27" pos:end="108:30">NULL</name></expr>)</condition><block type="pseudo" pos:start="108:33" pos:end="108:38"><block_content pos:start="108:33" pos:end="108:38"> <break pos:start="108:33" pos:end="108:38">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="110:9" pos:end="110:36"><expr pos:start="110:9" pos:end="110:35"><name pos:start="110:9" pos:end="110:9">p</name><operator pos:start="110:10" pos:end="110:11">+=</operator> <call pos:start="110:13" pos:end="110:31"><name pos:start="110:13" pos:end="110:18">strlen</name><argument_list pos:start="110:19" pos:end="110:31">(<argument pos:start="110:20" pos:end="110:30"><expr pos:start="110:20" pos:end="110:30"><name pos:start="110:20" pos:end="110:30">filterToken</name></expr></argument>)</argument_list></call> <operator pos:start="110:33" pos:end="110:33">+</operator> <literal type="number" pos:start="110:35" pos:end="110:35">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="110:38" pos:end="110:68">// p points to next filterToken</comment>

        <expr_stmt pos:start="112:9" pos:end="112:58"><expr pos:start="112:9" pos:end="112:57"><name pos:start="112:9" pos:end="112:18">filterName</name><operator pos:start="112:19" pos:end="112:19">=</operator> <call pos:start="112:21" pos:end="112:57"><name pos:start="112:21" pos:end="112:26">strtok</name><argument_list pos:start="112:27" pos:end="112:57">(<argument pos:start="112:28" pos:end="112:38"><expr pos:start="112:28" pos:end="112:38"><name pos:start="112:28" pos:end="112:38">filterToken</name></expr></argument>, <argument pos:start="112:41" pos:end="112:56"><expr pos:start="112:41" pos:end="112:56"><name pos:start="112:41" pos:end="112:56">optionDelimiters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="118:9" pos:end="118:76"><expr pos:start="118:9" pos:end="118:75"><call pos:start="118:9" pos:end="118:75"><name pos:start="118:9" pos:end="118:14">av_log</name><argument_list pos:start="118:15" pos:end="118:75">(<argument pos:start="118:16" pos:end="118:19"><expr pos:start="118:16" pos:end="118:19"><name pos:start="118:16" pos:end="118:19">NULL</name></expr></argument>, <argument pos:start="118:22" pos:end="118:33"><expr pos:start="118:22" pos:end="118:33"><name pos:start="118:22" pos:end="118:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="118:36" pos:end="118:49"><expr pos:start="118:36" pos:end="118:49"><literal type="string" pos:start="118:36" pos:end="118:49">"pp: %s::%s\n"</literal></expr></argument>, <argument pos:start="118:52" pos:end="118:62"><expr pos:start="118:52" pos:end="118:62"><name pos:start="118:52" pos:end="118:62">filterToken</name></expr></argument>, <argument pos:start="118:65" pos:end="118:74"><expr pos:start="118:65" pos:end="118:74"><name pos:start="118:65" pos:end="118:74">filterName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="122:9" pos:end="352:18"><if pos:start="122:9" pos:end="352:18">if<condition pos:start="122:11" pos:end="122:30">(<expr pos:start="122:12" pos:end="122:29"><operator pos:start="122:12" pos:end="122:12">*</operator><name pos:start="122:13" pos:end="122:22">filterName</name> <operator pos:start="122:24" pos:end="122:25">==</operator> <literal type="char" pos:start="122:27" pos:end="122:29">'-'</literal></expr>)</condition><block pos:start="122:31" pos:end="352:18">{<block_content pos:start="124:13" pos:end="352:18">

            <expr_stmt pos:start="124:13" pos:end="124:21"><expr pos:start="124:13" pos:end="124:20"><name pos:start="124:13" pos:end="124:18">enable</name><operator pos:start="124:19" pos:end="124:19">=</operator><literal type="number" pos:start="124:20" pos:end="124:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="126:13" pos:end="126:25"><expr pos:start="126:13" pos:end="126:24"><name pos:start="126:13" pos:end="126:22">filterName</name><operator pos:start="126:23" pos:end="126:24">++</operator></expr>;</expr_stmt>




        <for pos:start="131:9" pos:end="352:18">for<control pos:start="131:12" pos:end="131:15">(<init pos:start="131:13" pos:end="131:13">;</init><condition pos:start="131:14" pos:end="131:14">;</condition><incr/>)</control><block pos:start="131:16" pos:end="352:18">{<block_content pos:start="133:13" pos:end="352:18"> <comment type="line" pos:start="131:18" pos:end="131:34">//for all options</comment>

            <expr_stmt pos:start="133:13" pos:end="133:51"><expr pos:start="133:13" pos:end="133:50"><name pos:start="133:13" pos:end="133:18">option</name><operator pos:start="133:19" pos:end="133:19">=</operator> <call pos:start="133:21" pos:end="133:50"><name pos:start="133:21" pos:end="133:26">strtok</name><argument_list pos:start="133:27" pos:end="133:50">(<argument pos:start="133:28" pos:end="133:31"><expr pos:start="133:28" pos:end="133:31"><name pos:start="133:28" pos:end="133:31">NULL</name></expr></argument>, <argument pos:start="133:34" pos:end="133:49"><expr pos:start="133:34" pos:end="133:49"><name pos:start="133:34" pos:end="133:49">optionDelimiters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="135:37"><if pos:start="135:13" pos:end="135:37">if<condition pos:start="135:15" pos:end="135:30">(<expr pos:start="135:16" pos:end="135:29"><name pos:start="135:16" pos:end="135:21">option</name> <operator pos:start="135:23" pos:end="135:24">==</operator> <name pos:start="135:26" pos:end="135:29">NULL</name></expr>)</condition><block type="pseudo" pos:start="135:32" pos:end="135:37"><block_content pos:start="135:32" pos:end="135:37"> <break pos:start="135:32" pos:end="135:37">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:67"><expr pos:start="139:13" pos:end="139:66"><call pos:start="139:13" pos:end="139:66"><name pos:start="139:13" pos:end="139:18">av_log</name><argument_list pos:start="139:19" pos:end="139:66">(<argument pos:start="139:20" pos:end="139:23"><expr pos:start="139:20" pos:end="139:23"><name pos:start="139:20" pos:end="139:23">NULL</name></expr></argument>, <argument pos:start="139:26" pos:end="139:37"><expr pos:start="139:26" pos:end="139:37"><name pos:start="139:26" pos:end="139:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="139:40" pos:end="139:57"><expr pos:start="139:40" pos:end="139:57"><literal type="string" pos:start="139:40" pos:end="139:57">"pp: option: %s\n"</literal></expr></argument>, <argument pos:start="139:60" pos:end="139:65"><expr pos:start="139:60" pos:end="139:65"><name pos:start="139:60" pos:end="139:65">option</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="352:18"><if pos:start="141:13" pos:end="141:76">if<condition pos:start="141:15" pos:end="141:64">(<expr pos:start="141:16" pos:end="141:63"><operator pos:start="141:16" pos:end="141:16">!</operator><call pos:start="141:17" pos:end="141:39"><name pos:start="141:17" pos:end="141:22">strcmp</name><argument_list pos:start="141:23" pos:end="141:39">(<argument pos:start="141:24" pos:end="141:30"><expr pos:start="141:24" pos:end="141:30"><literal type="string" pos:start="141:24" pos:end="141:30">"autoq"</literal></expr></argument>, <argument pos:start="141:33" pos:end="141:38"><expr pos:start="141:33" pos:end="141:38"><name pos:start="141:33" pos:end="141:38">option</name></expr></argument>)</argument_list></call> <operator pos:start="141:41" pos:end="141:42">||</operator> <operator pos:start="141:44" pos:end="141:44">!</operator><call pos:start="141:45" pos:end="141:63"><name pos:start="141:45" pos:end="141:50">strcmp</name><argument_list pos:start="141:51" pos:end="141:63">(<argument pos:start="141:52" pos:end="141:54"><expr pos:start="141:52" pos:end="141:54"><literal type="string" pos:start="141:52" pos:end="141:54">"a"</literal></expr></argument>, <argument pos:start="141:57" pos:end="141:62"><expr pos:start="141:57" pos:end="141:62"><name pos:start="141:57" pos:end="141:62">option</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="141:66" pos:end="141:76"><block_content pos:start="141:66" pos:end="141:76"> <expr_stmt pos:start="141:66" pos:end="141:76"><expr pos:start="141:66" pos:end="141:75"><name pos:start="141:66" pos:end="141:66">q</name><operator pos:start="141:67" pos:end="141:67">=</operator> <name pos:start="141:69" pos:end="141:75">quality</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="143:13" pos:end="143:80">else if<condition pos:start="143:20" pos:end="143:71">(<expr pos:start="143:21" pos:end="143:70"><operator pos:start="143:21" pos:end="143:21">!</operator><call pos:start="143:22" pos:end="143:46"><name pos:start="143:22" pos:end="143:27">strcmp</name><argument_list pos:start="143:28" pos:end="143:46">(<argument pos:start="143:29" pos:end="143:37"><expr pos:start="143:29" pos:end="143:37"><literal type="string" pos:start="143:29" pos:end="143:37">"nochrom"</literal></expr></argument>, <argument pos:start="143:40" pos:end="143:45"><expr pos:start="143:40" pos:end="143:45"><name pos:start="143:40" pos:end="143:45">option</name></expr></argument>)</argument_list></call> <operator pos:start="143:48" pos:end="143:49">||</operator> <operator pos:start="143:51" pos:end="143:51">!</operator><call pos:start="143:52" pos:end="143:70"><name pos:start="143:52" pos:end="143:57">strcmp</name><argument_list pos:start="143:58" pos:end="143:70">(<argument pos:start="143:59" pos:end="143:61"><expr pos:start="143:59" pos:end="143:61"><literal type="string" pos:start="143:59" pos:end="143:61">"y"</literal></expr></argument>, <argument pos:start="143:64" pos:end="143:69"><expr pos:start="143:64" pos:end="143:69"><name pos:start="143:64" pos:end="143:69">option</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="143:73" pos:end="143:80"><block_content pos:start="143:73" pos:end="143:80"> <expr_stmt pos:start="143:73" pos:end="143:80"><expr pos:start="143:73" pos:end="143:79"><name pos:start="143:73" pos:end="143:77">chrom</name><operator pos:start="143:78" pos:end="143:78">=</operator><literal type="number" pos:start="143:79" pos:end="143:79">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="145:13" pos:end="145:78">else if<condition pos:start="145:20" pos:end="145:69">(<expr pos:start="145:21" pos:end="145:68"><operator pos:start="145:21" pos:end="145:21">!</operator><call pos:start="145:22" pos:end="145:44"><name pos:start="145:22" pos:end="145:27">strcmp</name><argument_list pos:start="145:28" pos:end="145:44">(<argument pos:start="145:29" pos:end="145:35"><expr pos:start="145:29" pos:end="145:35"><literal type="string" pos:start="145:29" pos:end="145:35">"chrom"</literal></expr></argument>, <argument pos:start="145:38" pos:end="145:43"><expr pos:start="145:38" pos:end="145:43"><name pos:start="145:38" pos:end="145:43">option</name></expr></argument>)</argument_list></call> <operator pos:start="145:46" pos:end="145:47">||</operator> <operator pos:start="145:49" pos:end="145:49">!</operator><call pos:start="145:50" pos:end="145:68"><name pos:start="145:50" pos:end="145:55">strcmp</name><argument_list pos:start="145:56" pos:end="145:68">(<argument pos:start="145:57" pos:end="145:59"><expr pos:start="145:57" pos:end="145:59"><literal type="string" pos:start="145:57" pos:end="145:59">"c"</literal></expr></argument>, <argument pos:start="145:62" pos:end="145:67"><expr pos:start="145:62" pos:end="145:67"><name pos:start="145:62" pos:end="145:67">option</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="145:71" pos:end="145:78"><block_content pos:start="145:71" pos:end="145:78"> <expr_stmt pos:start="145:71" pos:end="145:78"><expr pos:start="145:71" pos:end="145:77"><name pos:start="145:71" pos:end="145:75">chrom</name><operator pos:start="145:76" pos:end="145:76">=</operator><literal type="number" pos:start="145:77" pos:end="145:77">1</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="147:13" pos:end="147:78">else if<condition pos:start="147:20" pos:end="147:70">(<expr pos:start="147:21" pos:end="147:69"><operator pos:start="147:21" pos:end="147:21">!</operator><call pos:start="147:22" pos:end="147:45"><name pos:start="147:22" pos:end="147:27">strcmp</name><argument_list pos:start="147:28" pos:end="147:45">(<argument pos:start="147:29" pos:end="147:36"><expr pos:start="147:29" pos:end="147:36"><literal type="string" pos:start="147:29" pos:end="147:36">"noluma"</literal></expr></argument>, <argument pos:start="147:39" pos:end="147:44"><expr pos:start="147:39" pos:end="147:44"><name pos:start="147:39" pos:end="147:44">option</name></expr></argument>)</argument_list></call> <operator pos:start="147:47" pos:end="147:48">||</operator> <operator pos:start="147:50" pos:end="147:50">!</operator><call pos:start="147:51" pos:end="147:69"><name pos:start="147:51" pos:end="147:56">strcmp</name><argument_list pos:start="147:57" pos:end="147:69">(<argument pos:start="147:58" pos:end="147:60"><expr pos:start="147:58" pos:end="147:60"><literal type="string" pos:start="147:58" pos:end="147:60">"n"</literal></expr></argument>, <argument pos:start="147:63" pos:end="147:68"><expr pos:start="147:63" pos:end="147:68"><name pos:start="147:63" pos:end="147:68">option</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="147:72" pos:end="147:78"><block_content pos:start="147:72" pos:end="147:78"> <expr_stmt pos:start="147:72" pos:end="147:78"><expr pos:start="147:72" pos:end="147:77"><name pos:start="147:72" pos:end="147:75">luma</name><operator pos:start="147:76" pos:end="147:76">=</operator><literal type="number" pos:start="147:77" pos:end="147:77">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="149:13" pos:end="352:18">else<block pos:start="149:17" pos:end="352:18">{<block_content pos:start="151:17" pos:end="352:18">

                <expr_stmt pos:start="151:17" pos:end="151:54"><expr pos:start="151:17" pos:end="151:53"><name pos:start="151:17" pos:end="151:44"><name pos:start="151:17" pos:end="151:23">options</name><index pos:start="151:24" pos:end="151:44">[<expr pos:start="151:25" pos:end="151:43"><name pos:start="151:25" pos:end="151:43">numOfUnknownOptions</name></expr>]</index></name> <operator pos:start="151:46" pos:end="151:46">=</operator> <name pos:start="151:48" pos:end="151:53">option</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:38"><expr pos:start="153:17" pos:end="153:37"><name pos:start="153:17" pos:end="153:35">numOfUnknownOptions</name><operator pos:start="153:36" pos:end="153:37">++</operator></expr>;</expr_stmt>


            <if_stmt pos:start="156:13" pos:end="156:66"><if pos:start="156:13" pos:end="156:66">if<condition pos:start="156:15" pos:end="156:59">(<expr pos:start="156:16" pos:end="156:58"><name pos:start="156:16" pos:end="156:34">numOfUnknownOptions</name> <operator pos:start="156:36" pos:end="156:37">&gt;=</operator> <name pos:start="156:39" pos:end="156:56">OPTIONS_ARRAY_SIZE</name><operator pos:start="156:57" pos:end="156:57">-</operator><literal type="number" pos:start="156:58" pos:end="156:58">1</literal></expr>)</condition><block type="pseudo" pos:start="156:61" pos:end="156:66"><block_content pos:start="156:61" pos:end="156:66"> <break pos:start="156:61" pos:end="156:66">break;</break></block_content></block></if></if_stmt>


        <expr_stmt pos:start="159:9" pos:end="159:44"><expr pos:start="159:9" pos:end="159:43"><name pos:start="159:9" pos:end="159:36"><name pos:start="159:9" pos:end="159:15">options</name><index pos:start="159:16" pos:end="159:36">[<expr pos:start="159:17" pos:end="159:35"><name pos:start="159:17" pos:end="159:35">numOfUnknownOptions</name></expr>]</index></name> <operator pos:start="159:38" pos:end="159:38">=</operator> <name pos:start="159:40" pos:end="159:43">NULL</name></expr>;</expr_stmt>



        <comment type="block" pos:start="163:9" pos:end="163:50">/* replace stuff from the replace Table */</comment>

        <for pos:start="165:9" pos:end="352:18">for<control pos:start="165:12" pos:end="165:46">(<init pos:start="165:13" pos:end="165:16"><expr pos:start="165:13" pos:end="165:15"><name pos:start="165:13" pos:end="165:13">i</name><operator pos:start="165:14" pos:end="165:14">=</operator><literal type="number" pos:start="165:15" pos:end="165:15">0</literal></expr>;</init> <condition pos:start="165:18" pos:end="165:41"><expr pos:start="165:18" pos:end="165:40"><name pos:start="165:18" pos:end="165:34"><name pos:start="165:18" pos:end="165:29">replaceTable</name><index pos:start="165:30" pos:end="165:34">[<expr pos:start="165:31" pos:end="165:33"><literal type="number" pos:start="165:31" pos:end="165:31">2</literal><operator pos:start="165:32" pos:end="165:32">*</operator><name pos:start="165:33" pos:end="165:33">i</name></expr>]</index></name><operator pos:start="165:35" pos:end="165:36">!=</operator><name pos:start="165:37" pos:end="165:40">NULL</name></expr>;</condition> <incr pos:start="165:43" pos:end="165:45"><expr pos:start="165:43" pos:end="165:45"><name pos:start="165:43" pos:end="165:43">i</name><operator pos:start="165:44" pos:end="165:45">++</operator></expr></incr>)</control><block pos:start="165:47" pos:end="352:18">{<block_content pos:start="167:13" pos:end="352:18">

            <if_stmt pos:start="167:13" pos:end="352:18"><if pos:start="167:13" pos:end="352:18">if<condition pos:start="167:15" pos:end="167:54">(<expr pos:start="167:16" pos:end="167:53"><operator pos:start="167:16" pos:end="167:16">!</operator><call pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:22">strcmp</name><argument_list pos:start="167:23" pos:end="167:53">(<argument pos:start="167:24" pos:end="167:40"><expr pos:start="167:24" pos:end="167:40"><name pos:start="167:24" pos:end="167:40"><name pos:start="167:24" pos:end="167:35">replaceTable</name><index pos:start="167:36" pos:end="167:40">[<expr pos:start="167:37" pos:end="167:39"><literal type="number" pos:start="167:37" pos:end="167:37">2</literal><operator pos:start="167:38" pos:end="167:38">*</operator><name pos:start="167:39" pos:end="167:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="167:43" pos:end="167:52"><expr pos:start="167:43" pos:end="167:52"><name pos:start="167:43" pos:end="167:52">filterName</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="167:55" pos:end="352:18">{<block_content pos:start="169:17" pos:end="352:18">

                <decl_stmt pos:start="169:17" pos:end="169:58"><decl pos:start="169:17" pos:end="169:57"><type pos:start="169:17" pos:end="169:19"><name pos:start="169:17" pos:end="169:19">int</name></type> <name pos:start="169:21" pos:end="169:26">newlen</name><init pos:start="169:27" pos:end="169:57">= <expr pos:start="169:29" pos:end="169:57"><call pos:start="169:29" pos:end="169:57"><name pos:start="169:29" pos:end="169:34">strlen</name><argument_list pos:start="169:35" pos:end="169:57">(<argument pos:start="169:36" pos:end="169:56"><expr pos:start="169:36" pos:end="169:56"><name pos:start="169:36" pos:end="169:56"><name pos:start="169:36" pos:end="169:47">replaceTable</name><index pos:start="169:48" pos:end="169:56">[<expr pos:start="169:49" pos:end="169:55"><literal type="number" pos:start="169:49" pos:end="169:49">2</literal><operator pos:start="169:50" pos:end="169:50">*</operator><name pos:start="169:51" pos:end="169:51">i</name> <operator pos:start="169:53" pos:end="169:53">+</operator> <literal type="number" pos:start="169:55" pos:end="169:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="171:17" pos:end="171:25"><decl pos:start="171:17" pos:end="171:24"><type pos:start="171:17" pos:end="171:19"><name pos:start="171:17" pos:end="171:19">int</name></type> <name pos:start="171:21" pos:end="171:24">plen</name></decl>;</decl_stmt>

                <decl_stmt pos:start="173:17" pos:end="173:30"><decl pos:start="173:17" pos:end="173:29"><type pos:start="173:17" pos:end="173:19"><name pos:start="173:17" pos:end="173:19">int</name></type> <name pos:start="173:21" pos:end="173:29">spaceLeft</name></decl>;</decl_stmt>



                <expr_stmt pos:start="177:17" pos:end="177:28"><expr pos:start="177:17" pos:end="177:19"><name pos:start="177:17" pos:end="177:17">p</name><operator pos:start="177:18" pos:end="177:19">--</operator></expr><operator pos:start="177:20" pos:end="177:20">,</operator> <expr pos:start="177:22" pos:end="177:27"><operator pos:start="177:22" pos:end="177:22">*</operator><name pos:start="177:23" pos:end="177:23">p</name><operator pos:start="177:24" pos:end="177:24">=</operator><literal type="char" pos:start="177:25" pos:end="177:27">','</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="181:17" pos:end="181:32"><expr pos:start="181:17" pos:end="181:31"><name pos:start="181:17" pos:end="181:20">plen</name><operator pos:start="181:21" pos:end="181:21">=</operator> <call pos:start="181:23" pos:end="181:31"><name pos:start="181:23" pos:end="181:28">strlen</name><argument_list pos:start="181:29" pos:end="181:31">(<argument pos:start="181:30" pos:end="181:30"><expr pos:start="181:30" pos:end="181:30"><name pos:start="181:30" pos:end="181:30">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:43"><expr pos:start="183:17" pos:end="183:42"><name pos:start="183:17" pos:end="183:25">spaceLeft</name><operator pos:start="183:26" pos:end="183:26">=</operator> <name pos:start="183:28" pos:end="183:28">p</name> <operator pos:start="183:30" pos:end="183:30">-</operator> <name pos:start="183:32" pos:end="183:35">temp</name> <operator pos:start="183:37" pos:end="183:37">+</operator> <name pos:start="183:39" pos:end="183:42">plen</name></expr>;</expr_stmt>

                <if_stmt pos:start="185:17" pos:end="352:18"><if pos:start="185:17" pos:end="352:18">if<condition pos:start="185:19" pos:end="185:67">(<expr pos:start="185:20" pos:end="185:66"><name pos:start="185:20" pos:end="185:28">spaceLeft</name> <operator pos:start="185:30" pos:end="185:30">+</operator> <name pos:start="185:32" pos:end="185:37">newlen</name>  <operator pos:start="185:40" pos:end="185:41">&gt;=</operator> <name pos:start="185:43" pos:end="185:62">GET_MODE_BUFFER_SIZE</name> <operator pos:start="185:64" pos:end="185:64">-</operator> <literal type="number" pos:start="185:66" pos:end="185:66">1</literal></expr>)</condition><block pos:start="185:68" pos:end="352:18">{<block_content pos:start="190:17" pos:end="352:18">




                <expr_stmt pos:start="190:17" pos:end="190:47"><expr pos:start="190:17" pos:end="190:46"><call pos:start="190:17" pos:end="190:46"><name pos:start="190:17" pos:end="190:23">memmove</name><argument_list pos:start="190:24" pos:end="190:46">(<argument pos:start="190:25" pos:end="190:34"><expr pos:start="190:25" pos:end="190:34"><name pos:start="190:25" pos:end="190:25">p</name> <operator pos:start="190:27" pos:end="190:27">+</operator> <name pos:start="190:29" pos:end="190:34">newlen</name></expr></argument>, <argument pos:start="190:37" pos:end="190:37"><expr pos:start="190:37" pos:end="190:37"><name pos:start="190:37" pos:end="190:37">p</name></expr></argument>, <argument pos:start="190:40" pos:end="190:45"><expr pos:start="190:40" pos:end="190:45"><name pos:start="190:40" pos:end="190:43">plen</name><operator pos:start="190:44" pos:end="190:44">+</operator><literal type="number" pos:start="190:45" pos:end="190:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="192:17" pos:end="192:57"><expr pos:start="192:17" pos:end="192:56"><call pos:start="192:17" pos:end="192:56"><name pos:start="192:17" pos:end="192:22">memcpy</name><argument_list pos:start="192:23" pos:end="192:56">(<argument pos:start="192:24" pos:end="192:24"><expr pos:start="192:24" pos:end="192:24"><name pos:start="192:24" pos:end="192:24">p</name></expr></argument>, <argument pos:start="192:27" pos:end="192:47"><expr pos:start="192:27" pos:end="192:47"><name pos:start="192:27" pos:end="192:47"><name pos:start="192:27" pos:end="192:38">replaceTable</name><index pos:start="192:39" pos:end="192:47">[<expr pos:start="192:40" pos:end="192:46"><literal type="number" pos:start="192:40" pos:end="192:40">2</literal><operator pos:start="192:41" pos:end="192:41">*</operator><name pos:start="192:42" pos:end="192:42">i</name> <operator pos:start="192:44" pos:end="192:44">+</operator> <literal type="number" pos:start="192:46" pos:end="192:46">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="192:50" pos:end="192:55"><expr pos:start="192:50" pos:end="192:55"><name pos:start="192:50" pos:end="192:55">newlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="194:17" pos:end="194:31"><expr pos:start="194:17" pos:end="194:30"><name pos:start="194:17" pos:end="194:28">filterNameOk</name><operator pos:start="194:29" pos:end="194:29">=</operator><literal type="number" pos:start="194:30" pos:end="194:30">1</literal></expr>;</expr_stmt>





        <for pos:start="200:9" pos:end="352:18">for<control pos:start="200:12" pos:end="200:49">(<init pos:start="200:13" pos:end="200:16"><expr pos:start="200:13" pos:end="200:15"><name pos:start="200:13" pos:end="200:13">i</name><operator pos:start="200:14" pos:end="200:14">=</operator><literal type="number" pos:start="200:15" pos:end="200:15">0</literal></expr>;</init> <condition pos:start="200:18" pos:end="200:44"><expr pos:start="200:18" pos:end="200:43"><name pos:start="200:18" pos:end="200:27"><name pos:start="200:18" pos:end="200:24">filters</name><index pos:start="200:25" pos:end="200:27">[<expr pos:start="200:26" pos:end="200:26"><name pos:start="200:26" pos:end="200:26">i</name></expr>]</index></name><operator pos:start="200:28" pos:end="200:28">.</operator><name pos:start="200:29" pos:end="200:37">shortName</name><operator pos:start="200:38" pos:end="200:39">!=</operator><name pos:start="200:40" pos:end="200:43">NULL</name></expr>;</condition> <incr pos:start="200:46" pos:end="200:48"><expr pos:start="200:46" pos:end="200:48"><name pos:start="200:46" pos:end="200:46">i</name><operator pos:start="200:47" pos:end="200:48">++</operator></expr></incr>)</control><block pos:start="200:50" pos:end="352:18">{<block_content pos:start="202:13" pos:end="352:18">

            <if_stmt pos:start="202:13" pos:end="352:18"><if pos:start="202:13" pos:end="352:18">if<condition pos:start="202:15" pos:end="204:60">(   <expr pos:start="202:19" pos:end="204:59"><operator pos:start="202:19" pos:end="202:19">!</operator><call pos:start="202:20" pos:end="202:58"><name pos:start="202:20" pos:end="202:25">strcmp</name><argument_list pos:start="202:26" pos:end="202:58">(<argument pos:start="202:27" pos:end="202:45"><expr pos:start="202:27" pos:end="202:45"><name pos:start="202:27" pos:end="202:36"><name pos:start="202:27" pos:end="202:33">filters</name><index pos:start="202:34" pos:end="202:36">[<expr pos:start="202:35" pos:end="202:35"><name pos:start="202:35" pos:end="202:35">i</name></expr>]</index></name><operator pos:start="202:37" pos:end="202:37">.</operator><name pos:start="202:38" pos:end="202:45">longName</name></expr></argument>, <argument pos:start="202:48" pos:end="202:57"><expr pos:start="202:48" pos:end="202:57"><name pos:start="202:48" pos:end="202:57">filterName</name></expr></argument>)</argument_list></call>

               <operator pos:start="204:16" pos:end="204:17">||</operator> <operator pos:start="204:19" pos:end="204:19">!</operator><call pos:start="204:20" pos:end="204:59"><name pos:start="204:20" pos:end="204:25">strcmp</name><argument_list pos:start="204:26" pos:end="204:59">(<argument pos:start="204:27" pos:end="204:46"><expr pos:start="204:27" pos:end="204:46"><name pos:start="204:27" pos:end="204:36"><name pos:start="204:27" pos:end="204:33">filters</name><index pos:start="204:34" pos:end="204:36">[<expr pos:start="204:35" pos:end="204:35"><name pos:start="204:35" pos:end="204:35">i</name></expr>]</index></name><operator pos:start="204:37" pos:end="204:37">.</operator><name pos:start="204:38" pos:end="204:46">shortName</name></expr></argument>, <argument pos:start="204:49" pos:end="204:58"><expr pos:start="204:49" pos:end="204:58"><name pos:start="204:49" pos:end="204:58">filterName</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="204:61" pos:end="352:18">{<block_content pos:start="206:17" pos:end="352:18">

                <expr_stmt pos:start="206:17" pos:end="206:52"><expr pos:start="206:17" pos:end="206:51"><name pos:start="206:17" pos:end="206:31"><name pos:start="206:17" pos:end="206:22">ppMode</name><operator pos:start="206:23" pos:end="206:24">-&gt;</operator><name pos:start="206:25" pos:end="206:31">lumMode</name></name> <operator pos:start="206:33" pos:end="206:34">&amp;=</operator> <operator pos:start="206:36" pos:end="206:36">~</operator><name pos:start="206:37" pos:end="206:46"><name pos:start="206:37" pos:end="206:43">filters</name><index pos:start="206:44" pos:end="206:46">[<expr pos:start="206:45" pos:end="206:45"><name pos:start="206:45" pos:end="206:45">i</name></expr>]</index></name><operator pos:start="206:47" pos:end="206:47">.</operator><name pos:start="206:48" pos:end="206:51">mask</name></expr>;</expr_stmt>

                <expr_stmt pos:start="208:17" pos:end="208:54"><expr pos:start="208:17" pos:end="208:53"><name pos:start="208:17" pos:end="208:33"><name pos:start="208:17" pos:end="208:22">ppMode</name><operator pos:start="208:23" pos:end="208:24">-&gt;</operator><name pos:start="208:25" pos:end="208:33">chromMode</name></name> <operator pos:start="208:35" pos:end="208:36">&amp;=</operator> <operator pos:start="208:38" pos:end="208:38">~</operator><name pos:start="208:39" pos:end="208:48"><name pos:start="208:39" pos:end="208:45">filters</name><index pos:start="208:46" pos:end="208:48">[<expr pos:start="208:47" pos:end="208:47"><name pos:start="208:47" pos:end="208:47">i</name></expr>]</index></name><operator pos:start="208:49" pos:end="208:49">.</operator><name pos:start="208:50" pos:end="208:53">mask</name></expr>;</expr_stmt>



                <expr_stmt pos:start="212:17" pos:end="212:31"><expr pos:start="212:17" pos:end="212:30"><name pos:start="212:17" pos:end="212:28">filterNameOk</name><operator pos:start="212:29" pos:end="212:29">=</operator><literal type="number" pos:start="212:30" pos:end="212:30">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="214:17" pos:end="214:34"><if pos:start="214:17" pos:end="214:34">if<condition pos:start="214:19" pos:end="214:27">(<expr pos:start="214:20" pos:end="214:26"><operator pos:start="214:20" pos:end="214:20">!</operator><name pos:start="214:21" pos:end="214:26">enable</name></expr>)</condition><block type="pseudo" pos:start="214:29" pos:end="214:34"><block_content pos:start="214:29" pos:end="214:34"> <break pos:start="214:29" pos:end="214:34">break;</break></block_content></block></if></if_stmt> <comment type="line" pos:start="214:36" pos:end="214:62">// user wants to disable it</comment>



                <if_stmt pos:start="218:17" pos:end="220:54"><if pos:start="218:17" pos:end="220:54">if<condition pos:start="218:19" pos:end="218:57">(<expr pos:start="218:20" pos:end="218:56"><name pos:start="218:20" pos:end="218:20">q</name> <operator pos:start="218:22" pos:end="218:23">&gt;=</operator> <name pos:start="218:25" pos:end="218:34"><name pos:start="218:25" pos:end="218:31">filters</name><index pos:start="218:32" pos:end="218:34">[<expr pos:start="218:33" pos:end="218:33"><name pos:start="218:33" pos:end="218:33">i</name></expr>]</index></name><operator pos:start="218:35" pos:end="218:35">.</operator><name pos:start="218:36" pos:end="218:48">minLumQuality</name> <operator pos:start="218:50" pos:end="218:51">&amp;&amp;</operator> <name pos:start="218:53" pos:end="218:56">luma</name></expr>)</condition><block type="pseudo" pos:start="220:21" pos:end="220:54"><block_content pos:start="220:21" pos:end="220:54">

                    <expr_stmt pos:start="220:21" pos:end="220:54"><expr pos:start="220:21" pos:end="220:53"><name pos:start="220:21" pos:end="220:35"><name pos:start="220:21" pos:end="220:26">ppMode</name><operator pos:start="220:27" pos:end="220:28">-&gt;</operator><name pos:start="220:29" pos:end="220:35">lumMode</name></name><operator pos:start="220:36" pos:end="220:37">|=</operator> <name pos:start="220:39" pos:end="220:48"><name pos:start="220:39" pos:end="220:45">filters</name><index pos:start="220:46" pos:end="220:48">[<expr pos:start="220:47" pos:end="220:47"><name pos:start="220:47" pos:end="220:47">i</name></expr>]</index></name><operator pos:start="220:49" pos:end="220:49">.</operator><name pos:start="220:50" pos:end="220:53">mask</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="222:17" pos:end="226:64"><if pos:start="222:17" pos:end="226:64">if<condition pos:start="222:19" pos:end="222:70">(<expr pos:start="222:20" pos:end="222:69"><name pos:start="222:20" pos:end="222:24">chrom</name><operator pos:start="222:25" pos:end="222:26">==</operator><literal type="number" pos:start="222:27" pos:end="222:27">1</literal> <operator pos:start="222:29" pos:end="222:30">||</operator> <operator pos:start="222:32" pos:end="222:32">(</operator><name pos:start="222:33" pos:end="222:37">chrom</name><operator pos:start="222:38" pos:end="222:39">==</operator><operator pos:start="222:40" pos:end="222:40">-</operator><literal type="number" pos:start="222:41" pos:end="222:41">1</literal> <operator pos:start="222:43" pos:end="222:44">&amp;&amp;</operator> <name pos:start="222:46" pos:end="222:55"><name pos:start="222:46" pos:end="222:52">filters</name><index pos:start="222:53" pos:end="222:55">[<expr pos:start="222:54" pos:end="222:54"><name pos:start="222:54" pos:end="222:54">i</name></expr>]</index></name><operator pos:start="222:56" pos:end="222:56">.</operator><name pos:start="222:57" pos:end="222:68">chromDefault</name><operator pos:start="222:69" pos:end="222:69">)</operator></expr>)</condition><block type="pseudo" pos:start="224:21" pos:end="226:64"><block_content pos:start="224:21" pos:end="226:64">

                    <if_stmt pos:start="224:21" pos:end="226:64"><if pos:start="224:21" pos:end="226:64">if<condition pos:start="224:23" pos:end="224:55">(<expr pos:start="224:24" pos:end="224:54"><name pos:start="224:24" pos:end="224:24">q</name> <operator pos:start="224:26" pos:end="224:27">&gt;=</operator> <name pos:start="224:29" pos:end="224:38"><name pos:start="224:29" pos:end="224:35">filters</name><index pos:start="224:36" pos:end="224:38">[<expr pos:start="224:37" pos:end="224:37"><name pos:start="224:37" pos:end="224:37">i</name></expr>]</index></name><operator pos:start="224:39" pos:end="224:39">.</operator><name pos:start="224:40" pos:end="224:54">minChromQuality</name></expr>)</condition><block type="pseudo" pos:start="226:29" pos:end="226:64"><block_content pos:start="226:29" pos:end="226:64">

                            <expr_stmt pos:start="226:29" pos:end="226:64"><expr pos:start="226:29" pos:end="226:63"><name pos:start="226:29" pos:end="226:45"><name pos:start="226:29" pos:end="226:34">ppMode</name><operator pos:start="226:35" pos:end="226:36">-&gt;</operator><name pos:start="226:37" pos:end="226:45">chromMode</name></name><operator pos:start="226:46" pos:end="226:47">|=</operator> <name pos:start="226:49" pos:end="226:58"><name pos:start="226:49" pos:end="226:55">filters</name><index pos:start="226:56" pos:end="226:58">[<expr pos:start="226:57" pos:end="226:57"><name pos:start="226:57" pos:end="226:57">i</name></expr>]</index></name><operator pos:start="226:59" pos:end="226:59">.</operator><name pos:start="226:60" pos:end="226:63">mask</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="230:17" pos:end="352:18"><if pos:start="230:17" pos:end="352:18">if<condition pos:start="230:19" pos:end="230:48">(<expr pos:start="230:20" pos:end="230:47"><name pos:start="230:20" pos:end="230:29"><name pos:start="230:20" pos:end="230:26">filters</name><index pos:start="230:27" pos:end="230:29">[<expr pos:start="230:28" pos:end="230:28"><name pos:start="230:28" pos:end="230:28">i</name></expr>]</index></name><operator pos:start="230:30" pos:end="230:30">.</operator><name pos:start="230:31" pos:end="230:34">mask</name> <operator pos:start="230:36" pos:end="230:37">==</operator> <name pos:start="230:39" pos:end="230:47">LEVEL_FIX</name></expr>)</condition><block pos:start="230:49" pos:end="352:18">{<block_content pos:start="232:21" pos:end="352:18">

                    <decl_stmt pos:start="232:21" pos:end="232:26"><decl pos:start="232:21" pos:end="232:25"><type pos:start="232:21" pos:end="232:23"><name pos:start="232:21" pos:end="232:23">int</name></type> <name pos:start="232:25" pos:end="232:25">o</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="234:21" pos:end="234:44"><expr pos:start="234:21" pos:end="234:43"><name pos:start="234:21" pos:end="234:39"><name pos:start="234:21" pos:end="234:26">ppMode</name><operator pos:start="234:27" pos:end="234:28">-&gt;</operator><name pos:start="234:29" pos:end="234:39">minAllowedY</name></name><operator pos:start="234:40" pos:end="234:40">=</operator> <literal type="number" pos:start="234:42" pos:end="234:43">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="236:21" pos:end="236:45"><expr pos:start="236:21" pos:end="236:44"><name pos:start="236:21" pos:end="236:39"><name pos:start="236:21" pos:end="236:26">ppMode</name><operator pos:start="236:27" pos:end="236:28">-&gt;</operator><name pos:start="236:29" pos:end="236:39">maxAllowedY</name></name><operator pos:start="236:40" pos:end="236:40">=</operator> <literal type="number" pos:start="236:42" pos:end="236:44">234</literal></expr>;</expr_stmt>

                    <for pos:start="238:21" pos:end="352:18">for<control pos:start="238:24" pos:end="238:51">(<init pos:start="238:25" pos:end="238:28"><expr pos:start="238:25" pos:end="238:27"><name pos:start="238:25" pos:end="238:25">o</name><operator pos:start="238:26" pos:end="238:26">=</operator><literal type="number" pos:start="238:27" pos:end="238:27">0</literal></expr>;</init> <condition pos:start="238:30" pos:end="238:46"><expr pos:start="238:30" pos:end="238:45"><name pos:start="238:30" pos:end="238:39"><name pos:start="238:30" pos:end="238:36">options</name><index pos:start="238:37" pos:end="238:39">[<expr pos:start="238:38" pos:end="238:38"><name pos:start="238:38" pos:end="238:38">o</name></expr>]</index></name><operator pos:start="238:40" pos:end="238:41">!=</operator><name pos:start="238:42" pos:end="238:45">NULL</name></expr>;</condition> <incr pos:start="238:48" pos:end="238:50"><expr pos:start="238:48" pos:end="238:50"><name pos:start="238:48" pos:end="238:48">o</name><operator pos:start="238:49" pos:end="238:50">++</operator></expr></incr>)</control><block pos:start="238:52" pos:end="352:18">{<block_content pos:start="240:25" pos:end="352:18">

                        <if_stmt pos:start="240:25" pos:end="352:18"><if pos:start="240:25" pos:end="352:18">if<condition pos:start="240:27" pos:end="242:53">(  <expr pos:start="240:30" pos:end="242:52"><operator pos:start="240:30" pos:end="240:30">!</operator><call pos:start="240:31" pos:end="240:61"><name pos:start="240:31" pos:end="240:36">strcmp</name><argument_list pos:start="240:37" pos:end="240:61">(<argument pos:start="240:38" pos:end="240:47"><expr pos:start="240:38" pos:end="240:47"><name pos:start="240:38" pos:end="240:47"><name pos:start="240:38" pos:end="240:44">options</name><index pos:start="240:45" pos:end="240:47">[<expr pos:start="240:46" pos:end="240:46"><name pos:start="240:46" pos:end="240:46">o</name></expr>]</index></name></expr></argument>,<argument pos:start="240:49" pos:end="240:60"><expr pos:start="240:49" pos:end="240:60"><literal type="string" pos:start="240:49" pos:end="240:60">"fullyrange"</literal></expr></argument>)</argument_list></call>

                           <operator pos:start="242:28" pos:end="242:29">||</operator><operator pos:start="242:30" pos:end="242:30">!</operator><call pos:start="242:31" pos:end="242:52"><name pos:start="242:31" pos:end="242:36">strcmp</name><argument_list pos:start="242:37" pos:end="242:52">(<argument pos:start="242:38" pos:end="242:47"><expr pos:start="242:38" pos:end="242:47"><name pos:start="242:38" pos:end="242:47"><name pos:start="242:38" pos:end="242:44">options</name><index pos:start="242:45" pos:end="242:47">[<expr pos:start="242:46" pos:end="242:46"><name pos:start="242:46" pos:end="242:46">o</name></expr>]</index></name></expr></argument>,<argument pos:start="242:49" pos:end="242:51"><expr pos:start="242:49" pos:end="242:51"><literal type="string" pos:start="242:49" pos:end="242:51">"f"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="242:54" pos:end="352:18">{<block_content pos:start="244:29" pos:end="352:18">

                            <expr_stmt pos:start="244:29" pos:end="244:51"><expr pos:start="244:29" pos:end="244:50"><name pos:start="244:29" pos:end="244:47"><name pos:start="244:29" pos:end="244:34">ppMode</name><operator pos:start="244:35" pos:end="244:36">-&gt;</operator><name pos:start="244:37" pos:end="244:47">minAllowedY</name></name><operator pos:start="244:48" pos:end="244:48">=</operator> <literal type="number" pos:start="244:50" pos:end="244:50">0</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="246:29" pos:end="246:53"><expr pos:start="246:29" pos:end="246:52"><name pos:start="246:29" pos:end="246:47"><name pos:start="246:29" pos:end="246:34">ppMode</name><operator pos:start="246:35" pos:end="246:36">-&gt;</operator><name pos:start="246:37" pos:end="246:47">maxAllowedY</name></name><operator pos:start="246:48" pos:end="246:48">=</operator> <literal type="number" pos:start="246:50" pos:end="246:52">255</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="248:29" pos:end="248:50"><expr pos:start="248:29" pos:end="248:49"><name pos:start="248:29" pos:end="248:47">numOfUnknownOptions</name><operator pos:start="248:48" pos:end="248:49">--</operator></expr>;</expr_stmt>




                <if_stmt pos:start="253:17" pos:end="352:18"><if type="elseif" pos:start="253:17" pos:end="352:18">else if<condition pos:start="253:24" pos:end="253:61">(<expr pos:start="253:25" pos:end="253:60"><name pos:start="253:25" pos:end="253:34"><name pos:start="253:25" pos:end="253:31">filters</name><index pos:start="253:32" pos:end="253:34">[<expr pos:start="253:33" pos:end="253:33"><name pos:start="253:33" pos:end="253:33">i</name></expr>]</index></name><operator pos:start="253:35" pos:end="253:35">.</operator><name pos:start="253:36" pos:end="253:39">mask</name> <operator pos:start="253:41" pos:end="253:42">==</operator> <name pos:start="253:44" pos:end="253:60">TEMP_NOISE_FILTER</name></expr>)</condition>

                <block pos:start="255:17" pos:end="352:18">{<block_content pos:start="257:21" pos:end="352:18">

                    <decl_stmt pos:start="257:21" pos:end="257:26"><decl pos:start="257:21" pos:end="257:25"><type pos:start="257:21" pos:end="257:23"><name pos:start="257:21" pos:end="257:23">int</name></type> <name pos:start="257:25" pos:end="257:25">o</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="259:21" pos:end="259:38"><decl pos:start="259:21" pos:end="259:37"><type pos:start="259:21" pos:end="259:23"><name pos:start="259:21" pos:end="259:23">int</name></type> <name pos:start="259:25" pos:end="259:35">numOfNoises</name><init pos:start="259:36" pos:end="259:37">=<expr pos:start="259:37" pos:end="259:37"><literal type="number" pos:start="259:37" pos:end="259:37">0</literal></expr></init></decl>;</decl_stmt>



                    <for pos:start="263:21" pos:end="352:18">for<control pos:start="263:24" pos:end="263:51">(<init pos:start="263:25" pos:end="263:28"><expr pos:start="263:25" pos:end="263:27"><name pos:start="263:25" pos:end="263:25">o</name><operator pos:start="263:26" pos:end="263:26">=</operator><literal type="number" pos:start="263:27" pos:end="263:27">0</literal></expr>;</init> <condition pos:start="263:30" pos:end="263:46"><expr pos:start="263:30" pos:end="263:45"><name pos:start="263:30" pos:end="263:39"><name pos:start="263:30" pos:end="263:36">options</name><index pos:start="263:37" pos:end="263:39">[<expr pos:start="263:38" pos:end="263:38"><name pos:start="263:38" pos:end="263:38">o</name></expr>]</index></name><operator pos:start="263:40" pos:end="263:41">!=</operator><name pos:start="263:42" pos:end="263:45">NULL</name></expr>;</condition> <incr pos:start="263:48" pos:end="263:50"><expr pos:start="263:48" pos:end="263:50"><name pos:start="263:48" pos:end="263:48">o</name><operator pos:start="263:49" pos:end="263:50">++</operator></expr></incr>)</control><block pos:start="263:52" pos:end="352:18">{<block_content pos:start="265:25" pos:end="352:18">

                        <decl_stmt pos:start="265:25" pos:end="265:35"><decl pos:start="265:25" pos:end="265:34"><type pos:start="265:25" pos:end="265:30"><name pos:start="265:25" pos:end="265:28">char</name> <modifier pos:start="265:30" pos:end="265:30">*</modifier></type><name pos:start="265:31" pos:end="265:34">tail</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="267:25" pos:end="269:57"><expr pos:start="267:25" pos:end="269:56"><name pos:start="267:25" pos:end="267:56"><name pos:start="267:25" pos:end="267:30">ppMode</name><operator pos:start="267:31" pos:end="267:32">-&gt;</operator><name pos:start="267:33" pos:end="267:43">maxTmpNoise</name><index pos:start="267:44" pos:end="267:56">[<expr pos:start="267:45" pos:end="267:55"><name pos:start="267:45" pos:end="267:55">numOfNoises</name></expr>]</index></name><operator pos:start="267:57" pos:end="267:57">=</operator>

                            <call pos:start="269:29" pos:end="269:56"><name pos:start="269:29" pos:end="269:34">strtol</name><argument_list pos:start="269:35" pos:end="269:56">(<argument pos:start="269:36" pos:end="269:45"><expr pos:start="269:36" pos:end="269:45"><name pos:start="269:36" pos:end="269:45"><name pos:start="269:36" pos:end="269:42">options</name><index pos:start="269:43" pos:end="269:45">[<expr pos:start="269:44" pos:end="269:44"><name pos:start="269:44" pos:end="269:44">o</name></expr>]</index></name></expr></argument>, <argument pos:start="269:48" pos:end="269:52"><expr pos:start="269:48" pos:end="269:52"><operator pos:start="269:48" pos:end="269:48">&amp;</operator><name pos:start="269:49" pos:end="269:52">tail</name></expr></argument>, <argument pos:start="269:55" pos:end="269:55"><expr pos:start="269:55" pos:end="269:55"><literal type="number" pos:start="269:55" pos:end="269:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="271:25" pos:end="352:18"><if pos:start="271:25" pos:end="352:18">if<condition pos:start="271:27" pos:end="271:44">(<expr pos:start="271:28" pos:end="271:43"><name pos:start="271:28" pos:end="271:31">tail</name><operator pos:start="271:32" pos:end="271:33">!=</operator><name pos:start="271:34" pos:end="271:43"><name pos:start="271:34" pos:end="271:40">options</name><index pos:start="271:41" pos:end="271:43">[<expr pos:start="271:42" pos:end="271:42"><name pos:start="271:42" pos:end="271:42">o</name></expr>]</index></name></expr>)</condition><block pos:start="271:45" pos:end="352:18">{<block_content pos:start="273:29" pos:end="352:18">

                            <expr_stmt pos:start="273:29" pos:end="273:42"><expr pos:start="273:29" pos:end="273:41"><name pos:start="273:29" pos:end="273:39">numOfNoises</name><operator pos:start="273:40" pos:end="273:41">++</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="275:29" pos:end="275:50"><expr pos:start="275:29" pos:end="275:49"><name pos:start="275:29" pos:end="275:47">numOfUnknownOptions</name><operator pos:start="275:48" pos:end="275:49">--</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="277:29" pos:end="352:18"><if pos:start="277:29" pos:end="277:55">if<condition pos:start="277:31" pos:end="277:48">(<expr pos:start="277:32" pos:end="277:47"><name pos:start="277:32" pos:end="277:42">numOfNoises</name> <operator pos:start="277:44" pos:end="277:45">&gt;=</operator> <literal type="number" pos:start="277:47" pos:end="277:47">3</literal></expr>)</condition><block type="pseudo" pos:start="277:50" pos:end="277:55"><block_content pos:start="277:50" pos:end="277:55"> <break pos:start="277:50" pos:end="277:55">break;</break></block_content></block></if>




                <if type="elseif" pos:start="282:17" pos:end="352:18">else if<condition pos:start="282:24" pos:end="284:89">(<expr pos:start="282:25" pos:end="284:88"><name pos:start="282:25" pos:end="282:34"><name pos:start="282:25" pos:end="282:31">filters</name><index pos:start="282:32" pos:end="282:34">[<expr pos:start="282:33" pos:end="282:33"><name pos:start="282:33" pos:end="282:33">i</name></expr>]</index></name><operator pos:start="282:35" pos:end="282:35">.</operator><name pos:start="282:36" pos:end="282:39">mask</name> <operator pos:start="282:41" pos:end="282:42">==</operator> <name pos:start="282:44" pos:end="282:52">V_DEBLOCK</name>   <operator pos:start="282:56" pos:end="282:57">||</operator> <name pos:start="282:59" pos:end="282:68"><name pos:start="282:59" pos:end="282:65">filters</name><index pos:start="282:66" pos:end="282:68">[<expr pos:start="282:67" pos:end="282:67"><name pos:start="282:67" pos:end="282:67">i</name></expr>]</index></name><operator pos:start="282:69" pos:end="282:69">.</operator><name pos:start="282:70" pos:end="282:73">mask</name> <operator pos:start="282:75" pos:end="282:76">==</operator> <name pos:start="282:78" pos:end="282:86">H_DEBLOCK</name>

                     <operator pos:start="284:22" pos:end="284:23">||</operator> <name pos:start="284:25" pos:end="284:34"><name pos:start="284:25" pos:end="284:31">filters</name><index pos:start="284:32" pos:end="284:34">[<expr pos:start="284:33" pos:end="284:33"><name pos:start="284:33" pos:end="284:33">i</name></expr>]</index></name><operator pos:start="284:35" pos:end="284:35">.</operator><name pos:start="284:36" pos:end="284:39">mask</name> <operator pos:start="284:41" pos:end="284:42">==</operator> <name pos:start="284:44" pos:end="284:54">V_A_DEBLOCK</name> <operator pos:start="284:56" pos:end="284:57">||</operator> <name pos:start="284:59" pos:end="284:68"><name pos:start="284:59" pos:end="284:65">filters</name><index pos:start="284:66" pos:end="284:68">[<expr pos:start="284:67" pos:end="284:67"><name pos:start="284:67" pos:end="284:67">i</name></expr>]</index></name><operator pos:start="284:69" pos:end="284:69">.</operator><name pos:start="284:70" pos:end="284:73">mask</name> <operator pos:start="284:75" pos:end="284:76">==</operator> <name pos:start="284:78" pos:end="284:88">H_A_DEBLOCK</name></expr>)</condition><block pos:start="284:90" pos:end="352:18">{<block_content pos:start="286:21" pos:end="352:18">

                    <decl_stmt pos:start="286:21" pos:end="286:26"><decl pos:start="286:21" pos:end="286:25"><type pos:start="286:21" pos:end="286:23"><name pos:start="286:21" pos:end="286:23">int</name></type> <name pos:start="286:25" pos:end="286:25">o</name></decl>;</decl_stmt>



                    <for pos:start="290:21" pos:end="352:18">for<control pos:start="290:24" pos:end="290:58">(<init pos:start="290:25" pos:end="290:28"><expr pos:start="290:25" pos:end="290:27"><name pos:start="290:25" pos:end="290:25">o</name><operator pos:start="290:26" pos:end="290:26">=</operator><literal type="number" pos:start="290:27" pos:end="290:27">0</literal></expr>;</init> <condition pos:start="290:30" pos:end="290:53"><expr pos:start="290:30" pos:end="290:52"><name pos:start="290:30" pos:end="290:39"><name pos:start="290:30" pos:end="290:36">options</name><index pos:start="290:37" pos:end="290:39">[<expr pos:start="290:38" pos:end="290:38"><name pos:start="290:38" pos:end="290:38">o</name></expr>]</index></name><operator pos:start="290:40" pos:end="290:41">!=</operator><name pos:start="290:42" pos:end="290:45">NULL</name> <operator pos:start="290:47" pos:end="290:48">&amp;&amp;</operator> <name pos:start="290:50" pos:end="290:50">o</name><operator pos:start="290:51" pos:end="290:51">&lt;</operator><literal type="number" pos:start="290:52" pos:end="290:52">2</literal></expr>;</condition> <incr pos:start="290:55" pos:end="290:57"><expr pos:start="290:55" pos:end="290:57"><name pos:start="290:55" pos:end="290:55">o</name><operator pos:start="290:56" pos:end="290:57">++</operator></expr></incr>)</control><block pos:start="290:59" pos:end="352:18">{<block_content pos:start="292:25" pos:end="352:18">

                        <decl_stmt pos:start="292:25" pos:end="292:35"><decl pos:start="292:25" pos:end="292:34"><type pos:start="292:25" pos:end="292:30"><name pos:start="292:25" pos:end="292:28">char</name> <modifier pos:start="292:30" pos:end="292:30">*</modifier></type><name pos:start="292:31" pos:end="292:34">tail</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="294:25" pos:end="294:62"><decl pos:start="294:25" pos:end="294:61"><type pos:start="294:25" pos:end="294:27"><name pos:start="294:25" pos:end="294:27">int</name></type> <name pos:start="294:29" pos:end="294:31">val</name><init pos:start="294:32" pos:end="294:61">= <expr pos:start="294:34" pos:end="294:61"><call pos:start="294:34" pos:end="294:61"><name pos:start="294:34" pos:end="294:39">strtol</name><argument_list pos:start="294:40" pos:end="294:61">(<argument pos:start="294:41" pos:end="294:50"><expr pos:start="294:41" pos:end="294:50"><name pos:start="294:41" pos:end="294:50"><name pos:start="294:41" pos:end="294:47">options</name><index pos:start="294:48" pos:end="294:50">[<expr pos:start="294:49" pos:end="294:49"><name pos:start="294:49" pos:end="294:49">o</name></expr>]</index></name></expr></argument>, <argument pos:start="294:53" pos:end="294:57"><expr pos:start="294:53" pos:end="294:57"><operator pos:start="294:53" pos:end="294:53">&amp;</operator><name pos:start="294:54" pos:end="294:57">tail</name></expr></argument>, <argument pos:start="294:60" pos:end="294:60"><expr pos:start="294:60" pos:end="294:60"><literal type="number" pos:start="294:60" pos:end="294:60">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="296:25" pos:end="296:51"><if pos:start="296:25" pos:end="296:51">if<condition pos:start="296:27" pos:end="296:44">(<expr pos:start="296:28" pos:end="296:43"><name pos:start="296:28" pos:end="296:31">tail</name><operator pos:start="296:32" pos:end="296:33">==</operator><name pos:start="296:34" pos:end="296:43"><name pos:start="296:34" pos:end="296:40">options</name><index pos:start="296:41" pos:end="296:43">[<expr pos:start="296:42" pos:end="296:42"><name pos:start="296:42" pos:end="296:42">o</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="296:46" pos:end="296:51"><block_content pos:start="296:46" pos:end="296:51"> <break pos:start="296:46" pos:end="296:51">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="300:25" pos:end="300:46"><expr pos:start="300:25" pos:end="300:45"><name pos:start="300:25" pos:end="300:43">numOfUnknownOptions</name><operator pos:start="300:44" pos:end="300:45">--</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="302:25" pos:end="304:60"><if pos:start="302:25" pos:end="302:57">if<condition pos:start="302:27" pos:end="302:32">(<expr pos:start="302:28" pos:end="302:31"><name pos:start="302:28" pos:end="302:28">o</name><operator pos:start="302:29" pos:end="302:30">==</operator><literal type="number" pos:start="302:31" pos:end="302:31">0</literal></expr>)</condition><block type="pseudo" pos:start="302:34" pos:end="302:57"><block_content pos:start="302:34" pos:end="302:57"> <expr_stmt pos:start="302:34" pos:end="302:57"><expr pos:start="302:34" pos:end="302:56"><name pos:start="302:34" pos:end="302:51"><name pos:start="302:34" pos:end="302:39">ppMode</name><operator pos:start="302:40" pos:end="302:41">-&gt;</operator><name pos:start="302:42" pos:end="302:51">baseDcDiff</name></name><operator pos:start="302:52" pos:end="302:52">=</operator> <name pos:start="302:54" pos:end="302:56">val</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="304:25" pos:end="304:60">else<block type="pseudo" pos:start="304:30" pos:end="304:60"><block_content pos:start="304:30" pos:end="304:60"> <expr_stmt pos:start="304:30" pos:end="304:60"><expr pos:start="304:30" pos:end="304:59"><name pos:start="304:30" pos:end="304:54"><name pos:start="304:30" pos:end="304:35">ppMode</name><operator pos:start="304:36" pos:end="304:37">-&gt;</operator><name pos:start="304:38" pos:end="304:54">flatnessThreshold</name></name><operator pos:start="304:55" pos:end="304:55">=</operator> <name pos:start="304:57" pos:end="304:59">val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="308:17" pos:end="352:18"><if type="elseif" pos:start="308:17" pos:end="352:18">else if<condition pos:start="308:24" pos:end="308:55">(<expr pos:start="308:25" pos:end="308:54"><name pos:start="308:25" pos:end="308:34"><name pos:start="308:25" pos:end="308:31">filters</name><index pos:start="308:32" pos:end="308:34">[<expr pos:start="308:33" pos:end="308:33"><name pos:start="308:33" pos:end="308:33">i</name></expr>]</index></name><operator pos:start="308:35" pos:end="308:35">.</operator><name pos:start="308:36" pos:end="308:39">mask</name> <operator pos:start="308:41" pos:end="308:42">==</operator> <name pos:start="308:44" pos:end="308:54">FORCE_QUANT</name></expr>)</condition><block pos:start="308:56" pos:end="352:18">{<block_content pos:start="310:21" pos:end="352:18">

                    <decl_stmt pos:start="310:21" pos:end="310:26"><decl pos:start="310:21" pos:end="310:25"><type pos:start="310:21" pos:end="310:23"><name pos:start="310:21" pos:end="310:23">int</name></type> <name pos:start="310:25" pos:end="310:25">o</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="312:21" pos:end="312:44"><expr pos:start="312:21" pos:end="312:43"><name pos:start="312:21" pos:end="312:39"><name pos:start="312:21" pos:end="312:26">ppMode</name><operator pos:start="312:27" pos:end="312:28">-&gt;</operator><name pos:start="312:29" pos:end="312:39">forcedQuant</name></name><operator pos:start="312:40" pos:end="312:40">=</operator> <literal type="number" pos:start="312:42" pos:end="312:43">15</literal></expr>;</expr_stmt>



                    <for pos:start="316:21" pos:end="352:18">for<control pos:start="316:24" pos:end="316:58">(<init pos:start="316:25" pos:end="316:28"><expr pos:start="316:25" pos:end="316:27"><name pos:start="316:25" pos:end="316:25">o</name><operator pos:start="316:26" pos:end="316:26">=</operator><literal type="number" pos:start="316:27" pos:end="316:27">0</literal></expr>;</init> <condition pos:start="316:30" pos:end="316:53"><expr pos:start="316:30" pos:end="316:52"><name pos:start="316:30" pos:end="316:39"><name pos:start="316:30" pos:end="316:36">options</name><index pos:start="316:37" pos:end="316:39">[<expr pos:start="316:38" pos:end="316:38"><name pos:start="316:38" pos:end="316:38">o</name></expr>]</index></name><operator pos:start="316:40" pos:end="316:41">!=</operator><name pos:start="316:42" pos:end="316:45">NULL</name> <operator pos:start="316:47" pos:end="316:48">&amp;&amp;</operator> <name pos:start="316:50" pos:end="316:50">o</name><operator pos:start="316:51" pos:end="316:51">&lt;</operator><literal type="number" pos:start="316:52" pos:end="316:52">1</literal></expr>;</condition> <incr pos:start="316:55" pos:end="316:57"><expr pos:start="316:55" pos:end="316:57"><name pos:start="316:55" pos:end="316:55">o</name><operator pos:start="316:56" pos:end="316:57">++</operator></expr></incr>)</control><block pos:start="316:59" pos:end="352:18">{<block_content pos:start="318:25" pos:end="352:18">

                        <decl_stmt pos:start="318:25" pos:end="318:35"><decl pos:start="318:25" pos:end="318:34"><type pos:start="318:25" pos:end="318:30"><name pos:start="318:25" pos:end="318:28">char</name> <modifier pos:start="318:30" pos:end="318:30">*</modifier></type><name pos:start="318:31" pos:end="318:34">tail</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="320:25" pos:end="320:62"><decl pos:start="320:25" pos:end="320:61"><type pos:start="320:25" pos:end="320:27"><name pos:start="320:25" pos:end="320:27">int</name></type> <name pos:start="320:29" pos:end="320:31">val</name><init pos:start="320:32" pos:end="320:61">= <expr pos:start="320:34" pos:end="320:61"><call pos:start="320:34" pos:end="320:61"><name pos:start="320:34" pos:end="320:39">strtol</name><argument_list pos:start="320:40" pos:end="320:61">(<argument pos:start="320:41" pos:end="320:50"><expr pos:start="320:41" pos:end="320:50"><name pos:start="320:41" pos:end="320:50"><name pos:start="320:41" pos:end="320:47">options</name><index pos:start="320:48" pos:end="320:50">[<expr pos:start="320:49" pos:end="320:49"><name pos:start="320:49" pos:end="320:49">o</name></expr>]</index></name></expr></argument>, <argument pos:start="320:53" pos:end="320:57"><expr pos:start="320:53" pos:end="320:57"><operator pos:start="320:53" pos:end="320:53">&amp;</operator><name pos:start="320:54" pos:end="320:57">tail</name></expr></argument>, <argument pos:start="320:60" pos:end="320:60"><expr pos:start="320:60" pos:end="320:60"><literal type="number" pos:start="320:60" pos:end="320:60">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="322:25" pos:end="322:51"><if pos:start="322:25" pos:end="322:51">if<condition pos:start="322:27" pos:end="322:44">(<expr pos:start="322:28" pos:end="322:43"><name pos:start="322:28" pos:end="322:31">tail</name><operator pos:start="322:32" pos:end="322:33">==</operator><name pos:start="322:34" pos:end="322:43"><name pos:start="322:34" pos:end="322:40">options</name><index pos:start="322:41" pos:end="322:43">[<expr pos:start="322:42" pos:end="322:42"><name pos:start="322:42" pos:end="322:42">o</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="322:46" pos:end="322:51"><block_content pos:start="322:46" pos:end="322:51"> <break pos:start="322:46" pos:end="322:51">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="326:25" pos:end="326:46"><expr pos:start="326:25" pos:end="326:45"><name pos:start="326:25" pos:end="326:43">numOfUnknownOptions</name><operator pos:start="326:44" pos:end="326:45">--</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="328:25" pos:end="328:49"><expr pos:start="328:25" pos:end="328:48"><name pos:start="328:25" pos:end="328:43"><name pos:start="328:25" pos:end="328:30">ppMode</name><operator pos:start="328:31" pos:end="328:32">-&gt;</operator><name pos:start="328:33" pos:end="328:43">forcedQuant</name></name><operator pos:start="328:44" pos:end="328:44">=</operator> <name pos:start="328:46" pos:end="328:48">val</name></expr>;</expr_stmt>





        <if_stmt pos:start="334:9" pos:end="334:42"><if pos:start="334:9" pos:end="334:42">if<condition pos:start="334:11" pos:end="334:25">(<expr pos:start="334:12" pos:end="334:24"><operator pos:start="334:12" pos:end="334:12">!</operator><name pos:start="334:13" pos:end="334:24">filterNameOk</name></expr>)</condition><block type="pseudo" pos:start="334:27" pos:end="334:42"><block_content pos:start="334:27" pos:end="334:42"> <expr_stmt pos:start="334:27" pos:end="334:42"><expr pos:start="334:27" pos:end="334:41"><name pos:start="334:27" pos:end="334:39"><name pos:start="334:27" pos:end="334:32">ppMode</name><operator pos:start="334:33" pos:end="334:34">-&gt;</operator><name pos:start="334:35" pos:end="334:39">error</name></name><operator pos:start="334:40" pos:end="334:41">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="336:9" pos:end="336:45"><expr pos:start="336:9" pos:end="336:44"><name pos:start="336:9" pos:end="336:21"><name pos:start="336:9" pos:end="336:14">ppMode</name><operator pos:start="336:15" pos:end="336:16">-&gt;</operator><name pos:start="336:17" pos:end="336:21">error</name></name> <operator pos:start="336:23" pos:end="336:24">+=</operator> <name pos:start="336:26" pos:end="336:44">numOfUnknownOptions</name></expr>;</expr_stmt>




    <expr_stmt pos:start="341:5" pos:end="341:101"><expr pos:start="341:5" pos:end="341:100"><call pos:start="341:5" pos:end="341:100"><name pos:start="341:5" pos:end="341:10">av_log</name><argument_list pos:start="341:11" pos:end="341:100">(<argument pos:start="341:12" pos:end="341:15"><expr pos:start="341:12" pos:end="341:15"><name pos:start="341:12" pos:end="341:15">NULL</name></expr></argument>, <argument pos:start="341:18" pos:end="341:29"><expr pos:start="341:18" pos:end="341:29"><name pos:start="341:18" pos:end="341:29">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="341:32" pos:end="341:63"><expr pos:start="341:32" pos:end="341:63"><literal type="string" pos:start="341:32" pos:end="341:63">"pp: lumMode=%X, chromMode=%X\n"</literal></expr></argument>, <argument pos:start="341:66" pos:end="341:80"><expr pos:start="341:66" pos:end="341:80"><name pos:start="341:66" pos:end="341:80"><name pos:start="341:66" pos:end="341:71">ppMode</name><operator pos:start="341:72" pos:end="341:73">-&gt;</operator><name pos:start="341:74" pos:end="341:80">lumMode</name></name></expr></argument>, <argument pos:start="341:83" pos:end="341:99"><expr pos:start="341:83" pos:end="341:99"><name pos:start="341:83" pos:end="341:99"><name pos:start="341:83" pos:end="341:88">ppMode</name><operator pos:start="341:89" pos:end="341:90">-&gt;</operator><name pos:start="341:91" pos:end="341:99">chromMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="343:5" pos:end="352:18"><if pos:start="343:5" pos:end="352:18">if<condition pos:start="343:7" pos:end="343:21">(<expr pos:start="343:8" pos:end="343:20"><name pos:start="343:8" pos:end="343:20"><name pos:start="343:8" pos:end="343:13">ppMode</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:20">error</name></name></expr>)</condition><block pos:start="343:22" pos:end="352:18">{<block_content pos:start="345:9" pos:end="352:18">

        <expr_stmt pos:start="345:9" pos:end="345:100"><expr pos:start="345:9" pos:end="345:99"><call pos:start="345:9" pos:end="345:99"><name pos:start="345:9" pos:end="345:14">av_log</name><argument_list pos:start="345:15" pos:end="345:99">(<argument pos:start="345:16" pos:end="345:19"><expr pos:start="345:16" pos:end="345:19"><name pos:start="345:16" pos:end="345:19">NULL</name></expr></argument>, <argument pos:start="345:22" pos:end="345:33"><expr pos:start="345:22" pos:end="345:33"><name pos:start="345:22" pos:end="345:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="345:36" pos:end="345:77"><expr pos:start="345:36" pos:end="345:77"><literal type="string" pos:start="345:36" pos:end="345:77">"%d errors in postprocess string \"%s\"\n"</literal></expr></argument>, <argument pos:start="345:80" pos:end="345:92"><expr pos:start="345:80" pos:end="345:92"><name pos:start="345:80" pos:end="345:92"><name pos:start="345:80" pos:end="345:85">ppMode</name><operator pos:start="345:86" pos:end="345:87">-&gt;</operator><name pos:start="345:88" pos:end="345:92">error</name></name></expr></argument>, <argument pos:start="345:95" pos:end="345:98"><expr pos:start="345:95" pos:end="345:98"><name pos:start="345:95" pos:end="345:98">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:24"><expr pos:start="347:9" pos:end="347:23"><call pos:start="347:9" pos:end="347:23"><name pos:start="347:9" pos:end="347:15">av_free</name><argument_list pos:start="347:16" pos:end="347:23">(<argument pos:start="347:17" pos:end="347:22"><expr pos:start="347:17" pos:end="347:22"><name pos:start="347:17" pos:end="347:22">ppMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="349:9" pos:end="349:20">return <expr pos:start="349:16" pos:end="349:19"><name pos:start="349:16" pos:end="349:19">NULL</name></expr>;</return>


    <return pos:start="352:5" pos:end="352:18">return <expr pos:start="352:12" pos:end="352:17"><name pos:start="352:12" pos:end="352:17">ppMode</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
