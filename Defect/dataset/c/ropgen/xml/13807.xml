<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13807.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">prom_set</name><parameter_list pos:start="1:21" pos:end="1:76">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:29">uint32_t</name><modifier pos:start="1:30" pos:end="1:30">*</modifier></type> <name pos:start="1:32" pos:end="1:39">prom_buf</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:50">index</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:70">string</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:75"><decl pos:start="1:73" pos:end="1:75"><type pos:start="1:73" pos:end="1:75"><modifier pos:start="1:73" pos:end="1:75">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">va_list</name></type> <name pos:start="5:13" pos:end="5:14">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:22">table_addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:33">(<expr pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:13">index</name> <operator pos:start="11:15" pos:end="11:16">&gt;=</operator> <name pos:start="11:18" pos:end="11:32">ENVP_NB_ENTRIES</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:14">string</name> <operator pos:start="17:16" pos:end="17:17">==</operator> <name pos:start="17:19" pos:end="17:22">NULL</name></expr>)</condition> <block pos:start="17:25" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:16">prom_buf</name><index pos:start="19:17" pos:end="19:23">[<expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:22">index</name></expr>]</index></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:77"><expr pos:start="27:5" pos:end="27:76"><name pos:start="27:5" pos:end="27:14">table_addr</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <sizeof pos:start="27:18" pos:end="27:32">sizeof<argument_list pos:start="27:24" pos:end="27:32">(<argument pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:31">int32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:34" pos:end="27:34">*</operator> <name pos:start="27:36" pos:end="27:50">ENVP_NB_ENTRIES</name> <operator pos:start="27:52" pos:end="27:52">+</operator> <name pos:start="27:54" pos:end="27:58">index</name> <operator pos:start="27:60" pos:end="27:60">*</operator> <name pos:start="27:62" pos:end="27:76">ENVP_ENTRY_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:12">prom_buf</name><index pos:start="29:13" pos:end="29:19">[<expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:18">index</name></expr>]</index></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:53"><name pos:start="29:23" pos:end="29:29">tswap32</name><argument_list pos:start="29:30" pos:end="29:53">(<argument pos:start="29:31" pos:end="29:52"><expr pos:start="29:31" pos:end="29:52"><name pos:start="29:31" pos:end="29:39">ENVP_ADDR</name> <operator pos:start="29:41" pos:end="29:41">+</operator> <name pos:start="29:43" pos:end="29:52">table_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><call pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:12">va_start</name><argument_list pos:start="33:13" pos:end="33:24">(<argument pos:start="33:14" pos:end="33:15"><expr pos:start="33:14" pos:end="33:15"><name pos:start="33:14" pos:end="33:15">ap</name></expr></argument>, <argument pos:start="33:18" pos:end="33:23"><expr pos:start="33:18" pos:end="33:23"><name pos:start="33:18" pos:end="33:23">string</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:74"><expr pos:start="35:5" pos:end="35:73"><call pos:start="35:5" pos:end="35:73"><name pos:start="35:5" pos:end="35:13">vsnprintf</name><argument_list pos:start="35:14" pos:end="35:73">(<argument pos:start="35:15" pos:end="35:43"><expr pos:start="35:15" pos:end="35:43"><operator pos:start="35:15" pos:end="35:15">(</operator><name pos:start="35:16" pos:end="35:19">char</name> <operator pos:start="35:21" pos:end="35:21">*</operator><operator pos:start="35:22" pos:end="35:22">)</operator><name pos:start="35:23" pos:end="35:30">prom_buf</name> <operator pos:start="35:32" pos:end="35:32">+</operator> <name pos:start="35:34" pos:end="35:43">table_addr</name></expr></argument>, <argument pos:start="35:46" pos:end="35:60"><expr pos:start="35:46" pos:end="35:60"><name pos:start="35:46" pos:end="35:60">ENVP_ENTRY_SIZE</name></expr></argument>, <argument pos:start="35:63" pos:end="35:68"><expr pos:start="35:63" pos:end="35:68"><name pos:start="35:63" pos:end="35:68">string</name></expr></argument>, <argument pos:start="35:71" pos:end="35:72"><expr pos:start="35:71" pos:end="35:72"><name pos:start="35:71" pos:end="35:72">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:15"><expr pos:start="37:5" pos:end="37:14"><call pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:10">va_end</name><argument_list pos:start="37:11" pos:end="37:14">(<argument pos:start="37:12" pos:end="37:13"><expr pos:start="37:12" pos:end="37:13"><name pos:start="37:12" pos:end="37:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
