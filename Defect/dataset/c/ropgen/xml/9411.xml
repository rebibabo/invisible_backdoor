<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9411.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">read_decoding_params</name><parameter_list pos:start="1:32" pos:end="3:52">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:48">MLPDecodeContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">m</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:66">GetBitContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">gbp</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:51"><decl pos:start="3:33" pos:end="3:51"><type pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:40">unsigned</name> <name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:51">substr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">SubStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:21">m</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">substream</name><index pos:start="7:33" pos:end="7:40">[<expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">substr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:19">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:55"><if pos:start="15:5" pos:end="19:55">if <condition pos:start="15:8" pos:end="15:49">(<expr pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:31">param_presence_flags</name></name> <operator pos:start="15:33" pos:end="15:33">&amp;</operator> <name pos:start="15:35" pos:end="15:48">PARAM_PRESENCE</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="19:55"><block_content pos:start="17:9" pos:end="19:55">

        <if_stmt pos:start="17:9" pos:end="19:55"><if pos:start="17:9" pos:end="19:55">if <condition pos:start="17:12" pos:end="17:27">(<expr pos:start="17:13" pos:end="17:26"><call pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:21">get_bits1</name><argument_list pos:start="17:22" pos:end="17:26">(<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:55"><block_content pos:start="19:13" pos:end="19:55">

            <expr_stmt pos:start="19:13" pos:end="19:55"><expr pos:start="19:13" pos:end="19:54"><name pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:35">param_presence_flags</name></name> <operator pos:start="19:37" pos:end="19:37">=</operator> <call pos:start="19:39" pos:end="19:54"><name pos:start="19:39" pos:end="19:46">get_bits</name><argument_list pos:start="19:47" pos:end="19:54">(<argument pos:start="19:48" pos:end="19:50"><expr pos:start="19:48" pos:end="19:50"><name pos:start="19:48" pos:end="19:50">gbp</name></expr></argument>, <argument pos:start="19:53" pos:end="19:53"><expr pos:start="19:53" pos:end="19:53"><literal type="number" pos:start="19:53" pos:end="19:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="39:9"><if pos:start="23:5" pos:end="39:9">if <condition pos:start="23:8" pos:end="23:50">(<expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:31">param_presence_flags</name></name> <operator pos:start="23:33" pos:end="23:33">&amp;</operator> <name pos:start="23:35" pos:end="23:49">PARAM_BLOCKSIZE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="39:9"><block_content pos:start="25:9" pos:end="39:9">

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="39:9">if <condition pos:start="25:12" pos:end="25:27">(<expr pos:start="25:13" pos:end="25:26"><call pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:21">get_bits1</name><argument_list pos:start="25:22" pos:end="25:26">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:29" pos:end="39:9">{<block_content pos:start="27:13" pos:end="37:13">

            <expr_stmt pos:start="27:13" pos:end="27:44"><expr pos:start="27:13" pos:end="27:43"><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:24">blocksize</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <call pos:start="27:28" pos:end="27:43"><name pos:start="27:28" pos:end="27:35">get_bits</name><argument_list pos:start="27:36" pos:end="27:43">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">gbp</name></expr></argument>, <argument pos:start="27:42" pos:end="27:42"><expr pos:start="27:42" pos:end="27:42"><literal type="number" pos:start="27:42" pos:end="27:42">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="37:13"><if pos:start="29:13" pos:end="37:13">if <condition pos:start="29:16" pos:end="29:71">(<expr pos:start="29:17" pos:end="29:70"><name pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:28">blocksize</name></name> <operator pos:start="29:30" pos:end="29:30">&lt;</operator> <literal type="number" pos:start="29:32" pos:end="29:32">8</literal> <operator pos:start="29:34" pos:end="29:35">||</operator> <name pos:start="29:37" pos:end="29:48"><name pos:start="29:37" pos:end="29:37">s</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:48">blocksize</name></name> <operator pos:start="29:50" pos:end="29:50">&gt;</operator> <name pos:start="29:52" pos:end="29:70"><name pos:start="29:52" pos:end="29:52">m</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:70">access_unit_size</name></name></expr>)</condition> <block pos:start="29:73" pos:end="37:13">{<block_content pos:start="31:17" pos:end="35:43">

                <expr_stmt pos:start="31:17" pos:end="31:71"><expr pos:start="31:17" pos:end="31:70"><call pos:start="31:17" pos:end="31:70"><name pos:start="31:17" pos:end="31:22">av_log</name><argument_list pos:start="31:23" pos:end="31:70">(<argument pos:start="31:24" pos:end="31:31"><expr pos:start="31:24" pos:end="31:31"><name pos:start="31:24" pos:end="31:31"><name pos:start="31:24" pos:end="31:24">m</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:31">avctx</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:45"><expr pos:start="31:34" pos:end="31:45"><name pos:start="31:34" pos:end="31:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:48" pos:end="31:69"><expr pos:start="31:48" pos:end="31:69"><literal type="string" pos:start="31:48" pos:end="31:69">"Invalid blocksize.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:33"><expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:28">blocksize</name></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <literal type="number" pos:start="33:32" pos:end="33:32">0</literal></expr>;</expr_stmt>

                <return pos:start="35:17" pos:end="35:43">return <expr pos:start="35:24" pos:end="35:42"><name pos:start="35:24" pos:end="35:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:27"><if pos:start="43:5" pos:end="49:27">if <condition pos:start="43:8" pos:end="43:47">(<expr pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:31">param_presence_flags</name></name> <operator pos:start="43:33" pos:end="43:33">&amp;</operator> <name pos:start="43:35" pos:end="43:46">PARAM_MATRIX</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="49:27"><block_content pos:start="45:9" pos:end="49:27">

        <if_stmt pos:start="45:9" pos:end="49:27"><if pos:start="45:9" pos:end="49:27">if <condition pos:start="45:12" pos:end="45:27">(<expr pos:start="45:13" pos:end="45:26"><call pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:21">get_bits1</name><argument_list pos:start="45:22" pos:end="45:26">(<argument pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="49:27"><block_content pos:start="47:13" pos:end="49:27">

            <if_stmt pos:start="47:13" pos:end="49:27"><if pos:start="47:13" pos:end="49:27">if <condition pos:start="47:16" pos:end="47:63">(<expr pos:start="47:17" pos:end="47:62"><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:20">ret</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:57"><name pos:start="47:24" pos:end="47:41">read_matrix_params</name><argument_list pos:start="47:42" pos:end="47:57">(<argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><name pos:start="47:43" pos:end="47:43">m</name></expr></argument>, <argument pos:start="47:46" pos:end="47:51"><expr pos:start="47:46" pos:end="47:51"><name pos:start="47:46" pos:end="47:51">substr</name></expr></argument>, <argument pos:start="47:54" pos:end="47:56"><expr pos:start="47:54" pos:end="47:56"><name pos:start="47:54" pos:end="47:56">gbp</name></expr></argument>)</argument_list></call><operator pos:start="47:58" pos:end="47:58">)</operator> <operator pos:start="47:60" pos:end="47:60">&lt;</operator> <literal type="number" pos:start="47:62" pos:end="47:62">0</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:27"><block_content pos:start="49:17" pos:end="49:27">

                <return pos:start="49:17" pos:end="49:27">return <expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="81:9"><if pos:start="53:5" pos:end="81:9">if <condition pos:start="53:8" pos:end="53:49">(<expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:31">param_presence_flags</name></name> <operator pos:start="53:33" pos:end="53:33">&amp;</operator> <name pos:start="53:35" pos:end="53:48">PARAM_OUTSHIFT</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="81:9"><block_content pos:start="55:9" pos:end="81:9">

        <if_stmt pos:start="55:9" pos:end="81:9"><if pos:start="55:9" pos:end="81:9">if <condition pos:start="55:12" pos:end="55:27">(<expr pos:start="55:13" pos:end="55:26"><call pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:21">get_bits1</name><argument_list pos:start="55:22" pos:end="55:26">(<argument pos:start="55:23" pos:end="55:25"><expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:29" pos:end="81:9">{<block_content pos:start="57:13" pos:end="79:114">

            <for pos:start="57:13" pos:end="69:13">for <control pos:start="57:17" pos:end="57:59">(<init pos:start="57:18" pos:end="57:24"><expr pos:start="57:18" pos:end="57:23"><name pos:start="57:18" pos:end="57:19">ch</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr>;</init> <condition pos:start="57:26" pos:end="57:53"><expr pos:start="57:26" pos:end="57:52"><name pos:start="57:26" pos:end="57:27">ch</name> <operator pos:start="57:29" pos:end="57:30">&lt;=</operator> <name pos:start="57:32" pos:end="57:52"><name pos:start="57:32" pos:end="57:32">s</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:52">max_matrix_channel</name></name></expr>;</condition> <incr pos:start="57:55" pos:end="57:58"><expr pos:start="57:55" pos:end="57:58"><name pos:start="57:55" pos:end="57:56">ch</name><operator pos:start="57:57" pos:end="57:58">++</operator></expr></incr>)</control> <block pos:start="57:61" pos:end="69:13">{<block_content pos:start="59:17" pos:end="67:17">

                <expr_stmt pos:start="59:17" pos:end="59:56"><expr pos:start="59:17" pos:end="59:55"><name pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:31">output_shift</name><index pos:start="59:32" pos:end="59:35">[<expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">ch</name></expr>]</index></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <call pos:start="59:39" pos:end="59:55"><name pos:start="59:39" pos:end="59:47">get_sbits</name><argument_list pos:start="59:48" pos:end="59:55">(<argument pos:start="59:49" pos:end="59:51"><expr pos:start="59:49" pos:end="59:51"><name pos:start="59:49" pos:end="59:51">gbp</name></expr></argument>, <argument pos:start="59:54" pos:end="59:54"><expr pos:start="59:54" pos:end="59:54"><literal type="number" pos:start="59:54" pos:end="59:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="61:17" pos:end="67:17"><if pos:start="61:17" pos:end="67:17">if <condition pos:start="61:20" pos:end="61:44">(<expr pos:start="61:21" pos:end="61:43"><name pos:start="61:21" pos:end="61:39"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:35">output_shift</name><index pos:start="61:36" pos:end="61:39">[<expr pos:start="61:37" pos:end="61:38"><name pos:start="61:37" pos:end="61:38">ch</name></expr>]</index></name> <operator pos:start="61:41" pos:end="61:41">&lt;</operator> <literal type="number" pos:start="61:43" pos:end="61:43">0</literal></expr>)</condition> <block pos:start="61:46" pos:end="67:17">{<block_content pos:start="63:21" pos:end="65:44">

                    <expr_stmt pos:start="63:21" pos:end="63:77"><expr pos:start="63:21" pos:end="63:76"><call pos:start="63:21" pos:end="63:76"><name pos:start="63:21" pos:end="63:41">avpriv_request_sample</name><argument_list pos:start="63:42" pos:end="63:76">(<argument pos:start="63:43" pos:end="63:50"><expr pos:start="63:43" pos:end="63:50"><name pos:start="63:43" pos:end="63:50"><name pos:start="63:43" pos:end="63:43">m</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:50">avctx</name></name></expr></argument>, <argument pos:start="63:53" pos:end="63:75"><expr pos:start="63:53" pos:end="63:75"><literal type="string" pos:start="63:53" pos:end="63:75">"Negative output_shift"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:44"><expr pos:start="65:21" pos:end="65:43"><name pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:35">output_shift</name><index pos:start="65:36" pos:end="65:39">[<expr pos:start="65:37" pos:end="65:38"><name pos:start="65:37" pos:end="65:38">ch</name></expr>]</index></name> <operator pos:start="65:41" pos:end="65:41">=</operator> <literal type="number" pos:start="65:43" pos:end="65:43">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="71:13" pos:end="79:114"><if pos:start="71:13" pos:end="79:114">if <condition pos:start="71:16" pos:end="71:51">(<expr pos:start="71:17" pos:end="71:50"><name pos:start="71:17" pos:end="71:22">substr</name> <operator pos:start="71:24" pos:end="71:25">==</operator> <name pos:start="71:27" pos:end="71:50"><name pos:start="71:27" pos:end="71:27">m</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:50">max_decoded_substream</name></name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="79:114"><block_content pos:start="73:17" pos:end="79:114">

                <expr_stmt pos:start="73:17" pos:end="79:114"><expr pos:start="73:17" pos:end="79:113"><name pos:start="73:17" pos:end="73:38"><name pos:start="73:17" pos:end="73:17">m</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:22">dsp</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:38">mlp_pack_output</name></name> <operator pos:start="73:40" pos:end="73:40">=</operator> <call pos:start="73:42" pos:end="79:113"><name pos:start="73:42" pos:end="73:70"><name pos:start="73:42" pos:end="73:42">m</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:47">dsp</name><operator pos:start="73:48" pos:end="73:48">.</operator><name pos:start="73:49" pos:end="73:70">mlp_select_pack_output</name></name><argument_list pos:start="73:71" pos:end="79:113">(<argument pos:start="73:72" pos:end="73:83"><expr pos:start="73:72" pos:end="73:83"><name pos:start="73:72" pos:end="73:83"><name pos:start="73:72" pos:end="73:72">s</name><operator pos:start="73:73" pos:end="73:74">-&gt;</operator><name pos:start="73:75" pos:end="73:83">ch_assign</name></name></expr></argument>,

                                                                       <argument pos:start="75:72" pos:end="75:86"><expr pos:start="75:72" pos:end="75:86"><name pos:start="75:72" pos:end="75:86"><name pos:start="75:72" pos:end="75:72">s</name><operator pos:start="75:73" pos:end="75:74">-&gt;</operator><name pos:start="75:75" pos:end="75:86">output_shift</name></name></expr></argument>,

                                                                       <argument pos:start="77:72" pos:end="77:92"><expr pos:start="77:72" pos:end="77:92"><name pos:start="77:72" pos:end="77:92"><name pos:start="77:72" pos:end="77:72">s</name><operator pos:start="77:73" pos:end="77:74">-&gt;</operator><name pos:start="77:75" pos:end="77:92">max_matrix_channel</name></name></expr></argument>,

                                                                       <argument pos:start="79:72" pos:end="79:112"><expr pos:start="79:72" pos:end="79:112"><name pos:start="79:72" pos:end="79:91"><name pos:start="79:72" pos:end="79:72">m</name><operator pos:start="79:73" pos:end="79:74">-&gt;</operator><name pos:start="79:75" pos:end="79:79">avctx</name><operator pos:start="79:80" pos:end="79:81">-&gt;</operator><name pos:start="79:82" pos:end="79:91">sample_fmt</name></name> <operator pos:start="79:93" pos:end="79:94">==</operator> <name pos:start="79:96" pos:end="79:112">AV_SAMPLE_FMT_S32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="101:13"><if pos:start="85:5" pos:end="101:13">if <condition pos:start="85:8" pos:end="85:50">(<expr pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:31">param_presence_flags</name></name> <operator pos:start="85:33" pos:end="85:33">&amp;</operator> <name pos:start="85:35" pos:end="85:49">PARAM_QUANTSTEP</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="101:13"><block_content pos:start="87:9" pos:end="101:13">

        <if_stmt pos:start="87:9" pos:end="101:13"><if pos:start="87:9" pos:end="101:13">if <condition pos:start="87:12" pos:end="87:27">(<expr pos:start="87:13" pos:end="87:26"><call pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:21">get_bits1</name><argument_list pos:start="87:22" pos:end="87:26">(<argument pos:start="87:23" pos:end="87:25"><expr pos:start="87:23" pos:end="87:25"><name pos:start="87:23" pos:end="87:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="101:13"><block_content pos:start="89:13" pos:end="101:13">

            <for pos:start="89:13" pos:end="101:13">for <control pos:start="89:17" pos:end="89:52">(<init pos:start="89:18" pos:end="89:24"><expr pos:start="89:18" pos:end="89:23"><name pos:start="89:18" pos:end="89:19">ch</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <literal type="number" pos:start="89:23" pos:end="89:23">0</literal></expr>;</init> <condition pos:start="89:26" pos:end="89:46"><expr pos:start="89:26" pos:end="89:45"><name pos:start="89:26" pos:end="89:27">ch</name> <operator pos:start="89:29" pos:end="89:30">&lt;=</operator> <name pos:start="89:32" pos:end="89:45"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:45">max_channel</name></name></expr>;</condition> <incr pos:start="89:48" pos:end="89:51"><expr pos:start="89:48" pos:end="89:51"><name pos:start="89:48" pos:end="89:49">ch</name><operator pos:start="89:50" pos:end="89:51">++</operator></expr></incr>)</control> <block pos:start="89:54" pos:end="101:13">{<block_content pos:start="91:17" pos:end="99:74">

                <decl_stmt pos:start="91:17" pos:end="91:59"><decl pos:start="91:17" pos:end="91:58"><type pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:29">ChannelParams</name> <modifier pos:start="91:31" pos:end="91:31">*</modifier></type><name pos:start="91:32" pos:end="91:33">cp</name> <init pos:start="91:35" pos:end="91:58">= <expr pos:start="91:37" pos:end="91:58"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:58"><name pos:start="91:38" pos:end="91:38">s</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:54">channel_params</name><index pos:start="91:55" pos:end="91:58">[<expr pos:start="91:56" pos:end="91:57"><name pos:start="91:56" pos:end="91:57">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="95:17" pos:end="95:58"><expr pos:start="95:17" pos:end="95:57"><name pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:34">quant_step_size</name><index pos:start="95:35" pos:end="95:38">[<expr pos:start="95:36" pos:end="95:37"><name pos:start="95:36" pos:end="95:37">ch</name></expr>]</index></name> <operator pos:start="95:40" pos:end="95:40">=</operator> <call pos:start="95:42" pos:end="95:57"><name pos:start="95:42" pos:end="95:49">get_bits</name><argument_list pos:start="95:50" pos:end="95:57">(<argument pos:start="95:51" pos:end="95:53"><expr pos:start="95:51" pos:end="95:53"><name pos:start="95:51" pos:end="95:53">gbp</name></expr></argument>, <argument pos:start="95:56" pos:end="95:56"><expr pos:start="95:56" pos:end="95:56"><literal type="number" pos:start="95:56" pos:end="95:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="99:17" pos:end="99:74"><expr pos:start="99:17" pos:end="99:73"><name pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:18">cp</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:36">sign_huff_offset</name></name> <operator pos:start="99:38" pos:end="99:38">=</operator> <call pos:start="99:40" pos:end="99:73"><name pos:start="99:40" pos:end="99:58">calculate_sign_huff</name><argument_list pos:start="99:59" pos:end="99:73">(<argument pos:start="99:60" pos:end="99:60"><expr pos:start="99:60" pos:end="99:60"><name pos:start="99:60" pos:end="99:60">m</name></expr></argument>, <argument pos:start="99:63" pos:end="99:68"><expr pos:start="99:63" pos:end="99:68"><name pos:start="99:63" pos:end="99:68">substr</name></expr></argument>, <argument pos:start="99:71" pos:end="99:72"><expr pos:start="99:71" pos:end="99:72"><name pos:start="99:71" pos:end="99:72">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <for pos:start="105:5" pos:end="111:27">for <control pos:start="105:9" pos:end="105:57">(<init pos:start="105:10" pos:end="105:29"><expr pos:start="105:10" pos:end="105:28"><name pos:start="105:10" pos:end="105:11">ch</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <name pos:start="105:15" pos:end="105:28"><name pos:start="105:15" pos:end="105:15">s</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:28">min_channel</name></name></expr>;</init> <condition pos:start="105:31" pos:end="105:51"><expr pos:start="105:31" pos:end="105:50"><name pos:start="105:31" pos:end="105:32">ch</name> <operator pos:start="105:34" pos:end="105:35">&lt;=</operator> <name pos:start="105:37" pos:end="105:50"><name pos:start="105:37" pos:end="105:37">s</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:50">max_channel</name></name></expr>;</condition> <incr pos:start="105:53" pos:end="105:56"><expr pos:start="105:53" pos:end="105:56"><name pos:start="105:53" pos:end="105:54">ch</name><operator pos:start="105:55" pos:end="105:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:9" pos:end="111:27"><block_content pos:start="107:9" pos:end="111:27">

        <if_stmt pos:start="107:9" pos:end="111:27"><if pos:start="107:9" pos:end="111:27">if <condition pos:start="107:12" pos:end="107:27">(<expr pos:start="107:13" pos:end="107:26"><call pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:21">get_bits1</name><argument_list pos:start="107:22" pos:end="107:26">(<argument pos:start="107:23" pos:end="107:25"><expr pos:start="107:23" pos:end="107:25"><name pos:start="107:23" pos:end="107:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="111:27"><block_content pos:start="109:13" pos:end="111:27">

            <if_stmt pos:start="109:13" pos:end="111:27"><if pos:start="109:13" pos:end="111:27">if <condition pos:start="109:16" pos:end="109:68">(<expr pos:start="109:17" pos:end="109:67"><operator pos:start="109:17" pos:end="109:17">(</operator><name pos:start="109:18" pos:end="109:20">ret</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <call pos:start="109:24" pos:end="109:62"><name pos:start="109:24" pos:end="109:42">read_channel_params</name><argument_list pos:start="109:43" pos:end="109:62">(<argument pos:start="109:44" pos:end="109:44"><expr pos:start="109:44" pos:end="109:44"><name pos:start="109:44" pos:end="109:44">m</name></expr></argument>, <argument pos:start="109:47" pos:end="109:52"><expr pos:start="109:47" pos:end="109:52"><name pos:start="109:47" pos:end="109:52">substr</name></expr></argument>, <argument pos:start="109:55" pos:end="109:57"><expr pos:start="109:55" pos:end="109:57"><name pos:start="109:55" pos:end="109:57">gbp</name></expr></argument>, <argument pos:start="109:60" pos:end="109:61"><expr pos:start="109:60" pos:end="109:61"><name pos:start="109:60" pos:end="109:61">ch</name></expr></argument>)</argument_list></call><operator pos:start="109:63" pos:end="109:63">)</operator> <operator pos:start="109:65" pos:end="109:65">&lt;</operator> <literal type="number" pos:start="109:67" pos:end="109:67">0</literal></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:27"><block_content pos:start="111:17" pos:end="111:27">

                <return pos:start="111:17" pos:end="111:27">return <expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
