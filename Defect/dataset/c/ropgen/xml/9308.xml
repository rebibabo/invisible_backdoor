<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9308.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">match_format</name><parameter_list pos:start="1:24" pos:end="1:60">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">name</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:59"><decl pos:start="1:43" pos:end="1:59"><type pos:start="1:43" pos:end="1:59"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">names</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:39">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:20">namelen</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">name</name> <operator pos:start="11:15" pos:end="11:16">||</operator> <operator pos:start="11:18" pos:end="11:18">!</operator><name pos:start="11:19" pos:end="11:23">names</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:11">namelen</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:26"><name pos:start="17:15" pos:end="17:20">strlen</name><argument_list pos:start="17:21" pos:end="17:26">(<argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="29:5">while <condition pos:start="19:11" pos:end="19:36">(<expr pos:start="19:12" pos:end="19:35"><operator pos:start="19:12" pos:end="19:12">(</operator><name pos:start="19:13" pos:end="19:13">p</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:34"><name pos:start="19:17" pos:end="19:22">strchr</name><argument_list pos:start="19:23" pos:end="19:34">(<argument pos:start="19:24" pos:end="19:28"><expr pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:28">names</name></expr></argument>, <argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><literal type="char" pos:start="19:31" pos:end="19:33">','</literal></expr></argument>)</argument_list></call><operator pos:start="19:35" pos:end="19:35">)</operator></expr>)</condition> <block pos:start="19:38" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:22">

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:39"><name pos:start="21:15" pos:end="21:19">FFMAX</name><argument_list pos:start="21:20" pos:end="21:39">(<argument pos:start="21:21" pos:end="21:29"><expr pos:start="21:21" pos:end="21:29"><name pos:start="21:21" pos:end="21:21">p</name> <operator pos:start="21:23" pos:end="21:23">-</operator> <name pos:start="21:25" pos:end="21:29">names</name></expr></argument>, <argument pos:start="21:32" pos:end="21:38"><expr pos:start="21:32" pos:end="21:38"><name pos:start="21:32" pos:end="21:38">namelen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:46">(<expr pos:start="23:13" pos:end="23:45"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:45"><name pos:start="23:14" pos:end="23:27">av_strncasecmp</name><argument_list pos:start="23:28" pos:end="23:45">(<argument pos:start="23:29" pos:end="23:32"><expr pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:32">name</name></expr></argument>, <argument pos:start="23:35" pos:end="23:39"><expr pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:39">names</name></expr></argument>, <argument pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><name pos:start="23:42" pos:end="23:44">len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:13">names</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:17">p</name> <operator pos:start="27:19" pos:end="27:19">+</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="31:5" pos:end="31:39">return <expr pos:start="31:12" pos:end="31:38"><operator pos:start="31:12" pos:end="31:12">!</operator><call pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:25">av_strcasecmp</name><argument_list pos:start="31:26" pos:end="31:38">(<argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">name</name></expr></argument>, <argument pos:start="31:33" pos:end="31:37"><expr pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:37">names</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
