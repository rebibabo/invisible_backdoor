<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14878.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">qemu_gluster_parse_uri</name><parameter_list pos:start="1:34" pos:end="3:55">(<parameter pos:start="1:35" pos:end="1:63"><decl pos:start="1:35" pos:end="1:63"><type pos:start="1:35" pos:end="1:63"><name pos:start="1:35" pos:end="1:56">BlockdevOptionsGluster</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">gconf</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:54"><decl pos:start="3:35" pos:end="3:54"><type pos:start="3:35" pos:end="3:54"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:44">char</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:54">filename</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:15">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SocketAddress</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">gsconf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">URI</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:12">uri</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">QueryParams</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">qp</name> <init pos:start="11:21" pos:end="11:26">= <expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:16">is_unix</name> <init pos:start="13:18" pos:end="13:24">= <expr pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:24">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:7">uri</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:29"><name pos:start="19:11" pos:end="19:19">uri_parse</name><argument_list pos:start="19:20" pos:end="19:29">(<argument pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:28"><name pos:start="19:21" pos:end="19:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:12">uri</name></expr>)</condition> <block pos:start="21:15" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:23">

        <return pos:start="23:9" pos:end="23:23">return <expr pos:start="23:16" pos:end="23:22"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:9">gconf</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">server</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:48"><name pos:start="29:21" pos:end="29:26">g_new0</name><argument_list pos:start="29:27" pos:end="29:48">(<argument pos:start="29:28" pos:end="29:44"><expr pos:start="29:28" pos:end="29:44"><name pos:start="29:28" pos:end="29:44">SocketAddressList</name></expr></argument>, <argument pos:start="29:47" pos:end="29:47"><expr pos:start="29:47" pos:end="29:47"><literal type="number" pos:start="29:47" pos:end="29:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:9">gconf</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">server</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:24">value</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:33">gsconf</name> <operator pos:start="31:35" pos:end="31:35">=</operator> <call pos:start="31:37" pos:end="31:60"><name pos:start="31:37" pos:end="31:42">g_new0</name><argument_list pos:start="31:43" pos:end="31:60">(<argument pos:start="31:44" pos:end="31:56"><expr pos:start="31:44" pos:end="31:56"><name pos:start="31:44" pos:end="31:56">SocketAddress</name></expr></argument>, <argument pos:start="31:59" pos:end="31:59"><expr pos:start="31:59" pos:end="31:59"><literal type="number" pos:start="31:59" pos:end="31:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:19">/* transport */</comment>

    <if_stmt pos:start="37:5" pos:end="65:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:56">(<expr pos:start="37:9" pos:end="37:55"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:20"><name pos:start="37:10" pos:end="37:12">uri</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:20">scheme</name></name> <operator pos:start="37:22" pos:end="37:23">||</operator> <operator pos:start="37:25" pos:end="37:25">!</operator><call pos:start="37:26" pos:end="37:55"><name pos:start="37:26" pos:end="37:31">strcmp</name><argument_list pos:start="37:32" pos:end="37:55">(<argument pos:start="37:33" pos:end="37:43"><expr pos:start="37:33" pos:end="37:43"><name pos:start="37:33" pos:end="37:43"><name pos:start="37:33" pos:end="37:35">uri</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:43">scheme</name></name></expr></argument>, <argument pos:start="37:46" pos:end="37:54"><expr pos:start="37:46" pos:end="37:54"><literal type="string" pos:start="37:46" pos:end="37:54">"gluster"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:58" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:48">

        <expr_stmt pos:start="39:9" pos:end="39:48"><expr pos:start="39:9" pos:end="39:47"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:14">gsconf</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">type</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:47">SOCKET_ADDRESS_TYPE_INET</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="45:5">else if <condition pos:start="41:15" pos:end="41:51">(<expr pos:start="41:16" pos:end="41:50"><operator pos:start="41:16" pos:end="41:16">!</operator><call pos:start="41:17" pos:end="41:50"><name pos:start="41:17" pos:end="41:22">strcmp</name><argument_list pos:start="41:23" pos:end="41:50">(<argument pos:start="41:24" pos:end="41:34"><expr pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:26">uri</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:34">scheme</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:49"><expr pos:start="41:37" pos:end="41:49"><literal type="string" pos:start="41:37" pos:end="41:49">"gluster+tcp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:53" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:48">

        <expr_stmt pos:start="43:9" pos:end="43:48"><expr pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:14">gsconf</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">type</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:47">SOCKET_ADDRESS_TYPE_INET</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="51:5">else if <condition pos:start="45:15" pos:end="45:52">(<expr pos:start="45:16" pos:end="45:51"><operator pos:start="45:16" pos:end="45:16">!</operator><call pos:start="45:17" pos:end="45:51"><name pos:start="45:17" pos:end="45:22">strcmp</name><argument_list pos:start="45:23" pos:end="45:51">(<argument pos:start="45:24" pos:end="45:34"><expr pos:start="45:24" pos:end="45:34"><name pos:start="45:24" pos:end="45:34"><name pos:start="45:24" pos:end="45:26">uri</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:34">scheme</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:50"><expr pos:start="45:37" pos:end="45:50"><literal type="string" pos:start="45:37" pos:end="45:50">"gluster+unix"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:54" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:23">

        <expr_stmt pos:start="47:9" pos:end="47:48"><expr pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:14">gsconf</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">type</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:47">SOCKET_ADDRESS_TYPE_UNIX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:15">is_unix</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:22">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="59:5">else if <condition pos:start="51:15" pos:end="51:52">(<expr pos:start="51:16" pos:end="51:51"><operator pos:start="51:16" pos:end="51:16">!</operator><call pos:start="51:17" pos:end="51:51"><name pos:start="51:17" pos:end="51:22">strcmp</name><argument_list pos:start="51:23" pos:end="51:51">(<argument pos:start="51:24" pos:end="51:34"><expr pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:26">uri</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:34">scheme</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:50"><expr pos:start="51:37" pos:end="51:50"><literal type="string" pos:start="51:37" pos:end="51:50">"gluster+rdma"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:54" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:36">

        <expr_stmt pos:start="53:9" pos:end="53:48"><expr pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:14">gsconf</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:20">type</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:47">SOCKET_ADDRESS_TYPE_INET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:36"><expr pos:start="55:9" pos:end="57:35"><call pos:start="55:9" pos:end="57:35"><name pos:start="55:9" pos:end="55:20">error_report</name><argument_list pos:start="55:21" pos:end="57:35">(<argument pos:start="55:22" pos:end="57:34"><expr pos:start="55:22" pos:end="57:34"><literal type="string" pos:start="55:22" pos:end="55:71">"Warning: rdma feature is not supported, falling "</literal>

                     <literal type="string" pos:start="57:22" pos:end="57:34">"back to tcp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="65:5">else <block pos:start="59:12" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:17">

        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <operator pos:start="61:15" pos:end="61:15">-</operator><name pos:start="61:16" pos:end="61:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">out</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:7">ret</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:48"><name pos:start="69:11" pos:end="69:30">parse_volume_options</name><argument_list pos:start="69:31" pos:end="69:48">(<argument pos:start="69:32" pos:end="69:36"><expr pos:start="69:32" pos:end="69:36"><name pos:start="69:32" pos:end="69:36">gconf</name></expr></argument>, <argument pos:start="69:39" pos:end="69:47"><expr pos:start="69:39" pos:end="69:47"><name pos:start="69:39" pos:end="69:47"><name pos:start="69:39" pos:end="69:41">uri</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:47">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:16">(<expr pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">&lt;</operator> <literal type="number" pos:start="71:15" pos:end="71:15">0</literal></expr>)</condition> <block pos:start="71:18" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:17">

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:6">qp</name> <operator pos:start="79:8" pos:end="79:8">=</operator> <call pos:start="79:10" pos:end="79:39"><name pos:start="79:10" pos:end="79:27">query_params_parse</name><argument_list pos:start="79:28" pos:end="79:39">(<argument pos:start="79:29" pos:end="79:38"><expr pos:start="79:29" pos:end="79:38"><name pos:start="79:29" pos:end="79:38"><name pos:start="79:29" pos:end="79:31">uri</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:38">query</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:64">(<expr pos:start="81:9" pos:end="81:63"><name pos:start="81:9" pos:end="81:13"><name pos:start="81:9" pos:end="81:10">qp</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:13">n</name></name> <operator pos:start="81:15" pos:end="81:15">&gt;</operator> <literal type="number" pos:start="81:17" pos:end="81:17">1</literal> <operator pos:start="81:19" pos:end="81:20">||</operator> <operator pos:start="81:22" pos:end="81:22">(</operator><name pos:start="81:23" pos:end="81:29">is_unix</name> <operator pos:start="81:31" pos:end="81:32">&amp;&amp;</operator> <operator pos:start="81:34" pos:end="81:34">!</operator><name pos:start="81:35" pos:end="81:39"><name pos:start="81:35" pos:end="81:36">qp</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:39">n</name></name><operator pos:start="81:40" pos:end="81:40">)</operator> <operator pos:start="81:42" pos:end="81:43">||</operator> <operator pos:start="81:45" pos:end="81:45">(</operator><operator pos:start="81:46" pos:end="81:46">!</operator><name pos:start="81:47" pos:end="81:53">is_unix</name> <operator pos:start="81:55" pos:end="81:56">&amp;&amp;</operator> <name pos:start="81:58" pos:end="81:62"><name pos:start="81:58" pos:end="81:59">qp</name><operator pos:start="81:60" pos:end="81:61">-&gt;</operator><name pos:start="81:62" pos:end="81:62">n</name></name><operator pos:start="81:63" pos:end="81:63">)</operator></expr>)</condition> <block pos:start="81:66" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:17">

        <expr_stmt pos:start="83:9" pos:end="83:22"><expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <operator pos:start="83:15" pos:end="83:15">-</operator><name pos:start="83:16" pos:end="83:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:17">goto <name pos:start="85:14" pos:end="85:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="125:5"><if pos:start="91:5" pos:end="111:5">if <condition pos:start="91:8" pos:end="91:16">(<expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:15">is_unix</name></expr>)</condition> <block pos:start="91:18" pos:end="111:5">{<block_content pos:start="93:9" pos:end="109:57">

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:37">(<expr pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:15">uri</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:23">server</name></name> <operator pos:start="93:25" pos:end="93:26">||</operator> <name pos:start="93:28" pos:end="93:36"><name pos:start="93:28" pos:end="93:30">uri</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:36">port</name></name></expr>)</condition> <block pos:start="93:39" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:21">

            <expr_stmt pos:start="95:13" pos:end="95:26"><expr pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <operator pos:start="95:19" pos:end="95:19">-</operator><name pos:start="95:20" pos:end="95:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="97:13" pos:end="97:21">goto <name pos:start="97:18" pos:end="97:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:44">(<expr pos:start="101:13" pos:end="101:43"><call pos:start="101:13" pos:end="101:43"><name pos:start="101:13" pos:end="101:18">strcmp</name><argument_list pos:start="101:19" pos:end="101:43">(<argument pos:start="101:20" pos:end="101:32"><expr pos:start="101:20" pos:end="101:32"><name pos:start="101:20" pos:end="101:27"><name pos:start="101:20" pos:end="101:21">qp</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:24">p</name><index pos:start="101:25" pos:end="101:27">[<expr pos:start="101:26" pos:end="101:26"><literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>]</index></name><operator pos:start="101:28" pos:end="101:28">.</operator><name pos:start="101:29" pos:end="101:32">name</name></expr></argument>, <argument pos:start="101:35" pos:end="101:42"><expr pos:start="101:35" pos:end="101:42"><literal type="string" pos:start="101:35" pos:end="101:42">"socket"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:46" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:21">

            <expr_stmt pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <operator pos:start="103:19" pos:end="103:19">-</operator><name pos:start="103:20" pos:end="103:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="105:13" pos:end="105:21">goto <name pos:start="105:18" pos:end="105:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:57"><expr pos:start="109:9" pos:end="109:56"><name pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:14">gsconf</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:17">u</name><operator pos:start="109:18" pos:end="109:18">.</operator><name pos:start="109:19" pos:end="109:24">q_unix</name><operator pos:start="109:25" pos:end="109:25">.</operator><name pos:start="109:26" pos:end="109:29">path</name></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <call pos:start="109:33" pos:end="109:56"><name pos:start="109:33" pos:end="109:40">g_strdup</name><argument_list pos:start="109:41" pos:end="109:56">(<argument pos:start="109:42" pos:end="109:55"><expr pos:start="109:42" pos:end="109:55"><name pos:start="109:42" pos:end="109:49"><name pos:start="109:42" pos:end="109:43">qp</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:46">p</name><index pos:start="109:47" pos:end="109:49">[<expr pos:start="109:48" pos:end="109:48"><literal type="number" pos:start="109:48" pos:end="109:48">0</literal></expr>]</index></name><operator pos:start="109:50" pos:end="109:50">.</operator><name pos:start="109:51" pos:end="109:55">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="125:5">else <block pos:start="111:12" pos:end="125:5">{<block_content pos:start="113:9" pos:end="123:9">

        <expr_stmt pos:start="113:9" pos:end="113:80"><expr pos:start="113:9" pos:end="113:79"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:14">gsconf</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:17">u</name><operator pos:start="113:18" pos:end="113:18">.</operator><name pos:start="113:19" pos:end="113:22">inet</name><operator pos:start="113:23" pos:end="113:23">.</operator><name pos:start="113:24" pos:end="113:27">host</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <call pos:start="113:31" pos:end="113:79"><name pos:start="113:31" pos:end="113:38">g_strdup</name><argument_list pos:start="113:39" pos:end="113:79">(<argument pos:start="113:40" pos:end="113:78"><expr pos:start="113:40" pos:end="113:78"><ternary pos:start="113:40" pos:end="113:78"><condition pos:start="113:40" pos:end="113:52"><expr pos:start="113:40" pos:end="113:50"><name pos:start="113:40" pos:end="113:50"><name pos:start="113:40" pos:end="113:42">uri</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:50">server</name></name></expr> ?</condition><then pos:start="113:54" pos:end="113:64"> <expr pos:start="113:54" pos:end="113:64"><name pos:start="113:54" pos:end="113:64"><name pos:start="113:54" pos:end="113:56">uri</name><operator pos:start="113:57" pos:end="113:58">-&gt;</operator><name pos:start="113:59" pos:end="113:64">server</name></name></expr> </then><else pos:start="113:66" pos:end="113:78">: <expr pos:start="113:68" pos:end="113:78"><literal type="string" pos:start="113:68" pos:end="113:78">"localhost"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="123:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:22">(<expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:15">uri</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:21">port</name></name></expr>)</condition> <block pos:start="115:24" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:67">

            <expr_stmt pos:start="117:13" pos:end="117:67"><expr pos:start="117:13" pos:end="117:66"><name pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:18">gsconf</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:21">u</name><operator pos:start="117:22" pos:end="117:22">.</operator><name pos:start="117:23" pos:end="117:26">inet</name><operator pos:start="117:27" pos:end="117:27">.</operator><name pos:start="117:28" pos:end="117:31">port</name></name> <operator pos:start="117:33" pos:end="117:33">=</operator> <call pos:start="117:35" pos:end="117:66"><name pos:start="117:35" pos:end="117:49">g_strdup_printf</name><argument_list pos:start="117:50" pos:end="117:66">(<argument pos:start="117:51" pos:end="117:54"><expr pos:start="117:51" pos:end="117:54"><literal type="string" pos:start="117:51" pos:end="117:54">"%d"</literal></expr></argument>, <argument pos:start="117:57" pos:end="117:65"><expr pos:start="117:57" pos:end="117:65"><name pos:start="117:57" pos:end="117:65"><name pos:start="117:57" pos:end="117:59">uri</name><operator pos:start="117:60" pos:end="117:61">-&gt;</operator><name pos:start="117:62" pos:end="117:65">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="123:9">else <block pos:start="119:16" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:78">

            <expr_stmt pos:start="121:13" pos:end="121:78"><expr pos:start="121:13" pos:end="121:77"><name pos:start="121:13" pos:end="121:31"><name pos:start="121:13" pos:end="121:18">gsconf</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:21">u</name><operator pos:start="121:22" pos:end="121:22">.</operator><name pos:start="121:23" pos:end="121:26">inet</name><operator pos:start="121:27" pos:end="121:27">.</operator><name pos:start="121:28" pos:end="121:31">port</name></name> <operator pos:start="121:33" pos:end="121:33">=</operator> <call pos:start="121:35" pos:end="121:77"><name pos:start="121:35" pos:end="121:49">g_strdup_printf</name><argument_list pos:start="121:50" pos:end="121:77">(<argument pos:start="121:51" pos:end="121:54"><expr pos:start="121:51" pos:end="121:54"><literal type="string" pos:start="121:51" pos:end="121:54">"%d"</literal></expr></argument>, <argument pos:start="121:57" pos:end="121:76"><expr pos:start="121:57" pos:end="121:76"><name pos:start="121:57" pos:end="121:76">GLUSTER_DEFAULT_PORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="129:1" pos:end="129:4"><name pos:start="129:1" pos:end="129:3">out</name>:</label>

    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:11">(<expr pos:start="131:9" pos:end="131:10"><name pos:start="131:9" pos:end="131:10">qp</name></expr>)</condition> <block pos:start="131:13" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:30">

        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><call pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:25">query_params_free</name><argument_list pos:start="133:26" pos:end="133:29">(<argument pos:start="133:27" pos:end="133:28"><expr pos:start="133:27" pos:end="133:28"><name pos:start="133:27" pos:end="133:28">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><call pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:12">uri_free</name><argument_list pos:start="137:13" pos:end="137:17">(<argument pos:start="137:14" pos:end="137:16"><expr pos:start="137:14" pos:end="137:16"><name pos:start="137:14" pos:end="137:16">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:15">return <expr pos:start="139:12" pos:end="139:14"><name pos:start="139:12" pos:end="139:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
