<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5124.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">ff_h264_idct_add_mmx</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">uint8_t</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dst</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:54">int16_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">block</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">stride</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:6">

    <comment type="block" pos:start="5:5" pos:end="5:25">/* Load dct coeffs */</comment>

    <asm pos:start="7:5" pos:end="17:20">__asm__ <specifier pos:start="7:13" pos:end="7:20">volatile</specifier>(

        "movq   (%0), %%mm0 \n\t"

        "movq  8(%0), %%mm1 \n\t"

        "movq 16(%0), %%mm2 \n\t"

        "movq 24(%0), %%mm3 \n\t"

    :: "r"(block) );</asm>



    <asm pos:start="21:5" pos:end="49:22">__asm__ <specifier pos:start="21:13" pos:end="21:20">volatile</specifier>(

        <comment type="block" pos:start="23:9" pos:end="23:64">/* mm1=s02+s13  mm2=s02-s13  mm4=d02+d13  mm0=d02-d13 */</comment>

        IDCT4_1D( %%mm2, %%mm1, %%mm0, %%mm3, %%mm4 )



        "movq      %0,    %%mm6 \n\t"

        <comment type="block" pos:start="31:9" pos:end="31:39">/* in: 1,4,0,2  out: 1,2,3,0 */</comment>

        TRANSPOSE4( %%mm3, %%mm1, %%mm0, %%mm2, %%mm4 )



        "paddw     %%mm6, %%mm3 \n\t"



        <comment type="block" pos:start="41:9" pos:end="41:64">/* mm2=s02+s13  mm3=s02-s13  mm4=d02+d13  mm1=d02-d13 */</comment>

        IDCT4_1D( %%mm4, %%mm2, %%mm3, %%mm0, %%mm1 )



        "pxor %%mm7, %%mm7    \n\t"

    :: "m"(ff_pw_32));</asm>



    <asm pos:start="53:5" pos:end="73:6">__asm__ <specifier pos:start="53:13" pos:end="53:20">volatile</specifier>(

    STORE_DIFF_4P( %%mm0, %%mm1, %%mm7)

        "add %1, %0             \n\t"

    STORE_DIFF_4P( %%mm2, %%mm1, %%mm7)

        "add %1, %0             \n\t"

    STORE_DIFF_4P( %%mm3, %%mm1, %%mm7)

        "add %1, %0             \n\t"

    STORE_DIFF_4P( %%mm4, %%mm1, %%mm7)

        : "+r"(dst)

        : "r" ((x86_reg)stride)

    );</asm>

</block_content>}</block></function>
</unit>
