<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2924.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">qemu_fclose</name><parameter_list pos:start="1:16" pos:end="1:28">(<parameter pos:start="1:17" pos:end="1:27"><decl pos:start="1:17" pos:end="1:27"><type pos:start="1:17" pos:end="1:26"><name pos:start="1:17" pos:end="1:24">QEMUFile</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:27">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:19"><expr pos:start="7:5" pos:end="7:18"><call pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:15">qemu_fflush</name><argument_list pos:start="7:16" pos:end="7:18">(<argument pos:start="7:17" pos:end="7:17"><expr pos:start="7:17" pos:end="7:17"><name pos:start="7:17" pos:end="7:17">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="11:34"><if pos:start="9:5" pos:end="11:34">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:9">f</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:16">close</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:34"><block_content pos:start="11:9" pos:end="11:34">

        <expr_stmt pos:start="11:9" pos:end="11:34"><expr pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:33"><name pos:start="11:15" pos:end="11:22"><name pos:start="11:15" pos:end="11:15">f</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:22">close</name></name><argument_list pos:start="11:23" pos:end="11:33">(<argument pos:start="11:24" pos:end="11:32"><expr pos:start="11:24" pos:end="11:32"><name pos:start="11:24" pos:end="11:32"><name pos:start="11:24" pos:end="11:24">f</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:32">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:14"><expr pos:start="13:5" pos:end="13:13"><call pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:10">g_free</name><argument_list pos:start="13:11" pos:end="13:13">(<argument pos:start="13:12" pos:end="13:12"><expr pos:start="13:12" pos:end="13:12"><name pos:start="13:12" pos:end="13:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="15:5" pos:end="15:15">return <expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
