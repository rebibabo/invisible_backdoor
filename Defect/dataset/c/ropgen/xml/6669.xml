<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6669.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tiff_unpack_fax</name><parameter_list pos:start="1:27" pos:end="3:78">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">TiffContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">dst</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:67">stride</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">src</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:55"><decl pos:start="3:48" pos:end="3:55"><type pos:start="3:48" pos:end="3:55"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:66"><decl pos:start="3:58" pos:end="3:66"><type pos:start="3:58" pos:end="3:66"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:66">width</name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:77"><decl pos:start="3:69" pos:end="3:77"><type pos:start="3:69" pos:end="3:77"><name pos:start="3:69" pos:end="3:71">int</name></type> <name pos:start="3:73" pos:end="3:77">lines</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:15">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:60"><decl pos:start="11:5" pos:end="13:59"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">src2</name> <init pos:start="11:19" pos:end="13:59">= <expr pos:start="11:21" pos:end="13:59"><call pos:start="11:21" pos:end="13:59"><name pos:start="11:21" pos:end="11:29">av_malloc</name><argument_list pos:start="11:30" pos:end="13:59">(<argument pos:start="11:31" pos:end="13:58"><expr pos:start="11:31" pos:end="13:58"><operator pos:start="11:31" pos:end="11:31">(</operator><name pos:start="11:32" pos:end="11:39">unsigned</name><operator pos:start="11:40" pos:end="11:40">)</operator><name pos:start="11:41" pos:end="11:44">size</name> <operator pos:start="11:46" pos:end="11:46">+</operator>

                              <name pos:start="13:31" pos:end="13:58">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:13">src2</name></expr>)</condition> <block pos:start="17:16" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:31">

        <expr_stmt pos:start="19:9" pos:end="21:54"><expr pos:start="19:9" pos:end="21:53"><call pos:start="19:9" pos:end="21:53"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="21:53">(<argument pos:start="19:16" pos:end="19:23"><expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:23">avctx</name></name></expr></argument>, <argument pos:start="19:26" pos:end="19:37"><expr pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="21:16" pos:end="21:52"><expr pos:start="21:16" pos:end="21:52"><literal type="string" pos:start="21:16" pos:end="21:52">"Error allocating temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:10">s</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:22">fill_order</name></name></expr>)</condition> <block pos:start="29:25" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:32">

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><call pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:14">memcpy</name><argument_list pos:start="31:15" pos:end="31:31">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">src2</name></expr></argument>, <argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">src</name></expr></argument>, <argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:41">

        <for pos:start="35:9" pos:end="37:41">for <control pos:start="35:13" pos:end="35:34">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:29"><expr pos:start="35:21" pos:end="35:28"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:28">size</name></expr>;</condition> <incr pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:31">i</name><operator pos:start="35:32" pos:end="35:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:13" pos:end="37:41"><block_content pos:start="37:13" pos:end="37:41">

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:16">src2</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">i</name></expr>]</index></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:40"><name pos:start="37:23" pos:end="37:32">ff_reverse</name><index pos:start="37:33" pos:end="37:40">[<expr pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:36">src</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><call pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:10">memset</name><argument_list pos:start="41:11" pos:end="41:56">(<argument pos:start="41:12" pos:end="41:22"><expr pos:start="41:12" pos:end="41:22"><name pos:start="41:12" pos:end="41:15">src2</name> <operator pos:start="41:17" pos:end="41:17">+</operator> <name pos:start="41:19" pos:end="41:22">size</name></expr></argument>, <argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr></argument>, <argument pos:start="41:28" pos:end="41:55"><expr pos:start="41:28" pos:end="41:55"><name pos:start="41:28" pos:end="41:55">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:49"><expr pos:start="43:5" pos:end="45:48"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="45:48"><name pos:start="43:11" pos:end="43:25">ff_ccitt_unpack</name><argument_list pos:start="43:26" pos:end="45:48">(<argument pos:start="43:27" pos:end="43:34"><expr pos:start="43:27" pos:end="43:34"><name pos:start="43:27" pos:end="43:34"><name pos:start="43:27" pos:end="43:27">s</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:34">avctx</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">src2</name></expr></argument>, <argument pos:start="43:43" pos:end="43:46"><expr pos:start="43:43" pos:end="43:46"><name pos:start="43:43" pos:end="43:46">size</name></expr></argument>, <argument pos:start="43:49" pos:end="43:51"><expr pos:start="43:49" pos:end="43:51"><name pos:start="43:49" pos:end="43:51">dst</name></expr></argument>, <argument pos:start="43:54" pos:end="43:58"><expr pos:start="43:54" pos:end="43:58"><name pos:start="43:54" pos:end="43:58">lines</name></expr></argument>, <argument pos:start="43:61" pos:end="43:66"><expr pos:start="43:61" pos:end="43:66"><name pos:start="43:61" pos:end="43:66">stride</name></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:34"><expr pos:start="45:27" pos:end="45:34"><name pos:start="45:27" pos:end="45:34"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:34">compr</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:47"><expr pos:start="45:37" pos:end="45:47"><name pos:start="45:37" pos:end="45:47"><name pos:start="45:37" pos:end="45:37">s</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:47">fax_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:9"><if pos:start="47:5" pos:end="55:9">if <condition pos:start="47:8" pos:end="47:59">(<expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:14">bpp</name></name> <operator pos:start="47:16" pos:end="47:16">&lt;</operator> <literal type="number" pos:start="47:18" pos:end="47:18">8</literal> <operator pos:start="47:20" pos:end="47:21">&amp;&amp;</operator> <name pos:start="47:23" pos:end="47:39"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:30">avctx</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:39">pix_fmt</name></name> <operator pos:start="47:41" pos:end="47:42">==</operator> <name pos:start="47:44" pos:end="47:58">AV_PIX_FMT_PAL8</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="55:9"><block_content pos:start="49:9" pos:end="55:9">

        <for pos:start="49:9" pos:end="55:9">for <control pos:start="49:13" pos:end="49:44">(<init pos:start="49:14" pos:end="49:22"><expr pos:start="49:14" pos:end="49:21"><name pos:start="49:14" pos:end="49:17">line</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>;</init> <condition pos:start="49:24" pos:end="49:36"><expr pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:27">line</name> <operator pos:start="49:29" pos:end="49:29">&lt;</operator> <name pos:start="49:31" pos:end="49:35">lines</name></expr>;</condition> <incr pos:start="49:38" pos:end="49:43"><expr pos:start="49:38" pos:end="49:43"><name pos:start="49:38" pos:end="49:41">line</name><operator pos:start="49:42" pos:end="49:43">++</operator></expr></incr>)</control> <block pos:start="49:46" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:26">

            <expr_stmt pos:start="51:13" pos:end="51:62"><expr pos:start="51:13" pos:end="51:61"><call pos:start="51:13" pos:end="51:61"><name pos:start="51:13" pos:end="51:27">horizontal_fill</name><argument_list pos:start="51:28" pos:end="51:61">(<argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:34">bpp</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">dst</name></expr></argument>, <argument pos:start="51:42" pos:end="51:42"><expr pos:start="51:42" pos:end="51:42"><literal type="number" pos:start="51:42" pos:end="51:42">1</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:47"><expr pos:start="51:45" pos:end="51:47"><name pos:start="51:45" pos:end="51:47">dst</name></expr></argument>, <argument pos:start="51:50" pos:end="51:50"><expr pos:start="51:50" pos:end="51:50"><literal type="number" pos:start="51:50" pos:end="51:50">0</literal></expr></argument>, <argument pos:start="51:53" pos:end="51:57"><expr pos:start="51:53" pos:end="51:57"><name pos:start="51:53" pos:end="51:57">width</name></expr></argument>, <argument pos:start="51:60" pos:end="51:60"><expr pos:start="51:60" pos:end="51:60"><literal type="number" pos:start="51:60" pos:end="51:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:26"><expr pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:15">dst</name> <operator pos:start="53:17" pos:end="53:18">+=</operator> <name pos:start="53:20" pos:end="53:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><call pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:11">av_free</name><argument_list pos:start="57:12" pos:end="57:17">(<argument pos:start="57:13" pos:end="57:16"><expr pos:start="57:13" pos:end="57:16"><name pos:start="57:13" pos:end="57:16">src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
