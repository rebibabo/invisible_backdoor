<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7503.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">hmp_info_vnc</name><parameter_list pos:start="1:18" pos:end="1:51">(<parameter pos:start="1:19" pos:end="1:30"><decl pos:start="1:19" pos:end="1:30"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:25">Monitor</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">mon</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:43">QDict</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:28">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">VncInfo</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">VncClientInfoList</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:29">client</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:8">info</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:30"><name pos:start="13:12" pos:end="13:24">qmp_query_vnc</name><argument_list pos:start="13:25" pos:end="13:30">(<argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">err</name></expr>)</condition> <block pos:start="15:14" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:15">

        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:22">monitor_printf</name><argument_list pos:start="17:23" pos:end="17:58">(<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">mon</name></expr></argument>, <argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><literal type="string" pos:start="17:29" pos:end="17:34">"%s\n"</literal></expr></argument>, <argument pos:start="17:37" pos:end="17:57"><expr pos:start="17:37" pos:end="17:57"><call pos:start="17:37" pos:end="17:57"><name pos:start="17:37" pos:end="17:52">error_get_pretty</name><argument_list pos:start="17:53" pos:end="17:57">(<argument pos:start="17:54" pos:end="17:56"><expr pos:start="17:54" pos:end="17:56"><name pos:start="17:54" pos:end="17:56">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><call pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:18">error_free</name><argument_list pos:start="19:19" pos:end="19:23">(<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:22"><name pos:start="27:10" pos:end="27:13">info</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:22">enabled</name></name></expr>)</condition> <block pos:start="27:25" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:17">

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><call pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:22">monitor_printf</name><argument_list pos:start="29:23" pos:end="29:49">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">mon</name></expr></argument>, <argument pos:start="29:29" pos:end="29:48"><expr pos:start="29:29" pos:end="29:48"><literal type="string" pos:start="29:29" pos:end="29:48">"Server: disabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><call pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:18">monitor_printf</name><argument_list pos:start="37:19" pos:end="37:36">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">mon</name></expr></argument>, <argument pos:start="37:25" pos:end="37:35"><expr pos:start="37:25" pos:end="37:35"><literal type="string" pos:start="37:25" pos:end="37:35">"Server:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:44">(<expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:12">info</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:22">has_host</name></name> <operator pos:start="39:24" pos:end="39:25">&amp;&amp;</operator> <name pos:start="39:27" pos:end="39:43"><name pos:start="39:27" pos:end="39:30">info</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:43">has_service</name></name></expr>)</condition> <block pos:start="39:46" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:80">

        <expr_stmt pos:start="41:9" pos:end="41:80"><expr pos:start="41:9" pos:end="41:79"><call pos:start="41:9" pos:end="41:79"><name pos:start="41:9" pos:end="41:22">monitor_printf</name><argument_list pos:start="41:23" pos:end="41:79">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">mon</name></expr></argument>, <argument pos:start="41:29" pos:end="41:51"><expr pos:start="41:29" pos:end="41:51"><literal type="string" pos:start="41:29" pos:end="41:51">"     address: %s:%s\n"</literal></expr></argument>, <argument pos:start="41:54" pos:end="41:63"><expr pos:start="41:54" pos:end="41:63"><name pos:start="41:54" pos:end="41:63"><name pos:start="41:54" pos:end="41:57">info</name><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:63">host</name></name></expr></argument>, <argument pos:start="41:66" pos:end="41:78"><expr pos:start="41:66" pos:end="41:78"><name pos:start="41:66" pos:end="41:78"><name pos:start="41:66" pos:end="41:69">info</name><operator pos:start="41:70" pos:end="41:71">-&gt;</operator><name pos:start="41:72" pos:end="41:78">service</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:23">(<expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:12">info</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:22">has_auth</name></name></expr>)</condition> <block pos:start="45:25" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:62">

        <expr_stmt pos:start="47:9" pos:end="47:62"><expr pos:start="47:9" pos:end="47:61"><call pos:start="47:9" pos:end="47:61"><name pos:start="47:9" pos:end="47:22">monitor_printf</name><argument_list pos:start="47:23" pos:end="47:61">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">mon</name></expr></argument>, <argument pos:start="47:29" pos:end="47:48"><expr pos:start="47:29" pos:end="47:48"><literal type="string" pos:start="47:29" pos:end="47:48">"        auth: %s\n"</literal></expr></argument>, <argument pos:start="47:51" pos:end="47:60"><expr pos:start="47:51" pos:end="47:60"><name pos:start="47:51" pos:end="47:60"><name pos:start="47:51" pos:end="47:54">info</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:60">auth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="83:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:52">(<expr pos:start="53:9" pos:end="53:51"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:26"><name pos:start="53:10" pos:end="53:13">info</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:26">has_clients</name></name> <operator pos:start="53:28" pos:end="53:29">||</operator> <name pos:start="53:31" pos:end="53:43"><name pos:start="53:31" pos:end="53:34">info</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:43">clients</name></name> <operator pos:start="53:45" pos:end="53:46">==</operator> <name pos:start="53:48" pos:end="53:51">NULL</name></expr>)</condition> <block pos:start="53:54" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:46">

        <expr_stmt pos:start="55:9" pos:end="55:46"><expr pos:start="55:9" pos:end="55:45"><call pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:22">monitor_printf</name><argument_list pos:start="55:23" pos:end="55:45">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">mon</name></expr></argument>, <argument pos:start="55:29" pos:end="55:44"><expr pos:start="55:29" pos:end="55:44"><literal type="string" pos:start="55:29" pos:end="55:44">"Client: none\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="83:5">else <block pos:start="57:12" pos:end="83:5">{<block_content pos:start="59:9" pos:end="81:9">

        <for pos:start="59:9" pos:end="81:9">for <control pos:start="59:13" pos:end="59:67">(<init pos:start="59:14" pos:end="59:36"><expr pos:start="59:14" pos:end="59:35"><name pos:start="59:14" pos:end="59:19">client</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:35"><name pos:start="59:23" pos:end="59:26">info</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:35">clients</name></name></expr>;</init> <condition pos:start="59:38" pos:end="59:44"><expr pos:start="59:38" pos:end="59:43"><name pos:start="59:38" pos:end="59:43">client</name></expr>;</condition> <incr pos:start="59:46" pos:end="59:66"><expr pos:start="59:46" pos:end="59:66"><name pos:start="59:46" pos:end="59:51">client</name> <operator pos:start="59:53" pos:end="59:53">=</operator> <name pos:start="59:55" pos:end="59:66"><name pos:start="59:55" pos:end="59:60">client</name><operator pos:start="59:61" pos:end="59:62">-&gt;</operator><name pos:start="59:63" pos:end="59:66">next</name></name></expr></incr>)</control> <block pos:start="59:69" pos:end="81:9">{<block_content pos:start="61:13" pos:end="79:66">

            <expr_stmt pos:start="61:13" pos:end="61:45"><expr pos:start="61:13" pos:end="61:44"><call pos:start="61:13" pos:end="61:44"><name pos:start="61:13" pos:end="61:26">monitor_printf</name><argument_list pos:start="61:27" pos:end="61:44">(<argument pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><name pos:start="61:28" pos:end="61:30">mon</name></expr></argument>, <argument pos:start="61:33" pos:end="61:43"><expr pos:start="61:33" pos:end="61:43"><literal type="string" pos:start="61:33" pos:end="61:43">"Client:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="67:57"><expr pos:start="63:13" pos:end="67:56"><call pos:start="63:13" pos:end="67:56"><name pos:start="63:13" pos:end="63:26">monitor_printf</name><argument_list pos:start="63:27" pos:end="67:56">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:30">mon</name></expr></argument>, <argument pos:start="63:33" pos:end="63:55"><expr pos:start="63:33" pos:end="63:55"><literal type="string" pos:start="63:33" pos:end="63:55">"     address: %s:%s\n"</literal></expr></argument>,

                           <argument pos:start="65:28" pos:end="65:52"><expr pos:start="65:28" pos:end="65:52"><name pos:start="65:28" pos:end="65:52"><name pos:start="65:28" pos:end="65:33">client</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:40">value</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:46">base</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:52">host</name></name></expr></argument>,

                           <argument pos:start="67:28" pos:end="67:55"><expr pos:start="67:28" pos:end="67:55"><name pos:start="67:28" pos:end="67:55"><name pos:start="67:28" pos:end="67:33">client</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:40">value</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:46">base</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:55">service</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="73:63"><expr pos:start="69:13" pos:end="73:62"><call pos:start="69:13" pos:end="73:62"><name pos:start="69:13" pos:end="69:26">monitor_printf</name><argument_list pos:start="69:27" pos:end="73:62">(<argument pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:30">mon</name></expr></argument>, <argument pos:start="69:33" pos:end="69:52"><expr pos:start="69:33" pos:end="69:52"><literal type="string" pos:start="69:33" pos:end="69:52">"  x509_dname: %s\n"</literal></expr></argument>,

                           <argument pos:start="71:28" pos:end="73:61"><expr pos:start="71:28" pos:end="73:61"><ternary pos:start="71:28" pos:end="73:61"><condition pos:start="71:28" pos:end="71:54"><expr pos:start="71:28" pos:end="71:52"><name pos:start="71:28" pos:end="71:52"><name pos:start="71:28" pos:end="71:33">client</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:40">value</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:52">x509_dname</name></name></expr> ?</condition><then pos:start="73:28" pos:end="73:52">

                           <expr pos:start="73:28" pos:end="73:52"><name pos:start="73:28" pos:end="73:52"><name pos:start="73:28" pos:end="73:33">client</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:40">value</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:52">x509_dname</name></name></expr> </then><else pos:start="73:54" pos:end="73:61">: <expr pos:start="73:56" pos:end="73:61"><literal type="string" pos:start="73:56" pos:end="73:61">"none"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="79:66"><expr pos:start="75:13" pos:end="79:65"><call pos:start="75:13" pos:end="79:65"><name pos:start="75:13" pos:end="75:26">monitor_printf</name><argument_list pos:start="75:27" pos:end="79:65">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><name pos:start="75:28" pos:end="75:30">mon</name></expr></argument>, <argument pos:start="75:33" pos:end="75:52"><expr pos:start="75:33" pos:end="75:52"><literal type="string" pos:start="75:33" pos:end="75:52">"    username: %s\n"</literal></expr></argument>,

                           <argument pos:start="77:28" pos:end="79:64"><expr pos:start="77:28" pos:end="79:64"><ternary pos:start="77:28" pos:end="79:64"><condition pos:start="77:28" pos:end="77:61"><expr pos:start="77:28" pos:end="77:59"><name pos:start="77:28" pos:end="77:59"><name pos:start="77:28" pos:end="77:33">client</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:40">value</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:59">has_sasl_username</name></name></expr> ?</condition><then pos:start="79:28" pos:end="79:55">

                           <expr pos:start="79:28" pos:end="79:55"><name pos:start="79:28" pos:end="79:55"><name pos:start="79:28" pos:end="79:33">client</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:40">value</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:55">sasl_username</name></name></expr> </then><else pos:start="79:57" pos:end="79:64">: <expr pos:start="79:59" pos:end="79:64"><literal type="string" pos:start="79:59" pos:end="79:64">"none"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



<label pos:start="87:1" pos:end="87:4"><name pos:start="87:1" pos:end="87:3">out</name>:</label>

    <expr_stmt pos:start="89:5" pos:end="89:28"><expr pos:start="89:5" pos:end="89:27"><call pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:21">qapi_free_VncInfo</name><argument_list pos:start="89:22" pos:end="89:27">(<argument pos:start="89:23" pos:end="89:26"><expr pos:start="89:23" pos:end="89:26"><name pos:start="89:23" pos:end="89:26">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
