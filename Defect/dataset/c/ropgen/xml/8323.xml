<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8323.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">PCIDevice</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:27">pci_rtl8139_init</name><parameter_list pos:start="1:28" pos:end="1:64">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:34">PCIBus</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">bus</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:48">NICInfo</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">nd</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">devfn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:26">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">PCIRTL8139State</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">RTL8139State</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="19:58"><expr pos:start="13:5" pos:end="19:57"><name pos:start="13:5" pos:end="13:5">d</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:24">PCIRTL8139State</name> <operator pos:start="13:26" pos:end="13:26">*</operator><operator pos:start="13:27" pos:end="13:27">)</operator><call pos:start="13:28" pos:end="19:57"><name pos:start="13:28" pos:end="13:46">pci_register_device</name><argument_list pos:start="13:47" pos:end="19:57">(<argument pos:start="13:48" pos:end="13:50"><expr pos:start="13:48" pos:end="13:50"><name pos:start="13:48" pos:end="13:50">bus</name></expr></argument>,

                                              <argument pos:start="15:47" pos:end="15:55"><expr pos:start="15:47" pos:end="15:55"><literal type="string" pos:start="15:47" pos:end="15:55">"RTL8139"</literal></expr></argument>, <argument pos:start="15:58" pos:end="15:80"><expr pos:start="15:58" pos:end="15:80"><sizeof pos:start="15:58" pos:end="15:80">sizeof<argument_list pos:start="15:64" pos:end="15:80">(<argument pos:start="15:65" pos:end="15:79"><expr pos:start="15:65" pos:end="15:79"><name pos:start="15:65" pos:end="15:79">PCIRTL8139State</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                              <argument pos:start="17:47" pos:end="17:51"><expr pos:start="17:47" pos:end="17:51"><name pos:start="17:47" pos:end="17:51">devfn</name></expr></argument>,

                                              <argument pos:start="19:47" pos:end="19:50"><expr pos:start="19:47" pos:end="19:50"><name pos:start="19:47" pos:end="19:50">NULL</name></expr></argument>, <argument pos:start="19:53" pos:end="19:56"><expr pos:start="19:53" pos:end="19:56"><name pos:start="19:53" pos:end="19:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:12">pci_conf</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:16">d</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:21">dev</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:28">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><call pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:28">pci_config_set_vendor_id</name><argument_list pos:start="23:29" pos:end="23:61">(<argument pos:start="23:30" pos:end="23:37"><expr pos:start="23:30" pos:end="23:37"><name pos:start="23:30" pos:end="23:37">pci_conf</name></expr></argument>, <argument pos:start="23:40" pos:end="23:60"><expr pos:start="23:40" pos:end="23:60"><name pos:start="23:40" pos:end="23:60">PCI_VENDOR_ID_REALTEK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:67"><expr pos:start="25:5" pos:end="25:66"><call pos:start="25:5" pos:end="25:66"><name pos:start="25:5" pos:end="25:28">pci_config_set_device_id</name><argument_list pos:start="25:29" pos:end="25:66">(<argument pos:start="25:30" pos:end="25:37"><expr pos:start="25:30" pos:end="25:37"><name pos:start="25:30" pos:end="25:37">pci_conf</name></expr></argument>, <argument pos:start="25:40" pos:end="25:65"><expr pos:start="25:40" pos:end="25:65"><name pos:start="25:40" pos:end="25:65">PCI_DEVICE_ID_REALTEK_8139</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:12">pci_conf</name><index pos:start="27:13" pos:end="27:18">[<expr pos:start="27:14" pos:end="27:17"><literal type="number" pos:start="27:14" pos:end="27:17">0x04</literal></expr>]</index></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:25">0x05</literal></expr>;</expr_stmt> <comment type="block" pos:start="27:28" pos:end="27:64">/* command = I/O space, Bus Master */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:12">pci_conf</name><index pos:start="29:13" pos:end="29:18">[<expr pos:start="29:14" pos:end="29:17"><literal type="number" pos:start="29:14" pos:end="29:17">0x08</literal></expr>]</index></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:38">RTL8139_PCI_REVID</name></expr>;</expr_stmt> <comment type="block" pos:start="29:41" pos:end="29:83">/* PCI revision ID; &gt;=0x20 is for 8139C+ */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:63"><expr pos:start="31:5" pos:end="31:62"><call pos:start="31:5" pos:end="31:62"><name pos:start="31:5" pos:end="31:24">pci_config_set_class</name><argument_list pos:start="31:25" pos:end="31:62">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33">pci_conf</name></expr></argument>, <argument pos:start="31:36" pos:end="31:61"><expr pos:start="31:36" pos:end="31:61"><name pos:start="31:36" pos:end="31:61">PCI_CLASS_NETWORK_ETHERNET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:12">pci_conf</name><index pos:start="33:13" pos:end="33:18">[<expr pos:start="33:14" pos:end="33:17"><literal type="number" pos:start="33:14" pos:end="33:17">0x0e</literal></expr>]</index></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:25">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="33:28" pos:end="33:44">/* header_type */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:12">pci_conf</name><index pos:start="35:13" pos:end="35:18">[<expr pos:start="35:14" pos:end="35:17"><literal type="number" pos:start="35:14" pos:end="35:17">0x3d</literal></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">1</literal></expr>;</expr_stmt>    <comment type="block" pos:start="35:28" pos:end="35:48">/* interrupt pin 0 */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:12">pci_conf</name><index pos:start="37:13" pos:end="37:18">[<expr pos:start="37:14" pos:end="37:17"><literal type="number" pos:start="37:14" pos:end="37:17">0x34</literal></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:25">0xdc</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">s</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <operator pos:start="41:9" pos:end="41:9">&amp;</operator><name pos:start="41:10" pos:end="41:19"><name pos:start="41:10" pos:end="41:10">d</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:19">rtl8139</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:43">/* I/O handler for memory-mapped I/O */</comment>

    <expr_stmt pos:start="47:5" pos:end="49:72"><expr pos:start="47:5" pos:end="49:71"><name pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:27">rtl8139_mmio_io_addr</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator>

    <call pos:start="49:5" pos:end="49:71"><name pos:start="49:5" pos:end="49:26">cpu_register_io_memory</name><argument_list pos:start="49:27" pos:end="49:71">(<argument pos:start="49:28" pos:end="49:28"><expr pos:start="49:28" pos:end="49:28"><literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr></argument>, <argument pos:start="49:31" pos:end="49:47"><expr pos:start="49:31" pos:end="49:47"><name pos:start="49:31" pos:end="49:47">rtl8139_mmio_read</name></expr></argument>, <argument pos:start="49:50" pos:end="49:67"><expr pos:start="49:50" pos:end="49:67"><name pos:start="49:50" pos:end="49:67">rtl8139_mmio_write</name></expr></argument>, <argument pos:start="49:70" pos:end="49:70"><expr pos:start="49:70" pos:end="49:70"><name pos:start="49:70" pos:end="49:70">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="55:70"><expr pos:start="53:5" pos:end="55:69"><call pos:start="53:5" pos:end="55:69"><name pos:start="53:5" pos:end="53:26">pci_register_io_region</name><argument_list pos:start="53:27" pos:end="55:69">(<argument pos:start="53:28" pos:end="53:34"><expr pos:start="53:28" pos:end="53:34"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:34"><name pos:start="53:29" pos:end="53:29">d</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:34">dev</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr></argument>, <argument pos:start="53:40" pos:end="53:44"><expr pos:start="53:40" pos:end="53:44"><literal type="number" pos:start="53:40" pos:end="53:44">0x100</literal></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:47"><expr pos:start="55:28" pos:end="55:47"><name pos:start="55:28" pos:end="55:47">PCI_ADDRESS_SPACE_IO</name></expr></argument>,  <argument pos:start="55:51" pos:end="55:68"><expr pos:start="55:51" pos:end="55:68"><name pos:start="55:51" pos:end="55:68">rtl8139_ioport_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:68"><expr pos:start="59:5" pos:end="61:67"><call pos:start="59:5" pos:end="61:67"><name pos:start="59:5" pos:end="59:26">pci_register_io_region</name><argument_list pos:start="59:27" pos:end="61:67">(<argument pos:start="59:28" pos:end="59:34"><expr pos:start="59:28" pos:end="59:34"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:34"><name pos:start="59:29" pos:end="59:29">d</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:34">dev</name></name></expr></argument>, <argument pos:start="59:37" pos:end="59:37"><expr pos:start="59:37" pos:end="59:37"><literal type="number" pos:start="59:37" pos:end="59:37">1</literal></expr></argument>, <argument pos:start="59:40" pos:end="59:44"><expr pos:start="59:40" pos:end="59:44"><literal type="number" pos:start="59:40" pos:end="59:44">0x100</literal></expr></argument>,

                           <argument pos:start="61:28" pos:end="61:48"><expr pos:start="61:28" pos:end="61:48"><name pos:start="61:28" pos:end="61:48">PCI_ADDRESS_SPACE_MEM</name></expr></argument>, <argument pos:start="61:51" pos:end="61:66"><expr pos:start="61:51" pos:end="61:66"><name pos:start="61:51" pos:end="61:66">rtl8139_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:14">pci_dev</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:27">PCIDevice</name> <operator pos:start="65:29" pos:end="65:29">*</operator><operator pos:start="65:30" pos:end="65:30">)</operator><name pos:start="65:31" pos:end="65:31">d</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><call pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:10">memcpy</name><argument_list pos:start="67:11" pos:end="67:38">(<argument pos:start="67:12" pos:end="67:21"><expr pos:start="67:12" pos:end="67:21"><name pos:start="67:12" pos:end="67:21"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:21">macaddr</name></name></expr></argument>, <argument pos:start="67:24" pos:end="67:34"><expr pos:start="67:24" pos:end="67:34"><name pos:start="67:24" pos:end="67:34"><name pos:start="67:24" pos:end="67:25">nd</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:34">macaddr</name></name></expr></argument>, <argument pos:start="67:37" pos:end="67:37"><expr pos:start="67:37" pos:end="67:37"><literal type="number" pos:start="67:37" pos:end="67:37">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><call pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:17">rtl8139_reset</name><argument_list pos:start="69:18" pos:end="69:20">(<argument pos:start="69:19" pos:end="69:19"><expr pos:start="69:19" pos:end="69:19"><name pos:start="69:19" pos:end="69:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:74"><expr pos:start="71:5" pos:end="73:73"><name pos:start="71:5" pos:end="71:9"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:9">vc</name></name> <operator pos:start="71:11" pos:end="71:11">=</operator> <call pos:start="71:13" pos:end="73:73"><name pos:start="71:13" pos:end="71:32">qemu_new_vlan_client</name><argument_list pos:start="71:33" pos:end="73:73">(<argument pos:start="71:34" pos:end="71:41"><expr pos:start="71:34" pos:end="71:41"><name pos:start="71:34" pos:end="71:41"><name pos:start="71:34" pos:end="71:35">nd</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:41">vlan</name></name></expr></argument>, <argument pos:start="71:44" pos:end="71:52"><expr pos:start="71:44" pos:end="71:52"><name pos:start="71:44" pos:end="71:52"><name pos:start="71:44" pos:end="71:45">nd</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:52">model</name></name></expr></argument>, <argument pos:start="71:55" pos:end="71:62"><expr pos:start="71:55" pos:end="71:62"><name pos:start="71:55" pos:end="71:62"><name pos:start="71:55" pos:end="71:56">nd</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:62">name</name></name></expr></argument>,

                                 <argument pos:start="73:34" pos:end="73:48"><expr pos:start="73:34" pos:end="73:48"><name pos:start="73:34" pos:end="73:48">rtl8139_receive</name></expr></argument>, <argument pos:start="73:51" pos:end="73:69"><expr pos:start="73:51" pos:end="73:69"><name pos:start="73:51" pos:end="73:69">rtl8139_can_receive</name></expr></argument>, <argument pos:start="73:72" pos:end="73:72"><expr pos:start="73:72" pos:end="73:72"><name pos:start="73:72" pos:end="73:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:48"><expr pos:start="77:5" pos:end="77:47"><call pos:start="77:5" pos:end="77:47"><name pos:start="77:5" pos:end="77:28">qemu_format_nic_info_str</name><argument_list pos:start="77:29" pos:end="77:47">(<argument pos:start="77:30" pos:end="77:34"><expr pos:start="77:30" pos:end="77:34"><name pos:start="77:30" pos:end="77:34"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:34">vc</name></name></expr></argument>, <argument pos:start="77:37" pos:end="77:46"><expr pos:start="77:37" pos:end="77:46"><name pos:start="77:37" pos:end="77:46"><name pos:start="77:37" pos:end="77:37">s</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:46">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:21">cplus_txbuffer</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:28">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:30"><expr pos:start="83:5" pos:end="83:29"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:25">cplus_txbuffer_len</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:33"><expr pos:start="85:5" pos:end="85:32"><name pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:28">cplus_txbuffer_offset</name></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="94:0"><expr pos:start="89:5" pos:end="89:68"><call pos:start="89:5" pos:end="89:68"><name pos:start="89:5" pos:end="89:19">register_savevm</name><argument_list pos:start="89:20" pos:end="89:68">(<argument pos:start="89:21" pos:end="89:29"><expr pos:start="89:21" pos:end="89:29"><literal type="string" pos:start="89:21" pos:end="89:29">"rtl8139"</literal></expr></argument>, <argument pos:start="89:32" pos:end="89:33"><expr pos:start="89:32" pos:end="89:33"><operator pos:start="89:32" pos:end="89:32">-</operator><literal type="number" pos:start="89:33" pos:end="89:33">1</literal></expr></argument>, <argument pos:start="89:36" pos:end="89:36"><expr pos:start="89:36" pos:end="89:36"><literal type="number" pos:start="89:36" pos:end="89:36">4</literal></expr></argument>, <argument pos:start="89:39" pos:end="89:50"><expr pos:start="89:39" pos:end="89:50"><name pos:start="89:39" pos:end="89:50">rtl8139_save</name></expr></argument>, <argument pos:start="89:53" pos:end="89:64"><expr pos:start="89:53" pos:end="89:64"><name pos:start="89:53" pos:end="89:64">rtl8139_load</name></expr></argument>, <argument pos:start="89:67" pos:end="89:67"><expr pos:start="89:67" pos:end="89:67"><name pos:start="89:67" pos:end="89:67">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="93:1" pos:end="93:28">#<cpp:directive pos:start="93:2" pos:end="93:6">ifdef</cpp:directive> <name pos:start="93:8" pos:end="93:28">RTL8139_ONBOARD_TIMER</name></cpp:ifdef>

    <expr_stmt pos:start="95:5" pos:end="95:58"><expr pos:start="95:5" pos:end="95:57"><name pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:12">timer</name></name> <operator pos:start="95:14" pos:end="95:14">=</operator> <call pos:start="95:16" pos:end="95:57"><name pos:start="95:16" pos:end="95:29">qemu_new_timer</name><argument_list pos:start="95:30" pos:end="95:57">(<argument pos:start="95:31" pos:end="95:38"><expr pos:start="95:31" pos:end="95:38"><name pos:start="95:31" pos:end="95:38">vm_clock</name></expr></argument>, <argument pos:start="95:41" pos:end="95:53"><expr pos:start="95:41" pos:end="95:53"><name pos:start="95:41" pos:end="95:53">rtl8139_timer</name></expr></argument>, <argument pos:start="95:56" pos:end="95:56"><expr pos:start="95:56" pos:end="95:56"><name pos:start="95:56" pos:end="95:56">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="104:0"><expr pos:start="99:5" pos:end="101:63"><call pos:start="99:5" pos:end="101:63"><name pos:start="99:5" pos:end="99:18">qemu_mod_timer</name><argument_list pos:start="99:19" pos:end="101:63">(<argument pos:start="99:20" pos:end="99:27"><expr pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:20">s</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:27">timer</name></name></expr></argument>,

        <argument pos:start="101:9" pos:end="101:62"><expr pos:start="101:9" pos:end="101:62"><call pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:34">rtl8139_get_next_tctr_time</name><argument_list pos:start="101:35" pos:end="101:62">(<argument pos:start="101:36" pos:end="101:36"><expr pos:start="101:36" pos:end="101:36"><name pos:start="101:36" pos:end="101:36">s</name></expr></argument>,<argument pos:start="101:38" pos:end="101:61"><expr pos:start="101:38" pos:end="101:61"><call pos:start="101:38" pos:end="101:61"><name pos:start="101:38" pos:end="101:51">qemu_get_clock</name><argument_list pos:start="101:52" pos:end="101:61">(<argument pos:start="101:53" pos:end="101:60"><expr pos:start="101:53" pos:end="101:60"><name pos:start="101:53" pos:end="101:60">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="103:8" pos:end="103:34">/* RTL8139_ONBOARD_TIMER */</comment>

    <return pos:start="105:5" pos:end="105:26">return <expr pos:start="105:12" pos:end="105:25"><operator pos:start="105:12" pos:end="105:12">(</operator><name pos:start="105:13" pos:end="105:21">PCIDevice</name> <operator pos:start="105:23" pos:end="105:23">*</operator><operator pos:start="105:24" pos:end="105:24">)</operator><name pos:start="105:25" pos:end="105:25">d</name></expr>;</return>

</block_content>}</block></function>
</unit>
