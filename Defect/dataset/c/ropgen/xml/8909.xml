<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8909.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">ff_mpeg4_encode_picture_header</name><parameter_list pos:start="1:36" pos:end="1:74">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:50">MpegEncContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:73">picture_number</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:39">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">time_incr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">time_div</name></decl>, <decl pos:start="7:19" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:26">time_mod</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="29:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">pict_type</name></name> <operator pos:start="11:22" pos:end="11:23">==</operator> <name pos:start="11:25" pos:end="11:41">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="11:44" pos:end="29:5">{<block_content pos:start="13:9" pos:end="27:39">

        <if_stmt pos:start="13:9" pos:end="23:9"><if pos:start="13:9" pos:end="23:9">if <condition pos:start="13:12" pos:end="13:61">(<expr pos:start="13:13" pos:end="13:60"><operator pos:start="13:13" pos:end="13:13">!</operator><operator pos:start="13:14" pos:end="13:14">(</operator><name pos:start="13:15" pos:end="13:29"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:22">avctx</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:29">flags</name></name> <operator pos:start="13:31" pos:end="13:31">&amp;</operator> <name pos:start="13:33" pos:end="13:59">AV_CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="13:60" pos:end="13:60">)</operator></expr>)</condition> <block pos:start="13:63" pos:end="23:9">{<block_content pos:start="15:13" pos:end="21:49">

            <if_stmt pos:start="15:13" pos:end="17:53"><if pos:start="15:13" pos:end="17:53">if <condition pos:start="15:16" pos:end="15:69">(<expr pos:start="15:17" pos:end="15:68"><name pos:start="15:17" pos:end="15:40"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:40">strict_std_compliance</name></name> <operator pos:start="15:42" pos:end="15:42">&lt;</operator> <name pos:start="15:44" pos:end="15:68">FF_COMPLIANCE_VERY_STRICT</name></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:53"><block_content pos:start="17:17" pos:end="17:53">  <comment type="line" pos:start="15:72" pos:end="15:105">// HACK, the reference sw is buggy</comment>

                <expr_stmt pos:start="17:17" pos:end="17:53"><expr pos:start="17:17" pos:end="17:52"><call pos:start="17:17" pos:end="17:52"><name pos:start="17:17" pos:end="17:49">mpeg4_encode_visual_object_header</name><argument_list pos:start="17:50" pos:end="17:52">(<argument pos:start="17:51" pos:end="17:51"><expr pos:start="17:51" pos:end="17:51"><name pos:start="17:51" pos:end="17:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="19:13" pos:end="21:49"><if pos:start="19:13" pos:end="21:49">if <condition pos:start="19:16" pos:end="19:92">(<expr pos:start="19:17" pos:end="19:91"><name pos:start="19:17" pos:end="19:40"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:40">strict_std_compliance</name></name> <operator pos:start="19:42" pos:end="19:42">&lt;</operator> <name pos:start="19:44" pos:end="19:68">FF_COMPLIANCE_VERY_STRICT</name> <operator pos:start="19:70" pos:end="19:71">||</operator> <name pos:start="19:73" pos:end="19:86">picture_number</name> <operator pos:start="19:88" pos:end="19:89">==</operator> <literal type="number" pos:start="19:91" pos:end="19:91">0</literal></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:49"><block_content pos:start="21:17" pos:end="21:49">  <comment type="line" pos:start="19:95" pos:end="19:128">// HACK, the reference sw is buggy</comment>

                <expr_stmt pos:start="21:17" pos:end="21:49"><expr pos:start="21:17" pos:end="21:48"><call pos:start="21:17" pos:end="21:48"><name pos:start="21:17" pos:end="21:39">mpeg4_encode_vol_header</name><argument_list pos:start="21:40" pos:end="21:48">(<argument pos:start="21:41" pos:end="21:41"><expr pos:start="21:41" pos:end="21:41"><name pos:start="21:41" pos:end="21:41">s</name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">0</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><literal type="number" pos:start="21:47" pos:end="21:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:39"><if pos:start="25:9" pos:end="27:39">if <condition pos:start="25:12" pos:end="25:46">(<expr pos:start="25:13" pos:end="25:45"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:32"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:32">workaround_bugs</name></name> <operator pos:start="25:34" pos:end="25:34">&amp;</operator> <name pos:start="25:36" pos:end="25:44">FF_BUG_MS</name><operator pos:start="25:45" pos:end="25:45">)</operator></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:39"><block_content pos:start="27:13" pos:end="27:39">

            <expr_stmt pos:start="27:13" pos:end="27:39"><expr pos:start="27:13" pos:end="27:38"><call pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:35">mpeg4_encode_gop_header</name><argument_list pos:start="27:36" pos:end="27:38">(<argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><name pos:start="27:37" pos:end="27:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:85"><expr pos:start="33:5" pos:end="33:84"><name pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:24">partitioned_frame</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:47"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:47">data_partitioning</name></name> <operator pos:start="33:49" pos:end="33:50">&amp;&amp;</operator> <name pos:start="33:52" pos:end="33:63"><name pos:start="33:52" pos:end="33:52">s</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:63">pict_type</name></name> <operator pos:start="33:65" pos:end="33:66">!=</operator> <name pos:start="33:68" pos:end="33:84">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><call pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:12">put_bits</name><argument_list pos:start="37:13" pos:end="37:27">(<argument pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:19"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:19"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:19">pb</name></name></expr></argument>, <argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><literal type="number" pos:start="37:22" pos:end="37:23">16</literal></expr></argument>, <argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                <comment type="block" pos:start="37:45" pos:end="37:60">/* vop header */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:12">put_bits</name><argument_list pos:start="39:13" pos:end="39:39">(<argument pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:19"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">pb</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><literal type="number" pos:start="39:22" pos:end="39:23">16</literal></expr></argument>, <argument pos:start="39:26" pos:end="39:38"><expr pos:start="39:26" pos:end="39:38"><name pos:start="39:26" pos:end="39:38">VOP_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="39:45" pos:end="39:60">/* vop header */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:12">put_bits</name><argument_list pos:start="41:13" pos:end="41:41">(<argument pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:19"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">pb</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr></argument>, <argument pos:start="41:25" pos:end="41:40"><expr pos:start="41:25" pos:end="41:40"><name pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:36">pict_type</name></name> <operator pos:start="41:38" pos:end="41:38">-</operator> <literal type="number" pos:start="41:40" pos:end="41:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="41:45" pos:end="41:74">/* pict type: I = 0 , P = 1 */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:12">time_div</name>  <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:56"><name pos:start="45:17" pos:end="45:22">FFUDIV</name><argument_list pos:start="45:23" pos:end="45:56">(<argument pos:start="45:24" pos:end="45:30"><expr pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:30">time</name></name></expr></argument>, <argument pos:start="45:33" pos:end="45:55"><expr pos:start="45:33" pos:end="45:55"><name pos:start="45:33" pos:end="45:55"><name pos:start="45:33" pos:end="45:33">s</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:40">avctx</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:51">time_base</name><operator pos:start="45:52" pos:end="45:52">.</operator><name pos:start="45:53" pos:end="45:55">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:57"><expr pos:start="47:5" pos:end="47:56"><name pos:start="47:5" pos:end="47:12">time_mod</name>  <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:56"><name pos:start="47:17" pos:end="47:22">FFUMOD</name><argument_list pos:start="47:23" pos:end="47:56">(<argument pos:start="47:24" pos:end="47:30"><expr pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:30"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:30">time</name></name></expr></argument>, <argument pos:start="47:33" pos:end="47:55"><expr pos:start="47:33" pos:end="47:55"><name pos:start="47:33" pos:end="47:55"><name pos:start="47:33" pos:end="47:33">s</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:40">avctx</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:51">time_base</name><operator pos:start="47:52" pos:end="47:52">.</operator><name pos:start="47:53" pos:end="47:55">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:13">time_incr</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:24">time_div</name> <operator pos:start="49:26" pos:end="49:26">-</operator> <name pos:start="49:28" pos:end="49:44"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:44">last_time_base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><call pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:14">av_assert0</name><argument_list pos:start="51:15" pos:end="51:30">(<argument pos:start="51:16" pos:end="51:29"><expr pos:start="51:16" pos:end="51:29"><name pos:start="51:16" pos:end="51:24">time_incr</name> <operator pos:start="51:26" pos:end="51:27">&gt;=</operator> <literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="53:5" pos:end="55:31">while <condition pos:start="53:11" pos:end="53:23">(<expr pos:start="53:12" pos:end="53:22"><name pos:start="53:12" pos:end="53:20">time_incr</name><operator pos:start="53:21" pos:end="53:22">--</operator></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:31"><block_content pos:start="55:9" pos:end="55:31">

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><call pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:16">put_bits</name><argument_list pos:start="55:17" pos:end="55:30">(<argument pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:23"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:23"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">pb</name></name></expr></argument>, <argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">1</literal></expr></argument>, <argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><literal type="number" pos:start="55:29" pos:end="55:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><call pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:12">put_bits</name><argument_list pos:start="59:13" pos:end="59:26">(<argument pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:19"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:19"><name pos:start="59:15" pos:end="59:15">s</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:19">pb</name></name></expr></argument>, <argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr></argument>, <argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><call pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:12">put_bits</name><argument_list pos:start="63:13" pos:end="63:26">(<argument pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:19"><operator pos:start="63:14" pos:end="63:14">&amp;</operator><name pos:start="63:15" pos:end="63:19"><name pos:start="63:15" pos:end="63:15">s</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:19">pb</name></name></expr></argument>, <argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr></argument>, <argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="block" pos:start="63:57" pos:end="63:68">/* marker */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:55"><expr pos:start="65:5" pos:end="65:54"><call pos:start="65:5" pos:end="65:54"><name pos:start="65:5" pos:end="65:12">put_bits</name><argument_list pos:start="65:13" pos:end="65:54">(<argument pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:19"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:19"><name pos:start="65:15" pos:end="65:15">s</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:19">pb</name></name></expr></argument>, <argument pos:start="65:22" pos:end="65:43"><expr pos:start="65:22" pos:end="65:43"><name pos:start="65:22" pos:end="65:43"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:43">time_increment_bits</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:53"><expr pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:53">time_mod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:57" pos:end="65:76">/* time increment */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><call pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:12">put_bits</name><argument_list pos:start="67:13" pos:end="67:26">(<argument pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:19"><operator pos:start="67:14" pos:end="67:14">&amp;</operator><name pos:start="67:15" pos:end="67:19"><name pos:start="67:15" pos:end="67:15">s</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:19">pb</name></name></expr></argument>, <argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">1</literal></expr></argument>, <argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><literal type="number" pos:start="67:25" pos:end="67:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="block" pos:start="67:57" pos:end="67:68">/* marker */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:12">put_bits</name><argument_list pos:start="69:13" pos:end="69:26">(<argument pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:19"><operator pos:start="69:14" pos:end="69:14">&amp;</operator><name pos:start="69:15" pos:end="69:19"><name pos:start="69:15" pos:end="69:15">s</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:19">pb</name></name></expr></argument>, <argument pos:start="69:22" pos:end="69:22"><expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr></argument>, <argument pos:start="69:25" pos:end="69:25"><expr pos:start="69:25" pos:end="69:25"><literal type="number" pos:start="69:25" pos:end="69:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="block" pos:start="69:57" pos:end="69:71">/* vop coded */</comment>

    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:42">(<expr pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:20">pict_type</name></name> <operator pos:start="71:22" pos:end="71:23">==</operator> <name pos:start="71:25" pos:end="71:41">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="71:44" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:44">

        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><call pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:16">put_bits</name><argument_list pos:start="73:17" pos:end="73:43">(<argument pos:start="73:18" pos:end="73:23"><expr pos:start="73:18" pos:end="73:23"><operator pos:start="73:18" pos:end="73:18">&amp;</operator><name pos:start="73:19" pos:end="73:23"><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:23">pb</name></name></expr></argument>, <argument pos:start="73:26" pos:end="73:26"><expr pos:start="73:26" pos:end="73:26"><literal type="number" pos:start="73:26" pos:end="73:26">1</literal></expr></argument>, <argument pos:start="73:29" pos:end="73:42"><expr pos:start="73:29" pos:end="73:42"><name pos:start="73:29" pos:end="73:42"><name pos:start="73:29" pos:end="73:29">s</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:42">no_rounding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="73:49" pos:end="73:67">/* rounding type */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><call pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:12">put_bits</name><argument_list pos:start="77:13" pos:end="77:26">(<argument pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:19"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:19"><name pos:start="77:15" pos:end="77:15">s</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:19">pb</name></name></expr></argument>, <argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">3</literal></expr></argument>, <argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="77:33" pos:end="77:60">/* intra dc VLC threshold */</comment>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:33">(<expr pos:start="79:9" pos:end="79:32"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:32"><name pos:start="79:10" pos:end="79:10">s</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:32">progressive_sequence</name></name></expr>)</condition> <block pos:start="79:35" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:47">

        <expr_stmt pos:start="81:9" pos:end="81:72"><expr pos:start="81:9" pos:end="81:71"><call pos:start="81:9" pos:end="81:71"><name pos:start="81:9" pos:end="81:16">put_bits</name><argument_list pos:start="81:17" pos:end="81:71">(<argument pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:23"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:23"><name pos:start="81:19" pos:end="81:19">s</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:23">pb</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">1</literal></expr></argument>, <argument pos:start="81:29" pos:end="81:70"><expr pos:start="81:29" pos:end="81:70"><name pos:start="81:29" pos:end="81:70"><name pos:start="81:29" pos:end="81:29">s</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:50">current_picture_ptr</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:53">f</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:70">top_field_first</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><call pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:16">put_bits</name><argument_list pos:start="83:17" pos:end="83:46">(<argument pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:23"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:23">pb</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">1</literal></expr></argument>, <argument pos:start="83:29" pos:end="83:45"><expr pos:start="83:29" pos:end="83:45"><name pos:start="83:29" pos:end="83:45"><name pos:start="83:29" pos:end="83:29">s</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:45">alternate_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="87:5" pos:end="87:25">// FIXME sprite stuff</comment>



    <expr_stmt pos:start="91:5" pos:end="91:35"><expr pos:start="91:5" pos:end="91:34"><call pos:start="91:5" pos:end="91:34"><name pos:start="91:5" pos:end="91:12">put_bits</name><argument_list pos:start="91:13" pos:end="91:34">(<argument pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:19"><operator pos:start="91:14" pos:end="91:14">&amp;</operator><name pos:start="91:15" pos:end="91:19"><name pos:start="91:15" pos:end="91:15">s</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:19">pb</name></name></expr></argument>, <argument pos:start="91:22" pos:end="91:22"><expr pos:start="91:22" pos:end="91:22"><literal type="number" pos:start="91:22" pos:end="91:22">5</literal></expr></argument>, <argument pos:start="91:25" pos:end="91:33"><expr pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:25">s</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:33">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="97:39"><if pos:start="95:5" pos:end="97:39">if <condition pos:start="95:8" pos:end="95:42">(<expr pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:20">pict_type</name></name> <operator pos:start="95:22" pos:end="95:23">!=</operator> <name pos:start="95:25" pos:end="95:41">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:39"><block_content pos:start="97:9" pos:end="97:39">

        <expr_stmt pos:start="97:9" pos:end="97:39"><expr pos:start="97:9" pos:end="97:38"><call pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:16">put_bits</name><argument_list pos:start="97:17" pos:end="97:38">(<argument pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:23"><operator pos:start="97:18" pos:end="97:18">&amp;</operator><name pos:start="97:19" pos:end="97:23"><name pos:start="97:19" pos:end="97:19">s</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:23">pb</name></name></expr></argument>, <argument pos:start="97:26" pos:end="97:26"><expr pos:start="97:26" pos:end="97:26"><literal type="number" pos:start="97:26" pos:end="97:26">3</literal></expr></argument>, <argument pos:start="97:29" pos:end="97:37"><expr pos:start="97:29" pos:end="97:37"><name pos:start="97:29" pos:end="97:37"><name pos:start="97:29" pos:end="97:29">s</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:37">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="97:42" pos:end="97:56">/* fcode_for */</comment>

    <if_stmt pos:start="99:5" pos:end="101:39"><if pos:start="99:5" pos:end="101:39">if <condition pos:start="99:8" pos:end="99:42">(<expr pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:20">pict_type</name></name> <operator pos:start="99:22" pos:end="99:23">==</operator> <name pos:start="99:25" pos:end="99:41">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:39"><block_content pos:start="101:9" pos:end="101:39">

        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><call pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:16">put_bits</name><argument_list pos:start="101:17" pos:end="101:38">(<argument pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:23"><operator pos:start="101:18" pos:end="101:18">&amp;</operator><name pos:start="101:19" pos:end="101:23"><name pos:start="101:19" pos:end="101:19">s</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:23">pb</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:26"><expr pos:start="101:26" pos:end="101:26"><literal type="number" pos:start="101:26" pos:end="101:26">3</literal></expr></argument>, <argument pos:start="101:29" pos:end="101:37"><expr pos:start="101:29" pos:end="101:37"><name pos:start="101:29" pos:end="101:37"><name pos:start="101:29" pos:end="101:29">s</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:37">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="101:42" pos:end="101:57">/* fcode_back */</comment>

</block_content>}</block></function>
</unit>
