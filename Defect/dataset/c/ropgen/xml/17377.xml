<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17377.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">vm_change_state_handler</name><parameter_list pos:start="1:36" pos:end="3:51">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:61">running</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:44">RunState</name></type> <name pos:start="3:46" pos:end="3:50">state</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:5">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GICv3ITSState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:46">= <expr pos:start="7:24" pos:end="7:46"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:37">GICv3ITSState</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator><name pos:start="7:41" pos:end="7:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15">running</name></expr>)</condition> <block pos:start="15:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:75"><expr pos:start="23:5" pos:end="25:74"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="25:74"><name pos:start="23:11" pos:end="23:27">kvm_device_access</name><argument_list pos:start="23:28" pos:end="25:74">(<argument pos:start="23:29" pos:end="23:37"><expr pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:37">dev_fd</name></name></expr></argument>, <argument pos:start="23:40" pos:end="23:64"><expr pos:start="23:40" pos:end="23:64"><name pos:start="23:40" pos:end="23:64">KVM_DEV_ARM_VGIC_GRP_CTRL</name></expr></argument>,

                            <argument pos:start="25:29" pos:end="25:55"><expr pos:start="25:29" pos:end="25:55"><name pos:start="25:29" pos:end="25:55">KVM_DEV_ARM_ITS_SAVE_TABLES</name></expr></argument>, <argument pos:start="25:58" pos:end="25:61"><expr pos:start="25:58" pos:end="25:61"><name pos:start="25:58" pos:end="25:61">NULL</name></expr></argument>, <argument pos:start="25:64" pos:end="25:67"><expr pos:start="25:64" pos:end="25:67"><name pos:start="25:64" pos:end="25:67">true</name></expr></argument>, <argument pos:start="25:70" pos:end="25:73"><expr pos:start="25:70" pos:end="25:73"><operator pos:start="25:70" pos:end="25:70">&amp;</operator><name pos:start="25:71" pos:end="25:73">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">err</name></expr>)</condition> <block pos:start="27:14" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:30">

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><call pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:24">error_report_err</name><argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:34">(<expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal> <operator pos:start="33:17" pos:end="33:18">&amp;&amp;</operator> <name pos:start="33:20" pos:end="33:22">ret</name> <operator pos:start="33:24" pos:end="33:25">!=</operator> <operator pos:start="33:27" pos:end="33:27">-</operator><name pos:start="33:28" pos:end="33:33">EFAULT</name></expr>)</condition> <block pos:start="33:36" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:16">

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><call pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:13">abort</name><argument_list pos:start="35:14" pos:end="35:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
