<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5884.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">check_host_key_knownhosts</name><parameter_list pos:start="1:37" pos:end="3:64">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:49">BDRVSSHState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:47">char</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">host</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:63"><decl pos:start="3:56" pos:end="3:63"><type pos:start="3:56" pos:end="3:63"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:63">port</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:15">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">home</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">knh_file</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">LIBSSH2_KNOWNHOSTS</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:27">knh</name> <init pos:start="11:29" pos:end="11:34">= <expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:28">libssh2_knownhost</name></name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:35">found</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>, <decl pos:start="15:14" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:14">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:23">hostkey</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">size_t</name></type> <name pos:start="19:12" pos:end="19:14">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">type</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:63"><expr pos:start="25:5" pos:end="25:62"><name pos:start="25:5" pos:end="25:11">hostkey</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:62"><name pos:start="25:15" pos:end="25:37">libssh2_session_hostkey</name><argument_list pos:start="25:38" pos:end="25:62">(<argument pos:start="25:39" pos:end="25:48"><expr pos:start="25:39" pos:end="25:48"><name pos:start="25:39" pos:end="25:48"><name pos:start="25:39" pos:end="25:39">s</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:48">session</name></name></expr></argument>, <argument pos:start="25:51" pos:end="25:54"><expr pos:start="25:51" pos:end="25:54"><operator pos:start="25:51" pos:end="25:51">&amp;</operator><name pos:start="25:52" pos:end="25:54">len</name></expr></argument>, <argument pos:start="25:57" pos:end="25:61"><expr pos:start="25:57" pos:end="25:61"><operator pos:start="25:57" pos:end="25:57">&amp;</operator><name pos:start="25:58" pos:end="25:61">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:16">hostkey</name></expr>)</condition> <block pos:start="27:19" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:17">

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><name pos:start="29:16" pos:end="29:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><call pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:28">session_error_report</name><argument_list pos:start="31:29" pos:end="31:65">(<argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><name pos:start="31:30" pos:end="31:30">s</name></expr></argument>, <argument pos:start="31:33" pos:end="31:64"><expr pos:start="31:33" pos:end="31:64"><literal type="string" pos:start="31:33" pos:end="31:64">"failed to read remote host key"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:7">knh</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:44"><name pos:start="39:11" pos:end="39:32">libssh2_knownhost_init</name><argument_list pos:start="39:33" pos:end="39:44">(<argument pos:start="39:34" pos:end="39:43"><expr pos:start="39:34" pos:end="39:43"><name pos:start="39:34" pos:end="39:43"><name pos:start="39:34" pos:end="39:34">s</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:43">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:13">(<expr pos:start="41:9" pos:end="41:12"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:12">knh</name></expr>)</condition> <block pos:start="41:15" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:17">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:76"><expr pos:start="45:9" pos:end="45:75"><call pos:start="45:9" pos:end="45:75"><name pos:start="45:9" pos:end="45:28">session_error_report</name><argument_list pos:start="45:29" pos:end="45:75">(<argument pos:start="45:30" pos:end="45:30"><expr pos:start="45:30" pos:end="45:30"><name pos:start="45:30" pos:end="45:30">s</name></expr></argument>, <argument pos:start="45:33" pos:end="45:74"><expr pos:start="45:33" pos:end="45:74"><literal type="string" pos:start="45:33" pos:end="45:74">"failed to initialize known hosts support"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:17">goto <name pos:start="47:14" pos:end="47:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:8">home</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:25"><name pos:start="53:12" pos:end="53:17">getenv</name><argument_list pos:start="53:18" pos:end="53:25">(<argument pos:start="53:19" pos:end="53:24"><expr pos:start="53:19" pos:end="53:24"><literal type="string" pos:start="53:19" pos:end="53:24">"HOME"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:13">(<expr pos:start="55:9" pos:end="55:12"><name pos:start="55:9" pos:end="55:12">home</name></expr>)</condition> <block pos:start="55:15" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:64">

        <expr_stmt pos:start="57:9" pos:end="57:64"><expr pos:start="57:9" pos:end="57:63"><name pos:start="57:9" pos:end="57:16">knh_file</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:63"><name pos:start="57:20" pos:end="57:34">g_strdup_printf</name><argument_list pos:start="57:35" pos:end="57:63">(<argument pos:start="57:36" pos:end="57:56"><expr pos:start="57:36" pos:end="57:56"><literal type="string" pos:start="57:36" pos:end="57:56">"%s/.ssh/known_hosts"</literal></expr></argument>, <argument pos:start="57:59" pos:end="57:62"><expr pos:start="57:59" pos:end="57:62"><name pos:start="57:59" pos:end="57:62">home</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:61">

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:16">knh_file</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:60"><name pos:start="61:20" pos:end="61:34">g_strdup_printf</name><argument_list pos:start="61:35" pos:end="61:60">(<argument pos:start="61:36" pos:end="61:59"><expr pos:start="61:36" pos:end="61:59"><literal type="string" pos:start="61:36" pos:end="61:59">"/root/.ssh/known_hosts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:67">/* Read all known hosts from OpenSSH-style known_hosts file. */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:78"><expr pos:start="69:5" pos:end="69:77"><call pos:start="69:5" pos:end="69:77"><name pos:start="69:5" pos:end="69:30">libssh2_knownhost_readfile</name><argument_list pos:start="69:31" pos:end="69:77">(<argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">knh</name></expr></argument>, <argument pos:start="69:37" pos:end="69:44"><expr pos:start="69:37" pos:end="69:44"><name pos:start="69:37" pos:end="69:44">knh_file</name></expr></argument>, <argument pos:start="69:47" pos:end="69:76"><expr pos:start="69:47" pos:end="69:76"><name pos:start="69:47" pos:end="69:76">LIBSSH2_KNOWNHOST_FILE_OPENSSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="79:41"><expr pos:start="73:5" pos:end="79:40"><name pos:start="73:5" pos:end="73:5">r</name> <operator pos:start="73:7" pos:end="73:7">=</operator> <call pos:start="73:9" pos:end="79:40"><name pos:start="73:9" pos:end="73:32">libssh2_knownhost_checkp</name><argument_list pos:start="73:33" pos:end="79:40">(<argument pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><name pos:start="73:34" pos:end="73:36">knh</name></expr></argument>, <argument pos:start="73:39" pos:end="73:42"><expr pos:start="73:39" pos:end="73:42"><name pos:start="73:39" pos:end="73:42">host</name></expr></argument>, <argument pos:start="73:45" pos:end="73:48"><expr pos:start="73:45" pos:end="73:48"><name pos:start="73:45" pos:end="73:48">port</name></expr></argument>, <argument pos:start="73:51" pos:end="73:57"><expr pos:start="73:51" pos:end="73:57"><name pos:start="73:51" pos:end="73:57">hostkey</name></expr></argument>, <argument pos:start="73:60" pos:end="73:62"><expr pos:start="73:60" pos:end="73:62"><name pos:start="73:60" pos:end="73:62">len</name></expr></argument>,

                                 <argument pos:start="75:34" pos:end="77:61"><expr pos:start="75:34" pos:end="77:61"><name pos:start="75:34" pos:end="75:61">LIBSSH2_KNOWNHOST_TYPE_PLAIN</name><operator pos:start="75:62" pos:end="75:62">|</operator>

                                 <name pos:start="77:34" pos:end="77:61">LIBSSH2_KNOWNHOST_KEYENC_RAW</name></expr></argument>,

                                 <argument pos:start="79:34" pos:end="79:39"><expr pos:start="79:34" pos:end="79:39"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:39">found</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="81:5" pos:end="127:5">switch <condition pos:start="81:12" pos:end="81:14">(<expr pos:start="81:13" pos:end="81:13"><name pos:start="81:13" pos:end="81:13">r</name></expr>)</condition> <block pos:start="81:16" pos:end="127:5">{<block_content pos:start="83:5" pos:end="125:17">

    <case pos:start="83:5" pos:end="83:39">case <expr pos:start="83:10" pos:end="83:38"><name pos:start="83:10" pos:end="83:38">LIBSSH2_KNOWNHOST_CHECK_MATCH</name></expr>:</case>

        <comment type="block" pos:start="85:9" pos:end="85:16">/* OK */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:47"><expr pos:start="87:9" pos:end="87:46"><call pos:start="87:9" pos:end="87:46"><name pos:start="87:9" pos:end="87:15">DPRINTF</name><argument_list pos:start="87:16" pos:end="87:46">(<argument pos:start="87:17" pos:end="87:33"><expr pos:start="87:17" pos:end="87:33"><literal type="string" pos:start="87:17" pos:end="87:33">"host key OK: %s"</literal></expr></argument>, <argument pos:start="87:36" pos:end="87:45"><expr pos:start="87:36" pos:end="87:45"><name pos:start="87:36" pos:end="87:45"><name pos:start="87:36" pos:end="87:40">found</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:45">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:42">case <expr pos:start="91:10" pos:end="91:41"><name pos:start="91:10" pos:end="91:41">LIBSSH2_KNOWNHOST_CHECK_MISMATCH</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">-</operator><name pos:start="93:16" pos:end="93:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:41"><expr pos:start="95:9" pos:end="97:40"><call pos:start="95:9" pos:end="97:40"><name pos:start="95:9" pos:end="95:28">session_error_report</name><argument_list pos:start="95:29" pos:end="97:40">(<argument pos:start="95:30" pos:end="95:30"><expr pos:start="95:30" pos:end="95:30"><name pos:start="95:30" pos:end="95:30">s</name></expr></argument>, <argument pos:start="95:33" pos:end="95:95"><expr pos:start="95:33" pos:end="95:95"><literal type="string" pos:start="95:33" pos:end="95:95">"host key does not match the one in known_hosts (found key %s)"</literal></expr></argument>,

                             <argument pos:start="97:30" pos:end="97:39"><expr pos:start="97:30" pos:end="97:39"><name pos:start="97:30" pos:end="97:39"><name pos:start="97:30" pos:end="97:34">found</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:39">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:17">goto <name pos:start="99:14" pos:end="99:16">out</name>;</goto>

    <case pos:start="101:5" pos:end="101:42">case <expr pos:start="101:10" pos:end="101:41"><name pos:start="101:10" pos:end="101:41">LIBSSH2_KNOWNHOST_CHECK_NOTFOUND</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:22"><expr pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <operator pos:start="103:15" pos:end="103:15">-</operator><name pos:start="103:16" pos:end="103:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:72"><expr pos:start="105:9" pos:end="105:71"><call pos:start="105:9" pos:end="105:71"><name pos:start="105:9" pos:end="105:28">session_error_report</name><argument_list pos:start="105:29" pos:end="105:71">(<argument pos:start="105:30" pos:end="105:30"><expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">s</name></expr></argument>, <argument pos:start="105:33" pos:end="105:70"><expr pos:start="105:33" pos:end="105:70"><literal type="string" pos:start="105:33" pos:end="105:70">"no host key was found in known_hosts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:17">goto <name pos:start="107:14" pos:end="107:16">out</name>;</goto>

    <case pos:start="109:5" pos:end="109:41">case <expr pos:start="109:10" pos:end="109:40"><name pos:start="109:10" pos:end="109:40">LIBSSH2_KNOWNHOST_CHECK_FAILURE</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:22"><expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <operator pos:start="111:15" pos:end="111:15">-</operator><name pos:start="111:16" pos:end="111:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:82"><expr pos:start="113:9" pos:end="113:81"><call pos:start="113:9" pos:end="113:81"><name pos:start="113:9" pos:end="113:28">session_error_report</name><argument_list pos:start="113:29" pos:end="113:81">(<argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><name pos:start="113:30" pos:end="113:30">s</name></expr></argument>, <argument pos:start="113:33" pos:end="113:80"><expr pos:start="113:33" pos:end="113:80"><literal type="string" pos:start="113:33" pos:end="113:80">"failure matching the host key with known_hosts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="115:9" pos:end="115:17">goto <name pos:start="115:14" pos:end="115:16">out</name>;</goto>

    <default pos:start="117:5" pos:end="117:12">default:</default>

        <expr_stmt pos:start="119:9" pos:end="119:22"><expr pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <operator pos:start="119:15" pos:end="119:15">-</operator><name pos:start="119:16" pos:end="119:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="123:32"><expr pos:start="121:9" pos:end="123:31"><call pos:start="121:9" pos:end="123:31"><name pos:start="121:9" pos:end="121:28">session_error_report</name><argument_list pos:start="121:29" pos:end="123:31">(<argument pos:start="121:30" pos:end="121:30"><expr pos:start="121:30" pos:end="121:30"><name pos:start="121:30" pos:end="121:30">s</name></expr></argument>, <argument pos:start="121:33" pos:end="121:91"><expr pos:start="121:33" pos:end="121:91"><literal type="string" pos:start="121:33" pos:end="121:91">"unknown error matching the host key with known_hosts (%d)"</literal></expr></argument>,

                             <argument pos:start="123:30" pos:end="123:30"><expr pos:start="123:30" pos:end="123:30"><name pos:start="123:30" pos:end="123:30">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="125:9" pos:end="125:17">goto <name pos:start="125:14" pos:end="125:16">out</name>;</goto>

    </block_content>}</block></switch>



    <comment type="block" pos:start="131:5" pos:end="131:42">/* known_hosts checking successful. */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:12"><expr pos:start="133:5" pos:end="133:11"><name pos:start="133:5" pos:end="133:7">ret</name> <operator pos:start="133:9" pos:end="133:9">=</operator> <literal type="number" pos:start="133:11" pos:end="133:11">0</literal></expr>;</expr_stmt>



 <label pos:start="137:2" pos:end="137:5"><name pos:start="137:2" pos:end="137:4">out</name>:</label>

    <if_stmt pos:start="139:5" pos:end="143:5"><if pos:start="139:5" pos:end="143:5">if <condition pos:start="139:8" pos:end="139:20">(<expr pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:11">knh</name> <operator pos:start="139:13" pos:end="139:14">!=</operator> <name pos:start="139:16" pos:end="139:19">NULL</name></expr>)</condition> <block pos:start="139:22" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:36">

        <expr_stmt pos:start="141:9" pos:end="141:36"><expr pos:start="141:9" pos:end="141:35"><call pos:start="141:9" pos:end="141:35"><name pos:start="141:9" pos:end="141:30">libssh2_knownhost_free</name><argument_list pos:start="141:31" pos:end="141:35">(<argument pos:start="141:32" pos:end="141:34"><expr pos:start="141:32" pos:end="141:34"><name pos:start="141:32" pos:end="141:34">knh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:21"><expr pos:start="145:5" pos:end="145:20"><call pos:start="145:5" pos:end="145:20"><name pos:start="145:5" pos:end="145:10">g_free</name><argument_list pos:start="145:11" pos:end="145:20">(<argument pos:start="145:12" pos:end="145:19"><expr pos:start="145:12" pos:end="145:19"><name pos:start="145:12" pos:end="145:19">knh_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:15">return <expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
