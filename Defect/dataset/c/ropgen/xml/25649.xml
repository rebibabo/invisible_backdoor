<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25649.c" pos:tabs="8"><function pos:start="1:1" pos:end="32:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_audio4</name><parameter_list pos:start="1:46" pos:end="4:62">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,
                                              <parameter pos:start="2:47" pos:end="2:60"><decl pos:start="2:47" pos:end="2:60"><type pos:start="2:47" pos:end="2:60"><name pos:start="2:47" pos:end="2:53">AVFrame</name> <modifier pos:start="2:55" pos:end="2:55">*</modifier></type><name pos:start="2:56" pos:end="2:60">frame</name></decl></parameter>,
                                              <parameter pos:start="3:47" pos:end="3:64"><decl pos:start="3:47" pos:end="3:64"><type pos:start="3:47" pos:end="3:64"><name pos:start="3:47" pos:end="3:49">int</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:64">got_frame_ptr</name></decl></parameter>,
                                              <parameter pos:start="4:47" pos:end="4:61"><decl pos:start="4:47" pos:end="4:61"><type pos:start="4:47" pos:end="4:61"><name pos:start="4:47" pos:end="4:54">AVPacket</name> <modifier pos:start="4:56" pos:end="4:56">*</modifier></type><name pos:start="4:57" pos:end="4:61">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="32:1">{<block_content pos:start="6:5" pos:end="31:15">
    <decl_stmt pos:start="6:5" pos:end="6:25"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:14">planar</name></decl>, <decl pos:start="6:17" pos:end="6:24"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:17" pos:end="6:24">channels</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:23"><expr pos:start="8:5" pos:end="8:22"><operator pos:start="8:5" pos:end="8:5">*</operator><name pos:start="8:6" pos:end="8:18">got_frame_ptr</name> <operator pos:start="8:20" pos:end="8:20">=</operator> <literal type="number" pos:start="8:22" pos:end="8:22">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:23"><expr pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:9">avctx</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:14">pkt</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <name pos:start="9:18" pos:end="9:22">avpkt</name></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="13:5"><if pos:start="10:5" pos:end="13:5">if <condition pos:start="10:8" pos:end="10:36">(<expr pos:start="10:9" pos:end="10:35"><operator pos:start="10:9" pos:end="10:9">!</operator><name pos:start="10:10" pos:end="10:20"><name pos:start="10:10" pos:end="10:14">avpkt</name><operator pos:start="10:15" pos:end="10:16">-&gt;</operator><name pos:start="10:17" pos:end="10:20">data</name></name> <operator pos:start="10:22" pos:end="10:23">&amp;&amp;</operator> <name pos:start="10:25" pos:end="10:35"><name pos:start="10:25" pos:end="10:29">avpkt</name><operator pos:start="10:30" pos:end="10:31">-&gt;</operator><name pos:start="10:32" pos:end="10:35">size</name></name></expr>)</condition> <block pos:start="10:38" pos:end="13:5">{<block_content pos:start="11:9" pos:end="12:31">
        <expr_stmt pos:start="11:9" pos:end="11:78"><expr pos:start="11:9" pos:end="11:77"><call pos:start="11:9" pos:end="11:77"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:77">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20">avctx</name></expr></argument>, <argument pos:start="11:23" pos:end="11:34"><expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:37" pos:end="11:76"><expr pos:start="11:37" pos:end="11:76"><literal type="string" pos:start="11:37" pos:end="11:76">"invalid packet: NULL data, size != 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="12:9" pos:end="12:31">return <expr pos:start="12:16" pos:end="12:30"><call pos:start="12:16" pos:end="12:30"><name pos:start="12:16" pos:end="12:22">AVERROR</name><argument_list pos:start="12:23" pos:end="12:30">(<argument pos:start="12:24" pos:end="12:29"><expr pos:start="12:24" pos:end="12:29"><name pos:start="12:24" pos:end="12:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:37"><expr pos:start="14:5" pos:end="14:36"><call pos:start="14:5" pos:end="14:36"><name pos:start="14:5" pos:end="14:22">apply_param_change</name><argument_list pos:start="14:23" pos:end="14:36">(<argument pos:start="14:24" pos:end="14:28"><expr pos:start="14:24" pos:end="14:28"><name pos:start="14:24" pos:end="14:28">avctx</name></expr></argument>, <argument pos:start="14:31" pos:end="14:35"><expr pos:start="14:31" pos:end="14:35"><name pos:start="14:31" pos:end="14:35">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:70">(<expr pos:start="15:9" pos:end="15:69"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:35"><name pos:start="15:10" pos:end="15:14">avctx</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:21">codec</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:35">capabilities</name></name> <operator pos:start="15:37" pos:end="15:37">&amp;</operator> <name pos:start="15:39" pos:end="15:53">CODEC_CAP_DELAY</name><operator pos:start="15:54" pos:end="15:54">)</operator> <operator pos:start="15:56" pos:end="15:57">||</operator> <name pos:start="15:59" pos:end="15:69"><name pos:start="15:59" pos:end="15:63">avpkt</name><operator pos:start="15:64" pos:end="15:65">-&gt;</operator><name pos:start="15:66" pos:end="15:69">size</name></name></expr>)</condition> <block pos:start="15:72" pos:end="23:5">{<block_content pos:start="16:9" pos:end="22:9">
        <expr_stmt pos:start="16:9" pos:end="16:71"><expr pos:start="16:9" pos:end="16:70"><name pos:start="16:9" pos:end="16:11">ret</name> <operator pos:start="16:13" pos:end="16:13">=</operator> <call pos:start="16:15" pos:end="16:70"><name pos:start="16:15" pos:end="16:34"><name pos:start="16:15" pos:end="16:19">avctx</name><operator pos:start="16:20" pos:end="16:21">-&gt;</operator><name pos:start="16:22" pos:end="16:26">codec</name><operator pos:start="16:27" pos:end="16:28">-&gt;</operator><name pos:start="16:29" pos:end="16:34">decode</name></name><argument_list pos:start="16:35" pos:end="16:70">(<argument pos:start="16:36" pos:end="16:40"><expr pos:start="16:36" pos:end="16:40"><name pos:start="16:36" pos:end="16:40">avctx</name></expr></argument>, <argument pos:start="16:43" pos:end="16:47"><expr pos:start="16:43" pos:end="16:47"><name pos:start="16:43" pos:end="16:47">frame</name></expr></argument>, <argument pos:start="16:50" pos:end="16:62"><expr pos:start="16:50" pos:end="16:62"><name pos:start="16:50" pos:end="16:62">got_frame_ptr</name></expr></argument>, <argument pos:start="16:65" pos:end="16:69"><expr pos:start="16:65" pos:end="16:69"><name pos:start="16:65" pos:end="16:69">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="22:9"><if pos:start="17:9" pos:end="22:9">if <condition pos:start="17:12" pos:end="17:39">(<expr pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:18">&gt;=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">0</literal> <operator pos:start="17:22" pos:end="17:23">&amp;&amp;</operator> <operator pos:start="17:25" pos:end="17:25">*</operator><name pos:start="17:26" pos:end="17:38">got_frame_ptr</name></expr>)</condition> <block pos:start="17:41" pos:end="22:9">{<block_content pos:start="18:13" pos:end="21:50">
            <expr_stmt pos:start="18:13" pos:end="18:34"><expr pos:start="18:13" pos:end="18:33"><name pos:start="18:13" pos:end="18:31"><name pos:start="18:13" pos:end="18:17">avctx</name><operator pos:start="18:18" pos:end="18:19">-&gt;</operator><name pos:start="18:20" pos:end="18:31">frame_number</name></name><operator pos:start="18:32" pos:end="18:33">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:40"><expr pos:start="19:13" pos:end="19:39"><name pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:17">frame</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">pkt_dts</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <name pos:start="19:30" pos:end="19:39"><name pos:start="19:30" pos:end="19:34">avpkt</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:39">dts</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="20:13" pos:end="21:50"><if pos:start="20:13" pos:end="21:50">if <condition pos:start="20:16" pos:end="20:52">(<expr pos:start="20:17" pos:end="20:51"><name pos:start="20:17" pos:end="20:29"><name pos:start="20:17" pos:end="20:21">frame</name><operator pos:start="20:22" pos:end="20:23">-&gt;</operator><name pos:start="20:24" pos:end="20:29">format</name></name> <operator pos:start="20:31" pos:end="20:32">==</operator> <name pos:start="20:34" pos:end="20:51">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:50"><block_content pos:start="21:17" pos:end="21:50">
                <expr_stmt pos:start="21:17" pos:end="21:50"><expr pos:start="21:17" pos:end="21:49"><name pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:21">frame</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:29">format</name></name> <operator pos:start="21:31" pos:end="21:31">=</operator> <name pos:start="21:33" pos:end="21:49"><name pos:start="21:33" pos:end="21:37">avctx</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:49">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="24:5" pos:end="26:46">/* many decoders assign whole AVFrames, thus overwriting extended_data;
     * make sure it's set correctly; assume decoders that actually use
     * extended_data are doing it correctly */</comment>
    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:10">planar</name>   <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:53"><name pos:start="27:16" pos:end="27:38">av_sample_fmt_is_planar</name><argument_list pos:start="27:39" pos:end="27:53">(<argument pos:start="27:40" pos:end="27:52"><expr pos:start="27:40" pos:end="27:52"><name pos:start="27:40" pos:end="27:52"><name pos:start="27:40" pos:end="27:44">frame</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:52">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:72"><expr pos:start="28:5" pos:end="28:71"><name pos:start="28:5" pos:end="28:12">channels</name> <operator pos:start="28:14" pos:end="28:14">=</operator> <call pos:start="28:16" pos:end="28:71"><name pos:start="28:16" pos:end="28:48">av_get_channel_layout_nb_channels</name><argument_list pos:start="28:49" pos:end="28:71">(<argument pos:start="28:50" pos:end="28:70"><expr pos:start="28:50" pos:end="28:70"><name pos:start="28:50" pos:end="28:70"><name pos:start="28:50" pos:end="28:54">frame</name><operator pos:start="28:55" pos:end="28:56">-&gt;</operator><name pos:start="28:57" pos:end="28:70">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="29:5" pos:end="30:43"><if pos:start="29:5" pos:end="30:43">if <condition pos:start="29:8" pos:end="29:53">(<expr pos:start="29:9" pos:end="29:52"><operator pos:start="29:9" pos:end="29:9">!</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:16">planar</name> <operator pos:start="29:18" pos:end="29:19">&amp;&amp;</operator> <name pos:start="29:21" pos:end="29:28">channels</name> <operator pos:start="29:30" pos:end="29:30">&gt;</operator> <name pos:start="29:32" pos:end="29:51">AV_NUM_DATA_POINTERS</name><operator pos:start="29:52" pos:end="29:52">)</operator></expr>)</condition><block type="pseudo" pos:start="30:9" pos:end="30:43"><block_content pos:start="30:9" pos:end="30:43">
        <expr_stmt pos:start="30:9" pos:end="30:43"><expr pos:start="30:9" pos:end="30:42"><name pos:start="30:9" pos:end="30:28"><name pos:start="30:9" pos:end="30:13">frame</name><operator pos:start="30:14" pos:end="30:15">-&gt;</operator><name pos:start="30:16" pos:end="30:28">extended_data</name></name> <operator pos:start="30:30" pos:end="30:30">=</operator> <name pos:start="30:32" pos:end="30:42"><name pos:start="30:32" pos:end="30:36">frame</name><operator pos:start="30:37" pos:end="30:38">-&gt;</operator><name pos:start="30:39" pos:end="30:42">data</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>
</block_content>}</block></function></unit>
