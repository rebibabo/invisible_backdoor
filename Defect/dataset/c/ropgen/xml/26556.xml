<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26556.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">avs_read_packet</name><parameter_list pos:start="1:27" pos:end="1:63">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type> <name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">AvsFormat</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">avs</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">sub_type</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>, <decl pos:start="7:23" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:26">size</name> <init pos:start="7:28" pos:end="7:30">= <expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">AvsBlockType</name></type> <name pos:start="9:18" pos:end="9:21">type</name> <init pos:start="9:23" pos:end="9:32">= <expr pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:32">AVS_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">palette_size</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:19">palette</name><index pos:start="13:20" pos:end="13:32">[<expr pos:start="13:21" pos:end="13:31"><literal type="number" pos:start="13:21" pos:end="13:21">4</literal> <operator pos:start="13:23" pos:end="13:23">+</operator> <literal type="number" pos:start="13:25" pos:end="13:25">3</literal> <operator pos:start="13:27" pos:end="13:27">*</operator> <literal type="number" pos:start="13:29" pos:end="13:31">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:21"><if pos:start="19:5" pos:end="23:21">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:11">avs</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:33">remaining_audio_size</name></name> <operator pos:start="19:35" pos:end="19:35">&gt;</operator> <literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="23:21"><block_content pos:start="21:9" pos:end="23:21">

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:46">(<expr pos:start="21:13" pos:end="21:45"><call pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:33">avs_read_audio_packet</name><argument_list pos:start="21:34" pos:end="21:41">(<argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">s</name></expr></argument>, <argument pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:40">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="21:43" pos:end="21:43">&gt;</operator> <literal type="number" pos:start="21:45" pos:end="21:45">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <while pos:start="27:5" pos:end="143:5">while <condition pos:start="27:11" pos:end="27:13">(<expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">1</literal></expr>)</condition> <block pos:start="27:15" pos:end="143:5">{<block_content pos:start="29:9" pos:end="141:9">

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:43">(<expr pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:15">avs</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:37">remaining_frame_size</name></name> <operator pos:start="29:39" pos:end="29:40">&lt;=</operator> <literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr>)</condition> <block pos:start="29:45" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:61">

            <if_stmt pos:start="31:13" pos:end="33:36"><if pos:start="31:13" pos:end="33:36">if <condition pos:start="31:16" pos:end="31:34">(<expr pos:start="31:17" pos:end="31:33"><operator pos:start="31:17" pos:end="31:17">!</operator><call pos:start="31:18" pos:end="31:33"><name pos:start="31:18" pos:end="31:26">avio_rl16</name><argument_list pos:start="31:27" pos:end="31:33">(<argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:32">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:36"><block_content pos:start="33:17" pos:end="33:36">    <comment type="block" pos:start="31:39" pos:end="31:53">/* found EOF */</comment>

                <return pos:start="33:17" pos:end="33:36">return <expr pos:start="33:24" pos:end="33:35"><call pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:30">AVERROR</name><argument_list pos:start="33:31" pos:end="33:35">(<argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:61"><expr pos:start="35:13" pos:end="35:60"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:15">avs</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:37">remaining_frame_size</name></name> <operator pos:start="35:39" pos:end="35:39">=</operator> <call pos:start="35:41" pos:end="35:56"><name pos:start="35:41" pos:end="35:49">avio_rl16</name><argument_list pos:start="35:50" pos:end="35:56">(<argument pos:start="35:51" pos:end="35:55"><expr pos:start="35:51" pos:end="35:55"><name pos:start="35:51" pos:end="35:55"><name pos:start="35:51" pos:end="35:51">s</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:55">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:58" pos:end="35:58">-</operator> <literal type="number" pos:start="35:60" pos:end="35:60">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="41:9" pos:end="141:9">while <condition pos:start="41:15" pos:end="41:45">(<expr pos:start="41:16" pos:end="41:44"><name pos:start="41:16" pos:end="41:40"><name pos:start="41:16" pos:end="41:18">avs</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:40">remaining_frame_size</name></name> <operator pos:start="41:42" pos:end="41:42">&gt;</operator> <literal type="number" pos:start="41:44" pos:end="41:44">0</literal></expr>)</condition> <block pos:start="41:47" pos:end="141:9">{<block_content pos:start="43:13" pos:end="139:13">

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:20">sub_type</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:37"><name pos:start="43:24" pos:end="43:30">avio_r8</name><argument_list pos:start="43:31" pos:end="43:37">(<argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:16">type</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:33"><name pos:start="45:20" pos:end="45:26">avio_r8</name><argument_list pos:start="45:27" pos:end="45:33">(<argument pos:start="45:28" pos:end="45:32"><expr pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:16">size</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:35"><name pos:start="47:20" pos:end="47:28">avio_rl16</name><argument_list pos:start="47:29" pos:end="47:35">(<argument pos:start="47:30" pos:end="47:34"><expr pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="51:43"><if pos:start="49:13" pos:end="51:43">if <condition pos:start="49:16" pos:end="49:25">(<expr pos:start="49:17" pos:end="49:24"><name pos:start="49:17" pos:end="49:20">size</name> <operator pos:start="49:22" pos:end="49:22">&lt;</operator> <literal type="number" pos:start="49:24" pos:end="49:24">4</literal></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:43"><block_content pos:start="51:17" pos:end="51:43">

                <return pos:start="51:17" pos:end="51:43">return <expr pos:start="51:24" pos:end="51:42"><name pos:start="51:24" pos:end="51:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:46"><expr pos:start="53:13" pos:end="53:45"><name pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:15">avs</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:37">remaining_frame_size</name></name> <operator pos:start="53:39" pos:end="53:40">-=</operator> <name pos:start="53:42" pos:end="53:45">size</name></expr>;</expr_stmt>



            <switch pos:start="57:13" pos:end="139:13">switch <condition pos:start="57:20" pos:end="57:25">(<expr pos:start="57:21" pos:end="57:24"><name pos:start="57:21" pos:end="57:24">type</name></expr>)</condition> <block pos:start="57:27" pos:end="139:13">{<block_content pos:start="59:13" pos:end="137:43">

            <case pos:start="59:13" pos:end="59:29">case <expr pos:start="59:18" pos:end="59:28"><name pos:start="59:18" pos:end="59:28">AVS_PALETTE</name></expr>:</case>

                <if_stmt pos:start="61:17" pos:end="63:47"><if pos:start="61:17" pos:end="63:47">if <condition pos:start="61:20" pos:end="61:47">(<expr pos:start="61:21" pos:end="61:46"><name pos:start="61:21" pos:end="61:24">size</name> <operator pos:start="61:26" pos:end="61:26">-</operator> <literal type="number" pos:start="61:28" pos:end="61:28">4</literal> <operator pos:start="61:30" pos:end="61:30">&gt;</operator> <sizeof pos:start="61:32" pos:end="61:46">sizeof<argument_list pos:start="61:38" pos:end="61:46">(<argument pos:start="61:39" pos:end="61:45"><expr pos:start="61:39" pos:end="61:45"><name pos:start="61:39" pos:end="61:45">palette</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="63:21" pos:end="63:47"><block_content pos:start="63:21" pos:end="63:47">

                    <return pos:start="63:21" pos:end="63:47">return <expr pos:start="63:28" pos:end="63:46"><name pos:start="63:28" pos:end="63:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:58"><expr pos:start="65:17" pos:end="65:57"><name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:57"><name pos:start="65:23" pos:end="65:31">avio_read</name><argument_list pos:start="65:32" pos:end="65:57">(<argument pos:start="65:33" pos:end="65:37"><expr pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:33">s</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:37">pb</name></name></expr></argument>, <argument pos:start="65:40" pos:end="65:46"><expr pos:start="65:40" pos:end="65:46"><name pos:start="65:40" pos:end="65:46">palette</name></expr></argument>, <argument pos:start="65:49" pos:end="65:56"><expr pos:start="65:49" pos:end="65:56"><name pos:start="65:49" pos:end="65:52">size</name> <operator pos:start="65:54" pos:end="65:54">-</operator> <literal type="number" pos:start="65:56" pos:end="65:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="67:17" pos:end="69:40"><if pos:start="67:17" pos:end="69:40">if <condition pos:start="67:20" pos:end="67:35">(<expr pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:23">ret</name> <operator pos:start="67:25" pos:end="67:25">&lt;</operator> <name pos:start="67:27" pos:end="67:30">size</name> <operator pos:start="67:32" pos:end="67:32">-</operator> <literal type="number" pos:start="67:34" pos:end="67:34">4</literal></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:40"><block_content pos:start="69:21" pos:end="69:40">

                    <return pos:start="69:21" pos:end="69:40">return <expr pos:start="69:28" pos:end="69:39"><call pos:start="69:28" pos:end="69:39"><name pos:start="69:28" pos:end="69:34">AVERROR</name><argument_list pos:start="69:35" pos:end="69:39">(<argument pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:38">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:28">palette_size</name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:35">size</name></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>



            <case pos:start="77:13" pos:end="77:27">case <expr pos:start="77:18" pos:end="77:26"><name pos:start="77:18" pos:end="77:26">AVS_VIDEO</name></expr>:</case>

                <if_stmt pos:start="79:17" pos:end="101:17"><if pos:start="79:17" pos:end="101:17">if <condition pos:start="79:20" pos:end="79:35">(<expr pos:start="79:21" pos:end="79:34"><operator pos:start="79:21" pos:end="79:21">!</operator><name pos:start="79:22" pos:end="79:34"><name pos:start="79:22" pos:end="79:24">avs</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:34">st_video</name></name></expr>)</condition> <block pos:start="79:37" pos:end="101:17">{<block_content pos:start="81:21" pos:end="99:78">

                    <expr_stmt pos:start="81:21" pos:end="81:65"><expr pos:start="81:21" pos:end="81:64"><name pos:start="81:21" pos:end="81:33"><name pos:start="81:21" pos:end="81:23">avs</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:33">st_video</name></name> <operator pos:start="81:35" pos:end="81:35">=</operator> <call pos:start="81:37" pos:end="81:64"><name pos:start="81:37" pos:end="81:55">avformat_new_stream</name><argument_list pos:start="81:56" pos:end="81:64">(<argument pos:start="81:57" pos:end="81:57"><expr pos:start="81:57" pos:end="81:57"><name pos:start="81:57" pos:end="81:57">s</name></expr></argument>, <argument pos:start="81:60" pos:end="81:63"><expr pos:start="81:60" pos:end="81:63"><name pos:start="81:60" pos:end="81:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="83:21" pos:end="85:47"><if pos:start="83:21" pos:end="85:47">if <condition pos:start="83:24" pos:end="83:46">(<expr pos:start="83:25" pos:end="83:45"><name pos:start="83:25" pos:end="83:37"><name pos:start="83:25" pos:end="83:27">avs</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:37">st_video</name></name> <operator pos:start="83:39" pos:end="83:40">==</operator> <name pos:start="83:42" pos:end="83:45">NULL</name></expr>)</condition><block type="pseudo" pos:start="85:25" pos:end="85:47"><block_content pos:start="85:25" pos:end="85:47">

                        <return pos:start="85:25" pos:end="85:47">return <expr pos:start="85:32" pos:end="85:46"><call pos:start="85:32" pos:end="85:46"><name pos:start="85:32" pos:end="85:38">AVERROR</name><argument_list pos:start="85:39" pos:end="85:46">(<argument pos:start="85:40" pos:end="85:45"><expr pos:start="85:40" pos:end="85:45"><name pos:start="85:40" pos:end="85:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:74"><expr pos:start="87:21" pos:end="87:73"><name pos:start="87:21" pos:end="87:52"><name pos:start="87:21" pos:end="87:23">avs</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:33">st_video</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:40">codec</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:52">codec_type</name></name> <operator pos:start="87:54" pos:end="87:54">=</operator> <name pos:start="87:56" pos:end="87:73">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:69"><expr pos:start="89:21" pos:end="89:68"><name pos:start="89:21" pos:end="89:50"><name pos:start="89:21" pos:end="89:23">avs</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:33">st_video</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:40">codec</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:50">codec_id</name></name> <operator pos:start="89:52" pos:end="89:52">=</operator> <name pos:start="89:54" pos:end="89:68">AV_CODEC_ID_AVS</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:61"><expr pos:start="91:21" pos:end="91:60"><name pos:start="91:21" pos:end="91:47"><name pos:start="91:21" pos:end="91:23">avs</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:33">st_video</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:40">codec</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:47">width</name></name> <operator pos:start="91:49" pos:end="91:49">=</operator> <name pos:start="91:51" pos:end="91:60"><name pos:start="91:51" pos:end="91:53">avs</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:60">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:63"><expr pos:start="93:21" pos:end="93:62"><name pos:start="93:21" pos:end="93:48"><name pos:start="93:21" pos:end="93:23">avs</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:33">st_video</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:40">codec</name><operator pos:start="93:41" pos:end="93:42">-&gt;</operator><name pos:start="93:43" pos:end="93:48">height</name></name> <operator pos:start="93:50" pos:end="93:50">=</operator> <name pos:start="93:52" pos:end="93:62"><name pos:start="93:52" pos:end="93:54">avs</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:62">height</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:85"><expr pos:start="95:21" pos:end="95:84"><name pos:start="95:21" pos:end="95:63"><name pos:start="95:21" pos:end="95:23">avs</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:33">st_video</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:40">codec</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:63">bits_per_coded_sample</name></name><operator pos:start="95:64" pos:end="95:64">=</operator><name pos:start="95:65" pos:end="95:84"><name pos:start="95:65" pos:end="95:67">avs</name><operator pos:start="95:68" pos:end="95:69">-&gt;</operator><name pos:start="95:70" pos:end="95:84">bits_per_sample</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:62"><expr pos:start="97:21" pos:end="97:61"><name pos:start="97:21" pos:end="97:44"><name pos:start="97:21" pos:end="97:23">avs</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:33">st_video</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:44">nb_frames</name></name> <operator pos:start="97:46" pos:end="97:46">=</operator> <name pos:start="97:48" pos:end="97:61"><name pos:start="97:48" pos:end="97:50">avs</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:61">nb_frames</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:78"><expr pos:start="99:21" pos:end="99:77"><name pos:start="99:21" pos:end="99:49"><name pos:start="99:21" pos:end="99:23">avs</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:33">st_video</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:49">avg_frame_rate</name></name> <operator pos:start="99:51" pos:end="99:51">=</operator> <operator pos:start="99:53" pos:end="99:53">(</operator><name pos:start="99:54" pos:end="99:63">AVRational</name><operator pos:start="99:64" pos:end="99:64">)</operator><block pos:start="99:65" pos:end="99:77">{<expr pos:start="99:66" pos:end="99:73"><name pos:start="99:66" pos:end="99:73"><name pos:start="99:66" pos:end="99:68">avs</name><operator pos:start="99:69" pos:end="99:70">-&gt;</operator><name pos:start="99:71" pos:end="99:73">fps</name></name></expr>, <expr pos:start="99:76" pos:end="99:76"><literal type="number" pos:start="99:76" pos:end="99:76">1</literal></expr>}</block></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <return pos:start="103:17" pos:end="105:68">return <expr pos:start="103:24" pos:end="105:67"><call pos:start="103:24" pos:end="105:67"><name pos:start="103:24" pos:end="103:44">avs_read_video_packet</name><argument_list pos:start="103:45" pos:end="105:67">(<argument pos:start="103:46" pos:end="103:46"><expr pos:start="103:46" pos:end="103:46"><name pos:start="103:46" pos:end="103:46">s</name></expr></argument>, <argument pos:start="103:49" pos:end="103:51"><expr pos:start="103:49" pos:end="103:51"><name pos:start="103:49" pos:end="103:51">pkt</name></expr></argument>, <argument pos:start="103:54" pos:end="103:57"><expr pos:start="103:54" pos:end="103:57"><name pos:start="103:54" pos:end="103:57">type</name></expr></argument>, <argument pos:start="103:60" pos:end="103:67"><expr pos:start="103:60" pos:end="103:67"><name pos:start="103:60" pos:end="103:67">sub_type</name></expr></argument>, <argument pos:start="103:70" pos:end="103:73"><expr pos:start="103:70" pos:end="103:73"><name pos:start="103:70" pos:end="103:73">size</name></expr></argument>,

                                             <argument pos:start="105:46" pos:end="105:52"><expr pos:start="105:46" pos:end="105:52"><name pos:start="105:46" pos:end="105:52">palette</name></expr></argument>, <argument pos:start="105:55" pos:end="105:66"><expr pos:start="105:55" pos:end="105:66"><name pos:start="105:55" pos:end="105:66">palette_size</name></expr></argument>)</argument_list></call></expr>;</return>



            <case pos:start="109:13" pos:end="109:27">case <expr pos:start="109:18" pos:end="109:26"><name pos:start="109:18" pos:end="109:26">AVS_AUDIO</name></expr>:</case>

                <if_stmt pos:start="111:17" pos:end="121:17"><if pos:start="111:17" pos:end="121:17">if <condition pos:start="111:20" pos:end="111:35">(<expr pos:start="111:21" pos:end="111:34"><operator pos:start="111:21" pos:end="111:21">!</operator><name pos:start="111:22" pos:end="111:34"><name pos:start="111:22" pos:end="111:24">avs</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:34">st_audio</name></name></expr>)</condition> <block pos:start="111:37" pos:end="121:17">{<block_content pos:start="113:21" pos:end="119:74">

                    <expr_stmt pos:start="113:21" pos:end="113:65"><expr pos:start="113:21" pos:end="113:64"><name pos:start="113:21" pos:end="113:33"><name pos:start="113:21" pos:end="113:23">avs</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:33">st_audio</name></name> <operator pos:start="113:35" pos:end="113:35">=</operator> <call pos:start="113:37" pos:end="113:64"><name pos:start="113:37" pos:end="113:55">avformat_new_stream</name><argument_list pos:start="113:56" pos:end="113:64">(<argument pos:start="113:57" pos:end="113:57"><expr pos:start="113:57" pos:end="113:57"><name pos:start="113:57" pos:end="113:57">s</name></expr></argument>, <argument pos:start="113:60" pos:end="113:63"><expr pos:start="113:60" pos:end="113:63"><name pos:start="113:60" pos:end="113:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="115:21" pos:end="117:47"><if pos:start="115:21" pos:end="117:47">if <condition pos:start="115:24" pos:end="115:46">(<expr pos:start="115:25" pos:end="115:45"><name pos:start="115:25" pos:end="115:37"><name pos:start="115:25" pos:end="115:27">avs</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:37">st_audio</name></name> <operator pos:start="115:39" pos:end="115:40">==</operator> <name pos:start="115:42" pos:end="115:45">NULL</name></expr>)</condition><block type="pseudo" pos:start="117:25" pos:end="117:47"><block_content pos:start="117:25" pos:end="117:47">

                        <return pos:start="117:25" pos:end="117:47">return <expr pos:start="117:32" pos:end="117:46"><call pos:start="117:32" pos:end="117:46"><name pos:start="117:32" pos:end="117:38">AVERROR</name><argument_list pos:start="117:39" pos:end="117:46">(<argument pos:start="117:40" pos:end="117:45"><expr pos:start="117:40" pos:end="117:45"><name pos:start="117:40" pos:end="117:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:74"><expr pos:start="119:21" pos:end="119:73"><name pos:start="119:21" pos:end="119:52"><name pos:start="119:21" pos:end="119:23">avs</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:33">st_audio</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:40">codec</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:52">codec_type</name></name> <operator pos:start="119:54" pos:end="119:54">=</operator> <name pos:start="119:56" pos:end="119:73">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:53"><expr pos:start="123:17" pos:end="123:52"><name pos:start="123:17" pos:end="123:41"><name pos:start="123:17" pos:end="123:19">avs</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:41">remaining_audio_size</name></name> <operator pos:start="123:43" pos:end="123:43">=</operator> <name pos:start="123:45" pos:end="123:48">size</name> <operator pos:start="123:50" pos:end="123:50">-</operator> <literal type="number" pos:start="123:52" pos:end="123:52">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:53"><expr pos:start="125:17" pos:end="125:52"><name pos:start="125:17" pos:end="125:20">size</name> <operator pos:start="125:22" pos:end="125:22">=</operator> <call pos:start="125:24" pos:end="125:52"><name pos:start="125:24" pos:end="125:44">avs_read_audio_packet</name><argument_list pos:start="125:45" pos:end="125:52">(<argument pos:start="125:46" pos:end="125:46"><expr pos:start="125:46" pos:end="125:46"><name pos:start="125:46" pos:end="125:46">s</name></expr></argument>, <argument pos:start="125:49" pos:end="125:51"><expr pos:start="125:49" pos:end="125:51"><name pos:start="125:49" pos:end="125:51">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="129:32"><if pos:start="127:17" pos:end="129:32">if <condition pos:start="127:20" pos:end="127:30">(<expr pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:24">size</name> <operator pos:start="127:26" pos:end="127:27">!=</operator> <literal type="number" pos:start="127:29" pos:end="127:29">0</literal></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:32"><block_content pos:start="129:21" pos:end="129:32">

                    <return pos:start="129:21" pos:end="129:32">return <expr pos:start="129:28" pos:end="129:31"><name pos:start="129:28" pos:end="129:31">size</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="131:17" pos:end="131:22">break;</break>



            <default pos:start="135:13" pos:end="135:20">default:</default>

                <expr_stmt pos:start="137:17" pos:end="137:43"><expr pos:start="137:17" pos:end="137:42"><call pos:start="137:17" pos:end="137:42"><name pos:start="137:17" pos:end="137:25">avio_skip</name><argument_list pos:start="137:26" pos:end="137:42">(<argument pos:start="137:27" pos:end="137:31"><expr pos:start="137:27" pos:end="137:31"><name pos:start="137:27" pos:end="137:31"><name pos:start="137:27" pos:end="137:27">s</name><operator pos:start="137:28" pos:end="137:29">-&gt;</operator><name pos:start="137:30" pos:end="137:31">pb</name></name></expr></argument>, <argument pos:start="137:34" pos:end="137:41"><expr pos:start="137:34" pos:end="137:41"><name pos:start="137:34" pos:end="137:37">size</name> <operator pos:start="137:39" pos:end="137:39">-</operator> <literal type="number" pos:start="137:41" pos:end="137:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></while>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
