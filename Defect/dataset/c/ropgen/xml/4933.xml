<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4933.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">vhost_verify_ring_part_mapping</name><parameter_list pos:start="1:42" pos:end="9:56">(<parameter pos:start="1:43" pos:end="1:52"><decl pos:start="1:43" pos:end="1:52"><type pos:start="1:43" pos:end="1:52"><name pos:start="1:43" pos:end="1:46">void</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">part</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><name pos:start="3:43" pos:end="3:50">uint64_t</name></type> <name pos:start="3:52" pos:end="3:60">part_addr</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:60"><decl pos:start="5:43" pos:end="5:60"><type pos:start="5:43" pos:end="5:60"><name pos:start="5:43" pos:end="5:50">uint64_t</name></type> <name pos:start="5:52" pos:end="5:60">part_size</name></decl></parameter>,

                                          <parameter pos:start="7:43" pos:end="7:61"><decl pos:start="7:43" pos:end="7:61"><type pos:start="7:43" pos:end="7:61"><name pos:start="7:43" pos:end="7:50">uint64_t</name></type> <name pos:start="7:52" pos:end="7:61">start_addr</name></decl></parameter>,

                                          <parameter pos:start="9:43" pos:end="9:55"><decl pos:start="9:43" pos:end="9:55"><type pos:start="9:43" pos:end="9:55"><name pos:start="9:43" pos:end="9:50">uint64_t</name></type> <name pos:start="9:52" pos:end="9:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="47:1">{<block_content pos:start="13:5" pos:end="45:13">

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:12">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">void</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">r</name> <init pos:start="17:11" pos:end="17:13">= <expr pos:start="17:13" pos:end="17:13"><literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:64">(<expr pos:start="21:9" pos:end="21:63"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:63"><name pos:start="21:10" pos:end="21:23">ranges_overlap</name><argument_list pos:start="21:24" pos:end="21:63">(<argument pos:start="21:25" pos:end="21:34"><expr pos:start="21:25" pos:end="21:34"><name pos:start="21:25" pos:end="21:34">start_addr</name></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">size</name></expr></argument>, <argument pos:start="21:43" pos:end="21:51"><expr pos:start="21:43" pos:end="21:51"><name pos:start="21:43" pos:end="21:51">part_addr</name></expr></argument>, <argument pos:start="21:54" pos:end="21:62"><expr pos:start="21:54" pos:end="21:62"><name pos:start="21:54" pos:end="21:62">part_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:66" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:5">l</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:17">part_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:5">p</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:31">cpu_physical_memory_map</name><argument_list pos:start="29:32" pos:end="29:49">(<argument pos:start="29:33" pos:end="29:41"><expr pos:start="29:33" pos:end="29:41"><name pos:start="29:33" pos:end="29:41">part_addr</name></expr></argument>, <argument pos:start="29:44" pos:end="29:45"><expr pos:start="29:44" pos:end="29:45"><operator pos:start="29:44" pos:end="29:44">&amp;</operator><name pos:start="29:45" pos:end="29:45">l</name></expr></argument>, <argument pos:start="29:48" pos:end="29:48"><expr pos:start="29:48" pos:end="29:48"><literal type="number" pos:start="29:48" pos:end="29:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:29">(<expr pos:start="31:9" pos:end="31:28"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:10">p</name> <operator pos:start="31:12" pos:end="31:13">||</operator> <name pos:start="31:15" pos:end="31:15">l</name> <operator pos:start="31:17" pos:end="31:18">!=</operator> <name pos:start="31:20" pos:end="31:28">part_size</name></expr>)</condition> <block pos:start="31:31" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:20">

        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">r</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <operator pos:start="33:13" pos:end="33:13">-</operator><name pos:start="33:14" pos:end="33:19">ENOMEM</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:9">p</name> <operator pos:start="37:11" pos:end="37:12">!=</operator> <name pos:start="37:14" pos:end="37:17">part</name></expr>)</condition> <block pos:start="37:20" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:19">

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">r</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">-</operator><name pos:start="39:14" pos:end="39:18">EBUSY</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><call pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:29">cpu_physical_memory_unmap</name><argument_list pos:start="43:30" pos:end="43:41">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">p</name></expr></argument>, <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">l</name></expr></argument>, <argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><name pos:start="45:12" pos:end="45:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
