<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13378.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">virtio_ccw_start_ioeventfd</name><parameter_list pos:start="1:39" pos:end="1:60">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:54">VirtioCcwDevice</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:74">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="15:31">(<expr pos:start="11:9" pos:end="15:30"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:20"><name pos:start="11:11" pos:end="11:13">dev</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:20">flags</name></name> <operator pos:start="11:22" pos:end="11:22">&amp;</operator> <name pos:start="11:24" pos:end="11:52">VIRTIO_CCW_FLAG_USE_IOEVENTFD</name><operator pos:start="11:53" pos:end="11:53">)</operator> <operator pos:start="11:55" pos:end="11:56">||</operator>

        <name pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:11">dev</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:31">ioeventfd_disabled</name></name> <operator pos:start="13:33" pos:end="13:34">||</operator>

        <name pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:11">dev</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:30">ioeventfd_started</name></name></expr>)</condition> <block pos:start="15:33" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:8">vdev</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:43"><name pos:start="21:12" pos:end="21:32">virtio_bus_get_device</name><argument_list pos:start="21:33" pos:end="21:43">(<argument pos:start="21:34" pos:end="21:42"><expr pos:start="21:34" pos:end="21:42"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:37">dev</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:42">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="39:5">for <control pos:start="23:9" pos:end="23:46">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">n</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:41"><expr pos:start="23:17" pos:end="23:40"><name pos:start="23:17" pos:end="23:17">n</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:40">VIRTIO_PCI_QUEUE_MAX</name></expr>;</condition> <incr pos:start="23:43" pos:end="23:45"><expr pos:start="23:43" pos:end="23:45"><name pos:start="23:43" pos:end="23:43">n</name><operator pos:start="23:44" pos:end="23:45">++</operator></expr></incr>)</control> <block pos:start="23:48" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:43">(<expr pos:start="25:13" pos:end="25:42"><operator pos:start="25:13" pos:end="25:13">!</operator><call pos:start="25:14" pos:end="25:42"><name pos:start="25:14" pos:end="25:33">virtio_queue_get_num</name><argument_list pos:start="25:34" pos:end="25:42">(<argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><name pos:start="25:35" pos:end="25:38">vdev</name></expr></argument>, <argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:45" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:21">

            <continue pos:start="27:13" pos:end="27:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:9">r</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:66"><name pos:start="31:13" pos:end="31:46">virtio_ccw_set_guest2host_notifier</name><argument_list pos:start="31:47" pos:end="31:66">(<argument pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:50">dev</name></expr></argument>, <argument pos:start="31:53" pos:end="31:53"><expr pos:start="31:53" pos:end="31:53"><name pos:start="31:53" pos:end="31:53">n</name></expr></argument>, <argument pos:start="31:56" pos:end="31:59"><expr pos:start="31:56" pos:end="31:59"><name pos:start="31:56" pos:end="31:59">true</name></expr></argument>, <argument pos:start="31:62" pos:end="31:65"><expr pos:start="31:62" pos:end="31:65"><name pos:start="31:62" pos:end="31:65">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">r</name> <operator pos:start="33:15" pos:end="33:15">&lt;</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>)</condition> <block pos:start="33:20" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:30">

            <goto pos:start="35:13" pos:end="35:30">goto <name pos:start="35:18" pos:end="35:29">assign_error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:7">dev</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:26">ioeventfd_started</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:33">true</name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:11">return;</return>



  <label pos:start="47:3" pos:end="47:15"><name pos:start="47:3" pos:end="47:14">assign_error</name>:</label>

    <while pos:start="49:5" pos:end="61:5">while <condition pos:start="49:11" pos:end="49:20">(<expr pos:start="49:12" pos:end="49:19"><operator pos:start="49:12" pos:end="49:13">--</operator><name pos:start="49:14" pos:end="49:14">n</name> <operator pos:start="49:16" pos:end="49:17">&gt;=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition> <block pos:start="49:22" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:23">

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:43">(<expr pos:start="51:13" pos:end="51:42"><operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:42"><name pos:start="51:14" pos:end="51:33">virtio_queue_get_num</name><argument_list pos:start="51:34" pos:end="51:42">(<argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">vdev</name></expr></argument>, <argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><name pos:start="51:41" pos:end="51:41">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:45" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:21">

            <continue pos:start="53:13" pos:end="53:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:69"><expr pos:start="57:9" pos:end="57:68"><name pos:start="57:9" pos:end="57:9">r</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:68"><name pos:start="57:13" pos:end="57:46">virtio_ccw_set_guest2host_notifier</name><argument_list pos:start="57:47" pos:end="57:68">(<argument pos:start="57:48" pos:end="57:50"><expr pos:start="57:48" pos:end="57:50"><name pos:start="57:48" pos:end="57:50">dev</name></expr></argument>, <argument pos:start="57:53" pos:end="57:53"><expr pos:start="57:53" pos:end="57:53"><name pos:start="57:53" pos:end="57:53">n</name></expr></argument>, <argument pos:start="57:56" pos:end="57:60"><expr pos:start="57:56" pos:end="57:60"><name pos:start="57:56" pos:end="57:60">false</name></expr></argument>, <argument pos:start="57:63" pos:end="57:67"><expr pos:start="57:63" pos:end="57:67"><name pos:start="57:63" pos:end="57:67">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><call pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:14">assert</name><argument_list pos:start="59:15" pos:end="59:22">(<argument pos:start="59:16" pos:end="59:21"><expr pos:start="59:16" pos:end="59:21"><name pos:start="59:16" pos:end="59:16">r</name> <operator pos:start="59:18" pos:end="59:19">&gt;=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:7">dev</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:26">ioeventfd_started</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:34">false</name></expr>;</expr_stmt>

    <comment type="block" pos:start="65:5" pos:end="65:44">/* Disable ioeventfd for this device. */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:49"><expr pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">dev</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">flags</name></name> <operator pos:start="67:16" pos:end="67:17">&amp;=</operator> <operator pos:start="67:19" pos:end="67:19">~</operator><name pos:start="67:20" pos:end="67:48">VIRTIO_CCW_FLAG_USE_IOEVENTFD</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:74"><expr pos:start="69:5" pos:end="69:73"><call pos:start="69:5" pos:end="69:73"><name pos:start="69:5" pos:end="69:16">error_report</name><argument_list pos:start="69:17" pos:end="69:73">(<argument pos:start="69:18" pos:end="69:62"><expr pos:start="69:18" pos:end="69:62"><literal type="string" pos:start="69:18" pos:end="69:62">"%s: failed. Fallback to userspace (slower)."</literal></expr></argument>, <argument pos:start="69:65" pos:end="69:72"><expr pos:start="69:65" pos:end="69:72"><name pos:start="69:65" pos:end="69:72">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
