<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20018.c" pos:tabs="8"><function pos:start="1:1" pos:end="265:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">img_read_header</name><parameter_list pos:start="1:27" pos:end="1:47">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="265:1">{<block_content pos:start="5:5" pos:end="263:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VideoDemuxData</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:37">= <expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:26">s1</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">first_index</name></decl>, <decl pos:start="7:22" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:31">last_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:22">AVPixelFormat</name></name></type> <name pos:start="11:24" pos:end="11:30">pix_fmt</name> <init pos:start="11:32" pos:end="11:48">= <expr pos:start="11:34" pos:end="11:48"><name pos:start="11:34" pos:end="11:48">AV_PIX_FMT_NONE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:6">s1</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:17">ctx_flags</name></name> <operator pos:start="15:19" pos:end="15:20">|=</operator> <name pos:start="15:22" pos:end="15:38">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:6">st</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:38"><name pos:start="19:10" pos:end="19:28">avformat_new_stream</name><argument_list pos:start="19:29" pos:end="19:38">(<argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">s1</name></expr></argument>, <argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">st</name></expr>)</condition> <block pos:start="21:14" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="31:71">(<expr pos:start="29:9" pos:end="31:70"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:23">pixel_format</name></name> <operator pos:start="29:25" pos:end="29:26">&amp;&amp;</operator>

        <operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:16">pix_fmt</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:50"><name pos:start="31:20" pos:end="31:33">av_get_pix_fmt</name><argument_list pos:start="31:34" pos:end="31:50">(<argument pos:start="31:35" pos:end="31:49"><expr pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:49">pixel_format</name></name></expr></argument>)</argument_list></call><operator pos:start="31:51" pos:end="31:51">)</operator> <operator pos:start="31:53" pos:end="31:54">==</operator> <name pos:start="31:56" pos:end="31:70">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="31:73" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:31">

        <expr_stmt pos:start="33:9" pos:end="35:32"><expr pos:start="33:9" pos:end="35:31"><call pos:start="33:9" pos:end="35:31"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:31">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">s1</name></expr></argument>, <argument pos:start="33:20" pos:end="33:31"><expr pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:34" pos:end="33:62"><expr pos:start="33:34" pos:end="33:62"><literal type="string" pos:start="33:34" pos:end="33:62">"No such pixel format: %s.\n"</literal></expr></argument>,

               <argument pos:start="35:16" pos:end="35:30"><expr pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:30">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:55"><expr pos:start="43:5" pos:end="43:54"><call pos:start="43:5" pos:end="43:54"><name pos:start="43:5" pos:end="43:14">av_strlcpy</name><argument_list pos:start="43:15" pos:end="43:54">(<argument pos:start="43:16" pos:end="43:22"><expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:22">path</name></name></expr></argument>, <argument pos:start="43:25" pos:end="43:36"><expr pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:26">s1</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:36">filename</name></name></expr></argument>, <argument pos:start="43:39" pos:end="43:53"><expr pos:start="43:39" pos:end="43:53"><sizeof pos:start="43:39" pos:end="43:53">sizeof<argument_list pos:start="43:45" pos:end="43:53">(<argument pos:start="43:46" pos:end="43:52"><expr pos:start="43:46" pos:end="43:52"><name pos:start="43:46" pos:end="43:52"><name pos:start="43:46" pos:end="43:46">s</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:52">path</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:17">img_number</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">img_count</name></name>  <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:21">/* find format */</comment>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="55:23">if <condition pos:start="53:8" pos:end="53:42">(<expr pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:10">s1</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:19">iformat</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:26">flags</name></name> <operator pos:start="53:28" pos:end="53:28">&amp;</operator> <name pos:start="53:30" pos:end="53:41">AVFMT_NOFILE</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:23"><block_content pos:start="55:9" pos:end="55:23">

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">is_pipe</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="57:5" pos:end="63:5">else <block pos:start="57:10" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:47">

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:18">is_pipe</name></name>       <operator pos:start="59:26" pos:end="59:26">=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:24">need_parsing</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:46">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="73:72"><if pos:start="67:5" pos:end="69:42">if <condition pos:start="67:8" pos:end="67:24">(<expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:23">ts_from_file</name></name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:42"><block_content pos:start="69:9" pos:end="69:42">

        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><call pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:27">avpriv_set_pts_info</name><argument_list pos:start="69:28" pos:end="69:41">(<argument pos:start="69:29" pos:end="69:30"><expr pos:start="69:29" pos:end="69:30"><name pos:start="69:29" pos:end="69:30">st</name></expr></argument>, <argument pos:start="69:33" pos:end="69:34"><expr pos:start="69:33" pos:end="69:34"><literal type="number" pos:start="69:33" pos:end="69:34">60</literal></expr></argument>, <argument pos:start="69:37" pos:end="69:37"><expr pos:start="69:37" pos:end="69:37"><literal type="number" pos:start="69:37" pos:end="69:37">1</literal></expr></argument>, <argument pos:start="69:40" pos:end="69:40"><expr pos:start="69:40" pos:end="69:40"><literal type="number" pos:start="69:40" pos:end="69:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="71:5" pos:end="73:72">else<block type="pseudo" pos:start="73:9" pos:end="73:72"><block_content pos:start="73:9" pos:end="73:72">

        <expr_stmt pos:start="73:9" pos:end="73:72"><expr pos:start="73:9" pos:end="73:71"><call pos:start="73:9" pos:end="73:71"><name pos:start="73:9" pos:end="73:27">avpriv_set_pts_info</name><argument_list pos:start="73:28" pos:end="73:71">(<argument pos:start="73:29" pos:end="73:30"><expr pos:start="73:29" pos:end="73:30"><name pos:start="73:29" pos:end="73:30">st</name></expr></argument>, <argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><literal type="number" pos:start="73:33" pos:end="73:34">60</literal></expr></argument>, <argument pos:start="73:37" pos:end="73:52"><expr pos:start="73:37" pos:end="73:52"><name pos:start="73:37" pos:end="73:52"><name pos:start="73:37" pos:end="73:37">s</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:48">framerate</name><operator pos:start="73:49" pos:end="73:49">.</operator><name pos:start="73:50" pos:end="73:52">den</name></name></expr></argument>, <argument pos:start="73:55" pos:end="73:70"><expr pos:start="73:55" pos:end="73:70"><name pos:start="73:55" pos:end="73:70"><name pos:start="73:55" pos:end="73:55">s</name><operator pos:start="73:56" pos:end="73:57">-&gt;</operator><name pos:start="73:58" pos:end="73:66">framerate</name><operator pos:start="73:67" pos:end="73:67">.</operator><name pos:start="73:68" pos:end="73:70">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:30">(<expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:16">width</name></name> <operator pos:start="77:18" pos:end="77:19">&amp;&amp;</operator> <name pos:start="77:21" pos:end="77:29"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:29">height</name></name></expr>)</condition> <block pos:start="77:32" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:38">

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:10">st</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:17">codec</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:24">width</name></name>  <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:36"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:36">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:38"><expr pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:10">st</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:17">codec</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:25">height</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:37"><name pos:start="81:29" pos:end="81:29">s</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:37">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="223:5"><if pos:start="87:5" pos:end="223:5">if <condition pos:start="87:8" pos:end="87:20">(<expr pos:start="87:9" pos:end="87:19"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:19"><name pos:start="87:10" pos:end="87:10">s</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:19">is_pipe</name></name></expr>)</condition> <block pos:start="87:22" pos:end="223:5">{<block_content pos:start="89:9" pos:end="221:54">

        <if_stmt pos:start="89:9" pos:end="151:9"><if pos:start="89:9" pos:end="151:9">if <condition pos:start="89:12" pos:end="89:48">(<expr pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:27">pattern_type</name></name> <operator pos:start="89:29" pos:end="89:30">==</operator> <name pos:start="89:32" pos:end="89:47">PT_GLOB_SEQUENCE</name></expr>)</condition> <block pos:start="89:50" pos:end="151:9">{<block_content pos:start="91:9" pos:end="149:9">

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:19">use_glob</name></name> <operator pos:start="91:21" pos:end="91:21">=</operator> <call pos:start="91:23" pos:end="91:38"><name pos:start="91:23" pos:end="91:29">is_glob</name><argument_list pos:start="91:30" pos:end="91:38">(<argument pos:start="91:31" pos:end="91:37"><expr pos:start="91:31" pos:end="91:37"><name pos:start="91:31" pos:end="91:37"><name pos:start="91:31" pos:end="91:31">s</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="149:9"><if pos:start="93:9" pos:end="149:9">if <condition pos:start="93:12" pos:end="93:24">(<expr pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:23">use_glob</name></name></expr>)</condition> <block pos:start="93:26" pos:end="149:9">{<block_content pos:start="95:13" pos:end="148:0">

            <decl_stmt pos:start="95:13" pos:end="95:40"><decl pos:start="95:13" pos:end="95:29"><type pos:start="95:13" pos:end="95:18"><name pos:start="95:13" pos:end="95:16">char</name> <modifier pos:start="95:18" pos:end="95:18">*</modifier></type><name pos:start="95:19" pos:end="95:19">p</name> <init pos:start="95:21" pos:end="95:29">= <expr pos:start="95:23" pos:end="95:29"><name pos:start="95:23" pos:end="95:29"><name pos:start="95:23" pos:end="95:23">s</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:29">path</name></name></expr></init></decl>, <decl pos:start="95:32" pos:end="95:33"><type ref="prev" pos:start="95:13" pos:end="95:18"><modifier pos:start="95:32" pos:end="95:32">*</modifier></type><name pos:start="95:33" pos:end="95:33">q</name></decl>, <decl pos:start="95:36" pos:end="95:39"><type ref="prev" pos:start="95:13" pos:end="95:18"><modifier pos:start="95:36" pos:end="95:36">*</modifier></type><name pos:start="95:37" pos:end="95:39">dup</name></decl>;</decl_stmt>

            <decl_stmt pos:start="97:13" pos:end="97:21"><decl pos:start="97:13" pos:end="97:20"><type pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">int</name></type> <name pos:start="97:17" pos:end="97:20">gerr</name></decl>;</decl_stmt>



            <expr_stmt pos:start="101:13" pos:end="106:0"><expr pos:start="101:13" pos:end="103:55"><call pos:start="101:13" pos:end="103:55"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="103:55">(<argument pos:start="101:20" pos:end="101:21"><expr pos:start="101:20" pos:end="101:21"><name pos:start="101:20" pos:end="101:21">s1</name></expr></argument>, <argument pos:start="101:24" pos:end="101:37"><expr pos:start="101:24" pos:end="101:37"><name pos:start="101:24" pos:end="101:37">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="101:40" pos:end="103:54"><expr pos:start="101:40" pos:end="103:54"><literal type="string" pos:start="101:40" pos:end="101:85">"Pattern type 'glob_sequence' is deprecated: "</literal>

                   <literal type="string" pos:start="103:20" pos:end="103:54">"use pattern_type 'glob' instead\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="105:1" pos:end="105:13">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:13">HAVE_GLOB</name></expr></cpp:if>

            <expr_stmt pos:start="107:13" pos:end="107:35"><expr pos:start="107:13" pos:end="107:34"><name pos:start="107:13" pos:end="107:15">dup</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:19">q</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <call pos:start="107:23" pos:end="107:34"><name pos:start="107:23" pos:end="107:31">av_strdup</name><argument_list pos:start="107:32" pos:end="107:34">(<argument pos:start="107:33" pos:end="107:33"><expr pos:start="107:33" pos:end="107:33"><name pos:start="107:33" pos:end="107:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="109:13" pos:end="127:13">while <condition pos:start="109:19" pos:end="109:22">(<expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">*</operator><name pos:start="109:21" pos:end="109:21">q</name></expr>)</condition> <block pos:start="109:24" pos:end="127:13">{<block_content pos:start="113:17" pos:end="125:28">

                <comment type="block" pos:start="111:17" pos:end="111:74">/* Do we have room for the next char and a \ insertion? */</comment>

                <if_stmt pos:start="113:17" pos:end="115:24"><if pos:start="113:17" pos:end="115:24">if <condition pos:start="113:20" pos:end="113:59">(<expr pos:start="113:21" pos:end="113:58"><operator pos:start="113:21" pos:end="113:21">(</operator><name pos:start="113:22" pos:end="113:22">p</name> <operator pos:start="113:24" pos:end="113:24">-</operator> <name pos:start="113:26" pos:end="113:32"><name pos:start="113:26" pos:end="113:26">s</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:32">path</name></name><operator pos:start="113:33" pos:end="113:33">)</operator> <operator pos:start="113:35" pos:end="113:36">&gt;=</operator> <operator pos:start="113:38" pos:end="113:38">(</operator><sizeof pos:start="113:39" pos:end="113:53">sizeof<argument_list pos:start="113:45" pos:end="113:53">(<argument pos:start="113:46" pos:end="113:52"><expr pos:start="113:46" pos:end="113:52"><name pos:start="113:46" pos:end="113:52"><name pos:start="113:46" pos:end="113:46">s</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:52">path</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="113:55" pos:end="113:55">-</operator> <literal type="number" pos:start="113:57" pos:end="113:57">2</literal><operator pos:start="113:58" pos:end="113:58">)</operator></expr>)</condition><block type="pseudo" pos:start="115:19" pos:end="115:24"><block_content pos:start="115:19" pos:end="115:24">

                  <break pos:start="115:19" pos:end="115:24">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="117:17" pos:end="123:32"><if pos:start="117:17" pos:end="119:24">if <condition pos:start="117:20" pos:end="117:58">(<expr pos:start="117:21" pos:end="117:57"><operator pos:start="117:21" pos:end="117:21">*</operator><name pos:start="117:22" pos:end="117:22">q</name> <operator pos:start="117:24" pos:end="117:25">==</operator> <literal type="char" pos:start="117:27" pos:end="117:29">'%'</literal> <operator pos:start="117:31" pos:end="117:32">&amp;&amp;</operator> <call pos:start="117:34" pos:end="117:57"><name pos:start="117:34" pos:end="117:39">strspn</name><argument_list pos:start="117:40" pos:end="117:57">(<argument pos:start="117:41" pos:end="117:45"><expr pos:start="117:41" pos:end="117:45"><name pos:start="117:41" pos:end="117:41">q</name> <operator pos:start="117:43" pos:end="117:43">+</operator> <literal type="number" pos:start="117:45" pos:end="117:45">1</literal></expr></argument>, <argument pos:start="117:48" pos:end="117:56"><expr pos:start="117:48" pos:end="117:56"><literal type="string" pos:start="117:48" pos:end="117:56">"%*?[]{}"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:24"><block_content pos:start="119:21" pos:end="119:24">

                    <expr_stmt pos:start="119:21" pos:end="119:24"><expr pos:start="119:21" pos:end="119:23"><operator pos:start="119:21" pos:end="119:22">++</operator><name pos:start="119:23" pos:end="119:23">q</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="121:17" pos:end="123:32">else if <condition pos:start="121:25" pos:end="121:47">(<expr pos:start="121:26" pos:end="121:46"><call pos:start="121:26" pos:end="121:46"><name pos:start="121:26" pos:end="121:31">strspn</name><argument_list pos:start="121:32" pos:end="121:46">(<argument pos:start="121:33" pos:end="121:33"><expr pos:start="121:33" pos:end="121:33"><name pos:start="121:33" pos:end="121:33">q</name></expr></argument>, <argument pos:start="121:36" pos:end="121:45"><expr pos:start="121:36" pos:end="121:45"><literal type="string" pos:start="121:36" pos:end="121:45">"\\*?[]{}"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:32"><block_content pos:start="123:21" pos:end="123:32">

                    <expr_stmt pos:start="123:21" pos:end="123:32"><expr pos:start="123:21" pos:end="123:31"><operator pos:start="123:21" pos:end="123:21">*</operator><name pos:start="123:22" pos:end="123:22">p</name><operator pos:start="123:23" pos:end="123:24">++</operator> <operator pos:start="123:26" pos:end="123:26">=</operator> <literal type="char" pos:start="123:28" pos:end="123:31">'\\'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:28"><expr pos:start="125:17" pos:end="125:27"><operator pos:start="125:17" pos:end="125:17">*</operator><name pos:start="125:18" pos:end="125:18">p</name><operator pos:start="125:19" pos:end="125:20">++</operator> <operator pos:start="125:22" pos:end="125:22">=</operator> <operator pos:start="125:24" pos:end="125:24">*</operator><name pos:start="125:25" pos:end="125:25">q</name><operator pos:start="125:26" pos:end="125:27">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="129:13" pos:end="129:19"><expr pos:start="129:13" pos:end="129:18"><operator pos:start="129:13" pos:end="129:13">*</operator><name pos:start="129:14" pos:end="129:14">p</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:25"><expr pos:start="131:13" pos:end="131:24"><call pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:19">av_free</name><argument_list pos:start="131:20" pos:end="131:24">(<argument pos:start="131:21" pos:end="131:23"><expr pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:92"><expr pos:start="135:13" pos:end="135:91"><name pos:start="135:13" pos:end="135:16">gerr</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <call pos:start="135:20" pos:end="135:91"><name pos:start="135:20" pos:end="135:23">glob</name><argument_list pos:start="135:24" pos:end="135:91">(<argument pos:start="135:25" pos:end="135:31"><expr pos:start="135:25" pos:end="135:31"><name pos:start="135:25" pos:end="135:31"><name pos:start="135:25" pos:end="135:25">s</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:31">path</name></name></expr></argument>, <argument pos:start="135:34" pos:end="135:69"><expr pos:start="135:34" pos:end="135:69"><name pos:start="135:34" pos:end="135:45">GLOB_NOCHECK</name><operator pos:start="135:46" pos:end="135:46">|</operator><name pos:start="135:47" pos:end="135:56">GLOB_BRACE</name><operator pos:start="135:57" pos:end="135:57">|</operator><name pos:start="135:58" pos:end="135:69">GLOB_NOMAGIC</name></expr></argument>, <argument pos:start="135:72" pos:end="135:75"><expr pos:start="135:72" pos:end="135:75"><name pos:start="135:72" pos:end="135:75">NULL</name></expr></argument>, <argument pos:start="135:78" pos:end="135:90"><expr pos:start="135:78" pos:end="135:90"><operator pos:start="135:78" pos:end="135:78">&amp;</operator><name pos:start="135:79" pos:end="135:90"><name pos:start="135:79" pos:end="135:79">s</name><operator pos:start="135:80" pos:end="135:81">-&gt;</operator><name pos:start="135:82" pos:end="135:90">globstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="141:13"><if pos:start="137:13" pos:end="141:13">if <condition pos:start="137:16" pos:end="137:26">(<expr pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:20">gerr</name> <operator pos:start="137:22" pos:end="137:23">!=</operator> <literal type="number" pos:start="137:25" pos:end="137:25">0</literal></expr>)</condition> <block pos:start="137:28" pos:end="141:13">{<block_content pos:start="139:17" pos:end="139:39">

                <return pos:start="139:17" pos:end="139:39">return <expr pos:start="139:24" pos:end="139:38"><call pos:start="139:24" pos:end="139:38"><name pos:start="139:24" pos:end="139:30">AVERROR</name><argument_list pos:start="139:31" pos:end="139:38">(<argument pos:start="139:32" pos:end="139:37"><expr pos:start="139:32" pos:end="139:37"><name pos:start="139:32" pos:end="139:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:28"><expr pos:start="143:13" pos:end="143:27"><name pos:start="143:13" pos:end="143:23">first_index</name> <operator pos:start="143:25" pos:end="143:25">=</operator> <literal type="number" pos:start="143:27" pos:end="143:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="148:0"><expr pos:start="145:13" pos:end="145:50"><name pos:start="145:13" pos:end="145:22">last_index</name> <operator pos:start="145:24" pos:end="145:24">=</operator> <name pos:start="145:26" pos:end="145:46"><name pos:start="145:26" pos:end="145:26">s</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:37">globstate</name><operator pos:start="145:38" pos:end="145:38">.</operator><name pos:start="145:39" pos:end="145:46">gl_pathc</name></name> <operator pos:start="145:48" pos:end="145:48">-</operator> <literal type="number" pos:start="145:50" pos:end="145:50">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="153:9" pos:end="209:9"><if pos:start="153:9" pos:end="169:9">if <condition pos:start="153:12" pos:end="153:100">(<expr pos:start="153:13" pos:end="153:99"><operator pos:start="153:13" pos:end="153:13">(</operator><name pos:start="153:14" pos:end="153:28"><name pos:start="153:14" pos:end="153:14">s</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:28">pattern_type</name></name> <operator pos:start="153:30" pos:end="153:31">==</operator> <name pos:start="153:33" pos:end="153:48">PT_GLOB_SEQUENCE</name> <operator pos:start="153:50" pos:end="153:51">&amp;&amp;</operator> <operator pos:start="153:53" pos:end="153:53">!</operator><name pos:start="153:54" pos:end="153:64"><name pos:start="153:54" pos:end="153:54">s</name><operator pos:start="153:55" pos:end="153:56">-&gt;</operator><name pos:start="153:57" pos:end="153:64">use_glob</name></name><operator pos:start="153:65" pos:end="153:65">)</operator> <operator pos:start="153:67" pos:end="153:68">||</operator> <name pos:start="153:70" pos:end="153:84"><name pos:start="153:70" pos:end="153:70">s</name><operator pos:start="153:71" pos:end="153:72">-&gt;</operator><name pos:start="153:73" pos:end="153:84">pattern_type</name></name> <operator pos:start="153:86" pos:end="153:87">==</operator> <name pos:start="153:89" pos:end="153:99">PT_SEQUENCE</name></expr>)</condition> <block pos:start="153:102" pos:end="169:9">{<block_content pos:start="155:13" pos:end="167:13">

            <if_stmt pos:start="155:13" pos:end="167:13"><if pos:start="155:13" pos:end="167:13">if <condition pos:start="155:16" pos:end="157:77">(<expr pos:start="155:17" pos:end="157:76"><call pos:start="155:17" pos:end="157:72"><name pos:start="155:17" pos:end="155:32">find_image_range</name><argument_list pos:start="155:33" pos:end="157:72">(<argument pos:start="155:34" pos:end="155:45"><expr pos:start="155:34" pos:end="155:45"><operator pos:start="155:34" pos:end="155:34">&amp;</operator><name pos:start="155:35" pos:end="155:45">first_index</name></expr></argument>, <argument pos:start="155:48" pos:end="155:58"><expr pos:start="155:48" pos:end="155:58"><operator pos:start="155:48" pos:end="155:48">&amp;</operator><name pos:start="155:49" pos:end="155:58">last_index</name></expr></argument>, <argument pos:start="155:61" pos:end="155:67"><expr pos:start="155:61" pos:end="155:67"><name pos:start="155:61" pos:end="155:67"><name pos:start="155:61" pos:end="155:61">s</name><operator pos:start="155:62" pos:end="155:63">-&gt;</operator><name pos:start="155:64" pos:end="155:67">path</name></name></expr></argument>,

                                 <argument pos:start="157:34" pos:end="157:48"><expr pos:start="157:34" pos:end="157:48"><name pos:start="157:34" pos:end="157:48"><name pos:start="157:34" pos:end="157:34">s</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:48">start_number</name></name></expr></argument>, <argument pos:start="157:51" pos:end="157:71"><expr pos:start="157:51" pos:end="157:71"><name pos:start="157:51" pos:end="157:71"><name pos:start="157:51" pos:end="157:51">s</name><operator pos:start="157:52" pos:end="157:53">-&gt;</operator><name pos:start="157:54" pos:end="157:71">start_number_range</name></name></expr></argument>)</argument_list></call> <operator pos:start="157:74" pos:end="157:74">&lt;</operator> <literal type="number" pos:start="157:76" pos:end="157:76">0</literal></expr>)</condition> <block pos:start="157:79" pos:end="167:13">{<block_content pos:start="159:17" pos:end="165:39">

                <expr_stmt pos:start="159:17" pos:end="163:94"><expr pos:start="159:17" pos:end="163:93"><call pos:start="159:17" pos:end="163:93"><name pos:start="159:17" pos:end="159:22">av_log</name><argument_list pos:start="159:23" pos:end="163:93">(<argument pos:start="159:24" pos:end="159:25"><expr pos:start="159:24" pos:end="159:25"><name pos:start="159:24" pos:end="159:25">s1</name></expr></argument>, <argument pos:start="159:28" pos:end="159:39"><expr pos:start="159:28" pos:end="159:39"><name pos:start="159:28" pos:end="159:39">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="161:24" pos:end="161:94"><expr pos:start="161:24" pos:end="161:94"><literal type="string" pos:start="161:24" pos:end="161:94">"Could find no file with with path '%s' and index in the range %d-%d\n"</literal></expr></argument>,

                       <argument pos:start="163:24" pos:end="163:30"><expr pos:start="163:24" pos:end="163:30"><name pos:start="163:24" pos:end="163:30"><name pos:start="163:24" pos:end="163:24">s</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:30">path</name></name></expr></argument>, <argument pos:start="163:33" pos:end="163:47"><expr pos:start="163:33" pos:end="163:47"><name pos:start="163:33" pos:end="163:47"><name pos:start="163:33" pos:end="163:33">s</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:47">start_number</name></name></expr></argument>, <argument pos:start="163:50" pos:end="163:92"><expr pos:start="163:50" pos:end="163:92"><name pos:start="163:50" pos:end="163:64"><name pos:start="163:50" pos:end="163:50">s</name><operator pos:start="163:51" pos:end="163:52">-&gt;</operator><name pos:start="163:53" pos:end="163:64">start_number</name></name> <operator pos:start="163:66" pos:end="163:66">+</operator> <name pos:start="163:68" pos:end="163:88"><name pos:start="163:68" pos:end="163:68">s</name><operator pos:start="163:69" pos:end="163:70">-&gt;</operator><name pos:start="163:71" pos:end="163:88">start_number_range</name></name> <operator pos:start="163:90" pos:end="163:90">-</operator> <literal type="number" pos:start="163:92" pos:end="163:92">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="165:17" pos:end="165:39">return <expr pos:start="165:24" pos:end="165:38"><call pos:start="165:24" pos:end="165:38"><name pos:start="165:24" pos:end="165:30">AVERROR</name><argument_list pos:start="165:31" pos:end="165:38">(<argument pos:start="165:32" pos:end="165:37"><expr pos:start="165:32" pos:end="165:37"><name pos:start="165:32" pos:end="165:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="201:9">else if <condition pos:start="169:19" pos:end="169:46">(<expr pos:start="169:20" pos:end="169:45"><name pos:start="169:20" pos:end="169:34"><name pos:start="169:20" pos:end="169:20">s</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:34">pattern_type</name></name> <operator pos:start="169:36" pos:end="169:37">==</operator> <name pos:start="169:39" pos:end="169:45">PT_GLOB</name></expr>)</condition> <block pos:start="169:48" pos:end="201:9">{<block_content pos:start="173:13" pos:end="200:0">

<cpp:if pos:start="171:1" pos:end="171:13">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:13"><name pos:start="171:5" pos:end="171:13">HAVE_GLOB</name></expr></cpp:if>

            <decl_stmt pos:start="173:13" pos:end="173:21"><decl pos:start="173:13" pos:end="173:20"><type pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">int</name></type> <name pos:start="173:17" pos:end="173:20">gerr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:92"><expr pos:start="175:13" pos:end="175:91"><name pos:start="175:13" pos:end="175:16">gerr</name> <operator pos:start="175:18" pos:end="175:18">=</operator> <call pos:start="175:20" pos:end="175:91"><name pos:start="175:20" pos:end="175:23">glob</name><argument_list pos:start="175:24" pos:end="175:91">(<argument pos:start="175:25" pos:end="175:31"><expr pos:start="175:25" pos:end="175:31"><name pos:start="175:25" pos:end="175:31"><name pos:start="175:25" pos:end="175:25">s</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:31">path</name></name></expr></argument>, <argument pos:start="175:34" pos:end="175:69"><expr pos:start="175:34" pos:end="175:69"><name pos:start="175:34" pos:end="175:45">GLOB_NOCHECK</name><operator pos:start="175:46" pos:end="175:46">|</operator><name pos:start="175:47" pos:end="175:56">GLOB_BRACE</name><operator pos:start="175:57" pos:end="175:57">|</operator><name pos:start="175:58" pos:end="175:69">GLOB_NOMAGIC</name></expr></argument>, <argument pos:start="175:72" pos:end="175:75"><expr pos:start="175:72" pos:end="175:75"><name pos:start="175:72" pos:end="175:75">NULL</name></expr></argument>, <argument pos:start="175:78" pos:end="175:90"><expr pos:start="175:78" pos:end="175:90"><operator pos:start="175:78" pos:end="175:78">&amp;</operator><name pos:start="175:79" pos:end="175:90"><name pos:start="175:79" pos:end="175:79">s</name><operator pos:start="175:80" pos:end="175:81">-&gt;</operator><name pos:start="175:82" pos:end="175:90">globstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="181:13"><if pos:start="177:13" pos:end="181:13">if <condition pos:start="177:16" pos:end="177:26">(<expr pos:start="177:17" pos:end="177:25"><name pos:start="177:17" pos:end="177:20">gerr</name> <operator pos:start="177:22" pos:end="177:23">!=</operator> <literal type="number" pos:start="177:25" pos:end="177:25">0</literal></expr>)</condition> <block pos:start="177:28" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:39">

                <return pos:start="179:17" pos:end="179:39">return <expr pos:start="179:24" pos:end="179:38"><call pos:start="179:24" pos:end="179:38"><name pos:start="179:24" pos:end="179:30">AVERROR</name><argument_list pos:start="179:31" pos:end="179:38">(<argument pos:start="179:32" pos:end="179:37"><expr pos:start="179:32" pos:end="179:37"><name pos:start="179:32" pos:end="179:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:28"><expr pos:start="183:13" pos:end="183:27"><name pos:start="183:13" pos:end="183:23">first_index</name> <operator pos:start="183:25" pos:end="183:25">=</operator> <literal type="number" pos:start="183:27" pos:end="183:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:51"><expr pos:start="185:13" pos:end="185:50"><name pos:start="185:13" pos:end="185:22">last_index</name> <operator pos:start="185:24" pos:end="185:24">=</operator> <name pos:start="185:26" pos:end="185:46"><name pos:start="185:26" pos:end="185:26">s</name><operator pos:start="185:27" pos:end="185:28">-&gt;</operator><name pos:start="185:29" pos:end="185:37">globstate</name><operator pos:start="185:38" pos:end="185:38">.</operator><name pos:start="185:39" pos:end="185:46">gl_pathc</name></name> <operator pos:start="185:48" pos:end="185:48">-</operator> <literal type="number" pos:start="185:50" pos:end="185:50">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="190:0"><expr pos:start="187:13" pos:end="187:27"><name pos:start="187:13" pos:end="187:23"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:23">use_glob</name></name> <operator pos:start="187:25" pos:end="187:25">=</operator> <literal type="number" pos:start="187:27" pos:end="187:27">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="189:1" pos:end="189:5">#<cpp:directive pos:start="189:2" pos:end="189:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="191:13" pos:end="195:67"><expr pos:start="191:13" pos:end="195:66"><call pos:start="191:13" pos:end="195:66"><name pos:start="191:13" pos:end="191:18">av_log</name><argument_list pos:start="191:19" pos:end="195:66">(<argument pos:start="191:20" pos:end="191:21"><expr pos:start="191:20" pos:end="191:21"><name pos:start="191:20" pos:end="191:21">s1</name></expr></argument>, <argument pos:start="191:24" pos:end="191:35"><expr pos:start="191:24" pos:end="191:35"><name pos:start="191:24" pos:end="191:35">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="193:20" pos:end="195:65"><expr pos:start="193:20" pos:end="195:65"><literal type="string" pos:start="193:20" pos:end="193:67">"Pattern type 'glob' was selected but globbing "</literal>

                   <literal type="string" pos:start="195:20" pos:end="195:65">"is not supported by this libavformat build\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="197:13" pos:end="200:0">return <expr pos:start="197:20" pos:end="197:34"><call pos:start="197:20" pos:end="197:34"><name pos:start="197:20" pos:end="197:26">AVERROR</name><argument_list pos:start="197:27" pos:end="197:34">(<argument pos:start="197:28" pos:end="197:33"><expr pos:start="197:28" pos:end="197:33"><name pos:start="197:28" pos:end="197:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="199:1" pos:end="199:6">#<cpp:directive pos:start="199:2" pos:end="199:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <if type="elseif" pos:start="201:11" pos:end="209:9">else if <condition pos:start="201:19" pos:end="201:55">(<expr pos:start="201:20" pos:end="201:54"><name pos:start="201:20" pos:end="201:34"><name pos:start="201:20" pos:end="201:20">s</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:34">pattern_type</name></name> <operator pos:start="201:36" pos:end="201:37">!=</operator> <name pos:start="201:39" pos:end="201:54">PT_GLOB_SEQUENCE</name></expr>)</condition> <block pos:start="201:57" pos:end="209:9">{<block_content pos:start="203:13" pos:end="207:35">

            <expr_stmt pos:start="203:13" pos:end="205:84"><expr pos:start="203:13" pos:end="205:83"><call pos:start="203:13" pos:end="205:83"><name pos:start="203:13" pos:end="203:18">av_log</name><argument_list pos:start="203:19" pos:end="205:83">(<argument pos:start="203:20" pos:end="203:21"><expr pos:start="203:20" pos:end="203:21"><name pos:start="203:20" pos:end="203:21">s1</name></expr></argument>, <argument pos:start="203:24" pos:end="203:35"><expr pos:start="203:24" pos:end="203:35"><name pos:start="203:24" pos:end="203:35">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="205:20" pos:end="205:65"><expr pos:start="205:20" pos:end="205:65"><literal type="string" pos:start="205:20" pos:end="205:65">"Unknown value '%d' for pattern_type option\n"</literal></expr></argument>, <argument pos:start="205:68" pos:end="205:82"><expr pos:start="205:68" pos:end="205:82"><name pos:start="205:68" pos:end="205:82"><name pos:start="205:68" pos:end="205:68">s</name><operator pos:start="205:69" pos:end="205:70">-&gt;</operator><name pos:start="205:71" pos:end="205:82">pattern_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="207:13" pos:end="207:35">return <expr pos:start="207:20" pos:end="207:34"><call pos:start="207:20" pos:end="207:34"><name pos:start="207:20" pos:end="207:26">AVERROR</name><argument_list pos:start="207:27" pos:end="207:34">(<argument pos:start="207:28" pos:end="207:33"><expr pos:start="207:28" pos:end="207:33"><name pos:start="207:28" pos:end="207:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:36"><expr pos:start="211:9" pos:end="211:35"><name pos:start="211:9" pos:end="211:20"><name pos:start="211:9" pos:end="211:9">s</name><operator pos:start="211:10" pos:end="211:11">-&gt;</operator><name pos:start="211:12" pos:end="211:20">img_first</name></name>  <operator pos:start="211:23" pos:end="211:23">=</operator> <name pos:start="211:25" pos:end="211:35">first_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:35"><expr pos:start="213:9" pos:end="213:34"><name pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:19">img_last</name></name>   <operator pos:start="213:23" pos:end="213:23">=</operator> <name pos:start="213:25" pos:end="213:34">last_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:36"><expr pos:start="215:9" pos:end="215:35"><name pos:start="215:9" pos:end="215:21"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:21">img_number</name></name> <operator pos:start="215:23" pos:end="215:23">=</operator> <name pos:start="215:25" pos:end="215:35">first_index</name></expr>;</expr_stmt>

        <comment type="block" pos:start="217:9" pos:end="217:30">/* compute duration */</comment>

        <expr_stmt pos:start="219:9" pos:end="219:27"><expr pos:start="219:9" pos:end="219:26"><name pos:start="219:9" pos:end="219:22"><name pos:start="219:9" pos:end="219:10">st</name><operator pos:start="219:11" pos:end="219:12">-&gt;</operator><name pos:start="219:13" pos:end="219:22">start_time</name></name> <operator pos:start="219:24" pos:end="219:24">=</operator> <literal type="number" pos:start="219:26" pos:end="219:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:54"><expr pos:start="221:9" pos:end="221:53"><name pos:start="221:9" pos:end="221:20"><name pos:start="221:9" pos:end="221:10">st</name><operator pos:start="221:11" pos:end="221:12">-&gt;</operator><name pos:start="221:13" pos:end="221:20">duration</name></name>   <operator pos:start="221:24" pos:end="221:24">=</operator> <name pos:start="221:26" pos:end="221:35">last_index</name> <operator pos:start="221:37" pos:end="221:37">-</operator> <name pos:start="221:39" pos:end="221:49">first_index</name> <operator pos:start="221:51" pos:end="221:51">+</operator> <literal type="number" pos:start="221:53" pos:end="221:53">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="227:5" pos:end="253:5"><if pos:start="227:5" pos:end="233:5">if <condition pos:start="227:8" pos:end="227:27">(<expr pos:start="227:9" pos:end="227:26"><name pos:start="227:9" pos:end="227:26"><name pos:start="227:9" pos:end="227:10">s1</name><operator pos:start="227:11" pos:end="227:12">-&gt;</operator><name pos:start="227:13" pos:end="227:26">video_codec_id</name></name></expr>)</condition> <block pos:start="227:29" pos:end="233:5">{<block_content pos:start="229:9" pos:end="231:51">

        <expr_stmt pos:start="229:9" pos:end="229:51"><expr pos:start="229:9" pos:end="229:50"><name pos:start="229:9" pos:end="229:29"><name pos:start="229:9" pos:end="229:10">st</name><operator pos:start="229:11" pos:end="229:12">-&gt;</operator><name pos:start="229:13" pos:end="229:17">codec</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:29">codec_type</name></name> <operator pos:start="229:31" pos:end="229:31">=</operator> <name pos:start="229:33" pos:end="229:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:51"><expr pos:start="231:9" pos:end="231:50"><name pos:start="231:9" pos:end="231:27"><name pos:start="231:9" pos:end="231:10">st</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:17">codec</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:27">codec_id</name></name>   <operator pos:start="231:31" pos:end="231:31">=</operator> <name pos:start="231:33" pos:end="231:50"><name pos:start="231:33" pos:end="231:34">s1</name><operator pos:start="231:35" pos:end="231:36">-&gt;</operator><name pos:start="231:37" pos:end="231:50">video_codec_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="233:7" pos:end="239:5">else if <condition pos:start="233:15" pos:end="233:34">(<expr pos:start="233:16" pos:end="233:33"><name pos:start="233:16" pos:end="233:33"><name pos:start="233:16" pos:end="233:17">s1</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:33">audio_codec_id</name></name></expr>)</condition> <block pos:start="233:36" pos:end="239:5">{<block_content pos:start="235:9" pos:end="237:51">

        <expr_stmt pos:start="235:9" pos:end="235:51"><expr pos:start="235:9" pos:end="235:50"><name pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:10">st</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:17">codec</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:29">codec_type</name></name> <operator pos:start="235:31" pos:end="235:31">=</operator> <name pos:start="235:33" pos:end="235:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:51"><expr pos:start="237:9" pos:end="237:50"><name pos:start="237:9" pos:end="237:27"><name pos:start="237:9" pos:end="237:10">st</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:17">codec</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:27">codec_id</name></name>   <operator pos:start="237:31" pos:end="237:31">=</operator> <name pos:start="237:33" pos:end="237:50"><name pos:start="237:33" pos:end="237:34">s1</name><operator pos:start="237:35" pos:end="237:36">-&gt;</operator><name pos:start="237:37" pos:end="237:50">audio_codec_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="239:7" pos:end="253:5">else <block pos:start="239:12" pos:end="253:5">{<block_content pos:start="241:9" pos:end="251:52">

        <decl_stmt pos:start="241:9" pos:end="241:48"><decl pos:start="241:9" pos:end="241:47"><type pos:start="241:9" pos:end="241:20"><specifier pos:start="241:9" pos:end="241:13">const</specifier> <name pos:start="241:15" pos:end="241:18">char</name> <modifier pos:start="241:20" pos:end="241:20">*</modifier></type><name pos:start="241:21" pos:end="241:23">str</name> <init pos:start="241:25" pos:end="241:47">= <expr pos:start="241:27" pos:end="241:47"><call pos:start="241:27" pos:end="241:47"><name pos:start="241:27" pos:end="241:33">strrchr</name><argument_list pos:start="241:34" pos:end="241:47">(<argument pos:start="241:35" pos:end="241:41"><expr pos:start="241:35" pos:end="241:41"><name pos:start="241:35" pos:end="241:41"><name pos:start="241:35" pos:end="241:35">s</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:41">path</name></name></expr></argument>, <argument pos:start="241:44" pos:end="241:46"><expr pos:start="241:44" pos:end="241:46"><literal type="char" pos:start="241:44" pos:end="241:46">'.'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:68"><expr pos:start="243:9" pos:end="243:67"><name pos:start="243:9" pos:end="243:23"><name pos:start="243:9" pos:end="243:9">s</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:23">split_planes</name></name>       <operator pos:start="243:31" pos:end="243:31">=</operator> <name pos:start="243:33" pos:end="243:35">str</name> <operator pos:start="243:37" pos:end="243:38">&amp;&amp;</operator> <operator pos:start="243:40" pos:end="243:40">!</operator><call pos:start="243:41" pos:end="243:67"><name pos:start="243:41" pos:end="243:53">av_strcasecmp</name><argument_list pos:start="243:54" pos:end="243:67">(<argument pos:start="243:55" pos:end="243:61"><expr pos:start="243:55" pos:end="243:61"><name pos:start="243:55" pos:end="243:57">str</name> <operator pos:start="243:59" pos:end="243:59">+</operator> <literal type="number" pos:start="243:61" pos:end="243:61">1</literal></expr></argument>, <argument pos:start="243:64" pos:end="243:66"><expr pos:start="243:64" pos:end="243:66"><literal type="string" pos:start="243:64" pos:end="243:66">"y"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:51"><expr pos:start="245:9" pos:end="245:50"><name pos:start="245:9" pos:end="245:29"><name pos:start="245:9" pos:end="245:10">st</name><operator pos:start="245:11" pos:end="245:12">-&gt;</operator><name pos:start="245:13" pos:end="245:17">codec</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:29">codec_type</name></name> <operator pos:start="245:31" pos:end="245:31">=</operator> <name pos:start="245:33" pos:end="245:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:63"><expr pos:start="247:9" pos:end="247:62"><name pos:start="247:9" pos:end="247:27"><name pos:start="247:9" pos:end="247:10">st</name><operator pos:start="247:11" pos:end="247:12">-&gt;</operator><name pos:start="247:13" pos:end="247:17">codec</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:27">codec_id</name></name>   <operator pos:start="247:31" pos:end="247:31">=</operator> <call pos:start="247:33" pos:end="247:62"><name pos:start="247:33" pos:end="247:53">ff_guess_image2_codec</name><argument_list pos:start="247:54" pos:end="247:62">(<argument pos:start="247:55" pos:end="247:61"><expr pos:start="247:55" pos:end="247:61"><name pos:start="247:55" pos:end="247:61"><name pos:start="247:55" pos:end="247:55">s</name><operator pos:start="247:56" pos:end="247:57">-&gt;</operator><name pos:start="247:58" pos:end="247:61">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="251:52"><if pos:start="249:9" pos:end="251:52">if <condition pos:start="249:12" pos:end="249:53">(<expr pos:start="249:13" pos:end="249:52"><name pos:start="249:13" pos:end="249:31"><name pos:start="249:13" pos:end="249:14">st</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:21">codec</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:31">codec_id</name></name> <operator pos:start="249:33" pos:end="249:34">==</operator> <name pos:start="249:36" pos:end="249:52">AV_CODEC_ID_LJPEG</name></expr>)</condition><block type="pseudo" pos:start="251:13" pos:end="251:52"><block_content pos:start="251:13" pos:end="251:52">

            <expr_stmt pos:start="251:13" pos:end="251:52"><expr pos:start="251:13" pos:end="251:51"><name pos:start="251:13" pos:end="251:31"><name pos:start="251:13" pos:end="251:14">st</name><operator pos:start="251:15" pos:end="251:16">-&gt;</operator><name pos:start="251:17" pos:end="251:21">codec</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:31">codec_id</name></name> <operator pos:start="251:33" pos:end="251:33">=</operator> <name pos:start="251:35" pos:end="251:51">AV_CODEC_ID_MJPEG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="255:5" pos:end="259:37"><if pos:start="255:5" pos:end="259:37">if <condition pos:start="255:8" pos:end="257:35">(<expr pos:start="255:9" pos:end="257:34"><name pos:start="255:9" pos:end="255:29"><name pos:start="255:9" pos:end="255:10">st</name><operator pos:start="255:11" pos:end="255:12">-&gt;</operator><name pos:start="255:13" pos:end="255:17">codec</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:29">codec_type</name></name> <operator pos:start="255:31" pos:end="255:32">==</operator> <name pos:start="255:34" pos:end="255:51">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="255:53" pos:end="255:54">&amp;&amp;</operator>

        <name pos:start="257:9" pos:end="257:15">pix_fmt</name> <operator pos:start="257:17" pos:end="257:18">!=</operator> <name pos:start="257:20" pos:end="257:34">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="259:9" pos:end="259:37"><block_content pos:start="259:9" pos:end="259:37">

        <expr_stmt pos:start="259:9" pos:end="259:37"><expr pos:start="259:9" pos:end="259:36"><name pos:start="259:9" pos:end="259:26"><name pos:start="259:9" pos:end="259:10">st</name><operator pos:start="259:11" pos:end="259:12">-&gt;</operator><name pos:start="259:13" pos:end="259:17">codec</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:26">pix_fmt</name></name> <operator pos:start="259:28" pos:end="259:28">=</operator> <name pos:start="259:30" pos:end="259:36">pix_fmt</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="263:5" pos:end="263:13">return <expr pos:start="263:12" pos:end="263:12"><literal type="number" pos:start="263:12" pos:end="263:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
