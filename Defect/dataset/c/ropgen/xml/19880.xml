<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19880.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">process_input_packet</name><parameter_list pos:start="1:33" pos:end="1:83">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:44">InputStream</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ist</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:65">AVPacket</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">pkt</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:82"><decl pos:start="1:73" pos:end="1:82"><type pos:start="1:73" pos:end="1:82"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:82">no_eof</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:11">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">repeating</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">AVPacket</name></type> <name pos:start="9:14" pos:end="9:18">avpkt</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:38"><if pos:start="13:5" pos:end="15:38">if <condition pos:start="13:8" pos:end="13:40">(<expr pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:11">ist</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:21">next_dts</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:38"><block_content pos:start="15:9" pos:end="15:38">

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">ist</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:21">next_dts</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:37"><name pos:start="15:25" pos:end="15:27">ist</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:37">last_dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">pkt</name></expr>)</condition> <block pos:start="19:15" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:23">

        <comment type="block" pos:start="21:9" pos:end="21:26">/* EOF handling */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:22">av_init_packet</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:29">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:13">avpkt</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:18">data</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:13">avpkt</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:18">size</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:21">

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:13">avpkt</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:20">pkt</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:99"><if pos:start="37:5" pos:end="39:99">if <condition pos:start="37:8" pos:end="37:42">(<expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:11">pkt</name> <operator pos:start="37:13" pos:end="37:14">&amp;&amp;</operator> <name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:18">pkt</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:23">dts</name></name> <operator pos:start="37:25" pos:end="37:26">!=</operator> <name pos:start="37:28" pos:end="37:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:99"><block_content pos:start="39:9" pos:end="39:99">

        <expr_stmt pos:start="39:9" pos:end="39:99"><expr pos:start="39:9" pos:end="39:98"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">ist</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:21">next_dts</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:27">ist</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">last_dts</name></name> <operator pos:start="39:39" pos:end="39:39">=</operator> <call pos:start="39:41" pos:end="39:98"><name pos:start="39:41" pos:end="39:52">av_rescale_q</name><argument_list pos:start="39:53" pos:end="39:98">(<argument pos:start="39:54" pos:end="39:61"><expr pos:start="39:54" pos:end="39:61"><name pos:start="39:54" pos:end="39:61"><name pos:start="39:54" pos:end="39:56">pkt</name><operator pos:start="39:57" pos:end="39:58">-&gt;</operator><name pos:start="39:59" pos:end="39:61">dts</name></name></expr></argument>, <argument pos:start="39:64" pos:end="39:81"><expr pos:start="39:64" pos:end="39:81"><name pos:start="39:64" pos:end="39:81"><name pos:start="39:64" pos:end="39:66">ist</name><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:70">st</name><operator pos:start="39:71" pos:end="39:72">-&gt;</operator><name pos:start="39:73" pos:end="39:81">time_base</name></name></expr></argument>, <argument pos:start="39:84" pos:end="39:97"><expr pos:start="39:84" pos:end="39:97"><name pos:start="39:84" pos:end="39:97">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="43:5" pos:end="43:84">// while we have more to decode or while the decoder did output something on EOF</comment>

    <while pos:start="45:5" pos:end="139:5">while <condition pos:start="45:11" pos:end="45:60">(<expr pos:start="45:12" pos:end="45:59"><name pos:start="45:12" pos:end="45:31"><name pos:start="45:12" pos:end="45:14">ist</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:31">decoding_needed</name></name> <operator pos:start="45:33" pos:end="45:34">&amp;&amp;</operator> <operator pos:start="45:36" pos:end="45:36">(</operator><operator pos:start="45:37" pos:end="45:37">!</operator><name pos:start="45:38" pos:end="45:40">pkt</name> <operator pos:start="45:42" pos:end="45:43">||</operator> <name pos:start="45:45" pos:end="45:54"><name pos:start="45:45" pos:end="45:49">avpkt</name><operator pos:start="45:50" pos:end="45:50">.</operator><name pos:start="45:51" pos:end="45:54">size</name></name> <operator pos:start="45:56" pos:end="45:56">&gt;</operator> <literal type="number" pos:start="45:58" pos:end="45:58">0</literal><operator pos:start="45:59" pos:end="45:59">)</operator></expr>)</condition> <block pos:start="45:62" pos:end="139:5">{<block_content pos:start="47:9" pos:end="137:22">

        <decl_stmt pos:start="47:9" pos:end="47:20"><decl pos:start="47:9" pos:end="47:19"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:15">ret</name> <init pos:start="47:17" pos:end="47:19">= <expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:27"><decl pos:start="49:9" pos:end="49:26"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:22">got_output</name> <init pos:start="49:24" pos:end="49:26">= <expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="53:9" pos:end="55:42"><if pos:start="53:9" pos:end="55:42">if <condition pos:start="53:12" pos:end="53:23">(<expr pos:start="53:13" pos:end="53:22"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:22">repeating</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:42"><block_content pos:start="55:13" pos:end="55:42">

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">ist</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:25">last_dts</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:41"><name pos:start="55:29" pos:end="55:31">ist</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:41">next_dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <switch pos:start="59:9" pos:end="111:9">switch <condition pos:start="59:16" pos:end="59:41">(<expr pos:start="59:17" pos:end="59:40"><name pos:start="59:17" pos:end="59:40"><name pos:start="59:17" pos:end="59:19">ist</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:28">dec_ctx</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:40">codec_type</name></name></expr>)</condition> <block pos:start="59:43" pos:end="111:9">{<block_content pos:start="61:9" pos:end="109:19">

        <case pos:start="61:9" pos:end="61:32">case <expr pos:start="61:14" pos:end="61:31"><name pos:start="61:14" pos:end="61:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="63:13" pos:end="63:80"><expr pos:start="63:13" pos:end="63:79"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:79"><name pos:start="63:19" pos:end="63:30">decode_audio</name>    <argument_list pos:start="63:35" pos:end="63:79">(<argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">ist</name></expr></argument>, <argument pos:start="63:41" pos:end="63:65"><expr pos:start="63:41" pos:end="63:65"><ternary pos:start="63:41" pos:end="63:65"><condition pos:start="63:41" pos:end="63:51"><expr pos:start="63:41" pos:end="63:49"><name pos:start="63:41" pos:end="63:49">repeating</name></expr> ?</condition><then pos:start="63:53" pos:end="63:56"> <expr pos:start="63:53" pos:end="63:56"><name pos:start="63:53" pos:end="63:56">NULL</name></expr> </then><else pos:start="63:58" pos:end="63:65">: <expr pos:start="63:60" pos:end="63:65"><operator pos:start="63:60" pos:end="63:60">&amp;</operator><name pos:start="63:61" pos:end="63:65">avpkt</name></expr></else></ternary></expr></argument>, <argument pos:start="63:68" pos:end="63:78"><expr pos:start="63:68" pos:end="63:78"><operator pos:start="63:68" pos:end="63:68">&amp;</operator><name pos:start="63:69" pos:end="63:78">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:32">case <expr pos:start="67:14" pos:end="67:31"><name pos:start="67:14" pos:end="67:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:80"><expr pos:start="69:13" pos:end="69:79"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:79"><name pos:start="69:19" pos:end="69:30">decode_video</name>    <argument_list pos:start="69:35" pos:end="69:79">(<argument pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:38">ist</name></expr></argument>, <argument pos:start="69:41" pos:end="69:65"><expr pos:start="69:41" pos:end="69:65"><ternary pos:start="69:41" pos:end="69:65"><condition pos:start="69:41" pos:end="69:51"><expr pos:start="69:41" pos:end="69:49"><name pos:start="69:41" pos:end="69:49">repeating</name></expr> ?</condition><then pos:start="69:53" pos:end="69:56"> <expr pos:start="69:53" pos:end="69:56"><name pos:start="69:53" pos:end="69:56">NULL</name></expr> </then><else pos:start="69:58" pos:end="69:65">: <expr pos:start="69:60" pos:end="69:65"><operator pos:start="69:60" pos:end="69:60">&amp;</operator><name pos:start="69:61" pos:end="69:65">avpkt</name></expr></else></ternary></expr></argument>, <argument pos:start="69:68" pos:end="69:78"><expr pos:start="69:68" pos:end="69:78"><operator pos:start="69:68" pos:end="69:68">&amp;</operator><name pos:start="69:69" pos:end="69:78">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="93:13"><if pos:start="71:13" pos:end="73:17">if <condition pos:start="71:16" pos:end="71:41">(<expr pos:start="71:17" pos:end="71:40"><name pos:start="71:17" pos:end="71:25">repeating</name> <operator pos:start="71:27" pos:end="71:28">&amp;&amp;</operator> <operator pos:start="71:30" pos:end="71:30">!</operator><name pos:start="71:31" pos:end="71:40">got_output</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:17"><block_content pos:start="73:17" pos:end="73:17">

                <empty_stmt pos:start="73:17" pos:end="73:17">;</empty_stmt></block_content></block></if>

            <if type="elseif" pos:start="75:13" pos:end="77:97">else if <condition pos:start="75:21" pos:end="75:42">(<expr pos:start="75:22" pos:end="75:41"><name pos:start="75:22" pos:end="75:24">pkt</name> <operator pos:start="75:26" pos:end="75:27">&amp;&amp;</operator> <name pos:start="75:29" pos:end="75:41"><name pos:start="75:29" pos:end="75:31">pkt</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:41">duration</name></name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:97"><block_content pos:start="77:17" pos:end="77:97">

                <expr_stmt pos:start="77:17" pos:end="77:97"><expr pos:start="77:17" pos:end="77:96"><name pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:19">ist</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:29">next_dts</name></name> <operator pos:start="77:31" pos:end="77:32">+=</operator> <call pos:start="77:34" pos:end="77:96"><name pos:start="77:34" pos:end="77:45">av_rescale_q</name><argument_list pos:start="77:46" pos:end="77:96">(<argument pos:start="77:47" pos:end="77:59"><expr pos:start="77:47" pos:end="77:59"><name pos:start="77:47" pos:end="77:59"><name pos:start="77:47" pos:end="77:49">pkt</name><operator pos:start="77:50" pos:end="77:51">-&gt;</operator><name pos:start="77:52" pos:end="77:59">duration</name></name></expr></argument>, <argument pos:start="77:62" pos:end="77:79"><expr pos:start="77:62" pos:end="77:79"><name pos:start="77:62" pos:end="77:79"><name pos:start="77:62" pos:end="77:64">ist</name><operator pos:start="77:65" pos:end="77:66">-&gt;</operator><name pos:start="77:67" pos:end="77:68">st</name><operator pos:start="77:69" pos:end="77:70">-&gt;</operator><name pos:start="77:71" pos:end="77:79">time_base</name></name></expr></argument>, <argument pos:start="77:82" pos:end="77:95"><expr pos:start="77:82" pos:end="77:95"><name pos:start="77:82" pos:end="77:95">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="79:13" pos:end="83:62">else if <condition pos:start="79:21" pos:end="79:49">(<expr pos:start="79:22" pos:end="79:48"><name pos:start="79:22" pos:end="79:48"><name pos:start="79:22" pos:end="79:24">ist</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:28">st</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:44">avg_frame_rate</name><operator pos:start="79:45" pos:end="79:45">.</operator><name pos:start="79:46" pos:end="79:48">num</name></name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="83:62"><block_content pos:start="81:17" pos:end="83:62">

                <expr_stmt pos:start="81:17" pos:end="83:62"><expr pos:start="81:17" pos:end="83:61"><name pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:19">ist</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:29">next_dts</name></name> <operator pos:start="81:31" pos:end="81:32">+=</operator> <call pos:start="81:34" pos:end="83:61"><name pos:start="81:34" pos:end="81:45">av_rescale_q</name><argument_list pos:start="81:46" pos:end="83:61">(<argument pos:start="81:47" pos:end="81:47"><expr pos:start="81:47" pos:end="81:47"><literal type="number" pos:start="81:47" pos:end="81:47">1</literal></expr></argument>, <argument pos:start="81:50" pos:end="81:82"><expr pos:start="81:50" pos:end="81:82"><call pos:start="81:50" pos:end="81:82"><name pos:start="81:50" pos:end="81:57">av_inv_q</name><argument_list pos:start="81:58" pos:end="81:82">(<argument pos:start="81:59" pos:end="81:81"><expr pos:start="81:59" pos:end="81:81"><name pos:start="81:59" pos:end="81:81"><name pos:start="81:59" pos:end="81:61">ist</name><operator pos:start="81:62" pos:end="81:63">-&gt;</operator><name pos:start="81:64" pos:end="81:65">st</name><operator pos:start="81:66" pos:end="81:67">-&gt;</operator><name pos:start="81:68" pos:end="81:81">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                              <argument pos:start="83:47" pos:end="83:60"><expr pos:start="83:47" pos:end="83:60"><name pos:start="83:47" pos:end="83:60">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="85:13" pos:end="93:13">else if <condition pos:start="85:21" pos:end="85:54">(<expr pos:start="85:22" pos:end="85:53"><name pos:start="85:22" pos:end="85:48"><name pos:start="85:22" pos:end="85:24">ist</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:33">dec_ctx</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:44">framerate</name><operator pos:start="85:45" pos:end="85:45">.</operator><name pos:start="85:46" pos:end="85:48">num</name></name> <operator pos:start="85:50" pos:end="85:51">!=</operator> <literal type="number" pos:start="85:53" pos:end="85:53">0</literal></expr>)</condition> <block pos:start="85:56" pos:end="93:13">{<block_content pos:start="87:17" pos:end="91:94">

                <decl_stmt pos:start="87:17" pos:end="89:81"><decl pos:start="87:17" pos:end="89:80"><type pos:start="87:17" pos:end="87:19"><name pos:start="87:17" pos:end="87:19">int</name></type> <name pos:start="87:21" pos:end="87:25">ticks</name>      <init pos:start="87:32" pos:end="89:80">= <expr pos:start="87:34" pos:end="89:80"><ternary pos:start="87:34" pos:end="89:80"><condition pos:start="87:34" pos:end="87:50"><expr pos:start="87:34" pos:end="87:48"><name pos:start="87:34" pos:end="87:48"><name pos:start="87:34" pos:end="87:36">ist</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:40">st</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:48">parser</name></name></expr> ?</condition><then pos:start="87:52" pos:end="87:83"> <expr pos:start="87:52" pos:end="87:83"><name pos:start="87:52" pos:end="87:79"><name pos:start="87:52" pos:end="87:54">ist</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:58">st</name><operator pos:start="87:59" pos:end="87:60">-&gt;</operator><name pos:start="87:61" pos:end="87:66">parser</name><operator pos:start="87:67" pos:end="87:68">-&gt;</operator><name pos:start="87:69" pos:end="87:79">repeat_pict</name></name> <operator pos:start="87:81" pos:end="87:81">+</operator> <literal type="number" pos:start="87:83" pos:end="87:83">1</literal></expr> </then><else pos:start="87:85" pos:end="89:80">:

                                                   <expr pos:start="89:52" pos:end="89:80"><name pos:start="89:52" pos:end="89:80"><name pos:start="89:52" pos:end="89:54">ist</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:63">dec_ctx</name><operator pos:start="89:64" pos:end="89:65">-&gt;</operator><name pos:start="89:66" pos:end="89:80">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:94"><expr pos:start="91:17" pos:end="91:93"><name pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:19">ist</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:29">next_dts</name></name> <operator pos:start="91:31" pos:end="91:32">+=</operator> <call pos:start="91:34" pos:end="91:93"><name pos:start="91:34" pos:end="91:45">av_rescale_q</name><argument_list pos:start="91:46" pos:end="91:93">(<argument pos:start="91:47" pos:end="91:51"><expr pos:start="91:47" pos:end="91:51"><name pos:start="91:47" pos:end="91:51">ticks</name></expr></argument>, <argument pos:start="91:54" pos:end="91:76"><expr pos:start="91:54" pos:end="91:76"><name pos:start="91:54" pos:end="91:76"><name pos:start="91:54" pos:end="91:56">ist</name><operator pos:start="91:57" pos:end="91:58">-&gt;</operator><name pos:start="91:59" pos:end="91:65">dec_ctx</name><operator pos:start="91:66" pos:end="91:67">-&gt;</operator><name pos:start="91:68" pos:end="91:76">framerate</name></name></expr></argument>, <argument pos:start="91:79" pos:end="91:92"><expr pos:start="91:79" pos:end="91:92"><name pos:start="91:79" pos:end="91:92">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:35">case <expr pos:start="97:14" pos:end="97:34"><name pos:start="97:14" pos:end="97:34">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

            <if_stmt pos:start="99:13" pos:end="101:22"><if pos:start="99:13" pos:end="101:22">if <condition pos:start="99:16" pos:end="99:26">(<expr pos:start="99:17" pos:end="99:25"><name pos:start="99:17" pos:end="99:25">repeating</name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:22"><block_content pos:start="101:17" pos:end="101:22">

                <break pos:start="101:17" pos:end="101:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:64"><expr pos:start="103:13" pos:end="103:63"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:63"><name pos:start="103:19" pos:end="103:37">transcode_subtitles</name><argument_list pos:start="103:38" pos:end="103:63">(<argument pos:start="103:39" pos:end="103:41"><expr pos:start="103:39" pos:end="103:41"><name pos:start="103:39" pos:end="103:41">ist</name></expr></argument>, <argument pos:start="103:44" pos:end="103:49"><expr pos:start="103:44" pos:end="103:49"><operator pos:start="103:44" pos:end="103:44">&amp;</operator><name pos:start="103:45" pos:end="103:49">avpkt</name></expr></argument>, <argument pos:start="103:52" pos:end="103:62"><expr pos:start="103:52" pos:end="103:62"><operator pos:start="103:52" pos:end="103:52">&amp;</operator><name pos:start="103:53" pos:end="103:62">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <default pos:start="107:9" pos:end="107:16">default:</default>

            <return pos:start="109:13" pos:end="109:19">return;</return>

        </block_content>}</block></switch>



        <if_stmt pos:start="115:9" pos:end="127:9"><if pos:start="115:9" pos:end="127:9">if <condition pos:start="115:12" pos:end="115:20">(<expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">ret</name> <operator pos:start="115:17" pos:end="115:17">&lt;</operator> <literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>)</condition> <block pos:start="115:22" pos:end="127:9">{<block_content pos:start="117:13" pos:end="125:18">

            <expr_stmt pos:start="117:13" pos:end="119:52"><expr pos:start="117:13" pos:end="119:51"><call pos:start="117:13" pos:end="119:51"><name pos:start="117:13" pos:end="117:18">av_log</name><argument_list pos:start="117:19" pos:end="119:51">(<argument pos:start="117:20" pos:end="117:23"><expr pos:start="117:20" pos:end="117:23"><name pos:start="117:20" pos:end="117:23">NULL</name></expr></argument>, <argument pos:start="117:26" pos:end="117:37"><expr pos:start="117:26" pos:end="117:37"><name pos:start="117:26" pos:end="117:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:40" pos:end="117:77"><expr pos:start="117:40" pos:end="117:77"><literal type="string" pos:start="117:40" pos:end="117:77">"Error while decoding stream #%d:%d\n"</literal></expr></argument>,

                   <argument pos:start="119:20" pos:end="119:34"><expr pos:start="119:20" pos:end="119:34"><name pos:start="119:20" pos:end="119:34"><name pos:start="119:20" pos:end="119:22">ist</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:34">file_index</name></name></expr></argument>, <argument pos:start="119:37" pos:end="119:50"><expr pos:start="119:37" pos:end="119:50"><name pos:start="119:37" pos:end="119:50"><name pos:start="119:37" pos:end="119:39">ist</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:43">st</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:50">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:32"><if pos:start="121:13" pos:end="123:32">if <condition pos:start="121:16" pos:end="121:30">(<expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:32"><block_content pos:start="123:17" pos:end="123:32">

                <expr_stmt pos:start="123:17" pos:end="123:32"><expr pos:start="123:17" pos:end="123:31"><call pos:start="123:17" pos:end="123:31"><name pos:start="123:17" pos:end="123:28">exit_program</name><argument_list pos:start="123:29" pos:end="123:31">(<argument pos:start="123:30" pos:end="123:30"><expr pos:start="123:30" pos:end="123:30"><literal type="number" pos:start="123:30" pos:end="123:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="131:9" pos:end="133:18"><if pos:start="131:9" pos:end="133:18">if <condition pos:start="131:12" pos:end="131:24">(<expr pos:start="131:13" pos:end="131:23"><operator pos:start="131:13" pos:end="131:13">!</operator><name pos:start="131:14" pos:end="131:23">got_output</name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:18"><block_content pos:start="133:13" pos:end="133:18">

            <break pos:start="133:13" pos:end="133:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:22"><expr pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:17">repeating</name> <operator pos:start="137:19" pos:end="137:19">=</operator> <literal type="number" pos:start="137:21" pos:end="137:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="143:5" pos:end="143:85">/* after flushing, send an EOF on all the filter inputs attached to the stream */</comment>

    <comment type="block" pos:start="145:5" pos:end="145:69">/* except when looping we need to flush but not to send an EOF */</comment>

    <if_stmt pos:start="147:5" pos:end="159:5"><if pos:start="147:5" pos:end="159:5">if <condition pos:start="147:8" pos:end="147:48">(<expr pos:start="147:9" pos:end="147:47"><operator pos:start="147:9" pos:end="147:9">!</operator><name pos:start="147:10" pos:end="147:12">pkt</name> <operator pos:start="147:14" pos:end="147:15">&amp;&amp;</operator> <name pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:19">ist</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:36">decoding_needed</name></name> <operator pos:start="147:38" pos:end="147:39">&amp;&amp;</operator> <operator pos:start="147:41" pos:end="147:41">!</operator><name pos:start="147:42" pos:end="147:47">no_eof</name></expr>)</condition> <block pos:start="147:50" pos:end="159:5">{<block_content pos:start="149:9" pos:end="157:9">

        <decl_stmt pos:start="149:9" pos:end="149:39"><decl pos:start="149:9" pos:end="149:38"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:15">ret</name> <init pos:start="149:17" pos:end="149:38">= <expr pos:start="149:19" pos:end="149:38"><call pos:start="149:19" pos:end="149:38"><name pos:start="149:19" pos:end="149:33">send_filter_eof</name><argument_list pos:start="149:34" pos:end="149:38">(<argument pos:start="149:35" pos:end="149:37"><expr pos:start="149:35" pos:end="149:37"><name pos:start="149:35" pos:end="149:37">ist</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if <condition pos:start="151:12" pos:end="151:20">(<expr pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:17">&lt;</operator> <literal type="number" pos:start="151:19" pos:end="151:19">0</literal></expr>)</condition> <block pos:start="151:22" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:28">

            <expr_stmt pos:start="153:13" pos:end="153:78"><expr pos:start="153:13" pos:end="153:77"><call pos:start="153:13" pos:end="153:77"><name pos:start="153:13" pos:end="153:18">av_log</name><argument_list pos:start="153:19" pos:end="153:77">(<argument pos:start="153:20" pos:end="153:23"><expr pos:start="153:20" pos:end="153:23"><name pos:start="153:20" pos:end="153:23">NULL</name></expr></argument>, <argument pos:start="153:26" pos:end="153:37"><expr pos:start="153:26" pos:end="153:37"><name pos:start="153:26" pos:end="153:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="153:40" pos:end="153:76"><expr pos:start="153:40" pos:end="153:76"><literal type="string" pos:start="153:40" pos:end="153:76">"Error marking filters as finished\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:28"><expr pos:start="155:13" pos:end="155:27"><call pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:24">exit_program</name><argument_list pos:start="155:25" pos:end="155:27">(<argument pos:start="155:26" pos:end="155:26"><expr pos:start="155:26" pos:end="155:26"><literal type="number" pos:start="155:26" pos:end="155:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:28">/* handle stream copy */</comment>

    <if_stmt pos:start="165:5" pos:end="197:5"><if pos:start="165:5" pos:end="197:5">if <condition pos:start="165:8" pos:end="165:30">(<expr pos:start="165:9" pos:end="165:29"><operator pos:start="165:9" pos:end="165:9">!</operator><name pos:start="165:10" pos:end="165:29"><name pos:start="165:10" pos:end="165:12">ist</name><operator pos:start="165:13" pos:end="165:14">-&gt;</operator><name pos:start="165:15" pos:end="165:29">decoding_needed</name></name></expr>)</condition> <block pos:start="165:32" pos:end="197:5">{<block_content pos:start="167:9" pos:end="195:9">

        <expr_stmt pos:start="167:9" pos:end="167:38"><expr pos:start="167:9" pos:end="167:37"><name pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:11">ist</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:21">last_dts</name></name> <operator pos:start="167:23" pos:end="167:23">=</operator> <name pos:start="167:25" pos:end="167:37"><name pos:start="167:25" pos:end="167:27">ist</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:37">next_dts</name></name></expr>;</expr_stmt>

        <switch pos:start="169:9" pos:end="195:9">switch <condition pos:start="169:16" pos:end="169:41">(<expr pos:start="169:17" pos:end="169:40"><name pos:start="169:17" pos:end="169:40"><name pos:start="169:17" pos:end="169:19">ist</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:28">dec_ctx</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:40">codec_type</name></name></expr>)</condition> <block pos:start="169:43" pos:end="195:9">{<block_content pos:start="171:9" pos:end="193:18">

        <case pos:start="171:9" pos:end="171:32">case <expr pos:start="171:14" pos:end="171:31"><name pos:start="171:14" pos:end="171:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="175:55"><expr pos:start="173:13" pos:end="175:54"><name pos:start="173:13" pos:end="173:25"><name pos:start="173:13" pos:end="173:15">ist</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:25">next_dts</name></name> <operator pos:start="173:27" pos:end="173:28">+=</operator> <operator pos:start="173:30" pos:end="173:30">(</operator><operator pos:start="173:31" pos:end="173:31">(</operator><name pos:start="173:32" pos:end="173:38">int64_t</name><operator pos:start="173:39" pos:end="173:39">)</operator><name pos:start="173:40" pos:end="173:51">AV_TIME_BASE</name> <operator pos:start="173:53" pos:end="173:53">*</operator> <name pos:start="173:55" pos:end="173:78"><name pos:start="173:55" pos:end="173:57">ist</name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:66">dec_ctx</name><operator pos:start="173:67" pos:end="173:68">-&gt;</operator><name pos:start="173:69" pos:end="173:78">frame_size</name></name><operator pos:start="173:79" pos:end="173:79">)</operator> <operator pos:start="173:81" pos:end="173:81">/</operator>

                             <name pos:start="175:30" pos:end="175:54"><name pos:start="175:30" pos:end="175:32">ist</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:41">dec_ctx</name><operator pos:start="175:42" pos:end="175:43">-&gt;</operator><name pos:start="175:44" pos:end="175:54">sample_rate</name></name></expr>;</expr_stmt>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        <case pos:start="179:9" pos:end="179:32">case <expr pos:start="179:14" pos:end="179:31"><name pos:start="179:14" pos:end="179:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="181:13" pos:end="191:13"><if pos:start="181:13" pos:end="191:13">if <condition pos:start="181:16" pos:end="181:49">(<expr pos:start="181:17" pos:end="181:48"><name pos:start="181:17" pos:end="181:43"><name pos:start="181:17" pos:end="181:19">ist</name><operator pos:start="181:20" pos:end="181:21">-&gt;</operator><name pos:start="181:22" pos:end="181:28">dec_ctx</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:39">framerate</name><operator pos:start="181:40" pos:end="181:40">.</operator><name pos:start="181:41" pos:end="181:43">num</name></name> <operator pos:start="181:45" pos:end="181:46">!=</operator> <literal type="number" pos:start="181:48" pos:end="181:48">0</literal></expr>)</condition> <block pos:start="181:51" pos:end="191:13">{<block_content pos:start="183:17" pos:end="189:62">

                <decl_stmt pos:start="183:17" pos:end="183:111"><decl pos:start="183:17" pos:end="183:110"><type pos:start="183:17" pos:end="183:19"><name pos:start="183:17" pos:end="183:19">int</name></type> <name pos:start="183:21" pos:end="183:25">ticks</name> <init pos:start="183:27" pos:end="183:110">= <expr pos:start="183:29" pos:end="183:110"><ternary pos:start="183:29" pos:end="183:110"><condition pos:start="183:29" pos:end="183:45"><expr pos:start="183:29" pos:end="183:43"><name pos:start="183:29" pos:end="183:43"><name pos:start="183:29" pos:end="183:31">ist</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:35">st</name><operator pos:start="183:36" pos:end="183:37">-&gt;</operator><name pos:start="183:38" pos:end="183:43">parser</name></name></expr> ?</condition><then pos:start="183:47" pos:end="183:78"> <expr pos:start="183:47" pos:end="183:78"><name pos:start="183:47" pos:end="183:74"><name pos:start="183:47" pos:end="183:49">ist</name><operator pos:start="183:50" pos:end="183:51">-&gt;</operator><name pos:start="183:52" pos:end="183:53">st</name><operator pos:start="183:54" pos:end="183:55">-&gt;</operator><name pos:start="183:56" pos:end="183:61">parser</name><operator pos:start="183:62" pos:end="183:63">-&gt;</operator><name pos:start="183:64" pos:end="183:74">repeat_pict</name></name> <operator pos:start="183:76" pos:end="183:76">+</operator> <literal type="number" pos:start="183:78" pos:end="183:78">1</literal></expr> </then><else pos:start="183:80" pos:end="183:110">: <expr pos:start="183:82" pos:end="183:110"><name pos:start="183:82" pos:end="183:110"><name pos:start="183:82" pos:end="183:84">ist</name><operator pos:start="183:85" pos:end="183:86">-&gt;</operator><name pos:start="183:87" pos:end="183:93">dec_ctx</name><operator pos:start="183:94" pos:end="183:95">-&gt;</operator><name pos:start="183:96" pos:end="183:110">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="185:17" pos:end="189:62"><expr pos:start="185:17" pos:end="189:61"><name pos:start="185:17" pos:end="185:29"><name pos:start="185:17" pos:end="185:19">ist</name><operator pos:start="185:20" pos:end="185:21">-&gt;</operator><name pos:start="185:22" pos:end="185:29">next_dts</name></name> <operator pos:start="185:31" pos:end="185:32">+=</operator> <operator pos:start="185:34" pos:end="185:34">(</operator><operator pos:start="185:35" pos:end="185:35">(</operator><name pos:start="185:36" pos:end="185:42">int64_t</name><operator pos:start="185:43" pos:end="185:43">)</operator><name pos:start="185:44" pos:end="185:55">AV_TIME_BASE</name> <operator pos:start="185:57" pos:end="185:57">*</operator>

                                  <name pos:start="187:35" pos:end="187:61"><name pos:start="187:35" pos:end="187:37">ist</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:46">dec_ctx</name><operator pos:start="187:47" pos:end="187:48">-&gt;</operator><name pos:start="187:49" pos:end="187:57">framerate</name><operator pos:start="187:58" pos:end="187:58">.</operator><name pos:start="187:59" pos:end="187:61">den</name></name> <operator pos:start="187:63" pos:end="187:63">*</operator> <name pos:start="187:65" pos:end="187:69">ticks</name><operator pos:start="187:70" pos:end="187:70">)</operator> <operator pos:start="187:72" pos:end="187:72">/</operator>

                                  <name pos:start="189:35" pos:end="189:61"><name pos:start="189:35" pos:end="189:37">ist</name><operator pos:start="189:38" pos:end="189:39">-&gt;</operator><name pos:start="189:40" pos:end="189:46">dec_ctx</name><operator pos:start="189:47" pos:end="189:48">-&gt;</operator><name pos:start="189:49" pos:end="189:57">framerate</name><operator pos:start="189:58" pos:end="189:58">.</operator><name pos:start="189:59" pos:end="189:61">num</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <for pos:start="199:5" pos:end="213:5">for <control pos:start="199:9" pos:end="199:50">(<init pos:start="199:10" pos:end="199:15"><expr pos:start="199:10" pos:end="199:14"><name pos:start="199:10" pos:end="199:10">i</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <literal type="number" pos:start="199:14" pos:end="199:14">0</literal></expr>;</init> <condition pos:start="199:17" pos:end="199:45"><expr pos:start="199:17" pos:end="199:44"><name pos:start="199:17" pos:end="199:19">pkt</name> <operator pos:start="199:21" pos:end="199:22">&amp;&amp;</operator> <name pos:start="199:24" pos:end="199:24">i</name> <operator pos:start="199:26" pos:end="199:26">&lt;</operator> <name pos:start="199:28" pos:end="199:44">nb_output_streams</name></expr>;</condition> <incr pos:start="199:47" pos:end="199:49"><expr pos:start="199:47" pos:end="199:49"><name pos:start="199:47" pos:end="199:47">i</name><operator pos:start="199:48" pos:end="199:49">++</operator></expr></incr>)</control> <block pos:start="199:52" pos:end="213:5">{<block_content pos:start="201:9" pos:end="211:37">

        <decl_stmt pos:start="201:9" pos:end="201:46"><decl pos:start="201:9" pos:end="201:45"><type pos:start="201:9" pos:end="201:22"><name pos:start="201:9" pos:end="201:20">OutputStream</name> <modifier pos:start="201:22" pos:end="201:22">*</modifier></type><name pos:start="201:23" pos:end="201:25">ost</name> <init pos:start="201:27" pos:end="201:45">= <expr pos:start="201:29" pos:end="201:45"><name pos:start="201:29" pos:end="201:45"><name pos:start="201:29" pos:end="201:42">output_streams</name><index pos:start="201:43" pos:end="201:45">[<expr pos:start="201:44" pos:end="201:44"><name pos:start="201:44" pos:end="201:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="205:9" pos:end="207:21"><if pos:start="205:9" pos:end="207:21">if <condition pos:start="205:12" pos:end="205:72">(<expr pos:start="205:13" pos:end="205:71"><operator pos:start="205:13" pos:end="205:13">!</operator><call pos:start="205:14" pos:end="205:47"><name pos:start="205:14" pos:end="205:37">check_output_constraints</name><argument_list pos:start="205:38" pos:end="205:47">(<argument pos:start="205:39" pos:end="205:41"><expr pos:start="205:39" pos:end="205:41"><name pos:start="205:39" pos:end="205:41">ist</name></expr></argument>, <argument pos:start="205:44" pos:end="205:46"><expr pos:start="205:44" pos:end="205:46"><name pos:start="205:44" pos:end="205:46">ost</name></expr></argument>)</argument_list></call> <operator pos:start="205:49" pos:end="205:50">||</operator> <name pos:start="205:52" pos:end="205:71"><name pos:start="205:52" pos:end="205:54">ost</name><operator pos:start="205:55" pos:end="205:56">-&gt;</operator><name pos:start="205:57" pos:end="205:71">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:21"><block_content pos:start="207:13" pos:end="207:21">

            <continue pos:start="207:13" pos:end="207:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="211:9" pos:end="211:37"><expr pos:start="211:9" pos:end="211:36"><call pos:start="211:9" pos:end="211:36"><name pos:start="211:9" pos:end="211:21">do_streamcopy</name><argument_list pos:start="211:22" pos:end="211:36">(<argument pos:start="211:23" pos:end="211:25"><expr pos:start="211:23" pos:end="211:25"><name pos:start="211:23" pos:end="211:25">ist</name></expr></argument>, <argument pos:start="211:28" pos:end="211:30"><expr pos:start="211:28" pos:end="211:30"><name pos:start="211:28" pos:end="211:30">ost</name></expr></argument>, <argument pos:start="211:33" pos:end="211:35"><expr pos:start="211:33" pos:end="211:35"><name pos:start="211:33" pos:end="211:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="217:5" pos:end="217:11">return;</return>

</block_content>}</block></function>
</unit>
