<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14635.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mjpeg_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:55">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, 

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:40"><decl pos:start="5:31" pos:end="5:40"><type pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:35">UINT8</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="207:1">{<block_content pos:start="9:5" pos:end="205:25">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">MJpegDecodeContext</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:25">s</name> <init pos:start="9:27" pos:end="9:44">= <expr pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:33">avctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">UINT8</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:18">buf_end</name></decl>, <decl pos:start="11:21" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:28">buf_ptr</name></decl>, <decl pos:start="11:31" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:40">buf_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">len</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">code</name></decl>, <decl pos:start="13:20" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:29">input_size</name></decl>, <decl pos:start="13:32" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:32">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AVPicture</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:22">picture</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:27">start_code</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:14">data_size</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:16">buf_size</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:11">buf_ptr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:11">buf_end</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:17">buf</name> <operator pos:start="35:19" pos:end="35:19">+</operator> <name pos:start="35:21" pos:end="35:28">buf_size</name></expr>;</expr_stmt>

    <while pos:start="37:5" pos:end="201:5">while <condition pos:start="37:11" pos:end="37:29">(<expr pos:start="37:12" pos:end="37:28"><name pos:start="37:12" pos:end="37:18">buf_ptr</name> <operator pos:start="37:20" pos:end="37:20">&lt;</operator> <name pos:start="37:22" pos:end="37:28">buf_end</name></expr>)</condition> <block pos:start="37:31" pos:end="201:5">{<block_content pos:start="39:9" pos:end="199:9">

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:17">buf_start</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:27">buf_ptr</name></expr>;</expr_stmt>

        <comment type="block" pos:start="41:9" pos:end="41:36">/* find start next marker */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:64"><expr pos:start="43:9" pos:end="43:63"><name pos:start="43:9" pos:end="43:12">code</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:63"><name pos:start="43:16" pos:end="43:26">find_marker</name><argument_list pos:start="43:27" pos:end="43:63">(<argument pos:start="43:28" pos:end="43:35"><expr pos:start="43:28" pos:end="43:35"><operator pos:start="43:28" pos:end="43:28">&amp;</operator><name pos:start="43:29" pos:end="43:35">buf_ptr</name></expr></argument>, <argument pos:start="43:38" pos:end="43:44"><expr pos:start="43:38" pos:end="43:44"><name pos:start="43:38" pos:end="43:44">buf_end</name></expr></argument>, <argument pos:start="43:47" pos:end="43:62"><expr pos:start="43:47" pos:end="43:62"><operator pos:start="43:47" pos:end="43:47">&amp;</operator><name pos:start="43:48" pos:end="43:62"><name pos:start="43:48" pos:end="43:48">s</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:62">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="45:9" pos:end="45:28">/* copy to buffer */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:11">len</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:21">buf_ptr</name> <operator pos:start="47:23" pos:end="47:23">-</operator> <name pos:start="47:25" pos:end="47:33">buf_start</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="199:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="49:60">(<expr pos:start="49:13" pos:end="49:59"><name pos:start="49:13" pos:end="49:15">len</name> <operator pos:start="49:17" pos:end="49:17">+</operator> <operator pos:start="49:19" pos:end="49:19">(</operator><name pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:29">buf_ptr</name></name> <operator pos:start="49:31" pos:end="49:31">-</operator> <name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:41">buffer</name></name><operator pos:start="49:42" pos:end="49:42">)</operator> <operator pos:start="49:44" pos:end="49:44">&gt;</operator> <name pos:start="49:46" pos:end="49:59"><name pos:start="49:46" pos:end="49:46">s</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:59">buffer_size</name></name></expr>)</condition> <block pos:start="49:62" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:37">

            <comment type="block" pos:start="51:13" pos:end="51:38">/* data too big : flush */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:35"><expr pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:22">buf_ptr</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:34"><name pos:start="53:26" pos:end="53:26">s</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:34">buffer</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:37"><if pos:start="55:13" pos:end="57:37">if <condition pos:start="55:16" pos:end="55:25">(<expr pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:20">code</name> <operator pos:start="55:22" pos:end="55:22">&gt;</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:37"><block_content pos:start="57:17" pos:end="57:37">

                <expr_stmt pos:start="57:17" pos:end="57:37"><expr pos:start="57:17" pos:end="57:36"><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:29">start_code</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:36">code</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="199:9">else <block pos:start="59:16" pos:end="199:9">{<block_content pos:start="61:13" pos:end="197:13">

            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><call pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:18">memcpy</name><argument_list pos:start="61:19" pos:end="61:46">(<argument pos:start="61:20" pos:end="61:29"><expr pos:start="61:20" pos:end="61:29"><name pos:start="61:20" pos:end="61:29"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:29">buf_ptr</name></name></expr></argument>, <argument pos:start="61:32" pos:end="61:40"><expr pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:40">buf_start</name></expr></argument>, <argument pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">buf_ptr</name></name> <operator pos:start="63:24" pos:end="63:25">+=</operator> <name pos:start="63:27" pos:end="63:29">len</name></expr>;</expr_stmt>

            <comment type="block" pos:start="65:13" pos:end="65:77">/* if we got FF 00, we copy FF to the stream to unescape FF 00 */</comment>

	    <comment type="block" pos:start="67:13" pos:end="67:63">/* valid marker code is between 00 and ff - alex */</comment>

            <if_stmt pos:start="69:13" pos:end="197:13"><if pos:start="69:13" pos:end="73:13">if <condition pos:start="69:16" pos:end="69:42">(<expr pos:start="69:17" pos:end="69:41"><name pos:start="69:17" pos:end="69:20">code</name> <operator pos:start="69:22" pos:end="69:23">==</operator> <literal type="number" pos:start="69:25" pos:end="69:25">0</literal> <operator pos:start="69:27" pos:end="69:28">||</operator> <name pos:start="69:30" pos:end="69:33">code</name> <operator pos:start="69:35" pos:end="69:36">==</operator> <literal type="number" pos:start="69:38" pos:end="69:41">0xff</literal></expr>)</condition> <block pos:start="69:44" pos:end="73:13">{<block_content pos:start="71:17" pos:end="71:29">

                <expr_stmt pos:start="71:17" pos:end="71:29"><expr pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:26">buf_ptr</name></name><operator pos:start="71:27" pos:end="71:28">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="73:15" pos:end="197:13">else if <condition pos:start="73:23" pos:end="73:32">(<expr pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:27">code</name> <operator pos:start="73:29" pos:end="73:29">&gt;</operator> <literal type="number" pos:start="73:31" pos:end="73:31">0</literal></expr>)</condition> <block pos:start="73:34" pos:end="197:13">{<block_content pos:start="77:17" pos:end="195:17">

                <comment type="block" pos:start="75:17" pos:end="75:54">/* prepare data for next start code */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:52"><expr pos:start="77:17" pos:end="77:51"><name pos:start="77:17" pos:end="77:26">input_size</name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:39"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:39">buf_ptr</name></name> <operator pos:start="77:41" pos:end="77:41">-</operator> <name pos:start="77:43" pos:end="77:51"><name pos:start="77:43" pos:end="77:43">s</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:51">buffer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:43"><expr pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:26">start_code</name> <operator pos:start="79:28" pos:end="79:28">=</operator> <name pos:start="79:30" pos:end="79:42"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:42">start_code</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:39"><expr pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:26"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:26">buf_ptr</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:38"><name pos:start="81:30" pos:end="81:30">s</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:38">buffer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:37"><expr pos:start="83:17" pos:end="83:36"><name pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:29">start_code</name></name> <operator pos:start="83:31" pos:end="83:31">=</operator> <name pos:start="83:33" pos:end="83:36">code</name></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:51"><expr pos:start="85:17" pos:end="85:50"><call pos:start="85:17" pos:end="85:50"><name pos:start="85:17" pos:end="85:23">dprintf</name><argument_list pos:start="85:24" pos:end="85:50">(<argument pos:start="85:25" pos:end="85:37"><expr pos:start="85:25" pos:end="85:37"><literal type="string" pos:start="85:25" pos:end="85:37">"marker=%x\n"</literal></expr></argument>, <argument pos:start="85:40" pos:end="85:49"><expr pos:start="85:40" pos:end="85:49"><name pos:start="85:40" pos:end="85:49">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="87:17" pos:end="195:17">switch<condition pos:start="87:23" pos:end="87:34">(<expr pos:start="87:24" pos:end="87:33"><name pos:start="87:24" pos:end="87:33">start_code</name></expr>)</condition> <block pos:start="87:36" pos:end="195:17">{<block_content pos:start="89:17" pos:end="193:26">

                <case pos:start="89:17" pos:end="89:25">case <expr pos:start="89:22" pos:end="89:24"><name pos:start="89:22" pos:end="89:24">SOI</name></expr>:</case>

                    <comment type="block" pos:start="91:21" pos:end="91:46">/* nothing to do on SOI */</comment>

                    <break pos:start="93:21" pos:end="93:26">break;</break>

                <case pos:start="95:17" pos:end="95:25">case <expr pos:start="95:22" pos:end="95:24"><name pos:start="95:22" pos:end="95:24">DQT</name></expr>:</case>

                    <expr_stmt pos:start="97:21" pos:end="97:63"><expr pos:start="97:21" pos:end="97:62"><call pos:start="97:21" pos:end="97:62"><name pos:start="97:21" pos:end="97:36">mjpeg_decode_dqt</name><argument_list pos:start="97:37" pos:end="97:62">(<argument pos:start="97:38" pos:end="97:38"><expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">s</name></expr></argument>, <argument pos:start="97:41" pos:end="97:49"><expr pos:start="97:41" pos:end="97:49"><name pos:start="97:41" pos:end="97:49"><name pos:start="97:41" pos:end="97:41">s</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:49">buffer</name></name></expr></argument>, <argument pos:start="97:52" pos:end="97:61"><expr pos:start="97:52" pos:end="97:61"><name pos:start="97:52" pos:end="97:61">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="99:21" pos:end="99:26">break;</break>

                <case pos:start="101:17" pos:end="101:25">case <expr pos:start="101:22" pos:end="101:24"><name pos:start="101:22" pos:end="101:24">DHT</name></expr>:</case>

                    <expr_stmt pos:start="103:21" pos:end="103:63"><expr pos:start="103:21" pos:end="103:62"><call pos:start="103:21" pos:end="103:62"><name pos:start="103:21" pos:end="103:36">mjpeg_decode_dht</name><argument_list pos:start="103:37" pos:end="103:62">(<argument pos:start="103:38" pos:end="103:38"><expr pos:start="103:38" pos:end="103:38"><name pos:start="103:38" pos:end="103:38">s</name></expr></argument>, <argument pos:start="103:41" pos:end="103:49"><expr pos:start="103:41" pos:end="103:49"><name pos:start="103:41" pos:end="103:49"><name pos:start="103:41" pos:end="103:41">s</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:49">buffer</name></name></expr></argument>, <argument pos:start="103:52" pos:end="103:61"><expr pos:start="103:52" pos:end="103:61"><name pos:start="103:52" pos:end="103:61">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="105:21" pos:end="105:26">break;</break>

                <case pos:start="107:17" pos:end="107:26">case <expr pos:start="107:22" pos:end="107:25"><name pos:start="107:22" pos:end="107:25">SOF0</name></expr>:</case>

                    <expr_stmt pos:start="109:21" pos:end="109:64"><expr pos:start="109:21" pos:end="109:63"><call pos:start="109:21" pos:end="109:63"><name pos:start="109:21" pos:end="109:37">mjpeg_decode_sof0</name><argument_list pos:start="109:38" pos:end="109:63">(<argument pos:start="109:39" pos:end="109:39"><expr pos:start="109:39" pos:end="109:39"><name pos:start="109:39" pos:end="109:39">s</name></expr></argument>, <argument pos:start="109:42" pos:end="109:50"><expr pos:start="109:42" pos:end="109:50"><name pos:start="109:42" pos:end="109:50"><name pos:start="109:42" pos:end="109:42">s</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:50">buffer</name></name></expr></argument>, <argument pos:start="109:53" pos:end="109:62"><expr pos:start="109:53" pos:end="109:62"><name pos:start="109:53" pos:end="109:62">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="111:21" pos:end="111:26">break;</break>

                <case pos:start="113:17" pos:end="113:25">case <expr pos:start="113:22" pos:end="113:24"><name pos:start="113:22" pos:end="113:24">SOS</name></expr>:</case>

                    <expr_stmt pos:start="115:21" pos:end="115:63"><expr pos:start="115:21" pos:end="115:62"><call pos:start="115:21" pos:end="115:62"><name pos:start="115:21" pos:end="115:36">mjpeg_decode_sos</name><argument_list pos:start="115:37" pos:end="115:62">(<argument pos:start="115:38" pos:end="115:38"><expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">s</name></expr></argument>, <argument pos:start="115:41" pos:end="115:49"><expr pos:start="115:41" pos:end="115:49"><name pos:start="115:41" pos:end="115:49"><name pos:start="115:41" pos:end="115:41">s</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:49">buffer</name></name></expr></argument>, <argument pos:start="115:52" pos:end="115:61"><expr pos:start="115:52" pos:end="115:61"><name pos:start="115:52" pos:end="115:61">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="117:21" pos:end="191:21"><if pos:start="117:21" pos:end="191:21">if <condition pos:start="117:24" pos:end="117:45">(<expr pos:start="117:25" pos:end="117:44"><name pos:start="117:25" pos:end="117:37"><name pos:start="117:25" pos:end="117:25">s</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:37">start_code</name></name> <operator pos:start="117:39" pos:end="117:40">==</operator> <name pos:start="117:42" pos:end="117:44">EOI</name></expr>)</condition> <block pos:start="117:47" pos:end="191:21">{<block_content pos:start="119:25" pos:end="189:37">

                        <decl_stmt pos:start="119:25" pos:end="119:30"><decl pos:start="119:25" pos:end="119:29"><type pos:start="119:25" pos:end="119:27"><name pos:start="119:25" pos:end="119:27">int</name></type> <name pos:start="119:29" pos:end="119:29">l</name></decl>;</decl_stmt>

                        <if_stmt pos:start="121:25" pos:end="131:25"><if pos:start="121:25" pos:end="131:25">if <condition pos:start="121:28" pos:end="121:42">(<expr pos:start="121:29" pos:end="121:41"><name pos:start="121:29" pos:end="121:41"><name pos:start="121:29" pos:end="121:29">s</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:41">interlaced</name></name></expr>)</condition> <block pos:start="121:44" pos:end="131:25">{<block_content pos:start="123:29" pos:end="129:45">

                            <expr_stmt pos:start="123:29" pos:end="123:49"><expr pos:start="123:29" pos:end="123:48"><name pos:start="123:29" pos:end="123:43"><name pos:start="123:29" pos:end="123:29">s</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:43">bottom_field</name></name> <operator pos:start="123:45" pos:end="123:46">^=</operator> <literal type="number" pos:start="123:48" pos:end="123:48">1</literal></expr>;</expr_stmt>

                            <comment type="block" pos:start="125:29" pos:end="125:78">/* if not bottom field, do not output image yet */</comment>

                            <if_stmt pos:start="127:29" pos:end="129:45"><if pos:start="127:29" pos:end="129:45">if <condition pos:start="127:32" pos:end="127:48">(<expr pos:start="127:33" pos:end="127:47"><name pos:start="127:33" pos:end="127:47"><name pos:start="127:33" pos:end="127:33">s</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:47">bottom_field</name></name></expr>)</condition><block type="pseudo" pos:start="129:33" pos:end="129:45"><block_content pos:start="129:33" pos:end="129:45">

                                <goto pos:start="129:33" pos:end="129:45">goto <name pos:start="129:38" pos:end="129:44">the_end</name>;</goto></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <for pos:start="133:25" pos:end="145:25">for<control pos:start="133:28" pos:end="133:40">(<init pos:start="133:29" pos:end="133:32"><expr pos:start="133:29" pos:end="133:31"><name pos:start="133:29" pos:end="133:29">i</name><operator pos:start="133:30" pos:end="133:30">=</operator><literal type="number" pos:start="133:31" pos:end="133:31">0</literal></expr>;</init><condition pos:start="133:33" pos:end="133:36"><expr pos:start="133:33" pos:end="133:35"><name pos:start="133:33" pos:end="133:33">i</name><operator pos:start="133:34" pos:end="133:34">&lt;</operator><literal type="number" pos:start="133:35" pos:end="133:35">3</literal></expr>;</condition><incr pos:start="133:37" pos:end="133:39"><expr pos:start="133:37" pos:end="133:39"><name pos:start="133:37" pos:end="133:37">i</name><operator pos:start="133:38" pos:end="133:39">++</operator></expr></incr>)</control> <block pos:start="133:42" pos:end="145:25">{<block_content pos:start="135:29" pos:end="143:53">

                            <expr_stmt pos:start="135:29" pos:end="135:69"><expr pos:start="135:29" pos:end="135:68"><name pos:start="135:29" pos:end="135:44"><name pos:start="135:29" pos:end="135:35">picture</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:41">data</name><index pos:start="135:42" pos:end="135:44">[<expr pos:start="135:43" pos:end="135:43"><name pos:start="135:43" pos:end="135:43">i</name></expr>]</index></name> <operator pos:start="135:46" pos:end="135:46">=</operator> <name pos:start="135:48" pos:end="135:68"><name pos:start="135:48" pos:end="135:48">s</name><operator pos:start="135:49" pos:end="135:50">-&gt;</operator><name pos:start="135:51" pos:end="135:65">current_picture</name><index pos:start="135:66" pos:end="135:68">[<expr pos:start="135:67" pos:end="135:67"><name pos:start="135:67" pos:end="135:67">i</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="137:29" pos:end="137:47"><expr pos:start="137:29" pos:end="137:46"><name pos:start="137:29" pos:end="137:29">l</name> <operator pos:start="137:31" pos:end="137:31">=</operator> <name pos:start="137:33" pos:end="137:46"><name pos:start="137:33" pos:end="137:33">s</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:43">linesize</name><index pos:start="137:44" pos:end="137:46">[<expr pos:start="137:45" pos:end="137:45"><name pos:start="137:45" pos:end="137:45">i</name></expr>]</index></name></expr>;</expr_stmt>

                            <if_stmt pos:start="139:29" pos:end="141:40"><if pos:start="139:29" pos:end="141:40">if <condition pos:start="139:32" pos:end="139:46">(<expr pos:start="139:33" pos:end="139:45"><name pos:start="139:33" pos:end="139:45"><name pos:start="139:33" pos:end="139:33">s</name><operator pos:start="139:34" pos:end="139:35">-&gt;</operator><name pos:start="139:36" pos:end="139:45">interlaced</name></name></expr>)</condition><block type="pseudo" pos:start="141:33" pos:end="141:40"><block_content pos:start="141:33" pos:end="141:40">

                                <expr_stmt pos:start="141:33" pos:end="141:40"><expr pos:start="141:33" pos:end="141:39"><name pos:start="141:33" pos:end="141:33">l</name> <operator pos:start="141:35" pos:end="141:37">&gt;&gt;=</operator> <literal type="number" pos:start="141:39" pos:end="141:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="143:29" pos:end="143:53"><expr pos:start="143:29" pos:end="143:52"><name pos:start="143:29" pos:end="143:48"><name pos:start="143:29" pos:end="143:35">picture</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:45">linesize</name><index pos:start="143:46" pos:end="143:48">[<expr pos:start="143:47" pos:end="143:47"><name pos:start="143:47" pos:end="143:47">i</name></expr>]</index></name> <operator pos:start="143:50" pos:end="143:50">=</operator> <name pos:start="143:52" pos:end="143:52">l</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="147:25" pos:end="147:55"><expr pos:start="147:25" pos:end="147:54"><operator pos:start="147:25" pos:end="147:25">*</operator><name pos:start="147:26" pos:end="147:34">data_size</name> <operator pos:start="147:36" pos:end="147:36">=</operator> <sizeof pos:start="147:38" pos:end="147:54">sizeof<argument_list pos:start="147:44" pos:end="147:54">(<argument pos:start="147:45" pos:end="147:53"><expr pos:start="147:45" pos:end="147:53"><name pos:start="147:45" pos:end="147:53">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:50"><expr pos:start="149:25" pos:end="149:49"><name pos:start="149:25" pos:end="149:37"><name pos:start="149:25" pos:end="149:29">avctx</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:37">height</name></name> <operator pos:start="149:39" pos:end="149:39">=</operator> <name pos:start="149:41" pos:end="149:49"><name pos:start="149:41" pos:end="149:41">s</name><operator pos:start="149:42" pos:end="149:43">-&gt;</operator><name pos:start="149:44" pos:end="149:49">height</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="151:25" pos:end="153:47"><if pos:start="151:25" pos:end="153:47">if <condition pos:start="151:28" pos:end="151:42">(<expr pos:start="151:29" pos:end="151:41"><name pos:start="151:29" pos:end="151:41"><name pos:start="151:29" pos:end="151:29">s</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:41">interlaced</name></name></expr>)</condition><block type="pseudo" pos:start="153:29" pos:end="153:47"><block_content pos:start="153:29" pos:end="153:47">

                            <expr_stmt pos:start="153:29" pos:end="153:47"><expr pos:start="153:29" pos:end="153:46"><name pos:start="153:29" pos:end="153:41"><name pos:start="153:29" pos:end="153:33">avctx</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:41">height</name></name> <operator pos:start="153:43" pos:end="153:44">*=</operator> <literal type="number" pos:start="153:46" pos:end="153:46">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="155:25" pos:end="155:48"><expr pos:start="155:25" pos:end="155:47"><name pos:start="155:25" pos:end="155:36"><name pos:start="155:25" pos:end="155:29">avctx</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:36">width</name></name> <operator pos:start="155:38" pos:end="155:38">=</operator> <name pos:start="155:40" pos:end="155:47"><name pos:start="155:40" pos:end="155:40">s</name><operator pos:start="155:41" pos:end="155:42">-&gt;</operator><name pos:start="155:43" pos:end="155:47">width</name></name></expr>;</expr_stmt>

                        <comment type="block" pos:start="157:25" pos:end="157:54">/* XXX: not complete test ! */</comment>

                        <switch pos:start="159:25" pos:end="181:25">switch<condition pos:start="159:31" pos:end="159:68">(<expr pos:start="159:32" pos:end="159:67"><operator pos:start="159:32" pos:end="159:32">(</operator><name pos:start="159:33" pos:end="159:45"><name pos:start="159:33" pos:end="159:33">s</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:42">h_count</name><index pos:start="159:43" pos:end="159:45">[<expr pos:start="159:44" pos:end="159:44"><literal type="number" pos:start="159:44" pos:end="159:44">0</literal></expr>]</index></name> <operator pos:start="159:47" pos:end="159:48">&lt;&lt;</operator> <literal type="number" pos:start="159:50" pos:end="159:50">4</literal><operator pos:start="159:51" pos:end="159:51">)</operator> <operator pos:start="159:53" pos:end="159:53">|</operator> <name pos:start="159:55" pos:end="159:67"><name pos:start="159:55" pos:end="159:55">s</name><operator pos:start="159:56" pos:end="159:57">-&gt;</operator><name pos:start="159:58" pos:end="159:64">v_count</name><index pos:start="159:65" pos:end="159:67">[<expr pos:start="159:66" pos:end="159:66"><literal type="number" pos:start="159:66" pos:end="159:66">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="159:70" pos:end="181:25">{<block_content pos:start="161:25" pos:end="179:34">

                        <case pos:start="161:25" pos:end="161:34">case <expr pos:start="161:30" pos:end="161:33"><literal type="number" pos:start="161:30" pos:end="161:33">0x11</literal></expr>:</case>

                            <expr_stmt pos:start="163:29" pos:end="163:61"><expr pos:start="163:29" pos:end="163:60"><name pos:start="163:29" pos:end="163:42"><name pos:start="163:29" pos:end="163:33">avctx</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:42">pix_fmt</name></name> <operator pos:start="163:44" pos:end="163:44">=</operator> <name pos:start="163:46" pos:end="163:60">PIX_FMT_YUV444P</name></expr>;</expr_stmt>

                            <break pos:start="165:29" pos:end="165:34">break;</break>

                        <case pos:start="167:25" pos:end="167:34">case <expr pos:start="167:30" pos:end="167:33"><literal type="number" pos:start="167:30" pos:end="167:33">0x21</literal></expr>:</case>

                            <expr_stmt pos:start="169:29" pos:end="169:61"><expr pos:start="169:29" pos:end="169:60"><name pos:start="169:29" pos:end="169:42"><name pos:start="169:29" pos:end="169:33">avctx</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:42">pix_fmt</name></name> <operator pos:start="169:44" pos:end="169:44">=</operator> <name pos:start="169:46" pos:end="169:60">PIX_FMT_YUV422P</name></expr>;</expr_stmt>

                            <break pos:start="171:29" pos:end="171:34">break;</break>

                        <default pos:start="173:25" pos:end="173:32">default:</default>

                        <case pos:start="175:25" pos:end="175:34">case <expr pos:start="175:30" pos:end="175:33"><literal type="number" pos:start="175:30" pos:end="175:33">0x22</literal></expr>:</case>

                            <expr_stmt pos:start="177:29" pos:end="177:61"><expr pos:start="177:29" pos:end="177:60"><name pos:start="177:29" pos:end="177:42"><name pos:start="177:29" pos:end="177:33">avctx</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:42">pix_fmt</name></name> <operator pos:start="177:44" pos:end="177:44">=</operator> <name pos:start="177:46" pos:end="177:60">PIX_FMT_YUV420P</name></expr>;</expr_stmt>

                            <break pos:start="179:29" pos:end="179:34">break;</break>

                        </block_content>}</block></switch>

                        <comment type="block" pos:start="183:25" pos:end="183:43">/* dummy quality */</comment>

                        <comment type="block" pos:start="185:25" pos:end="185:55">/* XXX: infer it with matrix */</comment>

                        <expr_stmt pos:start="187:25" pos:end="187:43"><expr pos:start="187:25" pos:end="187:42"><name pos:start="187:25" pos:end="187:38"><name pos:start="187:25" pos:end="187:29">avctx</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:38">quality</name></name> <operator pos:start="187:40" pos:end="187:40">=</operator> <literal type="number" pos:start="187:42" pos:end="187:42">3</literal></expr>;</expr_stmt> 

                        <goto pos:start="189:25" pos:end="189:37">goto <name pos:start="189:30" pos:end="189:36">the_end</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="193:21" pos:end="193:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

 <label pos:start="203:2" pos:end="203:9"><name pos:start="203:2" pos:end="203:8">the_end</name>:</label>

    <return pos:start="205:5" pos:end="205:25">return <expr pos:start="205:12" pos:end="205:24"><name pos:start="205:12" pos:end="205:18">buf_ptr</name> <operator pos:start="205:20" pos:end="205:20">-</operator> <name pos:start="205:22" pos:end="205:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
