<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18491.c" pos:tabs="8"><function pos:start="1:1" pos:end="375:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">process_requests</name><parameter_list pos:start="1:28" pos:end="1:37">(<parameter pos:start="1:29" pos:end="1:36"><decl pos:start="1:29" pos:end="1:36"><type pos:start="1:29" pos:end="1:31"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:36">sock</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="375:1">{<block_content pos:start="5:5" pos:end="373:14">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">retval</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">ProxyHeader</name></type> <name pos:start="13:17" pos:end="13:22">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">mode</name></decl>, <decl pos:start="15:15" pos:end="15:17"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:17">uid</name></decl>, <decl pos:start="15:20" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:22">gid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:14">V9fsString</name></type> <name pos:start="17:16" pos:end="17:19">name</name></decl>, <decl pos:start="17:22" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:14"/><name pos:start="17:22" pos:end="17:26">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:19">timespec</name></name></type> <name pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:24">spec</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:14">V9fsString</name></type> <name pos:start="21:16" pos:end="21:22">oldpath</name></decl>, <decl pos:start="21:25" pos:end="21:28"><type ref="prev" pos:start="21:5" pos:end="21:14"/><name pos:start="21:25" pos:end="21:28">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:16">iovec</name></name></type> <name pos:start="23:18" pos:end="23:25">in_iovec</name></decl>, <decl pos:start="23:28" pos:end="23:36"><type ref="prev" pos:start="23:5" pos:end="23:16"/><name pos:start="23:28" pos:end="23:36">out_iovec</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:66"><expr pos:start="27:5" pos:end="27:65"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:12">in_iovec</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:21">iov_base</name></name>  <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:65"><name pos:start="27:26" pos:end="27:33">g_malloc</name><argument_list pos:start="27:34" pos:end="27:65">(<argument pos:start="27:35" pos:end="27:64"><expr pos:start="27:35" pos:end="27:64"><name pos:start="27:35" pos:end="27:49">PROXY_MAX_IO_SZ</name> <operator pos:start="27:51" pos:end="27:51">+</operator> <name pos:start="27:53" pos:end="27:64">PROXY_HDR_SZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:12">in_iovec</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:20">iov_len</name></name>   <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:40">PROXY_MAX_IO_SZ</name> <operator pos:start="29:42" pos:end="29:42">+</operator> <name pos:start="29:44" pos:end="29:55">PROXY_HDR_SZ</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:66"><expr pos:start="31:5" pos:end="31:65"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:13">out_iovec</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:22">iov_base</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:65"><name pos:start="31:26" pos:end="31:33">g_malloc</name><argument_list pos:start="31:34" pos:end="31:65">(<argument pos:start="31:35" pos:end="31:64"><expr pos:start="31:35" pos:end="31:64"><name pos:start="31:35" pos:end="31:49">PROXY_MAX_IO_SZ</name> <operator pos:start="31:51" pos:end="31:51">+</operator> <name pos:start="31:53" pos:end="31:64">PROXY_HDR_SZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:13">out_iovec</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:21">iov_len</name></name>  <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:40">PROXY_MAX_IO_SZ</name> <operator pos:start="33:42" pos:end="33:42">+</operator> <name pos:start="33:44" pos:end="33:55">PROXY_HDR_SZ</name></expr>;</expr_stmt>



    <while pos:start="37:5" pos:end="365:5">while <condition pos:start="37:11" pos:end="37:13">(<expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">1</literal></expr>)</condition> <block pos:start="37:15" pos:end="365:5">{<block_content pos:start="47:9" pos:end="363:9">

        <comment type="block" pos:start="39:9" pos:end="45:11">/*

         * initialize the header type, so that we send

         * response to proper request type.

         */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:14">header</name><operator pos:start="47:15" pos:end="47:15">.</operator><name pos:start="47:16" pos:end="47:19">type</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:14">retval</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:55"><name pos:start="49:18" pos:end="49:29">read_request</name><argument_list pos:start="49:30" pos:end="49:55">(<argument pos:start="49:31" pos:end="49:34"><expr pos:start="49:31" pos:end="49:34"><name pos:start="49:31" pos:end="49:34">sock</name></expr></argument>, <argument pos:start="49:37" pos:end="49:45"><expr pos:start="49:37" pos:end="49:45"><operator pos:start="49:37" pos:end="49:37">&amp;</operator><name pos:start="49:38" pos:end="49:45">in_iovec</name></expr></argument>, <argument pos:start="49:48" pos:end="49:54"><expr pos:start="49:48" pos:end="49:54"><operator pos:start="49:48" pos:end="49:48">&amp;</operator><name pos:start="49:49" pos:end="49:54">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:23">(<expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:18">retval</name> <operator pos:start="51:20" pos:end="51:20">&lt;</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>)</condition> <block pos:start="51:25" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:25">

            <goto pos:start="53:13" pos:end="53:25">goto <name pos:start="53:18" pos:end="53:24">err_out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="59:9" pos:end="355:9">switch <condition pos:start="59:16" pos:end="59:28">(<expr pos:start="59:17" pos:end="59:27"><name pos:start="59:17" pos:end="59:27"><name pos:start="59:17" pos:end="59:22">header</name><operator pos:start="59:23" pos:end="59:23">.</operator><name pos:start="59:24" pos:end="59:27">type</name></name></expr>)</condition> <block pos:start="59:30" pos:end="355:9">{<block_content pos:start="61:9" pos:end="353:18">

        <case pos:start="61:9" pos:end="61:20">case <expr pos:start="61:14" pos:end="61:19"><name pos:start="61:14" pos:end="61:19">T_OPEN</name></expr>:</case>

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:18">retval</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:39"><name pos:start="63:22" pos:end="63:28">do_open</name><argument_list pos:start="63:29" pos:end="63:39">(<argument pos:start="63:30" pos:end="63:38"><expr pos:start="63:30" pos:end="63:38"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:38">in_iovec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:22">case <expr pos:start="67:14" pos:end="67:21"><name pos:start="67:14" pos:end="67:21">T_CREATE</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:42"><expr pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:18">retval</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:41"><name pos:start="69:22" pos:end="69:30">do_create</name><argument_list pos:start="69:31" pos:end="69:41">(<argument pos:start="69:32" pos:end="69:40"><expr pos:start="69:32" pos:end="69:40"><operator pos:start="69:32" pos:end="69:32">&amp;</operator><name pos:start="69:33" pos:end="69:40">in_iovec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:21">case <expr pos:start="73:14" pos:end="73:20"><name pos:start="73:14" pos:end="73:20">T_MKNOD</name></expr>:</case>

        <case pos:start="75:9" pos:end="75:21">case <expr pos:start="75:14" pos:end="75:20"><name pos:start="75:14" pos:end="75:20">T_MKDIR</name></expr>:</case>

        <case pos:start="77:9" pos:end="77:23">case <expr pos:start="77:14" pos:end="77:22"><name pos:start="77:14" pos:end="77:22">T_SYMLINK</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:62"><expr pos:start="79:13" pos:end="79:61"><name pos:start="79:13" pos:end="79:18">retval</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="79:61"><name pos:start="79:22" pos:end="79:37">do_create_others</name><argument_list pos:start="79:38" pos:end="79:61">(<argument pos:start="79:39" pos:end="79:49"><expr pos:start="79:39" pos:end="79:49"><name pos:start="79:39" pos:end="79:49"><name pos:start="79:39" pos:end="79:44">header</name><operator pos:start="79:45" pos:end="79:45">.</operator><name pos:start="79:46" pos:end="79:49">type</name></name></expr></argument>, <argument pos:start="79:52" pos:end="79:60"><expr pos:start="79:52" pos:end="79:60"><operator pos:start="79:52" pos:end="79:52">&amp;</operator><name pos:start="79:53" pos:end="79:60">in_iovec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:20">case <expr pos:start="83:14" pos:end="83:19"><name pos:start="83:14" pos:end="83:19">T_LINK</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:36"><expr pos:start="85:13" pos:end="85:35"><call pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:28">v9fs_string_init</name><argument_list pos:start="85:29" pos:end="85:35">(<argument pos:start="85:30" pos:end="85:34"><expr pos:start="85:30" pos:end="85:34"><operator pos:start="85:30" pos:end="85:30">&amp;</operator><name pos:start="85:31" pos:end="85:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:39"><expr pos:start="87:13" pos:end="87:38"><call pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:28">v9fs_string_init</name><argument_list pos:start="87:29" pos:end="87:38">(<argument pos:start="87:30" pos:end="87:37"><expr pos:start="87:30" pos:end="87:37"><operator pos:start="87:30" pos:end="87:30">&amp;</operator><name pos:start="87:31" pos:end="87:37">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="91:60"><expr pos:start="89:13" pos:end="91:59"><name pos:start="89:13" pos:end="89:18">retval</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="91:59"><name pos:start="89:22" pos:end="89:36">proxy_unmarshal</name><argument_list pos:start="89:37" pos:end="91:59">(<argument pos:start="89:38" pos:end="89:46"><expr pos:start="89:38" pos:end="89:46"><operator pos:start="89:38" pos:end="89:38">&amp;</operator><name pos:start="89:39" pos:end="89:46">in_iovec</name></expr></argument>, <argument pos:start="89:49" pos:end="89:60"><expr pos:start="89:49" pos:end="89:60"><name pos:start="89:49" pos:end="89:60">PROXY_HDR_SZ</name></expr></argument>,

                                     <argument pos:start="91:38" pos:end="91:41"><expr pos:start="91:38" pos:end="91:41"><literal type="string" pos:start="91:38" pos:end="91:41">"ss"</literal></expr></argument>, <argument pos:start="91:44" pos:end="91:51"><expr pos:start="91:44" pos:end="91:51"><operator pos:start="91:44" pos:end="91:44">&amp;</operator><name pos:start="91:45" pos:end="91:51">oldpath</name></expr></argument>, <argument pos:start="91:54" pos:end="91:58"><expr pos:start="91:54" pos:end="91:58"><operator pos:start="91:54" pos:end="91:54">&amp;</operator><name pos:start="91:55" pos:end="91:58">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="103:13"><if pos:start="93:13" pos:end="103:13">if <condition pos:start="93:16" pos:end="93:27">(<expr pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:22">retval</name> <operator pos:start="93:24" pos:end="93:24">&gt;</operator> <literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr>)</condition> <block pos:start="93:29" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:17">

                <expr_stmt pos:start="95:17" pos:end="95:55"><expr pos:start="95:17" pos:end="95:54"><name pos:start="95:17" pos:end="95:22">retval</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <call pos:start="95:26" pos:end="95:54"><name pos:start="95:26" pos:end="95:29">link</name><argument_list pos:start="95:30" pos:end="95:54">(<argument pos:start="95:31" pos:end="95:42"><expr pos:start="95:31" pos:end="95:42"><name pos:start="95:31" pos:end="95:42"><name pos:start="95:31" pos:end="95:37">oldpath</name><operator pos:start="95:38" pos:end="95:38">.</operator><name pos:start="95:39" pos:end="95:42">data</name></name></expr></argument>, <argument pos:start="95:45" pos:end="95:53"><expr pos:start="95:45" pos:end="95:53"><name pos:start="95:45" pos:end="95:53"><name pos:start="95:45" pos:end="95:48">path</name><operator pos:start="95:49" pos:end="95:49">.</operator><name pos:start="95:50" pos:end="95:53">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="97:17" pos:end="101:17"><if pos:start="97:17" pos:end="101:17">if <condition pos:start="97:20" pos:end="97:31">(<expr pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:26">retval</name> <operator pos:start="97:28" pos:end="97:28">&lt;</operator> <literal type="number" pos:start="97:30" pos:end="97:30">0</literal></expr>)</condition> <block pos:start="97:33" pos:end="101:17">{<block_content pos:start="99:21" pos:end="99:36">

                    <expr_stmt pos:start="99:21" pos:end="99:36"><expr pos:start="99:21" pos:end="99:35"><name pos:start="99:21" pos:end="99:26">retval</name> <operator pos:start="99:28" pos:end="99:28">=</operator> <operator pos:start="99:30" pos:end="99:30">-</operator><name pos:start="99:31" pos:end="99:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:39"><expr pos:start="105:13" pos:end="105:38"><call pos:start="105:13" pos:end="105:38"><name pos:start="105:13" pos:end="105:28">v9fs_string_free</name><argument_list pos:start="105:29" pos:end="105:38">(<argument pos:start="105:30" pos:end="105:37"><expr pos:start="105:30" pos:end="105:37"><operator pos:start="105:30" pos:end="105:30">&amp;</operator><name pos:start="105:31" pos:end="105:37">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:36"><expr pos:start="107:13" pos:end="107:35"><call pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:28">v9fs_string_free</name><argument_list pos:start="107:29" pos:end="107:35">(<argument pos:start="107:30" pos:end="107:34"><expr pos:start="107:30" pos:end="107:34"><operator pos:start="107:30" pos:end="107:30">&amp;</operator><name pos:start="107:31" pos:end="107:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:21">case <expr pos:start="111:14" pos:end="111:20"><name pos:start="111:14" pos:end="111:20">T_LSTAT</name></expr>:</case>

        <case pos:start="113:9" pos:end="113:22">case <expr pos:start="113:14" pos:end="113:21"><name pos:start="113:14" pos:end="113:21">T_STATFS</name></expr>:</case>

            <expr_stmt pos:start="115:13" pos:end="115:65"><expr pos:start="115:13" pos:end="115:64"><name pos:start="115:13" pos:end="115:18">retval</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <call pos:start="115:22" pos:end="115:64"><name pos:start="115:22" pos:end="115:28">do_stat</name><argument_list pos:start="115:29" pos:end="115:64">(<argument pos:start="115:30" pos:end="115:40"><expr pos:start="115:30" pos:end="115:40"><name pos:start="115:30" pos:end="115:40"><name pos:start="115:30" pos:end="115:35">header</name><operator pos:start="115:36" pos:end="115:36">.</operator><name pos:start="115:37" pos:end="115:40">type</name></name></expr></argument>, <argument pos:start="115:43" pos:end="115:51"><expr pos:start="115:43" pos:end="115:51"><operator pos:start="115:43" pos:end="115:43">&amp;</operator><name pos:start="115:44" pos:end="115:51">in_iovec</name></expr></argument>, <argument pos:start="115:54" pos:end="115:63"><expr pos:start="115:54" pos:end="115:63"><operator pos:start="115:54" pos:end="115:54">&amp;</operator><name pos:start="115:55" pos:end="115:63">out_iovec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:24">case <expr pos:start="119:14" pos:end="119:23"><name pos:start="119:14" pos:end="119:23">T_READLINK</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:56"><expr pos:start="121:13" pos:end="121:55"><name pos:start="121:13" pos:end="121:18">retval</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:55"><name pos:start="121:22" pos:end="121:32">do_readlink</name><argument_list pos:start="121:33" pos:end="121:55">(<argument pos:start="121:34" pos:end="121:42"><expr pos:start="121:34" pos:end="121:42"><operator pos:start="121:34" pos:end="121:34">&amp;</operator><name pos:start="121:35" pos:end="121:42">in_iovec</name></expr></argument>, <argument pos:start="121:45" pos:end="121:54"><expr pos:start="121:45" pos:end="121:54"><operator pos:start="121:45" pos:end="121:45">&amp;</operator><name pos:start="121:46" pos:end="121:54">out_iovec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:21">case <expr pos:start="125:14" pos:end="125:20"><name pos:start="125:14" pos:end="125:20">T_CHMOD</name></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:36"><expr pos:start="127:13" pos:end="127:35"><call pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:28">v9fs_string_init</name><argument_list pos:start="127:29" pos:end="127:35">(<argument pos:start="127:30" pos:end="127:34"><expr pos:start="127:30" pos:end="127:34"><operator pos:start="127:30" pos:end="127:30">&amp;</operator><name pos:start="127:31" pos:end="127:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="131:57"><expr pos:start="129:13" pos:end="131:56"><name pos:start="129:13" pos:end="129:18">retval</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <call pos:start="129:22" pos:end="131:56"><name pos:start="129:22" pos:end="129:36">proxy_unmarshal</name><argument_list pos:start="129:37" pos:end="131:56">(<argument pos:start="129:38" pos:end="129:46"><expr pos:start="129:38" pos:end="129:46"><operator pos:start="129:38" pos:end="129:38">&amp;</operator><name pos:start="129:39" pos:end="129:46">in_iovec</name></expr></argument>, <argument pos:start="129:49" pos:end="129:60"><expr pos:start="129:49" pos:end="129:60"><name pos:start="129:49" pos:end="129:60">PROXY_HDR_SZ</name></expr></argument>,

                                     <argument pos:start="131:38" pos:end="131:41"><expr pos:start="131:38" pos:end="131:41"><literal type="string" pos:start="131:38" pos:end="131:41">"sd"</literal></expr></argument>, <argument pos:start="131:44" pos:end="131:48"><expr pos:start="131:44" pos:end="131:48"><operator pos:start="131:44" pos:end="131:44">&amp;</operator><name pos:start="131:45" pos:end="131:48">path</name></expr></argument>, <argument pos:start="131:51" pos:end="131:55"><expr pos:start="131:51" pos:end="131:55"><operator pos:start="131:51" pos:end="131:51">&amp;</operator><name pos:start="131:52" pos:end="131:55">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="143:13"><if pos:start="133:13" pos:end="143:13">if <condition pos:start="133:16" pos:end="133:27">(<expr pos:start="133:17" pos:end="133:26"><name pos:start="133:17" pos:end="133:22">retval</name> <operator pos:start="133:24" pos:end="133:24">&gt;</operator> <literal type="number" pos:start="133:26" pos:end="133:26">0</literal></expr>)</condition> <block pos:start="133:29" pos:end="143:13">{<block_content pos:start="135:17" pos:end="141:17">

                <expr_stmt pos:start="135:17" pos:end="135:48"><expr pos:start="135:17" pos:end="135:47"><name pos:start="135:17" pos:end="135:22">retval</name> <operator pos:start="135:24" pos:end="135:24">=</operator> <call pos:start="135:26" pos:end="135:47"><name pos:start="135:26" pos:end="135:30">chmod</name><argument_list pos:start="135:31" pos:end="135:47">(<argument pos:start="135:32" pos:end="135:40"><expr pos:start="135:32" pos:end="135:40"><name pos:start="135:32" pos:end="135:40"><name pos:start="135:32" pos:end="135:35">path</name><operator pos:start="135:36" pos:end="135:36">.</operator><name pos:start="135:37" pos:end="135:40">data</name></name></expr></argument>, <argument pos:start="135:43" pos:end="135:46"><expr pos:start="135:43" pos:end="135:46"><name pos:start="135:43" pos:end="135:46">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="137:17" pos:end="141:17"><if pos:start="137:17" pos:end="141:17">if <condition pos:start="137:20" pos:end="137:31">(<expr pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:26">retval</name> <operator pos:start="137:28" pos:end="137:28">&lt;</operator> <literal type="number" pos:start="137:30" pos:end="137:30">0</literal></expr>)</condition> <block pos:start="137:33" pos:end="141:17">{<block_content pos:start="139:21" pos:end="139:36">

                    <expr_stmt pos:start="139:21" pos:end="139:36"><expr pos:start="139:21" pos:end="139:35"><name pos:start="139:21" pos:end="139:26">retval</name> <operator pos:start="139:28" pos:end="139:28">=</operator> <operator pos:start="139:30" pos:end="139:30">-</operator><name pos:start="139:31" pos:end="139:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:36"><expr pos:start="145:13" pos:end="145:35"><call pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:28">v9fs_string_free</name><argument_list pos:start="145:29" pos:end="145:35">(<argument pos:start="145:30" pos:end="145:34"><expr pos:start="145:30" pos:end="145:34"><operator pos:start="145:30" pos:end="145:30">&amp;</operator><name pos:start="145:31" pos:end="145:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:21">case <expr pos:start="149:14" pos:end="149:20"><name pos:start="149:14" pos:end="149:20">T_CHOWN</name></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:36"><expr pos:start="151:13" pos:end="151:35"><call pos:start="151:13" pos:end="151:35"><name pos:start="151:13" pos:end="151:28">v9fs_string_init</name><argument_list pos:start="151:29" pos:end="151:35">(<argument pos:start="151:30" pos:end="151:34"><expr pos:start="151:30" pos:end="151:34"><operator pos:start="151:30" pos:end="151:30">&amp;</operator><name pos:start="151:31" pos:end="151:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="155:49"><expr pos:start="153:13" pos:end="155:48"><name pos:start="153:13" pos:end="153:18">retval</name> <operator pos:start="153:20" pos:end="153:20">=</operator> <call pos:start="153:22" pos:end="155:48"><name pos:start="153:22" pos:end="153:36">proxy_unmarshal</name><argument_list pos:start="153:37" pos:end="155:48">(<argument pos:start="153:38" pos:end="153:46"><expr pos:start="153:38" pos:end="153:46"><operator pos:start="153:38" pos:end="153:38">&amp;</operator><name pos:start="153:39" pos:end="153:46">in_iovec</name></expr></argument>, <argument pos:start="153:49" pos:end="153:60"><expr pos:start="153:49" pos:end="153:60"><name pos:start="153:49" pos:end="153:60">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="153:63" pos:end="153:67"><expr pos:start="153:63" pos:end="153:67"><literal type="string" pos:start="153:63" pos:end="153:67">"sdd"</literal></expr></argument>, <argument pos:start="153:70" pos:end="153:74"><expr pos:start="153:70" pos:end="153:74"><operator pos:start="153:70" pos:end="153:70">&amp;</operator><name pos:start="153:71" pos:end="153:74">path</name></expr></argument>,

                                     <argument pos:start="155:38" pos:end="155:41"><expr pos:start="155:38" pos:end="155:41"><operator pos:start="155:38" pos:end="155:38">&amp;</operator><name pos:start="155:39" pos:end="155:41">uid</name></expr></argument>, <argument pos:start="155:44" pos:end="155:47"><expr pos:start="155:44" pos:end="155:47"><operator pos:start="155:44" pos:end="155:44">&amp;</operator><name pos:start="155:45" pos:end="155:47">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="157:13" pos:end="167:13"><if pos:start="157:13" pos:end="167:13">if <condition pos:start="157:16" pos:end="157:27">(<expr pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:22">retval</name> <operator pos:start="157:24" pos:end="157:24">&gt;</operator> <literal type="number" pos:start="157:26" pos:end="157:26">0</literal></expr>)</condition> <block pos:start="157:29" pos:end="167:13">{<block_content pos:start="159:17" pos:end="165:17">

                <expr_stmt pos:start="159:17" pos:end="159:53"><expr pos:start="159:17" pos:end="159:52"><name pos:start="159:17" pos:end="159:22">retval</name> <operator pos:start="159:24" pos:end="159:24">=</operator> <call pos:start="159:26" pos:end="159:52"><name pos:start="159:26" pos:end="159:31">lchown</name><argument_list pos:start="159:32" pos:end="159:52">(<argument pos:start="159:33" pos:end="159:41"><expr pos:start="159:33" pos:end="159:41"><name pos:start="159:33" pos:end="159:41"><name pos:start="159:33" pos:end="159:36">path</name><operator pos:start="159:37" pos:end="159:37">.</operator><name pos:start="159:38" pos:end="159:41">data</name></name></expr></argument>, <argument pos:start="159:44" pos:end="159:46"><expr pos:start="159:44" pos:end="159:46"><name pos:start="159:44" pos:end="159:46">uid</name></expr></argument>, <argument pos:start="159:49" pos:end="159:51"><expr pos:start="159:49" pos:end="159:51"><name pos:start="159:49" pos:end="159:51">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="161:17" pos:end="165:17"><if pos:start="161:17" pos:end="165:17">if <condition pos:start="161:20" pos:end="161:31">(<expr pos:start="161:21" pos:end="161:30"><name pos:start="161:21" pos:end="161:26">retval</name> <operator pos:start="161:28" pos:end="161:28">&lt;</operator> <literal type="number" pos:start="161:30" pos:end="161:30">0</literal></expr>)</condition> <block pos:start="161:33" pos:end="165:17">{<block_content pos:start="163:21" pos:end="163:36">

                    <expr_stmt pos:start="163:21" pos:end="163:36"><expr pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:26">retval</name> <operator pos:start="163:28" pos:end="163:28">=</operator> <operator pos:start="163:30" pos:end="163:30">-</operator><name pos:start="163:31" pos:end="163:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:36"><expr pos:start="169:13" pos:end="169:35"><call pos:start="169:13" pos:end="169:35"><name pos:start="169:13" pos:end="169:28">v9fs_string_free</name><argument_list pos:start="169:29" pos:end="169:35">(<argument pos:start="169:30" pos:end="169:34"><expr pos:start="169:30" pos:end="169:34"><operator pos:start="169:30" pos:end="169:30">&amp;</operator><name pos:start="169:31" pos:end="169:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:24">case <expr pos:start="173:14" pos:end="173:23"><name pos:start="173:14" pos:end="173:23">T_TRUNCATE</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:36"><expr pos:start="175:13" pos:end="175:35"><call pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:28">v9fs_string_init</name><argument_list pos:start="175:29" pos:end="175:35">(<argument pos:start="175:30" pos:end="175:34"><expr pos:start="175:30" pos:end="175:34"><operator pos:start="175:30" pos:end="175:30">&amp;</operator><name pos:start="175:31" pos:end="175:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="179:53"><expr pos:start="177:13" pos:end="179:52"><name pos:start="177:13" pos:end="177:18">retval</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <call pos:start="177:22" pos:end="179:52"><name pos:start="177:22" pos:end="177:36">proxy_unmarshal</name><argument_list pos:start="177:37" pos:end="179:52">(<argument pos:start="177:38" pos:end="177:46"><expr pos:start="177:38" pos:end="177:46"><operator pos:start="177:38" pos:end="177:38">&amp;</operator><name pos:start="177:39" pos:end="177:46">in_iovec</name></expr></argument>, <argument pos:start="177:49" pos:end="177:60"><expr pos:start="177:49" pos:end="177:60"><name pos:start="177:49" pos:end="177:60">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="177:63" pos:end="177:66"><expr pos:start="177:63" pos:end="177:66"><literal type="string" pos:start="177:63" pos:end="177:66">"sq"</literal></expr></argument>,

                                     <argument pos:start="179:38" pos:end="179:42"><expr pos:start="179:38" pos:end="179:42"><operator pos:start="179:38" pos:end="179:38">&amp;</operator><name pos:start="179:39" pos:end="179:42">path</name></expr></argument>, <argument pos:start="179:45" pos:end="179:51"><expr pos:start="179:45" pos:end="179:51"><operator pos:start="179:45" pos:end="179:45">&amp;</operator><name pos:start="179:46" pos:end="179:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="181:13" pos:end="191:13"><if pos:start="181:13" pos:end="191:13">if <condition pos:start="181:16" pos:end="181:27">(<expr pos:start="181:17" pos:end="181:26"><name pos:start="181:17" pos:end="181:22">retval</name> <operator pos:start="181:24" pos:end="181:24">&gt;</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>)</condition> <block pos:start="181:29" pos:end="191:13">{<block_content pos:start="183:17" pos:end="189:17">

                <expr_stmt pos:start="183:17" pos:end="183:53"><expr pos:start="183:17" pos:end="183:52"><name pos:start="183:17" pos:end="183:22">retval</name> <operator pos:start="183:24" pos:end="183:24">=</operator> <call pos:start="183:26" pos:end="183:52"><name pos:start="183:26" pos:end="183:33">truncate</name><argument_list pos:start="183:34" pos:end="183:52">(<argument pos:start="183:35" pos:end="183:43"><expr pos:start="183:35" pos:end="183:43"><name pos:start="183:35" pos:end="183:43"><name pos:start="183:35" pos:end="183:38">path</name><operator pos:start="183:39" pos:end="183:39">.</operator><name pos:start="183:40" pos:end="183:43">data</name></name></expr></argument>, <argument pos:start="183:46" pos:end="183:51"><expr pos:start="183:46" pos:end="183:51"><name pos:start="183:46" pos:end="183:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="185:17" pos:end="189:17"><if pos:start="185:17" pos:end="189:17">if <condition pos:start="185:20" pos:end="185:31">(<expr pos:start="185:21" pos:end="185:30"><name pos:start="185:21" pos:end="185:26">retval</name> <operator pos:start="185:28" pos:end="185:28">&lt;</operator> <literal type="number" pos:start="185:30" pos:end="185:30">0</literal></expr>)</condition> <block pos:start="185:33" pos:end="189:17">{<block_content pos:start="187:21" pos:end="187:36">

                    <expr_stmt pos:start="187:21" pos:end="187:36"><expr pos:start="187:21" pos:end="187:35"><name pos:start="187:21" pos:end="187:26">retval</name> <operator pos:start="187:28" pos:end="187:28">=</operator> <operator pos:start="187:30" pos:end="187:30">-</operator><name pos:start="187:31" pos:end="187:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:36"><expr pos:start="193:13" pos:end="193:35"><call pos:start="193:13" pos:end="193:35"><name pos:start="193:13" pos:end="193:28">v9fs_string_free</name><argument_list pos:start="193:29" pos:end="193:35">(<argument pos:start="193:30" pos:end="193:34"><expr pos:start="193:30" pos:end="193:34"><operator pos:start="193:30" pos:end="193:30">&amp;</operator><name pos:start="193:31" pos:end="193:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:21">case <expr pos:start="197:14" pos:end="197:20"><name pos:start="197:14" pos:end="197:20">T_UTIME</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:36"><expr pos:start="199:13" pos:end="199:35"><call pos:start="199:13" pos:end="199:35"><name pos:start="199:13" pos:end="199:28">v9fs_string_init</name><argument_list pos:start="199:29" pos:end="199:35">(<argument pos:start="199:30" pos:end="199:34"><expr pos:start="199:30" pos:end="199:34"><operator pos:start="199:30" pos:end="199:30">&amp;</operator><name pos:start="199:31" pos:end="199:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="205:72"><expr pos:start="201:13" pos:end="205:71"><name pos:start="201:13" pos:end="201:18">retval</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <call pos:start="201:22" pos:end="205:71"><name pos:start="201:22" pos:end="201:36">proxy_unmarshal</name><argument_list pos:start="201:37" pos:end="205:71">(<argument pos:start="201:38" pos:end="201:46"><expr pos:start="201:38" pos:end="201:46"><operator pos:start="201:38" pos:end="201:38">&amp;</operator><name pos:start="201:39" pos:end="201:46">in_iovec</name></expr></argument>, <argument pos:start="201:49" pos:end="201:60"><expr pos:start="201:49" pos:end="201:60"><name pos:start="201:49" pos:end="201:60">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="201:63" pos:end="201:69"><expr pos:start="201:63" pos:end="201:69"><literal type="string" pos:start="201:63" pos:end="201:69">"sqqqq"</literal></expr></argument>, <argument pos:start="201:72" pos:end="201:76"><expr pos:start="201:72" pos:end="201:76"><operator pos:start="201:72" pos:end="201:72">&amp;</operator><name pos:start="201:73" pos:end="201:76">path</name></expr></argument>,

                                     <argument pos:start="203:38" pos:end="203:52"><expr pos:start="203:38" pos:end="203:52"><operator pos:start="203:38" pos:end="203:38">&amp;</operator><name pos:start="203:39" pos:end="203:45"><name pos:start="203:39" pos:end="203:42">spec</name><index pos:start="203:43" pos:end="203:45">[<expr pos:start="203:44" pos:end="203:44"><literal type="number" pos:start="203:44" pos:end="203:44">0</literal></expr>]</index></name><operator pos:start="203:46" pos:end="203:46">.</operator><name pos:start="203:47" pos:end="203:52">tv_sec</name></expr></argument>, <argument pos:start="203:55" pos:end="203:70"><expr pos:start="203:55" pos:end="203:70"><operator pos:start="203:55" pos:end="203:55">&amp;</operator><name pos:start="203:56" pos:end="203:62"><name pos:start="203:56" pos:end="203:59">spec</name><index pos:start="203:60" pos:end="203:62">[<expr pos:start="203:61" pos:end="203:61"><literal type="number" pos:start="203:61" pos:end="203:61">0</literal></expr>]</index></name><operator pos:start="203:63" pos:end="203:63">.</operator><name pos:start="203:64" pos:end="203:70">tv_nsec</name></expr></argument>,

                                     <argument pos:start="205:38" pos:end="205:52"><expr pos:start="205:38" pos:end="205:52"><operator pos:start="205:38" pos:end="205:38">&amp;</operator><name pos:start="205:39" pos:end="205:45"><name pos:start="205:39" pos:end="205:42">spec</name><index pos:start="205:43" pos:end="205:45">[<expr pos:start="205:44" pos:end="205:44"><literal type="number" pos:start="205:44" pos:end="205:44">1</literal></expr>]</index></name><operator pos:start="205:46" pos:end="205:46">.</operator><name pos:start="205:47" pos:end="205:52">tv_sec</name></expr></argument>, <argument pos:start="205:55" pos:end="205:70"><expr pos:start="205:55" pos:end="205:70"><operator pos:start="205:55" pos:end="205:55">&amp;</operator><name pos:start="205:56" pos:end="205:62"><name pos:start="205:56" pos:end="205:59">spec</name><index pos:start="205:60" pos:end="205:62">[<expr pos:start="205:61" pos:end="205:61"><literal type="number" pos:start="205:61" pos:end="205:61">1</literal></expr>]</index></name><operator pos:start="205:63" pos:end="205:63">.</operator><name pos:start="205:64" pos:end="205:70">tv_nsec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="217:13"><if pos:start="207:13" pos:end="217:13">if <condition pos:start="207:16" pos:end="207:27">(<expr pos:start="207:17" pos:end="207:26"><name pos:start="207:17" pos:end="207:22">retval</name> <operator pos:start="207:24" pos:end="207:24">&gt;</operator> <literal type="number" pos:start="207:26" pos:end="207:26">0</literal></expr>)</condition> <block pos:start="207:29" pos:end="217:13">{<block_content pos:start="209:17" pos:end="215:17">

                <expr_stmt pos:start="209:17" pos:end="209:55"><expr pos:start="209:17" pos:end="209:54"><name pos:start="209:17" pos:end="209:22">retval</name> <operator pos:start="209:24" pos:end="209:24">=</operator> <call pos:start="209:26" pos:end="209:54"><name pos:start="209:26" pos:end="209:37">qemu_utimens</name><argument_list pos:start="209:38" pos:end="209:54">(<argument pos:start="209:39" pos:end="209:47"><expr pos:start="209:39" pos:end="209:47"><name pos:start="209:39" pos:end="209:47"><name pos:start="209:39" pos:end="209:42">path</name><operator pos:start="209:43" pos:end="209:43">.</operator><name pos:start="209:44" pos:end="209:47">data</name></name></expr></argument>, <argument pos:start="209:50" pos:end="209:53"><expr pos:start="209:50" pos:end="209:53"><name pos:start="209:50" pos:end="209:53">spec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="211:17" pos:end="215:17"><if pos:start="211:17" pos:end="215:17">if <condition pos:start="211:20" pos:end="211:31">(<expr pos:start="211:21" pos:end="211:30"><name pos:start="211:21" pos:end="211:26">retval</name> <operator pos:start="211:28" pos:end="211:28">&lt;</operator> <literal type="number" pos:start="211:30" pos:end="211:30">0</literal></expr>)</condition> <block pos:start="211:33" pos:end="215:17">{<block_content pos:start="213:21" pos:end="213:36">

                    <expr_stmt pos:start="213:21" pos:end="213:36"><expr pos:start="213:21" pos:end="213:35"><name pos:start="213:21" pos:end="213:26">retval</name> <operator pos:start="213:28" pos:end="213:28">=</operator> <operator pos:start="213:30" pos:end="213:30">-</operator><name pos:start="213:31" pos:end="213:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:36"><expr pos:start="219:13" pos:end="219:35"><call pos:start="219:13" pos:end="219:35"><name pos:start="219:13" pos:end="219:28">v9fs_string_free</name><argument_list pos:start="219:29" pos:end="219:35">(<argument pos:start="219:30" pos:end="219:34"><expr pos:start="219:30" pos:end="219:34"><operator pos:start="219:30" pos:end="219:30">&amp;</operator><name pos:start="219:31" pos:end="219:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="221:13" pos:end="221:18">break;</break>

        <case pos:start="223:9" pos:end="223:22">case <expr pos:start="223:14" pos:end="223:21"><name pos:start="223:14" pos:end="223:21">T_RENAME</name></expr>:</case>

            <expr_stmt pos:start="225:13" pos:end="225:36"><expr pos:start="225:13" pos:end="225:35"><call pos:start="225:13" pos:end="225:35"><name pos:start="225:13" pos:end="225:28">v9fs_string_init</name><argument_list pos:start="225:29" pos:end="225:35">(<argument pos:start="225:30" pos:end="225:34"><expr pos:start="225:30" pos:end="225:34"><operator pos:start="225:30" pos:end="225:30">&amp;</operator><name pos:start="225:31" pos:end="225:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:39"><expr pos:start="227:13" pos:end="227:38"><call pos:start="227:13" pos:end="227:38"><name pos:start="227:13" pos:end="227:28">v9fs_string_init</name><argument_list pos:start="227:29" pos:end="227:38">(<argument pos:start="227:30" pos:end="227:37"><expr pos:start="227:30" pos:end="227:37"><operator pos:start="227:30" pos:end="227:30">&amp;</operator><name pos:start="227:31" pos:end="227:37">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="231:60"><expr pos:start="229:13" pos:end="231:59"><name pos:start="229:13" pos:end="229:18">retval</name> <operator pos:start="229:20" pos:end="229:20">=</operator> <call pos:start="229:22" pos:end="231:59"><name pos:start="229:22" pos:end="229:36">proxy_unmarshal</name><argument_list pos:start="229:37" pos:end="231:59">(<argument pos:start="229:38" pos:end="229:46"><expr pos:start="229:38" pos:end="229:46"><operator pos:start="229:38" pos:end="229:38">&amp;</operator><name pos:start="229:39" pos:end="229:46">in_iovec</name></expr></argument>, <argument pos:start="229:49" pos:end="229:60"><expr pos:start="229:49" pos:end="229:60"><name pos:start="229:49" pos:end="229:60">PROXY_HDR_SZ</name></expr></argument>,

                                     <argument pos:start="231:38" pos:end="231:41"><expr pos:start="231:38" pos:end="231:41"><literal type="string" pos:start="231:38" pos:end="231:41">"ss"</literal></expr></argument>, <argument pos:start="231:44" pos:end="231:51"><expr pos:start="231:44" pos:end="231:51"><operator pos:start="231:44" pos:end="231:44">&amp;</operator><name pos:start="231:45" pos:end="231:51">oldpath</name></expr></argument>, <argument pos:start="231:54" pos:end="231:58"><expr pos:start="231:54" pos:end="231:58"><operator pos:start="231:54" pos:end="231:54">&amp;</operator><name pos:start="231:55" pos:end="231:58">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="233:13" pos:end="243:13"><if pos:start="233:13" pos:end="243:13">if <condition pos:start="233:16" pos:end="233:27">(<expr pos:start="233:17" pos:end="233:26"><name pos:start="233:17" pos:end="233:22">retval</name> <operator pos:start="233:24" pos:end="233:24">&gt;</operator> <literal type="number" pos:start="233:26" pos:end="233:26">0</literal></expr>)</condition> <block pos:start="233:29" pos:end="243:13">{<block_content pos:start="235:17" pos:end="241:17">

                <expr_stmt pos:start="235:17" pos:end="235:57"><expr pos:start="235:17" pos:end="235:56"><name pos:start="235:17" pos:end="235:22">retval</name> <operator pos:start="235:24" pos:end="235:24">=</operator> <call pos:start="235:26" pos:end="235:56"><name pos:start="235:26" pos:end="235:31">rename</name><argument_list pos:start="235:32" pos:end="235:56">(<argument pos:start="235:33" pos:end="235:44"><expr pos:start="235:33" pos:end="235:44"><name pos:start="235:33" pos:end="235:44"><name pos:start="235:33" pos:end="235:39">oldpath</name><operator pos:start="235:40" pos:end="235:40">.</operator><name pos:start="235:41" pos:end="235:44">data</name></name></expr></argument>, <argument pos:start="235:47" pos:end="235:55"><expr pos:start="235:47" pos:end="235:55"><name pos:start="235:47" pos:end="235:55"><name pos:start="235:47" pos:end="235:50">path</name><operator pos:start="235:51" pos:end="235:51">.</operator><name pos:start="235:52" pos:end="235:55">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="237:17" pos:end="241:17"><if pos:start="237:17" pos:end="241:17">if <condition pos:start="237:20" pos:end="237:31">(<expr pos:start="237:21" pos:end="237:30"><name pos:start="237:21" pos:end="237:26">retval</name> <operator pos:start="237:28" pos:end="237:28">&lt;</operator> <literal type="number" pos:start="237:30" pos:end="237:30">0</literal></expr>)</condition> <block pos:start="237:33" pos:end="241:17">{<block_content pos:start="239:21" pos:end="239:36">

                    <expr_stmt pos:start="239:21" pos:end="239:36"><expr pos:start="239:21" pos:end="239:35"><name pos:start="239:21" pos:end="239:26">retval</name> <operator pos:start="239:28" pos:end="239:28">=</operator> <operator pos:start="239:30" pos:end="239:30">-</operator><name pos:start="239:31" pos:end="239:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:39"><expr pos:start="245:13" pos:end="245:38"><call pos:start="245:13" pos:end="245:38"><name pos:start="245:13" pos:end="245:28">v9fs_string_free</name><argument_list pos:start="245:29" pos:end="245:38">(<argument pos:start="245:30" pos:end="245:37"><expr pos:start="245:30" pos:end="245:37"><operator pos:start="245:30" pos:end="245:30">&amp;</operator><name pos:start="245:31" pos:end="245:37">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:36"><expr pos:start="247:13" pos:end="247:35"><call pos:start="247:13" pos:end="247:35"><name pos:start="247:13" pos:end="247:28">v9fs_string_free</name><argument_list pos:start="247:29" pos:end="247:35">(<argument pos:start="247:30" pos:end="247:34"><expr pos:start="247:30" pos:end="247:34"><operator pos:start="247:30" pos:end="247:30">&amp;</operator><name pos:start="247:31" pos:end="247:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="249:13" pos:end="249:18">break;</break>

        <case pos:start="251:9" pos:end="251:22">case <expr pos:start="251:14" pos:end="251:21"><name pos:start="251:14" pos:end="251:21">T_REMOVE</name></expr>:</case>

            <expr_stmt pos:start="253:13" pos:end="253:36"><expr pos:start="253:13" pos:end="253:35"><call pos:start="253:13" pos:end="253:35"><name pos:start="253:13" pos:end="253:28">v9fs_string_init</name><argument_list pos:start="253:29" pos:end="253:35">(<argument pos:start="253:30" pos:end="253:34"><expr pos:start="253:30" pos:end="253:34"><operator pos:start="253:30" pos:end="253:30">&amp;</operator><name pos:start="253:31" pos:end="253:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:74"><expr pos:start="255:13" pos:end="255:73"><name pos:start="255:13" pos:end="255:18">retval</name> <operator pos:start="255:20" pos:end="255:20">=</operator> <call pos:start="255:22" pos:end="255:73"><name pos:start="255:22" pos:end="255:36">proxy_unmarshal</name><argument_list pos:start="255:37" pos:end="255:73">(<argument pos:start="255:38" pos:end="255:46"><expr pos:start="255:38" pos:end="255:46"><operator pos:start="255:38" pos:end="255:38">&amp;</operator><name pos:start="255:39" pos:end="255:46">in_iovec</name></expr></argument>, <argument pos:start="255:49" pos:end="255:60"><expr pos:start="255:49" pos:end="255:60"><name pos:start="255:49" pos:end="255:60">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="255:63" pos:end="255:65"><expr pos:start="255:63" pos:end="255:65"><literal type="string" pos:start="255:63" pos:end="255:65">"s"</literal></expr></argument>, <argument pos:start="255:68" pos:end="255:72"><expr pos:start="255:68" pos:end="255:72"><operator pos:start="255:68" pos:end="255:68">&amp;</operator><name pos:start="255:69" pos:end="255:72">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="267:13"><if pos:start="257:13" pos:end="267:13">if <condition pos:start="257:16" pos:end="257:27">(<expr pos:start="257:17" pos:end="257:26"><name pos:start="257:17" pos:end="257:22">retval</name> <operator pos:start="257:24" pos:end="257:24">&gt;</operator> <literal type="number" pos:start="257:26" pos:end="257:26">0</literal></expr>)</condition> <block pos:start="257:29" pos:end="267:13">{<block_content pos:start="259:17" pos:end="265:17">

                <expr_stmt pos:start="259:17" pos:end="259:43"><expr pos:start="259:17" pos:end="259:42"><name pos:start="259:17" pos:end="259:22">retval</name> <operator pos:start="259:24" pos:end="259:24">=</operator> <call pos:start="259:26" pos:end="259:42"><name pos:start="259:26" pos:end="259:31">remove</name><argument_list pos:start="259:32" pos:end="259:42">(<argument pos:start="259:33" pos:end="259:41"><expr pos:start="259:33" pos:end="259:41"><name pos:start="259:33" pos:end="259:41"><name pos:start="259:33" pos:end="259:36">path</name><operator pos:start="259:37" pos:end="259:37">.</operator><name pos:start="259:38" pos:end="259:41">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="261:17" pos:end="265:17"><if pos:start="261:17" pos:end="265:17">if <condition pos:start="261:20" pos:end="261:31">(<expr pos:start="261:21" pos:end="261:30"><name pos:start="261:21" pos:end="261:26">retval</name> <operator pos:start="261:28" pos:end="261:28">&lt;</operator> <literal type="number" pos:start="261:30" pos:end="261:30">0</literal></expr>)</condition> <block pos:start="261:33" pos:end="265:17">{<block_content pos:start="263:21" pos:end="263:36">

                    <expr_stmt pos:start="263:21" pos:end="263:36"><expr pos:start="263:21" pos:end="263:35"><name pos:start="263:21" pos:end="263:26">retval</name> <operator pos:start="263:28" pos:end="263:28">=</operator> <operator pos:start="263:30" pos:end="263:30">-</operator><name pos:start="263:31" pos:end="263:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:36"><expr pos:start="269:13" pos:end="269:35"><call pos:start="269:13" pos:end="269:35"><name pos:start="269:13" pos:end="269:28">v9fs_string_free</name><argument_list pos:start="269:29" pos:end="269:35">(<argument pos:start="269:30" pos:end="269:34"><expr pos:start="269:30" pos:end="269:34"><operator pos:start="269:30" pos:end="269:30">&amp;</operator><name pos:start="269:31" pos:end="269:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <case pos:start="273:9" pos:end="273:25">case <expr pos:start="273:14" pos:end="273:24"><name pos:start="273:14" pos:end="273:24">T_LGETXATTR</name></expr>:</case>

        <case pos:start="275:9" pos:end="275:26">case <expr pos:start="275:14" pos:end="275:25"><name pos:start="275:14" pos:end="275:25">T_LLISTXATTR</name></expr>:</case>

            <expr_stmt pos:start="277:13" pos:end="277:69"><expr pos:start="277:13" pos:end="277:68"><name pos:start="277:13" pos:end="277:18">retval</name> <operator pos:start="277:20" pos:end="277:20">=</operator> <call pos:start="277:22" pos:end="277:68"><name pos:start="277:22" pos:end="277:32">do_getxattr</name><argument_list pos:start="277:33" pos:end="277:68">(<argument pos:start="277:34" pos:end="277:44"><expr pos:start="277:34" pos:end="277:44"><name pos:start="277:34" pos:end="277:44"><name pos:start="277:34" pos:end="277:39">header</name><operator pos:start="277:40" pos:end="277:40">.</operator><name pos:start="277:41" pos:end="277:44">type</name></name></expr></argument>, <argument pos:start="277:47" pos:end="277:55"><expr pos:start="277:47" pos:end="277:55"><operator pos:start="277:47" pos:end="277:47">&amp;</operator><name pos:start="277:48" pos:end="277:55">in_iovec</name></expr></argument>, <argument pos:start="277:58" pos:end="277:67"><expr pos:start="277:58" pos:end="277:67"><operator pos:start="277:58" pos:end="277:58">&amp;</operator><name pos:start="277:59" pos:end="277:67">out_iovec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="279:13" pos:end="279:18">break;</break>

        <case pos:start="281:9" pos:end="281:25">case <expr pos:start="281:14" pos:end="281:24"><name pos:start="281:14" pos:end="281:24">T_LSETXATTR</name></expr>:</case>

            <expr_stmt pos:start="283:13" pos:end="283:36"><expr pos:start="283:13" pos:end="283:35"><call pos:start="283:13" pos:end="283:35"><name pos:start="283:13" pos:end="283:28">v9fs_string_init</name><argument_list pos:start="283:29" pos:end="283:35">(<argument pos:start="283:30" pos:end="283:34"><expr pos:start="283:30" pos:end="283:34"><operator pos:start="283:30" pos:end="283:30">&amp;</operator><name pos:start="283:31" pos:end="283:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:36"><expr pos:start="285:13" pos:end="285:35"><call pos:start="285:13" pos:end="285:35"><name pos:start="285:13" pos:end="285:28">v9fs_string_init</name><argument_list pos:start="285:29" pos:end="285:35">(<argument pos:start="285:30" pos:end="285:34"><expr pos:start="285:30" pos:end="285:34"><operator pos:start="285:30" pos:end="285:30">&amp;</operator><name pos:start="285:31" pos:end="285:34">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:37"><expr pos:start="287:13" pos:end="287:36"><call pos:start="287:13" pos:end="287:36"><name pos:start="287:13" pos:end="287:28">v9fs_string_init</name><argument_list pos:start="287:29" pos:end="287:36">(<argument pos:start="287:30" pos:end="287:35"><expr pos:start="287:30" pos:end="287:35"><operator pos:start="287:30" pos:end="287:30">&amp;</operator><name pos:start="287:31" pos:end="287:35">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="291:67"><expr pos:start="289:13" pos:end="291:66"><name pos:start="289:13" pos:end="289:18">retval</name> <operator pos:start="289:20" pos:end="289:20">=</operator> <call pos:start="289:22" pos:end="291:66"><name pos:start="289:22" pos:end="289:36">proxy_unmarshal</name><argument_list pos:start="289:37" pos:end="291:66">(<argument pos:start="289:38" pos:end="289:46"><expr pos:start="289:38" pos:end="289:46"><operator pos:start="289:38" pos:end="289:38">&amp;</operator><name pos:start="289:39" pos:end="289:46">in_iovec</name></expr></argument>, <argument pos:start="289:49" pos:end="289:60"><expr pos:start="289:49" pos:end="289:60"><name pos:start="289:49" pos:end="289:60">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="289:63" pos:end="289:69"><expr pos:start="289:63" pos:end="289:69"><literal type="string" pos:start="289:63" pos:end="289:69">"sssdd"</literal></expr></argument>, <argument pos:start="289:72" pos:end="289:76"><expr pos:start="289:72" pos:end="289:76"><operator pos:start="289:72" pos:end="289:72">&amp;</operator><name pos:start="289:73" pos:end="289:76">path</name></expr></argument>,

                                     <argument pos:start="291:38" pos:end="291:42"><expr pos:start="291:38" pos:end="291:42"><operator pos:start="291:38" pos:end="291:38">&amp;</operator><name pos:start="291:39" pos:end="291:42">name</name></expr></argument>, <argument pos:start="291:45" pos:end="291:50"><expr pos:start="291:45" pos:end="291:50"><operator pos:start="291:45" pos:end="291:45">&amp;</operator><name pos:start="291:46" pos:end="291:50">value</name></expr></argument>, <argument pos:start="291:53" pos:end="291:57"><expr pos:start="291:53" pos:end="291:57"><operator pos:start="291:53" pos:end="291:53">&amp;</operator><name pos:start="291:54" pos:end="291:57">size</name></expr></argument>, <argument pos:start="291:60" pos:end="291:65"><expr pos:start="291:60" pos:end="291:65"><operator pos:start="291:60" pos:end="291:60">&amp;</operator><name pos:start="291:61" pos:end="291:65">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="305:13"><if pos:start="293:13" pos:end="305:13">if <condition pos:start="293:16" pos:end="293:27">(<expr pos:start="293:17" pos:end="293:26"><name pos:start="293:17" pos:end="293:22">retval</name> <operator pos:start="293:24" pos:end="293:24">&gt;</operator> <literal type="number" pos:start="293:26" pos:end="293:26">0</literal></expr>)</condition> <block pos:start="293:29" pos:end="305:13">{<block_content pos:start="295:17" pos:end="303:17">

                <expr_stmt pos:start="295:17" pos:end="297:71"><expr pos:start="295:17" pos:end="297:70"><name pos:start="295:17" pos:end="295:22">retval</name> <operator pos:start="295:24" pos:end="295:24">=</operator> <call pos:start="295:26" pos:end="297:70"><name pos:start="295:26" pos:end="295:34">lsetxattr</name><argument_list pos:start="295:35" pos:end="297:70">(<argument pos:start="295:36" pos:end="295:44"><expr pos:start="295:36" pos:end="295:44"><name pos:start="295:36" pos:end="295:44"><name pos:start="295:36" pos:end="295:39">path</name><operator pos:start="295:40" pos:end="295:40">.</operator><name pos:start="295:41" pos:end="295:44">data</name></name></expr></argument>,

                                   <argument pos:start="297:36" pos:end="297:44"><expr pos:start="297:36" pos:end="297:44"><name pos:start="297:36" pos:end="297:44"><name pos:start="297:36" pos:end="297:39">name</name><operator pos:start="297:40" pos:end="297:40">.</operator><name pos:start="297:41" pos:end="297:44">data</name></name></expr></argument>, <argument pos:start="297:47" pos:end="297:56"><expr pos:start="297:47" pos:end="297:56"><name pos:start="297:47" pos:end="297:56"><name pos:start="297:47" pos:end="297:51">value</name><operator pos:start="297:52" pos:end="297:52">.</operator><name pos:start="297:53" pos:end="297:56">data</name></name></expr></argument>, <argument pos:start="297:59" pos:end="297:62"><expr pos:start="297:59" pos:end="297:62"><name pos:start="297:59" pos:end="297:62">size</name></expr></argument>, <argument pos:start="297:65" pos:end="297:69"><expr pos:start="297:65" pos:end="297:69"><name pos:start="297:65" pos:end="297:69">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="299:17" pos:end="303:17"><if pos:start="299:17" pos:end="303:17">if <condition pos:start="299:20" pos:end="299:31">(<expr pos:start="299:21" pos:end="299:30"><name pos:start="299:21" pos:end="299:26">retval</name> <operator pos:start="299:28" pos:end="299:28">&lt;</operator> <literal type="number" pos:start="299:30" pos:end="299:30">0</literal></expr>)</condition> <block pos:start="299:33" pos:end="303:17">{<block_content pos:start="301:21" pos:end="301:36">

                    <expr_stmt pos:start="301:21" pos:end="301:36"><expr pos:start="301:21" pos:end="301:35"><name pos:start="301:21" pos:end="301:26">retval</name> <operator pos:start="301:28" pos:end="301:28">=</operator> <operator pos:start="301:30" pos:end="301:30">-</operator><name pos:start="301:31" pos:end="301:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:36"><expr pos:start="307:13" pos:end="307:35"><call pos:start="307:13" pos:end="307:35"><name pos:start="307:13" pos:end="307:28">v9fs_string_free</name><argument_list pos:start="307:29" pos:end="307:35">(<argument pos:start="307:30" pos:end="307:34"><expr pos:start="307:30" pos:end="307:34"><operator pos:start="307:30" pos:end="307:30">&amp;</operator><name pos:start="307:31" pos:end="307:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:36"><expr pos:start="309:13" pos:end="309:35"><call pos:start="309:13" pos:end="309:35"><name pos:start="309:13" pos:end="309:28">v9fs_string_free</name><argument_list pos:start="309:29" pos:end="309:35">(<argument pos:start="309:30" pos:end="309:34"><expr pos:start="309:30" pos:end="309:34"><operator pos:start="309:30" pos:end="309:30">&amp;</operator><name pos:start="309:31" pos:end="309:34">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:37"><expr pos:start="311:13" pos:end="311:36"><call pos:start="311:13" pos:end="311:36"><name pos:start="311:13" pos:end="311:28">v9fs_string_free</name><argument_list pos:start="311:29" pos:end="311:36">(<argument pos:start="311:30" pos:end="311:35"><expr pos:start="311:30" pos:end="311:35"><operator pos:start="311:30" pos:end="311:30">&amp;</operator><name pos:start="311:31" pos:end="311:35">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="313:13" pos:end="313:18">break;</break>

        <case pos:start="315:9" pos:end="315:28">case <expr pos:start="315:14" pos:end="315:27"><name pos:start="315:14" pos:end="315:27">T_LREMOVEXATTR</name></expr>:</case>

            <expr_stmt pos:start="317:13" pos:end="317:36"><expr pos:start="317:13" pos:end="317:35"><call pos:start="317:13" pos:end="317:35"><name pos:start="317:13" pos:end="317:28">v9fs_string_init</name><argument_list pos:start="317:29" pos:end="317:35">(<argument pos:start="317:30" pos:end="317:34"><expr pos:start="317:30" pos:end="317:34"><operator pos:start="317:30" pos:end="317:30">&amp;</operator><name pos:start="317:31" pos:end="317:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:36"><expr pos:start="319:13" pos:end="319:35"><call pos:start="319:13" pos:end="319:35"><name pos:start="319:13" pos:end="319:28">v9fs_string_init</name><argument_list pos:start="319:29" pos:end="319:35">(<argument pos:start="319:30" pos:end="319:34"><expr pos:start="319:30" pos:end="319:34"><operator pos:start="319:30" pos:end="319:30">&amp;</operator><name pos:start="319:31" pos:end="319:34">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="323:71"><expr pos:start="321:13" pos:end="323:70"><name pos:start="321:13" pos:end="321:18">retval</name> <operator pos:start="321:20" pos:end="321:20">=</operator> <call pos:start="321:22" pos:end="323:70"><name pos:start="321:22" pos:end="321:36">proxy_unmarshal</name><argument_list pos:start="321:37" pos:end="323:70">(<argument pos:start="321:38" pos:end="321:46"><expr pos:start="321:38" pos:end="321:46"><operator pos:start="321:38" pos:end="321:38">&amp;</operator><name pos:start="321:39" pos:end="321:46">in_iovec</name></expr></argument>,

                                     <argument pos:start="323:38" pos:end="323:49"><expr pos:start="323:38" pos:end="323:49"><name pos:start="323:38" pos:end="323:49">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="323:52" pos:end="323:55"><expr pos:start="323:52" pos:end="323:55"><literal type="string" pos:start="323:52" pos:end="323:55">"ss"</literal></expr></argument>, <argument pos:start="323:58" pos:end="323:62"><expr pos:start="323:58" pos:end="323:62"><operator pos:start="323:58" pos:end="323:58">&amp;</operator><name pos:start="323:59" pos:end="323:62">path</name></expr></argument>, <argument pos:start="323:65" pos:end="323:69"><expr pos:start="323:65" pos:end="323:69"><operator pos:start="323:65" pos:end="323:65">&amp;</operator><name pos:start="323:66" pos:end="323:69">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="325:13" pos:end="335:13"><if pos:start="325:13" pos:end="335:13">if <condition pos:start="325:16" pos:end="325:27">(<expr pos:start="325:17" pos:end="325:26"><name pos:start="325:17" pos:end="325:22">retval</name> <operator pos:start="325:24" pos:end="325:24">&gt;</operator> <literal type="number" pos:start="325:26" pos:end="325:26">0</literal></expr>)</condition> <block pos:start="325:29" pos:end="335:13">{<block_content pos:start="327:17" pos:end="333:17">

                <expr_stmt pos:start="327:17" pos:end="327:60"><expr pos:start="327:17" pos:end="327:59"><name pos:start="327:17" pos:end="327:22">retval</name> <operator pos:start="327:24" pos:end="327:24">=</operator> <call pos:start="327:26" pos:end="327:59"><name pos:start="327:26" pos:end="327:37">lremovexattr</name><argument_list pos:start="327:38" pos:end="327:59">(<argument pos:start="327:39" pos:end="327:47"><expr pos:start="327:39" pos:end="327:47"><name pos:start="327:39" pos:end="327:47"><name pos:start="327:39" pos:end="327:42">path</name><operator pos:start="327:43" pos:end="327:43">.</operator><name pos:start="327:44" pos:end="327:47">data</name></name></expr></argument>, <argument pos:start="327:50" pos:end="327:58"><expr pos:start="327:50" pos:end="327:58"><name pos:start="327:50" pos:end="327:58"><name pos:start="327:50" pos:end="327:53">name</name><operator pos:start="327:54" pos:end="327:54">.</operator><name pos:start="327:55" pos:end="327:58">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="329:17" pos:end="333:17"><if pos:start="329:17" pos:end="333:17">if <condition pos:start="329:20" pos:end="329:31">(<expr pos:start="329:21" pos:end="329:30"><name pos:start="329:21" pos:end="329:26">retval</name> <operator pos:start="329:28" pos:end="329:28">&lt;</operator> <literal type="number" pos:start="329:30" pos:end="329:30">0</literal></expr>)</condition> <block pos:start="329:33" pos:end="333:17">{<block_content pos:start="331:21" pos:end="331:36">

                    <expr_stmt pos:start="331:21" pos:end="331:36"><expr pos:start="331:21" pos:end="331:35"><name pos:start="331:21" pos:end="331:26">retval</name> <operator pos:start="331:28" pos:end="331:28">=</operator> <operator pos:start="331:30" pos:end="331:30">-</operator><name pos:start="331:31" pos:end="331:35">errno</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:36"><expr pos:start="337:13" pos:end="337:35"><call pos:start="337:13" pos:end="337:35"><name pos:start="337:13" pos:end="337:28">v9fs_string_free</name><argument_list pos:start="337:29" pos:end="337:35">(<argument pos:start="337:30" pos:end="337:34"><expr pos:start="337:30" pos:end="337:34"><operator pos:start="337:30" pos:end="337:30">&amp;</operator><name pos:start="337:31" pos:end="337:34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:36"><expr pos:start="339:13" pos:end="339:35"><call pos:start="339:13" pos:end="339:35"><name pos:start="339:13" pos:end="339:28">v9fs_string_free</name><argument_list pos:start="339:29" pos:end="339:35">(<argument pos:start="339:30" pos:end="339:34"><expr pos:start="339:30" pos:end="339:34"><operator pos:start="339:30" pos:end="339:30">&amp;</operator><name pos:start="339:31" pos:end="339:34">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="341:13" pos:end="341:18">break;</break>

        <case pos:start="343:9" pos:end="343:26">case <expr pos:start="343:14" pos:end="343:25"><name pos:start="343:14" pos:end="343:25">T_GETVERSION</name></expr>:</case>

            <expr_stmt pos:start="345:13" pos:end="345:58"><expr pos:start="345:13" pos:end="345:57"><name pos:start="345:13" pos:end="345:18">retval</name> <operator pos:start="345:20" pos:end="345:20">=</operator> <call pos:start="345:22" pos:end="345:57"><name pos:start="345:22" pos:end="345:34">do_getversion</name><argument_list pos:start="345:35" pos:end="345:57">(<argument pos:start="345:36" pos:end="345:44"><expr pos:start="345:36" pos:end="345:44"><operator pos:start="345:36" pos:end="345:36">&amp;</operator><name pos:start="345:37" pos:end="345:44">in_iovec</name></expr></argument>, <argument pos:start="345:47" pos:end="345:56"><expr pos:start="345:47" pos:end="345:56"><operator pos:start="345:47" pos:end="345:47">&amp;</operator><name pos:start="345:48" pos:end="345:56">out_iovec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="347:13" pos:end="347:18">break;</break>

        <default pos:start="349:9" pos:end="349:16">default:</default>

            <goto pos:start="351:13" pos:end="351:25">goto <name pos:start="351:18" pos:end="351:24">err_out</name>;</goto>

            <break pos:start="353:13" pos:end="353:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="359:9" pos:end="363:9"><if pos:start="359:9" pos:end="363:9">if <condition pos:start="359:12" pos:end="359:69">(<expr pos:start="359:13" pos:end="359:68"><call pos:start="359:13" pos:end="359:64"><name pos:start="359:13" pos:end="359:25">process_reply</name><argument_list pos:start="359:26" pos:end="359:64">(<argument pos:start="359:27" pos:end="359:30"><expr pos:start="359:27" pos:end="359:30"><name pos:start="359:27" pos:end="359:30">sock</name></expr></argument>, <argument pos:start="359:33" pos:end="359:43"><expr pos:start="359:33" pos:end="359:43"><name pos:start="359:33" pos:end="359:43"><name pos:start="359:33" pos:end="359:38">header</name><operator pos:start="359:39" pos:end="359:39">.</operator><name pos:start="359:40" pos:end="359:43">type</name></name></expr></argument>, <argument pos:start="359:46" pos:end="359:55"><expr pos:start="359:46" pos:end="359:55"><operator pos:start="359:46" pos:end="359:46">&amp;</operator><name pos:start="359:47" pos:end="359:55">out_iovec</name></expr></argument>, <argument pos:start="359:58" pos:end="359:63"><expr pos:start="359:58" pos:end="359:63"><name pos:start="359:58" pos:end="359:63">retval</name></expr></argument>)</argument_list></call> <operator pos:start="359:66" pos:end="359:66">&lt;</operator> <literal type="number" pos:start="359:68" pos:end="359:68">0</literal></expr>)</condition> <block pos:start="359:71" pos:end="363:9">{<block_content pos:start="361:13" pos:end="361:25">

            <goto pos:start="361:13" pos:end="361:25">goto <name pos:start="361:18" pos:end="361:24">err_out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

<label pos:start="367:1" pos:end="367:8"><name pos:start="367:1" pos:end="367:7">err_out</name>:</label>

    <expr_stmt pos:start="369:5" pos:end="369:30"><expr pos:start="369:5" pos:end="369:29"><call pos:start="369:5" pos:end="369:29"><name pos:start="369:5" pos:end="369:10">g_free</name><argument_list pos:start="369:11" pos:end="369:29">(<argument pos:start="369:12" pos:end="369:28"><expr pos:start="369:12" pos:end="369:28"><name pos:start="369:12" pos:end="369:28"><name pos:start="369:12" pos:end="369:19">in_iovec</name><operator pos:start="369:20" pos:end="369:20">.</operator><name pos:start="369:21" pos:end="369:28">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:31"><expr pos:start="371:5" pos:end="371:30"><call pos:start="371:5" pos:end="371:30"><name pos:start="371:5" pos:end="371:10">g_free</name><argument_list pos:start="371:11" pos:end="371:30">(<argument pos:start="371:12" pos:end="371:29"><expr pos:start="371:12" pos:end="371:29"><name pos:start="371:12" pos:end="371:29"><name pos:start="371:12" pos:end="371:20">out_iovec</name><operator pos:start="371:21" pos:end="371:21">.</operator><name pos:start="371:22" pos:end="371:29">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="373:5" pos:end="373:14">return <expr pos:start="373:12" pos:end="373:13"><operator pos:start="373:12" pos:end="373:12">-</operator><literal type="number" pos:start="373:13" pos:end="373:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
