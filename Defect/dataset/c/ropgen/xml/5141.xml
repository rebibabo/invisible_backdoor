<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5141.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">oma_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="247:1">{<block_content pos:start="5:5" pos:end="245:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type>     <name pos:start="5:13" pos:end="5:15">ret</name></decl>, <decl pos:start="5:18" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:26">framesize</name></decl>, <decl pos:start="5:29" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:34">jsflag</name></decl>, <decl pos:start="5:37" pos:end="5:46"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:46">samplerate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:25">codec_params</name></decl>, <decl pos:start="7:28" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:28" pos:end="7:37">channel_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int16_t</name></type> <name pos:start="9:13" pos:end="9:15">eid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:32"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:32">[<expr pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:31">EA3_HEADER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">edata</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVStream</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">ID3v2ExtraMeta</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:30">extra_meta</name> <init pos:start="17:32" pos:end="17:37">= <expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:14">OMAContext</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:18">oc</name> <init pos:start="19:20" pos:end="19:33">= <expr pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:22">s</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:33">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><call pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:17">ff_id3v2_read</name><argument_list pos:start="23:18" pos:end="23:50">(<argument pos:start="23:19" pos:end="23:19"><expr pos:start="23:19" pos:end="23:19"><name pos:start="23:19" pos:end="23:19">s</name></expr></argument>, <argument pos:start="23:22" pos:end="23:36"><expr pos:start="23:22" pos:end="23:36"><name pos:start="23:22" pos:end="23:36">ID3v2_EA3_MAGIC</name></expr></argument>, <argument pos:start="23:39" pos:end="23:49"><expr pos:start="23:39" pos:end="23:49"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:49">extra_meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:48"><name pos:start="25:11" pos:end="25:19">avio_read</name><argument_list pos:start="25:20" pos:end="25:48">(<argument pos:start="25:21" pos:end="25:25"><expr pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:25">pb</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:30">buf</name></expr></argument>, <argument pos:start="25:33" pos:end="25:47"><expr pos:start="25:33" pos:end="25:47"><name pos:start="25:33" pos:end="25:47">EA3_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <name pos:start="27:15" pos:end="27:29">EA3_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="35:49">(<expr pos:start="33:9" pos:end="35:48"><macro pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:14">memcmp</name><argument_list pos:start="33:15" pos:end="33:58">(<argument pos:start="33:16" pos:end="33:18">buf</argument>, <argument pos:start="33:21" pos:end="33:54">((const uint8_t[]){<literal type="char" pos:start="33:40" pos:end="33:42">'E'</literal>, <literal type="char" pos:start="33:45" pos:end="33:47">'A'</literal>, <literal type="char" pos:start="33:50" pos:end="33:52">'3'</literal>})</argument>, <argument pos:start="33:57" pos:end="33:57"><literal type="number" pos:start="33:57" pos:end="33:57">3</literal></argument>)</argument_list></macro> <operator pos:start="33:60" pos:end="33:61">||</operator>

        <name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:11">buf</name><index pos:start="35:12" pos:end="35:14">[<expr pos:start="35:13" pos:end="35:13"><literal type="number" pos:start="35:13" pos:end="35:13">4</literal></expr>]</index></name> <operator pos:start="35:16" pos:end="35:17">!=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal> <operator pos:start="35:21" pos:end="35:22">||</operator> <name pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:26">buf</name><index pos:start="35:27" pos:end="35:29">[<expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">5</literal></expr>]</index></name> <operator pos:start="35:31" pos:end="35:32">!=</operator> <name pos:start="35:34" pos:end="35:48">EA3_HEADER_SIZE</name></expr>)</condition> <block pos:start="35:51" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:35">

        <expr_stmt pos:start="37:9" pos:end="37:68"><expr pos:start="37:9" pos:end="37:67"><call pos:start="37:9" pos:end="37:67"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:67">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>, <argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:33" pos:end="37:66"><expr pos:start="37:33" pos:end="37:66"><literal type="string" pos:start="37:33" pos:end="37:66">"Couldn't find the EA3 header !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:6">oc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:21">content_start</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <call pos:start="45:25" pos:end="45:40"><name pos:start="45:25" pos:end="45:33">avio_tell</name><argument_list pos:start="45:34" pos:end="45:40">(<argument pos:start="45:35" pos:end="45:39"><expr pos:start="45:35" pos:end="45:39"><name pos:start="45:35" pos:end="45:39"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:24">/* encrypted file */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:7">eid</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:26"><name pos:start="51:11" pos:end="51:17">AV_RB16</name><argument_list pos:start="51:18" pos:end="51:26">(<argument pos:start="51:19" pos:end="51:25"><expr pos:start="51:19" pos:end="51:25"><operator pos:start="51:19" pos:end="51:19">&amp;</operator><name pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:22">buf</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:73">(<expr pos:start="53:9" pos:end="53:72"><name pos:start="53:9" pos:end="53:11">eid</name> <operator pos:start="53:13" pos:end="53:14">!=</operator> <operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal> <operator pos:start="53:19" pos:end="53:20">&amp;&amp;</operator> <name pos:start="53:22" pos:end="53:24">eid</name> <operator pos:start="53:26" pos:end="53:27">!=</operator> <operator pos:start="53:29" pos:end="53:29">-</operator><literal type="number" pos:start="53:30" pos:end="53:32">128</literal> <operator pos:start="53:34" pos:end="53:35">&amp;&amp;</operator> <call pos:start="53:37" pos:end="53:68"><name pos:start="53:37" pos:end="53:48">decrypt_init</name><argument_list pos:start="53:49" pos:end="53:68">(<argument pos:start="53:50" pos:end="53:50"><expr pos:start="53:50" pos:end="53:50"><name pos:start="53:50" pos:end="53:50">s</name></expr></argument>, <argument pos:start="53:53" pos:end="53:62"><expr pos:start="53:53" pos:end="53:62"><name pos:start="53:53" pos:end="53:62">extra_meta</name></expr></argument>, <argument pos:start="53:65" pos:end="53:67"><expr pos:start="53:65" pos:end="53:67"><name pos:start="53:65" pos:end="53:67">buf</name></expr></argument>)</argument_list></call> <operator pos:start="53:70" pos:end="53:70">&lt;</operator> <literal type="number" pos:start="53:72" pos:end="53:72">0</literal></expr>)</condition> <block pos:start="53:75" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:46"><expr pos:start="55:9" pos:end="55:45"><call pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:32">ff_id3v2_free_extra_meta</name><argument_list pos:start="55:33" pos:end="55:45">(<argument pos:start="55:34" pos:end="55:44"><expr pos:start="55:34" pos:end="55:44"><operator pos:start="55:34" pos:end="55:34">&amp;</operator><name pos:start="55:35" pos:end="55:44">extra_meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><call pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:28">ff_id3v2_free_extra_meta</name><argument_list pos:start="63:29" pos:end="63:41">(<argument pos:start="63:30" pos:end="63:40"><expr pos:start="63:30" pos:end="63:40"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:40">extra_meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:16">codec_params</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:36"><name pos:start="67:20" pos:end="67:26">AV_RB24</name><argument_list pos:start="67:27" pos:end="67:36">(<argument pos:start="67:28" pos:end="67:35"><expr pos:start="67:28" pos:end="67:35"><operator pos:start="67:28" pos:end="67:28">&amp;</operator><name pos:start="67:29" pos:end="67:35"><name pos:start="67:29" pos:end="67:31">buf</name><index pos:start="67:32" pos:end="67:35">[<expr pos:start="67:33" pos:end="67:34"><literal type="number" pos:start="67:33" pos:end="67:34">33</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:38"><expr pos:start="71:5" pos:end="71:37"><name pos:start="71:5" pos:end="71:6">st</name> <operator pos:start="71:8" pos:end="71:8">=</operator> <call pos:start="71:10" pos:end="71:37"><name pos:start="71:10" pos:end="71:28">avformat_new_stream</name><argument_list pos:start="71:29" pos:end="71:37">(<argument pos:start="71:30" pos:end="71:30"><expr pos:start="71:30" pos:end="71:30"><name pos:start="71:30" pos:end="71:30">s</name></expr></argument>, <argument pos:start="71:33" pos:end="71:36"><expr pos:start="71:33" pos:end="71:36"><name pos:start="71:33" pos:end="71:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:31"><if pos:start="73:5" pos:end="75:31">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:11">st</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:31"><block_content pos:start="75:9" pos:end="75:31">

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:23"><expr pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:6">st</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:18">start_time</name></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:47"><expr pos:start="81:5" pos:end="81:46"><name pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:6">st</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:13">codec</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:25">codec_type</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:36"><expr pos:start="83:5" pos:end="83:35"><name pos:start="83:5" pos:end="83:24"><name pos:start="83:5" pos:end="83:6">st</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:24">codec_tag</name></name>  <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:35"><name pos:start="83:29" pos:end="83:31">buf</name><index pos:start="83:32" pos:end="83:35">[<expr pos:start="83:33" pos:end="83:34"><literal type="number" pos:start="83:33" pos:end="83:34">32</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="87:66"><expr pos:start="85:5" pos:end="87:65"><name pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:6">st</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:23">codec_id</name></name>   <operator pos:start="85:27" pos:end="85:27">=</operator> <call pos:start="85:29" pos:end="87:65"><name pos:start="85:29" pos:end="85:43">ff_codec_get_id</name><argument_list pos:start="85:44" pos:end="87:65">(<argument pos:start="85:45" pos:end="85:61"><expr pos:start="85:45" pos:end="85:61"><name pos:start="85:45" pos:end="85:61">ff_oma_codec_tags</name></expr></argument>,

                                            <argument pos:start="87:45" pos:end="87:64"><expr pos:start="87:45" pos:end="87:64"><name pos:start="87:45" pos:end="87:64"><name pos:start="87:45" pos:end="87:46">st</name><operator pos:start="87:47" pos:end="87:48">-&gt;</operator><name pos:start="87:49" pos:end="87:53">codec</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:64">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="91:5" pos:end="237:5">switch <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">buf</name><index pos:start="91:16" pos:end="91:19">[<expr pos:start="91:17" pos:end="91:18"><literal type="number" pos:start="91:17" pos:end="91:18">32</literal></expr>]</index></name></expr>)</condition> <block pos:start="91:22" pos:end="237:5">{<block_content pos:start="93:5" pos:end="235:31">

    <case pos:start="93:5" pos:end="93:28">case <expr pos:start="93:10" pos:end="93:27"><name pos:start="93:10" pos:end="93:27">OMA_CODECID_ATRAC3</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:70"><expr pos:start="95:9" pos:end="95:69"><name pos:start="95:9" pos:end="95:18">samplerate</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:63"><name pos:start="95:22" pos:end="95:37">ff_oma_srate_tab</name><index pos:start="95:38" pos:end="95:63">[<expr pos:start="95:39" pos:end="95:62"><operator pos:start="95:39" pos:end="95:39">(</operator><name pos:start="95:40" pos:end="95:51">codec_params</name> <operator pos:start="95:53" pos:end="95:54">&gt;&gt;</operator> <literal type="number" pos:start="95:56" pos:end="95:57">13</literal><operator pos:start="95:58" pos:end="95:58">)</operator> <operator pos:start="95:60" pos:end="95:60">&amp;</operator> <literal type="number" pos:start="95:62" pos:end="95:62">7</literal></expr>]</index></name> <operator pos:start="95:65" pos:end="95:65">*</operator> <literal type="number" pos:start="95:67" pos:end="95:69">100</literal></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:24">(<expr pos:start="97:13" pos:end="97:23"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:23">samplerate</name></expr>)</condition> <block pos:start="97:26" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:39">

            <expr_stmt pos:start="99:13" pos:end="99:65"><expr pos:start="99:13" pos:end="99:64"><call pos:start="99:13" pos:end="99:64"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:64">(<argument pos:start="99:20" pos:end="99:20"><expr pos:start="99:20" pos:end="99:20"><name pos:start="99:20" pos:end="99:20">s</name></expr></argument>, <argument pos:start="99:23" pos:end="99:34"><expr pos:start="99:23" pos:end="99:34"><name pos:start="99:23" pos:end="99:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:37" pos:end="99:63"><expr pos:start="99:37" pos:end="99:63"><literal type="string" pos:start="99:37" pos:end="99:63">"Unsupported sample rate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:39">return <expr pos:start="101:20" pos:end="101:38"><name pos:start="101:20" pos:end="101:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="107:67"><if pos:start="105:9" pos:end="107:67">if <condition pos:start="105:12" pos:end="105:32">(<expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:22">samplerate</name> <operator pos:start="105:24" pos:end="105:25">!=</operator> <literal type="number" pos:start="105:27" pos:end="105:31">44100</literal></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:67"><block_content pos:start="107:13" pos:end="107:67">

            <expr_stmt pos:start="107:13" pos:end="107:67"><expr pos:start="107:13" pos:end="107:66"><call pos:start="107:13" pos:end="107:66"><name pos:start="107:13" pos:end="107:33">avpriv_request_sample</name><argument_list pos:start="107:34" pos:end="107:66">(<argument pos:start="107:35" pos:end="107:35"><expr pos:start="107:35" pos:end="107:35"><name pos:start="107:35" pos:end="107:35">s</name></expr></argument>, <argument pos:start="107:38" pos:end="107:53"><expr pos:start="107:38" pos:end="107:53"><literal type="string" pos:start="107:38" pos:end="107:53">"Sample rate %d"</literal></expr></argument>, <argument pos:start="107:56" pos:end="107:65"><expr pos:start="107:56" pos:end="107:65"><name pos:start="107:56" pos:end="107:65">samplerate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:47"><expr pos:start="111:9" pos:end="111:46"><name pos:start="111:9" pos:end="111:17">framesize</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <operator pos:start="111:21" pos:end="111:21">(</operator><name pos:start="111:22" pos:end="111:33">codec_params</name> <operator pos:start="111:35" pos:end="111:35">&amp;</operator> <literal type="number" pos:start="111:37" pos:end="111:41">0x3FF</literal><operator pos:start="111:42" pos:end="111:42">)</operator> <operator pos:start="111:44" pos:end="111:44">*</operator> <literal type="number" pos:start="111:46" pos:end="111:46">8</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="115:9" pos:end="115:56">/* get stereo coding mode, 1 for joint-stereo */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:42"><expr pos:start="117:9" pos:end="117:41"><name pos:start="117:9" pos:end="117:14">jsflag</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <operator pos:start="117:18" pos:end="117:18">(</operator><name pos:start="117:19" pos:end="117:30">codec_params</name> <operator pos:start="117:32" pos:end="117:33">&gt;&gt;</operator> <literal type="number" pos:start="117:35" pos:end="117:36">17</literal><operator pos:start="117:37" pos:end="117:37">)</operator> <operator pos:start="117:39" pos:end="117:39">&amp;</operator> <literal type="number" pos:start="117:41" pos:end="117:41">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:35"><expr pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:10">st</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:17">codec</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:27">channels</name></name>    <operator pos:start="121:32" pos:end="121:32">=</operator> <literal type="number" pos:start="121:34" pos:end="121:34">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:56"><expr pos:start="123:9" pos:end="123:55"><name pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:10">st</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:17">codec</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:33">channel_layout</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <name pos:start="123:37" pos:end="123:55">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:44"><expr pos:start="125:9" pos:end="125:43"><name pos:start="125:9" pos:end="125:30"><name pos:start="125:9" pos:end="125:10">st</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:30">sample_rate</name></name> <operator pos:start="125:32" pos:end="125:32">=</operator> <name pos:start="125:34" pos:end="125:43">samplerate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:79"><expr pos:start="127:9" pos:end="127:78"><name pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:10">st</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:17">codec</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:27">bit_rate</name></name>    <operator pos:start="127:32" pos:end="127:32">=</operator> <name pos:start="127:34" pos:end="127:55"><name pos:start="127:34" pos:end="127:35">st</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:42">codec</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:55">sample_rate</name></name> <operator pos:start="127:57" pos:end="127:57">*</operator> <name pos:start="127:59" pos:end="127:67">framesize</name> <operator pos:start="127:69" pos:end="127:69">*</operator> <literal type="number" pos:start="127:71" pos:end="127:71">8</literal> <operator pos:start="127:73" pos:end="127:73">/</operator> <literal type="number" pos:start="127:75" pos:end="127:78">1024</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="131:9" pos:end="133:57">/* fake the ATRAC3 extradata

         * (wav format, makes stream copy to wav work) */</comment>

        <if_stmt pos:start="135:9" pos:end="137:35"><if pos:start="135:9" pos:end="137:35">if <condition pos:start="135:12" pos:end="135:46">(<expr pos:start="135:13" pos:end="135:45"><call pos:start="135:13" pos:end="135:45"><name pos:start="135:13" pos:end="135:30">ff_alloc_extradata</name><argument_list pos:start="135:31" pos:end="135:45">(<argument pos:start="135:32" pos:end="135:40"><expr pos:start="135:32" pos:end="135:40"><name pos:start="135:32" pos:end="135:40"><name pos:start="135:32" pos:end="135:33">st</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:40">codec</name></name></expr></argument>, <argument pos:start="135:43" pos:end="135:44"><expr pos:start="135:43" pos:end="135:44"><literal type="number" pos:start="135:43" pos:end="135:44">14</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:35"><block_content pos:start="137:13" pos:end="137:35">

            <return pos:start="137:13" pos:end="137:35">return <expr pos:start="137:20" pos:end="137:34"><call pos:start="137:20" pos:end="137:34"><name pos:start="137:20" pos:end="137:26">AVERROR</name><argument_list pos:start="137:27" pos:end="137:34">(<argument pos:start="137:28" pos:end="137:33"><expr pos:start="137:28" pos:end="137:33"><name pos:start="137:28" pos:end="137:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:37"><expr pos:start="141:9" pos:end="141:36"><name pos:start="141:9" pos:end="141:13">edata</name> <operator pos:start="141:15" pos:end="141:15">=</operator> <name pos:start="141:17" pos:end="141:36"><name pos:start="141:17" pos:end="141:18">st</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:25">codec</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:36">extradata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:31"><expr pos:start="143:9" pos:end="143:30"><call pos:start="143:9" pos:end="143:30"><name pos:start="143:9" pos:end="143:15">AV_WL16</name><argument_list pos:start="143:16" pos:end="143:30">(<argument pos:start="143:17" pos:end="143:25"><expr pos:start="143:17" pos:end="143:25"><operator pos:start="143:17" pos:end="143:17">&amp;</operator><name pos:start="143:18" pos:end="143:25"><name pos:start="143:18" pos:end="143:22">edata</name><index pos:start="143:23" pos:end="143:25">[<expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr>]</index></name></expr></argument>,  <argument pos:start="143:29" pos:end="143:29"><expr pos:start="143:29" pos:end="143:29"><literal type="number" pos:start="143:29" pos:end="143:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="143:45" pos:end="143:55">// always 1</comment>

        <expr_stmt pos:start="145:9" pos:end="145:40"><expr pos:start="145:9" pos:end="145:39"><call pos:start="145:9" pos:end="145:39"><name pos:start="145:9" pos:end="145:15">AV_WL32</name><argument_list pos:start="145:16" pos:end="145:39">(<argument pos:start="145:17" pos:end="145:25"><expr pos:start="145:17" pos:end="145:25"><operator pos:start="145:17" pos:end="145:17">&amp;</operator><name pos:start="145:18" pos:end="145:25"><name pos:start="145:18" pos:end="145:22">edata</name><index pos:start="145:23" pos:end="145:25">[<expr pos:start="145:24" pos:end="145:24"><literal type="number" pos:start="145:24" pos:end="145:24">2</literal></expr>]</index></name></expr></argument>,  <argument pos:start="145:29" pos:end="145:38"><expr pos:start="145:29" pos:end="145:38"><name pos:start="145:29" pos:end="145:38">samplerate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="145:45" pos:end="145:59">// samples rate</comment>

        <expr_stmt pos:start="147:9" pos:end="147:36"><expr pos:start="147:9" pos:end="147:35"><call pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:15">AV_WL16</name><argument_list pos:start="147:16" pos:end="147:35">(<argument pos:start="147:17" pos:end="147:25"><expr pos:start="147:17" pos:end="147:25"><operator pos:start="147:17" pos:end="147:17">&amp;</operator><name pos:start="147:18" pos:end="147:25"><name pos:start="147:18" pos:end="147:22">edata</name><index pos:start="147:23" pos:end="147:25">[<expr pos:start="147:24" pos:end="147:24"><literal type="number" pos:start="147:24" pos:end="147:24">6</literal></expr>]</index></name></expr></argument>,  <argument pos:start="147:29" pos:end="147:34"><expr pos:start="147:29" pos:end="147:34"><name pos:start="147:29" pos:end="147:34">jsflag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="line" pos:start="147:45" pos:end="147:58">// coding mode</comment>

        <expr_stmt pos:start="149:9" pos:end="149:36"><expr pos:start="149:9" pos:end="149:35"><call pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:15">AV_WL16</name><argument_list pos:start="149:16" pos:end="149:35">(<argument pos:start="149:17" pos:end="149:25"><expr pos:start="149:17" pos:end="149:25"><operator pos:start="149:17" pos:end="149:17">&amp;</operator><name pos:start="149:18" pos:end="149:25"><name pos:start="149:18" pos:end="149:22">edata</name><index pos:start="149:23" pos:end="149:25">[<expr pos:start="149:24" pos:end="149:24"><literal type="number" pos:start="149:24" pos:end="149:24">8</literal></expr>]</index></name></expr></argument>,  <argument pos:start="149:29" pos:end="149:34"><expr pos:start="149:29" pos:end="149:34"><name pos:start="149:29" pos:end="149:34">jsflag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="line" pos:start="149:45" pos:end="149:58">// coding mode</comment>

        <expr_stmt pos:start="151:9" pos:end="151:31"><expr pos:start="151:9" pos:end="151:30"><call pos:start="151:9" pos:end="151:30"><name pos:start="151:9" pos:end="151:15">AV_WL16</name><argument_list pos:start="151:16" pos:end="151:30">(<argument pos:start="151:17" pos:end="151:26"><expr pos:start="151:17" pos:end="151:26"><operator pos:start="151:17" pos:end="151:17">&amp;</operator><name pos:start="151:18" pos:end="151:26"><name pos:start="151:18" pos:end="151:22">edata</name><index pos:start="151:23" pos:end="151:26">[<expr pos:start="151:24" pos:end="151:25"><literal type="number" pos:start="151:24" pos:end="151:25">10</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:29" pos:end="151:29"><expr pos:start="151:29" pos:end="151:29"><literal type="number" pos:start="151:29" pos:end="151:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="151:45" pos:end="151:55">// always 1</comment>

        <comment type="line" pos:start="153:9" pos:end="153:55">// AV_WL16(&amp;edata[12], 0);          // always 0</comment>



        <expr_stmt pos:start="157:9" pos:end="157:63"><expr pos:start="157:9" pos:end="157:62"><call pos:start="157:9" pos:end="157:62"><name pos:start="157:9" pos:end="157:27">avpriv_set_pts_info</name><argument_list pos:start="157:28" pos:end="157:62">(<argument pos:start="157:29" pos:end="157:30"><expr pos:start="157:29" pos:end="157:30"><name pos:start="157:29" pos:end="157:30">st</name></expr></argument>, <argument pos:start="157:33" pos:end="157:34"><expr pos:start="157:33" pos:end="157:34"><literal type="number" pos:start="157:33" pos:end="157:34">64</literal></expr></argument>, <argument pos:start="157:37" pos:end="157:37"><expr pos:start="157:37" pos:end="157:37"><literal type="number" pos:start="157:37" pos:end="157:37">1</literal></expr></argument>, <argument pos:start="157:40" pos:end="157:61"><expr pos:start="157:40" pos:end="157:61"><name pos:start="157:40" pos:end="157:61"><name pos:start="157:40" pos:end="157:41">st</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:48">codec</name><operator pos:start="157:49" pos:end="157:50">-&gt;</operator><name pos:start="157:51" pos:end="157:61">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:29">case <expr pos:start="161:10" pos:end="161:28"><name pos:start="161:10" pos:end="161:28">OMA_CODECID_ATRAC3P</name></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:46"><expr pos:start="163:9" pos:end="163:45"><name pos:start="163:9" pos:end="163:18">channel_id</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <operator pos:start="163:22" pos:end="163:22">(</operator><name pos:start="163:23" pos:end="163:34">codec_params</name> <operator pos:start="163:36" pos:end="163:37">&gt;&gt;</operator> <literal type="number" pos:start="163:39" pos:end="163:40">10</literal><operator pos:start="163:41" pos:end="163:41">)</operator> <operator pos:start="163:43" pos:end="163:43">&amp;</operator> <literal type="number" pos:start="163:45" pos:end="163:45">7</literal></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="173:9"><if pos:start="165:9" pos:end="173:9">if <condition pos:start="165:12" pos:end="165:24">(<expr pos:start="165:13" pos:end="165:23"><operator pos:start="165:13" pos:end="165:13">!</operator><name pos:start="165:14" pos:end="165:23">channel_id</name></expr>)</condition> <block pos:start="165:26" pos:end="173:9">{<block_content pos:start="167:13" pos:end="171:39">

            <expr_stmt pos:start="167:13" pos:end="169:74"><expr pos:start="167:13" pos:end="169:73"><call pos:start="167:13" pos:end="169:73"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="169:73">(<argument pos:start="167:20" pos:end="167:20"><expr pos:start="167:20" pos:end="167:20"><name pos:start="167:20" pos:end="167:20">s</name></expr></argument>, <argument pos:start="167:23" pos:end="167:34"><expr pos:start="167:23" pos:end="167:34"><name pos:start="167:23" pos:end="167:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="169:20" pos:end="169:60"><expr pos:start="169:20" pos:end="169:60"><literal type="string" pos:start="169:20" pos:end="169:50">"Invalid ATRAC-X channel id: %"</literal><name pos:start="169:51" pos:end="169:56">PRIu32</name><literal type="string" pos:start="169:57" pos:end="169:60">"\n"</literal></expr></argument>, <argument pos:start="169:63" pos:end="169:72"><expr pos:start="169:63" pos:end="169:72"><name pos:start="169:63" pos:end="169:72">channel_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="171:13" pos:end="171:39">return <expr pos:start="171:20" pos:end="171:38"><name pos:start="171:20" pos:end="171:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:81"><expr pos:start="175:9" pos:end="175:80"><name pos:start="175:9" pos:end="175:33"><name pos:start="175:9" pos:end="175:10">st</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:17">codec</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:33">channel_layout</name></name> <operator pos:start="175:35" pos:end="175:35">=</operator> <name pos:start="175:37" pos:end="175:80"><name pos:start="175:37" pos:end="175:64">ff_oma_chid_to_native_layout</name><index pos:start="175:65" pos:end="175:80">[<expr pos:start="175:66" pos:end="175:79"><name pos:start="175:66" pos:end="175:75">channel_id</name> <operator pos:start="175:77" pos:end="175:77">-</operator> <literal type="number" pos:start="175:79" pos:end="175:79">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:80"><expr pos:start="177:9" pos:end="177:79"><name pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:10">st</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:17">codec</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:27">channels</name></name>       <operator pos:start="177:35" pos:end="177:35">=</operator> <name pos:start="177:37" pos:end="177:79"><name pos:start="177:37" pos:end="177:63">ff_oma_chid_to_num_channels</name><index pos:start="177:64" pos:end="177:79">[<expr pos:start="177:65" pos:end="177:78"><name pos:start="177:65" pos:end="177:74">channel_id</name> <operator pos:start="177:76" pos:end="177:76">-</operator> <literal type="number" pos:start="177:78" pos:end="177:78">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:53"><expr pos:start="179:9" pos:end="179:52"><name pos:start="179:9" pos:end="179:17">framesize</name> <operator pos:start="179:19" pos:end="179:19">=</operator> <operator pos:start="179:21" pos:end="179:21">(</operator><operator pos:start="179:22" pos:end="179:22">(</operator><name pos:start="179:23" pos:end="179:34">codec_params</name> <operator pos:start="179:36" pos:end="179:36">&amp;</operator> <literal type="number" pos:start="179:38" pos:end="179:42">0x3FF</literal><operator pos:start="179:43" pos:end="179:43">)</operator> <operator pos:start="179:45" pos:end="179:45">*</operator> <literal type="number" pos:start="179:47" pos:end="179:47">8</literal><operator pos:start="179:48" pos:end="179:48">)</operator> <operator pos:start="179:50" pos:end="179:50">+</operator> <literal type="number" pos:start="179:52" pos:end="179:52">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:70"><expr pos:start="181:9" pos:end="181:69"><name pos:start="181:9" pos:end="181:18">samplerate</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <name pos:start="181:22" pos:end="181:63"><name pos:start="181:22" pos:end="181:37">ff_oma_srate_tab</name><index pos:start="181:38" pos:end="181:63">[<expr pos:start="181:39" pos:end="181:62"><operator pos:start="181:39" pos:end="181:39">(</operator><name pos:start="181:40" pos:end="181:51">codec_params</name> <operator pos:start="181:53" pos:end="181:54">&gt;&gt;</operator> <literal type="number" pos:start="181:56" pos:end="181:57">13</literal><operator pos:start="181:58" pos:end="181:58">)</operator> <operator pos:start="181:60" pos:end="181:60">&amp;</operator> <literal type="number" pos:start="181:62" pos:end="181:62">7</literal></expr>]</index></name> <operator pos:start="181:65" pos:end="181:65">*</operator> <literal type="number" pos:start="181:67" pos:end="181:69">100</literal></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="189:9"><if pos:start="183:9" pos:end="189:9">if <condition pos:start="183:12" pos:end="183:24">(<expr pos:start="183:13" pos:end="183:23"><operator pos:start="183:13" pos:end="183:13">!</operator><name pos:start="183:14" pos:end="183:23">samplerate</name></expr>)</condition> <block pos:start="183:26" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:39">

            <expr_stmt pos:start="185:13" pos:end="185:65"><expr pos:start="185:13" pos:end="185:64"><call pos:start="185:13" pos:end="185:64"><name pos:start="185:13" pos:end="185:18">av_log</name><argument_list pos:start="185:19" pos:end="185:64">(<argument pos:start="185:20" pos:end="185:20"><expr pos:start="185:20" pos:end="185:20"><name pos:start="185:20" pos:end="185:20">s</name></expr></argument>, <argument pos:start="185:23" pos:end="185:34"><expr pos:start="185:23" pos:end="185:34"><name pos:start="185:23" pos:end="185:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="185:37" pos:end="185:63"><expr pos:start="185:37" pos:end="185:63"><literal type="string" pos:start="185:37" pos:end="185:63">"Unsupported sample rate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="187:13" pos:end="187:39">return <expr pos:start="187:20" pos:end="187:38"><name pos:start="187:20" pos:end="187:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:44"><expr pos:start="191:9" pos:end="191:43"><name pos:start="191:9" pos:end="191:30"><name pos:start="191:9" pos:end="191:10">st</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:17">codec</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:30">sample_rate</name></name> <operator pos:start="191:32" pos:end="191:32">=</operator> <name pos:start="191:34" pos:end="191:43">samplerate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:67"><expr pos:start="193:9" pos:end="193:66"><name pos:start="193:9" pos:end="193:27"><name pos:start="193:9" pos:end="193:10">st</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:17">codec</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:27">bit_rate</name></name>    <operator pos:start="193:32" pos:end="193:32">=</operator> <name pos:start="193:34" pos:end="193:43">samplerate</name> <operator pos:start="193:45" pos:end="193:45">*</operator> <name pos:start="193:47" pos:end="193:55">framesize</name> <operator pos:start="193:57" pos:end="193:57">*</operator> <literal type="number" pos:start="193:59" pos:end="193:59">8</literal> <operator pos:start="193:61" pos:end="193:61">/</operator> <literal type="number" pos:start="193:63" pos:end="193:66">2048</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:51"><expr pos:start="195:9" pos:end="195:50"><call pos:start="195:9" pos:end="195:50"><name pos:start="195:9" pos:end="195:27">avpriv_set_pts_info</name><argument_list pos:start="195:28" pos:end="195:50">(<argument pos:start="195:29" pos:end="195:30"><expr pos:start="195:29" pos:end="195:30"><name pos:start="195:29" pos:end="195:30">st</name></expr></argument>, <argument pos:start="195:33" pos:end="195:34"><expr pos:start="195:33" pos:end="195:34"><literal type="number" pos:start="195:33" pos:end="195:34">64</literal></expr></argument>, <argument pos:start="195:37" pos:end="195:37"><expr pos:start="195:37" pos:end="195:37"><literal type="number" pos:start="195:37" pos:end="195:37">1</literal></expr></argument>, <argument pos:start="195:40" pos:end="195:49"><expr pos:start="195:40" pos:end="195:49"><name pos:start="195:40" pos:end="195:49">samplerate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:25">case <expr pos:start="199:10" pos:end="199:24"><name pos:start="199:10" pos:end="199:24">OMA_CODECID_MP3</name></expr>:</case>

        <expr_stmt pos:start="201:9" pos:end="201:51"><expr pos:start="201:9" pos:end="201:50"><name pos:start="201:9" pos:end="201:24"><name pos:start="201:9" pos:end="201:10">st</name><operator pos:start="201:11" pos:end="201:12">-&gt;</operator><name pos:start="201:13" pos:end="201:24">need_parsing</name></name> <operator pos:start="201:26" pos:end="201:26">=</operator> <name pos:start="201:28" pos:end="201:50">AVSTREAM_PARSE_FULL_RAW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:25"><expr pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:17">framesize</name> <operator pos:start="203:19" pos:end="203:19">=</operator> <literal type="number" pos:start="203:21" pos:end="203:24">1024</literal></expr>;</expr_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <case pos:start="207:5" pos:end="207:26">case <expr pos:start="207:10" pos:end="207:25"><name pos:start="207:10" pos:end="207:25">OMA_CODECID_LPCM</name></expr>:</case>

        <comment type="block" pos:start="209:9" pos:end="209:51">/* PCM 44.1 kHz 16 bit stereo big-endian */</comment>

        <expr_stmt pos:start="211:9" pos:end="211:32"><expr pos:start="211:9" pos:end="211:31"><name pos:start="211:9" pos:end="211:27"><name pos:start="211:9" pos:end="211:10">st</name><operator pos:start="211:11" pos:end="211:12">-&gt;</operator><name pos:start="211:13" pos:end="211:17">codec</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:27">channels</name></name> <operator pos:start="211:29" pos:end="211:29">=</operator> <literal type="number" pos:start="211:31" pos:end="211:31">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:56"><expr pos:start="213:9" pos:end="213:55"><name pos:start="213:9" pos:end="213:33"><name pos:start="213:9" pos:end="213:10">st</name><operator pos:start="213:11" pos:end="213:12">-&gt;</operator><name pos:start="213:13" pos:end="213:17">codec</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:33">channel_layout</name></name> <operator pos:start="213:35" pos:end="213:35">=</operator> <name pos:start="213:37" pos:end="213:55">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:39"><expr pos:start="215:9" pos:end="215:38"><name pos:start="215:9" pos:end="215:30"><name pos:start="215:9" pos:end="215:10">st</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:17">codec</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:30">sample_rate</name></name> <operator pos:start="215:32" pos:end="215:32">=</operator> <literal type="number" pos:start="215:34" pos:end="215:38">44100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:25"><expr pos:start="217:9" pos:end="217:24"><name pos:start="217:9" pos:end="217:17">framesize</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <literal type="number" pos:start="217:21" pos:end="217:24">1024</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="219:9" pos:end="219:64">/* bit rate = sample rate x PCM block align (= 4) x 8 */</comment>

        <expr_stmt pos:start="221:9" pos:end="221:58"><expr pos:start="221:9" pos:end="221:57"><name pos:start="221:9" pos:end="221:27"><name pos:start="221:9" pos:end="221:10">st</name><operator pos:start="221:11" pos:end="221:12">-&gt;</operator><name pos:start="221:13" pos:end="221:17">codec</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:27">bit_rate</name></name> <operator pos:start="221:29" pos:end="221:29">=</operator> <name pos:start="221:31" pos:end="221:52"><name pos:start="221:31" pos:end="221:32">st</name><operator pos:start="221:33" pos:end="221:34">-&gt;</operator><name pos:start="221:35" pos:end="221:39">codec</name><operator pos:start="221:40" pos:end="221:41">-&gt;</operator><name pos:start="221:42" pos:end="221:52">sample_rate</name></name> <operator pos:start="221:54" pos:end="221:54">*</operator> <literal type="number" pos:start="221:56" pos:end="221:57">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="225:56"><expr pos:start="223:9" pos:end="225:55"><name pos:start="223:9" pos:end="223:40"><name pos:start="223:9" pos:end="223:10">st</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:17">codec</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:40">bits_per_coded_sample</name></name> <operator pos:start="223:42" pos:end="223:42">=</operator>

            <call pos:start="225:13" pos:end="225:55"><name pos:start="225:13" pos:end="225:34">av_get_bits_per_sample</name><argument_list pos:start="225:35" pos:end="225:55">(<argument pos:start="225:36" pos:end="225:54"><expr pos:start="225:36" pos:end="225:54"><name pos:start="225:36" pos:end="225:54"><name pos:start="225:36" pos:end="225:37">st</name><operator pos:start="225:38" pos:end="225:39">-&gt;</operator><name pos:start="225:40" pos:end="225:44">codec</name><operator pos:start="225:45" pos:end="225:46">-&gt;</operator><name pos:start="225:47" pos:end="225:54">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:63"><expr pos:start="227:9" pos:end="227:62"><call pos:start="227:9" pos:end="227:62"><name pos:start="227:9" pos:end="227:27">avpriv_set_pts_info</name><argument_list pos:start="227:28" pos:end="227:62">(<argument pos:start="227:29" pos:end="227:30"><expr pos:start="227:29" pos:end="227:30"><name pos:start="227:29" pos:end="227:30">st</name></expr></argument>, <argument pos:start="227:33" pos:end="227:34"><expr pos:start="227:33" pos:end="227:34"><literal type="number" pos:start="227:33" pos:end="227:34">64</literal></expr></argument>, <argument pos:start="227:37" pos:end="227:37"><expr pos:start="227:37" pos:end="227:37"><literal type="number" pos:start="227:37" pos:end="227:37">1</literal></expr></argument>, <argument pos:start="227:40" pos:end="227:61"><expr pos:start="227:40" pos:end="227:61"><name pos:start="227:40" pos:end="227:61"><name pos:start="227:40" pos:end="227:41">st</name><operator pos:start="227:42" pos:end="227:43">-&gt;</operator><name pos:start="227:44" pos:end="227:48">codec</name><operator pos:start="227:49" pos:end="227:50">-&gt;</operator><name pos:start="227:51" pos:end="227:61">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="229:9" pos:end="229:14">break;</break>

    <default pos:start="231:5" pos:end="231:12">default:</default>

        <expr_stmt pos:start="233:9" pos:end="233:68"><expr pos:start="233:9" pos:end="233:67"><call pos:start="233:9" pos:end="233:67"><name pos:start="233:9" pos:end="233:14">av_log</name><argument_list pos:start="233:15" pos:end="233:67">(<argument pos:start="233:16" pos:end="233:16"><expr pos:start="233:16" pos:end="233:16"><name pos:start="233:16" pos:end="233:16">s</name></expr></argument>, <argument pos:start="233:19" pos:end="233:30"><expr pos:start="233:19" pos:end="233:30"><name pos:start="233:19" pos:end="233:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:33" pos:end="233:57"><expr pos:start="233:33" pos:end="233:57"><literal type="string" pos:start="233:33" pos:end="233:57">"Unsupported codec %d!\n"</literal></expr></argument>, <argument pos:start="233:60" pos:end="233:66"><expr pos:start="233:60" pos:end="233:66"><name pos:start="233:60" pos:end="233:66"><name pos:start="233:60" pos:end="233:62">buf</name><index pos:start="233:63" pos:end="233:66">[<expr pos:start="233:64" pos:end="233:65"><literal type="number" pos:start="233:64" pos:end="233:65">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="235:9" pos:end="235:31">return <expr pos:start="235:16" pos:end="235:30"><call pos:start="235:16" pos:end="235:30"><name pos:start="235:16" pos:end="235:22">AVERROR</name><argument_list pos:start="235:23" pos:end="235:30">(<argument pos:start="235:24" pos:end="235:29"><expr pos:start="235:24" pos:end="235:29"><name pos:start="235:24" pos:end="235:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="241:5" pos:end="241:39"><expr pos:start="241:5" pos:end="241:38"><name pos:start="241:5" pos:end="241:26"><name pos:start="241:5" pos:end="241:6">st</name><operator pos:start="241:7" pos:end="241:8">-&gt;</operator><name pos:start="241:9" pos:end="241:13">codec</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:26">block_align</name></name> <operator pos:start="241:28" pos:end="241:28">=</operator> <name pos:start="241:30" pos:end="241:38">framesize</name></expr>;</expr_stmt>



    <return pos:start="245:5" pos:end="245:13">return <expr pos:start="245:12" pos:end="245:12"><literal type="number" pos:start="245:12" pos:end="245:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
