<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2244.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_uint32</name><parameter_list pos:start="1:24" pos:end="1:74">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">DeviceState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:50">Property</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">prop</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:73"><decl pos:start="1:59" pos:end="1:73"><type pos:start="1:59" pos:end="1:73"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:13">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">uint32_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">ptr</name> <init pos:start="5:19" pos:end="5:48">= <expr pos:start="5:21" pos:end="5:48"><call pos:start="5:21" pos:end="5:48"><name pos:start="5:21" pos:end="5:37">qdev_get_prop_ptr</name><argument_list pos:start="5:38" pos:end="5:48">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">dev</name></expr></argument>, <argument pos:start="5:44" pos:end="5:47"><expr pos:start="5:44" pos:end="5:47"><name pos:start="5:44" pos:end="5:47">prop</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">fmt</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:37">/* accept both hex and decimal */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:66"><expr pos:start="13:5" pos:end="13:65"><name pos:start="13:5" pos:end="13:7">fmt</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <ternary pos:start="13:11" pos:end="13:65"><condition pos:start="13:11" pos:end="13:41"><expr pos:start="13:11" pos:end="13:39"><call pos:start="13:11" pos:end="13:34"><name pos:start="13:11" pos:end="13:21">strncasecmp</name><argument_list pos:start="13:22" pos:end="13:34">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">str</name></expr></argument>, <argument pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><literal type="string" pos:start="13:28" pos:end="13:31">"0x"</literal></expr></argument>,<argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">2</literal></expr></argument>)</argument_list></call> <operator pos:start="13:36" pos:end="13:37">==</operator> <literal type="number" pos:start="13:39" pos:end="13:39">0</literal></expr> ?</condition><then pos:start="13:43" pos:end="13:52"> <expr pos:start="13:43" pos:end="13:52"><literal type="string" pos:start="13:43" pos:end="13:45">"%"</literal> <name pos:start="13:47" pos:end="13:52">PRIx32</name></expr> </then><else pos:start="13:54" pos:end="13:65">: <expr pos:start="13:56" pos:end="13:65"><literal type="string" pos:start="13:56" pos:end="13:58">"%"</literal> <name pos:start="13:60" pos:end="13:65">PRIu32</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:23"><if pos:start="15:5" pos:end="17:23">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:14">sscanf</name><argument_list pos:start="15:15" pos:end="15:29">(<argument pos:start="15:16" pos:end="15:18"><expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">str</name></expr></argument>, <argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">fmt</name></expr></argument>, <argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">ptr</name></expr></argument>)</argument_list></call> <operator pos:start="15:31" pos:end="15:32">!=</operator> <literal type="number" pos:start="15:34" pos:end="15:34">1</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:23"><block_content pos:start="17:9" pos:end="17:23">

        <return pos:start="17:9" pos:end="17:23">return <expr pos:start="17:16" pos:end="17:22"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="19:5" pos:end="19:13">return <expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
