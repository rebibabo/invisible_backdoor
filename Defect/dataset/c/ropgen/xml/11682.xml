<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11682.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">get_phys_addr_v6</name><parameter_list pos:start="1:28" pos:end="5:63">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">CPUARMState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:62">address</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:79">access_type</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:37">ARMMMUIdx</name></type> <name pos:start="3:39" pos:end="3:45">mmu_idx</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:63"><decl pos:start="3:48" pos:end="3:63"><type pos:start="3:48" pos:end="3:63"><name pos:start="3:48" pos:end="3:53">hwaddr</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:63">phys_ptr</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:37"><decl pos:start="5:29" pos:end="5:37"><type pos:start="5:29" pos:end="5:37"><name pos:start="5:29" pos:end="5:31">int</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:37">prot</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:62"><decl pos:start="5:40" pos:end="5:62"><type pos:start="5:40" pos:end="5:62"><name pos:start="5:40" pos:end="5:51">target_ulong</name> <modifier pos:start="5:53" pos:end="5:53">*</modifier></type><name pos:start="5:54" pos:end="5:62">page_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="245:1">{<block_content pos:start="9:5" pos:end="243:32">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">CPUState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">cs</name> <init pos:start="9:18" pos:end="9:44">= <expr pos:start="9:20" pos:end="9:44"><call pos:start="9:20" pos:end="9:44"><name pos:start="9:20" pos:end="9:22">CPU</name><argument_list pos:start="9:23" pos:end="9:44">(<argument pos:start="9:24" pos:end="9:43"><expr pos:start="9:24" pos:end="9:43"><call pos:start="9:24" pos:end="9:43"><name pos:start="9:24" pos:end="9:38">arm_env_get_cpu</name><argument_list pos:start="9:39" pos:end="9:43">(<argument pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:42">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:17">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:15">xn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:16">pxn</name> <init pos:start="19:18" pos:end="19:20">= <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:11"><decl pos:start="23:5" pos:end="23:10"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:19"><decl pos:start="25:5" pos:end="25:18"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14">domain</name> <init pos:start="25:16" pos:end="25:18">= <expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:20"><decl pos:start="27:5" pos:end="27:19"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:19">domain_prot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:10">hwaddr</name></type> <name pos:start="29:12" pos:end="29:20">phys_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:18"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint32_t</name></type> <name pos:start="31:14" pos:end="31:17">dacr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:26">/* Pagetable walk.  */</comment>

    <comment type="block" pos:start="37:5" pos:end="37:32">/* Lookup l1 descriptor.  */</comment>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:65">(<expr pos:start="39:9" pos:end="39:64"><operator pos:start="39:9" pos:end="39:9">!</operator><call pos:start="39:10" pos:end="39:64"><name pos:start="39:10" pos:end="39:33">get_level1_table_address</name><argument_list pos:start="39:34" pos:end="39:64">(<argument pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><name pos:start="39:35" pos:end="39:37">env</name></expr></argument>, <argument pos:start="39:40" pos:end="39:46"><expr pos:start="39:40" pos:end="39:46"><name pos:start="39:40" pos:end="39:46">mmu_idx</name></expr></argument>, <argument pos:start="39:49" pos:end="39:54"><expr pos:start="39:49" pos:end="39:54"><operator pos:start="39:49" pos:end="39:49">&amp;</operator><name pos:start="39:50" pos:end="39:54">table</name></expr></argument>, <argument pos:start="39:57" pos:end="39:63"><expr pos:start="39:57" pos:end="39:63"><name pos:start="39:57" pos:end="39:63">address</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:67" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:22">

        <comment type="block" pos:start="41:9" pos:end="41:78">/* Section translation fault if page walk is disabled by PD0 or PD1 */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:17"><expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:12">code</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">5</literal></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:22">goto <name pos:start="45:14" pos:end="45:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:8">desc</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:34"><name pos:start="49:12" pos:end="49:19">ldl_phys</name><argument_list pos:start="49:20" pos:end="49:34">(<argument pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:22">cs</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:26">as</name></name></expr></argument>, <argument pos:start="49:29" pos:end="49:33"><expr pos:start="49:29" pos:end="49:33"><name pos:start="49:29" pos:end="49:33">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:8">type</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <operator pos:start="51:12" pos:end="51:12">(</operator><name pos:start="51:13" pos:end="51:16">desc</name> <operator pos:start="51:18" pos:end="51:18">&amp;</operator> <literal type="number" pos:start="51:20" pos:end="51:20">3</literal><operator pos:start="51:21" pos:end="51:21">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:71">(<expr pos:start="53:9" pos:end="53:70"><name pos:start="53:9" pos:end="53:12">type</name> <operator pos:start="53:14" pos:end="53:15">==</operator> <literal type="number" pos:start="53:17" pos:end="53:17">0</literal> <operator pos:start="53:19" pos:end="53:20">||</operator> <operator pos:start="53:22" pos:end="53:22">(</operator><name pos:start="53:23" pos:end="53:26">type</name> <operator pos:start="53:28" pos:end="53:29">==</operator> <literal type="number" pos:start="53:31" pos:end="53:31">3</literal> <operator pos:start="53:33" pos:end="53:34">&amp;&amp;</operator> <operator pos:start="53:36" pos:end="53:36">!</operator><call pos:start="53:37" pos:end="53:69"><name pos:start="53:37" pos:end="53:47">arm_feature</name><argument_list pos:start="53:48" pos:end="53:69">(<argument pos:start="53:49" pos:end="53:51"><expr pos:start="53:49" pos:end="53:51"><name pos:start="53:49" pos:end="53:51">env</name></expr></argument>, <argument pos:start="53:54" pos:end="53:68"><expr pos:start="53:54" pos:end="53:68"><name pos:start="53:54" pos:end="53:68">ARM_FEATURE_PXN</name></expr></argument>)</argument_list></call><operator pos:start="53:70" pos:end="53:70">)</operator></expr>)</condition> <block pos:start="53:73" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:22">

        <comment type="block" pos:start="55:9" pos:end="59:11">/* Section translation fault, or attempt to use the encoding

         * which is Reserved on implementations without PXN.

         */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:12">code</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">5</literal></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:22">goto <name pos:start="63:14" pos:end="63:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:43">(<expr pos:start="67:9" pos:end="67:42"><operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:13">type</name> <operator pos:start="67:15" pos:end="67:16">==</operator> <literal type="number" pos:start="67:18" pos:end="67:18">1</literal><operator pos:start="67:19" pos:end="67:19">)</operator> <operator pos:start="67:21" pos:end="67:22">||</operator> <operator pos:start="67:24" pos:end="67:24">!</operator><operator pos:start="67:25" pos:end="67:25">(</operator><name pos:start="67:26" pos:end="67:29">desc</name> <operator pos:start="67:31" pos:end="67:31">&amp;</operator> <operator pos:start="67:33" pos:end="67:33">(</operator><literal type="number" pos:start="67:34" pos:end="67:34">1</literal> <operator pos:start="67:36" pos:end="67:37">&lt;&lt;</operator> <literal type="number" pos:start="67:39" pos:end="67:40">18</literal><operator pos:start="67:41" pos:end="67:41">)</operator><operator pos:start="67:42" pos:end="67:42">)</operator></expr>)</condition> <block pos:start="67:45" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:36">

        <comment type="block" pos:start="69:9" pos:end="69:31">/* Page or Section.  */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:14">domain</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <operator pos:start="71:18" pos:end="71:18">(</operator><name pos:start="71:19" pos:end="71:22">desc</name> <operator pos:start="71:24" pos:end="71:25">&gt;&gt;</operator> <literal type="number" pos:start="71:27" pos:end="71:27">5</literal><operator pos:start="71:28" pos:end="71:28">)</operator> <operator pos:start="71:30" pos:end="71:30">&amp;</operator> <literal type="number" pos:start="71:32" pos:end="71:35">0x0f</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:37">(<expr pos:start="75:9" pos:end="75:36"><call pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:17">regime_el</name><argument_list pos:start="75:18" pos:end="75:31">(<argument pos:start="75:19" pos:end="75:21"><expr pos:start="75:19" pos:end="75:21"><name pos:start="75:19" pos:end="75:21">env</name></expr></argument>, <argument pos:start="75:24" pos:end="75:30"><expr pos:start="75:24" pos:end="75:30"><name pos:start="75:24" pos:end="75:30">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="75:33" pos:end="75:34">==</operator> <literal type="number" pos:start="75:36" pos:end="75:36">1</literal></expr>)</condition> <block pos:start="75:39" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:33">

        <expr_stmt pos:start="77:9" pos:end="77:33"><expr pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:12">dacr</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <name pos:start="77:16" pos:end="77:32"><name pos:start="77:16" pos:end="77:18">env</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:24">cp15</name><operator pos:start="77:25" pos:end="77:25">.</operator><name pos:start="77:26" pos:end="77:32">dacr_ns</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="83:5">else <block pos:start="79:12" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:32">

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:12">dacr</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <name pos:start="81:16" pos:end="81:31"><name pos:start="81:16" pos:end="81:18">env</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:24">cp15</name><operator pos:start="81:25" pos:end="81:25">.</operator><name pos:start="81:26" pos:end="81:31">dacr_s</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:45"><expr pos:start="85:5" pos:end="85:44"><name pos:start="85:5" pos:end="85:15">domain_prot</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">(</operator><name pos:start="85:20" pos:end="85:23">dacr</name> <operator pos:start="85:25" pos:end="85:26">&gt;&gt;</operator> <operator pos:start="85:28" pos:end="85:28">(</operator><name pos:start="85:29" pos:end="85:34">domain</name> <operator pos:start="85:36" pos:end="85:36">*</operator> <literal type="number" pos:start="85:38" pos:end="85:38">2</literal><operator pos:start="85:39" pos:end="85:39">)</operator><operator pos:start="85:40" pos:end="85:40">)</operator> <operator pos:start="85:42" pos:end="85:42">&amp;</operator> <literal type="number" pos:start="85:44" pos:end="85:44">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="101:5"><if pos:start="87:5" pos:end="101:5">if <condition pos:start="87:8" pos:end="87:45">(<expr pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:19">domain_prot</name> <operator pos:start="87:21" pos:end="87:22">==</operator> <literal type="number" pos:start="87:24" pos:end="87:24">0</literal> <operator pos:start="87:26" pos:end="87:27">||</operator> <name pos:start="87:29" pos:end="87:39">domain_prot</name> <operator pos:start="87:41" pos:end="87:42">==</operator> <literal type="number" pos:start="87:44" pos:end="87:44">2</literal></expr>)</condition> <block pos:start="87:47" pos:end="101:5">{<block_content pos:start="89:9" pos:end="99:22">

        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:22">(<expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:16">type</name> <operator pos:start="89:18" pos:end="89:19">!=</operator> <literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>)</condition> <block pos:start="89:24" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:21">

            <expr_stmt pos:start="91:13" pos:end="91:21"><expr pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:16">code</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <literal type="number" pos:start="91:20" pos:end="91:20">9</literal></expr>;</expr_stmt> <comment type="block" pos:start="91:23" pos:end="91:50">/* Section domain fault.  */</comment>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="97:9">else <block pos:start="93:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:22">

            <expr_stmt pos:start="95:13" pos:end="95:22"><expr pos:start="95:13" pos:end="95:21"><name pos:start="95:13" pos:end="95:16">code</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <literal type="number" pos:start="95:20" pos:end="95:21">11</literal></expr>;</expr_stmt> <comment type="block" pos:start="95:24" pos:end="95:48">/* Page domain fault.  */</comment>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="99:9" pos:end="99:22">goto <name pos:start="99:14" pos:end="99:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="185:5"><if pos:start="103:5" pos:end="131:5">if <condition pos:start="103:8" pos:end="103:18">(<expr pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:12">type</name> <operator pos:start="103:14" pos:end="103:15">!=</operator> <literal type="number" pos:start="103:17" pos:end="103:17">1</literal></expr>)</condition> <block pos:start="103:20" pos:end="131:5">{<block_content pos:start="105:9" pos:end="129:18">

        <if_stmt pos:start="105:9" pos:end="121:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="105:29">(<expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:16">desc</name> <operator pos:start="105:18" pos:end="105:18">&amp;</operator> <operator pos:start="105:20" pos:end="105:20">(</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal> <operator pos:start="105:23" pos:end="105:24">&lt;&lt;</operator> <literal type="number" pos:start="105:26" pos:end="105:27">18</literal><operator pos:start="105:28" pos:end="105:28">)</operator></expr>)</condition> <block pos:start="105:31" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:35">

            <comment type="block" pos:start="107:13" pos:end="107:32">/* Supersection.  */</comment>

            <expr_stmt pos:start="109:13" pos:end="109:69"><expr pos:start="109:13" pos:end="109:68"><name pos:start="109:13" pos:end="109:21">phys_addr</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <operator pos:start="109:25" pos:end="109:25">(</operator><name pos:start="109:26" pos:end="109:29">desc</name> <operator pos:start="109:31" pos:end="109:31">&amp;</operator> <literal type="number" pos:start="109:33" pos:end="109:42">0xff000000</literal><operator pos:start="109:43" pos:end="109:43">)</operator> <operator pos:start="109:45" pos:end="109:45">|</operator> <operator pos:start="109:47" pos:end="109:47">(</operator><name pos:start="109:48" pos:end="109:54">address</name> <operator pos:start="109:56" pos:end="109:56">&amp;</operator> <literal type="number" pos:start="109:58" pos:end="109:67">0x00ffffff</literal><operator pos:start="109:68" pos:end="109:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:22">page_size</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <literal type="number" pos:start="111:26" pos:end="111:34">0x1000000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="113:11" pos:end="121:9">else <block pos:start="113:16" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:34">

            <comment type="block" pos:start="115:13" pos:end="115:27">/* Section.  */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:69"><expr pos:start="117:13" pos:end="117:68"><name pos:start="117:13" pos:end="117:21">phys_addr</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <operator pos:start="117:25" pos:end="117:25">(</operator><name pos:start="117:26" pos:end="117:29">desc</name> <operator pos:start="117:31" pos:end="117:31">&amp;</operator> <literal type="number" pos:start="117:33" pos:end="117:42">0xfff00000</literal><operator pos:start="117:43" pos:end="117:43">)</operator> <operator pos:start="117:45" pos:end="117:45">|</operator> <operator pos:start="117:47" pos:end="117:47">(</operator><name pos:start="117:48" pos:end="117:54">address</name> <operator pos:start="117:56" pos:end="117:56">&amp;</operator> <literal type="number" pos:start="117:58" pos:end="117:67">0x000fffff</literal><operator pos:start="117:68" pos:end="117:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:34"><expr pos:start="119:13" pos:end="119:33"><operator pos:start="119:13" pos:end="119:13">*</operator><name pos:start="119:14" pos:end="119:22">page_size</name> <operator pos:start="119:24" pos:end="119:24">=</operator> <literal type="number" pos:start="119:26" pos:end="119:33">0x100000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:53"><expr pos:start="123:9" pos:end="123:52"><name pos:start="123:9" pos:end="123:10">ap</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <operator pos:start="123:14" pos:end="123:14">(</operator><operator pos:start="123:15" pos:end="123:15">(</operator><name pos:start="123:16" pos:end="123:19">desc</name> <operator pos:start="123:21" pos:end="123:22">&gt;&gt;</operator> <literal type="number" pos:start="123:24" pos:end="123:25">10</literal><operator pos:start="123:26" pos:end="123:26">)</operator> <operator pos:start="123:28" pos:end="123:28">&amp;</operator> <literal type="number" pos:start="123:30" pos:end="123:30">3</literal><operator pos:start="123:31" pos:end="123:31">)</operator> <operator pos:start="123:33" pos:end="123:33">|</operator> <operator pos:start="123:35" pos:end="123:35">(</operator><operator pos:start="123:36" pos:end="123:36">(</operator><name pos:start="123:37" pos:end="123:40">desc</name> <operator pos:start="123:42" pos:end="123:43">&gt;&gt;</operator> <literal type="number" pos:start="123:45" pos:end="123:46">13</literal><operator pos:start="123:47" pos:end="123:47">)</operator> <operator pos:start="123:49" pos:end="123:49">&amp;</operator> <literal type="number" pos:start="123:51" pos:end="123:51">4</literal><operator pos:start="123:52" pos:end="123:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:29"><expr pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:10">xn</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <name pos:start="125:14" pos:end="125:17">desc</name> <operator pos:start="125:19" pos:end="125:19">&amp;</operator> <operator pos:start="125:21" pos:end="125:21">(</operator><literal type="number" pos:start="125:22" pos:end="125:22">1</literal> <operator pos:start="125:24" pos:end="125:25">&lt;&lt;</operator> <literal type="number" pos:start="125:27" pos:end="125:27">4</literal><operator pos:start="125:28" pos:end="125:28">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:11">pxn</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <name pos:start="127:15" pos:end="127:18">desc</name> <operator pos:start="127:20" pos:end="127:20">&amp;</operator> <literal type="number" pos:start="127:22" pos:end="127:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:18"><expr pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:12">code</name> <operator pos:start="129:14" pos:end="129:14">=</operator> <literal type="number" pos:start="129:16" pos:end="129:17">13</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="185:5">else <block pos:start="131:12" pos:end="185:5">{<block_content pos:start="133:9" pos:end="183:18">

        <if_stmt pos:start="133:9" pos:end="137:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:46">(<expr pos:start="133:13" pos:end="133:45"><call pos:start="133:13" pos:end="133:45"><name pos:start="133:13" pos:end="133:23">arm_feature</name><argument_list pos:start="133:24" pos:end="133:45">(<argument pos:start="133:25" pos:end="133:27"><expr pos:start="133:25" pos:end="133:27"><name pos:start="133:25" pos:end="133:27">env</name></expr></argument>, <argument pos:start="133:30" pos:end="133:44"><expr pos:start="133:30" pos:end="133:44"><name pos:start="133:30" pos:end="133:44">ARM_FEATURE_PXN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:48" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:34">

            <expr_stmt pos:start="135:13" pos:end="135:34"><expr pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:15">pxn</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <operator pos:start="135:19" pos:end="135:19">(</operator><name pos:start="135:20" pos:end="135:23">desc</name> <operator pos:start="135:25" pos:end="135:26">&gt;&gt;</operator> <literal type="number" pos:start="135:28" pos:end="135:28">2</literal><operator pos:start="135:29" pos:end="135:29">)</operator> <operator pos:start="135:31" pos:end="135:31">&amp;</operator> <literal type="number" pos:start="135:33" pos:end="135:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="139:9" pos:end="139:31">/* Lookup l2 entry.  */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:64"><expr pos:start="141:9" pos:end="141:63"><name pos:start="141:9" pos:end="141:13">table</name> <operator pos:start="141:15" pos:end="141:15">=</operator> <operator pos:start="141:17" pos:end="141:17">(</operator><name pos:start="141:18" pos:end="141:21">desc</name> <operator pos:start="141:23" pos:end="141:23">&amp;</operator> <literal type="number" pos:start="141:25" pos:end="141:34">0xfffffc00</literal><operator pos:start="141:35" pos:end="141:35">)</operator> <operator pos:start="141:37" pos:end="141:37">|</operator> <operator pos:start="141:39" pos:end="141:39">(</operator><operator pos:start="141:40" pos:end="141:40">(</operator><name pos:start="141:41" pos:end="141:47">address</name> <operator pos:start="141:49" pos:end="141:50">&gt;&gt;</operator> <literal type="number" pos:start="141:52" pos:end="141:53">10</literal><operator pos:start="141:54" pos:end="141:54">)</operator> <operator pos:start="141:56" pos:end="141:56">&amp;</operator> <literal type="number" pos:start="141:58" pos:end="141:62">0x3fc</literal><operator pos:start="141:63" pos:end="141:63">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:12">desc</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <call pos:start="143:16" pos:end="143:38"><name pos:start="143:16" pos:end="143:23">ldl_phys</name><argument_list pos:start="143:24" pos:end="143:38">(<argument pos:start="143:25" pos:end="143:30"><expr pos:start="143:25" pos:end="143:30"><name pos:start="143:25" pos:end="143:30"><name pos:start="143:25" pos:end="143:26">cs</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:30">as</name></name></expr></argument>, <argument pos:start="143:33" pos:end="143:37"><expr pos:start="143:33" pos:end="143:37"><name pos:start="143:33" pos:end="143:37">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:51"><expr pos:start="145:9" pos:end="145:50"><name pos:start="145:9" pos:end="145:10">ap</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <operator pos:start="145:14" pos:end="145:14">(</operator><operator pos:start="145:15" pos:end="145:15">(</operator><name pos:start="145:16" pos:end="145:19">desc</name> <operator pos:start="145:21" pos:end="145:22">&gt;&gt;</operator> <literal type="number" pos:start="145:24" pos:end="145:24">4</literal><operator pos:start="145:25" pos:end="145:25">)</operator> <operator pos:start="145:27" pos:end="145:27">&amp;</operator> <literal type="number" pos:start="145:29" pos:end="145:29">3</literal><operator pos:start="145:30" pos:end="145:30">)</operator> <operator pos:start="145:32" pos:end="145:32">|</operator> <operator pos:start="145:34" pos:end="145:34">(</operator><operator pos:start="145:35" pos:end="145:35">(</operator><name pos:start="145:36" pos:end="145:39">desc</name> <operator pos:start="145:41" pos:end="145:42">&gt;&gt;</operator> <literal type="number" pos:start="145:44" pos:end="145:44">7</literal><operator pos:start="145:45" pos:end="145:45">)</operator> <operator pos:start="145:47" pos:end="145:47">&amp;</operator> <literal type="number" pos:start="145:49" pos:end="145:49">4</literal><operator pos:start="145:50" pos:end="145:50">)</operator></expr>;</expr_stmt>

        <switch pos:start="147:9" pos:end="181:9">switch <condition pos:start="147:16" pos:end="147:25">(<expr pos:start="147:17" pos:end="147:24"><name pos:start="147:17" pos:end="147:20">desc</name> <operator pos:start="147:22" pos:end="147:22">&amp;</operator> <literal type="number" pos:start="147:24" pos:end="147:24">3</literal></expr>)</condition> <block pos:start="147:27" pos:end="181:9">{<block_content pos:start="149:9" pos:end="179:20">

        <case pos:start="149:9" pos:end="149:15">case <expr pos:start="149:14" pos:end="149:14"><literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>:</case> <comment type="block" pos:start="149:17" pos:end="149:46">/* Page translation fault.  */</comment>

            <expr_stmt pos:start="151:13" pos:end="151:21"><expr pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:16">code</name> <operator pos:start="151:18" pos:end="151:18">=</operator> <literal type="number" pos:start="151:20" pos:end="151:20">7</literal></expr>;</expr_stmt>

            <goto pos:start="153:13" pos:end="153:26">goto <name pos:start="153:18" pos:end="153:25">do_fault</name>;</goto>

        <case pos:start="155:9" pos:end="155:15">case <expr pos:start="155:14" pos:end="155:14"><literal type="number" pos:start="155:14" pos:end="155:14">1</literal></expr>:</case> <comment type="block" pos:start="155:17" pos:end="155:32">/* 64k page.  */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:65"><expr pos:start="157:13" pos:end="157:64"><name pos:start="157:13" pos:end="157:21">phys_addr</name> <operator pos:start="157:23" pos:end="157:23">=</operator> <operator pos:start="157:25" pos:end="157:25">(</operator><name pos:start="157:26" pos:end="157:29">desc</name> <operator pos:start="157:31" pos:end="157:31">&amp;</operator> <literal type="number" pos:start="157:33" pos:end="157:42">0xffff0000</literal><operator pos:start="157:43" pos:end="157:43">)</operator> <operator pos:start="157:45" pos:end="157:45">|</operator> <operator pos:start="157:47" pos:end="157:47">(</operator><name pos:start="157:48" pos:end="157:54">address</name> <operator pos:start="157:56" pos:end="157:56">&amp;</operator> <literal type="number" pos:start="157:58" pos:end="157:63">0xffff</literal><operator pos:start="157:64" pos:end="157:64">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:34"><expr pos:start="159:13" pos:end="159:33"><name pos:start="159:13" pos:end="159:14">xn</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <name pos:start="159:18" pos:end="159:21">desc</name> <operator pos:start="159:23" pos:end="159:23">&amp;</operator> <operator pos:start="159:25" pos:end="159:25">(</operator><literal type="number" pos:start="159:26" pos:end="159:26">1</literal> <operator pos:start="159:28" pos:end="159:29">&lt;&lt;</operator> <literal type="number" pos:start="159:31" pos:end="159:32">15</literal><operator pos:start="159:33" pos:end="159:33">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:33"><expr pos:start="161:13" pos:end="161:32"><operator pos:start="161:13" pos:end="161:13">*</operator><name pos:start="161:14" pos:end="161:22">page_size</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:32">0x10000</literal></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:15">case <expr pos:start="165:14" pos:end="165:14"><literal type="number" pos:start="165:14" pos:end="165:14">2</literal></expr>:</case> <case pos:start="165:17" pos:end="165:23">case <expr pos:start="165:22" pos:end="165:22"><literal type="number" pos:start="165:22" pos:end="165:22">3</literal></expr>:</case> <comment type="block" pos:start="165:25" pos:end="165:39">/* 4k page.  */</comment>

            <expr_stmt pos:start="167:13" pos:end="167:64"><expr pos:start="167:13" pos:end="167:63"><name pos:start="167:13" pos:end="167:21">phys_addr</name> <operator pos:start="167:23" pos:end="167:23">=</operator> <operator pos:start="167:25" pos:end="167:25">(</operator><name pos:start="167:26" pos:end="167:29">desc</name> <operator pos:start="167:31" pos:end="167:31">&amp;</operator> <literal type="number" pos:start="167:33" pos:end="167:42">0xfffff000</literal><operator pos:start="167:43" pos:end="167:43">)</operator> <operator pos:start="167:45" pos:end="167:45">|</operator> <operator pos:start="167:47" pos:end="167:47">(</operator><name pos:start="167:48" pos:end="167:54">address</name> <operator pos:start="167:56" pos:end="167:56">&amp;</operator> <literal type="number" pos:start="167:58" pos:end="167:62">0xfff</literal><operator pos:start="167:63" pos:end="167:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:26"><expr pos:start="169:13" pos:end="169:25"><name pos:start="169:13" pos:end="169:14">xn</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <name pos:start="169:18" pos:end="169:21">desc</name> <operator pos:start="169:23" pos:end="169:23">&amp;</operator> <literal type="number" pos:start="169:25" pos:end="169:25">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:32"><expr pos:start="171:13" pos:end="171:31"><operator pos:start="171:13" pos:end="171:13">*</operator><name pos:start="171:14" pos:end="171:22">page_size</name> <operator pos:start="171:24" pos:end="171:24">=</operator> <literal type="number" pos:start="171:26" pos:end="171:31">0x1000</literal></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <default pos:start="175:9" pos:end="175:16">default:</default>

            <comment type="block" pos:start="177:13" pos:end="177:74">/* Never happens, but compiler isn't smart enough to tell.  */</comment>

            <expr_stmt pos:start="179:13" pos:end="179:20"><expr pos:start="179:13" pos:end="179:19"><call pos:start="179:13" pos:end="179:19"><name pos:start="179:13" pos:end="179:17">abort</name><argument_list pos:start="179:18" pos:end="179:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="183:9" pos:end="183:18"><expr pos:start="183:9" pos:end="183:17"><name pos:start="183:9" pos:end="183:12">code</name> <operator pos:start="183:14" pos:end="183:14">=</operator> <literal type="number" pos:start="183:16" pos:end="183:17">15</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="187:5" pos:end="235:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:25">(<expr pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:19">domain_prot</name> <operator pos:start="187:21" pos:end="187:22">==</operator> <literal type="number" pos:start="187:24" pos:end="187:24">3</literal></expr>)</condition> <block pos:start="187:27" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:51">

        <expr_stmt pos:start="189:9" pos:end="189:51"><expr pos:start="189:9" pos:end="189:50"><operator pos:start="189:9" pos:end="189:9">*</operator><name pos:start="189:10" pos:end="189:13">prot</name> <operator pos:start="189:15" pos:end="189:15">=</operator> <name pos:start="189:17" pos:end="189:25">PAGE_READ</name> <operator pos:start="189:27" pos:end="189:27">|</operator> <name pos:start="189:29" pos:end="189:38">PAGE_WRITE</name> <operator pos:start="189:40" pos:end="189:40">|</operator> <name pos:start="189:42" pos:end="189:50">PAGE_EXEC</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="191:7" pos:end="235:5">else <block pos:start="191:12" pos:end="235:5">{<block_content pos:start="193:9" pos:end="233:9">

        <if_stmt pos:start="193:9" pos:end="197:9"><if pos:start="193:9" pos:end="197:9">if <condition pos:start="193:12" pos:end="193:49">(<expr pos:start="193:13" pos:end="193:48"><name pos:start="193:13" pos:end="193:15">pxn</name> <operator pos:start="193:17" pos:end="193:18">&amp;&amp;</operator> <operator pos:start="193:20" pos:end="193:20">!</operator><call pos:start="193:21" pos:end="193:48"><name pos:start="193:21" pos:end="193:34">regime_is_user</name><argument_list pos:start="193:35" pos:end="193:48">(<argument pos:start="193:36" pos:end="193:38"><expr pos:start="193:36" pos:end="193:38"><name pos:start="193:36" pos:end="193:38">env</name></expr></argument>, <argument pos:start="193:41" pos:end="193:47"><expr pos:start="193:41" pos:end="193:47"><name pos:start="193:41" pos:end="193:47">mmu_idx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="193:51" pos:end="197:9">{<block_content pos:start="195:13" pos:end="195:19">

            <expr_stmt pos:start="195:13" pos:end="195:19"><expr pos:start="195:13" pos:end="195:18"><name pos:start="195:13" pos:end="195:14">xn</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <literal type="number" pos:start="195:18" pos:end="195:18">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="201:26"><if pos:start="199:9" pos:end="201:26">if <condition pos:start="199:12" pos:end="199:35">(<expr pos:start="199:13" pos:end="199:34"><name pos:start="199:13" pos:end="199:14">xn</name> <operator pos:start="199:16" pos:end="199:17">&amp;&amp;</operator> <name pos:start="199:19" pos:end="199:29">access_type</name> <operator pos:start="199:31" pos:end="199:32">==</operator> <literal type="number" pos:start="199:34" pos:end="199:34">2</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:26"><block_content pos:start="201:13" pos:end="201:26">

            <goto pos:start="201:13" pos:end="201:26">goto <name pos:start="201:18" pos:end="201:25">do_fault</name>;</goto></block_content></block></if></if_stmt>



        <comment type="block" pos:start="205:9" pos:end="205:72">/* The simplified model uses AP[0] as an access control bit.  */</comment>

        <if_stmt pos:start="207:9" pos:end="217:9"><if pos:start="207:9" pos:end="217:9">if <condition pos:start="207:12" pos:end="209:33">(<expr pos:start="207:13" pos:end="209:32"><operator pos:start="207:13" pos:end="207:13">(</operator><call pos:start="207:14" pos:end="207:39"><name pos:start="207:14" pos:end="207:25">regime_sctlr</name><argument_list pos:start="207:26" pos:end="207:39">(<argument pos:start="207:27" pos:end="207:29"><expr pos:start="207:27" pos:end="207:29"><name pos:start="207:27" pos:end="207:29">env</name></expr></argument>, <argument pos:start="207:32" pos:end="207:38"><expr pos:start="207:32" pos:end="207:38"><name pos:start="207:32" pos:end="207:38">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="207:41" pos:end="207:41">&amp;</operator> <name pos:start="207:43" pos:end="207:51">SCTLR_AFE</name><operator pos:start="207:52" pos:end="207:52">)</operator>

                <operator pos:start="209:17" pos:end="209:18">&amp;&amp;</operator> <operator pos:start="209:20" pos:end="209:20">(</operator><name pos:start="209:21" pos:end="209:22">ap</name> <operator pos:start="209:24" pos:end="209:24">&amp;</operator> <literal type="number" pos:start="209:26" pos:end="209:26">1</literal><operator pos:start="209:27" pos:end="209:27">)</operator> <operator pos:start="209:29" pos:end="209:30">==</operator> <literal type="number" pos:start="209:32" pos:end="209:32">0</literal></expr>)</condition> <block pos:start="209:35" pos:end="217:9">{<block_content pos:start="213:13" pos:end="215:26">

            <comment type="block" pos:start="211:13" pos:end="211:37">/* Access flag fault.  */</comment>

            <expr_stmt pos:start="213:13" pos:end="213:40"><expr pos:start="213:13" pos:end="213:39"><name pos:start="213:13" pos:end="213:16">code</name> <operator pos:start="213:18" pos:end="213:18">=</operator> <ternary pos:start="213:20" pos:end="213:39"><condition pos:start="213:20" pos:end="213:33"><expr pos:start="213:20" pos:end="213:31"><operator pos:start="213:20" pos:end="213:20">(</operator><name pos:start="213:21" pos:end="213:24">code</name> <operator pos:start="213:26" pos:end="213:27">==</operator> <literal type="number" pos:start="213:29" pos:end="213:30">15</literal><operator pos:start="213:31" pos:end="213:31">)</operator></expr> ?</condition><then pos:start="213:35" pos:end="213:35"> <expr pos:start="213:35" pos:end="213:35"><literal type="number" pos:start="213:35" pos:end="213:35">6</literal></expr> </then><else pos:start="213:37" pos:end="213:39">: <expr pos:start="213:39" pos:end="213:39"><literal type="number" pos:start="213:39" pos:end="213:39">3</literal></expr></else></ternary></expr>;</expr_stmt>

            <goto pos:start="215:13" pos:end="215:26">goto <name pos:start="215:18" pos:end="215:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:69"><expr pos:start="219:9" pos:end="219:68"><operator pos:start="219:9" pos:end="219:9">*</operator><name pos:start="219:10" pos:end="219:13">prot</name> <operator pos:start="219:15" pos:end="219:15">=</operator> <call pos:start="219:17" pos:end="219:68"><name pos:start="219:17" pos:end="219:24">check_ap</name><argument_list pos:start="219:25" pos:end="219:68">(<argument pos:start="219:26" pos:end="219:28"><expr pos:start="219:26" pos:end="219:28"><name pos:start="219:26" pos:end="219:28">env</name></expr></argument>, <argument pos:start="219:31" pos:end="219:37"><expr pos:start="219:31" pos:end="219:37"><name pos:start="219:31" pos:end="219:37">mmu_idx</name></expr></argument>, <argument pos:start="219:40" pos:end="219:41"><expr pos:start="219:40" pos:end="219:41"><name pos:start="219:40" pos:end="219:41">ap</name></expr></argument>, <argument pos:start="219:44" pos:end="219:54"><expr pos:start="219:44" pos:end="219:54"><name pos:start="219:44" pos:end="219:54">domain_prot</name></expr></argument>, <argument pos:start="219:57" pos:end="219:67"><expr pos:start="219:57" pos:end="219:67"><name pos:start="219:57" pos:end="219:67">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="227:9"><if pos:start="221:9" pos:end="227:9">if <condition pos:start="221:12" pos:end="221:19">(<expr pos:start="221:13" pos:end="221:18"><operator pos:start="221:13" pos:end="221:13">!</operator><operator pos:start="221:14" pos:end="221:14">*</operator><name pos:start="221:15" pos:end="221:18">prot</name></expr>)</condition> <block pos:start="221:21" pos:end="227:9">{<block_content pos:start="225:13" pos:end="225:26">

            <comment type="block" pos:start="223:13" pos:end="223:43">/* Access permission fault.  */</comment>

            <goto pos:start="225:13" pos:end="225:26">goto <name pos:start="225:18" pos:end="225:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="229:9" pos:end="233:9"><if pos:start="229:9" pos:end="233:9">if <condition pos:start="229:12" pos:end="229:16">(<expr pos:start="229:13" pos:end="229:15"><operator pos:start="229:13" pos:end="229:13">!</operator><name pos:start="229:14" pos:end="229:15">xn</name></expr>)</condition> <block pos:start="229:18" pos:end="233:9">{<block_content pos:start="231:13" pos:end="231:31">

            <expr_stmt pos:start="231:13" pos:end="231:31"><expr pos:start="231:13" pos:end="231:30"><operator pos:start="231:13" pos:end="231:13">*</operator><name pos:start="231:14" pos:end="231:17">prot</name> <operator pos:start="231:19" pos:end="231:20">|=</operator> <name pos:start="231:22" pos:end="231:30">PAGE_EXEC</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:26"><expr pos:start="237:5" pos:end="237:25"><operator pos:start="237:5" pos:end="237:5">*</operator><name pos:start="237:6" pos:end="237:13">phys_ptr</name> <operator pos:start="237:15" pos:end="237:15">=</operator> <name pos:start="237:17" pos:end="237:25">phys_addr</name></expr>;</expr_stmt>

    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>

<label pos:start="241:1" pos:end="241:9"><name pos:start="241:1" pos:end="241:8">do_fault</name>:</label>

    <return pos:start="243:5" pos:end="243:32">return <expr pos:start="243:12" pos:end="243:31"><name pos:start="243:12" pos:end="243:15">code</name> <operator pos:start="243:17" pos:end="243:17">|</operator> <operator pos:start="243:19" pos:end="243:19">(</operator><name pos:start="243:20" pos:end="243:25">domain</name> <operator pos:start="243:27" pos:end="243:28">&lt;&lt;</operator> <literal type="number" pos:start="243:30" pos:end="243:30">4</literal><operator pos:start="243:31" pos:end="243:31">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
