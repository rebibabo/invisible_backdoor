<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21751.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">hmp_pci_add</name><parameter_list pos:start="1:17" pos:end="1:50">(<parameter pos:start="1:18" pos:end="1:29"><decl pos:start="1:18" pos:end="1:29"><type pos:start="1:18" pos:end="1:29"><name pos:start="1:18" pos:end="1:24">Monitor</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">mon</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:42">QDict</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:56">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dev</name> <init pos:start="5:20" pos:end="5:25">= <expr pos:start="5:22" pos:end="5:25"><name pos:start="5:22" pos:end="5:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">pci_addr</name> <init pos:start="7:26" pos:end="7:59">= <expr pos:start="7:28" pos:end="7:59"><call pos:start="7:28" pos:end="7:59"><name pos:start="7:28" pos:end="7:40">qdict_get_str</name><argument_list pos:start="7:41" pos:end="7:59">(<argument pos:start="7:42" pos:end="7:46"><expr pos:start="7:42" pos:end="7:46"><name pos:start="7:42" pos:end="7:46">qdict</name></expr></argument>, <argument pos:start="7:49" pos:end="7:58"><expr pos:start="7:49" pos:end="7:58"><literal type="string" pos:start="7:49" pos:end="7:58">"pci_addr"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">type</name> <init pos:start="9:22" pos:end="9:51">= <expr pos:start="9:24" pos:end="9:51"><call pos:start="9:24" pos:end="9:51"><name pos:start="9:24" pos:end="9:36">qdict_get_str</name><argument_list pos:start="9:37" pos:end="9:51">(<argument pos:start="9:38" pos:end="9:42"><expr pos:start="9:38" pos:end="9:42"><name pos:start="9:38" pos:end="9:42">qdict</name></expr></argument>, <argument pos:start="9:45" pos:end="9:50"><expr pos:start="9:45" pos:end="9:50"><literal type="string" pos:start="9:45" pos:end="9:50">"type"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">opts</name> <init pos:start="11:22" pos:end="11:55">= <expr pos:start="11:24" pos:end="11:55"><call pos:start="11:24" pos:end="11:55"><name pos:start="11:24" pos:end="11:40">qdict_get_try_str</name><argument_list pos:start="11:41" pos:end="11:55">(<argument pos:start="11:42" pos:end="11:46"><expr pos:start="11:42" pos:end="11:46"><name pos:start="11:42" pos:end="11:46">qdict</name></expr></argument>, <argument pos:start="11:49" pos:end="11:54"><expr pos:start="11:49" pos:end="11:54"><literal type="string" pos:start="11:49" pos:end="11:54">"opts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:26">/* strip legacy tag */</comment>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:43">(<expr pos:start="17:9" pos:end="17:42"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:42"><name pos:start="17:10" pos:end="17:16">strncmp</name><argument_list pos:start="17:17" pos:end="17:42">(<argument pos:start="17:18" pos:end="17:25"><expr pos:start="17:18" pos:end="17:25"><name pos:start="17:18" pos:end="17:25">pci_addr</name></expr></argument>, <argument pos:start="17:28" pos:end="17:38"><expr pos:start="17:28" pos:end="17:38"><literal type="string" pos:start="17:28" pos:end="17:38">"pci_addr="</literal></expr></argument>, <argument pos:start="17:41" pos:end="17:41"><expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">9</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:45" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:22">

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:16">pci_addr</name> <operator pos:start="19:18" pos:end="19:19">+=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:13">opts</name></expr>)</condition> <block pos:start="25:16" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">opts</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="string" pos:start="27:16" pos:end="27:17">""</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:24"><if pos:start="33:5" pos:end="35:24">if <condition pos:start="33:8" pos:end="33:34">(<expr pos:start="33:9" pos:end="33:33"><operator pos:start="33:9" pos:end="33:9">!</operator><call pos:start="33:10" pos:end="33:33"><name pos:start="33:10" pos:end="33:15">strcmp</name><argument_list pos:start="33:16" pos:end="33:33">(<argument pos:start="33:17" pos:end="33:24"><expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:24">pci_addr</name></expr></argument>, <argument pos:start="33:27" pos:end="33:32"><expr pos:start="33:27" pos:end="33:32"><literal type="string" pos:start="33:27" pos:end="33:32">"auto"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:24"><block_content pos:start="35:9" pos:end="35:24">

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:16">pci_addr</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:23">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:33">(<expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:14">strcmp</name><argument_list pos:start="39:15" pos:end="39:27">(<argument pos:start="39:16" pos:end="39:19"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">type</name></expr></argument>, <argument pos:start="39:22" pos:end="39:26"><expr pos:start="39:22" pos:end="39:26"><literal type="string" pos:start="39:22" pos:end="39:26">"nic"</literal></expr></argument>)</argument_list></call> <operator pos:start="39:29" pos:end="39:30">==</operator> <literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>)</condition> <block pos:start="39:35" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:56">

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:11">dev</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:55"><name pos:start="41:15" pos:end="41:34">qemu_pci_hot_add_nic</name><argument_list pos:start="41:35" pos:end="41:55">(<argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">mon</name></expr></argument>, <argument pos:start="41:41" pos:end="41:48"><expr pos:start="41:41" pos:end="41:48"><name pos:start="41:41" pos:end="41:48">pci_addr</name></expr></argument>, <argument pos:start="41:51" pos:end="41:54"><expr pos:start="41:51" pos:end="41:54"><name pos:start="41:51" pos:end="41:54">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="47:5">else if <condition pos:start="43:15" pos:end="43:44">(<expr pos:start="43:16" pos:end="43:43"><call pos:start="43:16" pos:end="43:38"><name pos:start="43:16" pos:end="43:21">strcmp</name><argument_list pos:start="43:22" pos:end="43:38">(<argument pos:start="43:23" pos:end="43:26"><expr pos:start="43:23" pos:end="43:26"><name pos:start="43:23" pos:end="43:26">type</name></expr></argument>, <argument pos:start="43:29" pos:end="43:37"><expr pos:start="43:29" pos:end="43:37"><literal type="string" pos:start="43:29" pos:end="43:37">"storage"</literal></expr></argument>)</argument_list></call> <operator pos:start="43:40" pos:end="43:41">==</operator> <literal type="number" pos:start="43:43" pos:end="43:43">0</literal></expr>)</condition> <block pos:start="43:46" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:60">

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:11">dev</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:59"><name pos:start="45:15" pos:end="45:38">qemu_pci_hot_add_storage</name><argument_list pos:start="45:39" pos:end="45:59">(<argument pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:42">mon</name></expr></argument>, <argument pos:start="45:45" pos:end="45:52"><expr pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:52">pci_addr</name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><name pos:start="45:55" pos:end="45:58">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:56">

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><call pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:22">monitor_printf</name><argument_list pos:start="49:23" pos:end="49:55">(<argument pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">mon</name></expr></argument>, <argument pos:start="49:29" pos:end="49:48"><expr pos:start="49:29" pos:end="49:48"><literal type="string" pos:start="49:29" pos:end="49:48">"invalid type: %s\n"</literal></expr></argument>, <argument pos:start="49:51" pos:end="49:54"><expr pos:start="49:51" pos:end="49:54"><name pos:start="49:51" pos:end="49:54">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="67:56"><if pos:start="55:5" pos:end="65:5">if <condition pos:start="55:8" pos:end="55:12">(<expr pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">dev</name></expr>)</condition> <block pos:start="55:14" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:45">

        <expr_stmt pos:start="57:9" pos:end="63:45"><expr pos:start="57:9" pos:end="63:44"><call pos:start="57:9" pos:end="63:44"><name pos:start="57:9" pos:end="57:22">monitor_printf</name><argument_list pos:start="57:23" pos:end="63:44">(<argument pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">mon</name></expr></argument>, <argument pos:start="57:29" pos:end="57:76"><expr pos:start="57:29" pos:end="57:76"><literal type="string" pos:start="57:29" pos:end="57:76">"OK root bus %s, bus %d, slot %d, function %d\n"</literal></expr></argument>,

                       <argument pos:start="59:24" pos:end="59:45"><expr pos:start="59:24" pos:end="59:45"><call pos:start="59:24" pos:end="59:45"><name pos:start="59:24" pos:end="59:40">pci_root_bus_path</name><argument_list pos:start="59:41" pos:end="59:45">(<argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="61:24" pos:end="61:44"><expr pos:start="61:24" pos:end="61:44"><call pos:start="61:24" pos:end="61:44"><name pos:start="61:24" pos:end="61:34">pci_bus_num</name><argument_list pos:start="61:35" pos:end="61:44">(<argument pos:start="61:36" pos:end="61:43"><expr pos:start="61:36" pos:end="61:43"><name pos:start="61:36" pos:end="61:43"><name pos:start="61:36" pos:end="61:38">dev</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:43">bus</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:47" pos:end="61:66"><expr pos:start="61:47" pos:end="61:66"><call pos:start="61:47" pos:end="61:66"><name pos:start="61:47" pos:end="61:54">PCI_SLOT</name><argument_list pos:start="61:55" pos:end="61:66">(<argument pos:start="61:56" pos:end="61:65"><expr pos:start="61:56" pos:end="61:65"><name pos:start="61:56" pos:end="61:65"><name pos:start="61:56" pos:end="61:58">dev</name><operator pos:start="61:59" pos:end="61:60">-&gt;</operator><name pos:start="61:61" pos:end="61:65">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="63:24" pos:end="63:43"><expr pos:start="63:24" pos:end="63:43"><call pos:start="63:24" pos:end="63:43"><name pos:start="63:24" pos:end="63:31">PCI_FUNC</name><argument_list pos:start="63:32" pos:end="63:43">(<argument pos:start="63:33" pos:end="63:42"><expr pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:35">dev</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:42">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="67:56">else<block type="pseudo" pos:start="67:9" pos:end="67:56"><block_content pos:start="67:9" pos:end="67:56">

        <expr_stmt pos:start="67:9" pos:end="67:56"><expr pos:start="67:9" pos:end="67:55"><call pos:start="67:9" pos:end="67:55"><name pos:start="67:9" pos:end="67:22">monitor_printf</name><argument_list pos:start="67:23" pos:end="67:55">(<argument pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">mon</name></expr></argument>, <argument pos:start="67:29" pos:end="67:48"><expr pos:start="67:29" pos:end="67:48"><literal type="string" pos:start="67:29" pos:end="67:48">"failed to add %s\n"</literal></expr></argument>, <argument pos:start="67:51" pos:end="67:54"><expr pos:start="67:51" pos:end="67:54"><name pos:start="67:51" pos:end="67:54">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
