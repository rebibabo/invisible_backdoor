<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15270.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">do_op_602_mfrom</name> <parameter_list pos:start="1:22" pos:end="1:27">(<parameter pos:start="1:23" pos:end="1:26"><decl pos:start="1:23" pos:end="1:26"><type pos:start="1:23" pos:end="1:26"><name pos:start="1:23" pos:end="1:26">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <if_stmt pos:start="5:5" pos:end="49:5"><if pos:start="5:5" pos:end="45:5">if <condition pos:start="5:8" pos:end="5:25">(<expr pos:start="5:9" pos:end="5:24"><call pos:start="5:9" pos:end="5:24"><name pos:start="5:9" pos:end="5:14">likely</name><argument_list pos:start="5:15" pos:end="5:24">(<argument pos:start="5:16" pos:end="5:23"><expr pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:17">T0</name> <operator pos:start="5:19" pos:end="5:19">&lt;</operator> <literal type="number" pos:start="5:21" pos:end="5:23">602</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:27" pos:end="45:5">{<block_content pos:start="11:9" pos:end="44:0">

<cpp:ifdef pos:start="7:1" pos:end="7:26">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:26">USE_MFROM_ROM_TABLE</name></cpp:ifdef>

<cpp:include pos:start="9:1" pos:end="9:24">#<cpp:directive pos:start="9:2" pos:end="9:8">include</cpp:directive> <cpp:file pos:start="9:10" pos:end="9:24">"mfrom_table.c"</cpp:file></cpp:include>

        <expr_stmt pos:start="11:9" pos:end="14:0"><expr pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:10">T0</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:32"><name pos:start="11:14" pos:end="11:28">mfrom_ROM_table</name><index pos:start="11:29" pos:end="11:32">[<expr pos:start="11:30" pos:end="11:31"><name pos:start="11:30" pos:end="11:31">T0</name></expr>]</index></name></expr>;</expr_stmt>

<cpp:else pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:5">else</cpp:directive></cpp:else>

        <decl_stmt pos:start="15:9" pos:end="15:17"><decl pos:start="15:9" pos:end="15:16"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">double</name></type> <name pos:start="15:16" pos:end="15:16">d</name></decl>;</decl_stmt>

        <comment type="block" pos:start="17:9" pos:end="23:11">/* Extremly decomposed:

         *                    -T0 / 256

         * T0 = 256 * log10(10          + 1.0) + 0.5

         */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:15"><expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:9">d</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:14">T0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:49"><expr pos:start="27:9" pos:end="27:48"><name pos:start="27:9" pos:end="27:9">d</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:23">float64_div</name><argument_list pos:start="27:24" pos:end="27:48">(<argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><name pos:start="27:25" pos:end="27:25">d</name></expr></argument>, <argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><literal type="number" pos:start="27:28" pos:end="27:30">256</literal></expr></argument>, <argument pos:start="27:33" pos:end="27:47"><expr pos:start="27:33" pos:end="27:47"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:47"><name pos:start="27:34" pos:end="27:36">env</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:47">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:9">d</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:23">float64_chs</name><argument_list pos:start="29:24" pos:end="29:26">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:9">d</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:17">exp10</name><argument_list pos:start="31:18" pos:end="31:20">(<argument pos:start="31:19" pos:end="31:19"><expr pos:start="31:19" pos:end="31:19"><name pos:start="31:19" pos:end="31:19">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="31:23" pos:end="31:58">// XXX: use float emulation function</comment>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:9">d</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:48"><name pos:start="33:13" pos:end="33:23">float64_add</name><argument_list pos:start="33:24" pos:end="33:48">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">d</name></expr></argument>, <argument pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><literal type="number" pos:start="33:28" pos:end="33:30">1.0</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:47"><expr pos:start="33:33" pos:end="33:47"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:47"><name pos:start="33:34" pos:end="33:36">env</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:47">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:21"><expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">d</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:17">log10</name><argument_list pos:start="35:18" pos:end="35:20">(<argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><name pos:start="35:19" pos:end="35:19">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="35:23" pos:end="35:58">// XXX: use float emulation function</comment>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:9">d</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:23">float64_mul</name><argument_list pos:start="37:24" pos:end="37:48">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">d</name></expr></argument>, <argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><literal type="number" pos:start="37:28" pos:end="37:30">256</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:47"><expr pos:start="37:33" pos:end="37:47"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:47"><name pos:start="37:34" pos:end="37:36">env</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:47">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:9">d</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:23">float64_add</name><argument_list pos:start="39:24" pos:end="39:48">(<argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">d</name></expr></argument>, <argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><literal type="number" pos:start="39:28" pos:end="39:30">0.5</literal></expr></argument>, <argument pos:start="39:33" pos:end="39:47"><expr pos:start="39:33" pos:end="39:47"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:47"><name pos:start="39:34" pos:end="39:36">env</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:47">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="44:0"><expr pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:10">T0</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:53"><name pos:start="41:14" pos:end="41:33">float64_round_to_int</name><argument_list pos:start="41:34" pos:end="41:53">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">d</name></expr></argument>, <argument pos:start="41:38" pos:end="41:52"><expr pos:start="41:38" pos:end="41:52"><operator pos:start="41:38" pos:end="41:38">&amp;</operator><name pos:start="41:39" pos:end="41:52"><name pos:start="41:39" pos:end="41:41">env</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:52">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:15">

        <expr_stmt pos:start="47:9" pos:end="47:15"><expr pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:10">T0</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
