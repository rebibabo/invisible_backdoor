<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20121.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">ljpeg_decode_yuv_scan</name><parameter_list pos:start="1:33" pos:end="1:91">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:51">MJpegDecodeContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:69">predictor</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:90"><decl pos:start="1:72" pos:end="1:90"><type pos:start="1:72" pos:end="1:90"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:90">point_transform</name></decl></parameter>)</parameter_list><block pos:start="1:92" pos:end="163:1">{<block_content pos:start="3:5" pos:end="161:13">

    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:15"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:15">mb_x</name></decl>, <decl pos:start="3:18" pos:end="3:21"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:18" pos:end="3:21">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:27">nb_components</name><init pos:start="5:28" pos:end="5:29">=<expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">3</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="159:5">for<control pos:start="9:8" pos:end="9:46">(<init pos:start="9:9" pos:end="9:17"><expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:12">mb_y</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>;</init> <condition pos:start="9:19" pos:end="9:38"><expr pos:start="9:19" pos:end="9:37"><name pos:start="9:19" pos:end="9:22">mb_y</name> <operator pos:start="9:24" pos:end="9:24">&lt;</operator> <name pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">mb_height</name></name></expr>;</condition> <incr pos:start="9:40" pos:end="9:45"><expr pos:start="9:40" pos:end="9:45"><name pos:start="9:40" pos:end="9:43">mb_y</name><operator pos:start="9:44" pos:end="9:45">++</operator></expr></incr>)</control> <block pos:start="9:48" pos:end="159:5">{<block_content pos:start="11:9" pos:end="157:9">

        <for pos:start="11:9" pos:end="157:9">for<control pos:start="11:12" pos:end="11:49">(<init pos:start="11:13" pos:end="11:21"><expr pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:16">mb_x</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>;</init> <condition pos:start="11:23" pos:end="11:41"><expr pos:start="11:23" pos:end="11:40"><name pos:start="11:23" pos:end="11:26">mb_x</name> <operator pos:start="11:28" pos:end="11:28">&lt;</operator> <name pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:30">s</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:40">mb_width</name></name></expr>;</condition> <incr pos:start="11:43" pos:end="11:48"><expr pos:start="11:43" pos:end="11:48"><name pos:start="11:43" pos:end="11:46">mb_x</name><operator pos:start="11:47" pos:end="11:48">++</operator></expr></incr>)</control> <block pos:start="11:51" pos:end="157:9">{<block_content pos:start="13:13" pos:end="155:13">

            <if_stmt pos:start="13:13" pos:end="15:55"><if pos:start="13:13" pos:end="15:55">if <condition pos:start="13:16" pos:end="13:57">(<expr pos:start="13:17" pos:end="13:56"><name pos:start="13:17" pos:end="13:35"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:35">restart_interval</name></name> <operator pos:start="13:37" pos:end="13:38">&amp;&amp;</operator> <operator pos:start="13:40" pos:end="13:40">!</operator><name pos:start="13:41" pos:end="13:56"><name pos:start="13:41" pos:end="13:41">s</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:56">restart_count</name></name></expr>)</condition><block type="pseudo" pos:start="15:17" pos:end="15:55"><block_content pos:start="15:17" pos:end="15:55">

                <expr_stmt pos:start="15:17" pos:end="15:55"><expr pos:start="15:17" pos:end="15:54"><name pos:start="15:17" pos:end="15:32"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:32">restart_count</name></name> <operator pos:start="15:34" pos:end="15:34">=</operator> <name pos:start="15:36" pos:end="15:54"><name pos:start="15:36" pos:end="15:36">s</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:54">restart_interval</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="19:13" pos:end="147:13"><if pos:start="19:13" pos:end="99:13">if<condition pos:start="19:15" pos:end="19:51">(<expr pos:start="19:16" pos:end="19:50"><name pos:start="19:16" pos:end="19:19">mb_x</name><operator pos:start="19:20" pos:end="19:21">==</operator><literal type="number" pos:start="19:22" pos:end="19:22">0</literal> <operator pos:start="19:24" pos:end="19:25">||</operator> <name pos:start="19:27" pos:end="19:30">mb_y</name><operator pos:start="19:31" pos:end="19:32">==</operator><literal type="number" pos:start="19:33" pos:end="19:33">0</literal> <operator pos:start="19:35" pos:end="19:36">||</operator> <name pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:50">interlaced</name></name></expr>)</condition><block pos:start="19:52" pos:end="99:13">{<block_content pos:start="21:17" pos:end="97:17">

                <for pos:start="21:17" pos:end="97:17">for<control pos:start="21:20" pos:end="21:44">(<init pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:22">=</operator><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>;</init><condition pos:start="21:25" pos:end="21:40"><expr pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:25">i</name><operator pos:start="21:26" pos:end="21:26">&lt;</operator><name pos:start="21:27" pos:end="21:39">nb_components</name></expr>;</condition><incr pos:start="21:41" pos:end="21:43"><expr pos:start="21:41" pos:end="21:43"><name pos:start="21:41" pos:end="21:41">i</name><operator pos:start="21:42" pos:end="21:43">++</operator></expr></incr>)</control> <block pos:start="21:46" pos:end="97:17">{<block_content pos:start="23:21" pos:end="95:21">

                    <decl_stmt pos:start="23:21" pos:end="23:33"><decl pos:start="23:21" pos:end="23:32"><type pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:27">uint8_t</name> <modifier pos:start="23:29" pos:end="23:29">*</modifier></type><name pos:start="23:30" pos:end="23:32">ptr</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="25:21" pos:end="25:54"><decl pos:start="25:21" pos:end="25:25"><type pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">int</name></type> <name pos:start="25:25" pos:end="25:25">n</name></decl>, <decl pos:start="25:28" pos:end="25:28"><type ref="prev" pos:start="25:21" pos:end="25:23"/><name pos:start="25:28" pos:end="25:28">h</name></decl>, <decl pos:start="25:31" pos:end="25:31"><type ref="prev" pos:start="25:21" pos:end="25:23"/><name pos:start="25:31" pos:end="25:31">v</name></decl>, <decl pos:start="25:34" pos:end="25:34"><type ref="prev" pos:start="25:21" pos:end="25:23"/><name pos:start="25:34" pos:end="25:34">x</name></decl>, <decl pos:start="25:37" pos:end="25:37"><type ref="prev" pos:start="25:21" pos:end="25:23"/><name pos:start="25:37" pos:end="25:37">y</name></decl>, <decl pos:start="25:40" pos:end="25:40"><type ref="prev" pos:start="25:21" pos:end="25:23"/><name pos:start="25:40" pos:end="25:40">c</name></decl>, <decl pos:start="25:43" pos:end="25:43"><type ref="prev" pos:start="25:21" pos:end="25:23"/><name pos:start="25:43" pos:end="25:43">j</name></decl>, <decl pos:start="25:46" pos:end="25:53"><type ref="prev" pos:start="25:21" pos:end="25:23"/><name pos:start="25:46" pos:end="25:53">linesize</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="27:21" pos:end="27:40"><expr pos:start="27:21" pos:end="27:39"><name pos:start="27:21" pos:end="27:21">n</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:39"><name pos:start="27:25" pos:end="27:25">s</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:36">nb_blocks</name><index pos:start="27:37" pos:end="27:39">[<expr pos:start="27:38" pos:end="27:38"><name pos:start="27:38" pos:end="27:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="29:21" pos:end="29:41"><expr pos:start="29:21" pos:end="29:40"><name pos:start="29:21" pos:end="29:21">c</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:40"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:37">comp_index</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="31:21" pos:end="31:39"><expr pos:start="31:21" pos:end="31:38"><name pos:start="31:21" pos:end="31:21">h</name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:35">h_scount</name><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><name pos:start="31:37" pos:end="31:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="33:21" pos:end="33:39"><expr pos:start="33:21" pos:end="33:38"><name pos:start="33:21" pos:end="33:21">v</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:38"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:35">v_scount</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:26"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:21">x</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:21">y</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:45"><expr pos:start="39:21" pos:end="39:44"><name pos:start="39:21" pos:end="39:28">linesize</name><operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:44"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:41">linesize</name><index pos:start="39:42" pos:end="39:44">[<expr pos:start="39:43" pos:end="39:43"><name pos:start="39:43" pos:end="39:43">c</name></expr>]</index></name></expr>;</expr_stmt>



                    <for pos:start="43:21" pos:end="95:21">for<control pos:start="43:24" pos:end="43:38">(<init pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:25">j</name><operator pos:start="43:26" pos:end="43:26">=</operator><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>;</init> <condition pos:start="43:30" pos:end="43:33"><expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:30">j</name><operator pos:start="43:31" pos:end="43:31">&lt;</operator><name pos:start="43:32" pos:end="43:32">n</name></expr>;</condition> <incr pos:start="43:35" pos:end="43:37"><expr pos:start="43:35" pos:end="43:37"><name pos:start="43:35" pos:end="43:35">j</name><operator pos:start="43:36" pos:end="43:37">++</operator></expr></incr>)</control> <block pos:start="43:40" pos:end="95:21">{<block_content pos:start="45:25" pos:end="93:25">

                        <decl_stmt pos:start="45:25" pos:end="45:33"><decl pos:start="45:25" pos:end="45:32"><type pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">int</name></type> <name pos:start="45:29" pos:end="45:32">pred</name></decl>;</decl_stmt>



                        <expr_stmt pos:start="49:25" pos:end="49:96"><expr pos:start="49:25" pos:end="49:95"><name pos:start="49:25" pos:end="49:27">ptr</name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:48"><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:40">picture</name><operator pos:start="49:41" pos:end="49:41">.</operator><name pos:start="49:42" pos:end="49:45">data</name><index pos:start="49:46" pos:end="49:48">[<expr pos:start="49:47" pos:end="49:47"><name pos:start="49:47" pos:end="49:47">c</name></expr>]</index></name> <operator pos:start="49:50" pos:end="49:50">+</operator> <operator pos:start="49:52" pos:end="49:52">(</operator><name pos:start="49:53" pos:end="49:60">linesize</name> <operator pos:start="49:62" pos:end="49:62">*</operator> <operator pos:start="49:64" pos:end="49:64">(</operator><name pos:start="49:65" pos:end="49:65">v</name> <operator pos:start="49:67" pos:end="49:67">*</operator> <name pos:start="49:69" pos:end="49:72">mb_y</name> <operator pos:start="49:74" pos:end="49:74">+</operator> <name pos:start="49:76" pos:end="49:76">y</name><operator pos:start="49:77" pos:end="49:77">)</operator><operator pos:start="49:78" pos:end="49:78">)</operator> <operator pos:start="49:80" pos:end="49:80">+</operator> <operator pos:start="49:82" pos:end="49:82">(</operator><name pos:start="49:83" pos:end="49:83">h</name> <operator pos:start="49:85" pos:end="49:85">*</operator> <name pos:start="49:87" pos:end="49:90">mb_x</name> <operator pos:start="49:92" pos:end="49:92">+</operator> <name pos:start="49:94" pos:end="49:94">x</name><operator pos:start="49:95" pos:end="49:95">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="49:98" pos:end="49:123">//FIXME optimize this crap</comment>

                        <if_stmt pos:start="51:25" pos:end="75:25"><if pos:start="51:25" pos:end="63:25">if<condition pos:start="51:27" pos:end="51:43">(<expr pos:start="51:28" pos:end="51:42"><name pos:start="51:28" pos:end="51:28">y</name><operator pos:start="51:29" pos:end="51:30">==</operator><literal type="number" pos:start="51:31" pos:end="51:31">0</literal> <operator pos:start="51:33" pos:end="51:34">&amp;&amp;</operator> <name pos:start="51:36" pos:end="51:39">mb_y</name><operator pos:start="51:40" pos:end="51:41">==</operator><literal type="number" pos:start="51:42" pos:end="51:42">0</literal></expr>)</condition><block pos:start="51:44" pos:end="63:25">{<block_content pos:start="53:29" pos:end="61:29">

                            <if_stmt pos:start="53:29" pos:end="61:29"><if pos:start="53:29" pos:end="57:29">if<condition pos:start="53:31" pos:end="53:47">(<expr pos:start="53:32" pos:end="53:46"><name pos:start="53:32" pos:end="53:32">x</name><operator pos:start="53:33" pos:end="53:34">==</operator><literal type="number" pos:start="53:35" pos:end="53:35">0</literal> <operator pos:start="53:37" pos:end="53:38">&amp;&amp;</operator> <name pos:start="53:40" pos:end="53:43">mb_x</name><operator pos:start="53:44" pos:end="53:45">==</operator><literal type="number" pos:start="53:46" pos:end="53:46">0</literal></expr>)</condition><block pos:start="53:48" pos:end="57:29">{<block_content pos:start="55:33" pos:end="55:61">

                                <expr_stmt pos:start="55:33" pos:end="55:61"><expr pos:start="55:33" pos:end="55:60"><name pos:start="55:33" pos:end="55:36">pred</name><operator pos:start="55:37" pos:end="55:37">=</operator> <literal type="number" pos:start="55:39" pos:end="55:41">128</literal> <operator pos:start="55:43" pos:end="55:44">&lt;&lt;</operator> <name pos:start="55:46" pos:end="55:60">point_transform</name></expr>;</expr_stmt>

                            </block_content>}</block></if><else pos:start="57:30" pos:end="61:29">else<block pos:start="57:34" pos:end="61:29">{<block_content pos:start="59:33" pos:end="59:46">

                                <expr_stmt pos:start="59:33" pos:end="59:46"><expr pos:start="59:33" pos:end="59:45"><name pos:start="59:33" pos:end="59:36">pred</name><operator pos:start="59:37" pos:end="59:37">=</operator> <name pos:start="59:39" pos:end="59:45"><name pos:start="59:39" pos:end="59:41">ptr</name><index pos:start="59:42" pos:end="59:45">[<expr pos:start="59:43" pos:end="59:44"><operator pos:start="59:43" pos:end="59:43">-</operator><literal type="number" pos:start="59:44" pos:end="59:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if><else pos:start="63:26" pos:end="75:25">else<block pos:start="63:30" pos:end="75:25">{<block_content pos:start="65:29" pos:end="73:29">

                            <if_stmt pos:start="65:29" pos:end="73:29"><if pos:start="65:29" pos:end="69:29">if<condition pos:start="65:31" pos:end="65:47">(<expr pos:start="65:32" pos:end="65:46"><name pos:start="65:32" pos:end="65:32">x</name><operator pos:start="65:33" pos:end="65:34">==</operator><literal type="number" pos:start="65:35" pos:end="65:35">0</literal> <operator pos:start="65:37" pos:end="65:38">&amp;&amp;</operator> <name pos:start="65:40" pos:end="65:43">mb_x</name><operator pos:start="65:44" pos:end="65:45">==</operator><literal type="number" pos:start="65:46" pos:end="65:46">0</literal></expr>)</condition><block pos:start="65:48" pos:end="69:29">{<block_content pos:start="67:33" pos:end="67:53">

                                <expr_stmt pos:start="67:33" pos:end="67:53"><expr pos:start="67:33" pos:end="67:52"><name pos:start="67:33" pos:end="67:36">pred</name><operator pos:start="67:37" pos:end="67:37">=</operator> <name pos:start="67:39" pos:end="67:52"><name pos:start="67:39" pos:end="67:41">ptr</name><index pos:start="67:42" pos:end="67:52">[<expr pos:start="67:43" pos:end="67:51"><operator pos:start="67:43" pos:end="67:43">-</operator><name pos:start="67:44" pos:end="67:51">linesize</name></expr>]</index></name></expr>;</expr_stmt>

                            </block_content>}</block></if><else pos:start="69:30" pos:end="73:29">else<block pos:start="69:34" pos:end="73:29">{<block_content pos:start="71:33" pos:end="71:100">

                                <expr_stmt pos:start="71:33" pos:end="71:100"><expr pos:start="71:33" pos:end="71:99"><call pos:start="71:33" pos:end="71:99"><name pos:start="71:33" pos:end="71:39">PREDICT</name><argument_list pos:start="71:40" pos:end="71:99">(<argument pos:start="71:41" pos:end="71:44"><expr pos:start="71:41" pos:end="71:44"><name pos:start="71:41" pos:end="71:44">pred</name></expr></argument>, <argument pos:start="71:47" pos:end="71:62"><expr pos:start="71:47" pos:end="71:62"><name pos:start="71:47" pos:end="71:62"><name pos:start="71:47" pos:end="71:49">ptr</name><index pos:start="71:50" pos:end="71:62">[<expr pos:start="71:51" pos:end="71:61"><operator pos:start="71:51" pos:end="71:51">-</operator><name pos:start="71:52" pos:end="71:59">linesize</name><operator pos:start="71:60" pos:end="71:60">-</operator><literal type="number" pos:start="71:61" pos:end="71:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:65" pos:end="71:78"><expr pos:start="71:65" pos:end="71:78"><name pos:start="71:65" pos:end="71:78"><name pos:start="71:65" pos:end="71:67">ptr</name><index pos:start="71:68" pos:end="71:78">[<expr pos:start="71:69" pos:end="71:77"><operator pos:start="71:69" pos:end="71:69">-</operator><name pos:start="71:70" pos:end="71:77">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="71:81" pos:end="71:87"><expr pos:start="71:81" pos:end="71:87"><name pos:start="71:81" pos:end="71:87"><name pos:start="71:81" pos:end="71:83">ptr</name><index pos:start="71:84" pos:end="71:87">[<expr pos:start="71:85" pos:end="71:86"><operator pos:start="71:85" pos:end="71:85">-</operator><literal type="number" pos:start="71:86" pos:end="71:86">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:90" pos:end="71:98"><expr pos:start="71:90" pos:end="71:98"><name pos:start="71:90" pos:end="71:98">predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>



                        <if_stmt pos:start="79:25" pos:end="81:49"><if pos:start="79:25" pos:end="81:49">if <condition pos:start="79:28" pos:end="79:61">(<expr pos:start="79:29" pos:end="79:60"><name pos:start="79:29" pos:end="79:41"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:41">interlaced</name></name> <operator pos:start="79:43" pos:end="79:44">&amp;&amp;</operator> <name pos:start="79:46" pos:end="79:60"><name pos:start="79:46" pos:end="79:46">s</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:60">bottom_field</name></name></expr>)</condition><block type="pseudo" pos:start="81:29" pos:end="81:49"><block_content pos:start="81:29" pos:end="81:49">

                            <expr_stmt pos:start="81:29" pos:end="81:49"><expr pos:start="81:29" pos:end="81:48"><name pos:start="81:29" pos:end="81:31">ptr</name> <operator pos:start="81:33" pos:end="81:34">+=</operator> <name pos:start="81:36" pos:end="81:43">linesize</name> <operator pos:start="81:45" pos:end="81:46">&gt;&gt;</operator> <literal type="number" pos:start="81:48" pos:end="81:48">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:93"><expr pos:start="83:25" pos:end="83:92"><operator pos:start="83:25" pos:end="83:25">*</operator><name pos:start="83:26" pos:end="83:28">ptr</name><operator pos:start="83:29" pos:end="83:29">=</operator> <name pos:start="83:31" pos:end="83:34">pred</name> <operator pos:start="83:36" pos:end="83:36">+</operator> <operator pos:start="83:38" pos:end="83:38">(</operator><call pos:start="83:39" pos:end="83:72"><name pos:start="83:39" pos:end="83:53">mjpeg_decode_dc</name><argument_list pos:start="83:54" pos:end="83:72">(<argument pos:start="83:55" pos:end="83:55"><expr pos:start="83:55" pos:end="83:55"><name pos:start="83:55" pos:end="83:55">s</name></expr></argument>, <argument pos:start="83:58" pos:end="83:71"><expr pos:start="83:58" pos:end="83:71"><name pos:start="83:58" pos:end="83:71"><name pos:start="83:58" pos:end="83:58">s</name><operator pos:start="83:59" pos:end="83:60">-&gt;</operator><name pos:start="83:61" pos:end="83:68">dc_index</name><index pos:start="83:69" pos:end="83:71">[<expr pos:start="83:70" pos:end="83:70"><name pos:start="83:70" pos:end="83:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="83:74" pos:end="83:75">&lt;&lt;</operator> <name pos:start="83:77" pos:end="83:91">point_transform</name><operator pos:start="83:92" pos:end="83:92">)</operator></expr>;</expr_stmt>



                        <if_stmt pos:start="87:25" pos:end="93:25"><if pos:start="87:25" pos:end="93:25">if <condition pos:start="87:28" pos:end="87:37">(<expr pos:start="87:29" pos:end="87:36"><operator pos:start="87:29" pos:end="87:30">++</operator><name pos:start="87:31" pos:end="87:31">x</name> <operator pos:start="87:33" pos:end="87:34">==</operator> <name pos:start="87:36" pos:end="87:36">h</name></expr>)</condition> <block pos:start="87:39" pos:end="93:25">{<block_content pos:start="89:29" pos:end="91:32">

                            <expr_stmt pos:start="89:29" pos:end="89:34"><expr pos:start="89:29" pos:end="89:33"><name pos:start="89:29" pos:end="89:29">x</name> <operator pos:start="89:31" pos:end="89:31">=</operator> <literal type="number" pos:start="89:33" pos:end="89:33">0</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="91:29" pos:end="91:32"><expr pos:start="91:29" pos:end="91:31"><name pos:start="91:29" pos:end="91:29">y</name><operator pos:start="91:30" pos:end="91:31">++</operator></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if><else pos:start="99:14" pos:end="147:13">else<block pos:start="99:18" pos:end="147:13">{<block_content pos:start="101:17" pos:end="145:17">

                <for pos:start="101:17" pos:end="145:17">for<control pos:start="101:20" pos:end="101:44">(<init pos:start="101:21" pos:end="101:24"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:21">i</name><operator pos:start="101:22" pos:end="101:22">=</operator><literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>;</init><condition pos:start="101:25" pos:end="101:40"><expr pos:start="101:25" pos:end="101:39"><name pos:start="101:25" pos:end="101:25">i</name><operator pos:start="101:26" pos:end="101:26">&lt;</operator><name pos:start="101:27" pos:end="101:39">nb_components</name></expr>;</condition><incr pos:start="101:41" pos:end="101:43"><expr pos:start="101:41" pos:end="101:43"><name pos:start="101:41" pos:end="101:41">i</name><operator pos:start="101:42" pos:end="101:43">++</operator></expr></incr>)</control> <block pos:start="101:46" pos:end="145:17">{<block_content pos:start="103:21" pos:end="143:21">

                    <decl_stmt pos:start="103:21" pos:end="103:33"><decl pos:start="103:21" pos:end="103:32"><type pos:start="103:21" pos:end="103:29"><name pos:start="103:21" pos:end="103:27">uint8_t</name> <modifier pos:start="103:29" pos:end="103:29">*</modifier></type><name pos:start="103:30" pos:end="103:32">ptr</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="105:21" pos:end="105:54"><decl pos:start="105:21" pos:end="105:25"><type pos:start="105:21" pos:end="105:23"><name pos:start="105:21" pos:end="105:23">int</name></type> <name pos:start="105:25" pos:end="105:25">n</name></decl>, <decl pos:start="105:28" pos:end="105:28"><type ref="prev" pos:start="105:21" pos:end="105:23"/><name pos:start="105:28" pos:end="105:28">h</name></decl>, <decl pos:start="105:31" pos:end="105:31"><type ref="prev" pos:start="105:21" pos:end="105:23"/><name pos:start="105:31" pos:end="105:31">v</name></decl>, <decl pos:start="105:34" pos:end="105:34"><type ref="prev" pos:start="105:21" pos:end="105:23"/><name pos:start="105:34" pos:end="105:34">x</name></decl>, <decl pos:start="105:37" pos:end="105:37"><type ref="prev" pos:start="105:21" pos:end="105:23"/><name pos:start="105:37" pos:end="105:37">y</name></decl>, <decl pos:start="105:40" pos:end="105:40"><type ref="prev" pos:start="105:21" pos:end="105:23"/><name pos:start="105:40" pos:end="105:40">c</name></decl>, <decl pos:start="105:43" pos:end="105:43"><type ref="prev" pos:start="105:21" pos:end="105:23"/><name pos:start="105:43" pos:end="105:43">j</name></decl>, <decl pos:start="105:46" pos:end="105:53"><type ref="prev" pos:start="105:21" pos:end="105:23"/><name pos:start="105:46" pos:end="105:53">linesize</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:40"><expr pos:start="107:21" pos:end="107:39"><name pos:start="107:21" pos:end="107:21">n</name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:39"><name pos:start="107:25" pos:end="107:25">s</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:36">nb_blocks</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:41"><expr pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:21">c</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:40"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:37">comp_index</name><index pos:start="109:38" pos:end="109:40">[<expr pos:start="109:39" pos:end="109:39"><name pos:start="109:39" pos:end="109:39">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:39"><expr pos:start="111:21" pos:end="111:38"><name pos:start="111:21" pos:end="111:21">h</name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:38"><name pos:start="111:25" pos:end="111:25">s</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:35">h_scount</name><index pos:start="111:36" pos:end="111:38">[<expr pos:start="111:37" pos:end="111:37"><name pos:start="111:37" pos:end="111:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:39"><expr pos:start="113:21" pos:end="113:38"><name pos:start="113:21" pos:end="113:21">v</name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:38"><name pos:start="113:25" pos:end="113:25">s</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:35">v_scount</name><index pos:start="113:36" pos:end="113:38">[<expr pos:start="113:37" pos:end="113:37"><name pos:start="113:37" pos:end="113:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:26"><expr pos:start="115:21" pos:end="115:25"><name pos:start="115:21" pos:end="115:21">x</name> <operator pos:start="115:23" pos:end="115:23">=</operator> <literal type="number" pos:start="115:25" pos:end="115:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:26"><expr pos:start="117:21" pos:end="117:25"><name pos:start="117:21" pos:end="117:21">y</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <literal type="number" pos:start="117:25" pos:end="117:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:45"><expr pos:start="119:21" pos:end="119:44"><name pos:start="119:21" pos:end="119:28">linesize</name><operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:44"><name pos:start="119:31" pos:end="119:31">s</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:41">linesize</name><index pos:start="119:42" pos:end="119:44">[<expr pos:start="119:43" pos:end="119:43"><name pos:start="119:43" pos:end="119:43">c</name></expr>]</index></name></expr>;</expr_stmt>



                    <for pos:start="123:21" pos:end="143:21">for<control pos:start="123:24" pos:end="123:38">(<init pos:start="123:25" pos:end="123:28"><expr pos:start="123:25" pos:end="123:27"><name pos:start="123:25" pos:end="123:25">j</name><operator pos:start="123:26" pos:end="123:26">=</operator><literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>;</init> <condition pos:start="123:30" pos:end="123:33"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:30">j</name><operator pos:start="123:31" pos:end="123:31">&lt;</operator><name pos:start="123:32" pos:end="123:32">n</name></expr>;</condition> <incr pos:start="123:35" pos:end="123:37"><expr pos:start="123:35" pos:end="123:37"><name pos:start="123:35" pos:end="123:35">j</name><operator pos:start="123:36" pos:end="123:37">++</operator></expr></incr>)</control> <block pos:start="123:40" pos:end="143:21">{<block_content pos:start="125:25" pos:end="141:25">

                        <decl_stmt pos:start="125:25" pos:end="125:33"><decl pos:start="125:25" pos:end="125:32"><type pos:start="125:25" pos:end="125:27"><name pos:start="125:25" pos:end="125:27">int</name></type> <name pos:start="125:29" pos:end="125:32">pred</name></decl>;</decl_stmt>



                        <expr_stmt pos:start="129:25" pos:end="129:96"><expr pos:start="129:25" pos:end="129:95"><name pos:start="129:25" pos:end="129:27">ptr</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <name pos:start="129:31" pos:end="129:48"><name pos:start="129:31" pos:end="129:31">s</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:40">picture</name><operator pos:start="129:41" pos:end="129:41">.</operator><name pos:start="129:42" pos:end="129:45">data</name><index pos:start="129:46" pos:end="129:48">[<expr pos:start="129:47" pos:end="129:47"><name pos:start="129:47" pos:end="129:47">c</name></expr>]</index></name> <operator pos:start="129:50" pos:end="129:50">+</operator> <operator pos:start="129:52" pos:end="129:52">(</operator><name pos:start="129:53" pos:end="129:60">linesize</name> <operator pos:start="129:62" pos:end="129:62">*</operator> <operator pos:start="129:64" pos:end="129:64">(</operator><name pos:start="129:65" pos:end="129:65">v</name> <operator pos:start="129:67" pos:end="129:67">*</operator> <name pos:start="129:69" pos:end="129:72">mb_y</name> <operator pos:start="129:74" pos:end="129:74">+</operator> <name pos:start="129:76" pos:end="129:76">y</name><operator pos:start="129:77" pos:end="129:77">)</operator><operator pos:start="129:78" pos:end="129:78">)</operator> <operator pos:start="129:80" pos:end="129:80">+</operator> <operator pos:start="129:82" pos:end="129:82">(</operator><name pos:start="129:83" pos:end="129:83">h</name> <operator pos:start="129:85" pos:end="129:85">*</operator> <name pos:start="129:87" pos:end="129:90">mb_x</name> <operator pos:start="129:92" pos:end="129:92">+</operator> <name pos:start="129:94" pos:end="129:94">x</name><operator pos:start="129:95" pos:end="129:95">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="129:98" pos:end="129:123">//FIXME optimize this crap</comment>

                        <expr_stmt pos:start="131:25" pos:end="131:92"><expr pos:start="131:25" pos:end="131:91"><call pos:start="131:25" pos:end="131:91"><name pos:start="131:25" pos:end="131:31">PREDICT</name><argument_list pos:start="131:32" pos:end="131:91">(<argument pos:start="131:33" pos:end="131:36"><expr pos:start="131:33" pos:end="131:36"><name pos:start="131:33" pos:end="131:36">pred</name></expr></argument>, <argument pos:start="131:39" pos:end="131:54"><expr pos:start="131:39" pos:end="131:54"><name pos:start="131:39" pos:end="131:54"><name pos:start="131:39" pos:end="131:41">ptr</name><index pos:start="131:42" pos:end="131:54">[<expr pos:start="131:43" pos:end="131:53"><operator pos:start="131:43" pos:end="131:43">-</operator><name pos:start="131:44" pos:end="131:51">linesize</name><operator pos:start="131:52" pos:end="131:52">-</operator><literal type="number" pos:start="131:53" pos:end="131:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:57" pos:end="131:70"><expr pos:start="131:57" pos:end="131:70"><name pos:start="131:57" pos:end="131:70"><name pos:start="131:57" pos:end="131:59">ptr</name><index pos:start="131:60" pos:end="131:70">[<expr pos:start="131:61" pos:end="131:69"><operator pos:start="131:61" pos:end="131:61">-</operator><name pos:start="131:62" pos:end="131:69">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="131:73" pos:end="131:79"><expr pos:start="131:73" pos:end="131:79"><name pos:start="131:73" pos:end="131:79"><name pos:start="131:73" pos:end="131:75">ptr</name><index pos:start="131:76" pos:end="131:79">[<expr pos:start="131:77" pos:end="131:78"><operator pos:start="131:77" pos:end="131:77">-</operator><literal type="number" pos:start="131:78" pos:end="131:78">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:82" pos:end="131:90"><expr pos:start="131:82" pos:end="131:90"><name pos:start="131:82" pos:end="131:90">predictor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="133:25" pos:end="133:93"><expr pos:start="133:25" pos:end="133:92"><operator pos:start="133:25" pos:end="133:25">*</operator><name pos:start="133:26" pos:end="133:28">ptr</name><operator pos:start="133:29" pos:end="133:29">=</operator> <name pos:start="133:31" pos:end="133:34">pred</name> <operator pos:start="133:36" pos:end="133:36">+</operator> <operator pos:start="133:38" pos:end="133:38">(</operator><call pos:start="133:39" pos:end="133:72"><name pos:start="133:39" pos:end="133:53">mjpeg_decode_dc</name><argument_list pos:start="133:54" pos:end="133:72">(<argument pos:start="133:55" pos:end="133:55"><expr pos:start="133:55" pos:end="133:55"><name pos:start="133:55" pos:end="133:55">s</name></expr></argument>, <argument pos:start="133:58" pos:end="133:71"><expr pos:start="133:58" pos:end="133:71"><name pos:start="133:58" pos:end="133:71"><name pos:start="133:58" pos:end="133:58">s</name><operator pos:start="133:59" pos:end="133:60">-&gt;</operator><name pos:start="133:61" pos:end="133:68">dc_index</name><index pos:start="133:69" pos:end="133:71">[<expr pos:start="133:70" pos:end="133:70"><name pos:start="133:70" pos:end="133:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="133:74" pos:end="133:75">&lt;&lt;</operator> <name pos:start="133:77" pos:end="133:91">point_transform</name><operator pos:start="133:92" pos:end="133:92">)</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="135:25" pos:end="141:25"><if pos:start="135:25" pos:end="141:25">if <condition pos:start="135:28" pos:end="135:37">(<expr pos:start="135:29" pos:end="135:36"><operator pos:start="135:29" pos:end="135:30">++</operator><name pos:start="135:31" pos:end="135:31">x</name> <operator pos:start="135:33" pos:end="135:34">==</operator> <name pos:start="135:36" pos:end="135:36">h</name></expr>)</condition> <block pos:start="135:39" pos:end="141:25">{<block_content pos:start="137:29" pos:end="139:32">

                            <expr_stmt pos:start="137:29" pos:end="137:34"><expr pos:start="137:29" pos:end="137:33"><name pos:start="137:29" pos:end="137:29">x</name> <operator pos:start="137:31" pos:end="137:31">=</operator> <literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="139:29" pos:end="139:32"><expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:29">y</name><operator pos:start="139:30" pos:end="139:31">++</operator></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="149:13" pos:end="155:13"><if pos:start="149:13" pos:end="155:13">if <condition pos:start="149:16" pos:end="149:59">(<expr pos:start="149:17" pos:end="149:58"><name pos:start="149:17" pos:end="149:35"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:35">restart_interval</name></name> <operator pos:start="149:37" pos:end="149:38">&amp;&amp;</operator> <operator pos:start="149:40" pos:end="149:40">!</operator><operator pos:start="149:41" pos:end="149:42">--</operator><name pos:start="149:43" pos:end="149:58"><name pos:start="149:43" pos:end="149:43">s</name><operator pos:start="149:44" pos:end="149:45">-&gt;</operator><name pos:start="149:46" pos:end="149:58">restart_count</name></name></expr>)</condition> <block pos:start="149:61" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:38">

                <expr_stmt pos:start="151:17" pos:end="151:39"><expr pos:start="151:17" pos:end="151:38"><call pos:start="151:17" pos:end="151:38"><name pos:start="151:17" pos:end="151:30">align_get_bits</name><argument_list pos:start="151:31" pos:end="151:38">(<argument pos:start="151:32" pos:end="151:37"><expr pos:start="151:32" pos:end="151:37"><operator pos:start="151:32" pos:end="151:32">&amp;</operator><name pos:start="151:33" pos:end="151:37"><name pos:start="151:33" pos:end="151:33">s</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:38"><expr pos:start="153:17" pos:end="153:37"><call pos:start="153:17" pos:end="153:37"><name pos:start="153:17" pos:end="153:25">skip_bits</name><argument_list pos:start="153:26" pos:end="153:37">(<argument pos:start="153:27" pos:end="153:32"><expr pos:start="153:27" pos:end="153:32"><operator pos:start="153:27" pos:end="153:27">&amp;</operator><name pos:start="153:28" pos:end="153:32"><name pos:start="153:28" pos:end="153:28">s</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:32">gb</name></name></expr></argument>, <argument pos:start="153:35" pos:end="153:36"><expr pos:start="153:35" pos:end="153:36"><literal type="number" pos:start="153:35" pos:end="153:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="153:40" pos:end="153:54">/* skip RSTn */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
