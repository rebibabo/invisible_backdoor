<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2294.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:33">xilinx_spips_read</name><parameter_list pos:start="1:34" pos:end="3:70">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:59"><decl pos:start="1:49" pos:end="1:59"><type pos:start="1:49" pos:end="1:59"><name pos:start="1:49" pos:end="1:54">hwaddr</name></type> <name pos:start="1:56" pos:end="1:59">addr</name></decl></parameter>,

                                                        <parameter pos:start="3:57" pos:end="3:69"><decl pos:start="3:57" pos:end="3:69"><type pos:start="3:57" pos:end="3:69"><name pos:start="3:57" pos:end="3:64">unsigned</name></type> <name pos:start="3:66" pos:end="3:69">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="83:32">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">XilinxSPIPS</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">mask</name> <init pos:start="9:19" pos:end="9:22">= <expr pos:start="9:21" pos:end="9:22"><operator pos:start="9:21" pos:end="9:21">~</operator><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:12">&gt;&gt;=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="79:5">switch <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">addr</name></expr>)</condition> <block pos:start="17:19" pos:end="79:5">{<block_content pos:start="19:5" pos:end="77:19">

    <case pos:start="19:5" pos:end="19:18">case <expr pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:17">R_CONFIG</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:12">mask</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <literal type="number" pos:start="21:16" pos:end="21:25">0x0002FFFF</literal></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:23">case <expr pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:22">R_INTR_STATUS</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:21">regs</name><index pos:start="27:22" pos:end="27:27">[<expr pos:start="27:23" pos:end="27:26"><name pos:start="27:23" pos:end="27:26">addr</name></expr>]</index></name> <operator pos:start="27:29" pos:end="27:29">&amp;</operator> <name pos:start="27:31" pos:end="27:37">IXR_ALL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">regs</name><index pos:start="29:16" pos:end="29:21">[<expr pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:20">addr</name></expr>]</index></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><call pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:16">DB_PRINT</name><argument_list pos:start="31:17" pos:end="31:65">(<argument pos:start="31:18" pos:end="31:49"><expr pos:start="31:18" pos:end="31:49"><literal type="string" pos:start="31:18" pos:end="31:24">"addr="</literal> <name pos:start="31:26" pos:end="31:39">TARGET_FMT_plx</name> <literal type="string" pos:start="31:41" pos:end="31:49">" = %x\n"</literal></expr></argument>, <argument pos:start="31:52" pos:end="31:59"><expr pos:start="31:52" pos:end="31:59"><name pos:start="31:52" pos:end="31:55">addr</name> <operator pos:start="31:57" pos:end="31:57">*</operator> <literal type="number" pos:start="31:59" pos:end="31:59">4</literal></expr></argument>, <argument pos:start="31:62" pos:end="31:64"><expr pos:start="31:62" pos:end="31:64"><name pos:start="31:62" pos:end="31:64">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    <case pos:start="35:5" pos:end="35:21">case <expr pos:start="35:10" pos:end="35:20"><name pos:start="35:10" pos:end="35:20">R_INTR_MASK</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:12">mask</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:22">IXR_ALL</name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:15">case  <expr pos:start="41:11" pos:end="41:14"><name pos:start="41:11" pos:end="41:14">R_EN</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:12">mask</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:18">0x1</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:28">case <expr pos:start="47:10" pos:end="47:27"><name pos:start="47:10" pos:end="47:27">R_SLAVE_IDLE_COUNT</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:12">mask</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <literal type="number" pos:start="49:16" pos:end="49:19">0xFF</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:18">case <expr pos:start="53:10" pos:end="53:17"><name pos:start="53:10" pos:end="53:17">R_MOD_ID</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:12">mask</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <literal type="number" pos:start="55:16" pos:end="55:25">0x01FFFFFF</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:19">case <expr pos:start="59:10" pos:end="59:18"><name pos:start="59:10" pos:end="59:18">R_INTR_EN</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:20">case <expr pos:start="61:10" pos:end="61:19"><name pos:start="61:10" pos:end="61:19">R_INTR_DIS</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:19">case <expr pos:start="63:10" pos:end="63:18"><name pos:start="63:10" pos:end="63:18">R_TX_DATA</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:17"><expr pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:12">mask</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:19">case <expr pos:start="69:10" pos:end="69:18"><name pos:start="69:10" pos:end="69:18">R_RX_DATA</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:50"><expr pos:start="71:9" pos:end="71:49"><call pos:start="71:9" pos:end="71:49"><name pos:start="71:9" pos:end="71:21">rx_data_bytes</name><argument_list pos:start="71:22" pos:end="71:49">(<argument pos:start="71:23" pos:end="71:23"><expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">s</name></expr></argument>, <argument pos:start="71:26" pos:end="71:29"><expr pos:start="71:26" pos:end="71:29"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:29">ret</name></expr></argument>, <argument pos:start="71:32" pos:end="71:48"><expr pos:start="71:32" pos:end="71:48"><name pos:start="71:32" pos:end="71:48"><name pos:start="71:32" pos:end="71:32">s</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:48">num_txrx_bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:66"><expr pos:start="73:9" pos:end="73:65"><call pos:start="73:9" pos:end="73:65"><name pos:start="73:9" pos:end="73:16">DB_PRINT</name><argument_list pos:start="73:17" pos:end="73:65">(<argument pos:start="73:18" pos:end="73:49"><expr pos:start="73:18" pos:end="73:49"><literal type="string" pos:start="73:18" pos:end="73:24">"addr="</literal> <name pos:start="73:26" pos:end="73:39">TARGET_FMT_plx</name> <literal type="string" pos:start="73:41" pos:end="73:49">" = %x\n"</literal></expr></argument>, <argument pos:start="73:52" pos:end="73:59"><expr pos:start="73:52" pos:end="73:59"><name pos:start="73:52" pos:end="73:55">addr</name> <operator pos:start="73:57" pos:end="73:57">*</operator> <literal type="number" pos:start="73:59" pos:end="73:59">4</literal></expr></argument>, <argument pos:start="73:62" pos:end="73:64"><expr pos:start="73:62" pos:end="73:64"><name pos:start="73:62" pos:end="73:64">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><call pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:31">xilinx_spips_update_ixr</name><argument_list pos:start="75:32" pos:end="75:34">(<argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:19">return <expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">ret</name></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="81:5" pos:end="81:79"><expr pos:start="81:5" pos:end="81:78"><call pos:start="81:5" pos:end="81:78"><name pos:start="81:5" pos:end="81:12">DB_PRINT</name><argument_list pos:start="81:13" pos:end="81:78">(<argument pos:start="81:14" pos:end="81:45"><expr pos:start="81:14" pos:end="81:45"><literal type="string" pos:start="81:14" pos:end="81:20">"addr="</literal> <name pos:start="81:22" pos:end="81:35">TARGET_FMT_plx</name> <literal type="string" pos:start="81:37" pos:end="81:45">" = %x\n"</literal></expr></argument>, <argument pos:start="81:48" pos:end="81:55"><expr pos:start="81:48" pos:end="81:55"><name pos:start="81:48" pos:end="81:51">addr</name> <operator pos:start="81:53" pos:end="81:53">*</operator> <literal type="number" pos:start="81:55" pos:end="81:55">4</literal></expr></argument>, <argument pos:start="81:58" pos:end="81:77"><expr pos:start="81:58" pos:end="81:77"><name pos:start="81:58" pos:end="81:70"><name pos:start="81:58" pos:end="81:58">s</name><operator pos:start="81:59" pos:end="81:60">-&gt;</operator><name pos:start="81:61" pos:end="81:64">regs</name><index pos:start="81:65" pos:end="81:70">[<expr pos:start="81:66" pos:end="81:69"><name pos:start="81:66" pos:end="81:69">addr</name></expr>]</index></name> <operator pos:start="81:72" pos:end="81:72">&amp;</operator> <name pos:start="81:74" pos:end="81:77">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:32">return <expr pos:start="83:12" pos:end="83:31"><name pos:start="83:12" pos:end="83:24"><name pos:start="83:12" pos:end="83:12">s</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:18">regs</name><index pos:start="83:19" pos:end="83:24">[<expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">addr</name></expr>]</index></name> <operator pos:start="83:26" pos:end="83:26">&amp;</operator> <name pos:start="83:28" pos:end="83:31">mask</name></expr>;</return>



</block_content>}</block></function>
</unit>
