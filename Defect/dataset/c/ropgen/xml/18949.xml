<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18949.c" pos:tabs="8"><function pos:start="1:1" pos:end="838:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:31">(<parameter pos:start="1:15" pos:end="1:30"><decl pos:start="1:15" pos:end="1:30"><type pos:start="1:15" pos:end="1:27"><name pos:start="1:15" pos:end="1:25">CPUPPCState</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="838:1">{<block_content pos:start="5:5" pos:end="836:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:44">= <expr pos:start="5:20" pos:end="5:44"><call pos:start="5:20" pos:end="5:44"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:44">(<argument pos:start="5:24" pos:end="5:43"><expr pos:start="5:24" pos:end="5:43"><call pos:start="5:24" pos:end="5:43"><name pos:start="5:24" pos:end="5:38">ppc_env_get_cpu</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">target_siginfo_t</name></type> <name pos:start="7:22" pos:end="7:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:20">ret</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="836:5">for<control pos:start="15:8" pos:end="15:11">(<init pos:start="15:9" pos:end="15:9">;</init><condition pos:start="15:10" pos:end="15:10">;</condition><incr/>)</control> <block pos:start="15:13" pos:end="836:5">{<block_content pos:start="17:9" pos:end="834:37">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22">cpu_exec_start</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:14">trapnr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:33"><name pos:start="19:18" pos:end="19:29">cpu_ppc_exec</name><argument_list pos:start="19:30" pos:end="19:33">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:20">cpu_exec_end</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="832:9">switch<condition pos:start="23:15" pos:end="23:22">(<expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:21">trapnr</name></expr>)</condition> <block pos:start="23:24" pos:end="832:9">{<block_content pos:start="25:9" pos:end="830:18">

        <case pos:start="25:9" pos:end="25:31">case <expr pos:start="25:14" pos:end="25:30"><name pos:start="25:14" pos:end="25:30">POWERPC_EXCP_NONE</name></expr>:</case>

            <comment type="block" pos:start="27:13" pos:end="27:28">/* Just go on */</comment>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:35">case <expr pos:start="31:14" pos:end="31:34"><name pos:start="31:14" pos:end="31:34">POWERPC_EXCP_CRITICAL</name></expr>:</case> <comment type="block" pos:start="31:37" pos:end="31:79">/* Critical input                        */</comment>

            <expr_stmt pos:start="33:13" pos:end="35:36"><expr pos:start="33:13" pos:end="35:35"><call pos:start="33:13" pos:end="35:35"><name pos:start="33:13" pos:end="33:21">cpu_abort</name><argument_list pos:start="33:22" pos:end="35:35">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">cs</name></expr></argument>, <argument pos:start="33:27" pos:end="35:34"><expr pos:start="33:27" pos:end="35:34"><literal type="string" pos:start="33:27" pos:end="33:67">"Critical interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="35:23" pos:end="35:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:33">case <expr pos:start="39:14" pos:end="39:32"><name pos:start="39:14" pos:end="39:32">POWERPC_EXCP_MCHECK</name></expr>:</case>   <comment type="block" pos:start="39:37" pos:end="39:79">/* Machine check exception               */</comment>

            <expr_stmt pos:start="41:13" pos:end="43:36"><expr pos:start="41:13" pos:end="43:35"><call pos:start="41:13" pos:end="43:35"><name pos:start="41:13" pos:end="41:21">cpu_abort</name><argument_list pos:start="41:22" pos:end="43:35">(<argument pos:start="41:23" pos:end="41:24"><expr pos:start="41:23" pos:end="41:24"><name pos:start="41:23" pos:end="41:24">cs</name></expr></argument>, <argument pos:start="41:27" pos:end="43:34"><expr pos:start="41:27" pos:end="43:34"><literal type="string" pos:start="41:27" pos:end="41:72">"Machine check exception while in user mode. "</literal>

                      <literal type="string" pos:start="43:23" pos:end="43:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:30">case <expr pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:29">POWERPC_EXCP_DSI</name></expr>:</case>      <comment type="block" pos:start="47:37" pos:end="47:79">/* Data storage exception                */</comment>

            <expr_stmt pos:start="49:13" pos:end="51:41"><expr pos:start="49:13" pos:end="51:40"><call pos:start="49:13" pos:end="51:40"><name pos:start="49:13" pos:end="49:21">EXCP_DUMP</name><argument_list pos:start="49:22" pos:end="51:40">(<argument pos:start="49:23" pos:end="49:25"><expr pos:start="49:23" pos:end="49:25"><name pos:start="49:23" pos:end="49:25">env</name></expr></argument>, <argument pos:start="49:28" pos:end="49:78"><expr pos:start="49:28" pos:end="49:78"><literal type="string" pos:start="49:28" pos:end="49:59">"Invalid data memory access: 0x"</literal> <name pos:start="49:61" pos:end="49:73">TARGET_FMT_lx</name> <literal type="string" pos:start="49:75" pos:end="49:78">"\n"</literal></expr></argument>,

                      <argument pos:start="51:23" pos:end="51:39"><expr pos:start="51:23" pos:end="51:39"><name pos:start="51:23" pos:end="51:39"><name pos:start="51:23" pos:end="51:25">env</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:30">spr</name><index pos:start="51:31" pos:end="51:39">[<expr pos:start="51:32" pos:end="51:38"><name pos:start="51:32" pos:end="51:38">SPR_DAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="53:13" pos:end="53:47">/* XXX: check this. Seems bugged */</comment>

            <switch pos:start="55:13" pos:end="103:13">switch <condition pos:start="55:20" pos:end="55:49">(<expr pos:start="55:21" pos:end="55:48"><name pos:start="55:21" pos:end="55:35"><name pos:start="55:21" pos:end="55:23">env</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:35">error_code</name></name> <operator pos:start="55:37" pos:end="55:37">&amp;</operator> <literal type="number" pos:start="55:39" pos:end="55:48">0xFF000000</literal></expr>)</condition> <block pos:start="55:51" pos:end="103:13">{<block_content pos:start="57:13" pos:end="101:22">

            <case pos:start="57:13" pos:end="57:28">case <expr pos:start="57:18" pos:end="57:27"><literal type="number" pos:start="57:18" pos:end="57:27">0x40000000</literal></expr>:</case>

                <expr_stmt pos:start="59:17" pos:end="59:47"><expr pos:start="59:17" pos:end="59:46"><name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:20">info</name><operator pos:start="59:21" pos:end="59:21">.</operator><name pos:start="59:22" pos:end="59:29">si_signo</name></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <name pos:start="59:33" pos:end="59:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:34"><expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:20">info</name><operator pos:start="61:21" pos:end="61:21">.</operator><name pos:start="61:22" pos:end="61:29">si_errno</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:50"><expr pos:start="63:17" pos:end="63:49"><name pos:start="63:17" pos:end="63:28"><name pos:start="63:17" pos:end="63:20">info</name><operator pos:start="63:21" pos:end="63:21">.</operator><name pos:start="63:22" pos:end="63:28">si_code</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <name pos:start="63:32" pos:end="63:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <break pos:start="65:17" pos:end="65:22">break;</break>

            <case pos:start="67:13" pos:end="67:28">case <expr pos:start="67:18" pos:end="67:27"><literal type="number" pos:start="67:18" pos:end="67:27">0x04000000</literal></expr>:</case>

                <expr_stmt pos:start="69:17" pos:end="69:46"><expr pos:start="69:17" pos:end="69:45"><name pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:20">info</name><operator pos:start="69:21" pos:end="69:21">.</operator><name pos:start="69:22" pos:end="69:29">si_signo</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:45">TARGET_SIGILL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:34"><expr pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:20">info</name><operator pos:start="71:21" pos:end="71:21">.</operator><name pos:start="71:22" pos:end="71:29">si_errno</name></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:49"><expr pos:start="73:17" pos:end="73:48"><name pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:20">info</name><operator pos:start="73:21" pos:end="73:21">.</operator><name pos:start="73:22" pos:end="73:28">si_code</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:48">TARGET_ILL_ILLADR</name></expr>;</expr_stmt>

                <break pos:start="75:17" pos:end="75:22">break;</break>

            <case pos:start="77:13" pos:end="77:28">case <expr pos:start="77:18" pos:end="77:27"><literal type="number" pos:start="77:18" pos:end="77:27">0x08000000</literal></expr>:</case>

                <expr_stmt pos:start="79:17" pos:end="79:47"><expr pos:start="79:17" pos:end="79:46"><name pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:20">info</name><operator pos:start="79:21" pos:end="79:21">.</operator><name pos:start="79:22" pos:end="79:29">si_signo</name></name> <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:34"><expr pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:20">info</name><operator pos:start="81:21" pos:end="81:21">.</operator><name pos:start="81:22" pos:end="81:29">si_errno</name></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:50"><expr pos:start="83:17" pos:end="83:49"><name pos:start="83:17" pos:end="83:28"><name pos:start="83:17" pos:end="83:20">info</name><operator pos:start="83:21" pos:end="83:21">.</operator><name pos:start="83:22" pos:end="83:28">si_code</name></name> <operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:49">TARGET_SEGV_ACCERR</name></expr>;</expr_stmt>

                <break pos:start="85:17" pos:end="85:22">break;</break>

            <default pos:start="87:13" pos:end="87:20">default:</default>

                <comment type="block" pos:start="89:17" pos:end="89:54">/* Let's send a regular segfault... */</comment>

                <expr_stmt pos:start="91:17" pos:end="93:43"><expr pos:start="91:17" pos:end="93:42"><call pos:start="91:17" pos:end="93:42"><name pos:start="91:17" pos:end="91:25">EXCP_DUMP</name><argument_list pos:start="91:26" pos:end="93:42">(<argument pos:start="91:27" pos:end="91:29"><expr pos:start="91:27" pos:end="91:29"><name pos:start="91:27" pos:end="91:29">env</name></expr></argument>, <argument pos:start="91:32" pos:end="91:64"><expr pos:start="91:32" pos:end="91:64"><literal type="string" pos:start="91:32" pos:end="91:64">"Invalid segfault errno (%02x)\n"</literal></expr></argument>,

                          <argument pos:start="93:27" pos:end="93:41"><expr pos:start="93:27" pos:end="93:41"><name pos:start="93:27" pos:end="93:41"><name pos:start="93:27" pos:end="93:29">env</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:41">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:47"><expr pos:start="95:17" pos:end="95:46"><name pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:20">info</name><operator pos:start="95:21" pos:end="95:21">.</operator><name pos:start="95:22" pos:end="95:29">si_signo</name></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <name pos:start="95:33" pos:end="95:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:20">info</name><operator pos:start="97:21" pos:end="97:21">.</operator><name pos:start="97:22" pos:end="97:29">si_errno</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:50"><expr pos:start="99:17" pos:end="99:49"><name pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:20">info</name><operator pos:start="99:21" pos:end="99:21">.</operator><name pos:start="99:22" pos:end="99:28">si_code</name></name> <operator pos:start="99:30" pos:end="99:30">=</operator> <name pos:start="99:32" pos:end="99:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <break pos:start="101:17" pos:end="101:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="105:13" pos:end="105:54"><expr pos:start="105:13" pos:end="105:53"><name pos:start="105:13" pos:end="105:42"><name pos:start="105:13" pos:end="105:16">info</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:26">_sifields</name><operator pos:start="105:27" pos:end="105:27">.</operator><name pos:start="105:28" pos:end="105:36">_sigfault</name><operator pos:start="105:37" pos:end="105:37">.</operator><name pos:start="105:38" pos:end="105:42">_addr</name></name> <operator pos:start="105:44" pos:end="105:44">=</operator> <name pos:start="105:46" pos:end="105:53"><name pos:start="105:46" pos:end="105:48">env</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:53">nip</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:52"><expr pos:start="107:13" pos:end="107:51"><call pos:start="107:13" pos:end="107:51"><name pos:start="107:13" pos:end="107:24">queue_signal</name><argument_list pos:start="107:25" pos:end="107:51">(<argument pos:start="107:26" pos:end="107:28"><expr pos:start="107:26" pos:end="107:28"><name pos:start="107:26" pos:end="107:28">env</name></expr></argument>, <argument pos:start="107:31" pos:end="107:43"><expr pos:start="107:31" pos:end="107:43"><name pos:start="107:31" pos:end="107:43"><name pos:start="107:31" pos:end="107:34">info</name><operator pos:start="107:35" pos:end="107:35">.</operator><name pos:start="107:36" pos:end="107:43">si_signo</name></name></expr></argument>, <argument pos:start="107:46" pos:end="107:50"><expr pos:start="107:46" pos:end="107:50"><operator pos:start="107:46" pos:end="107:46">&amp;</operator><name pos:start="107:47" pos:end="107:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:30">case <expr pos:start="111:14" pos:end="111:29"><name pos:start="111:14" pos:end="111:29">POWERPC_EXCP_ISI</name></expr>:</case>      <comment type="block" pos:start="111:37" pos:end="111:79">/* Instruction storage exception         */</comment>

            <expr_stmt pos:start="113:13" pos:end="115:48"><expr pos:start="113:13" pos:end="115:47"><call pos:start="113:13" pos:end="115:47"><name pos:start="113:13" pos:end="113:21">EXCP_DUMP</name><argument_list pos:start="113:22" pos:end="115:47">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><name pos:start="113:23" pos:end="113:25">env</name></expr></argument>, <argument pos:start="113:28" pos:end="115:26"><expr pos:start="113:28" pos:end="115:26"><literal type="string" pos:start="113:28" pos:end="113:60">"Invalid instruction fetch: 0x\n"</literal> <name pos:start="113:62" pos:end="113:74">TARGET_FMT_lx</name>

                      <literal type="string" pos:start="115:23" pos:end="115:26">"\n"</literal></expr></argument>, <argument pos:start="115:29" pos:end="115:46"><expr pos:start="115:29" pos:end="115:46"><name pos:start="115:29" pos:end="115:46"><name pos:start="115:29" pos:end="115:31">env</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:36">spr</name><index pos:start="115:37" pos:end="115:46">[<expr pos:start="115:38" pos:end="115:45"><name pos:start="115:38" pos:end="115:45">SPR_SRR0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="117:13" pos:end="117:33">/* XXX: check this */</comment>

            <switch pos:start="119:13" pos:end="159:13">switch <condition pos:start="119:20" pos:end="119:49">(<expr pos:start="119:21" pos:end="119:48"><name pos:start="119:21" pos:end="119:35"><name pos:start="119:21" pos:end="119:23">env</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:35">error_code</name></name> <operator pos:start="119:37" pos:end="119:37">&amp;</operator> <literal type="number" pos:start="119:39" pos:end="119:48">0xFF000000</literal></expr>)</condition> <block pos:start="119:51" pos:end="159:13">{<block_content pos:start="121:13" pos:end="157:22">

            <case pos:start="121:13" pos:end="121:28">case <expr pos:start="121:18" pos:end="121:27"><literal type="number" pos:start="121:18" pos:end="121:27">0x40000000</literal></expr>:</case>

                <expr_stmt pos:start="123:17" pos:end="123:47"><expr pos:start="123:17" pos:end="123:46"><name pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:20">info</name><operator pos:start="123:21" pos:end="123:21">.</operator><name pos:start="123:22" pos:end="123:29">si_signo</name></name> <operator pos:start="123:31" pos:end="123:31">=</operator> <name pos:start="123:33" pos:end="123:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:30"><expr pos:start="125:13" pos:end="125:29"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:16">info</name><operator pos:start="125:17" pos:end="125:17">.</operator><name pos:start="125:18" pos:end="125:25">si_errno</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <literal type="number" pos:start="125:29" pos:end="125:29">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:50"><expr pos:start="127:17" pos:end="127:49"><name pos:start="127:17" pos:end="127:28"><name pos:start="127:17" pos:end="127:20">info</name><operator pos:start="127:21" pos:end="127:21">.</operator><name pos:start="127:22" pos:end="127:28">si_code</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <break pos:start="129:17" pos:end="129:22">break;</break>

            <case pos:start="131:13" pos:end="131:28">case <expr pos:start="131:18" pos:end="131:27"><literal type="number" pos:start="131:18" pos:end="131:27">0x10000000</literal></expr>:</case>

            <case pos:start="133:13" pos:end="133:28">case <expr pos:start="133:18" pos:end="133:27"><literal type="number" pos:start="133:18" pos:end="133:27">0x08000000</literal></expr>:</case>

                <expr_stmt pos:start="135:17" pos:end="135:47"><expr pos:start="135:17" pos:end="135:46"><name pos:start="135:17" pos:end="135:29"><name pos:start="135:17" pos:end="135:20">info</name><operator pos:start="135:21" pos:end="135:21">.</operator><name pos:start="135:22" pos:end="135:29">si_signo</name></name> <operator pos:start="135:31" pos:end="135:31">=</operator> <name pos:start="135:33" pos:end="135:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:34"><expr pos:start="137:17" pos:end="137:33"><name pos:start="137:17" pos:end="137:29"><name pos:start="137:17" pos:end="137:20">info</name><operator pos:start="137:21" pos:end="137:21">.</operator><name pos:start="137:22" pos:end="137:29">si_errno</name></name> <operator pos:start="137:31" pos:end="137:31">=</operator> <literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:50"><expr pos:start="139:17" pos:end="139:49"><name pos:start="139:17" pos:end="139:28"><name pos:start="139:17" pos:end="139:20">info</name><operator pos:start="139:21" pos:end="139:21">.</operator><name pos:start="139:22" pos:end="139:28">si_code</name></name> <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:49">TARGET_SEGV_ACCERR</name></expr>;</expr_stmt>

                <break pos:start="141:17" pos:end="141:22">break;</break>

            <default pos:start="143:13" pos:end="143:20">default:</default>

                <comment type="block" pos:start="145:17" pos:end="145:54">/* Let's send a regular segfault... */</comment>

                <expr_stmt pos:start="147:17" pos:end="149:43"><expr pos:start="147:17" pos:end="149:42"><call pos:start="147:17" pos:end="149:42"><name pos:start="147:17" pos:end="147:25">EXCP_DUMP</name><argument_list pos:start="147:26" pos:end="149:42">(<argument pos:start="147:27" pos:end="147:29"><expr pos:start="147:27" pos:end="147:29"><name pos:start="147:27" pos:end="147:29">env</name></expr></argument>, <argument pos:start="147:32" pos:end="147:64"><expr pos:start="147:32" pos:end="147:64"><literal type="string" pos:start="147:32" pos:end="147:64">"Invalid segfault errno (%02x)\n"</literal></expr></argument>,

                          <argument pos:start="149:27" pos:end="149:41"><expr pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:29">env</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:41">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:47"><expr pos:start="151:17" pos:end="151:46"><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:20">info</name><operator pos:start="151:21" pos:end="151:21">.</operator><name pos:start="151:22" pos:end="151:29">si_signo</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:34"><expr pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:20">info</name><operator pos:start="153:21" pos:end="153:21">.</operator><name pos:start="153:22" pos:end="153:29">si_errno</name></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <literal type="number" pos:start="153:33" pos:end="153:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:50"><expr pos:start="155:17" pos:end="155:49"><name pos:start="155:17" pos:end="155:28"><name pos:start="155:17" pos:end="155:20">info</name><operator pos:start="155:21" pos:end="155:21">.</operator><name pos:start="155:22" pos:end="155:28">si_code</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <break pos:start="157:17" pos:end="157:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="161:13" pos:end="161:58"><expr pos:start="161:13" pos:end="161:57"><name pos:start="161:13" pos:end="161:42"><name pos:start="161:13" pos:end="161:16">info</name><operator pos:start="161:17" pos:end="161:17">.</operator><name pos:start="161:18" pos:end="161:26">_sifields</name><operator pos:start="161:27" pos:end="161:27">.</operator><name pos:start="161:28" pos:end="161:36">_sigfault</name><operator pos:start="161:37" pos:end="161:37">.</operator><name pos:start="161:38" pos:end="161:42">_addr</name></name> <operator pos:start="161:44" pos:end="161:44">=</operator> <name pos:start="161:46" pos:end="161:53"><name pos:start="161:46" pos:end="161:48">env</name><operator pos:start="161:49" pos:end="161:50">-&gt;</operator><name pos:start="161:51" pos:end="161:53">nip</name></name> <operator pos:start="161:55" pos:end="161:55">-</operator> <literal type="number" pos:start="161:57" pos:end="161:57">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:52"><expr pos:start="163:13" pos:end="163:51"><call pos:start="163:13" pos:end="163:51"><name pos:start="163:13" pos:end="163:24">queue_signal</name><argument_list pos:start="163:25" pos:end="163:51">(<argument pos:start="163:26" pos:end="163:28"><expr pos:start="163:26" pos:end="163:28"><name pos:start="163:26" pos:end="163:28">env</name></expr></argument>, <argument pos:start="163:31" pos:end="163:43"><expr pos:start="163:31" pos:end="163:43"><name pos:start="163:31" pos:end="163:43"><name pos:start="163:31" pos:end="163:34">info</name><operator pos:start="163:35" pos:end="163:35">.</operator><name pos:start="163:36" pos:end="163:43">si_signo</name></name></expr></argument>, <argument pos:start="163:46" pos:end="163:50"><expr pos:start="163:46" pos:end="163:50"><operator pos:start="163:46" pos:end="163:46">&amp;</operator><name pos:start="163:47" pos:end="163:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:35">case <expr pos:start="167:14" pos:end="167:34"><name pos:start="167:14" pos:end="167:34">POWERPC_EXCP_EXTERNAL</name></expr>:</case> <comment type="block" pos:start="167:37" pos:end="167:79">/* External input                        */</comment>

            <expr_stmt pos:start="169:13" pos:end="171:36"><expr pos:start="169:13" pos:end="171:35"><call pos:start="169:13" pos:end="171:35"><name pos:start="169:13" pos:end="169:21">cpu_abort</name><argument_list pos:start="169:22" pos:end="171:35">(<argument pos:start="169:23" pos:end="169:24"><expr pos:start="169:23" pos:end="169:24"><name pos:start="169:23" pos:end="169:24">cs</name></expr></argument>, <argument pos:start="169:27" pos:end="171:34"><expr pos:start="169:27" pos:end="171:34"><literal type="string" pos:start="169:27" pos:end="169:67">"External interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="171:23" pos:end="171:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:32">case <expr pos:start="175:14" pos:end="175:31"><name pos:start="175:14" pos:end="175:31">POWERPC_EXCP_ALIGN</name></expr>:</case>    <comment type="block" pos:start="175:37" pos:end="175:79">/* Alignment exception                   */</comment>

            <expr_stmt pos:start="177:13" pos:end="177:56"><expr pos:start="177:13" pos:end="177:55"><call pos:start="177:13" pos:end="177:55"><name pos:start="177:13" pos:end="177:21">EXCP_DUMP</name><argument_list pos:start="177:22" pos:end="177:55">(<argument pos:start="177:23" pos:end="177:25"><expr pos:start="177:23" pos:end="177:25"><name pos:start="177:23" pos:end="177:25">env</name></expr></argument>, <argument pos:start="177:28" pos:end="177:54"><expr pos:start="177:28" pos:end="177:54"><literal type="string" pos:start="177:28" pos:end="177:54">"Unaligned memory access\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="179:13" pos:end="179:33">/* XXX: check this */</comment>

            <expr_stmt pos:start="181:13" pos:end="181:42"><expr pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:16">info</name><operator pos:start="181:17" pos:end="181:17">.</operator><name pos:start="181:18" pos:end="181:25">si_signo</name></name> <operator pos:start="181:27" pos:end="181:27">=</operator> <name pos:start="181:29" pos:end="181:41">TARGET_SIGBUS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:30"><expr pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:16">info</name><operator pos:start="183:17" pos:end="183:17">.</operator><name pos:start="183:18" pos:end="183:25">si_errno</name></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <literal type="number" pos:start="183:29" pos:end="183:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:45"><expr pos:start="185:13" pos:end="185:44"><name pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:16">info</name><operator pos:start="185:17" pos:end="185:17">.</operator><name pos:start="185:18" pos:end="185:24">si_code</name></name> <operator pos:start="185:26" pos:end="185:26">=</operator> <name pos:start="185:28" pos:end="185:44">TARGET_BUS_ADRALN</name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:54"><expr pos:start="187:13" pos:end="187:53"><name pos:start="187:13" pos:end="187:42"><name pos:start="187:13" pos:end="187:16">info</name><operator pos:start="187:17" pos:end="187:17">.</operator><name pos:start="187:18" pos:end="187:26">_sifields</name><operator pos:start="187:27" pos:end="187:27">.</operator><name pos:start="187:28" pos:end="187:36">_sigfault</name><operator pos:start="187:37" pos:end="187:37">.</operator><name pos:start="187:38" pos:end="187:42">_addr</name></name> <operator pos:start="187:44" pos:end="187:44">=</operator> <name pos:start="187:46" pos:end="187:53"><name pos:start="187:46" pos:end="187:48">env</name><operator pos:start="187:49" pos:end="187:50">-&gt;</operator><name pos:start="187:51" pos:end="187:53">nip</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:52"><expr pos:start="189:13" pos:end="189:51"><call pos:start="189:13" pos:end="189:51"><name pos:start="189:13" pos:end="189:24">queue_signal</name><argument_list pos:start="189:25" pos:end="189:51">(<argument pos:start="189:26" pos:end="189:28"><expr pos:start="189:26" pos:end="189:28"><name pos:start="189:26" pos:end="189:28">env</name></expr></argument>, <argument pos:start="189:31" pos:end="189:43"><expr pos:start="189:31" pos:end="189:43"><name pos:start="189:31" pos:end="189:43"><name pos:start="189:31" pos:end="189:34">info</name><operator pos:start="189:35" pos:end="189:35">.</operator><name pos:start="189:36" pos:end="189:43">si_signo</name></name></expr></argument>, <argument pos:start="189:46" pos:end="189:50"><expr pos:start="189:46" pos:end="189:50"><operator pos:start="189:46" pos:end="189:46">&amp;</operator><name pos:start="189:47" pos:end="189:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="191:13" pos:end="191:18">break;</break>

        <case pos:start="193:9" pos:end="193:34">case <expr pos:start="193:14" pos:end="193:33"><name pos:start="193:14" pos:end="193:33">POWERPC_EXCP_PROGRAM</name></expr>:</case>  <comment type="block" pos:start="193:37" pos:end="193:79">/* Program exception                     */</comment>


            <comment type="block" pos:start="196:13" pos:end="196:33">/* XXX: check this */</comment>

            <switch pos:start="198:13" pos:end="372:13">switch <condition pos:start="198:20" pos:end="198:43">(<expr pos:start="198:21" pos:end="198:42"><name pos:start="198:21" pos:end="198:35"><name pos:start="198:21" pos:end="198:23">env</name><operator pos:start="198:24" pos:end="198:25">-&gt;</operator><name pos:start="198:26" pos:end="198:35">error_code</name></name> <operator pos:start="198:37" pos:end="198:37">&amp;</operator> <operator pos:start="198:39" pos:end="198:39">~</operator><literal type="number" pos:start="198:40" pos:end="198:42">0xF</literal></expr>)</condition> <block pos:start="198:45" pos:end="372:13">{<block_content pos:start="200:13" pos:end="370:22">

            <case pos:start="200:13" pos:end="200:33">case <expr pos:start="200:18" pos:end="200:32"><name pos:start="200:18" pos:end="200:32">POWERPC_EXCP_FP</name></expr>:</case>

                <expr_stmt pos:start="202:17" pos:end="202:69"><expr pos:start="202:17" pos:end="202:68"><call pos:start="202:17" pos:end="202:68"><name pos:start="202:17" pos:end="202:25">EXCP_DUMP</name><argument_list pos:start="202:26" pos:end="202:68">(<argument pos:start="202:27" pos:end="202:29"><expr pos:start="202:27" pos:end="202:29"><name pos:start="202:27" pos:end="202:29">env</name></expr></argument>, <argument pos:start="202:32" pos:end="202:67"><expr pos:start="202:32" pos:end="202:67"><literal type="string" pos:start="202:32" pos:end="202:67">"Floating point program exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="204:17" pos:end="204:46"><expr pos:start="204:17" pos:end="204:45"><name pos:start="204:17" pos:end="204:29"><name pos:start="204:17" pos:end="204:20">info</name><operator pos:start="204:21" pos:end="204:21">.</operator><name pos:start="204:22" pos:end="204:29">si_signo</name></name> <operator pos:start="204:31" pos:end="204:31">=</operator> <name pos:start="204:33" pos:end="204:45">TARGET_SIGFPE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="206:17" pos:end="206:34"><expr pos:start="206:17" pos:end="206:33"><name pos:start="206:17" pos:end="206:29"><name pos:start="206:17" pos:end="206:20">info</name><operator pos:start="206:21" pos:end="206:21">.</operator><name pos:start="206:22" pos:end="206:29">si_errno</name></name> <operator pos:start="206:31" pos:end="206:31">=</operator> <literal type="number" pos:start="206:33" pos:end="206:33">0</literal></expr>;</expr_stmt>

                <switch pos:start="208:17" pos:end="268:17">switch <condition pos:start="208:24" pos:end="208:46">(<expr pos:start="208:25" pos:end="208:45"><name pos:start="208:25" pos:end="208:39"><name pos:start="208:25" pos:end="208:27">env</name><operator pos:start="208:28" pos:end="208:29">-&gt;</operator><name pos:start="208:30" pos:end="208:39">error_code</name></name> <operator pos:start="208:41" pos:end="208:41">&amp;</operator> <literal type="number" pos:start="208:43" pos:end="208:45">0xF</literal></expr>)</condition> <block pos:start="208:48" pos:end="268:17">{<block_content pos:start="210:17" pos:end="266:26">

                <case pos:start="210:17" pos:end="210:40">case <expr pos:start="210:22" pos:end="210:39"><name pos:start="210:22" pos:end="210:39">POWERPC_EXCP_FP_OX</name></expr>:</case>

                    <expr_stmt pos:start="212:21" pos:end="212:53"><expr pos:start="212:21" pos:end="212:52"><name pos:start="212:21" pos:end="212:32"><name pos:start="212:21" pos:end="212:24">info</name><operator pos:start="212:25" pos:end="212:25">.</operator><name pos:start="212:26" pos:end="212:32">si_code</name></name> <operator pos:start="212:34" pos:end="212:34">=</operator> <name pos:start="212:36" pos:end="212:52">TARGET_FPE_FLTOVF</name></expr>;</expr_stmt>

                    <break pos:start="214:21" pos:end="214:26">break;</break>

                <case pos:start="216:17" pos:end="216:40">case <expr pos:start="216:22" pos:end="216:39"><name pos:start="216:22" pos:end="216:39">POWERPC_EXCP_FP_UX</name></expr>:</case>

                    <expr_stmt pos:start="218:21" pos:end="218:53"><expr pos:start="218:21" pos:end="218:52"><name pos:start="218:21" pos:end="218:32"><name pos:start="218:21" pos:end="218:24">info</name><operator pos:start="218:25" pos:end="218:25">.</operator><name pos:start="218:26" pos:end="218:32">si_code</name></name> <operator pos:start="218:34" pos:end="218:34">=</operator> <name pos:start="218:36" pos:end="218:52">TARGET_FPE_FLTUND</name></expr>;</expr_stmt>

                    <break pos:start="220:21" pos:end="220:26">break;</break>

                <case pos:start="222:17" pos:end="222:40">case <expr pos:start="222:22" pos:end="222:39"><name pos:start="222:22" pos:end="222:39">POWERPC_EXCP_FP_ZX</name></expr>:</case>

                <case pos:start="224:17" pos:end="224:43">case <expr pos:start="224:22" pos:end="224:42"><name pos:start="224:22" pos:end="224:42">POWERPC_EXCP_FP_VXZDZ</name></expr>:</case>

                    <expr_stmt pos:start="226:21" pos:end="226:53"><expr pos:start="226:21" pos:end="226:52"><name pos:start="226:21" pos:end="226:32"><name pos:start="226:21" pos:end="226:24">info</name><operator pos:start="226:25" pos:end="226:25">.</operator><name pos:start="226:26" pos:end="226:32">si_code</name></name> <operator pos:start="226:34" pos:end="226:34">=</operator> <name pos:start="226:36" pos:end="226:52">TARGET_FPE_FLTDIV</name></expr>;</expr_stmt>

                    <break pos:start="228:21" pos:end="228:26">break;</break>

                <case pos:start="230:17" pos:end="230:40">case <expr pos:start="230:22" pos:end="230:39"><name pos:start="230:22" pos:end="230:39">POWERPC_EXCP_FP_XX</name></expr>:</case>

                    <expr_stmt pos:start="232:21" pos:end="232:53"><expr pos:start="232:21" pos:end="232:52"><name pos:start="232:21" pos:end="232:32"><name pos:start="232:21" pos:end="232:24">info</name><operator pos:start="232:25" pos:end="232:25">.</operator><name pos:start="232:26" pos:end="232:32">si_code</name></name> <operator pos:start="232:34" pos:end="232:34">=</operator> <name pos:start="232:36" pos:end="232:52">TARGET_FPE_FLTRES</name></expr>;</expr_stmt>

                    <break pos:start="234:21" pos:end="234:26">break;</break>

                <case pos:start="236:17" pos:end="236:44">case <expr pos:start="236:22" pos:end="236:43"><name pos:start="236:22" pos:end="236:43">POWERPC_EXCP_FP_VXSOFT</name></expr>:</case>

                    <expr_stmt pos:start="238:21" pos:end="238:53"><expr pos:start="238:21" pos:end="238:52"><name pos:start="238:21" pos:end="238:32"><name pos:start="238:21" pos:end="238:24">info</name><operator pos:start="238:25" pos:end="238:25">.</operator><name pos:start="238:26" pos:end="238:32">si_code</name></name> <operator pos:start="238:34" pos:end="238:34">=</operator> <name pos:start="238:36" pos:end="238:52">TARGET_FPE_FLTINV</name></expr>;</expr_stmt>

                    <break pos:start="240:21" pos:end="240:26">break;</break>

                <case pos:start="242:17" pos:end="242:44">case <expr pos:start="242:22" pos:end="242:43"><name pos:start="242:22" pos:end="242:43">POWERPC_EXCP_FP_VXSNAN</name></expr>:</case>

                <case pos:start="244:17" pos:end="244:43">case <expr pos:start="244:22" pos:end="244:42"><name pos:start="244:22" pos:end="244:42">POWERPC_EXCP_FP_VXISI</name></expr>:</case>

                <case pos:start="246:17" pos:end="246:43">case <expr pos:start="246:22" pos:end="246:42"><name pos:start="246:22" pos:end="246:42">POWERPC_EXCP_FP_VXIDI</name></expr>:</case>

                <case pos:start="248:17" pos:end="248:43">case <expr pos:start="248:22" pos:end="248:42"><name pos:start="248:22" pos:end="248:42">POWERPC_EXCP_FP_VXIMZ</name></expr>:</case>

                <case pos:start="250:17" pos:end="250:42">case <expr pos:start="250:22" pos:end="250:41"><name pos:start="250:22" pos:end="250:41">POWERPC_EXCP_FP_VXVC</name></expr>:</case>

                <case pos:start="252:17" pos:end="252:44">case <expr pos:start="252:22" pos:end="252:43"><name pos:start="252:22" pos:end="252:43">POWERPC_EXCP_FP_VXSQRT</name></expr>:</case>

                <case pos:start="254:17" pos:end="254:43">case <expr pos:start="254:22" pos:end="254:42"><name pos:start="254:22" pos:end="254:42">POWERPC_EXCP_FP_VXCVI</name></expr>:</case>

                    <expr_stmt pos:start="256:21" pos:end="256:53"><expr pos:start="256:21" pos:end="256:52"><name pos:start="256:21" pos:end="256:32"><name pos:start="256:21" pos:end="256:24">info</name><operator pos:start="256:25" pos:end="256:25">.</operator><name pos:start="256:26" pos:end="256:32">si_code</name></name> <operator pos:start="256:34" pos:end="256:34">=</operator> <name pos:start="256:36" pos:end="256:52">TARGET_FPE_FLTSUB</name></expr>;</expr_stmt>

                    <break pos:start="258:21" pos:end="258:26">break;</break>

                <default pos:start="260:17" pos:end="260:24">default:</default>

                    <expr_stmt pos:start="262:21" pos:end="264:47"><expr pos:start="262:21" pos:end="264:46"><call pos:start="262:21" pos:end="264:46"><name pos:start="262:21" pos:end="262:29">EXCP_DUMP</name><argument_list pos:start="262:30" pos:end="264:46">(<argument pos:start="262:31" pos:end="262:33"><expr pos:start="262:31" pos:end="262:33"><name pos:start="262:31" pos:end="262:33">env</name></expr></argument>, <argument pos:start="262:36" pos:end="262:78"><expr pos:start="262:36" pos:end="262:78"><literal type="string" pos:start="262:36" pos:end="262:78">"Unknown floating point exception (%02x)\n"</literal></expr></argument>,

                              <argument pos:start="264:31" pos:end="264:45"><expr pos:start="264:31" pos:end="264:45"><name pos:start="264:31" pos:end="264:45"><name pos:start="264:31" pos:end="264:33">env</name><operator pos:start="264:34" pos:end="264:35">-&gt;</operator><name pos:start="264:36" pos:end="264:45">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="266:21" pos:end="266:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="270:17" pos:end="270:22">break;</break>

            <case pos:start="272:13" pos:end="272:36">case <expr pos:start="272:18" pos:end="272:35"><name pos:start="272:18" pos:end="272:35">POWERPC_EXCP_INVAL</name></expr>:</case>

                <expr_stmt pos:start="274:17" pos:end="274:56"><expr pos:start="274:17" pos:end="274:55"><call pos:start="274:17" pos:end="274:55"><name pos:start="274:17" pos:end="274:25">EXCP_DUMP</name><argument_list pos:start="274:26" pos:end="274:55">(<argument pos:start="274:27" pos:end="274:29"><expr pos:start="274:27" pos:end="274:29"><name pos:start="274:27" pos:end="274:29">env</name></expr></argument>, <argument pos:start="274:32" pos:end="274:54"><expr pos:start="274:32" pos:end="274:54"><literal type="string" pos:start="274:32" pos:end="274:54">"Invalid instruction\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="276:17" pos:end="276:46"><expr pos:start="276:17" pos:end="276:45"><name pos:start="276:17" pos:end="276:29"><name pos:start="276:17" pos:end="276:20">info</name><operator pos:start="276:21" pos:end="276:21">.</operator><name pos:start="276:22" pos:end="276:29">si_signo</name></name> <operator pos:start="276:31" pos:end="276:31">=</operator> <name pos:start="276:33" pos:end="276:45">TARGET_SIGILL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="278:17" pos:end="278:34"><expr pos:start="278:17" pos:end="278:33"><name pos:start="278:17" pos:end="278:29"><name pos:start="278:17" pos:end="278:20">info</name><operator pos:start="278:21" pos:end="278:21">.</operator><name pos:start="278:22" pos:end="278:29">si_errno</name></name> <operator pos:start="278:31" pos:end="278:31">=</operator> <literal type="number" pos:start="278:33" pos:end="278:33">0</literal></expr>;</expr_stmt>

                <switch pos:start="280:17" pos:end="316:17">switch <condition pos:start="280:24" pos:end="280:46">(<expr pos:start="280:25" pos:end="280:45"><name pos:start="280:25" pos:end="280:39"><name pos:start="280:25" pos:end="280:27">env</name><operator pos:start="280:28" pos:end="280:29">-&gt;</operator><name pos:start="280:30" pos:end="280:39">error_code</name></name> <operator pos:start="280:41" pos:end="280:41">&amp;</operator> <literal type="number" pos:start="280:43" pos:end="280:45">0xF</literal></expr>)</condition> <block pos:start="280:48" pos:end="316:17">{<block_content pos:start="282:17" pos:end="314:26">

                <case pos:start="282:17" pos:end="282:46">case <expr pos:start="282:22" pos:end="282:45"><name pos:start="282:22" pos:end="282:45">POWERPC_EXCP_INVAL_INVAL</name></expr>:</case>

                    <expr_stmt pos:start="284:21" pos:end="284:53"><expr pos:start="284:21" pos:end="284:52"><name pos:start="284:21" pos:end="284:32"><name pos:start="284:21" pos:end="284:24">info</name><operator pos:start="284:25" pos:end="284:25">.</operator><name pos:start="284:26" pos:end="284:32">si_code</name></name> <operator pos:start="284:34" pos:end="284:34">=</operator> <name pos:start="284:36" pos:end="284:52">TARGET_ILL_ILLOPC</name></expr>;</expr_stmt>

                    <break pos:start="286:21" pos:end="286:26">break;</break>

                <case pos:start="288:17" pos:end="288:45">case <expr pos:start="288:22" pos:end="288:44"><name pos:start="288:22" pos:end="288:44">POWERPC_EXCP_INVAL_LSWX</name></expr>:</case>

                    <expr_stmt pos:start="290:21" pos:end="290:53"><expr pos:start="290:21" pos:end="290:52"><name pos:start="290:21" pos:end="290:32"><name pos:start="290:21" pos:end="290:24">info</name><operator pos:start="290:25" pos:end="290:25">.</operator><name pos:start="290:26" pos:end="290:32">si_code</name></name> <operator pos:start="290:34" pos:end="290:34">=</operator> <name pos:start="290:36" pos:end="290:52">TARGET_ILL_ILLOPN</name></expr>;</expr_stmt>

                    <break pos:start="292:21" pos:end="292:26">break;</break>

                <case pos:start="294:17" pos:end="294:44">case <expr pos:start="294:22" pos:end="294:43"><name pos:start="294:22" pos:end="294:43">POWERPC_EXCP_INVAL_SPR</name></expr>:</case>

                    <expr_stmt pos:start="296:21" pos:end="296:53"><expr pos:start="296:21" pos:end="296:52"><name pos:start="296:21" pos:end="296:32"><name pos:start="296:21" pos:end="296:24">info</name><operator pos:start="296:25" pos:end="296:25">.</operator><name pos:start="296:26" pos:end="296:32">si_code</name></name> <operator pos:start="296:34" pos:end="296:34">=</operator> <name pos:start="296:36" pos:end="296:52">TARGET_ILL_PRVREG</name></expr>;</expr_stmt>

                    <break pos:start="298:21" pos:end="298:26">break;</break>

                <case pos:start="300:17" pos:end="300:43">case <expr pos:start="300:22" pos:end="300:42"><name pos:start="300:22" pos:end="300:42">POWERPC_EXCP_INVAL_FP</name></expr>:</case>

                    <expr_stmt pos:start="302:21" pos:end="302:53"><expr pos:start="302:21" pos:end="302:52"><name pos:start="302:21" pos:end="302:32"><name pos:start="302:21" pos:end="302:24">info</name><operator pos:start="302:25" pos:end="302:25">.</operator><name pos:start="302:26" pos:end="302:32">si_code</name></name> <operator pos:start="302:34" pos:end="302:34">=</operator> <name pos:start="302:36" pos:end="302:52">TARGET_ILL_COPROC</name></expr>;</expr_stmt>

                    <break pos:start="304:21" pos:end="304:26">break;</break>

                <default pos:start="306:17" pos:end="306:24">default:</default>

                    <expr_stmt pos:start="308:21" pos:end="310:53"><expr pos:start="308:21" pos:end="310:52"><call pos:start="308:21" pos:end="310:52"><name pos:start="308:21" pos:end="308:29">EXCP_DUMP</name><argument_list pos:start="308:30" pos:end="310:52">(<argument pos:start="308:31" pos:end="308:33"><expr pos:start="308:31" pos:end="308:33"><name pos:start="308:31" pos:end="308:33">env</name></expr></argument>, <argument pos:start="308:36" pos:end="308:71"><expr pos:start="308:36" pos:end="308:71"><literal type="string" pos:start="308:36" pos:end="308:71">"Unknown invalid operation (%02x)\n"</literal></expr></argument>,

                              <argument pos:start="310:31" pos:end="310:51"><expr pos:start="310:31" pos:end="310:51"><name pos:start="310:31" pos:end="310:45"><name pos:start="310:31" pos:end="310:33">env</name><operator pos:start="310:34" pos:end="310:35">-&gt;</operator><name pos:start="310:36" pos:end="310:45">error_code</name></name> <operator pos:start="310:47" pos:end="310:47">&amp;</operator> <literal type="number" pos:start="310:49" pos:end="310:51">0xF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="312:21" pos:end="312:53"><expr pos:start="312:21" pos:end="312:52"><name pos:start="312:21" pos:end="312:32"><name pos:start="312:21" pos:end="312:24">info</name><operator pos:start="312:25" pos:end="312:25">.</operator><name pos:start="312:26" pos:end="312:32">si_code</name></name> <operator pos:start="312:34" pos:end="312:34">=</operator> <name pos:start="312:36" pos:end="312:52">TARGET_ILL_ILLADR</name></expr>;</expr_stmt>

                    <break pos:start="314:21" pos:end="314:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="318:17" pos:end="318:22">break;</break>

            <case pos:start="320:13" pos:end="320:35">case <expr pos:start="320:18" pos:end="320:34"><name pos:start="320:18" pos:end="320:34">POWERPC_EXCP_PRIV</name></expr>:</case>

                <expr_stmt pos:start="322:17" pos:end="322:56"><expr pos:start="322:17" pos:end="322:55"><call pos:start="322:17" pos:end="322:55"><name pos:start="322:17" pos:end="322:25">EXCP_DUMP</name><argument_list pos:start="322:26" pos:end="322:55">(<argument pos:start="322:27" pos:end="322:29"><expr pos:start="322:27" pos:end="322:29"><name pos:start="322:27" pos:end="322:29">env</name></expr></argument>, <argument pos:start="322:32" pos:end="322:54"><expr pos:start="322:32" pos:end="322:54"><literal type="string" pos:start="322:32" pos:end="322:54">"Privilege violation\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="324:17" pos:end="324:46"><expr pos:start="324:17" pos:end="324:45"><name pos:start="324:17" pos:end="324:29"><name pos:start="324:17" pos:end="324:20">info</name><operator pos:start="324:21" pos:end="324:21">.</operator><name pos:start="324:22" pos:end="324:29">si_signo</name></name> <operator pos:start="324:31" pos:end="324:31">=</operator> <name pos:start="324:33" pos:end="324:45">TARGET_SIGILL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="326:17" pos:end="326:34"><expr pos:start="326:17" pos:end="326:33"><name pos:start="326:17" pos:end="326:29"><name pos:start="326:17" pos:end="326:20">info</name><operator pos:start="326:21" pos:end="326:21">.</operator><name pos:start="326:22" pos:end="326:29">si_errno</name></name> <operator pos:start="326:31" pos:end="326:31">=</operator> <literal type="number" pos:start="326:33" pos:end="326:33">0</literal></expr>;</expr_stmt>

                <switch pos:start="328:17" pos:end="352:17">switch <condition pos:start="328:24" pos:end="328:46">(<expr pos:start="328:25" pos:end="328:45"><name pos:start="328:25" pos:end="328:39"><name pos:start="328:25" pos:end="328:27">env</name><operator pos:start="328:28" pos:end="328:29">-&gt;</operator><name pos:start="328:30" pos:end="328:39">error_code</name></name> <operator pos:start="328:41" pos:end="328:41">&amp;</operator> <literal type="number" pos:start="328:43" pos:end="328:45">0xF</literal></expr>)</condition> <block pos:start="328:48" pos:end="352:17">{<block_content pos:start="330:17" pos:end="350:26">

                <case pos:start="330:17" pos:end="330:43">case <expr pos:start="330:22" pos:end="330:42"><name pos:start="330:22" pos:end="330:42">POWERPC_EXCP_PRIV_OPC</name></expr>:</case>

                    <expr_stmt pos:start="332:21" pos:end="332:53"><expr pos:start="332:21" pos:end="332:52"><name pos:start="332:21" pos:end="332:32"><name pos:start="332:21" pos:end="332:24">info</name><operator pos:start="332:25" pos:end="332:25">.</operator><name pos:start="332:26" pos:end="332:32">si_code</name></name> <operator pos:start="332:34" pos:end="332:34">=</operator> <name pos:start="332:36" pos:end="332:52">TARGET_ILL_PRVOPC</name></expr>;</expr_stmt>

                    <break pos:start="334:21" pos:end="334:26">break;</break>

                <case pos:start="336:17" pos:end="336:43">case <expr pos:start="336:22" pos:end="336:42"><name pos:start="336:22" pos:end="336:42">POWERPC_EXCP_PRIV_REG</name></expr>:</case>

                    <expr_stmt pos:start="338:21" pos:end="338:53"><expr pos:start="338:21" pos:end="338:52"><name pos:start="338:21" pos:end="338:32"><name pos:start="338:21" pos:end="338:24">info</name><operator pos:start="338:25" pos:end="338:25">.</operator><name pos:start="338:26" pos:end="338:32">si_code</name></name> <operator pos:start="338:34" pos:end="338:34">=</operator> <name pos:start="338:36" pos:end="338:52">TARGET_ILL_PRVREG</name></expr>;</expr_stmt>

                    <break pos:start="340:21" pos:end="340:26">break;</break>

                <default pos:start="342:17" pos:end="342:24">default:</default>

                    <expr_stmt pos:start="344:21" pos:end="346:53"><expr pos:start="344:21" pos:end="346:52"><call pos:start="344:21" pos:end="346:52"><name pos:start="344:21" pos:end="344:29">EXCP_DUMP</name><argument_list pos:start="344:30" pos:end="346:52">(<argument pos:start="344:31" pos:end="344:33"><expr pos:start="344:31" pos:end="344:33"><name pos:start="344:31" pos:end="344:33">env</name></expr></argument>, <argument pos:start="344:36" pos:end="344:73"><expr pos:start="344:36" pos:end="344:73"><literal type="string" pos:start="344:36" pos:end="344:73">"Unknown privilege violation (%02x)\n"</literal></expr></argument>,

                              <argument pos:start="346:31" pos:end="346:51"><expr pos:start="346:31" pos:end="346:51"><name pos:start="346:31" pos:end="346:45"><name pos:start="346:31" pos:end="346:33">env</name><operator pos:start="346:34" pos:end="346:35">-&gt;</operator><name pos:start="346:36" pos:end="346:45">error_code</name></name> <operator pos:start="346:47" pos:end="346:47">&amp;</operator> <literal type="number" pos:start="346:49" pos:end="346:51">0xF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="348:21" pos:end="348:53"><expr pos:start="348:21" pos:end="348:52"><name pos:start="348:21" pos:end="348:32"><name pos:start="348:21" pos:end="348:24">info</name><operator pos:start="348:25" pos:end="348:25">.</operator><name pos:start="348:26" pos:end="348:32">si_code</name></name> <operator pos:start="348:34" pos:end="348:34">=</operator> <name pos:start="348:36" pos:end="348:52">TARGET_ILL_PRVOPC</name></expr>;</expr_stmt>

                    <break pos:start="350:21" pos:end="350:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="354:17" pos:end="354:22">break;</break>

            <case pos:start="356:13" pos:end="356:35">case <expr pos:start="356:18" pos:end="356:34"><name pos:start="356:18" pos:end="356:34">POWERPC_EXCP_TRAP</name></expr>:</case>

                <expr_stmt pos:start="358:17" pos:end="358:56"><expr pos:start="358:17" pos:end="358:55"><call pos:start="358:17" pos:end="358:55"><name pos:start="358:17" pos:end="358:25">cpu_abort</name><argument_list pos:start="358:26" pos:end="358:55">(<argument pos:start="358:27" pos:end="358:28"><expr pos:start="358:27" pos:end="358:28"><name pos:start="358:27" pos:end="358:28">cs</name></expr></argument>, <argument pos:start="358:31" pos:end="358:54"><expr pos:start="358:31" pos:end="358:54"><literal type="string" pos:start="358:31" pos:end="358:54">"Tried to call a TRAP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="360:17" pos:end="360:22">break;</break>

            <default pos:start="362:13" pos:end="362:20">default:</default>

                <comment type="block" pos:start="364:17" pos:end="364:41">/* Should not happen ! */</comment>

                <expr_stmt pos:start="366:17" pos:end="368:43"><expr pos:start="366:17" pos:end="368:42"><call pos:start="366:17" pos:end="368:42"><name pos:start="366:17" pos:end="366:25">cpu_abort</name><argument_list pos:start="366:26" pos:end="368:42">(<argument pos:start="366:27" pos:end="366:28"><expr pos:start="366:27" pos:end="366:28"><name pos:start="366:27" pos:end="366:28">cs</name></expr></argument>, <argument pos:start="366:31" pos:end="366:66"><expr pos:start="366:31" pos:end="366:66"><literal type="string" pos:start="366:31" pos:end="366:66">"Unknown program exception (%02x)\n"</literal></expr></argument>,

                          <argument pos:start="368:27" pos:end="368:41"><expr pos:start="368:27" pos:end="368:41"><name pos:start="368:27" pos:end="368:41"><name pos:start="368:27" pos:end="368:29">env</name><operator pos:start="368:30" pos:end="368:31">-&gt;</operator><name pos:start="368:32" pos:end="368:41">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="370:17" pos:end="370:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="374:13" pos:end="374:58"><expr pos:start="374:13" pos:end="374:57"><name pos:start="374:13" pos:end="374:42"><name pos:start="374:13" pos:end="374:16">info</name><operator pos:start="374:17" pos:end="374:17">.</operator><name pos:start="374:18" pos:end="374:26">_sifields</name><operator pos:start="374:27" pos:end="374:27">.</operator><name pos:start="374:28" pos:end="374:36">_sigfault</name><operator pos:start="374:37" pos:end="374:37">.</operator><name pos:start="374:38" pos:end="374:42">_addr</name></name> <operator pos:start="374:44" pos:end="374:44">=</operator> <name pos:start="374:46" pos:end="374:53"><name pos:start="374:46" pos:end="374:48">env</name><operator pos:start="374:49" pos:end="374:50">-&gt;</operator><name pos:start="374:51" pos:end="374:53">nip</name></name> <operator pos:start="374:55" pos:end="374:55">-</operator> <literal type="number" pos:start="374:57" pos:end="374:57">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="376:13" pos:end="376:52"><expr pos:start="376:13" pos:end="376:51"><call pos:start="376:13" pos:end="376:51"><name pos:start="376:13" pos:end="376:24">queue_signal</name><argument_list pos:start="376:25" pos:end="376:51">(<argument pos:start="376:26" pos:end="376:28"><expr pos:start="376:26" pos:end="376:28"><name pos:start="376:26" pos:end="376:28">env</name></expr></argument>, <argument pos:start="376:31" pos:end="376:43"><expr pos:start="376:31" pos:end="376:43"><name pos:start="376:31" pos:end="376:43"><name pos:start="376:31" pos:end="376:34">info</name><operator pos:start="376:35" pos:end="376:35">.</operator><name pos:start="376:36" pos:end="376:43">si_signo</name></name></expr></argument>, <argument pos:start="376:46" pos:end="376:50"><expr pos:start="376:46" pos:end="376:50"><operator pos:start="376:46" pos:end="376:46">&amp;</operator><name pos:start="376:47" pos:end="376:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="378:13" pos:end="378:18">break;</break>

        <case pos:start="380:9" pos:end="380:30">case <expr pos:start="380:14" pos:end="380:29"><name pos:start="380:14" pos:end="380:29">POWERPC_EXCP_FPU</name></expr>:</case>      <comment type="block" pos:start="380:37" pos:end="380:79">/* Floating-point unavailable exception  */</comment>

            <expr_stmt pos:start="382:13" pos:end="382:58"><expr pos:start="382:13" pos:end="382:57"><call pos:start="382:13" pos:end="382:57"><name pos:start="382:13" pos:end="382:21">EXCP_DUMP</name><argument_list pos:start="382:22" pos:end="382:57">(<argument pos:start="382:23" pos:end="382:25"><expr pos:start="382:23" pos:end="382:25"><name pos:start="382:23" pos:end="382:25">env</name></expr></argument>, <argument pos:start="382:28" pos:end="382:56"><expr pos:start="382:28" pos:end="382:56"><literal type="string" pos:start="382:28" pos:end="382:56">"No floating point allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="384:13" pos:end="384:42"><expr pos:start="384:13" pos:end="384:41"><name pos:start="384:13" pos:end="384:25"><name pos:start="384:13" pos:end="384:16">info</name><operator pos:start="384:17" pos:end="384:17">.</operator><name pos:start="384:18" pos:end="384:25">si_signo</name></name> <operator pos:start="384:27" pos:end="384:27">=</operator> <name pos:start="384:29" pos:end="384:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="386:13" pos:end="386:30"><expr pos:start="386:13" pos:end="386:29"><name pos:start="386:13" pos:end="386:25"><name pos:start="386:13" pos:end="386:16">info</name><operator pos:start="386:17" pos:end="386:17">.</operator><name pos:start="386:18" pos:end="386:25">si_errno</name></name> <operator pos:start="386:27" pos:end="386:27">=</operator> <literal type="number" pos:start="386:29" pos:end="386:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="388:13" pos:end="388:45"><expr pos:start="388:13" pos:end="388:44"><name pos:start="388:13" pos:end="388:24"><name pos:start="388:13" pos:end="388:16">info</name><operator pos:start="388:17" pos:end="388:17">.</operator><name pos:start="388:18" pos:end="388:24">si_code</name></name> <operator pos:start="388:26" pos:end="388:26">=</operator> <name pos:start="388:28" pos:end="388:44">TARGET_ILL_COPROC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="390:13" pos:end="390:58"><expr pos:start="390:13" pos:end="390:57"><name pos:start="390:13" pos:end="390:42"><name pos:start="390:13" pos:end="390:16">info</name><operator pos:start="390:17" pos:end="390:17">.</operator><name pos:start="390:18" pos:end="390:26">_sifields</name><operator pos:start="390:27" pos:end="390:27">.</operator><name pos:start="390:28" pos:end="390:36">_sigfault</name><operator pos:start="390:37" pos:end="390:37">.</operator><name pos:start="390:38" pos:end="390:42">_addr</name></name> <operator pos:start="390:44" pos:end="390:44">=</operator> <name pos:start="390:46" pos:end="390:53"><name pos:start="390:46" pos:end="390:48">env</name><operator pos:start="390:49" pos:end="390:50">-&gt;</operator><name pos:start="390:51" pos:end="390:53">nip</name></name> <operator pos:start="390:55" pos:end="390:55">-</operator> <literal type="number" pos:start="390:57" pos:end="390:57">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="392:13" pos:end="392:52"><expr pos:start="392:13" pos:end="392:51"><call pos:start="392:13" pos:end="392:51"><name pos:start="392:13" pos:end="392:24">queue_signal</name><argument_list pos:start="392:25" pos:end="392:51">(<argument pos:start="392:26" pos:end="392:28"><expr pos:start="392:26" pos:end="392:28"><name pos:start="392:26" pos:end="392:28">env</name></expr></argument>, <argument pos:start="392:31" pos:end="392:43"><expr pos:start="392:31" pos:end="392:43"><name pos:start="392:31" pos:end="392:43"><name pos:start="392:31" pos:end="392:34">info</name><operator pos:start="392:35" pos:end="392:35">.</operator><name pos:start="392:36" pos:end="392:43">si_signo</name></name></expr></argument>, <argument pos:start="392:46" pos:end="392:50"><expr pos:start="392:46" pos:end="392:50"><operator pos:start="392:46" pos:end="392:46">&amp;</operator><name pos:start="392:47" pos:end="392:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="394:13" pos:end="394:18">break;</break>

        <case pos:start="396:9" pos:end="396:34">case <expr pos:start="396:14" pos:end="396:33"><name pos:start="396:14" pos:end="396:33">POWERPC_EXCP_SYSCALL</name></expr>:</case>  <comment type="block" pos:start="396:37" pos:end="396:79">/* System call exception                 */</comment>

            <expr_stmt pos:start="398:13" pos:end="400:36"><expr pos:start="398:13" pos:end="400:35"><call pos:start="398:13" pos:end="400:35"><name pos:start="398:13" pos:end="398:21">cpu_abort</name><argument_list pos:start="398:22" pos:end="400:35">(<argument pos:start="398:23" pos:end="398:24"><expr pos:start="398:23" pos:end="398:24"><name pos:start="398:23" pos:end="398:24">cs</name></expr></argument>, <argument pos:start="398:27" pos:end="400:34"><expr pos:start="398:27" pos:end="400:34"><literal type="string" pos:start="398:27" pos:end="398:66">"Syscall exception while in user mode. "</literal>

                      <literal type="string" pos:start="400:23" pos:end="400:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="402:13" pos:end="402:18">break;</break>

        <case pos:start="404:9" pos:end="404:30">case <expr pos:start="404:14" pos:end="404:29"><name pos:start="404:14" pos:end="404:29">POWERPC_EXCP_APU</name></expr>:</case>      <comment type="block" pos:start="404:37" pos:end="404:79">/* Auxiliary processor unavailable       */</comment>

            <expr_stmt pos:start="406:13" pos:end="406:59"><expr pos:start="406:13" pos:end="406:58"><call pos:start="406:13" pos:end="406:58"><name pos:start="406:13" pos:end="406:21">EXCP_DUMP</name><argument_list pos:start="406:22" pos:end="406:58">(<argument pos:start="406:23" pos:end="406:25"><expr pos:start="406:23" pos:end="406:25"><name pos:start="406:23" pos:end="406:25">env</name></expr></argument>, <argument pos:start="406:28" pos:end="406:57"><expr pos:start="406:28" pos:end="406:57"><literal type="string" pos:start="406:28" pos:end="406:57">"No APU instruction allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="408:13" pos:end="408:42"><expr pos:start="408:13" pos:end="408:41"><name pos:start="408:13" pos:end="408:25"><name pos:start="408:13" pos:end="408:16">info</name><operator pos:start="408:17" pos:end="408:17">.</operator><name pos:start="408:18" pos:end="408:25">si_signo</name></name> <operator pos:start="408:27" pos:end="408:27">=</operator> <name pos:start="408:29" pos:end="408:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="410:13" pos:end="410:30"><expr pos:start="410:13" pos:end="410:29"><name pos:start="410:13" pos:end="410:25"><name pos:start="410:13" pos:end="410:16">info</name><operator pos:start="410:17" pos:end="410:17">.</operator><name pos:start="410:18" pos:end="410:25">si_errno</name></name> <operator pos:start="410:27" pos:end="410:27">=</operator> <literal type="number" pos:start="410:29" pos:end="410:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="412:13" pos:end="412:45"><expr pos:start="412:13" pos:end="412:44"><name pos:start="412:13" pos:end="412:24"><name pos:start="412:13" pos:end="412:16">info</name><operator pos:start="412:17" pos:end="412:17">.</operator><name pos:start="412:18" pos:end="412:24">si_code</name></name> <operator pos:start="412:26" pos:end="412:26">=</operator> <name pos:start="412:28" pos:end="412:44">TARGET_ILL_COPROC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="414:13" pos:end="414:58"><expr pos:start="414:13" pos:end="414:57"><name pos:start="414:13" pos:end="414:42"><name pos:start="414:13" pos:end="414:16">info</name><operator pos:start="414:17" pos:end="414:17">.</operator><name pos:start="414:18" pos:end="414:26">_sifields</name><operator pos:start="414:27" pos:end="414:27">.</operator><name pos:start="414:28" pos:end="414:36">_sigfault</name><operator pos:start="414:37" pos:end="414:37">.</operator><name pos:start="414:38" pos:end="414:42">_addr</name></name> <operator pos:start="414:44" pos:end="414:44">=</operator> <name pos:start="414:46" pos:end="414:53"><name pos:start="414:46" pos:end="414:48">env</name><operator pos:start="414:49" pos:end="414:50">-&gt;</operator><name pos:start="414:51" pos:end="414:53">nip</name></name> <operator pos:start="414:55" pos:end="414:55">-</operator> <literal type="number" pos:start="414:57" pos:end="414:57">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="416:13" pos:end="416:52"><expr pos:start="416:13" pos:end="416:51"><call pos:start="416:13" pos:end="416:51"><name pos:start="416:13" pos:end="416:24">queue_signal</name><argument_list pos:start="416:25" pos:end="416:51">(<argument pos:start="416:26" pos:end="416:28"><expr pos:start="416:26" pos:end="416:28"><name pos:start="416:26" pos:end="416:28">env</name></expr></argument>, <argument pos:start="416:31" pos:end="416:43"><expr pos:start="416:31" pos:end="416:43"><name pos:start="416:31" pos:end="416:43"><name pos:start="416:31" pos:end="416:34">info</name><operator pos:start="416:35" pos:end="416:35">.</operator><name pos:start="416:36" pos:end="416:43">si_signo</name></name></expr></argument>, <argument pos:start="416:46" pos:end="416:50"><expr pos:start="416:46" pos:end="416:50"><operator pos:start="416:46" pos:end="416:46">&amp;</operator><name pos:start="416:47" pos:end="416:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="418:13" pos:end="418:18">break;</break>

        <case pos:start="420:9" pos:end="420:31">case <expr pos:start="420:14" pos:end="420:30"><name pos:start="420:14" pos:end="420:30">POWERPC_EXCP_DECR</name></expr>:</case>     <comment type="block" pos:start="420:37" pos:end="420:79">/* Decrementer exception                 */</comment>

            <expr_stmt pos:start="422:13" pos:end="424:36"><expr pos:start="422:13" pos:end="424:35"><call pos:start="422:13" pos:end="424:35"><name pos:start="422:13" pos:end="422:21">cpu_abort</name><argument_list pos:start="422:22" pos:end="424:35">(<argument pos:start="422:23" pos:end="422:24"><expr pos:start="422:23" pos:end="422:24"><name pos:start="422:23" pos:end="422:24">cs</name></expr></argument>, <argument pos:start="422:27" pos:end="424:34"><expr pos:start="422:27" pos:end="424:34"><literal type="string" pos:start="422:27" pos:end="422:70">"Decrementer interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="424:23" pos:end="424:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="426:13" pos:end="426:18">break;</break>

        <case pos:start="428:9" pos:end="428:30">case <expr pos:start="428:14" pos:end="428:29"><name pos:start="428:14" pos:end="428:29">POWERPC_EXCP_FIT</name></expr>:</case>      <comment type="block" pos:start="428:37" pos:end="428:79">/* Fixed-interval timer interrupt        */</comment>

            <expr_stmt pos:start="430:13" pos:end="432:36"><expr pos:start="430:13" pos:end="432:35"><call pos:start="430:13" pos:end="432:35"><name pos:start="430:13" pos:end="430:21">cpu_abort</name><argument_list pos:start="430:22" pos:end="432:35">(<argument pos:start="430:23" pos:end="430:24"><expr pos:start="430:23" pos:end="430:24"><name pos:start="430:23" pos:end="430:24">cs</name></expr></argument>, <argument pos:start="430:27" pos:end="432:34"><expr pos:start="430:27" pos:end="432:34"><literal type="string" pos:start="430:27" pos:end="430:77">"Fix interval timer interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="432:23" pos:end="432:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="434:13" pos:end="434:18">break;</break>

        <case pos:start="436:9" pos:end="436:30">case <expr pos:start="436:14" pos:end="436:29"><name pos:start="436:14" pos:end="436:29">POWERPC_EXCP_WDT</name></expr>:</case>      <comment type="block" pos:start="436:37" pos:end="436:79">/* Watchdog timer interrupt              */</comment>

            <expr_stmt pos:start="438:13" pos:end="440:36"><expr pos:start="438:13" pos:end="440:35"><call pos:start="438:13" pos:end="440:35"><name pos:start="438:13" pos:end="438:21">cpu_abort</name><argument_list pos:start="438:22" pos:end="440:35">(<argument pos:start="438:23" pos:end="438:24"><expr pos:start="438:23" pos:end="438:24"><name pos:start="438:23" pos:end="438:24">cs</name></expr></argument>, <argument pos:start="438:27" pos:end="440:34"><expr pos:start="438:27" pos:end="440:34"><literal type="string" pos:start="438:27" pos:end="438:73">"Watchdog timer interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="440:23" pos:end="440:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="442:13" pos:end="442:18">break;</break>

        <case pos:start="444:9" pos:end="444:31">case <expr pos:start="444:14" pos:end="444:30"><name pos:start="444:14" pos:end="444:30">POWERPC_EXCP_DTLB</name></expr>:</case>     <comment type="block" pos:start="444:37" pos:end="444:79">/* Data TLB error                        */</comment>

            <expr_stmt pos:start="446:13" pos:end="448:36"><expr pos:start="446:13" pos:end="448:35"><call pos:start="446:13" pos:end="448:35"><name pos:start="446:13" pos:end="446:21">cpu_abort</name><argument_list pos:start="446:22" pos:end="448:35">(<argument pos:start="446:23" pos:end="446:24"><expr pos:start="446:23" pos:end="446:24"><name pos:start="446:23" pos:end="446:24">cs</name></expr></argument>, <argument pos:start="446:27" pos:end="448:34"><expr pos:start="446:27" pos:end="448:34"><literal type="string" pos:start="446:27" pos:end="446:67">"Data TLB exception while in user mode. "</literal>

                      <literal type="string" pos:start="448:23" pos:end="448:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="450:13" pos:end="450:18">break;</break>

        <case pos:start="452:9" pos:end="452:31">case <expr pos:start="452:14" pos:end="452:30"><name pos:start="452:14" pos:end="452:30">POWERPC_EXCP_ITLB</name></expr>:</case>     <comment type="block" pos:start="452:37" pos:end="452:79">/* Instruction TLB error                 */</comment>

            <expr_stmt pos:start="454:13" pos:end="456:36"><expr pos:start="454:13" pos:end="456:35"><call pos:start="454:13" pos:end="456:35"><name pos:start="454:13" pos:end="454:21">cpu_abort</name><argument_list pos:start="454:22" pos:end="456:35">(<argument pos:start="454:23" pos:end="454:24"><expr pos:start="454:23" pos:end="454:24"><name pos:start="454:23" pos:end="454:24">cs</name></expr></argument>, <argument pos:start="454:27" pos:end="456:34"><expr pos:start="454:27" pos:end="456:34"><literal type="string" pos:start="454:27" pos:end="454:74">"Instruction TLB exception while in user mode. "</literal>

                      <literal type="string" pos:start="456:23" pos:end="456:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="458:13" pos:end="458:18">break;</break>

        <case pos:start="460:9" pos:end="460:31">case <expr pos:start="460:14" pos:end="460:30"><name pos:start="460:14" pos:end="460:30">POWERPC_EXCP_SPEU</name></expr>:</case>     <comment type="block" pos:start="460:37" pos:end="460:79">/* SPE/embedded floating-point unavail.  */</comment>

            <expr_stmt pos:start="462:13" pos:end="462:74"><expr pos:start="462:13" pos:end="462:73"><call pos:start="462:13" pos:end="462:73"><name pos:start="462:13" pos:end="462:21">EXCP_DUMP</name><argument_list pos:start="462:22" pos:end="462:73">(<argument pos:start="462:23" pos:end="462:25"><expr pos:start="462:23" pos:end="462:25"><name pos:start="462:23" pos:end="462:25">env</name></expr></argument>, <argument pos:start="462:28" pos:end="462:72"><expr pos:start="462:28" pos:end="462:72"><literal type="string" pos:start="462:28" pos:end="462:72">"No SPE/floating-point instruction allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="464:13" pos:end="464:42"><expr pos:start="464:13" pos:end="464:41"><name pos:start="464:13" pos:end="464:25"><name pos:start="464:13" pos:end="464:16">info</name><operator pos:start="464:17" pos:end="464:17">.</operator><name pos:start="464:18" pos:end="464:25">si_signo</name></name> <operator pos:start="464:27" pos:end="464:27">=</operator> <name pos:start="464:29" pos:end="464:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="466:13" pos:end="466:30"><expr pos:start="466:13" pos:end="466:29"><name pos:start="466:13" pos:end="466:25"><name pos:start="466:13" pos:end="466:16">info</name><operator pos:start="466:17" pos:end="466:17">.</operator><name pos:start="466:18" pos:end="466:25">si_errno</name></name> <operator pos:start="466:27" pos:end="466:27">=</operator> <literal type="number" pos:start="466:29" pos:end="466:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="468:13" pos:end="468:45"><expr pos:start="468:13" pos:end="468:44"><name pos:start="468:13" pos:end="468:24"><name pos:start="468:13" pos:end="468:16">info</name><operator pos:start="468:17" pos:end="468:17">.</operator><name pos:start="468:18" pos:end="468:24">si_code</name></name> <operator pos:start="468:26" pos:end="468:26">=</operator> <name pos:start="468:28" pos:end="468:44">TARGET_ILL_COPROC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="470:13" pos:end="470:58"><expr pos:start="470:13" pos:end="470:57"><name pos:start="470:13" pos:end="470:42"><name pos:start="470:13" pos:end="470:16">info</name><operator pos:start="470:17" pos:end="470:17">.</operator><name pos:start="470:18" pos:end="470:26">_sifields</name><operator pos:start="470:27" pos:end="470:27">.</operator><name pos:start="470:28" pos:end="470:36">_sigfault</name><operator pos:start="470:37" pos:end="470:37">.</operator><name pos:start="470:38" pos:end="470:42">_addr</name></name> <operator pos:start="470:44" pos:end="470:44">=</operator> <name pos:start="470:46" pos:end="470:53"><name pos:start="470:46" pos:end="470:48">env</name><operator pos:start="470:49" pos:end="470:50">-&gt;</operator><name pos:start="470:51" pos:end="470:53">nip</name></name> <operator pos:start="470:55" pos:end="470:55">-</operator> <literal type="number" pos:start="470:57" pos:end="470:57">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="472:13" pos:end="472:52"><expr pos:start="472:13" pos:end="472:51"><call pos:start="472:13" pos:end="472:51"><name pos:start="472:13" pos:end="472:24">queue_signal</name><argument_list pos:start="472:25" pos:end="472:51">(<argument pos:start="472:26" pos:end="472:28"><expr pos:start="472:26" pos:end="472:28"><name pos:start="472:26" pos:end="472:28">env</name></expr></argument>, <argument pos:start="472:31" pos:end="472:43"><expr pos:start="472:31" pos:end="472:43"><name pos:start="472:31" pos:end="472:43"><name pos:start="472:31" pos:end="472:34">info</name><operator pos:start="472:35" pos:end="472:35">.</operator><name pos:start="472:36" pos:end="472:43">si_signo</name></name></expr></argument>, <argument pos:start="472:46" pos:end="472:50"><expr pos:start="472:46" pos:end="472:50"><operator pos:start="472:46" pos:end="472:46">&amp;</operator><name pos:start="472:47" pos:end="472:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="474:13" pos:end="474:18">break;</break>

        <case pos:start="476:9" pos:end="476:32">case <expr pos:start="476:14" pos:end="476:31"><name pos:start="476:14" pos:end="476:31">POWERPC_EXCP_EFPDI</name></expr>:</case>    <comment type="block" pos:start="476:37" pos:end="476:79">/* Embedded floating-point data IRQ      */</comment>

            <expr_stmt pos:start="478:13" pos:end="478:76"><expr pos:start="478:13" pos:end="478:75"><call pos:start="478:13" pos:end="478:75"><name pos:start="478:13" pos:end="478:21">cpu_abort</name><argument_list pos:start="478:22" pos:end="478:75">(<argument pos:start="478:23" pos:end="478:24"><expr pos:start="478:23" pos:end="478:24"><name pos:start="478:23" pos:end="478:24">cs</name></expr></argument>, <argument pos:start="478:27" pos:end="478:74"><expr pos:start="478:27" pos:end="478:74"><literal type="string" pos:start="478:27" pos:end="478:74">"Embedded floating-point data IRQ not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="480:13" pos:end="480:18">break;</break>

        <case pos:start="482:9" pos:end="482:32">case <expr pos:start="482:14" pos:end="482:31"><name pos:start="482:14" pos:end="482:31">POWERPC_EXCP_EFPRI</name></expr>:</case>    <comment type="block" pos:start="482:37" pos:end="482:79">/* Embedded floating-point round IRQ     */</comment>

            <expr_stmt pos:start="484:13" pos:end="484:77"><expr pos:start="484:13" pos:end="484:76"><call pos:start="484:13" pos:end="484:76"><name pos:start="484:13" pos:end="484:21">cpu_abort</name><argument_list pos:start="484:22" pos:end="484:76">(<argument pos:start="484:23" pos:end="484:24"><expr pos:start="484:23" pos:end="484:24"><name pos:start="484:23" pos:end="484:24">cs</name></expr></argument>, <argument pos:start="484:27" pos:end="484:75"><expr pos:start="484:27" pos:end="484:75"><literal type="string" pos:start="484:27" pos:end="484:75">"Embedded floating-point round IRQ not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="486:13" pos:end="486:18">break;</break>

        <case pos:start="488:9" pos:end="488:33">case <expr pos:start="488:14" pos:end="488:32"><name pos:start="488:14" pos:end="488:32">POWERPC_EXCP_EPERFM</name></expr>:</case>   <comment type="block" pos:start="488:37" pos:end="488:79">/* Embedded performance monitor IRQ      */</comment>

            <expr_stmt pos:start="490:13" pos:end="490:73"><expr pos:start="490:13" pos:end="490:72"><call pos:start="490:13" pos:end="490:72"><name pos:start="490:13" pos:end="490:21">cpu_abort</name><argument_list pos:start="490:22" pos:end="490:72">(<argument pos:start="490:23" pos:end="490:24"><expr pos:start="490:23" pos:end="490:24"><name pos:start="490:23" pos:end="490:24">cs</name></expr></argument>, <argument pos:start="490:27" pos:end="490:71"><expr pos:start="490:27" pos:end="490:71"><literal type="string" pos:start="490:27" pos:end="490:71">"Performance monitor exception not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="492:13" pos:end="492:18">break;</break>

        <case pos:start="494:9" pos:end="494:32">case <expr pos:start="494:14" pos:end="494:31"><name pos:start="494:14" pos:end="494:31">POWERPC_EXCP_DOORI</name></expr>:</case>    <comment type="block" pos:start="494:37" pos:end="494:79">/* Embedded doorbell interrupt           */</comment>

            <expr_stmt pos:start="496:13" pos:end="498:37"><expr pos:start="496:13" pos:end="498:36"><call pos:start="496:13" pos:end="498:36"><name pos:start="496:13" pos:end="496:21">cpu_abort</name><argument_list pos:start="496:22" pos:end="498:36">(<argument pos:start="496:23" pos:end="496:24"><expr pos:start="496:23" pos:end="496:24"><name pos:start="496:23" pos:end="496:24">cs</name></expr></argument>, <argument pos:start="496:27" pos:end="498:35"><expr pos:start="496:27" pos:end="498:35"><literal type="string" pos:start="496:27" pos:end="496:67">"Doorbell interrupt while in user mode. "</literal>

                       <literal type="string" pos:start="498:24" pos:end="498:35">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="500:13" pos:end="500:18">break;</break>

        <case pos:start="502:9" pos:end="502:33">case <expr pos:start="502:14" pos:end="502:32"><name pos:start="502:14" pos:end="502:32">POWERPC_EXCP_DOORCI</name></expr>:</case>   <comment type="block" pos:start="502:37" pos:end="502:79">/* Embedded doorbell critical interrupt  */</comment>

            <expr_stmt pos:start="504:13" pos:end="506:36"><expr pos:start="504:13" pos:end="506:35"><call pos:start="504:13" pos:end="506:35"><name pos:start="504:13" pos:end="504:21">cpu_abort</name><argument_list pos:start="504:22" pos:end="506:35">(<argument pos:start="504:23" pos:end="504:24"><expr pos:start="504:23" pos:end="504:24"><name pos:start="504:23" pos:end="504:24">cs</name></expr></argument>, <argument pos:start="504:27" pos:end="506:34"><expr pos:start="504:27" pos:end="506:34"><literal type="string" pos:start="504:27" pos:end="504:76">"Doorbell critical interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="506:23" pos:end="506:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="508:13" pos:end="508:18">break;</break>

        <case pos:start="510:9" pos:end="510:32">case <expr pos:start="510:14" pos:end="510:31"><name pos:start="510:14" pos:end="510:31">POWERPC_EXCP_RESET</name></expr>:</case>    <comment type="block" pos:start="510:37" pos:end="510:79">/* System reset exception                */</comment>

            <expr_stmt pos:start="512:13" pos:end="514:36"><expr pos:start="512:13" pos:end="514:35"><call pos:start="512:13" pos:end="514:35"><name pos:start="512:13" pos:end="512:21">cpu_abort</name><argument_list pos:start="512:22" pos:end="514:35">(<argument pos:start="512:23" pos:end="512:24"><expr pos:start="512:23" pos:end="512:24"><name pos:start="512:23" pos:end="512:24">cs</name></expr></argument>, <argument pos:start="512:27" pos:end="514:34"><expr pos:start="512:27" pos:end="514:34"><literal type="string" pos:start="512:27" pos:end="512:64">"Reset interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="514:23" pos:end="514:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="516:13" pos:end="516:18">break;</break>

        <case pos:start="518:9" pos:end="518:31">case <expr pos:start="518:14" pos:end="518:30"><name pos:start="518:14" pos:end="518:30">POWERPC_EXCP_DSEG</name></expr>:</case>     <comment type="block" pos:start="518:37" pos:end="518:79">/* Data segment exception                */</comment>

            <expr_stmt pos:start="520:13" pos:end="522:36"><expr pos:start="520:13" pos:end="522:35"><call pos:start="520:13" pos:end="522:35"><name pos:start="520:13" pos:end="520:21">cpu_abort</name><argument_list pos:start="520:22" pos:end="522:35">(<argument pos:start="520:23" pos:end="520:24"><expr pos:start="520:23" pos:end="520:24"><name pos:start="520:23" pos:end="520:24">cs</name></expr></argument>, <argument pos:start="520:27" pos:end="522:34"><expr pos:start="520:27" pos:end="522:34"><literal type="string" pos:start="520:27" pos:end="520:71">"Data segment exception while in user mode. "</literal>

                      <literal type="string" pos:start="522:23" pos:end="522:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="524:13" pos:end="524:18">break;</break>

        <case pos:start="526:9" pos:end="526:31">case <expr pos:start="526:14" pos:end="526:30"><name pos:start="526:14" pos:end="526:30">POWERPC_EXCP_ISEG</name></expr>:</case>     <comment type="block" pos:start="526:37" pos:end="526:79">/* Instruction segment exception         */</comment>

            <expr_stmt pos:start="528:13" pos:end="530:56"><expr pos:start="528:13" pos:end="530:55"><call pos:start="528:13" pos:end="530:55"><name pos:start="528:13" pos:end="528:21">cpu_abort</name><argument_list pos:start="528:22" pos:end="530:55">(<argument pos:start="528:23" pos:end="528:24"><expr pos:start="528:23" pos:end="528:24"><name pos:start="528:23" pos:end="528:24">cs</name></expr></argument>, <argument pos:start="528:27" pos:end="530:54"><expr pos:start="528:27" pos:end="530:54"><literal type="string" pos:start="528:27" pos:end="528:58">"Instruction segment exception "</literal>

                      <literal type="string" pos:start="530:23" pos:end="530:54">"while in user mode. Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="532:13" pos:end="532:18">break;</break>

        <comment type="block" pos:start="534:9" pos:end="534:53">/* PowerPC 64 with hypervisor mode support */</comment>

        <case pos:start="536:9" pos:end="536:32">case <expr pos:start="536:14" pos:end="536:31"><name pos:start="536:14" pos:end="536:31">POWERPC_EXCP_HDECR</name></expr>:</case>    <comment type="block" pos:start="536:37" pos:end="536:79">/* Hypervisor decrementer exception      */</comment>

            <expr_stmt pos:start="538:13" pos:end="540:56"><expr pos:start="538:13" pos:end="540:55"><call pos:start="538:13" pos:end="540:55"><name pos:start="538:13" pos:end="538:21">cpu_abort</name><argument_list pos:start="538:22" pos:end="540:55">(<argument pos:start="538:23" pos:end="538:24"><expr pos:start="538:23" pos:end="538:24"><name pos:start="538:23" pos:end="538:24">cs</name></expr></argument>, <argument pos:start="538:27" pos:end="540:54"><expr pos:start="538:27" pos:end="540:54"><literal type="string" pos:start="538:27" pos:end="538:61">"Hypervisor decrementer interrupt "</literal>

                      <literal type="string" pos:start="540:23" pos:end="540:54">"while in user mode. Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="542:13" pos:end="542:18">break;</break>

        <case pos:start="544:9" pos:end="544:32">case <expr pos:start="544:14" pos:end="544:31"><name pos:start="544:14" pos:end="544:31">POWERPC_EXCP_TRACE</name></expr>:</case>    <comment type="block" pos:start="544:37" pos:end="544:79">/* Trace exception                       */</comment>

            <comment type="block" pos:start="546:13" pos:end="550:15">/* Nothing to do:

             * we use this exception to emulate step-by-step execution mode.

             */</comment>

            <break pos:start="552:13" pos:end="552:18">break;</break>

        <comment type="block" pos:start="554:9" pos:end="554:53">/* PowerPC 64 with hypervisor mode support */</comment>

        <case pos:start="556:9" pos:end="556:31">case <expr pos:start="556:14" pos:end="556:30"><name pos:start="556:14" pos:end="556:30">POWERPC_EXCP_HDSI</name></expr>:</case>     <comment type="block" pos:start="556:37" pos:end="556:79">/* Hypervisor data storage exception     */</comment>

            <expr_stmt pos:start="558:13" pos:end="560:56"><expr pos:start="558:13" pos:end="560:55"><call pos:start="558:13" pos:end="560:55"><name pos:start="558:13" pos:end="558:21">cpu_abort</name><argument_list pos:start="558:22" pos:end="560:55">(<argument pos:start="558:23" pos:end="558:24"><expr pos:start="558:23" pos:end="558:24"><name pos:start="558:23" pos:end="558:24">cs</name></expr></argument>, <argument pos:start="558:27" pos:end="560:54"><expr pos:start="558:27" pos:end="560:54"><literal type="string" pos:start="558:27" pos:end="558:62">"Hypervisor data storage exception "</literal>

                      <literal type="string" pos:start="560:23" pos:end="560:54">"while in user mode. Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="562:13" pos:end="562:18">break;</break>

        <case pos:start="564:9" pos:end="564:31">case <expr pos:start="564:14" pos:end="564:30"><name pos:start="564:14" pos:end="564:30">POWERPC_EXCP_HISI</name></expr>:</case>     <comment type="block" pos:start="564:37" pos:end="564:79">/* Hypervisor instruction storage excp   */</comment>

            <expr_stmt pos:start="566:13" pos:end="568:56"><expr pos:start="566:13" pos:end="568:55"><call pos:start="566:13" pos:end="568:55"><name pos:start="566:13" pos:end="566:21">cpu_abort</name><argument_list pos:start="566:22" pos:end="568:55">(<argument pos:start="566:23" pos:end="566:24"><expr pos:start="566:23" pos:end="566:24"><name pos:start="566:23" pos:end="566:24">cs</name></expr></argument>, <argument pos:start="566:27" pos:end="568:54"><expr pos:start="566:27" pos:end="568:54"><literal type="string" pos:start="566:27" pos:end="566:69">"Hypervisor instruction storage exception "</literal>

                      <literal type="string" pos:start="568:23" pos:end="568:54">"while in user mode. Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="570:13" pos:end="570:18">break;</break>

        <case pos:start="572:9" pos:end="572:32">case <expr pos:start="572:14" pos:end="572:31"><name pos:start="572:14" pos:end="572:31">POWERPC_EXCP_HDSEG</name></expr>:</case>    <comment type="block" pos:start="572:37" pos:end="572:79">/* Hypervisor data segment exception     */</comment>

            <expr_stmt pos:start="574:13" pos:end="576:56"><expr pos:start="574:13" pos:end="576:55"><call pos:start="574:13" pos:end="576:55"><name pos:start="574:13" pos:end="574:21">cpu_abort</name><argument_list pos:start="574:22" pos:end="576:55">(<argument pos:start="574:23" pos:end="574:24"><expr pos:start="574:23" pos:end="574:24"><name pos:start="574:23" pos:end="574:24">cs</name></expr></argument>, <argument pos:start="574:27" pos:end="576:54"><expr pos:start="574:27" pos:end="576:54"><literal type="string" pos:start="574:27" pos:end="574:62">"Hypervisor data segment exception "</literal>

                      <literal type="string" pos:start="576:23" pos:end="576:54">"while in user mode. Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="578:13" pos:end="578:18">break;</break>

        <case pos:start="580:9" pos:end="580:32">case <expr pos:start="580:14" pos:end="580:31"><name pos:start="580:14" pos:end="580:31">POWERPC_EXCP_HISEG</name></expr>:</case>    <comment type="block" pos:start="580:37" pos:end="580:79">/* Hypervisor instruction segment excp   */</comment>

            <expr_stmt pos:start="582:13" pos:end="584:56"><expr pos:start="582:13" pos:end="584:55"><call pos:start="582:13" pos:end="584:55"><name pos:start="582:13" pos:end="582:21">cpu_abort</name><argument_list pos:start="582:22" pos:end="584:55">(<argument pos:start="582:23" pos:end="582:24"><expr pos:start="582:23" pos:end="582:24"><name pos:start="582:23" pos:end="582:24">cs</name></expr></argument>, <argument pos:start="582:27" pos:end="584:54"><expr pos:start="582:27" pos:end="584:54"><literal type="string" pos:start="582:27" pos:end="582:69">"Hypervisor instruction segment exception "</literal>

                      <literal type="string" pos:start="584:23" pos:end="584:54">"while in user mode. Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="586:13" pos:end="586:18">break;</break>

        <case pos:start="588:9" pos:end="588:30">case <expr pos:start="588:14" pos:end="588:29"><name pos:start="588:14" pos:end="588:29">POWERPC_EXCP_VPU</name></expr>:</case>      <comment type="block" pos:start="588:37" pos:end="588:79">/* Vector unavailable exception          */</comment>

            <expr_stmt pos:start="590:13" pos:end="590:64"><expr pos:start="590:13" pos:end="590:63"><call pos:start="590:13" pos:end="590:63"><name pos:start="590:13" pos:end="590:21">EXCP_DUMP</name><argument_list pos:start="590:22" pos:end="590:63">(<argument pos:start="590:23" pos:end="590:25"><expr pos:start="590:23" pos:end="590:25"><name pos:start="590:23" pos:end="590:25">env</name></expr></argument>, <argument pos:start="590:28" pos:end="590:62"><expr pos:start="590:28" pos:end="590:62"><literal type="string" pos:start="590:28" pos:end="590:62">"No Altivec instructions allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="592:13" pos:end="592:42"><expr pos:start="592:13" pos:end="592:41"><name pos:start="592:13" pos:end="592:25"><name pos:start="592:13" pos:end="592:16">info</name><operator pos:start="592:17" pos:end="592:17">.</operator><name pos:start="592:18" pos:end="592:25">si_signo</name></name> <operator pos:start="592:27" pos:end="592:27">=</operator> <name pos:start="592:29" pos:end="592:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="594:13" pos:end="594:30"><expr pos:start="594:13" pos:end="594:29"><name pos:start="594:13" pos:end="594:25"><name pos:start="594:13" pos:end="594:16">info</name><operator pos:start="594:17" pos:end="594:17">.</operator><name pos:start="594:18" pos:end="594:25">si_errno</name></name> <operator pos:start="594:27" pos:end="594:27">=</operator> <literal type="number" pos:start="594:29" pos:end="594:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="596:13" pos:end="596:45"><expr pos:start="596:13" pos:end="596:44"><name pos:start="596:13" pos:end="596:24"><name pos:start="596:13" pos:end="596:16">info</name><operator pos:start="596:17" pos:end="596:17">.</operator><name pos:start="596:18" pos:end="596:24">si_code</name></name> <operator pos:start="596:26" pos:end="596:26">=</operator> <name pos:start="596:28" pos:end="596:44">TARGET_ILL_COPROC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="598:13" pos:end="598:58"><expr pos:start="598:13" pos:end="598:57"><name pos:start="598:13" pos:end="598:42"><name pos:start="598:13" pos:end="598:16">info</name><operator pos:start="598:17" pos:end="598:17">.</operator><name pos:start="598:18" pos:end="598:26">_sifields</name><operator pos:start="598:27" pos:end="598:27">.</operator><name pos:start="598:28" pos:end="598:36">_sigfault</name><operator pos:start="598:37" pos:end="598:37">.</operator><name pos:start="598:38" pos:end="598:42">_addr</name></name> <operator pos:start="598:44" pos:end="598:44">=</operator> <name pos:start="598:46" pos:end="598:53"><name pos:start="598:46" pos:end="598:48">env</name><operator pos:start="598:49" pos:end="598:50">-&gt;</operator><name pos:start="598:51" pos:end="598:53">nip</name></name> <operator pos:start="598:55" pos:end="598:55">-</operator> <literal type="number" pos:start="598:57" pos:end="598:57">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="600:13" pos:end="600:52"><expr pos:start="600:13" pos:end="600:51"><call pos:start="600:13" pos:end="600:51"><name pos:start="600:13" pos:end="600:24">queue_signal</name><argument_list pos:start="600:25" pos:end="600:51">(<argument pos:start="600:26" pos:end="600:28"><expr pos:start="600:26" pos:end="600:28"><name pos:start="600:26" pos:end="600:28">env</name></expr></argument>, <argument pos:start="600:31" pos:end="600:43"><expr pos:start="600:31" pos:end="600:43"><name pos:start="600:31" pos:end="600:43"><name pos:start="600:31" pos:end="600:34">info</name><operator pos:start="600:35" pos:end="600:35">.</operator><name pos:start="600:36" pos:end="600:43">si_signo</name></name></expr></argument>, <argument pos:start="600:46" pos:end="600:50"><expr pos:start="600:46" pos:end="600:50"><operator pos:start="600:46" pos:end="600:46">&amp;</operator><name pos:start="600:47" pos:end="600:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="602:13" pos:end="602:18">break;</break>

        <case pos:start="604:9" pos:end="604:30">case <expr pos:start="604:14" pos:end="604:29"><name pos:start="604:14" pos:end="604:29">POWERPC_EXCP_PIT</name></expr>:</case>      <comment type="block" pos:start="604:37" pos:end="604:79">/* Programmable interval timer IRQ       */</comment>

            <expr_stmt pos:start="606:13" pos:end="608:56"><expr pos:start="606:13" pos:end="608:55"><call pos:start="606:13" pos:end="608:55"><name pos:start="606:13" pos:end="606:21">cpu_abort</name><argument_list pos:start="606:22" pos:end="608:55">(<argument pos:start="606:23" pos:end="606:24"><expr pos:start="606:23" pos:end="606:24"><name pos:start="606:23" pos:end="606:24">cs</name></expr></argument>, <argument pos:start="606:27" pos:end="608:54"><expr pos:start="606:27" pos:end="608:54"><literal type="string" pos:start="606:27" pos:end="606:66">"Programmable interval timer interrupt "</literal>

                      <literal type="string" pos:start="608:23" pos:end="608:54">"while in user mode. Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="610:13" pos:end="610:18">break;</break>

        <case pos:start="612:9" pos:end="612:29">case <expr pos:start="612:14" pos:end="612:28"><name pos:start="612:14" pos:end="612:28">POWERPC_EXCP_IO</name></expr>:</case>       <comment type="block" pos:start="612:37" pos:end="612:79">/* IO error exception                    */</comment>

            <expr_stmt pos:start="614:13" pos:end="616:36"><expr pos:start="614:13" pos:end="616:35"><call pos:start="614:13" pos:end="616:35"><name pos:start="614:13" pos:end="614:21">cpu_abort</name><argument_list pos:start="614:22" pos:end="616:35">(<argument pos:start="614:23" pos:end="614:24"><expr pos:start="614:23" pos:end="614:24"><name pos:start="614:23" pos:end="614:24">cs</name></expr></argument>, <argument pos:start="614:27" pos:end="616:34"><expr pos:start="614:27" pos:end="616:34"><literal type="string" pos:start="614:27" pos:end="614:67">"IO error exception while in user mode. "</literal>

                      <literal type="string" pos:start="616:23" pos:end="616:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="618:13" pos:end="618:18">break;</break>

        <case pos:start="620:9" pos:end="620:31">case <expr pos:start="620:14" pos:end="620:30"><name pos:start="620:14" pos:end="620:30">POWERPC_EXCP_RUNM</name></expr>:</case>     <comment type="block" pos:start="620:37" pos:end="620:79">/* Run mode exception                    */</comment>

            <expr_stmt pos:start="622:13" pos:end="624:36"><expr pos:start="622:13" pos:end="624:35"><call pos:start="622:13" pos:end="624:35"><name pos:start="622:13" pos:end="622:21">cpu_abort</name><argument_list pos:start="622:22" pos:end="624:35">(<argument pos:start="622:23" pos:end="622:24"><expr pos:start="622:23" pos:end="622:24"><name pos:start="622:23" pos:end="622:24">cs</name></expr></argument>, <argument pos:start="622:27" pos:end="624:34"><expr pos:start="622:27" pos:end="624:34"><literal type="string" pos:start="622:27" pos:end="622:67">"Run mode exception while in user mode. "</literal>

                      <literal type="string" pos:start="624:23" pos:end="624:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="626:13" pos:end="626:18">break;</break>

        <case pos:start="628:9" pos:end="628:31">case <expr pos:start="628:14" pos:end="628:30"><name pos:start="628:14" pos:end="628:30">POWERPC_EXCP_EMUL</name></expr>:</case>     <comment type="block" pos:start="628:37" pos:end="628:79">/* Emulation trap exception              */</comment>

            <expr_stmt pos:start="630:13" pos:end="630:68"><expr pos:start="630:13" pos:end="630:67"><call pos:start="630:13" pos:end="630:67"><name pos:start="630:13" pos:end="630:21">cpu_abort</name><argument_list pos:start="630:22" pos:end="630:67">(<argument pos:start="630:23" pos:end="630:24"><expr pos:start="630:23" pos:end="630:24"><name pos:start="630:23" pos:end="630:24">cs</name></expr></argument>, <argument pos:start="630:27" pos:end="630:66"><expr pos:start="630:27" pos:end="630:66"><literal type="string" pos:start="630:27" pos:end="630:66">"Emulation trap exception not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="632:13" pos:end="632:18">break;</break>

        <case pos:start="634:9" pos:end="634:32">case <expr pos:start="634:14" pos:end="634:31"><name pos:start="634:14" pos:end="634:31">POWERPC_EXCP_IFTLB</name></expr>:</case>    <comment type="block" pos:start="634:37" pos:end="634:79">/* Instruction fetch TLB error           */</comment>

            <expr_stmt pos:start="636:13" pos:end="638:54"><expr pos:start="636:13" pos:end="638:53"><call pos:start="636:13" pos:end="638:53"><name pos:start="636:13" pos:end="636:21">cpu_abort</name><argument_list pos:start="636:22" pos:end="638:53">(<argument pos:start="636:23" pos:end="636:24"><expr pos:start="636:23" pos:end="636:24"><name pos:start="636:23" pos:end="636:24">cs</name></expr></argument>, <argument pos:start="636:27" pos:end="638:52"><expr pos:start="636:27" pos:end="638:52"><literal type="string" pos:start="636:27" pos:end="636:60">"Instruction fetch TLB exception "</literal>

                      <literal type="string" pos:start="638:23" pos:end="638:52">"while in user-mode. Aborting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="640:13" pos:end="640:18">break;</break>

        <case pos:start="642:9" pos:end="642:32">case <expr pos:start="642:14" pos:end="642:31"><name pos:start="642:14" pos:end="642:31">POWERPC_EXCP_DLTLB</name></expr>:</case>    <comment type="block" pos:start="642:37" pos:end="642:79">/* Data load TLB miss                    */</comment>

            <expr_stmt pos:start="644:13" pos:end="646:34"><expr pos:start="644:13" pos:end="646:33"><call pos:start="644:13" pos:end="646:33"><name pos:start="644:13" pos:end="644:21">cpu_abort</name><argument_list pos:start="644:22" pos:end="646:33">(<argument pos:start="644:23" pos:end="644:24"><expr pos:start="644:23" pos:end="644:24"><name pos:start="644:23" pos:end="644:24">cs</name></expr></argument>, <argument pos:start="644:27" pos:end="646:32"><expr pos:start="644:27" pos:end="646:32"><literal type="string" pos:start="644:27" pos:end="644:72">"Data load TLB exception while in user-mode. "</literal>

                      <literal type="string" pos:start="646:23" pos:end="646:32">"Aborting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="648:13" pos:end="648:18">break;</break>

        <case pos:start="650:9" pos:end="650:32">case <expr pos:start="650:14" pos:end="650:31"><name pos:start="650:14" pos:end="650:31">POWERPC_EXCP_DSTLB</name></expr>:</case>    <comment type="block" pos:start="650:37" pos:end="650:79">/* Data store TLB miss                   */</comment>

            <expr_stmt pos:start="652:13" pos:end="654:34"><expr pos:start="652:13" pos:end="654:33"><call pos:start="652:13" pos:end="654:33"><name pos:start="652:13" pos:end="652:21">cpu_abort</name><argument_list pos:start="652:22" pos:end="654:33">(<argument pos:start="652:23" pos:end="652:24"><expr pos:start="652:23" pos:end="652:24"><name pos:start="652:23" pos:end="652:24">cs</name></expr></argument>, <argument pos:start="652:27" pos:end="654:32"><expr pos:start="652:27" pos:end="654:32"><literal type="string" pos:start="652:27" pos:end="652:73">"Data store TLB exception while in user-mode. "</literal>

                      <literal type="string" pos:start="654:23" pos:end="654:32">"Aborting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="656:13" pos:end="656:18">break;</break>

        <case pos:start="658:9" pos:end="658:30">case <expr pos:start="658:14" pos:end="658:29"><name pos:start="658:14" pos:end="658:29">POWERPC_EXCP_FPA</name></expr>:</case>      <comment type="block" pos:start="658:37" pos:end="658:79">/* Floating-point assist exception       */</comment>

            <expr_stmt pos:start="660:13" pos:end="660:75"><expr pos:start="660:13" pos:end="660:74"><call pos:start="660:13" pos:end="660:74"><name pos:start="660:13" pos:end="660:21">cpu_abort</name><argument_list pos:start="660:22" pos:end="660:74">(<argument pos:start="660:23" pos:end="660:24"><expr pos:start="660:23" pos:end="660:24"><name pos:start="660:23" pos:end="660:24">cs</name></expr></argument>, <argument pos:start="660:27" pos:end="660:73"><expr pos:start="660:27" pos:end="660:73"><literal type="string" pos:start="660:27" pos:end="660:73">"Floating-point assist exception not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="662:13" pos:end="662:18">break;</break>

        <case pos:start="664:9" pos:end="664:31">case <expr pos:start="664:14" pos:end="664:30"><name pos:start="664:14" pos:end="664:30">POWERPC_EXCP_IABR</name></expr>:</case>     <comment type="block" pos:start="664:37" pos:end="664:79">/* Instruction address breakpoint        */</comment>

            <expr_stmt pos:start="666:13" pos:end="668:39"><expr pos:start="666:13" pos:end="668:38"><call pos:start="666:13" pos:end="668:38"><name pos:start="666:13" pos:end="666:21">cpu_abort</name><argument_list pos:start="666:22" pos:end="668:38">(<argument pos:start="666:23" pos:end="666:24"><expr pos:start="666:23" pos:end="666:24"><name pos:start="666:23" pos:end="666:24">cs</name></expr></argument>, <argument pos:start="666:27" pos:end="668:37"><expr pos:start="666:27" pos:end="668:37"><literal type="string" pos:start="666:27" pos:end="666:69">"Instruction address breakpoint exception "</literal>

                      <literal type="string" pos:start="668:23" pos:end="668:37">"not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="670:13" pos:end="670:18">break;</break>

        <case pos:start="672:9" pos:end="672:30">case <expr pos:start="672:14" pos:end="672:29"><name pos:start="672:14" pos:end="672:29">POWERPC_EXCP_SMI</name></expr>:</case>      <comment type="block" pos:start="672:37" pos:end="672:79">/* System management interrupt           */</comment>

            <expr_stmt pos:start="674:13" pos:end="676:36"><expr pos:start="674:13" pos:end="676:35"><call pos:start="674:13" pos:end="676:35"><name pos:start="674:13" pos:end="674:21">cpu_abort</name><argument_list pos:start="674:22" pos:end="676:35">(<argument pos:start="674:23" pos:end="674:24"><expr pos:start="674:23" pos:end="674:24"><name pos:start="674:23" pos:end="674:24">cs</name></expr></argument>, <argument pos:start="674:27" pos:end="676:34"><expr pos:start="674:27" pos:end="676:34"><literal type="string" pos:start="674:27" pos:end="674:76">"System management interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="676:23" pos:end="676:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="678:13" pos:end="678:18">break;</break>

        <case pos:start="680:9" pos:end="680:32">case <expr pos:start="680:14" pos:end="680:31"><name pos:start="680:14" pos:end="680:31">POWERPC_EXCP_THERM</name></expr>:</case>    <comment type="block" pos:start="680:37" pos:end="680:79">/* Thermal interrupt                     */</comment>

            <expr_stmt pos:start="682:13" pos:end="684:36"><expr pos:start="682:13" pos:end="684:35"><call pos:start="682:13" pos:end="684:35"><name pos:start="682:13" pos:end="682:21">cpu_abort</name><argument_list pos:start="682:22" pos:end="684:35">(<argument pos:start="682:23" pos:end="682:24"><expr pos:start="682:23" pos:end="682:24"><name pos:start="682:23" pos:end="682:24">cs</name></expr></argument>, <argument pos:start="682:27" pos:end="684:34"><expr pos:start="682:27" pos:end="684:34"><literal type="string" pos:start="682:27" pos:end="682:76">"Thermal interrupt interrupt while in user mode. "</literal>

                      <literal type="string" pos:start="684:23" pos:end="684:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="686:13" pos:end="686:18">break;</break>

        <case pos:start="688:9" pos:end="688:32">case <expr pos:start="688:14" pos:end="688:31"><name pos:start="688:14" pos:end="688:31">POWERPC_EXCP_PERFM</name></expr>:</case>   <comment type="block" pos:start="688:36" pos:end="688:78">/* Embedded performance monitor IRQ      */</comment>

            <expr_stmt pos:start="690:13" pos:end="690:73"><expr pos:start="690:13" pos:end="690:72"><call pos:start="690:13" pos:end="690:72"><name pos:start="690:13" pos:end="690:21">cpu_abort</name><argument_list pos:start="690:22" pos:end="690:72">(<argument pos:start="690:23" pos:end="690:24"><expr pos:start="690:23" pos:end="690:24"><name pos:start="690:23" pos:end="690:24">cs</name></expr></argument>, <argument pos:start="690:27" pos:end="690:71"><expr pos:start="690:27" pos:end="690:71"><literal type="string" pos:start="690:27" pos:end="690:71">"Performance monitor exception not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="692:13" pos:end="692:18">break;</break>

        <case pos:start="694:9" pos:end="694:31">case <expr pos:start="694:14" pos:end="694:30"><name pos:start="694:14" pos:end="694:30">POWERPC_EXCP_VPUA</name></expr>:</case>     <comment type="block" pos:start="694:37" pos:end="694:79">/* Vector assist exception               */</comment>

            <expr_stmt pos:start="696:13" pos:end="696:67"><expr pos:start="696:13" pos:end="696:66"><call pos:start="696:13" pos:end="696:66"><name pos:start="696:13" pos:end="696:21">cpu_abort</name><argument_list pos:start="696:22" pos:end="696:66">(<argument pos:start="696:23" pos:end="696:24"><expr pos:start="696:23" pos:end="696:24"><name pos:start="696:23" pos:end="696:24">cs</name></expr></argument>, <argument pos:start="696:27" pos:end="696:65"><expr pos:start="696:27" pos:end="696:65"><literal type="string" pos:start="696:27" pos:end="696:65">"Vector assist exception not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="698:13" pos:end="698:18">break;</break>

        <case pos:start="700:9" pos:end="700:32">case <expr pos:start="700:14" pos:end="700:31"><name pos:start="700:14" pos:end="700:31">POWERPC_EXCP_SOFTP</name></expr>:</case>    <comment type="block" pos:start="700:37" pos:end="700:79">/* Soft patch exception                  */</comment>

            <expr_stmt pos:start="702:13" pos:end="702:64"><expr pos:start="702:13" pos:end="702:63"><call pos:start="702:13" pos:end="702:63"><name pos:start="702:13" pos:end="702:21">cpu_abort</name><argument_list pos:start="702:22" pos:end="702:63">(<argument pos:start="702:23" pos:end="702:24"><expr pos:start="702:23" pos:end="702:24"><name pos:start="702:23" pos:end="702:24">cs</name></expr></argument>, <argument pos:start="702:27" pos:end="702:62"><expr pos:start="702:27" pos:end="702:62"><literal type="string" pos:start="702:27" pos:end="702:62">"Soft patch exception not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="704:13" pos:end="704:18">break;</break>

        <case pos:start="706:9" pos:end="706:32">case <expr pos:start="706:14" pos:end="706:31"><name pos:start="706:14" pos:end="706:31">POWERPC_EXCP_MAINT</name></expr>:</case>    <comment type="block" pos:start="706:37" pos:end="706:79">/* Maintenance exception                 */</comment>

            <expr_stmt pos:start="708:13" pos:end="710:36"><expr pos:start="708:13" pos:end="710:35"><call pos:start="708:13" pos:end="710:35"><name pos:start="708:13" pos:end="708:21">cpu_abort</name><argument_list pos:start="708:22" pos:end="710:35">(<argument pos:start="708:23" pos:end="708:24"><expr pos:start="708:23" pos:end="708:24"><name pos:start="708:23" pos:end="708:24">cs</name></expr></argument>, <argument pos:start="708:27" pos:end="710:34"><expr pos:start="708:27" pos:end="710:34"><literal type="string" pos:start="708:27" pos:end="708:70">"Maintenance exception while in user mode. "</literal>

                      <literal type="string" pos:start="710:23" pos:end="710:34">"Aborting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="712:13" pos:end="712:18">break;</break>

        <case pos:start="714:9" pos:end="714:31">case <expr pos:start="714:14" pos:end="714:30"><name pos:start="714:14" pos:end="714:30">POWERPC_EXCP_STOP</name></expr>:</case>     <comment type="block" pos:start="714:37" pos:end="714:79">/* stop translation                      */</comment>

            <comment type="block" pos:start="716:13" pos:end="716:64">/* We did invalidate the instruction cache. Go on */</comment>

            <break pos:start="718:13" pos:end="718:18">break;</break>

        <case pos:start="720:9" pos:end="720:33">case <expr pos:start="720:14" pos:end="720:32"><name pos:start="720:14" pos:end="720:32">POWERPC_EXCP_BRANCH</name></expr>:</case>   <comment type="block" pos:start="720:37" pos:end="720:79">/* branch instruction:                   */</comment>

            <comment type="block" pos:start="722:13" pos:end="722:60">/* We just stopped because of a branch. Go on */</comment>

            <break pos:start="724:13" pos:end="724:18">break;</break>

        <case pos:start="726:9" pos:end="726:39">case <expr pos:start="726:14" pos:end="726:38"><name pos:start="726:14" pos:end="726:38">POWERPC_EXCP_SYSCALL_USER</name></expr>:</case>

            <comment type="block" pos:start="728:13" pos:end="728:52">/* system call in user-mode emulation */</comment>

            <comment type="block" pos:start="730:13" pos:end="736:15">/* WARNING:

             * PPC ABI uses overflow flag in cr0 to signal an error

             * in syscalls.

             */</comment>

            <expr_stmt pos:start="738:13" pos:end="738:32"><expr pos:start="738:13" pos:end="738:31"><name pos:start="738:13" pos:end="738:23"><name pos:start="738:13" pos:end="738:15">env</name><operator pos:start="738:16" pos:end="738:17">-&gt;</operator><name pos:start="738:18" pos:end="738:20">crf</name><index pos:start="738:21" pos:end="738:23">[<expr pos:start="738:22" pos:end="738:22"><literal type="number" pos:start="738:22" pos:end="738:22">0</literal></expr>]</index></name> <operator pos:start="738:25" pos:end="738:26">&amp;=</operator> <operator pos:start="738:28" pos:end="738:28">~</operator><literal type="number" pos:start="738:29" pos:end="738:31">0x1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="740:13" pos:end="744:48"><expr pos:start="740:13" pos:end="744:47"><name pos:start="740:13" pos:end="740:15">ret</name> <operator pos:start="740:17" pos:end="740:17">=</operator> <call pos:start="740:19" pos:end="744:47"><name pos:start="740:19" pos:end="740:28">do_syscall</name><argument_list pos:start="740:29" pos:end="744:47">(<argument pos:start="740:30" pos:end="740:32"><expr pos:start="740:30" pos:end="740:32"><name pos:start="740:30" pos:end="740:32">env</name></expr></argument>, <argument pos:start="740:35" pos:end="740:45"><expr pos:start="740:35" pos:end="740:45"><name pos:start="740:35" pos:end="740:45"><name pos:start="740:35" pos:end="740:37">env</name><operator pos:start="740:38" pos:end="740:39">-&gt;</operator><name pos:start="740:40" pos:end="740:42">gpr</name><index pos:start="740:43" pos:end="740:45">[<expr pos:start="740:44" pos:end="740:44"><literal type="number" pos:start="740:44" pos:end="740:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="740:48" pos:end="740:58"><expr pos:start="740:48" pos:end="740:58"><name pos:start="740:48" pos:end="740:58"><name pos:start="740:48" pos:end="740:50">env</name><operator pos:start="740:51" pos:end="740:52">-&gt;</operator><name pos:start="740:53" pos:end="740:55">gpr</name><index pos:start="740:56" pos:end="740:58">[<expr pos:start="740:57" pos:end="740:57"><literal type="number" pos:start="740:57" pos:end="740:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="740:61" pos:end="740:71"><expr pos:start="740:61" pos:end="740:71"><name pos:start="740:61" pos:end="740:71"><name pos:start="740:61" pos:end="740:63">env</name><operator pos:start="740:64" pos:end="740:65">-&gt;</operator><name pos:start="740:66" pos:end="740:68">gpr</name><index pos:start="740:69" pos:end="740:71">[<expr pos:start="740:70" pos:end="740:70"><literal type="number" pos:start="740:70" pos:end="740:70">4</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="742:30" pos:end="742:40"><expr pos:start="742:30" pos:end="742:40"><name pos:start="742:30" pos:end="742:40"><name pos:start="742:30" pos:end="742:32">env</name><operator pos:start="742:33" pos:end="742:34">-&gt;</operator><name pos:start="742:35" pos:end="742:37">gpr</name><index pos:start="742:38" pos:end="742:40">[<expr pos:start="742:39" pos:end="742:39"><literal type="number" pos:start="742:39" pos:end="742:39">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="742:43" pos:end="742:53"><expr pos:start="742:43" pos:end="742:53"><name pos:start="742:43" pos:end="742:53"><name pos:start="742:43" pos:end="742:45">env</name><operator pos:start="742:46" pos:end="742:47">-&gt;</operator><name pos:start="742:48" pos:end="742:50">gpr</name><index pos:start="742:51" pos:end="742:53">[<expr pos:start="742:52" pos:end="742:52"><literal type="number" pos:start="742:52" pos:end="742:52">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="742:56" pos:end="742:66"><expr pos:start="742:56" pos:end="742:66"><name pos:start="742:56" pos:end="742:66"><name pos:start="742:56" pos:end="742:58">env</name><operator pos:start="742:59" pos:end="742:60">-&gt;</operator><name pos:start="742:61" pos:end="742:63">gpr</name><index pos:start="742:64" pos:end="742:66">[<expr pos:start="742:65" pos:end="742:65"><literal type="number" pos:start="742:65" pos:end="742:65">7</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="744:30" pos:end="744:40"><expr pos:start="744:30" pos:end="744:40"><name pos:start="744:30" pos:end="744:40"><name pos:start="744:30" pos:end="744:32">env</name><operator pos:start="744:33" pos:end="744:34">-&gt;</operator><name pos:start="744:35" pos:end="744:37">gpr</name><index pos:start="744:38" pos:end="744:40">[<expr pos:start="744:39" pos:end="744:39"><literal type="number" pos:start="744:39" pos:end="744:39">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="744:43" pos:end="744:43"><expr pos:start="744:43" pos:end="744:43"><literal type="number" pos:start="744:43" pos:end="744:43">0</literal></expr></argument>, <argument pos:start="744:46" pos:end="744:46"><expr pos:start="744:46" pos:end="744:46"><literal type="number" pos:start="744:46" pos:end="744:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="746:13" pos:end="752:13"><if pos:start="746:13" pos:end="752:13">if <condition pos:start="746:16" pos:end="746:43">(<expr pos:start="746:17" pos:end="746:42"><name pos:start="746:17" pos:end="746:19">ret</name> <operator pos:start="746:21" pos:end="746:22">==</operator> <operator pos:start="746:24" pos:end="746:24">-</operator><name pos:start="746:25" pos:end="746:42">TARGET_ERESTARTSYS</name></expr>)</condition> <block pos:start="746:45" pos:end="752:13">{<block_content pos:start="748:17" pos:end="750:22">

                <expr_stmt pos:start="748:17" pos:end="748:30"><expr pos:start="748:17" pos:end="748:29"><name pos:start="748:17" pos:end="748:24"><name pos:start="748:17" pos:end="748:19">env</name><operator pos:start="748:20" pos:end="748:21">-&gt;</operator><name pos:start="748:22" pos:end="748:24">nip</name></name> <operator pos:start="748:26" pos:end="748:27">-=</operator> <literal type="number" pos:start="748:29" pos:end="748:29">4</literal></expr>;</expr_stmt>

                <break pos:start="750:17" pos:end="750:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="754:13" pos:end="762:13"><if pos:start="754:13" pos:end="762:13">if <condition pos:start="754:16" pos:end="754:63">(<expr pos:start="754:17" pos:end="754:62"><name pos:start="754:17" pos:end="754:19">ret</name> <operator pos:start="754:21" pos:end="754:22">==</operator> <operator pos:start="754:24" pos:end="754:24">(</operator><name pos:start="754:25" pos:end="754:36">target_ulong</name><operator pos:start="754:37" pos:end="754:37">)</operator><operator pos:start="754:38" pos:end="754:38">(</operator><operator pos:start="754:39" pos:end="754:39">-</operator><name pos:start="754:40" pos:end="754:61">TARGET_QEMU_ESIGRETURN</name><operator pos:start="754:62" pos:end="754:62">)</operator></expr>)</condition> <block pos:start="754:65" pos:end="762:13">{<block_content pos:start="760:17" pos:end="760:22">

                <comment type="block" pos:start="756:17" pos:end="758:55">/* Returning from a successful sigreturn syscall.

                   Avoid corrupting register state.  */</comment>

                <break pos:start="760:17" pos:end="760:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="764:13" pos:end="770:13"><if pos:start="764:13" pos:end="770:13">if <condition pos:start="764:16" pos:end="764:43">(<expr pos:start="764:17" pos:end="764:42"><name pos:start="764:17" pos:end="764:19">ret</name> <operator pos:start="764:21" pos:end="764:21">&gt;</operator> <operator pos:start="764:23" pos:end="764:23">(</operator><name pos:start="764:24" pos:end="764:35">target_ulong</name><operator pos:start="764:36" pos:end="764:36">)</operator><operator pos:start="764:37" pos:end="764:37">(</operator><operator pos:start="764:38" pos:end="764:38">-</operator><literal type="number" pos:start="764:39" pos:end="764:41">515</literal><operator pos:start="764:42" pos:end="764:42">)</operator></expr>)</condition> <block pos:start="764:45" pos:end="770:13">{<block_content pos:start="766:17" pos:end="768:27">

                <expr_stmt pos:start="766:17" pos:end="766:35"><expr pos:start="766:17" pos:end="766:34"><name pos:start="766:17" pos:end="766:27"><name pos:start="766:17" pos:end="766:19">env</name><operator pos:start="766:20" pos:end="766:21">-&gt;</operator><name pos:start="766:22" pos:end="766:24">crf</name><index pos:start="766:25" pos:end="766:27">[<expr pos:start="766:26" pos:end="766:26"><literal type="number" pos:start="766:26" pos:end="766:26">0</literal></expr>]</index></name> <operator pos:start="766:29" pos:end="766:30">|=</operator> <literal type="number" pos:start="766:32" pos:end="766:34">0x1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="768:17" pos:end="768:27"><expr pos:start="768:17" pos:end="768:26"><name pos:start="768:17" pos:end="768:19">ret</name> <operator pos:start="768:21" pos:end="768:21">=</operator> <operator pos:start="768:23" pos:end="768:23">-</operator><name pos:start="768:24" pos:end="768:26">ret</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="772:13" pos:end="772:30"><expr pos:start="772:13" pos:end="772:29"><name pos:start="772:13" pos:end="772:23"><name pos:start="772:13" pos:end="772:15">env</name><operator pos:start="772:16" pos:end="772:17">-&gt;</operator><name pos:start="772:18" pos:end="772:20">gpr</name><index pos:start="772:21" pos:end="772:23">[<expr pos:start="772:22" pos:end="772:22"><literal type="number" pos:start="772:22" pos:end="772:22">3</literal></expr>]</index></name> <operator pos:start="772:25" pos:end="772:25">=</operator> <name pos:start="772:27" pos:end="772:29">ret</name></expr>;</expr_stmt>

            <break pos:start="774:13" pos:end="774:18">break;</break>

        <case pos:start="776:9" pos:end="776:31">case <expr pos:start="776:14" pos:end="776:30"><name pos:start="776:14" pos:end="776:30">POWERPC_EXCP_STCX</name></expr>:</case>

            <if_stmt pos:start="778:13" pos:end="790:13"><if pos:start="778:13" pos:end="790:13">if <condition pos:start="778:16" pos:end="778:40">(<expr pos:start="778:17" pos:end="778:39"><call pos:start="778:17" pos:end="778:39"><name pos:start="778:17" pos:end="778:34">do_store_exclusive</name><argument_list pos:start="778:35" pos:end="778:39">(<argument pos:start="778:36" pos:end="778:38"><expr pos:start="778:36" pos:end="778:38"><name pos:start="778:36" pos:end="778:38">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="778:42" pos:end="790:13">{<block_content pos:start="780:17" pos:end="788:56">

                <expr_stmt pos:start="780:17" pos:end="780:47"><expr pos:start="780:17" pos:end="780:46"><name pos:start="780:17" pos:end="780:29"><name pos:start="780:17" pos:end="780:20">info</name><operator pos:start="780:21" pos:end="780:21">.</operator><name pos:start="780:22" pos:end="780:29">si_signo</name></name> <operator pos:start="780:31" pos:end="780:31">=</operator> <name pos:start="780:33" pos:end="780:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="782:17" pos:end="782:34"><expr pos:start="782:17" pos:end="782:33"><name pos:start="782:17" pos:end="782:29"><name pos:start="782:17" pos:end="782:20">info</name><operator pos:start="782:21" pos:end="782:21">.</operator><name pos:start="782:22" pos:end="782:29">si_errno</name></name> <operator pos:start="782:31" pos:end="782:31">=</operator> <literal type="number" pos:start="782:33" pos:end="782:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="784:17" pos:end="784:50"><expr pos:start="784:17" pos:end="784:49"><name pos:start="784:17" pos:end="784:28"><name pos:start="784:17" pos:end="784:20">info</name><operator pos:start="784:21" pos:end="784:21">.</operator><name pos:start="784:22" pos:end="784:28">si_code</name></name> <operator pos:start="784:30" pos:end="784:30">=</operator> <name pos:start="784:32" pos:end="784:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="786:17" pos:end="786:58"><expr pos:start="786:17" pos:end="786:57"><name pos:start="786:17" pos:end="786:46"><name pos:start="786:17" pos:end="786:20">info</name><operator pos:start="786:21" pos:end="786:21">.</operator><name pos:start="786:22" pos:end="786:30">_sifields</name><operator pos:start="786:31" pos:end="786:31">.</operator><name pos:start="786:32" pos:end="786:40">_sigfault</name><operator pos:start="786:41" pos:end="786:41">.</operator><name pos:start="786:42" pos:end="786:46">_addr</name></name> <operator pos:start="786:48" pos:end="786:48">=</operator> <name pos:start="786:50" pos:end="786:57"><name pos:start="786:50" pos:end="786:52">env</name><operator pos:start="786:53" pos:end="786:54">-&gt;</operator><name pos:start="786:55" pos:end="786:57">nip</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="788:17" pos:end="788:56"><expr pos:start="788:17" pos:end="788:55"><call pos:start="788:17" pos:end="788:55"><name pos:start="788:17" pos:end="788:28">queue_signal</name><argument_list pos:start="788:29" pos:end="788:55">(<argument pos:start="788:30" pos:end="788:32"><expr pos:start="788:30" pos:end="788:32"><name pos:start="788:30" pos:end="788:32">env</name></expr></argument>, <argument pos:start="788:35" pos:end="788:47"><expr pos:start="788:35" pos:end="788:47"><name pos:start="788:35" pos:end="788:47"><name pos:start="788:35" pos:end="788:38">info</name><operator pos:start="788:39" pos:end="788:39">.</operator><name pos:start="788:40" pos:end="788:47">si_signo</name></name></expr></argument>, <argument pos:start="788:50" pos:end="788:54"><expr pos:start="788:50" pos:end="788:54"><operator pos:start="788:50" pos:end="788:50">&amp;</operator><name pos:start="788:51" pos:end="788:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="792:13" pos:end="792:18">break;</break>

        <case pos:start="794:9" pos:end="794:24">case <expr pos:start="794:14" pos:end="794:23"><name pos:start="794:14" pos:end="794:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="796:13" pos:end="816:13">{<block_content pos:start="798:17" pos:end="814:19">

                <decl_stmt pos:start="798:17" pos:end="798:24"><decl pos:start="798:17" pos:end="798:23"><type pos:start="798:17" pos:end="798:19"><name pos:start="798:17" pos:end="798:19">int</name></type> <name pos:start="798:21" pos:end="798:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="802:17" pos:end="802:56"><expr pos:start="802:17" pos:end="802:55"><name pos:start="802:17" pos:end="802:19">sig</name> <operator pos:start="802:21" pos:end="802:21">=</operator> <call pos:start="802:23" pos:end="802:55"><name pos:start="802:23" pos:end="802:35">gdb_handlesig</name><argument_list pos:start="802:36" pos:end="802:55">(<argument pos:start="802:37" pos:end="802:38"><expr pos:start="802:37" pos:end="802:38"><name pos:start="802:37" pos:end="802:38">cs</name></expr></argument>, <argument pos:start="802:41" pos:end="802:54"><expr pos:start="802:41" pos:end="802:54"><name pos:start="802:41" pos:end="802:54">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="804:17" pos:end="814:19"><if pos:start="804:17" pos:end="814:19">if <condition pos:start="804:20" pos:end="804:24">(<expr pos:start="804:21" pos:end="804:23"><name pos:start="804:21" pos:end="804:23">sig</name></expr>)</condition> <block pos:start="804:26" pos:end="814:19">{<block_content pos:start="806:21" pos:end="812:60">

                    <expr_stmt pos:start="806:21" pos:end="806:40"><expr pos:start="806:21" pos:end="806:39"><name pos:start="806:21" pos:end="806:33"><name pos:start="806:21" pos:end="806:24">info</name><operator pos:start="806:25" pos:end="806:25">.</operator><name pos:start="806:26" pos:end="806:33">si_signo</name></name> <operator pos:start="806:35" pos:end="806:35">=</operator> <name pos:start="806:37" pos:end="806:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="808:21" pos:end="808:38"><expr pos:start="808:21" pos:end="808:37"><name pos:start="808:21" pos:end="808:33"><name pos:start="808:21" pos:end="808:24">info</name><operator pos:start="808:25" pos:end="808:25">.</operator><name pos:start="808:26" pos:end="808:33">si_errno</name></name> <operator pos:start="808:35" pos:end="808:35">=</operator> <literal type="number" pos:start="808:37" pos:end="808:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="810:21" pos:end="810:53"><expr pos:start="810:21" pos:end="810:52"><name pos:start="810:21" pos:end="810:32"><name pos:start="810:21" pos:end="810:24">info</name><operator pos:start="810:25" pos:end="810:25">.</operator><name pos:start="810:26" pos:end="810:32">si_code</name></name> <operator pos:start="810:34" pos:end="810:34">=</operator> <name pos:start="810:36" pos:end="810:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="812:21" pos:end="812:60"><expr pos:start="812:21" pos:end="812:59"><call pos:start="812:21" pos:end="812:59"><name pos:start="812:21" pos:end="812:32">queue_signal</name><argument_list pos:start="812:33" pos:end="812:59">(<argument pos:start="812:34" pos:end="812:36"><expr pos:start="812:34" pos:end="812:36"><name pos:start="812:34" pos:end="812:36">env</name></expr></argument>, <argument pos:start="812:39" pos:end="812:51"><expr pos:start="812:39" pos:end="812:51"><name pos:start="812:39" pos:end="812:51"><name pos:start="812:39" pos:end="812:42">info</name><operator pos:start="812:43" pos:end="812:43">.</operator><name pos:start="812:44" pos:end="812:51">si_signo</name></name></expr></argument>, <argument pos:start="812:54" pos:end="812:58"><expr pos:start="812:54" pos:end="812:58"><operator pos:start="812:54" pos:end="812:54">&amp;</operator><name pos:start="812:55" pos:end="812:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="818:13" pos:end="818:18">break;</break>

        <case pos:start="820:9" pos:end="820:28">case <expr pos:start="820:14" pos:end="820:27"><name pos:start="820:14" pos:end="820:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="822:13" pos:end="822:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="824:13" pos:end="824:18">break;</break>

        <default pos:start="826:9" pos:end="826:16">default:</default>

            <expr_stmt pos:start="828:13" pos:end="828:72"><expr pos:start="828:13" pos:end="828:71"><call pos:start="828:13" pos:end="828:71"><name pos:start="828:13" pos:end="828:21">cpu_abort</name><argument_list pos:start="828:22" pos:end="828:71">(<argument pos:start="828:23" pos:end="828:24"><expr pos:start="828:23" pos:end="828:24"><name pos:start="828:23" pos:end="828:24">cs</name></expr></argument>, <argument pos:start="828:27" pos:end="828:62"><expr pos:start="828:27" pos:end="828:62"><literal type="string" pos:start="828:27" pos:end="828:62">"Unknown exception 0x%d. Aborting\n"</literal></expr></argument>, <argument pos:start="828:65" pos:end="828:70"><expr pos:start="828:65" pos:end="828:70"><name pos:start="828:65" pos:end="828:70">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="830:13" pos:end="830:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="834:9" pos:end="834:37"><expr pos:start="834:9" pos:end="834:36"><call pos:start="834:9" pos:end="834:36"><name pos:start="834:9" pos:end="834:31">process_pending_signals</name><argument_list pos:start="834:32" pos:end="834:36">(<argument pos:start="834:33" pos:end="834:35"><expr pos:start="834:33" pos:end="834:35"><name pos:start="834:33" pos:end="834:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
