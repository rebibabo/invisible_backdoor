<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2614.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">mpeg1_decode_picture</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, 

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">Mpeg1Context</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">s1</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MpegEncContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:41">= <expr pos:start="9:25" pos:end="9:41"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:27">s1</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ref</name></decl>, <decl pos:start="11:14" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:19">f_code</name></decl>, <decl pos:start="11:22" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:30">vbv_delay</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if<condition pos:start="15:7" pos:end="15:42">(<expr pos:start="15:8" pos:end="15:41"><call pos:start="15:8" pos:end="15:37"><name pos:start="15:8" pos:end="15:27">mpeg_decode_postinit</name><argument_list pos:start="15:28" pos:end="15:37">(<argument pos:start="15:29" pos:end="15:36"><expr pos:start="15:29" pos:end="15:36"><name pos:start="15:29" pos:end="15:36"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:36">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:39" pos:end="15:39">&lt;</operator> <literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>)</condition><block type="pseudo" pos:start="17:8" pos:end="17:17"><block_content pos:start="17:8" pos:end="17:17"> 

       <return pos:start="17:8" pos:end="17:17">return <expr pos:start="17:15" pos:end="17:16"><operator pos:start="17:15" pos:end="17:15">-</operator><literal type="number" pos:start="17:16" pos:end="17:16">2</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><call pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:17">init_get_bits</name><argument_list pos:start="21:18" pos:end="21:42">(<argument pos:start="21:19" pos:end="21:24"><expr pos:start="21:19" pos:end="21:24"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:24">gb</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">buf</name></expr></argument>, <argument pos:start="21:32" pos:end="21:41"><expr pos:start="21:32" pos:end="21:41"><name pos:start="21:32" pos:end="21:39">buf_size</name><operator pos:start="21:40" pos:end="21:40">*</operator><literal type="number" pos:start="21:41" pos:end="21:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:7">ref</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:30"><name pos:start="25:11" pos:end="25:18">get_bits</name><argument_list pos:start="25:19" pos:end="25:30">(<argument pos:start="25:20" pos:end="25:25"><expr pos:start="25:20" pos:end="25:25"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:25">gb</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:29"><expr pos:start="25:28" pos:end="25:29"><literal type="number" pos:start="25:28" pos:end="25:29">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:33" pos:end="25:50">/* temporal ref */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:16">pict_type</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:38"><name pos:start="27:20" pos:end="27:27">get_bits</name><argument_list pos:start="27:28" pos:end="27:38">(<argument pos:start="27:29" pos:end="27:34"><expr pos:start="27:29" pos:end="27:34"><operator pos:start="27:29" pos:end="27:29">&amp;</operator><name pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:34">gb</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:13">vbv_delay</name><operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:35"><name pos:start="31:16" pos:end="31:23">get_bits</name><argument_list pos:start="31:24" pos:end="31:35">(<argument pos:start="31:25" pos:end="31:30"><expr pos:start="31:25" pos:end="31:30"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:30"><name pos:start="31:26" pos:end="31:26">s</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:30">gb</name></name></expr></argument>, <argument pos:start="31:33" pos:end="31:34"><expr pos:start="31:33" pos:end="31:34"><literal type="number" pos:start="31:33" pos:end="31:34">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="47:5"><if pos:start="33:5" pos:end="47:5">if <condition pos:start="33:8" pos:end="33:57">(<expr pos:start="33:9" pos:end="33:56"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">pict_type</name></name> <operator pos:start="33:22" pos:end="33:23">==</operator> <name pos:start="33:25" pos:end="33:30">P_TYPE</name> <operator pos:start="33:32" pos:end="33:33">||</operator> <name pos:start="33:35" pos:end="33:46"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:46">pict_type</name></name> <operator pos:start="33:48" pos:end="33:49">==</operator> <name pos:start="33:51" pos:end="33:56">B_TYPE</name></expr>)</condition> <block pos:start="33:59" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:38">

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">full_pel</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>]</index></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:42"><name pos:start="35:26" pos:end="35:34">get_bits1</name><argument_list pos:start="35:35" pos:end="35:42">(<argument pos:start="35:36" pos:end="35:41"><expr pos:start="35:36" pos:end="35:41"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:14">f_code</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:36"><name pos:start="37:18" pos:end="37:25">get_bits</name><argument_list pos:start="37:26" pos:end="37:36">(<argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:32">gb</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:22"><if pos:start="39:9" pos:end="41:22">if <condition pos:start="39:12" pos:end="39:24">(<expr pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:18">f_code</name> <operator pos:start="39:20" pos:end="39:21">==</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:22"><block_content pos:start="41:13" pos:end="41:22">

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:22">mpeg_f_code</name><index pos:start="43:23" pos:end="43:25">[<expr pos:start="43:24" pos:end="43:24"><literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr>]</index><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>]</index></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:37">f_code</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">mpeg_f_code</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>]</index><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr>]</index></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:37">f_code</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="49:31">(<expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:20">pict_type</name></name> <operator pos:start="49:22" pos:end="49:23">==</operator> <name pos:start="49:25" pos:end="49:30">B_TYPE</name></expr>)</condition> <block pos:start="49:33" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:38">

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:19">full_pel</name><index pos:start="51:20" pos:end="51:22">[<expr pos:start="51:21" pos:end="51:21"><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>]</index></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:42"><name pos:start="51:26" pos:end="51:34">get_bits1</name><argument_list pos:start="51:35" pos:end="51:42">(<argument pos:start="51:36" pos:end="51:41"><expr pos:start="51:36" pos:end="51:41"><operator pos:start="51:36" pos:end="51:36">&amp;</operator><name pos:start="51:37" pos:end="51:41"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:14">f_code</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:36"><name pos:start="53:18" pos:end="53:25">get_bits</name><argument_list pos:start="53:26" pos:end="53:36">(<argument pos:start="53:27" pos:end="53:32"><expr pos:start="53:27" pos:end="53:32"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:28">s</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:32">gb</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:22"><if pos:start="55:9" pos:end="57:22">if <condition pos:start="55:12" pos:end="55:24">(<expr pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:18">f_code</name> <operator pos:start="55:20" pos:end="55:21">==</operator> <literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:22"><block_content pos:start="57:13" pos:end="57:22">

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:22">mpeg_f_code</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">1</literal></expr>]</index><index pos:start="59:26" pos:end="59:28">[<expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr>]</index></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <name pos:start="59:32" pos:end="59:37">f_code</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:22">mpeg_f_code</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">1</literal></expr>]</index><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">1</literal></expr>]</index></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:37">f_code</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:47"><expr pos:start="65:5" pos:end="65:46"><name pos:start="65:5" pos:end="65:32"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:22">current_picture</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:32">pict_type</name></name><operator pos:start="65:33" pos:end="65:33">=</operator> <name pos:start="65:35" pos:end="65:46"><name pos:start="65:35" pos:end="65:35">s</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:46">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:57"><expr pos:start="67:5" pos:end="67:56"><name pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:22">current_picture</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:32">key_frame</name></name><operator pos:start="67:33" pos:end="67:33">=</operator> <name pos:start="67:35" pos:end="67:46"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:46">pict_type</name></name> <operator pos:start="67:48" pos:end="67:49">==</operator> <name pos:start="67:51" pos:end="67:56">I_TYPE</name></expr>;</expr_stmt>

    

<comment type="line" pos:start="71:1" pos:end="71:43">//    if(avctx-&gt;debug &amp; FF_DEBUG_PICT_INFO)</comment>

<comment type="line" pos:start="73:1" pos:end="73:80">//        av_log(avctx, AV_LOG_DEBUG, "vbv_delay %d, ref %d\n", vbv_delay, ref);</comment>

    

    <expr_stmt pos:start="77:5" pos:end="77:22"><expr pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:17">y_dc_scale</name></name> <operator pos:start="77:19" pos:end="77:19">=</operator> <literal type="number" pos:start="77:21" pos:end="77:21">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:22"><expr pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:17">c_dc_scale</name></name> <operator pos:start="79:19" pos:end="79:19">=</operator> <literal type="number" pos:start="79:21" pos:end="79:21">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:18">first_slice</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">1</literal></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
