<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22433.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_dref</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">entries</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fc</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">nb_streams</name></name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:44"><name pos:start="17:10" pos:end="17:10">c</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">fc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">streams</name><index pos:start="17:24" pos:end="17:44">[<expr pos:start="17:25" pos:end="17:43"><name pos:start="17:25" pos:end="17:41"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">fc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name><operator pos:start="17:42" pos:end="17:42">-</operator><literal type="number" pos:start="17:43" pos:end="17:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:11">st</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><call pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:13">avio_rb32</name><argument_list pos:start="23:14" pos:end="23:17">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="23:20" pos:end="23:37">// version + flags</comment>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:11">entries</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:27"><name pos:start="25:15" pos:end="25:23">avio_rb32</name><argument_list pos:start="25:24" pos:end="25:27">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:35"><if pos:start="27:5" pos:end="31:35">if <condition pos:start="27:8" pos:end="29:49">(<expr pos:start="27:9" pos:end="29:48"><name pos:start="27:9" pos:end="27:15">entries</name> <operator pos:start="27:17" pos:end="27:17">&gt;</operator>  <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:24">atom</name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:29">size</name></name> <operator pos:start="27:31" pos:end="27:31">-</operator> <literal type="number" pos:start="27:33" pos:end="27:33">1</literal><operator pos:start="27:34" pos:end="27:34">)</operator> <operator pos:start="27:36" pos:end="27:36">/</operator> <name pos:start="27:38" pos:end="27:60">MIN_DATA_ENTRY_BOX_SIZE</name> <operator pos:start="27:62" pos:end="27:62">+</operator> <literal type="number" pos:start="27:64" pos:end="27:64">1</literal> <operator pos:start="27:66" pos:end="27:67">||</operator>

        <name pos:start="29:9" pos:end="29:15">entries</name> <operator pos:start="29:17" pos:end="29:18">&gt;=</operator> <name pos:start="29:20" pos:end="29:27">UINT_MAX</name> <operator pos:start="29:29" pos:end="29:29">/</operator> <sizeof pos:start="29:31" pos:end="29:48">sizeof<argument_list pos:start="29:37" pos:end="29:48">(<argument pos:start="29:38" pos:end="29:47"><expr pos:start="29:38" pos:end="29:47"><operator pos:start="29:38" pos:end="29:38">*</operator><name pos:start="29:39" pos:end="29:47"><name pos:start="29:39" pos:end="29:40">sc</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:47">drefs</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:35"><block_content pos:start="31:9" pos:end="31:35">

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><call pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:11">av_free</name><argument_list pos:start="33:12" pos:end="33:22">(<argument pos:start="33:13" pos:end="33:21"><expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:14">sc</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:21">drefs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:6">sc</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:19">drefs_count</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:57"><expr pos:start="37:5" pos:end="37:56"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:6">sc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:13">drefs</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:56"><name pos:start="37:17" pos:end="37:26">av_mallocz</name><argument_list pos:start="37:27" pos:end="37:56">(<argument pos:start="37:28" pos:end="37:55"><expr pos:start="37:28" pos:end="37:55"><name pos:start="37:28" pos:end="37:34">entries</name> <operator pos:start="37:36" pos:end="37:36">*</operator> <sizeof pos:start="37:38" pos:end="37:55">sizeof<argument_list pos:start="37:44" pos:end="37:55">(<argument pos:start="37:45" pos:end="37:54"><expr pos:start="37:45" pos:end="37:54"><operator pos:start="37:45" pos:end="37:45">*</operator><name pos:start="37:46" pos:end="37:54"><name pos:start="37:46" pos:end="37:47">sc</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:54">drefs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:31"><if pos:start="39:5" pos:end="41:31">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:18"><name pos:start="39:10" pos:end="39:11">sc</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">drefs</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:31"><block_content pos:start="41:9" pos:end="41:31">

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:6">sc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:19">drefs_count</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:29">entries</name></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="211:5">for <control pos:start="47:9" pos:end="47:41">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:36"><expr pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:22">sc</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:35">drefs_count</name></name></expr>;</condition> <incr pos:start="47:38" pos:end="47:40"><expr pos:start="47:38" pos:end="47:40"><name pos:start="47:38" pos:end="47:38">i</name><operator pos:start="47:39" pos:end="47:40">++</operator></expr></incr>)</control> <block pos:start="47:43" pos:end="211:5">{<block_content pos:start="49:9" pos:end="209:38">

        <decl_stmt pos:start="49:9" pos:end="49:38"><decl pos:start="49:9" pos:end="49:37"><type pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:15">MOVDref</name> <modifier pos:start="49:17" pos:end="49:17">*</modifier></type><name pos:start="49:18" pos:end="49:21">dref</name> <init pos:start="49:23" pos:end="49:37">= <expr pos:start="49:25" pos:end="49:37"><operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:27">sc</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:34">drefs</name><index pos:start="49:35" pos:end="49:37">[<expr pos:start="49:36" pos:end="49:36"><name pos:start="49:36" pos:end="49:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:38"><decl pos:start="51:9" pos:end="51:37"><type pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:16">uint32_t</name></type> <name pos:start="51:18" pos:end="51:21">size</name> <init pos:start="51:23" pos:end="51:37">= <expr pos:start="51:25" pos:end="51:37"><call pos:start="51:25" pos:end="51:37"><name pos:start="51:25" pos:end="51:33">avio_rb32</name><argument_list pos:start="51:34" pos:end="51:37">(<argument pos:start="51:35" pos:end="51:36"><expr pos:start="51:35" pos:end="51:36"><name pos:start="51:35" pos:end="51:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:48"><decl pos:start="53:9" pos:end="53:47"><type pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:15">int64_t</name></type> <name pos:start="53:17" pos:end="53:20">next</name> <init pos:start="53:22" pos:end="53:47">= <expr pos:start="53:24" pos:end="53:47"><call pos:start="53:24" pos:end="53:36"><name pos:start="53:24" pos:end="53:32">avio_tell</name><argument_list pos:start="53:33" pos:end="53:36">(<argument pos:start="53:34" pos:end="53:35"><expr pos:start="53:34" pos:end="53:35"><name pos:start="53:34" pos:end="53:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="53:38" pos:end="53:38">+</operator> <name pos:start="53:40" pos:end="53:43">size</name> <operator pos:start="53:45" pos:end="53:45">-</operator> <literal type="number" pos:start="53:47" pos:end="53:47">4</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="57:9" pos:end="59:39"><if pos:start="57:9" pos:end="59:39">if <condition pos:start="57:12" pos:end="57:22">(<expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:16">size</name> <operator pos:start="57:18" pos:end="57:18">&lt;</operator> <literal type="number" pos:start="57:20" pos:end="57:21">12</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:39"><block_content pos:start="59:13" pos:end="59:39">

            <return pos:start="59:13" pos:end="59:39">return <expr pos:start="59:20" pos:end="59:38"><name pos:start="59:20" pos:end="59:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:12">dref</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:18">type</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:34"><name pos:start="63:22" pos:end="63:30">avio_rl32</name><argument_list pos:start="63:31" pos:end="63:34">(<argument pos:start="63:32" pos:end="63:33"><expr pos:start="63:32" pos:end="63:33"><name pos:start="63:32" pos:end="63:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:22"><expr pos:start="65:9" pos:end="65:21"><call pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:17">avio_rb32</name><argument_list pos:start="65:18" pos:end="65:21">(<argument pos:start="65:19" pos:end="65:20"><expr pos:start="65:19" pos:end="65:20"><name pos:start="65:19" pos:end="65:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:24" pos:end="65:41">// version + flags</comment>

        <expr_stmt pos:start="67:9" pos:end="67:72"><expr pos:start="67:9" pos:end="67:71"><call pos:start="67:9" pos:end="67:71"><name pos:start="67:9" pos:end="67:15">av_dlog</name><argument_list pos:start="67:16" pos:end="67:71">(<argument pos:start="67:17" pos:end="67:21"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:17">c</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:21">fc</name></name></expr></argument>, <argument pos:start="67:24" pos:end="67:44"><expr pos:start="67:24" pos:end="67:44"><literal type="string" pos:start="67:24" pos:end="67:44">"type %.4s size %d\n"</literal></expr></argument>, <argument pos:start="67:47" pos:end="67:64"><expr pos:start="67:47" pos:end="67:64"><operator pos:start="67:47" pos:end="67:47">(</operator><name pos:start="67:48" pos:end="67:51">char</name><operator pos:start="67:52" pos:end="67:52">*</operator><operator pos:start="67:53" pos:end="67:53">)</operator><operator pos:start="67:54" pos:end="67:54">&amp;</operator><name pos:start="67:55" pos:end="67:64"><name pos:start="67:55" pos:end="67:58">dref</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:64">type</name></name></expr></argument>, <argument pos:start="67:67" pos:end="67:70"><expr pos:start="67:67" pos:end="67:70"><name pos:start="67:67" pos:end="67:70">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="207:9"><if pos:start="71:9" pos:end="207:9">if <condition pos:start="71:12" pos:end="71:63">(<expr pos:start="71:13" pos:end="71:62"><name pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:16">dref</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:22">type</name></name> <operator pos:start="71:24" pos:end="71:25">==</operator> <call pos:start="71:27" pos:end="71:48"><name pos:start="71:27" pos:end="71:31">MKTAG</name><argument_list pos:start="71:32" pos:end="71:48">(<argument pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><literal type="char" pos:start="71:33" pos:end="71:35">'a'</literal></expr></argument>,<argument pos:start="71:37" pos:end="71:39"><expr pos:start="71:37" pos:end="71:39"><literal type="char" pos:start="71:37" pos:end="71:39">'l'</literal></expr></argument>,<argument pos:start="71:41" pos:end="71:43"><expr pos:start="71:41" pos:end="71:43"><literal type="char" pos:start="71:41" pos:end="71:43">'i'</literal></expr></argument>,<argument pos:start="71:45" pos:end="71:47"><expr pos:start="71:45" pos:end="71:47"><literal type="char" pos:start="71:45" pos:end="71:47">'s'</literal></expr></argument>)</argument_list></call> <operator pos:start="71:50" pos:end="71:51">&amp;&amp;</operator> <name pos:start="71:53" pos:end="71:56">size</name> <operator pos:start="71:58" pos:end="71:58">&gt;</operator> <literal type="number" pos:start="71:60" pos:end="71:62">150</literal></expr>)</condition> <block pos:start="71:65" pos:end="207:9">{<block_content pos:start="75:13" pos:end="205:13">

            <comment type="block" pos:start="73:13" pos:end="73:40">/* macintosh alias record */</comment>

            <decl_stmt pos:start="75:13" pos:end="75:37"><decl pos:start="75:13" pos:end="75:31"><type pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:20">uint16_t</name></type> <name pos:start="75:22" pos:end="75:31">volume_len</name></decl>, <decl pos:start="75:34" pos:end="75:36"><type ref="prev" pos:start="75:13" pos:end="75:20"/><name pos:start="75:34" pos:end="75:36">len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="77:13" pos:end="77:25"><decl pos:start="77:13" pos:end="77:24"><type pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:19">int16_t</name></type> <name pos:start="77:21" pos:end="77:24">type</name></decl>;</decl_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:30"><expr pos:start="81:13" pos:end="81:29"><call pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:21">avio_skip</name><argument_list pos:start="81:22" pos:end="81:29">(<argument pos:start="81:23" pos:end="81:24"><expr pos:start="81:23" pos:end="81:24"><name pos:start="81:23" pos:end="81:24">pb</name></expr></argument>, <argument pos:start="81:27" pos:end="81:28"><expr pos:start="81:27" pos:end="81:28"><literal type="number" pos:start="81:27" pos:end="81:28">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:22">volume_len</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <call pos:start="85:26" pos:end="85:36"><name pos:start="85:26" pos:end="85:32">avio_r8</name><argument_list pos:start="85:33" pos:end="85:36">(<argument pos:start="85:34" pos:end="85:35"><expr pos:start="85:34" pos:end="85:35"><name pos:start="85:34" pos:end="85:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:22">volume_len</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <call pos:start="87:26" pos:end="87:46"><name pos:start="87:26" pos:end="87:30">FFMIN</name><argument_list pos:start="87:31" pos:end="87:46">(<argument pos:start="87:32" pos:end="87:41"><expr pos:start="87:32" pos:end="87:41"><name pos:start="87:32" pos:end="87:41">volume_len</name></expr></argument>, <argument pos:start="87:44" pos:end="87:45"><expr pos:start="87:44" pos:end="87:45"><literal type="number" pos:start="87:44" pos:end="87:45">27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:44"><expr pos:start="89:13" pos:end="89:43"><call pos:start="89:13" pos:end="89:43"><name pos:start="89:13" pos:end="89:21">avio_read</name><argument_list pos:start="89:22" pos:end="89:43">(<argument pos:start="89:23" pos:end="89:24"><expr pos:start="89:23" pos:end="89:24"><name pos:start="89:23" pos:end="89:24">pb</name></expr></argument>, <argument pos:start="89:27" pos:end="89:38"><expr pos:start="89:27" pos:end="89:38"><name pos:start="89:27" pos:end="89:38"><name pos:start="89:27" pos:end="89:30">dref</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:38">volume</name></name></expr></argument>, <argument pos:start="89:41" pos:end="89:42"><expr pos:start="89:41" pos:end="89:42"><literal type="number" pos:start="89:41" pos:end="89:42">27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:41"><expr pos:start="91:13" pos:end="91:40"><name pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:16">dref</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:24">volume</name><index pos:start="91:25" pos:end="91:36">[<expr pos:start="91:26" pos:end="91:35"><name pos:start="91:26" pos:end="91:35">volume_len</name></expr>]</index></name> <operator pos:start="91:38" pos:end="91:38">=</operator> <literal type="number" pos:start="91:40" pos:end="91:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:89"><expr pos:start="93:13" pos:end="93:88"><call pos:start="93:13" pos:end="93:88"><name pos:start="93:13" pos:end="93:18">av_log</name><argument_list pos:start="93:19" pos:end="93:88">(<argument pos:start="93:20" pos:end="93:24"><expr pos:start="93:20" pos:end="93:24"><name pos:start="93:20" pos:end="93:24"><name pos:start="93:20" pos:end="93:20">c</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:24">fc</name></name></expr></argument>, <argument pos:start="93:27" pos:end="93:38"><expr pos:start="93:27" pos:end="93:38"><name pos:start="93:27" pos:end="93:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:41" pos:end="93:61"><expr pos:start="93:41" pos:end="93:61"><literal type="string" pos:start="93:41" pos:end="93:61">"volume %s, len %d\n"</literal></expr></argument>, <argument pos:start="93:64" pos:end="93:75"><expr pos:start="93:64" pos:end="93:75"><name pos:start="93:64" pos:end="93:75"><name pos:start="93:64" pos:end="93:67">dref</name><operator pos:start="93:68" pos:end="93:69">-&gt;</operator><name pos:start="93:70" pos:end="93:75">volume</name></name></expr></argument>, <argument pos:start="93:78" pos:end="93:87"><expr pos:start="93:78" pos:end="93:87"><name pos:start="93:78" pos:end="93:87">volume_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><call pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:21">avio_skip</name><argument_list pos:start="97:22" pos:end="97:29">(<argument pos:start="97:23" pos:end="97:24"><expr pos:start="97:23" pos:end="97:24"><name pos:start="97:23" pos:end="97:24">pb</name></expr></argument>, <argument pos:start="97:27" pos:end="97:28"><expr pos:start="97:27" pos:end="97:28"><literal type="number" pos:start="97:27" pos:end="97:28">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="101:13" pos:end="101:30"><expr pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:15">len</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:29"><name pos:start="101:19" pos:end="101:25">avio_r8</name><argument_list pos:start="101:26" pos:end="101:29">(<argument pos:start="101:27" pos:end="101:28"><expr pos:start="101:27" pos:end="101:28"><name pos:start="101:27" pos:end="101:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:33"><expr pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:15">len</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:32"><name pos:start="103:19" pos:end="103:23">FFMIN</name><argument_list pos:start="103:24" pos:end="103:32">(<argument pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:27">len</name></expr></argument>, <argument pos:start="103:30" pos:end="103:31"><expr pos:start="103:30" pos:end="103:31"><literal type="number" pos:start="103:30" pos:end="103:31">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:46"><expr pos:start="105:13" pos:end="105:45"><call pos:start="105:13" pos:end="105:45"><name pos:start="105:13" pos:end="105:21">avio_read</name><argument_list pos:start="105:22" pos:end="105:45">(<argument pos:start="105:23" pos:end="105:24"><expr pos:start="105:23" pos:end="105:24"><name pos:start="105:23" pos:end="105:24">pb</name></expr></argument>, <argument pos:start="105:27" pos:end="105:40"><expr pos:start="105:27" pos:end="105:40"><name pos:start="105:27" pos:end="105:40"><name pos:start="105:27" pos:end="105:30">dref</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:40">filename</name></name></expr></argument>, <argument pos:start="105:43" pos:end="105:44"><expr pos:start="105:43" pos:end="105:44"><literal type="number" pos:start="105:43" pos:end="105:44">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:36"><expr pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:16">dref</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:26">filename</name><index pos:start="107:27" pos:end="107:31">[<expr pos:start="107:28" pos:end="107:30"><name pos:start="107:28" pos:end="107:30">len</name></expr>]</index></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <literal type="number" pos:start="107:35" pos:end="107:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:86"><expr pos:start="109:13" pos:end="109:85"><call pos:start="109:13" pos:end="109:85"><name pos:start="109:13" pos:end="109:18">av_log</name><argument_list pos:start="109:19" pos:end="109:85">(<argument pos:start="109:20" pos:end="109:24"><expr pos:start="109:20" pos:end="109:24"><name pos:start="109:20" pos:end="109:24"><name pos:start="109:20" pos:end="109:20">c</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:24">fc</name></name></expr></argument>, <argument pos:start="109:27" pos:end="109:38"><expr pos:start="109:27" pos:end="109:38"><name pos:start="109:27" pos:end="109:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="109:41" pos:end="109:63"><expr pos:start="109:41" pos:end="109:63"><literal type="string" pos:start="109:41" pos:end="109:63">"filename %s, len %d\n"</literal></expr></argument>, <argument pos:start="109:66" pos:end="109:79"><expr pos:start="109:66" pos:end="109:79"><name pos:start="109:66" pos:end="109:79"><name pos:start="109:66" pos:end="109:69">dref</name><operator pos:start="109:70" pos:end="109:71">-&gt;</operator><name pos:start="109:72" pos:end="109:79">filename</name></name></expr></argument>, <argument pos:start="109:82" pos:end="109:84"><expr pos:start="109:82" pos:end="109:84"><name pos:start="109:82" pos:end="109:84">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="113:13" pos:end="113:30"><expr pos:start="113:13" pos:end="113:29"><call pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:21">avio_skip</name><argument_list pos:start="113:22" pos:end="113:29">(<argument pos:start="113:23" pos:end="113:24"><expr pos:start="113:23" pos:end="113:24"><name pos:start="113:23" pos:end="113:24">pb</name></expr></argument>, <argument pos:start="113:27" pos:end="113:28"><expr pos:start="113:27" pos:end="113:28"><literal type="number" pos:start="113:27" pos:end="113:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="117:13" pos:end="117:62">/* read next level up_from_alias/down_to_target */</comment>

            <expr_stmt pos:start="119:13" pos:end="119:44"><expr pos:start="119:13" pos:end="119:43"><name pos:start="119:13" pos:end="119:27"><name pos:start="119:13" pos:end="119:16">dref</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:27">nlvl_from</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <call pos:start="119:31" pos:end="119:43"><name pos:start="119:31" pos:end="119:39">avio_rb16</name><argument_list pos:start="119:40" pos:end="119:43">(<argument pos:start="119:41" pos:end="119:42"><expr pos:start="119:41" pos:end="119:42"><name pos:start="119:41" pos:end="119:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:44"><expr pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:16">dref</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:25">nlvl_to</name></name>   <operator pos:start="121:29" pos:end="121:29">=</operator> <call pos:start="121:31" pos:end="121:43"><name pos:start="121:31" pos:end="121:39">avio_rb16</name><argument_list pos:start="121:40" pos:end="121:43">(<argument pos:start="121:41" pos:end="121:42"><expr pos:start="121:41" pos:end="121:42"><name pos:start="121:41" pos:end="121:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="125:51"><expr pos:start="123:13" pos:end="125:50"><call pos:start="123:13" pos:end="125:50"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="125:50">(<argument pos:start="123:20" pos:end="123:24"><expr pos:start="123:20" pos:end="123:24"><name pos:start="123:20" pos:end="123:24"><name pos:start="123:20" pos:end="123:20">c</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:24">fc</name></name></expr></argument>, <argument pos:start="123:27" pos:end="123:38"><expr pos:start="123:27" pos:end="123:38"><name pos:start="123:27" pos:end="123:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="123:41" pos:end="123:68"><expr pos:start="123:41" pos:end="123:68"><literal type="string" pos:start="123:41" pos:end="123:68">"nlvl from %d, nlvl to %d\n"</literal></expr></argument>,

                   <argument pos:start="125:20" pos:end="125:34"><expr pos:start="125:20" pos:end="125:34"><name pos:start="125:20" pos:end="125:34"><name pos:start="125:20" pos:end="125:23">dref</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:34">nlvl_from</name></name></expr></argument>, <argument pos:start="125:37" pos:end="125:49"><expr pos:start="125:37" pos:end="125:49"><name pos:start="125:37" pos:end="125:49"><name pos:start="125:37" pos:end="125:40">dref</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:49">nlvl_to</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="129:13" pos:end="129:30"><expr pos:start="129:13" pos:end="129:29"><call pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:21">avio_skip</name><argument_list pos:start="129:22" pos:end="129:29">(<argument pos:start="129:23" pos:end="129:24"><expr pos:start="129:23" pos:end="129:24"><name pos:start="129:23" pos:end="129:24">pb</name></expr></argument>, <argument pos:start="129:27" pos:end="129:28"><expr pos:start="129:27" pos:end="129:28"><literal type="number" pos:start="129:27" pos:end="129:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="133:13" pos:end="205:13">for <control pos:start="133:17" pos:end="133:64">(<init pos:start="133:18" pos:end="133:26"><expr pos:start="133:18" pos:end="133:25"><name pos:start="133:18" pos:end="133:21">type</name> <operator pos:start="133:23" pos:end="133:23">=</operator> <literal type="number" pos:start="133:25" pos:end="133:25">0</literal></expr>;</init> <condition pos:start="133:28" pos:end="133:62"><expr pos:start="133:28" pos:end="133:61"><name pos:start="133:28" pos:end="133:31">type</name> <operator pos:start="133:33" pos:end="133:34">!=</operator> <operator pos:start="133:36" pos:end="133:36">-</operator><literal type="number" pos:start="133:37" pos:end="133:37">1</literal> <operator pos:start="133:39" pos:end="133:40">&amp;&amp;</operator> <call pos:start="133:42" pos:end="133:54"><name pos:start="133:42" pos:end="133:50">avio_tell</name><argument_list pos:start="133:51" pos:end="133:54">(<argument pos:start="133:52" pos:end="133:53"><expr pos:start="133:52" pos:end="133:53"><name pos:start="133:52" pos:end="133:53">pb</name></expr></argument>)</argument_list></call> <operator pos:start="133:56" pos:end="133:56">&lt;</operator> <name pos:start="133:58" pos:end="133:61">next</name></expr>;</condition> <incr/>)</control> <block pos:start="133:66" pos:end="205:13">{<block_content pos:start="135:17" pos:end="203:39">

                <if_stmt pos:start="135:17" pos:end="137:39"><if pos:start="135:17" pos:end="137:39">if<condition pos:start="135:19" pos:end="135:32">(<expr pos:start="135:20" pos:end="135:31"><call pos:start="135:20" pos:end="135:31"><name pos:start="135:20" pos:end="135:27">url_feof</name><argument_list pos:start="135:28" pos:end="135:31">(<argument pos:start="135:29" pos:end="135:30"><expr pos:start="135:29" pos:end="135:30"><name pos:start="135:29" pos:end="135:30">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:21" pos:end="137:39"><block_content pos:start="137:21" pos:end="137:39">

                    <return pos:start="137:21" pos:end="137:39">return <expr pos:start="137:28" pos:end="137:38"><name pos:start="137:28" pos:end="137:38">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:37"><expr pos:start="139:17" pos:end="139:36"><name pos:start="139:17" pos:end="139:20">type</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <call pos:start="139:24" pos:end="139:36"><name pos:start="139:24" pos:end="139:32">avio_rb16</name><argument_list pos:start="139:33" pos:end="139:36">(<argument pos:start="139:34" pos:end="139:35"><expr pos:start="139:34" pos:end="139:35"><name pos:start="139:34" pos:end="139:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:36"><expr pos:start="141:17" pos:end="141:35"><name pos:start="141:17" pos:end="141:19">len</name> <operator pos:start="141:21" pos:end="141:21">=</operator> <call pos:start="141:23" pos:end="141:35"><name pos:start="141:23" pos:end="141:31">avio_rb16</name><argument_list pos:start="141:32" pos:end="141:35">(<argument pos:start="141:33" pos:end="141:34"><expr pos:start="141:33" pos:end="141:34"><name pos:start="141:33" pos:end="141:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:76"><expr pos:start="143:17" pos:end="143:75"><call pos:start="143:17" pos:end="143:75"><name pos:start="143:17" pos:end="143:22">av_log</name><argument_list pos:start="143:23" pos:end="143:75">(<argument pos:start="143:24" pos:end="143:28"><expr pos:start="143:24" pos:end="143:28"><name pos:start="143:24" pos:end="143:28"><name pos:start="143:24" pos:end="143:24">c</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:28">fc</name></name></expr></argument>, <argument pos:start="143:31" pos:end="143:42"><expr pos:start="143:31" pos:end="143:42"><name pos:start="143:31" pos:end="143:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="143:45" pos:end="143:63"><expr pos:start="143:45" pos:end="143:63"><literal type="string" pos:start="143:45" pos:end="143:63">"type %d, len %d\n"</literal></expr></argument>, <argument pos:start="143:66" pos:end="143:69"><expr pos:start="143:66" pos:end="143:69"><name pos:start="143:66" pos:end="143:69">type</name></expr></argument>, <argument pos:start="143:72" pos:end="143:74"><expr pos:start="143:72" pos:end="143:74"><name pos:start="143:72" pos:end="143:74">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="145:17" pos:end="147:29"><if pos:start="145:17" pos:end="147:29">if <condition pos:start="145:20" pos:end="145:26">(<expr pos:start="145:21" pos:end="145:25"><name pos:start="145:21" pos:end="145:23">len</name><operator pos:start="145:24" pos:end="145:24">&amp;</operator><literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>)</condition><block type="pseudo" pos:start="147:21" pos:end="147:29"><block_content pos:start="147:21" pos:end="147:29">

                    <expr_stmt pos:start="147:21" pos:end="147:29"><expr pos:start="147:21" pos:end="147:28"><name pos:start="147:21" pos:end="147:23">len</name> <operator pos:start="147:25" pos:end="147:26">+=</operator> <literal type="number" pos:start="147:28" pos:end="147:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="149:17" pos:end="203:39"><if pos:start="149:17" pos:end="179:17">if <condition pos:start="149:20" pos:end="149:30">(<expr pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:24">type</name> <operator pos:start="149:26" pos:end="149:27">==</operator> <literal type="number" pos:start="149:29" pos:end="149:29">2</literal></expr>)</condition> <block pos:start="149:32" pos:end="179:17">{<block_content pos:start="151:21" pos:end="177:73"> <comment type="line" pos:start="149:34" pos:end="149:49">// absolute path</comment>

                    <expr_stmt pos:start="151:21" pos:end="151:40"><expr pos:start="151:21" pos:end="151:39"><call pos:start="151:21" pos:end="151:39"><name pos:start="151:21" pos:end="151:27">av_free</name><argument_list pos:start="151:28" pos:end="151:39">(<argument pos:start="151:29" pos:end="151:38"><expr pos:start="151:29" pos:end="151:38"><name pos:start="151:29" pos:end="151:38"><name pos:start="151:29" pos:end="151:32">dref</name><operator pos:start="151:33" pos:end="151:34">-&gt;</operator><name pos:start="151:35" pos:end="151:38">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:51"><expr pos:start="153:21" pos:end="153:50"><name pos:start="153:21" pos:end="153:30"><name pos:start="153:21" pos:end="153:24">dref</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:30">path</name></name> <operator pos:start="153:32" pos:end="153:32">=</operator> <call pos:start="153:34" pos:end="153:50"><name pos:start="153:34" pos:end="153:43">av_mallocz</name><argument_list pos:start="153:44" pos:end="153:50">(<argument pos:start="153:45" pos:end="153:49"><expr pos:start="153:45" pos:end="153:49"><name pos:start="153:45" pos:end="153:47">len</name><operator pos:start="153:48" pos:end="153:48">+</operator><literal type="number" pos:start="153:49" pos:end="153:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="155:21" pos:end="157:47"><if pos:start="155:21" pos:end="157:47">if <condition pos:start="155:24" pos:end="155:36">(<expr pos:start="155:25" pos:end="155:35"><operator pos:start="155:25" pos:end="155:25">!</operator><name pos:start="155:26" pos:end="155:35"><name pos:start="155:26" pos:end="155:29">dref</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:35">path</name></name></expr>)</condition><block type="pseudo" pos:start="157:25" pos:end="157:47"><block_content pos:start="157:25" pos:end="157:47">

                        <return pos:start="157:25" pos:end="157:47">return <expr pos:start="157:32" pos:end="157:46"><call pos:start="157:32" pos:end="157:46"><name pos:start="157:32" pos:end="157:38">AVERROR</name><argument_list pos:start="157:39" pos:end="157:46">(<argument pos:start="157:40" pos:end="157:45"><expr pos:start="157:40" pos:end="157:45"><name pos:start="157:40" pos:end="157:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:51"><expr pos:start="159:21" pos:end="159:50"><call pos:start="159:21" pos:end="159:50"><name pos:start="159:21" pos:end="159:29">avio_read</name><argument_list pos:start="159:30" pos:end="159:50">(<argument pos:start="159:31" pos:end="159:32"><expr pos:start="159:31" pos:end="159:32"><name pos:start="159:31" pos:end="159:32">pb</name></expr></argument>, <argument pos:start="159:35" pos:end="159:44"><expr pos:start="159:35" pos:end="159:44"><name pos:start="159:35" pos:end="159:44"><name pos:start="159:35" pos:end="159:38">dref</name><operator pos:start="159:39" pos:end="159:40">-&gt;</operator><name pos:start="159:41" pos:end="159:44">path</name></name></expr></argument>, <argument pos:start="159:47" pos:end="159:49"><expr pos:start="159:47" pos:end="159:49"><name pos:start="159:47" pos:end="159:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="161:21" pos:end="169:21"><if pos:start="161:21" pos:end="169:21">if <condition pos:start="161:24" pos:end="161:91">(<expr pos:start="161:25" pos:end="161:90"><name pos:start="161:25" pos:end="161:27">len</name> <operator pos:start="161:29" pos:end="161:29">&gt;</operator> <name pos:start="161:31" pos:end="161:40">volume_len</name> <operator pos:start="161:42" pos:end="161:43">&amp;&amp;</operator> <operator pos:start="161:45" pos:end="161:45">!</operator><call pos:start="161:46" pos:end="161:90"><name pos:start="161:46" pos:end="161:52">strncmp</name><argument_list pos:start="161:53" pos:end="161:90">(<argument pos:start="161:54" pos:end="161:63"><expr pos:start="161:54" pos:end="161:63"><name pos:start="161:54" pos:end="161:63"><name pos:start="161:54" pos:end="161:57">dref</name><operator pos:start="161:58" pos:end="161:59">-&gt;</operator><name pos:start="161:60" pos:end="161:63">path</name></name></expr></argument>, <argument pos:start="161:66" pos:end="161:77"><expr pos:start="161:66" pos:end="161:77"><name pos:start="161:66" pos:end="161:77"><name pos:start="161:66" pos:end="161:69">dref</name><operator pos:start="161:70" pos:end="161:71">-&gt;</operator><name pos:start="161:72" pos:end="161:77">volume</name></name></expr></argument>, <argument pos:start="161:80" pos:end="161:89"><expr pos:start="161:80" pos:end="161:89"><name pos:start="161:80" pos:end="161:89">volume_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:93" pos:end="169:21">{<block_content pos:start="163:25" pos:end="167:44">

                        <expr_stmt pos:start="163:25" pos:end="163:42"><expr pos:start="163:25" pos:end="163:41"><name pos:start="163:25" pos:end="163:27">len</name> <operator pos:start="163:29" pos:end="163:30">-=</operator> <name pos:start="163:32" pos:end="163:41">volume_len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="165:25" pos:end="165:72"><expr pos:start="165:25" pos:end="165:71"><call pos:start="165:25" pos:end="165:71"><name pos:start="165:25" pos:end="165:31">memmove</name><argument_list pos:start="165:32" pos:end="165:71">(<argument pos:start="165:33" pos:end="165:42"><expr pos:start="165:33" pos:end="165:42"><name pos:start="165:33" pos:end="165:42"><name pos:start="165:33" pos:end="165:36">dref</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:42">path</name></name></expr></argument>, <argument pos:start="165:45" pos:end="165:65"><expr pos:start="165:45" pos:end="165:65"><name pos:start="165:45" pos:end="165:54"><name pos:start="165:45" pos:end="165:48">dref</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:54">path</name></name><operator pos:start="165:55" pos:end="165:55">+</operator><name pos:start="165:56" pos:end="165:65">volume_len</name></expr></argument>, <argument pos:start="165:68" pos:end="165:70"><expr pos:start="165:68" pos:end="165:70"><name pos:start="165:68" pos:end="165:70">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="167:25" pos:end="167:44"><expr pos:start="167:25" pos:end="167:43"><name pos:start="167:25" pos:end="167:39"><name pos:start="167:25" pos:end="167:28">dref</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:34">path</name><index pos:start="167:35" pos:end="167:39">[<expr pos:start="167:36" pos:end="167:38"><name pos:start="167:36" pos:end="167:38">len</name></expr>]</index></name> <operator pos:start="167:41" pos:end="167:41">=</operator> <literal type="number" pos:start="167:43" pos:end="167:43">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <for pos:start="171:21" pos:end="175:48">for <control pos:start="171:25" pos:end="171:45">(<init pos:start="171:26" pos:end="171:31"><expr pos:start="171:26" pos:end="171:30"><name pos:start="171:26" pos:end="171:26">j</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr>;</init> <condition pos:start="171:33" pos:end="171:40"><expr pos:start="171:33" pos:end="171:39"><name pos:start="171:33" pos:end="171:33">j</name> <operator pos:start="171:35" pos:end="171:35">&lt;</operator> <name pos:start="171:37" pos:end="171:39">len</name></expr>;</condition> <incr pos:start="171:42" pos:end="171:44"><expr pos:start="171:42" pos:end="171:44"><name pos:start="171:42" pos:end="171:42">j</name><operator pos:start="171:43" pos:end="171:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="173:25" pos:end="175:48"><block_content pos:start="173:25" pos:end="175:48">

                        <if_stmt pos:start="173:25" pos:end="175:48"><if pos:start="173:25" pos:end="175:48">if <condition pos:start="173:28" pos:end="173:49">(<expr pos:start="173:29" pos:end="173:48"><name pos:start="173:29" pos:end="173:41"><name pos:start="173:29" pos:end="173:32">dref</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:38">path</name><index pos:start="173:39" pos:end="173:41">[<expr pos:start="173:40" pos:end="173:40"><name pos:start="173:40" pos:end="173:40">j</name></expr>]</index></name> <operator pos:start="173:43" pos:end="173:44">==</operator> <literal type="char" pos:start="173:46" pos:end="173:48">':'</literal></expr>)</condition><block type="pseudo" pos:start="175:29" pos:end="175:48"><block_content pos:start="175:29" pos:end="175:48">

                            <expr_stmt pos:start="175:29" pos:end="175:48"><expr pos:start="175:29" pos:end="175:47"><name pos:start="175:29" pos:end="175:41"><name pos:start="175:29" pos:end="175:32">dref</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:38">path</name><index pos:start="175:39" pos:end="175:41">[<expr pos:start="175:40" pos:end="175:40"><name pos:start="175:40" pos:end="175:40">j</name></expr>]</index></name> <operator pos:start="175:43" pos:end="175:43">=</operator> <literal type="char" pos:start="175:45" pos:end="175:47">'/'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                    <expr_stmt pos:start="177:21" pos:end="177:73"><expr pos:start="177:21" pos:end="177:72"><call pos:start="177:21" pos:end="177:72"><name pos:start="177:21" pos:end="177:26">av_log</name><argument_list pos:start="177:27" pos:end="177:72">(<argument pos:start="177:28" pos:end="177:32"><expr pos:start="177:28" pos:end="177:32"><name pos:start="177:28" pos:end="177:32"><name pos:start="177:28" pos:end="177:28">c</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:32">fc</name></name></expr></argument>, <argument pos:start="177:35" pos:end="177:46"><expr pos:start="177:35" pos:end="177:46"><name pos:start="177:35" pos:end="177:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="177:49" pos:end="177:59"><expr pos:start="177:49" pos:end="177:59"><literal type="string" pos:start="177:49" pos:end="177:59">"path %s\n"</literal></expr></argument>, <argument pos:start="177:62" pos:end="177:71"><expr pos:start="177:62" pos:end="177:71"><name pos:start="177:62" pos:end="177:71"><name pos:start="177:62" pos:end="177:65">dref</name><operator pos:start="177:66" pos:end="177:67">-&gt;</operator><name pos:start="177:68" pos:end="177:71">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="179:19" pos:end="201:17">else if <condition pos:start="179:27" pos:end="179:37">(<expr pos:start="179:28" pos:end="179:36"><name pos:start="179:28" pos:end="179:31">type</name> <operator pos:start="179:33" pos:end="179:34">==</operator> <literal type="number" pos:start="179:36" pos:end="179:36">0</literal></expr>)</condition> <block pos:start="179:39" pos:end="201:17">{<block_content pos:start="181:21" pos:end="199:71"> <comment type="line" pos:start="179:41" pos:end="179:57">// directory name</comment>

                    <expr_stmt pos:start="181:21" pos:end="181:39"><expr pos:start="181:21" pos:end="181:38"><call pos:start="181:21" pos:end="181:38"><name pos:start="181:21" pos:end="181:27">av_free</name><argument_list pos:start="181:28" pos:end="181:38">(<argument pos:start="181:29" pos:end="181:37"><expr pos:start="181:29" pos:end="181:37"><name pos:start="181:29" pos:end="181:37"><name pos:start="181:29" pos:end="181:32">dref</name><operator pos:start="181:33" pos:end="181:34">-&gt;</operator><name pos:start="181:35" pos:end="181:37">dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:49"><expr pos:start="183:21" pos:end="183:48"><name pos:start="183:21" pos:end="183:29"><name pos:start="183:21" pos:end="183:24">dref</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:29">dir</name></name> <operator pos:start="183:31" pos:end="183:31">=</operator> <call pos:start="183:33" pos:end="183:48"><name pos:start="183:33" pos:end="183:41">av_malloc</name><argument_list pos:start="183:42" pos:end="183:48">(<argument pos:start="183:43" pos:end="183:47"><expr pos:start="183:43" pos:end="183:47"><name pos:start="183:43" pos:end="183:45">len</name><operator pos:start="183:46" pos:end="183:46">+</operator><literal type="number" pos:start="183:47" pos:end="183:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="185:21" pos:end="187:47"><if pos:start="185:21" pos:end="187:47">if <condition pos:start="185:24" pos:end="185:35">(<expr pos:start="185:25" pos:end="185:34"><operator pos:start="185:25" pos:end="185:25">!</operator><name pos:start="185:26" pos:end="185:34"><name pos:start="185:26" pos:end="185:29">dref</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:34">dir</name></name></expr>)</condition><block type="pseudo" pos:start="187:25" pos:end="187:47"><block_content pos:start="187:25" pos:end="187:47">

                        <return pos:start="187:25" pos:end="187:47">return <expr pos:start="187:32" pos:end="187:46"><call pos:start="187:32" pos:end="187:46"><name pos:start="187:32" pos:end="187:38">AVERROR</name><argument_list pos:start="187:39" pos:end="187:46">(<argument pos:start="187:40" pos:end="187:45"><expr pos:start="187:40" pos:end="187:45"><name pos:start="187:40" pos:end="187:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:50"><expr pos:start="189:21" pos:end="189:49"><call pos:start="189:21" pos:end="189:49"><name pos:start="189:21" pos:end="189:29">avio_read</name><argument_list pos:start="189:30" pos:end="189:49">(<argument pos:start="189:31" pos:end="189:32"><expr pos:start="189:31" pos:end="189:32"><name pos:start="189:31" pos:end="189:32">pb</name></expr></argument>, <argument pos:start="189:35" pos:end="189:43"><expr pos:start="189:35" pos:end="189:43"><name pos:start="189:35" pos:end="189:43"><name pos:start="189:35" pos:end="189:38">dref</name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:43">dir</name></name></expr></argument>, <argument pos:start="189:46" pos:end="189:48"><expr pos:start="189:46" pos:end="189:48"><name pos:start="189:46" pos:end="189:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:39"><expr pos:start="191:21" pos:end="191:38"><name pos:start="191:21" pos:end="191:34"><name pos:start="191:21" pos:end="191:24">dref</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:29">dir</name><index pos:start="191:30" pos:end="191:34">[<expr pos:start="191:31" pos:end="191:33"><name pos:start="191:31" pos:end="191:33">len</name></expr>]</index></name> <operator pos:start="191:36" pos:end="191:36">=</operator> <literal type="number" pos:start="191:38" pos:end="191:38">0</literal></expr>;</expr_stmt>

                    <for pos:start="193:21" pos:end="197:47">for <control pos:start="193:25" pos:end="193:45">(<init pos:start="193:26" pos:end="193:31"><expr pos:start="193:26" pos:end="193:30"><name pos:start="193:26" pos:end="193:26">j</name> <operator pos:start="193:28" pos:end="193:28">=</operator> <literal type="number" pos:start="193:30" pos:end="193:30">0</literal></expr>;</init> <condition pos:start="193:33" pos:end="193:40"><expr pos:start="193:33" pos:end="193:39"><name pos:start="193:33" pos:end="193:33">j</name> <operator pos:start="193:35" pos:end="193:35">&lt;</operator> <name pos:start="193:37" pos:end="193:39">len</name></expr>;</condition> <incr pos:start="193:42" pos:end="193:44"><expr pos:start="193:42" pos:end="193:44"><name pos:start="193:42" pos:end="193:42">j</name><operator pos:start="193:43" pos:end="193:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:25" pos:end="197:47"><block_content pos:start="195:25" pos:end="197:47">

                        <if_stmt pos:start="195:25" pos:end="197:47"><if pos:start="195:25" pos:end="197:47">if <condition pos:start="195:28" pos:end="195:48">(<expr pos:start="195:29" pos:end="195:47"><name pos:start="195:29" pos:end="195:40"><name pos:start="195:29" pos:end="195:32">dref</name><operator pos:start="195:33" pos:end="195:34">-&gt;</operator><name pos:start="195:35" pos:end="195:37">dir</name><index pos:start="195:38" pos:end="195:40">[<expr pos:start="195:39" pos:end="195:39"><name pos:start="195:39" pos:end="195:39">j</name></expr>]</index></name> <operator pos:start="195:42" pos:end="195:43">==</operator> <literal type="char" pos:start="195:45" pos:end="195:47">':'</literal></expr>)</condition><block type="pseudo" pos:start="197:29" pos:end="197:47"><block_content pos:start="197:29" pos:end="197:47">

                            <expr_stmt pos:start="197:29" pos:end="197:47"><expr pos:start="197:29" pos:end="197:46"><name pos:start="197:29" pos:end="197:40"><name pos:start="197:29" pos:end="197:32">dref</name><operator pos:start="197:33" pos:end="197:34">-&gt;</operator><name pos:start="197:35" pos:end="197:37">dir</name><index pos:start="197:38" pos:end="197:40">[<expr pos:start="197:39" pos:end="197:39"><name pos:start="197:39" pos:end="197:39">j</name></expr>]</index></name> <operator pos:start="197:42" pos:end="197:42">=</operator> <literal type="char" pos:start="197:44" pos:end="197:46">'/'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                    <expr_stmt pos:start="199:21" pos:end="199:71"><expr pos:start="199:21" pos:end="199:70"><call pos:start="199:21" pos:end="199:70"><name pos:start="199:21" pos:end="199:26">av_log</name><argument_list pos:start="199:27" pos:end="199:70">(<argument pos:start="199:28" pos:end="199:32"><expr pos:start="199:28" pos:end="199:32"><name pos:start="199:28" pos:end="199:32"><name pos:start="199:28" pos:end="199:28">c</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:32">fc</name></name></expr></argument>, <argument pos:start="199:35" pos:end="199:46"><expr pos:start="199:35" pos:end="199:46"><name pos:start="199:35" pos:end="199:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="199:49" pos:end="199:58"><expr pos:start="199:49" pos:end="199:58"><literal type="string" pos:start="199:49" pos:end="199:58">"dir %s\n"</literal></expr></argument>, <argument pos:start="199:61" pos:end="199:69"><expr pos:start="199:61" pos:end="199:69"><name pos:start="199:61" pos:end="199:69"><name pos:start="199:61" pos:end="199:64">dref</name><operator pos:start="199:65" pos:end="199:66">-&gt;</operator><name pos:start="199:67" pos:end="199:69">dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="201:19" pos:end="203:39">else<block type="pseudo" pos:start="203:21" pos:end="203:39"><block_content pos:start="203:21" pos:end="203:39">

                    <expr_stmt pos:start="203:21" pos:end="203:39"><expr pos:start="203:21" pos:end="203:38"><call pos:start="203:21" pos:end="203:38"><name pos:start="203:21" pos:end="203:29">avio_skip</name><argument_list pos:start="203:30" pos:end="203:38">(<argument pos:start="203:31" pos:end="203:32"><expr pos:start="203:31" pos:end="203:32"><name pos:start="203:31" pos:end="203:32">pb</name></expr></argument>, <argument pos:start="203:35" pos:end="203:37"><expr pos:start="203:35" pos:end="203:37"><name pos:start="203:35" pos:end="203:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:38"><expr pos:start="209:9" pos:end="209:37"><call pos:start="209:9" pos:end="209:37"><name pos:start="209:9" pos:end="209:17">avio_seek</name><argument_list pos:start="209:18" pos:end="209:37">(<argument pos:start="209:19" pos:end="209:20"><expr pos:start="209:19" pos:end="209:20"><name pos:start="209:19" pos:end="209:20">pb</name></expr></argument>, <argument pos:start="209:23" pos:end="209:26"><expr pos:start="209:23" pos:end="209:26"><name pos:start="209:23" pos:end="209:26">next</name></expr></argument>, <argument pos:start="209:29" pos:end="209:36"><expr pos:start="209:29" pos:end="209:36"><name pos:start="209:29" pos:end="209:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
