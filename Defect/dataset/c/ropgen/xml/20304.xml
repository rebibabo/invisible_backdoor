<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20304.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:34">get_cluster_offset</name><parameter_list pos:start="1:35" pos:end="3:65">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:50"><decl pos:start="3:36" pos:end="3:50"><type pos:start="3:36" pos:end="3:50"><name pos:start="3:36" pos:end="3:43">uint64_t</name></type> <name pos:start="3:45" pos:end="3:50">offset</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">allocate</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="151:1">{<block_content pos:start="7:5" pos:end="149:26">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVVmdkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:25">l1_index</name></decl>, <decl pos:start="9:28" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:28" pos:end="9:36">l2_offset</name></decl>, <decl pos:start="9:39" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:39" pos:end="9:46">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">min_index</name></decl>, <decl pos:start="11:20" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:20">i</name></decl>, <decl pos:start="11:23" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:23">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:22">min_count</name></decl>, <decl pos:start="13:25" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:12"><modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:33">l2_table</name></decl>, <decl pos:start="13:36" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:36" pos:end="13:38">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:27">cluster_offset</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:12">l1_index</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <operator pos:start="19:16" pos:end="19:16">(</operator><name pos:start="19:17" pos:end="19:22">offset</name> <operator pos:start="19:24" pos:end="19:25">&gt;&gt;</operator> <literal type="number" pos:start="19:27" pos:end="19:27">9</literal><operator pos:start="19:28" pos:end="19:28">)</operator> <operator pos:start="19:30" pos:end="19:30">/</operator> <name pos:start="19:32" pos:end="19:50"><name pos:start="19:32" pos:end="19:32">s</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:50">l1_entry_sectors</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:16">l1_index</name> <operator pos:start="21:18" pos:end="21:19">&gt;=</operator> <name pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:30">l1_size</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:13">l2_offset</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">l1_table</name><index pos:start="25:28" pos:end="25:37">[<expr pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:36">l1_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:18">l2_offset</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="31:5" pos:end="53:5">for<control pos:start="31:8" pos:end="31:38">(<init pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">i</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</init> <condition pos:start="31:16" pos:end="31:33"><expr pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:16">i</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <name pos:start="31:20" pos:end="31:32">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:35">i</name><operator pos:start="31:36" pos:end="31:37">++</operator></expr></incr>)</control> <block pos:start="31:40" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:9">

        <if_stmt pos:start="33:9" pos:end="51:9"><if pos:start="33:9" pos:end="51:9">if <condition pos:start="33:12" pos:end="33:48">(<expr pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:21">l2_offset</name> <operator pos:start="33:23" pos:end="33:24">==</operator> <name pos:start="33:26" pos:end="33:47"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:44">l2_cache_offsets</name><index pos:start="33:45" pos:end="33:47">[<expr pos:start="33:46" pos:end="33:46"><name pos:start="33:46" pos:end="33:46">i</name></expr>]</index></name></expr>)</condition> <block pos:start="33:50" pos:end="51:9">{<block_content pos:start="37:13" pos:end="49:23">

            <comment type="block" pos:start="35:13" pos:end="35:41">/* increment the hit count */</comment>

            <if_stmt pos:start="37:13" pos:end="45:13"><if pos:start="37:13" pos:end="45:13">if <condition pos:start="37:16" pos:end="37:54">(<expr pos:start="37:17" pos:end="37:53"><operator pos:start="37:17" pos:end="37:18">++</operator><name pos:start="37:19" pos:end="37:39"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:36">l2_cache_counts</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">i</name></expr>]</index></name> <operator pos:start="37:41" pos:end="37:42">==</operator> <literal type="number" pos:start="37:44" pos:end="37:53">0xffffffff</literal></expr>)</condition> <block pos:start="37:56" pos:end="45:13">{<block_content pos:start="39:17" pos:end="43:17">

                <for pos:start="39:17" pos:end="43:17">for<control pos:start="39:20" pos:end="39:50">(<init pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:21">j</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>;</init> <condition pos:start="39:28" pos:end="39:45"><expr pos:start="39:28" pos:end="39:44"><name pos:start="39:28" pos:end="39:28">j</name> <operator pos:start="39:30" pos:end="39:30">&lt;</operator> <name pos:start="39:32" pos:end="39:44">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="39:47" pos:end="39:49"><expr pos:start="39:47" pos:end="39:49"><name pos:start="39:47" pos:end="39:47">j</name><operator pos:start="39:48" pos:end="39:49">++</operator></expr></incr>)</control> <block pos:start="39:52" pos:end="43:17">{<block_content pos:start="41:21" pos:end="41:48">

                    <expr_stmt pos:start="41:21" pos:end="41:48"><expr pos:start="41:21" pos:end="41:47"><name pos:start="41:21" pos:end="41:41"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:38">l2_cache_counts</name><index pos:start="41:39" pos:end="41:41">[<expr pos:start="41:40" pos:end="41:40"><name pos:start="41:40" pos:end="41:40">j</name></expr>]</index></name> <operator pos:start="41:43" pos:end="41:45">&gt;&gt;=</operator> <literal type="number" pos:start="41:47" pos:end="41:47">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:54"><expr pos:start="47:13" pos:end="47:53"><name pos:start="47:13" pos:end="47:20">l2_table</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:34"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:34">l2_cache</name></name> <operator pos:start="47:36" pos:end="47:36">+</operator> <operator pos:start="47:38" pos:end="47:38">(</operator><name pos:start="47:39" pos:end="47:39">i</name> <operator pos:start="47:41" pos:end="47:41">*</operator> <name pos:start="47:43" pos:end="47:52"><name pos:start="47:43" pos:end="47:43">s</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:52">l2_size</name></name><operator pos:start="47:53" pos:end="47:53">)</operator></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:23">goto <name pos:start="49:18" pos:end="49:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="55:5" pos:end="55:59">/* not found: load a new entry in the least used one */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:13">min_index</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:13">min_count</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:26">0xffffffff</literal></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="71:5">for<control pos:start="61:8" pos:end="61:38">(<init pos:start="61:9" pos:end="61:14"><expr pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">i</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <literal type="number" pos:start="61:13" pos:end="61:13">0</literal></expr>;</init> <condition pos:start="61:16" pos:end="61:33"><expr pos:start="61:16" pos:end="61:32"><name pos:start="61:16" pos:end="61:16">i</name> <operator pos:start="61:18" pos:end="61:18">&lt;</operator> <name pos:start="61:20" pos:end="61:32">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:35">i</name><operator pos:start="61:36" pos:end="61:37">++</operator></expr></incr>)</control> <block pos:start="61:40" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:9">

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:46">(<expr pos:start="63:13" pos:end="63:45"><name pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:30">l2_cache_counts</name><index pos:start="63:31" pos:end="63:33">[<expr pos:start="63:32" pos:end="63:32"><name pos:start="63:32" pos:end="63:32">i</name></expr>]</index></name> <operator pos:start="63:35" pos:end="63:35">&lt;</operator> <name pos:start="63:37" pos:end="63:45">min_count</name></expr>)</condition> <block pos:start="63:48" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:26">

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:21">min_count</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:45"><name pos:start="65:25" pos:end="65:25">s</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:42">l2_cache_counts</name><index pos:start="65:43" pos:end="65:45">[<expr pos:start="65:44" pos:end="65:44"><name pos:start="65:44" pos:end="65:44">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:21">min_index</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:25">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="73:5" pos:end="73:54"><expr pos:start="73:5" pos:end="73:53"><name pos:start="73:5" pos:end="73:12">l2_table</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:26"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:26">l2_cache</name></name> <operator pos:start="73:28" pos:end="73:28">+</operator> <operator pos:start="73:30" pos:end="73:30">(</operator><name pos:start="73:31" pos:end="73:39">min_index</name> <operator pos:start="73:41" pos:end="73:41">*</operator> <name pos:start="73:43" pos:end="73:52"><name pos:start="73:43" pos:end="73:43">s</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:52">l2_size</name></name><operator pos:start="73:53" pos:end="73:53">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="79:17"><if pos:start="75:5" pos:end="79:17">if <condition pos:start="75:8" pos:end="77:102">(<expr pos:start="75:9" pos:end="77:101"><call pos:start="75:9" pos:end="75:92"><name pos:start="75:9" pos:end="75:18">bdrv_pread</name><argument_list pos:start="75:19" pos:end="75:92">(<argument pos:start="75:20" pos:end="75:24"><expr pos:start="75:20" pos:end="75:24"><name pos:start="75:20" pos:end="75:24"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:24">hd</name></name></expr></argument>, <argument pos:start="75:27" pos:end="75:50"><expr pos:start="75:27" pos:end="75:50"><operator pos:start="75:27" pos:end="75:27">(</operator><name pos:start="75:28" pos:end="75:34">int64_t</name><operator pos:start="75:35" pos:end="75:35">)</operator><name pos:start="75:36" pos:end="75:44">l2_offset</name> <operator pos:start="75:46" pos:end="75:46">*</operator> <literal type="number" pos:start="75:48" pos:end="75:50">512</literal></expr></argument>, <argument pos:start="75:53" pos:end="75:60"><expr pos:start="75:53" pos:end="75:60"><name pos:start="75:53" pos:end="75:60">l2_table</name></expr></argument>, <argument pos:start="75:63" pos:end="75:91"><expr pos:start="75:63" pos:end="75:91"><name pos:start="75:63" pos:end="75:72"><name pos:start="75:63" pos:end="75:63">s</name><operator pos:start="75:64" pos:end="75:65">-&gt;</operator><name pos:start="75:66" pos:end="75:72">l2_size</name></name> <operator pos:start="75:74" pos:end="75:74">*</operator> <sizeof pos:start="75:76" pos:end="75:91">sizeof<argument_list pos:start="75:82" pos:end="75:91">(<argument pos:start="75:83" pos:end="75:90"><expr pos:start="75:83" pos:end="75:90"><name pos:start="75:83" pos:end="75:90">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="75:94" pos:end="75:95">!=</operator> 

                                                                        <name pos:start="77:73" pos:end="77:82"><name pos:start="77:73" pos:end="77:73">s</name><operator pos:start="77:74" pos:end="77:75">-&gt;</operator><name pos:start="77:76" pos:end="77:82">l2_size</name></name> <operator pos:start="77:84" pos:end="77:84">*</operator> <sizeof pos:start="77:86" pos:end="77:101">sizeof<argument_list pos:start="77:92" pos:end="77:101">(<argument pos:start="77:93" pos:end="77:100"><expr pos:start="77:93" pos:end="77:100"><name pos:start="77:93" pos:end="77:100">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:17"><block_content pos:start="79:9" pos:end="79:17">

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:23">l2_cache_offsets</name><index pos:start="83:24" pos:end="83:34">[<expr pos:start="83:25" pos:end="83:33"><name pos:start="83:25" pos:end="83:33">min_index</name></expr>]</index></name> <operator pos:start="83:36" pos:end="83:36">=</operator> <name pos:start="83:38" pos:end="83:46">l2_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:38"><expr pos:start="85:5" pos:end="85:37"><name pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:22">l2_cache_counts</name><index pos:start="85:23" pos:end="85:33">[<expr pos:start="85:24" pos:end="85:32"><name pos:start="85:24" pos:end="85:32">min_index</name></expr>]</index></name> <operator pos:start="85:35" pos:end="85:35">=</operator> <literal type="number" pos:start="85:37" pos:end="85:37">1</literal></expr>;</expr_stmt>

 <label pos:start="87:2" pos:end="87:7"><name pos:start="87:2" pos:end="87:6">found</name>:</label>

    <expr_stmt pos:start="89:5" pos:end="89:65"><expr pos:start="89:5" pos:end="89:64"><name pos:start="89:5" pos:end="89:12">l2_index</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <operator pos:start="89:16" pos:end="89:16">(</operator><operator pos:start="89:17" pos:end="89:17">(</operator><name pos:start="89:18" pos:end="89:23">offset</name> <operator pos:start="89:25" pos:end="89:26">&gt;&gt;</operator> <literal type="number" pos:start="89:28" pos:end="89:28">9</literal><operator pos:start="89:29" pos:end="89:29">)</operator> <operator pos:start="89:31" pos:end="89:31">/</operator> <name pos:start="89:33" pos:end="89:50"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:50">cluster_sectors</name></name><operator pos:start="89:51" pos:end="89:51">)</operator> <operator pos:start="89:53" pos:end="89:53">%</operator> <name pos:start="89:55" pos:end="89:64"><name pos:start="89:55" pos:end="89:55">s</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:64">l2_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:53"><expr pos:start="91:5" pos:end="91:52"><name pos:start="91:5" pos:end="91:18">cluster_offset</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <call pos:start="91:22" pos:end="91:52"><name pos:start="91:22" pos:end="91:32">le32_to_cpu</name><argument_list pos:start="91:33" pos:end="91:52">(<argument pos:start="91:34" pos:end="91:51"><expr pos:start="91:34" pos:end="91:51"><name pos:start="91:34" pos:end="91:51"><name pos:start="91:34" pos:end="91:41">l2_table</name><index pos:start="91:42" pos:end="91:51">[<expr pos:start="91:43" pos:end="91:50"><name pos:start="91:43" pos:end="91:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="145:5"><if pos:start="93:5" pos:end="145:5">if <condition pos:start="93:8" pos:end="93:24">(<expr pos:start="93:9" pos:end="93:23"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:23">cluster_offset</name></expr>)</condition> <block pos:start="93:26" pos:end="145:5">{<block_content pos:start="95:9" pos:end="143:21">

        <decl_stmt pos:start="95:9" pos:end="95:29"><decl pos:start="95:9" pos:end="95:28"><type pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:14">struct</name> <name pos:start="95:16" pos:end="95:19">stat</name></name></type> <name pos:start="95:21" pos:end="95:28">file_buf</name></decl>;</decl_stmt>



        <if_stmt pos:start="99:9" pos:end="101:21"><if pos:start="99:9" pos:end="101:21">if <condition pos:start="99:12" pos:end="99:22">(<expr pos:start="99:13" pos:end="99:21"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:21">allocate</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:21"><block_content pos:start="101:13" pos:end="101:21">

            <return pos:start="101:13" pos:end="101:21">return <expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:41"><expr pos:start="103:9" pos:end="103:40"><call pos:start="103:9" pos:end="103:40"><name pos:start="103:9" pos:end="103:12">stat</name><argument_list pos:start="103:13" pos:end="103:40">(<argument pos:start="103:14" pos:end="103:28"><expr pos:start="103:14" pos:end="103:28"><name pos:start="103:14" pos:end="103:28"><name pos:start="103:14" pos:end="103:14">s</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:18">hd</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:28">filename</name></name></expr></argument>, <argument pos:start="103:31" pos:end="103:39"><expr pos:start="103:31" pos:end="103:39"><operator pos:start="103:31" pos:end="103:31">&amp;</operator><name pos:start="103:32" pos:end="103:39">file_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:42"><expr pos:start="105:9" pos:end="105:41"><name pos:start="105:9" pos:end="105:22">cluster_offset</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:41"><name pos:start="105:26" pos:end="105:33">file_buf</name><operator pos:start="105:34" pos:end="105:34">.</operator><name pos:start="105:35" pos:end="105:41">st_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:73"><expr pos:start="107:9" pos:end="107:72"><call pos:start="107:9" pos:end="107:72"><name pos:start="107:9" pos:end="107:21">bdrv_truncate</name><argument_list pos:start="107:22" pos:end="107:72">(<argument pos:start="107:23" pos:end="107:27"><expr pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:23">s</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:27">hd</name></name></expr></argument>, <argument pos:start="107:30" pos:end="107:71"><expr pos:start="107:30" pos:end="107:71"><name pos:start="107:30" pos:end="107:43">cluster_offset</name> <operator pos:start="107:45" pos:end="107:45">+</operator> <operator pos:start="107:47" pos:end="107:47">(</operator><name pos:start="107:48" pos:end="107:65"><name pos:start="107:48" pos:end="107:48">s</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:65">cluster_sectors</name></name> <operator pos:start="107:67" pos:end="107:68">&lt;&lt;</operator> <literal type="number" pos:start="107:70" pos:end="107:70">9</literal><operator pos:start="107:71" pos:end="107:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:29"><expr pos:start="111:9" pos:end="111:28"><name pos:start="111:9" pos:end="111:22">cluster_offset</name> <operator pos:start="111:24" pos:end="111:26">&gt;&gt;=</operator> <literal type="number" pos:start="111:28" pos:end="111:28">9</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="113:9" pos:end="113:29">/* update L2 table */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:42"><expr pos:start="115:9" pos:end="115:41"><name pos:start="115:9" pos:end="115:11">tmp</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:41"><name pos:start="115:15" pos:end="115:25">cpu_to_le32</name><argument_list pos:start="115:26" pos:end="115:41">(<argument pos:start="115:27" pos:end="115:40"><expr pos:start="115:27" pos:end="115:40"><name pos:start="115:27" pos:end="115:40">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:33"><expr pos:start="117:9" pos:end="117:32"><name pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:16">l2_table</name><index pos:start="117:17" pos:end="117:26">[<expr pos:start="117:18" pos:end="117:25"><name pos:start="117:18" pos:end="117:25">l2_index</name></expr>]</index></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:32">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="123:21"><if pos:start="119:9" pos:end="123:21">if <condition pos:start="119:12" pos:end="121:58">(<expr pos:start="119:13" pos:end="121:57"><call pos:start="119:13" pos:end="121:42"><name pos:start="119:13" pos:end="119:23">bdrv_pwrite</name><argument_list pos:start="119:24" pos:end="121:42">(<argument pos:start="119:25" pos:end="119:29"><expr pos:start="119:25" pos:end="119:29"><name pos:start="119:25" pos:end="119:29"><name pos:start="119:25" pos:end="119:25">s</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:29">hd</name></name></expr></argument>, <argument pos:start="119:32" pos:end="119:84"><expr pos:start="119:32" pos:end="119:84"><operator pos:start="119:32" pos:end="119:32">(</operator><operator pos:start="119:33" pos:end="119:33">(</operator><name pos:start="119:34" pos:end="119:40">int64_t</name><operator pos:start="119:41" pos:end="119:41">)</operator><name pos:start="119:42" pos:end="119:50">l2_offset</name> <operator pos:start="119:52" pos:end="119:52">*</operator> <literal type="number" pos:start="119:54" pos:end="119:56">512</literal><operator pos:start="119:57" pos:end="119:57">)</operator> <operator pos:start="119:59" pos:end="119:59">+</operator> <operator pos:start="119:61" pos:end="119:61">(</operator><name pos:start="119:62" pos:end="119:69">l2_index</name> <operator pos:start="119:71" pos:end="119:71">*</operator> <sizeof pos:start="119:73" pos:end="119:83">sizeof<argument_list pos:start="119:79" pos:end="119:83">(<argument pos:start="119:80" pos:end="119:82"><expr pos:start="119:80" pos:end="119:82"><name pos:start="119:80" pos:end="119:82">tmp</name></expr></argument>)</argument_list></sizeof><operator pos:start="119:84" pos:end="119:84">)</operator></expr></argument>, 

                        <argument pos:start="121:25" pos:end="121:28"><expr pos:start="121:25" pos:end="121:28"><operator pos:start="121:25" pos:end="121:25">&amp;</operator><name pos:start="121:26" pos:end="121:28">tmp</name></expr></argument>, <argument pos:start="121:31" pos:end="121:41"><expr pos:start="121:31" pos:end="121:41"><sizeof pos:start="121:31" pos:end="121:41">sizeof<argument_list pos:start="121:37" pos:end="121:41">(<argument pos:start="121:38" pos:end="121:40"><expr pos:start="121:38" pos:end="121:40"><name pos:start="121:38" pos:end="121:40">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="121:44" pos:end="121:45">!=</operator> <sizeof pos:start="121:47" pos:end="121:57">sizeof<argument_list pos:start="121:53" pos:end="121:57">(<argument pos:start="121:54" pos:end="121:56"><expr pos:start="121:54" pos:end="121:56"><name pos:start="121:54" pos:end="121:56">tmp</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:21"><block_content pos:start="123:13" pos:end="123:21">

            <return pos:start="123:13" pos:end="123:21">return <expr pos:start="123:20" pos:end="123:20"><literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="125:9" pos:end="125:36">/* update backup L2 table */</comment>

        <if_stmt pos:start="127:9" pos:end="137:9"><if pos:start="127:9" pos:end="137:9">if <condition pos:start="127:12" pos:end="127:43">(<expr pos:start="127:13" pos:end="127:42"><name pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:37">l1_backup_table_offset</name></name> <operator pos:start="127:39" pos:end="127:40">!=</operator> <literal type="number" pos:start="127:42" pos:end="127:42">0</literal></expr>)</condition> <block pos:start="127:45" pos:end="137:9">{<block_content pos:start="129:13" pos:end="135:25">

            <expr_stmt pos:start="129:13" pos:end="129:53"><expr pos:start="129:13" pos:end="129:52"><name pos:start="129:13" pos:end="129:21">l2_offset</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:52"><name pos:start="129:25" pos:end="129:25">s</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:42">l1_backup_table</name><index pos:start="129:43" pos:end="129:52">[<expr pos:start="129:44" pos:end="129:51"><name pos:start="129:44" pos:end="129:51">l1_index</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="135:25"><if pos:start="131:13" pos:end="135:25">if <condition pos:start="131:16" pos:end="133:62">(<expr pos:start="131:17" pos:end="133:61"><call pos:start="131:17" pos:end="133:46"><name pos:start="131:17" pos:end="131:27">bdrv_pwrite</name><argument_list pos:start="131:28" pos:end="133:46">(<argument pos:start="131:29" pos:end="131:33"><expr pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:29">s</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:33">hd</name></name></expr></argument>, <argument pos:start="131:36" pos:end="131:88"><expr pos:start="131:36" pos:end="131:88"><operator pos:start="131:36" pos:end="131:36">(</operator><operator pos:start="131:37" pos:end="131:37">(</operator><name pos:start="131:38" pos:end="131:44">int64_t</name><operator pos:start="131:45" pos:end="131:45">)</operator><name pos:start="131:46" pos:end="131:54">l2_offset</name> <operator pos:start="131:56" pos:end="131:56">*</operator> <literal type="number" pos:start="131:58" pos:end="131:60">512</literal><operator pos:start="131:61" pos:end="131:61">)</operator> <operator pos:start="131:63" pos:end="131:63">+</operator> <operator pos:start="131:65" pos:end="131:65">(</operator><name pos:start="131:66" pos:end="131:73">l2_index</name> <operator pos:start="131:75" pos:end="131:75">*</operator> <sizeof pos:start="131:77" pos:end="131:87">sizeof<argument_list pos:start="131:83" pos:end="131:87">(<argument pos:start="131:84" pos:end="131:86"><expr pos:start="131:84" pos:end="131:86"><name pos:start="131:84" pos:end="131:86">tmp</name></expr></argument>)</argument_list></sizeof><operator pos:start="131:88" pos:end="131:88">)</operator></expr></argument>, 

                            <argument pos:start="133:29" pos:end="133:32"><expr pos:start="133:29" pos:end="133:32"><operator pos:start="133:29" pos:end="133:29">&amp;</operator><name pos:start="133:30" pos:end="133:32">tmp</name></expr></argument>, <argument pos:start="133:35" pos:end="133:45"><expr pos:start="133:35" pos:end="133:45"><sizeof pos:start="133:35" pos:end="133:45">sizeof<argument_list pos:start="133:41" pos:end="133:45">(<argument pos:start="133:42" pos:end="133:44"><expr pos:start="133:42" pos:end="133:44"><name pos:start="133:42" pos:end="133:44">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="133:48" pos:end="133:49">!=</operator> <sizeof pos:start="133:51" pos:end="133:61">sizeof<argument_list pos:start="133:57" pos:end="133:61">(<argument pos:start="133:58" pos:end="133:60"><expr pos:start="133:58" pos:end="133:60"><name pos:start="133:58" pos:end="133:60">tmp</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:25"><block_content pos:start="135:17" pos:end="135:25">

                <return pos:start="135:17" pos:end="135:25">return <expr pos:start="135:24" pos:end="135:24"><literal type="number" pos:start="135:24" pos:end="135:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="143:21"><if pos:start="141:9" pos:end="143:21">if <condition pos:start="141:12" pos:end="141:74">(<expr pos:start="141:13" pos:end="141:73"><call pos:start="141:13" pos:end="141:67"><name pos:start="141:13" pos:end="141:29">get_whole_cluster</name><argument_list pos:start="141:30" pos:end="141:67">(<argument pos:start="141:31" pos:end="141:32"><expr pos:start="141:31" pos:end="141:32"><name pos:start="141:31" pos:end="141:32">bs</name></expr></argument>, <argument pos:start="141:35" pos:end="141:48"><expr pos:start="141:35" pos:end="141:48"><name pos:start="141:35" pos:end="141:48">cluster_offset</name></expr></argument>, <argument pos:start="141:51" pos:end="141:56"><expr pos:start="141:51" pos:end="141:56"><name pos:start="141:51" pos:end="141:56">offset</name></expr></argument>, <argument pos:start="141:59" pos:end="141:66"><expr pos:start="141:59" pos:end="141:66"><name pos:start="141:59" pos:end="141:66">allocate</name></expr></argument>)</argument_list></call> <operator pos:start="141:69" pos:end="141:70">==</operator> <operator pos:start="141:72" pos:end="141:72">-</operator><literal type="number" pos:start="141:73" pos:end="141:73">1</literal></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:21"><block_content pos:start="143:13" pos:end="143:21">

            <return pos:start="143:13" pos:end="143:21">return <expr pos:start="143:20" pos:end="143:20"><literal type="number" pos:start="143:20" pos:end="143:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:25"><expr pos:start="147:5" pos:end="147:24"><name pos:start="147:5" pos:end="147:18">cluster_offset</name> <operator pos:start="147:20" pos:end="147:22">&lt;&lt;=</operator> <literal type="number" pos:start="147:24" pos:end="147:24">9</literal></expr>;</expr_stmt>

    <return pos:start="149:5" pos:end="149:26">return <expr pos:start="149:12" pos:end="149:25"><name pos:start="149:12" pos:end="149:25">cluster_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
