<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3723.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">vbe_update_vgaregs</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">VGACommonState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:38">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">h</name></decl>, <decl pos:start="5:12" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:24">shift_control</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:24">(<expr pos:start="9:9" pos:end="9:23"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:23"><name pos:start="9:10" pos:end="9:20">vbe_enabled</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:26" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <comment type="block" pos:start="11:9" pos:end="11:48">/* vbe is turned off -- nothing to do */</comment>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:37">/* graphic mode + memory map 1 */</comment>

    <expr_stmt pos:start="21:5" pos:end="23:31"><expr pos:start="21:5" pos:end="23:30"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:9">gr</name><index pos:start="21:10" pos:end="21:23">[<expr pos:start="21:11" pos:end="21:22"><name pos:start="21:11" pos:end="21:22">VGA_GFX_MISC</name></expr>]</index></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <operator pos:start="21:27" pos:end="21:27">(</operator><name pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:32">gr</name><index pos:start="21:33" pos:end="21:46">[<expr pos:start="21:34" pos:end="21:45"><name pos:start="21:34" pos:end="21:45">VGA_GFX_MISC</name></expr>]</index></name> <operator pos:start="21:48" pos:end="21:48">&amp;</operator> <operator pos:start="21:50" pos:end="21:50">~</operator><literal type="number" pos:start="21:51" pos:end="21:54">0x0c</literal><operator pos:start="21:55" pos:end="21:55">)</operator> <operator pos:start="21:57" pos:end="21:57">|</operator> <literal type="number" pos:start="21:59" pos:end="21:62">0x04</literal> <operator pos:start="21:64" pos:end="21:64">|</operator>

        <name pos:start="23:9" pos:end="23:30">VGA_GR06_GRAPHICS_MODE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:9">cr</name><index pos:start="25:10" pos:end="25:24">[<expr pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:23">VGA_CRTC_MODE</name></expr>]</index></name> <operator pos:start="25:26" pos:end="25:27">|=</operator> <literal type="number" pos:start="25:29" pos:end="25:29">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="25:32" pos:end="25:49">/* no CGA modes */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:9">cr</name><index pos:start="27:10" pos:end="27:26">[<expr pos:start="27:11" pos:end="27:25"><name pos:start="27:11" pos:end="27:25">VGA_CRTC_OFFSET</name></expr>]</index></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:47"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:47">vbe_line_offset</name></name> <operator pos:start="27:49" pos:end="27:50">&gt;&gt;</operator> <literal type="number" pos:start="27:52" pos:end="27:52">3</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:15">/* width */</comment>

    <expr_stmt pos:start="31:5" pos:end="33:53"><expr pos:start="31:5" pos:end="33:52"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:9">cr</name><index pos:start="31:10" pos:end="31:26">[<expr pos:start="31:11" pos:end="31:25"><name pos:start="31:11" pos:end="31:25">VGA_CRTC_H_DISP</name></expr>]</index></name> <operator pos:start="31:28" pos:end="31:28">=</operator>

        <operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:42"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:20">vbe_regs</name><index pos:start="33:21" pos:end="33:42">[<expr pos:start="33:22" pos:end="33:41"><name pos:start="33:22" pos:end="33:41">VBE_DISPI_INDEX_XRES</name></expr>]</index></name> <operator pos:start="33:44" pos:end="33:45">&gt;&gt;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">3</literal><operator pos:start="33:48" pos:end="33:48">)</operator> <operator pos:start="33:50" pos:end="33:50">-</operator> <literal type="number" pos:start="33:52" pos:end="33:52">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:44">/* height (only meaningful if &lt; 1024) */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:5">h</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <name pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">vbe_regs</name><index pos:start="37:20" pos:end="37:41">[<expr pos:start="37:21" pos:end="37:40"><name pos:start="37:21" pos:end="37:40">VBE_DISPI_INDEX_YRES</name></expr>]</index></name> <operator pos:start="37:43" pos:end="37:43">-</operator> <literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:9">cr</name><index pos:start="39:10" pos:end="39:30">[<expr pos:start="39:11" pos:end="39:29"><name pos:start="39:11" pos:end="39:29">VGA_CRTC_V_DISP_END</name></expr>]</index></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <name pos:start="39:34" pos:end="39:34">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:46"><expr pos:start="41:5" pos:end="43:45"><name pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">cr</name><index pos:start="41:10" pos:end="41:28">[<expr pos:start="41:11" pos:end="41:27"><name pos:start="41:11" pos:end="41:27">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:56"><name pos:start="41:33" pos:end="41:33">s</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:37">cr</name><index pos:start="41:38" pos:end="41:56">[<expr pos:start="41:39" pos:end="41:55"><name pos:start="41:39" pos:end="41:55">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="41:58" pos:end="41:58">&amp;</operator> <operator pos:start="41:60" pos:end="41:60">~</operator><literal type="number" pos:start="41:61" pos:end="41:64">0x42</literal><operator pos:start="41:65" pos:end="41:65">)</operator> <operator pos:start="41:67" pos:end="41:67">|</operator>

        <operator pos:start="43:9" pos:end="43:9">(</operator><operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:11">h</name> <operator pos:start="43:13" pos:end="43:14">&gt;&gt;</operator> <literal type="number" pos:start="43:16" pos:end="43:16">7</literal><operator pos:start="43:17" pos:end="43:17">)</operator> <operator pos:start="43:19" pos:end="43:19">&amp;</operator> <literal type="number" pos:start="43:21" pos:end="43:24">0x02</literal><operator pos:start="43:25" pos:end="43:25">)</operator> <operator pos:start="43:27" pos:end="43:27">|</operator> <operator pos:start="43:29" pos:end="43:29">(</operator><operator pos:start="43:30" pos:end="43:30">(</operator><name pos:start="43:31" pos:end="43:31">h</name> <operator pos:start="43:33" pos:end="43:34">&gt;&gt;</operator> <literal type="number" pos:start="43:36" pos:end="43:36">3</literal><operator pos:start="43:37" pos:end="43:37">)</operator> <operator pos:start="43:39" pos:end="43:39">&amp;</operator> <literal type="number" pos:start="43:41" pos:end="43:44">0x40</literal><operator pos:start="43:45" pos:end="43:45">)</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:30">/* line compare to 1023 */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:9">cr</name><index pos:start="47:10" pos:end="47:32">[<expr pos:start="47:11" pos:end="47:31"><name pos:start="47:11" pos:end="47:31">VGA_CRTC_LINE_COMPARE</name></expr>]</index></name> <operator pos:start="47:34" pos:end="47:34">=</operator> <literal type="number" pos:start="47:36" pos:end="47:39">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:9">cr</name><index pos:start="49:10" pos:end="49:28">[<expr pos:start="49:11" pos:end="49:27"><name pos:start="49:11" pos:end="49:27">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="49:30" pos:end="49:31">|=</operator> <literal type="number" pos:start="49:33" pos:end="49:36">0x10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:9">cr</name><index pos:start="51:10" pos:end="51:28">[<expr pos:start="51:11" pos:end="51:27"><name pos:start="51:11" pos:end="51:27">VGA_CRTC_MAX_SCAN</name></expr>]</index></name> <operator pos:start="51:30" pos:end="51:31">|=</operator> <literal type="number" pos:start="51:33" pos:end="51:36">0x40</literal></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="73:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:46">(<expr pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:19">vbe_regs</name><index pos:start="55:20" pos:end="55:40">[<expr pos:start="55:21" pos:end="55:39"><name pos:start="55:21" pos:end="55:39">VBE_DISPI_INDEX_BPP</name></expr>]</index></name> <operator pos:start="55:42" pos:end="55:43">==</operator> <literal type="number" pos:start="55:45" pos:end="55:45">4</literal></expr>)</condition> <block pos:start="55:48" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:40">

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:21">shift_control</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <literal type="number" pos:start="57:25" pos:end="57:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:13">sr</name><index pos:start="59:14" pos:end="59:33">[<expr pos:start="59:15" pos:end="59:32"><name pos:start="59:15" pos:end="59:32">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="59:35" pos:end="59:36">&amp;=</operator> <operator pos:start="59:38" pos:end="59:38">~</operator><literal type="number" pos:start="59:39" pos:end="59:39">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:42" pos:end="59:61">/* no double line */</comment>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="73:5">else <block pos:start="61:12" pos:end="73:5">{<block_content pos:start="63:9" pos:end="71:58">

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:21">shift_control</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">2</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:30">/* set chain 4 mode */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:54"><expr pos:start="67:9" pos:end="67:53"><name pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:13">sr</name><index pos:start="67:14" pos:end="67:34">[<expr pos:start="67:15" pos:end="67:33"><name pos:start="67:15" pos:end="67:33">VGA_SEQ_MEMORY_MODE</name></expr>]</index></name> <operator pos:start="67:36" pos:end="67:37">|=</operator> <name pos:start="67:39" pos:end="67:53">VGA_SR04_CHN_4M</name></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:33">/* activate all planes */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:58"><expr pos:start="71:9" pos:end="71:57"><name pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:13">sr</name><index pos:start="71:14" pos:end="71:34">[<expr pos:start="71:15" pos:end="71:33"><name pos:start="71:15" pos:end="71:33">VGA_SEQ_PLANE_WRITE</name></expr>]</index></name> <operator pos:start="71:36" pos:end="71:37">|=</operator> <name pos:start="71:39" pos:end="71:57">VGA_SR02_ALL_PLANES</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:29"><expr pos:start="75:5" pos:end="77:28"><name pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:9">gr</name><index pos:start="75:10" pos:end="75:23">[<expr pos:start="75:11" pos:end="75:22"><name pos:start="75:11" pos:end="75:22">VGA_GFX_MODE</name></expr>]</index></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <operator pos:start="75:27" pos:end="75:27">(</operator><name pos:start="75:28" pos:end="75:46"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:32">gr</name><index pos:start="75:33" pos:end="75:46">[<expr pos:start="75:34" pos:end="75:45"><name pos:start="75:34" pos:end="75:45">VGA_GFX_MODE</name></expr>]</index></name> <operator pos:start="75:48" pos:end="75:48">&amp;</operator> <operator pos:start="75:50" pos:end="75:50">~</operator><literal type="number" pos:start="75:51" pos:end="75:54">0x60</literal><operator pos:start="75:55" pos:end="75:55">)</operator> <operator pos:start="75:57" pos:end="75:57">|</operator>

        <operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:22">shift_control</name> <operator pos:start="77:24" pos:end="77:25">&lt;&lt;</operator> <literal type="number" pos:start="77:27" pos:end="77:27">5</literal><operator pos:start="77:28" pos:end="77:28">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:38"><expr pos:start="79:5" pos:end="79:37"><name pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:9">cr</name><index pos:start="79:10" pos:end="79:28">[<expr pos:start="79:11" pos:end="79:27"><name pos:start="79:11" pos:end="79:27">VGA_CRTC_MAX_SCAN</name></expr>]</index></name> <operator pos:start="79:30" pos:end="79:31">&amp;=</operator> <operator pos:start="79:33" pos:end="79:33">~</operator><literal type="number" pos:start="79:34" pos:end="79:37">0x9f</literal></expr>;</expr_stmt> <comment type="block" pos:start="79:40" pos:end="79:59">/* no double scan */</comment>

</block_content>}</block></function>
</unit>
