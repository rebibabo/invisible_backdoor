<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26217.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">event_scan</name><parameter_list pos:start="1:23" pos:end="7:56">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:33">PowerPCCPU</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">cpu</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:64"><decl pos:start="1:41" pos:end="1:64"><type pos:start="1:41" pos:end="1:64"><name pos:start="1:41" pos:end="1:57">sPAPRMachineState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:64">spapr</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:37"><decl pos:start="3:24" pos:end="3:37"><type pos:start="3:24" pos:end="3:37"><name pos:start="3:24" pos:end="3:31">uint32_t</name></type> <name pos:start="3:33" pos:end="3:37">token</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:53"><decl pos:start="3:40" pos:end="3:53"><type pos:start="3:40" pos:end="3:53"><name pos:start="3:40" pos:end="3:47">uint32_t</name></type> <name pos:start="3:49" pos:end="3:53">nargs</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:40"><decl pos:start="5:24" pos:end="5:40"><type pos:start="5:24" pos:end="5:40"><name pos:start="5:24" pos:end="5:35">target_ulong</name></type> <name pos:start="5:37" pos:end="5:40">args</name></decl></parameter>,

                       <parameter pos:start="7:24" pos:end="7:36"><decl pos:start="7:24" pos:end="7:36"><type pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:31">uint32_t</name></type> <name pos:start="7:33" pos:end="7:36">nret</name></decl></parameter>, <parameter pos:start="7:39" pos:end="7:55"><decl pos:start="7:39" pos:end="7:55"><type pos:start="7:39" pos:end="7:55"><name pos:start="7:39" pos:end="7:50">target_ulong</name></type> <name pos:start="7:52" pos:end="7:55">rets</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="77:1">{<block_content pos:start="11:5" pos:end="75:47">

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">mask</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:22">buf</name></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:25" pos:end="11:27">len</name></decl>, <decl pos:start="11:30" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:30" pos:end="11:38">event_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">sPAPREventLogEntry</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:29">event</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:25">rtas_error_log</name></name> <modifier pos:start="15:27" pos:end="15:27">*</modifier></type><name pos:start="15:28" pos:end="15:30">hdr</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:13">nargs</name> <operator pos:start="19:15" pos:end="19:16">!=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">4</literal> <operator pos:start="19:20" pos:end="19:21">||</operator> <name pos:start="19:23" pos:end="19:26">nret</name> <operator pos:start="19:28" pos:end="19:29">!=</operator> <literal type="number" pos:start="19:31" pos:end="19:31">1</literal></expr>)</condition> <block pos:start="19:34" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:15">rtas_st</name><argument_list pos:start="21:16" pos:end="21:46">(<argument pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:20">rets</name></expr></argument>, <argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:45"><expr pos:start="21:26" pos:end="21:45"><name pos:start="21:26" pos:end="21:45">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:8">mask</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:27"><name pos:start="29:12" pos:end="29:18">rtas_ld</name><argument_list pos:start="29:19" pos:end="29:27">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">args</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:7">buf</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:26"><name pos:start="31:11" pos:end="31:17">rtas_ld</name><argument_list pos:start="31:18" pos:end="31:26">(<argument pos:start="31:19" pos:end="31:22"><expr pos:start="31:19" pos:end="31:22"><name pos:start="31:19" pos:end="31:22">args</name></expr></argument>, <argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:7">len</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:26"><name pos:start="33:11" pos:end="33:17">rtas_ld</name><argument_list pos:start="33:18" pos:end="33:26">(<argument pos:start="33:19" pos:end="33:22"><expr pos:start="33:19" pos:end="33:22"><name pos:start="33:19" pos:end="33:22">args</name></expr></argument>, <argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:48"><expr pos:start="37:5" pos:end="37:47"><name pos:start="37:5" pos:end="37:9">event</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:34">rtas_event_log_dequeue</name><argument_list pos:start="37:35" pos:end="37:47">(<argument pos:start="37:36" pos:end="37:39"><expr pos:start="37:36" pos:end="37:39"><name pos:start="37:36" pos:end="37:39">mask</name></expr></argument>, <argument pos:start="37:42" pos:end="37:46"><expr pos:start="37:42" pos:end="37:46"><name pos:start="37:42" pos:end="37:46">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:15">(<expr pos:start="39:9" pos:end="39:14"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:14">event</name></expr>)</condition> <block pos:start="39:17" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:27">

        <goto pos:start="41:9" pos:end="41:27">goto <name pos:start="41:14" pos:end="41:26">out_no_events</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:7">hdr</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <name pos:start="47:11" pos:end="47:21"><name pos:start="47:11" pos:end="47:15">event</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:21">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:65"><expr pos:start="49:5" pos:end="49:64"><name pos:start="49:5" pos:end="49:13">event_len</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:49"><name pos:start="49:17" pos:end="49:27">be32_to_cpu</name><argument_list pos:start="49:28" pos:end="49:49">(<argument pos:start="49:29" pos:end="49:48"><expr pos:start="49:29" pos:end="49:48"><name pos:start="49:29" pos:end="49:48"><name pos:start="49:29" pos:end="49:31">hdr</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:48">extended_length</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:51" pos:end="49:51">+</operator> <sizeof pos:start="49:53" pos:end="49:64">sizeof<argument_list pos:start="49:59" pos:end="49:64">(<argument pos:start="49:60" pos:end="49:63"><expr pos:start="49:60" pos:end="49:63"><operator pos:start="49:60" pos:end="49:60">*</operator><name pos:start="49:61" pos:end="49:63">hdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:24">(<expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:17">event_len</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:23">len</name></expr>)</condition> <block pos:start="53:26" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:24">

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:11">len</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:23">event_len</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:53"><expr pos:start="61:5" pos:end="61:52"><call pos:start="61:5" pos:end="61:52"><name pos:start="61:5" pos:end="61:29">cpu_physical_memory_write</name><argument_list pos:start="61:30" pos:end="61:52">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">buf</name></expr></argument>, <argument pos:start="61:36" pos:end="61:46"><expr pos:start="61:36" pos:end="61:46"><name pos:start="61:36" pos:end="61:46"><name pos:start="61:36" pos:end="61:40">event</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:46">data</name></name></expr></argument>, <argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:51">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><call pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:11">rtas_st</name><argument_list pos:start="63:12" pos:end="63:38">(<argument pos:start="63:13" pos:end="63:16"><expr pos:start="63:13" pos:end="63:16"><name pos:start="63:13" pos:end="63:16">rets</name></expr></argument>, <argument pos:start="63:19" pos:end="63:19"><expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr></argument>, <argument pos:start="63:22" pos:end="63:37"><expr pos:start="63:22" pos:end="63:37"><name pos:start="63:22" pos:end="63:37">RTAS_OUT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><call pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:10">g_free</name><argument_list pos:start="65:11" pos:end="65:23">(<argument pos:start="65:12" pos:end="65:22"><expr pos:start="65:12" pos:end="65:22"><name pos:start="65:12" pos:end="65:22"><name pos:start="65:12" pos:end="65:16">event</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:22">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><call pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:10">g_free</name><argument_list pos:start="67:11" pos:end="67:17">(<argument pos:start="67:12" pos:end="67:16"><expr pos:start="67:12" pos:end="67:16"><name pos:start="67:12" pos:end="67:16">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:11">return;</return>



<label pos:start="73:1" pos:end="73:14"><name pos:start="73:1" pos:end="73:13">out_no_events</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:47"><expr pos:start="75:5" pos:end="75:46"><call pos:start="75:5" pos:end="75:46"><name pos:start="75:5" pos:end="75:11">rtas_st</name><argument_list pos:start="75:12" pos:end="75:46">(<argument pos:start="75:13" pos:end="75:16"><expr pos:start="75:13" pos:end="75:16"><name pos:start="75:13" pos:end="75:16">rets</name></expr></argument>, <argument pos:start="75:19" pos:end="75:19"><expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr></argument>, <argument pos:start="75:22" pos:end="75:45"><expr pos:start="75:22" pos:end="75:45"><name pos:start="75:22" pos:end="75:45">RTAS_OUT_NO_ERRORS_FOUND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
