<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25195.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">peer_has_ufo</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">VirtIONet</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:22">

    <if_stmt pos:start="5:5" pos:end="7:17"><if pos:start="5:5" pos:end="7:17">if <condition pos:start="5:8" pos:end="5:30">(<expr pos:start="5:9" pos:end="5:29"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:29"><name pos:start="5:10" pos:end="5:26">peer_has_vnet_hdr</name><argument_list pos:start="5:27" pos:end="5:29">(<argument pos:start="5:28" pos:end="5:28"><expr pos:start="5:28" pos:end="5:28"><name pos:start="5:28" pos:end="5:28">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:17"><block_content pos:start="7:9" pos:end="7:17">

        <return pos:start="7:9" pos:end="7:17">return <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:59"><expr pos:start="11:5" pos:end="11:58"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:5">n</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:14">has_ufo</name></name> <operator pos:start="11:16" pos:end="11:16">=</operator> <call pos:start="11:18" pos:end="11:58"><name pos:start="11:18" pos:end="11:34">qemu_peer_has_ufo</name><argument_list pos:start="11:35" pos:end="11:58">(<argument pos:start="11:36" pos:end="11:57"><expr pos:start="11:36" pos:end="11:57"><call pos:start="11:36" pos:end="11:57"><name pos:start="11:36" pos:end="11:49">qemu_get_queue</name><argument_list pos:start="11:50" pos:end="11:57">(<argument pos:start="11:51" pos:end="11:56"><expr pos:start="11:51" pos:end="11:56"><name pos:start="11:51" pos:end="11:56"><name pos:start="11:51" pos:end="11:51">n</name><operator pos:start="11:52" pos:end="11:53">-&gt;</operator><name pos:start="11:54" pos:end="11:56">nic</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="15:5" pos:end="15:22">return <expr pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:12">n</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:21">has_ufo</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
