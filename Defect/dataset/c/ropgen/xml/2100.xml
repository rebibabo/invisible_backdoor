<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2100.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mp_dacl_removexattr</name><parameter_list pos:start="1:31" pos:end="3:66">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">FsContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:47">path</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:59">char</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">name</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:16">buffer</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:10">buffer</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:29"><name pos:start="13:14" pos:end="13:18">rpath</name><argument_list pos:start="13:19" pos:end="13:29">(<argument pos:start="13:20" pos:end="13:22"><expr pos:start="13:20" pos:end="13:22"><name pos:start="13:20" pos:end="13:22">ctx</name></expr></argument>, <argument pos:start="13:25" pos:end="13:28"><expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:7">ret</name>  <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:48"><name pos:start="15:12" pos:end="15:23">lremovexattr</name><argument_list pos:start="15:24" pos:end="15:48">(<argument pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:30"><name pos:start="15:25" pos:end="15:30">buffer</name></expr></argument>, <argument pos:start="15:33" pos:end="15:47"><expr pos:start="15:33" pos:end="15:47"><name pos:start="15:33" pos:end="15:47">MAP_ACL_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal> <operator pos:start="17:19" pos:end="17:20">&amp;&amp;</operator> <name pos:start="17:22" pos:end="17:26">errno</name> <operator pos:start="17:28" pos:end="17:29">==</operator> <name pos:start="17:31" pos:end="17:37">ENODATA</name></expr>)</condition> <block pos:start="17:40" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:16">

        <comment type="block" pos:start="19:9" pos:end="27:11">/*

         * We don't get ENODATA error when trying to remove a

         * posix acl that is not present. So don't throw the error

         * even in case of mapped security model

         */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:13">errno</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:16"><expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><call pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:10">g_free</name><argument_list pos:start="35:11" pos:end="35:18">(<argument pos:start="35:12" pos:end="35:17"><expr pos:start="35:12" pos:end="35:17"><name pos:start="35:12" pos:end="35:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
