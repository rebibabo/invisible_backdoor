<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21252.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">float128</name></type> <name pos:start="1:10" pos:end="1:24">float128_scalbn</name><parameter_list pos:start="1:25" pos:end="1:58">( <parameter pos:start="1:27" pos:end="1:36"><decl pos:start="1:27" pos:end="1:36"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:34">float128</name></type> <name pos:start="1:36" pos:end="1:36">a</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:41">int</name> <name pos:start="1:43" pos:end="1:43">n</name></type> <name pos:start="1:45" pos:end="1:56">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="41:55">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int32</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:18">aSig0</name></decl>, <decl pos:start="9:21" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:21" pos:end="9:25">aSig1</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:9">aSig1</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:32">extractFloat128Frac1</name><argument_list pos:start="13:33" pos:end="13:37">( <argument pos:start="13:35" pos:end="13:35"><expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:9">aSig0</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:32">extractFloat128Frac0</name><argument_list pos:start="15:33" pos:end="15:37">( <argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">aExp</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:29">extractFloat128Exp</name><argument_list pos:start="17:30" pos:end="17:34">( <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:9">aSign</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:31">extractFloat128Sign</name><argument_list pos:start="19:32" pos:end="19:36">( <argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:25">( <expr pos:start="21:10" pos:end="21:23"><name pos:start="21:10" pos:end="21:13">aExp</name> <operator pos:start="21:15" pos:end="21:16">==</operator> <literal type="number" pos:start="21:18" pos:end="21:23">0x7FFF</literal></expr> )</condition> <block pos:start="21:27" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">a</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:17"><if pos:start="27:5" pos:end="29:45">if <condition pos:start="27:8" pos:end="27:20">( <expr pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:13">aExp</name> <operator pos:start="27:15" pos:end="27:16">!=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr> )</condition><block type="pseudo" pos:start="29:9" pos:end="29:45"><block_content pos:start="29:9" pos:end="29:45">

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:13">aSig0</name> <operator pos:start="29:15" pos:end="29:16">|=</operator> <call pos:start="29:18" pos:end="29:44"><name pos:start="29:18" pos:end="29:22">LIT64</name><argument_list pos:start="29:23" pos:end="29:44">( <argument pos:start="29:25" pos:end="29:42"><expr pos:start="29:25" pos:end="29:42"><literal type="number" pos:start="29:25" pos:end="29:42">0x0001000000000000</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="31:5" pos:end="33:17">else if <condition pos:start="31:13" pos:end="31:40">( <expr pos:start="31:15" pos:end="31:38"><name pos:start="31:15" pos:end="31:19">aSig0</name> <operator pos:start="31:21" pos:end="31:22">==</operator> <literal type="number" pos:start="31:24" pos:end="31:24">0</literal> <operator pos:start="31:26" pos:end="31:27">&amp;&amp;</operator> <name pos:start="31:29" pos:end="31:33">aSig1</name> <operator pos:start="31:35" pos:end="31:36">==</operator> <literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr> )</condition><block type="pseudo" pos:start="33:9" pos:end="33:17"><block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">a</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:8">aExp</name> <operator pos:start="37:10" pos:end="37:11">+=</operator> <name pos:start="37:13" pos:end="37:13">n</name> <operator pos:start="37:15" pos:end="37:15">-</operator> <literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="41:55">return <macro pos:start="39:12" pos:end="41:54"><name pos:start="39:12" pos:end="39:40">normalizeRoundAndPackFloat128</name><argument_list pos:start="39:41" pos:end="41:54">( <argument pos:start="39:43" pos:end="39:47">aSign</argument>, <argument pos:start="39:50" pos:end="39:53">aExp</argument>, <argument pos:start="39:56" pos:end="39:60">aSig0</argument>, <argument pos:start="39:63" pos:end="41:52">aSig1

                                          STATUS_VAR</argument> )</argument_list></macro>;</return>



</block_content>}</block></function>
</unit>
