<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2417.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">avformat_seek_file</name><parameter_list pos:start="1:23" pos:end="1:115">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:59">stream_index</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:75"><name pos:start="1:62" pos:end="1:68">int64_t</name></type> <name pos:start="1:70" pos:end="1:75">min_ts</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:87"><decl pos:start="1:78" pos:end="1:87"><type pos:start="1:78" pos:end="1:87"><name pos:start="1:78" pos:end="1:84">int64_t</name></type> <name pos:start="1:86" pos:end="1:87">ts</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:103"><decl pos:start="1:90" pos:end="1:103"><type pos:start="1:90" pos:end="1:103"><name pos:start="1:90" pos:end="1:96">int64_t</name></type> <name pos:start="1:98" pos:end="1:103">max_ts</name></decl></parameter>, <parameter pos:start="1:106" pos:end="1:114"><decl pos:start="1:106" pos:end="1:114"><type pos:start="1:106" pos:end="1:114"><name pos:start="1:106" pos:end="1:108">int</name></type> <name pos:start="1:110" pos:end="1:114">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="85:5">

    <if_stmt pos:start="5:5" pos:end="7:18"><if pos:start="5:5" pos:end="7:18">if<condition pos:start="5:7" pos:end="5:34">(<expr pos:start="5:8" pos:end="5:33"><name pos:start="5:8" pos:end="5:13">min_ts</name> <operator pos:start="5:15" pos:end="5:15">&gt;</operator> <name pos:start="5:17" pos:end="5:18">ts</name> <operator pos:start="5:20" pos:end="5:21">||</operator> <name pos:start="5:23" pos:end="5:28">max_ts</name> <operator pos:start="5:30" pos:end="5:30">&lt;</operator> <name pos:start="5:32" pos:end="5:33">ts</name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:18"><block_content pos:start="7:9" pos:end="7:18">

        <return pos:start="7:9" pos:end="7:18">return <expr pos:start="7:16" pos:end="7:17"><operator pos:start="7:16" pos:end="7:16">-</operator><literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="11:5" pos:end="51:5"><if pos:start="11:5" pos:end="51:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">iformat</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:30">read_seek2</name></name></expr>)</condition> <block pos:start="11:33" pos:end="51:5">{<block_content pos:start="13:9" pos:end="49:19">

        <decl_stmt pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><call pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:27">ff_read_frame_flush</name><argument_list pos:start="15:28" pos:end="15:30">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="37:9"><if pos:start="19:9" pos:end="37:9">if <condition pos:start="19:12" pos:end="19:53">(<expr pos:start="19:13" pos:end="19:52"><name pos:start="19:13" pos:end="19:24">stream_index</name> <operator pos:start="19:26" pos:end="19:27">==</operator> <operator pos:start="19:29" pos:end="19:29">-</operator><literal type="number" pos:start="19:30" pos:end="19:30">1</literal> <operator pos:start="19:32" pos:end="19:33">&amp;&amp;</operator> <name pos:start="19:35" pos:end="19:47"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:47">nb_streams</name></name> <operator pos:start="19:49" pos:end="19:50">==</operator> <literal type="number" pos:start="19:52" pos:end="19:52">1</literal></expr>)</condition> <block pos:start="19:55" pos:end="37:9">{<block_content pos:start="21:13" pos:end="35:51">

            <decl_stmt pos:start="21:13" pos:end="21:60"><decl pos:start="21:13" pos:end="21:59"><type pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:22">AVRational</name></type> <name pos:start="21:24" pos:end="21:32">time_base</name> <init pos:start="21:34" pos:end="21:59">= <expr pos:start="21:36" pos:end="21:59"><name pos:start="21:36" pos:end="21:48"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:45">streams</name><index pos:start="21:46" pos:end="21:48">[<expr pos:start="21:47" pos:end="21:47"><literal type="number" pos:start="21:47" pos:end="21:47">0</literal></expr>]</index></name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:59">time_base</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:61"><expr pos:start="23:13" pos:end="23:60"><name pos:start="23:13" pos:end="23:14">ts</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:60"><name pos:start="23:18" pos:end="23:29">av_rescale_q</name><argument_list pos:start="23:30" pos:end="23:60">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">ts</name></expr></argument>, <argument pos:start="23:35" pos:end="23:48"><expr pos:start="23:35" pos:end="23:48"><name pos:start="23:35" pos:end="23:48">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="23:51" pos:end="23:59"><expr pos:start="23:51" pos:end="23:59"><name pos:start="23:51" pos:end="23:59">time_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="29:49"><expr pos:start="25:13" pos:end="29:48"><name pos:start="25:13" pos:end="25:18">min_ts</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="29:48"><name pos:start="25:22" pos:end="25:35">av_rescale_rnd</name><argument_list pos:start="25:36" pos:end="29:48">(<argument pos:start="25:37" pos:end="25:42"><expr pos:start="25:37" pos:end="25:42"><name pos:start="25:37" pos:end="25:42">min_ts</name></expr></argument>, <argument pos:start="25:45" pos:end="25:57"><expr pos:start="25:45" pos:end="25:57"><name pos:start="25:45" pos:end="25:57"><name pos:start="25:45" pos:end="25:53">time_base</name><operator pos:start="25:54" pos:end="25:54">.</operator><name pos:start="25:55" pos:end="25:57">den</name></name></expr></argument>,

                                    <argument pos:start="27:37" pos:end="27:73"><expr pos:start="27:37" pos:end="27:73"><name pos:start="27:37" pos:end="27:49"><name pos:start="27:37" pos:end="27:45">time_base</name><operator pos:start="27:46" pos:end="27:46">.</operator><name pos:start="27:47" pos:end="27:49">num</name></name> <operator pos:start="27:51" pos:end="27:51">*</operator> <operator pos:start="27:53" pos:end="27:53">(</operator><name pos:start="27:54" pos:end="27:60">int64_t</name><operator pos:start="27:61" pos:end="27:61">)</operator><name pos:start="27:62" pos:end="27:73">AV_TIME_BASE</name></expr></argument>,

                                    <argument pos:start="29:37" pos:end="29:47"><expr pos:start="29:37" pos:end="29:47"><name pos:start="29:37" pos:end="29:47">AV_ROUND_UP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="35:51"><expr pos:start="31:13" pos:end="35:50"><name pos:start="31:13" pos:end="31:18">max_ts</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="35:50"><name pos:start="31:22" pos:end="31:35">av_rescale_rnd</name><argument_list pos:start="31:36" pos:end="35:50">(<argument pos:start="31:37" pos:end="31:42"><expr pos:start="31:37" pos:end="31:42"><name pos:start="31:37" pos:end="31:42">max_ts</name></expr></argument>, <argument pos:start="31:45" pos:end="31:57"><expr pos:start="31:45" pos:end="31:57"><name pos:start="31:45" pos:end="31:57"><name pos:start="31:45" pos:end="31:53">time_base</name><operator pos:start="31:54" pos:end="31:54">.</operator><name pos:start="31:55" pos:end="31:57">den</name></name></expr></argument>,

                                    <argument pos:start="33:37" pos:end="33:73"><expr pos:start="33:37" pos:end="33:73"><name pos:start="33:37" pos:end="33:49"><name pos:start="33:37" pos:end="33:45">time_base</name><operator pos:start="33:46" pos:end="33:46">.</operator><name pos:start="33:47" pos:end="33:49">num</name></name> <operator pos:start="33:51" pos:end="33:51">*</operator> <operator pos:start="33:53" pos:end="33:53">(</operator><name pos:start="33:54" pos:end="33:60">int64_t</name><operator pos:start="33:61" pos:end="33:61">)</operator><name pos:start="33:62" pos:end="33:73">AV_TIME_BASE</name></expr></argument>,

                                    <argument pos:start="35:37" pos:end="35:49"><expr pos:start="35:37" pos:end="35:49"><name pos:start="35:37" pos:end="35:49">AV_ROUND_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:81"><expr pos:start="41:9" pos:end="41:80"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:80"><name pos:start="41:15" pos:end="41:36"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:24">iformat</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:36">read_seek2</name></name><argument_list pos:start="41:37" pos:end="41:80">(<argument pos:start="41:38" pos:end="41:38"><expr pos:start="41:38" pos:end="41:38"><name pos:start="41:38" pos:end="41:38">s</name></expr></argument>, <argument pos:start="41:41" pos:end="41:52"><expr pos:start="41:41" pos:end="41:52"><name pos:start="41:41" pos:end="41:52">stream_index</name></expr></argument>, <argument pos:start="41:55" pos:end="41:60"><expr pos:start="41:55" pos:end="41:60"><name pos:start="41:55" pos:end="41:60">min_ts</name></expr></argument>, <argument pos:start="41:63" pos:end="41:64"><expr pos:start="41:63" pos:end="41:64"><name pos:start="41:63" pos:end="41:64">ts</name></expr></argument>, <argument pos:start="41:67" pos:end="41:72"><expr pos:start="41:67" pos:end="41:72"><name pos:start="41:67" pos:end="41:72">max_ts</name></expr></argument>, <argument pos:start="41:75" pos:end="41:79"><expr pos:start="41:75" pos:end="41:79"><name pos:start="41:75" pos:end="41:79">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="47:48"><if pos:start="45:9" pos:end="47:48">if <condition pos:start="45:12" pos:end="45:21">(<expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:18">&gt;=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:48"><block_content pos:start="47:13" pos:end="47:48">

            <expr_stmt pos:start="47:13" pos:end="47:48"><expr pos:start="47:13" pos:end="47:47"><call pos:start="47:13" pos:end="47:47"><name pos:start="47:13" pos:end="47:44">avformat_queue_attached_pictures</name><argument_list pos:start="47:45" pos:end="47:47">(<argument pos:start="47:46" pos:end="47:46"><expr pos:start="47:46" pos:end="47:46"><name pos:start="47:46" pos:end="47:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="49:9" pos:end="49:19">return <expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if<condition pos:start="55:7" pos:end="55:34">(<expr pos:start="55:8" pos:end="55:33"><name pos:start="55:8" pos:end="55:33"><name pos:start="55:8" pos:end="55:8">s</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:17">iformat</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:33">read_timestamp</name></name></expr>)</condition><block pos:start="55:35" pos:end="59:5">{<block_content>

        <comment type="line" pos:start="57:9" pos:end="57:42">//try to seek via read_timestamp()</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="63:5" pos:end="63:62">//Fallback to old API if new is not implemented but old is</comment>

    <comment type="line" pos:start="65:5" pos:end="65:51">//Note the old has somewhat different semantics</comment>

    <if_stmt pos:start="67:5" pos:end="85:5"><if pos:start="67:5" pos:end="85:5">if <condition pos:start="67:8" pos:end="67:35">(<expr pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:18">iformat</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:29">read_seek</name></name> <operator pos:start="67:31" pos:end="67:32">||</operator> <literal type="number" pos:start="67:34" pos:end="67:34">1</literal></expr>)</condition> <block pos:start="67:37" pos:end="85:5">{<block_content pos:start="69:9" pos:end="83:19">

        <decl_stmt pos:start="69:9" pos:end="69:93"><decl pos:start="69:9" pos:end="69:92"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:15">dir</name> <init pos:start="69:17" pos:end="69:92">= <expr pos:start="69:19" pos:end="69:92"><operator pos:start="69:19" pos:end="69:19">(</operator><ternary pos:start="69:20" pos:end="69:91"><condition pos:start="69:20" pos:end="69:66"><expr pos:start="69:20" pos:end="69:64"><name pos:start="69:20" pos:end="69:21">ts</name> <operator pos:start="69:23" pos:end="69:23">-</operator> <operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:33">uint64_t</name><operator pos:start="69:34" pos:end="69:34">)</operator><name pos:start="69:35" pos:end="69:40">min_ts</name> <operator pos:start="69:42" pos:end="69:42">&gt;</operator> <operator pos:start="69:44" pos:end="69:44">(</operator><name pos:start="69:45" pos:end="69:52">uint64_t</name><operator pos:start="69:53" pos:end="69:53">)</operator><name pos:start="69:54" pos:end="69:59">max_ts</name> <operator pos:start="69:61" pos:end="69:61">-</operator> <name pos:start="69:63" pos:end="69:64">ts</name></expr> ?</condition><then pos:start="69:68" pos:end="69:87"> <expr pos:start="69:68" pos:end="69:87"><name pos:start="69:68" pos:end="69:87">AVSEEK_FLAG_BACKWARD</name></expr> </then><else pos:start="69:89" pos:end="69:91">: <expr pos:start="69:91" pos:end="69:91"><literal type="number" pos:start="69:91" pos:end="69:91">0</literal></expr></else></ternary><operator pos:start="69:92" pos:end="69:92">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:66"><decl pos:start="71:9" pos:end="71:65"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:15">ret</name> <init pos:start="71:17" pos:end="71:65">= <expr pos:start="71:19" pos:end="71:65"><call pos:start="71:19" pos:end="71:65"><name pos:start="71:19" pos:end="71:31">av_seek_frame</name><argument_list pos:start="71:32" pos:end="71:65">(<argument pos:start="71:33" pos:end="71:33"><expr pos:start="71:33" pos:end="71:33"><name pos:start="71:33" pos:end="71:33">s</name></expr></argument>, <argument pos:start="71:36" pos:end="71:47"><expr pos:start="71:36" pos:end="71:47"><name pos:start="71:36" pos:end="71:47">stream_index</name></expr></argument>, <argument pos:start="71:50" pos:end="71:51"><expr pos:start="71:50" pos:end="71:51"><name pos:start="71:50" pos:end="71:51">ts</name></expr></argument>, <argument pos:start="71:54" pos:end="71:64"><expr pos:start="71:54" pos:end="71:64"><name pos:start="71:54" pos:end="71:58">flags</name> <operator pos:start="71:60" pos:end="71:60">|</operator> <name pos:start="71:62" pos:end="71:64">dir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:50">(<expr pos:start="73:13" pos:end="73:49"><name pos:start="73:13" pos:end="73:15">ret</name><operator pos:start="73:16" pos:end="73:16">&lt;</operator><literal type="number" pos:start="73:17" pos:end="73:17">0</literal> <operator pos:start="73:19" pos:end="73:20">&amp;&amp;</operator> <name pos:start="73:22" pos:end="73:23">ts</name> <operator pos:start="73:25" pos:end="73:26">!=</operator> <name pos:start="73:28" pos:end="73:33">min_ts</name> <operator pos:start="73:35" pos:end="73:36">&amp;&amp;</operator> <name pos:start="73:38" pos:end="73:43">max_ts</name> <operator pos:start="73:45" pos:end="73:46">!=</operator> <name pos:start="73:48" pos:end="73:49">ts</name></expr>)</condition> <block pos:start="73:52" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:93">

            <expr_stmt pos:start="75:13" pos:end="75:85"><expr pos:start="75:13" pos:end="75:84"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="75:84"><name pos:start="75:19" pos:end="75:31">av_seek_frame</name><argument_list pos:start="75:32" pos:end="75:84">(<argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">s</name></expr></argument>, <argument pos:start="75:36" pos:end="75:47"><expr pos:start="75:36" pos:end="75:47"><name pos:start="75:36" pos:end="75:47">stream_index</name></expr></argument>, <argument pos:start="75:50" pos:end="75:70"><expr pos:start="75:50" pos:end="75:70"><ternary pos:start="75:50" pos:end="75:70"><condition pos:start="75:50" pos:end="75:54"><expr pos:start="75:50" pos:end="75:52"><name pos:start="75:50" pos:end="75:52">dir</name></expr> ?</condition><then pos:start="75:56" pos:end="75:61"> <expr pos:start="75:56" pos:end="75:61"><name pos:start="75:56" pos:end="75:61">max_ts</name></expr> </then><else pos:start="75:63" pos:end="75:70">: <expr pos:start="75:65" pos:end="75:70"><name pos:start="75:65" pos:end="75:70">min_ts</name></expr></else></ternary></expr></argument>, <argument pos:start="75:73" pos:end="75:83"><expr pos:start="75:73" pos:end="75:83"><name pos:start="75:73" pos:end="75:77">flags</name> <operator pos:start="75:79" pos:end="75:79">|</operator> <name pos:start="75:81" pos:end="75:83">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="79:93"><if pos:start="77:13" pos:end="79:93">if <condition pos:start="77:16" pos:end="77:25">(<expr pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:19">ret</name> <operator pos:start="77:21" pos:end="77:22">&gt;=</operator> <literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:93"><block_content pos:start="79:17" pos:end="79:93">

                <expr_stmt pos:start="79:17" pos:end="79:93"><expr pos:start="79:17" pos:end="79:92"><name pos:start="79:17" pos:end="79:19">ret</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <call pos:start="79:23" pos:end="79:92"><name pos:start="79:23" pos:end="79:35">av_seek_frame</name><argument_list pos:start="79:36" pos:end="79:92">(<argument pos:start="79:37" pos:end="79:37"><expr pos:start="79:37" pos:end="79:37"><name pos:start="79:37" pos:end="79:37">s</name></expr></argument>, <argument pos:start="79:40" pos:end="79:51"><expr pos:start="79:40" pos:end="79:51"><name pos:start="79:40" pos:end="79:51">stream_index</name></expr></argument>, <argument pos:start="79:54" pos:end="79:55"><expr pos:start="79:54" pos:end="79:55"><name pos:start="79:54" pos:end="79:55">ts</name></expr></argument>, <argument pos:start="79:58" pos:end="79:91"><expr pos:start="79:58" pos:end="79:91"><name pos:start="79:58" pos:end="79:62">flags</name> <operator pos:start="79:64" pos:end="79:64">|</operator> <operator pos:start="79:66" pos:end="79:66">(</operator><name pos:start="79:67" pos:end="79:69">dir</name><operator pos:start="79:70" pos:end="79:70">^</operator><name pos:start="79:71" pos:end="79:90">AVSEEK_FLAG_BACKWARD</name><operator pos:start="79:91" pos:end="79:91">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="89:5" pos:end="89:80">// try some generic seek like seek_frame_generic() but with new ts semantics</comment>

</block_content>}</block></function>
</unit>
