<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2854.c" pos:tabs="8"><function pos:start="1:1" pos:end="98:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vorbis_decode_frame</name><parameter_list pos:start="1:31" pos:end="3:67">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:34">int</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:49">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:59">AVPacket</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="98:1">{<block_content pos:start="7:5" pos:end="96:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">vorbis_context</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:22">vc</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">frame</name>     <init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">GetBitContext</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:21">gb</name> <init pos:start="15:23" pos:end="15:31">= <expr pos:start="15:25" pos:end="15:31"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:31"><name pos:start="15:26" pos:end="15:27">vc</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">float</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:28"><name pos:start="17:12" pos:end="17:23">channel_ptrs</name><index pos:start="17:24" pos:end="17:28">[<expr pos:start="17:25" pos:end="17:27"><literal type="number" pos:start="17:25" pos:end="17:27">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:14"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:14">len</name></decl>, <decl pos:start="19:17" pos:end="19:19"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:17" pos:end="19:19">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><call pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:11">av_dlog</name><argument_list pos:start="23:12" pos:end="23:50">(<argument pos:start="23:13" pos:end="23:16"><expr pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:16">NULL</name></expr></argument>, <argument pos:start="23:19" pos:end="23:39"><expr pos:start="23:19" pos:end="23:39"><literal type="string" pos:start="23:19" pos:end="23:39">"packet length %d \n"</literal></expr></argument>, <argument pos:start="23:42" pos:end="23:49"><expr pos:start="23:42" pos:end="23:49"><name pos:start="23:42" pos:end="23:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:27">/* get output buffer */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:9">frame</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:21">nb_samples</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:40"><name pos:start="29:25" pos:end="29:26">vc</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:37">blocksize</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">1</literal></expr>]</index></name> <operator pos:start="29:42" pos:end="29:42">/</operator> <literal type="number" pos:start="29:44" pos:end="29:44">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:51">(<expr pos:start="31:9" pos:end="31:50"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">ret</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:45"><name pos:start="31:16" pos:end="31:28">ff_get_buffer</name><argument_list pos:start="31:29" pos:end="31:45">(<argument pos:start="31:30" pos:end="31:34"><expr pos:start="31:30" pos:end="31:34"><name pos:start="31:30" pos:end="31:34">avctx</name></expr></argument>, <argument pos:start="31:37" pos:end="31:41"><expr pos:start="31:37" pos:end="31:41"><name pos:start="31:37" pos:end="31:41">frame</name></expr></argument>, <argument pos:start="31:44" pos:end="31:44"><expr pos:start="31:44" pos:end="31:44"><literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="31:46" pos:end="31:46">)</operator> <operator pos:start="31:48" pos:end="31:48">&lt;</operator> <literal type="number" pos:start="31:50" pos:end="31:50">0</literal></expr>)</condition> <block pos:start="31:53" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:19">

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><call pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:60">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:59"><expr pos:start="33:37" pos:end="33:59"><literal type="string" pos:start="33:37" pos:end="33:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="57:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:31">(<expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:10">vc</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:26">audio_channels</name></name> <operator pos:start="41:28" pos:end="41:28">&gt;</operator> <literal type="number" pos:start="41:30" pos:end="41:30">8</literal></expr>)</condition> <block pos:start="41:33" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:63">

        <for pos:start="43:9" pos:end="45:63">for <control pos:start="43:13" pos:end="43:48">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:43"><expr pos:start="43:21" pos:end="43:42"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:42"><name pos:start="43:25" pos:end="43:26">vc</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:42">audio_channels</name></name></expr>;</condition> <incr pos:start="43:45" pos:end="43:47"><expr pos:start="43:45" pos:end="43:47"><name pos:start="43:45" pos:end="43:45">i</name><operator pos:start="43:46" pos:end="43:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="45:63"><block_content pos:start="45:13" pos:end="45:63">

            <expr_stmt pos:start="45:13" pos:end="45:63"><expr pos:start="45:13" pos:end="45:62"><name pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:24">channel_ptrs</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><name pos:start="45:26" pos:end="45:26">i</name></expr>]</index></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <operator pos:start="45:31" pos:end="45:31">(</operator><name pos:start="45:32" pos:end="45:36">float</name> <operator pos:start="45:38" pos:end="45:38">*</operator><operator pos:start="45:39" pos:end="45:39">)</operator><name pos:start="45:40" pos:end="45:62"><name pos:start="45:40" pos:end="45:44">frame</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:59">extended_data</name><index pos:start="45:60" pos:end="45:62">[<expr pos:start="45:61" pos:end="45:61"><name pos:start="45:61" pos:end="45:61">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="57:5">else <block pos:start="47:12" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:9">

        <for pos:start="49:9" pos:end="55:9">for <control pos:start="49:13" pos:end="49:48">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:43"><expr pos:start="49:21" pos:end="49:42"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:42"><name pos:start="49:25" pos:end="49:26">vc</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:42">audio_channels</name></name></expr>;</condition> <incr pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><name pos:start="49:45" pos:end="49:45">i</name><operator pos:start="49:46" pos:end="49:47">++</operator></expr></incr>)</control> <block pos:start="49:50" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:64">

            <decl_stmt pos:start="51:13" pos:end="51:81"><decl pos:start="51:13" pos:end="51:80"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:18">ch</name> <init pos:start="51:20" pos:end="51:80">= <expr pos:start="51:22" pos:end="51:80"><name pos:start="51:22" pos:end="51:80"><name pos:start="51:22" pos:end="51:53">ff_vorbis_channel_layout_offsets</name><index pos:start="51:54" pos:end="51:77">[<expr pos:start="51:55" pos:end="51:76"><name pos:start="51:55" pos:end="51:72"><name pos:start="51:55" pos:end="51:56">vc</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:72">audio_channels</name></name> <operator pos:start="51:74" pos:end="51:74">-</operator> <literal type="number" pos:start="51:76" pos:end="51:76">1</literal></expr>]</index><index pos:start="51:78" pos:end="51:80">[<expr pos:start="51:79" pos:end="51:79"><name pos:start="51:79" pos:end="51:79">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:64"><expr pos:start="53:13" pos:end="53:63"><name pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:24">channel_ptrs</name><index pos:start="53:25" pos:end="53:28">[<expr pos:start="53:26" pos:end="53:27"><name pos:start="53:26" pos:end="53:27">ch</name></expr>]</index></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <operator pos:start="53:32" pos:end="53:32">(</operator><name pos:start="53:33" pos:end="53:37">float</name> <operator pos:start="53:39" pos:end="53:39">*</operator><operator pos:start="53:40" pos:end="53:40">)</operator><name pos:start="53:41" pos:end="53:63"><name pos:start="53:41" pos:end="53:45">frame</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:60">extended_data</name><index pos:start="53:61" pos:end="53:63">[<expr pos:start="53:62" pos:end="53:62"><name pos:start="53:62" pos:end="53:62">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><call pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:17">init_get_bits</name><argument_list pos:start="61:18" pos:end="61:38">(<argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><name pos:start="61:19" pos:end="61:20">gb</name></expr></argument>, <argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">buf</name></expr></argument>, <argument pos:start="61:28" pos:end="61:37"><expr pos:start="61:28" pos:end="61:37"><name pos:start="61:28" pos:end="61:35">buf_size</name><operator pos:start="61:36" pos:end="61:36">*</operator><literal type="number" pos:start="61:37" pos:end="61:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="67:19"><if pos:start="65:5" pos:end="67:19">if <condition pos:start="65:8" pos:end="65:65">(<expr pos:start="65:9" pos:end="65:64"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:12">len</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:58"><name pos:start="65:16" pos:end="65:40">vorbis_parse_audio_packet</name><argument_list pos:start="65:41" pos:end="65:58">(<argument pos:start="65:42" pos:end="65:43"><expr pos:start="65:42" pos:end="65:43"><name pos:start="65:42" pos:end="65:43">vc</name></expr></argument>, <argument pos:start="65:46" pos:end="65:57"><expr pos:start="65:46" pos:end="65:57"><name pos:start="65:46" pos:end="65:57">channel_ptrs</name></expr></argument>)</argument_list></call><operator pos:start="65:59" pos:end="65:59">)</operator> <operator pos:start="65:61" pos:end="65:62">&lt;=</operator> <literal type="number" pos:start="65:64" pos:end="65:64">0</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:19"><block_content pos:start="67:9" pos:end="67:19">

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">len</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="80:5"><if pos:start="71:5" pos:end="80:5">if <condition pos:start="71:8" pos:end="71:25">(<expr pos:start="71:9" pos:end="71:24"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:11">vc</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:24">first_frame</name></name></expr>)</condition> <block pos:start="71:27" pos:end="80:5">{<block_content pos:start="73:9" pos:end="78:24">

        <expr_stmt pos:start="73:9" pos:end="73:28"><expr pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:10">vc</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:23">first_frame</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <literal type="number" pos:start="73:27" pos:end="73:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:27"><expr pos:start="75:9" pos:end="75:26"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:22">got_frame_ptr</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>;</expr_stmt>


        <return pos:start="78:9" pos:end="78:24">return <expr pos:start="78:16" pos:end="78:23"><name pos:start="78:16" pos:end="78:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="84:5" pos:end="86:65"><expr pos:start="84:5" pos:end="86:64"><call pos:start="84:5" pos:end="86:64"><name pos:start="84:5" pos:end="84:11">av_dlog</name><argument_list pos:start="84:12" pos:end="86:64">(<argument pos:start="84:13" pos:end="84:16"><expr pos:start="84:13" pos:end="84:16"><name pos:start="84:13" pos:end="84:16">NULL</name></expr></argument>, <argument pos:start="84:19" pos:end="84:78"><expr pos:start="84:19" pos:end="84:78"><literal type="string" pos:start="84:19" pos:end="84:78">"parsed %d bytes %d bits, returned %d samples (*ch*bits) \n"</literal></expr></argument>,

            <argument pos:start="86:13" pos:end="86:34"><expr pos:start="86:13" pos:end="86:34"><call pos:start="86:13" pos:end="86:30"><name pos:start="86:13" pos:end="86:26">get_bits_count</name><argument_list pos:start="86:27" pos:end="86:30">(<argument pos:start="86:28" pos:end="86:29"><expr pos:start="86:28" pos:end="86:29"><name pos:start="86:28" pos:end="86:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="86:32" pos:end="86:32">/</operator> <literal type="number" pos:start="86:34" pos:end="86:34">8</literal></expr></argument>, <argument pos:start="86:37" pos:end="86:58"><expr pos:start="86:37" pos:end="86:58"><call pos:start="86:37" pos:end="86:54"><name pos:start="86:37" pos:end="86:50">get_bits_count</name><argument_list pos:start="86:51" pos:end="86:54">(<argument pos:start="86:52" pos:end="86:53"><expr pos:start="86:52" pos:end="86:53"><name pos:start="86:52" pos:end="86:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="86:56" pos:end="86:56">%</operator> <literal type="number" pos:start="86:58" pos:end="86:58">8</literal></expr></argument>, <argument pos:start="86:61" pos:end="86:63"><expr pos:start="86:61" pos:end="86:63"><name pos:start="86:61" pos:end="86:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="90:5" pos:end="90:28"><expr pos:start="90:5" pos:end="90:27"><name pos:start="90:5" pos:end="90:21"><name pos:start="90:5" pos:end="90:9">frame</name><operator pos:start="90:10" pos:end="90:11">-&gt;</operator><name pos:start="90:12" pos:end="90:21">nb_samples</name></name> <operator pos:start="90:23" pos:end="90:23">=</operator> <name pos:start="90:25" pos:end="90:27">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:26"><expr pos:start="92:5" pos:end="92:25"><operator pos:start="92:5" pos:end="92:5">*</operator><name pos:start="92:6" pos:end="92:18">got_frame_ptr</name>    <operator pos:start="92:23" pos:end="92:23">=</operator> <literal type="number" pos:start="92:25" pos:end="92:25">1</literal></expr>;</expr_stmt>



    <return pos:start="96:5" pos:end="96:20">return <expr pos:start="96:12" pos:end="96:19"><name pos:start="96:12" pos:end="96:19">buf_size</name></expr>;</return>

</block_content>}</block></function></unit>
