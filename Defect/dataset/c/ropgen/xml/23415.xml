<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23415.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">hb_regs_write</name><parameter_list pos:start="1:26" pos:end="3:56">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:46">hwaddr</name></type> <name pos:start="1:48" pos:end="1:53">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:27">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">uint32_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">regs</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:14">offset</name> <operator pos:start="11:16" pos:end="11:17">==</operator> <literal type="number" pos:start="11:19" pos:end="11:23">0xf00</literal></expr>)</condition> <block pos:start="11:26" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:9">

        <if_stmt pos:start="13:9" pos:end="21:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:37">(<expr pos:start="13:13" pos:end="13:36"><name pos:start="13:13" pos:end="13:17">value</name> <operator pos:start="13:19" pos:end="13:20">==</operator> <literal type="number" pos:start="13:22" pos:end="13:22">1</literal> <operator pos:start="13:24" pos:end="13:25">||</operator> <name pos:start="13:27" pos:end="13:31">value</name> <operator pos:start="13:33" pos:end="13:34">==</operator> <literal type="number" pos:start="13:36" pos:end="13:36">2</literal></expr>)</condition> <block pos:start="13:39" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:66">

            <expr_stmt pos:start="15:13" pos:end="15:66"><expr pos:start="15:13" pos:end="15:65"><call pos:start="15:13" pos:end="15:65"><name pos:start="15:13" pos:end="15:37">qemu_system_reset_request</name><argument_list pos:start="15:38" pos:end="15:65">(<argument pos:start="15:39" pos:end="15:64"><expr pos:start="15:39" pos:end="15:64"><name pos:start="15:39" pos:end="15:64">SHUTDOWN_CAUSE_GUEST_RESET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="17:11" pos:end="21:9">else if <condition pos:start="17:19" pos:end="17:30">(<expr pos:start="17:20" pos:end="17:29"><name pos:start="17:20" pos:end="17:24">value</name> <operator pos:start="17:26" pos:end="17:27">==</operator> <literal type="number" pos:start="17:29" pos:end="17:29">3</literal></expr>)</condition> <block pos:start="17:32" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:72">

            <expr_stmt pos:start="19:13" pos:end="19:72"><expr pos:start="19:13" pos:end="19:71"><call pos:start="19:13" pos:end="19:71"><name pos:start="19:13" pos:end="19:40">qemu_system_shutdown_request</name><argument_list pos:start="19:41" pos:end="19:71">(<argument pos:start="19:42" pos:end="19:70"><expr pos:start="19:42" pos:end="19:70"><name pos:start="19:42" pos:end="19:70">SHUTDOWN_CAUSE_GUEST_SHUTDOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:8">regs</name><index pos:start="27:9" pos:end="27:18">[<expr pos:start="27:10" pos:end="27:17"><name pos:start="27:10" pos:end="27:15">offset</name><operator pos:start="27:16" pos:end="27:16">/</operator><literal type="number" pos:start="27:17" pos:end="27:17">4</literal></expr>]</index></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:26">value</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
