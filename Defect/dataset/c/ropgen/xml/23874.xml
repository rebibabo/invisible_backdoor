<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23874.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:32">pci_default_read_config</name><parameter_list pos:start="1:33" pos:end="3:59">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">d</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:41">uint32_t</name></type> <name pos:start="3:43" pos:end="3:49">address</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:58"><decl pos:start="3:52" pos:end="3:58"><type pos:start="3:52" pos:end="3:58"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:58">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="15:28">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:45"><expr pos:start="9:5" pos:end="9:44"><call pos:start="9:5" pos:end="9:44"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:44">(<argument pos:start="9:12" pos:end="9:43"><expr pos:start="9:12" pos:end="9:43"><name pos:start="9:12" pos:end="9:14">len</name> <operator pos:start="9:16" pos:end="9:17">==</operator> <literal type="number" pos:start="9:19" pos:end="9:19">1</literal> <operator pos:start="9:21" pos:end="9:22">||</operator> <name pos:start="9:24" pos:end="9:26">len</name> <operator pos:start="9:28" pos:end="9:29">==</operator> <literal type="number" pos:start="9:31" pos:end="9:31">2</literal> <operator pos:start="9:33" pos:end="9:34">||</operator> <name pos:start="9:36" pos:end="9:38">len</name> <operator pos:start="9:40" pos:end="9:41">==</operator> <literal type="number" pos:start="9:43" pos:end="9:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:49"><expr pos:start="11:5" pos:end="11:48"><name pos:start="11:5" pos:end="11:7">len</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:48"><name pos:start="11:11" pos:end="11:13">MIN</name><argument_list pos:start="11:14" pos:end="11:48">(<argument pos:start="11:15" pos:end="11:17"><expr pos:start="11:15" pos:end="11:17"><name pos:start="11:15" pos:end="11:17">len</name></expr></argument>, <argument pos:start="11:20" pos:end="11:47"><expr pos:start="11:20" pos:end="11:47"><call pos:start="11:20" pos:end="11:37"><name pos:start="11:20" pos:end="11:34">pci_config_size</name><argument_list pos:start="11:35" pos:end="11:37">(<argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><name pos:start="11:36" pos:end="11:36">d</name></expr></argument>)</argument_list></call> <operator pos:start="11:39" pos:end="11:39">-</operator> <name pos:start="11:41" pos:end="11:47">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:10">memcpy</name><argument_list pos:start="13:11" pos:end="13:42">(<argument pos:start="13:12" pos:end="13:15"><expr pos:start="13:12" pos:end="13:15"><operator pos:start="13:12" pos:end="13:12">&amp;</operator><name pos:start="13:13" pos:end="13:15">val</name></expr></argument>, <argument pos:start="13:18" pos:end="13:36"><expr pos:start="13:18" pos:end="13:36"><name pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:18">d</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:26">config</name></name> <operator pos:start="13:28" pos:end="13:28">+</operator> <name pos:start="13:30" pos:end="13:36">address</name></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="15:5" pos:end="15:28">return <expr pos:start="15:12" pos:end="15:27"><call pos:start="15:12" pos:end="15:27"><name pos:start="15:12" pos:end="15:22">le32_to_cpu</name><argument_list pos:start="15:23" pos:end="15:27">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">val</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
