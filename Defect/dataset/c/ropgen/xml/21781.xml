<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21781.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">write_video_frame</name><parameter_list pos:start="1:30" pos:end="1:64">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">oc</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">AVStream</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:18">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:28"><name pos:start="7:12" pos:end="7:17">struct</name> <name pos:start="7:19" pos:end="7:28">SwsContext</name></name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:37">sws_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">c</name> <init pos:start="9:23" pos:end="9:33">= <expr pos:start="9:25" pos:end="9:33"><name pos:start="9:25" pos:end="9:33"><name pos:start="9:25" pos:end="9:26">st</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:33">codec</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="63:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:40">(<expr pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:19">frame_count</name> <operator pos:start="13:21" pos:end="13:22">&gt;=</operator> <name pos:start="13:24" pos:end="13:39">STREAM_NB_FRAMES</name></expr>)</condition> <block pos:start="13:42" pos:end="21:5">{<block_content>

        <comment type="block" pos:start="15:9" pos:end="19:45">/* No more frames to compress. The codec has a latency of a few

         * frames if using B-frames, so we get the last frames by

         * passing the same picture again. */</comment>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="63:5">else <block pos:start="21:12" pos:end="63:5">{<block_content pos:start="23:9" pos:end="61:9">

        <if_stmt pos:start="23:9" pos:end="61:9"><if pos:start="23:9" pos:end="57:9">if <condition pos:start="23:12" pos:end="23:45">(<expr pos:start="23:13" pos:end="23:44"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:13">c</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">pix_fmt</name></name> <operator pos:start="23:24" pos:end="23:25">!=</operator> <name pos:start="23:27" pos:end="23:44">AV_PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="23:47" pos:end="57:9">{<block_content pos:start="29:13" pos:end="55:76">

            <comment type="block" pos:start="25:13" pos:end="27:53">/* as we only generate a YUV420P picture, we must convert it

             * to the codec pixel format if needed */</comment>

            <if_stmt pos:start="29:13" pos:end="47:13"><if pos:start="29:13" pos:end="47:13">if <condition pos:start="29:16" pos:end="29:25">(<expr pos:start="29:17" pos:end="29:24"><operator pos:start="29:17" pos:end="29:17">!</operator><name pos:start="29:18" pos:end="29:24">sws_ctx</name></expr>)</condition> <block pos:start="29:27" pos:end="47:13">{<block_content pos:start="31:17" pos:end="45:17">

                <expr_stmt pos:start="31:17" pos:end="35:70"><expr pos:start="31:17" pos:end="35:69"><name pos:start="31:17" pos:end="31:23">sws_ctx</name> <operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="35:69"><name pos:start="31:27" pos:end="31:40">sws_getContext</name><argument_list pos:start="31:41" pos:end="35:69">(<argument pos:start="31:42" pos:end="31:49"><expr pos:start="31:42" pos:end="31:49"><name pos:start="31:42" pos:end="31:49"><name pos:start="31:42" pos:end="31:42">c</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:49">width</name></name></expr></argument>, <argument pos:start="31:52" pos:end="31:60"><expr pos:start="31:52" pos:end="31:60"><name pos:start="31:52" pos:end="31:60"><name pos:start="31:52" pos:end="31:52">c</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:60">height</name></name></expr></argument>, <argument pos:start="31:63" pos:end="31:80"><expr pos:start="31:63" pos:end="31:80"><name pos:start="31:63" pos:end="31:80">AV_PIX_FMT_YUV420P</name></expr></argument>,

                                         <argument pos:start="33:42" pos:end="33:49"><expr pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:42">c</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:49">width</name></name></expr></argument>, <argument pos:start="33:52" pos:end="33:60"><expr pos:start="33:52" pos:end="33:60"><name pos:start="33:52" pos:end="33:60"><name pos:start="33:52" pos:end="33:52">c</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:60">height</name></name></expr></argument>, <argument pos:start="33:63" pos:end="33:72"><expr pos:start="33:63" pos:end="33:72"><name pos:start="33:63" pos:end="33:72"><name pos:start="33:63" pos:end="33:63">c</name><operator pos:start="33:64" pos:end="33:65">-&gt;</operator><name pos:start="33:66" pos:end="33:72">pix_fmt</name></name></expr></argument>,

                                         <argument pos:start="35:42" pos:end="35:50"><expr pos:start="35:42" pos:end="35:50"><name pos:start="35:42" pos:end="35:50">sws_flags</name></expr></argument>, <argument pos:start="35:53" pos:end="35:56"><expr pos:start="35:53" pos:end="35:56"><name pos:start="35:53" pos:end="35:56">NULL</name></expr></argument>, <argument pos:start="35:59" pos:end="35:62"><expr pos:start="35:59" pos:end="35:62"><name pos:start="35:59" pos:end="35:62">NULL</name></expr></argument>, <argument pos:start="35:65" pos:end="35:68"><expr pos:start="35:65" pos:end="35:68"><name pos:start="35:65" pos:end="35:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="37:17" pos:end="45:17"><if pos:start="37:17" pos:end="45:17">if <condition pos:start="37:20" pos:end="37:29">(<expr pos:start="37:21" pos:end="37:28"><operator pos:start="37:21" pos:end="37:21">!</operator><name pos:start="37:22" pos:end="37:28">sws_ctx</name></expr>)</condition> <block pos:start="37:31" pos:end="45:17">{<block_content pos:start="39:21" pos:end="43:28">

                    <expr_stmt pos:start="39:21" pos:end="41:77"><expr pos:start="39:21" pos:end="41:76"><call pos:start="39:21" pos:end="41:76"><name pos:start="39:21" pos:end="39:27">fprintf</name><argument_list pos:start="39:28" pos:end="41:76">(<argument pos:start="39:29" pos:end="39:34"><expr pos:start="39:29" pos:end="39:34"><name pos:start="39:29" pos:end="39:34">stderr</name></expr></argument>,

                            <argument pos:start="41:29" pos:end="41:75"><expr pos:start="41:29" pos:end="41:75"><literal type="string" pos:start="41:29" pos:end="41:75">"Could not initialize the conversion context\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:28"><expr pos:start="43:21" pos:end="43:27"><call pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:24">exit</name><argument_list pos:start="43:25" pos:end="43:27">(<argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:75"><expr pos:start="49:13" pos:end="49:74"><call pos:start="49:13" pos:end="49:74"><name pos:start="49:13" pos:end="49:26">fill_yuv_image</name><argument_list pos:start="49:27" pos:end="49:74">(<argument pos:start="49:28" pos:end="49:39"><expr pos:start="49:28" pos:end="49:39"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:39">src_picture</name></expr></argument>, <argument pos:start="49:42" pos:end="49:52"><expr pos:start="49:42" pos:end="49:52"><name pos:start="49:42" pos:end="49:52">frame_count</name></expr></argument>, <argument pos:start="49:55" pos:end="49:62"><expr pos:start="49:55" pos:end="49:62"><name pos:start="49:55" pos:end="49:62"><name pos:start="49:55" pos:end="49:55">c</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:62">width</name></name></expr></argument>, <argument pos:start="49:65" pos:end="49:73"><expr pos:start="49:65" pos:end="49:73"><name pos:start="49:65" pos:end="49:73"><name pos:start="49:65" pos:end="49:65">c</name><operator pos:start="49:66" pos:end="49:67">-&gt;</operator><name pos:start="49:68" pos:end="49:73">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="55:76"><expr pos:start="51:13" pos:end="55:75"><call pos:start="51:13" pos:end="55:75"><name pos:start="51:13" pos:end="51:21">sws_scale</name><argument_list pos:start="51:22" pos:end="55:75">(<argument pos:start="51:23" pos:end="51:29"><expr pos:start="51:23" pos:end="51:29"><name pos:start="51:23" pos:end="51:29">sws_ctx</name></expr></argument>,

                      <argument pos:start="53:23" pos:end="53:63"><expr pos:start="53:23" pos:end="53:63"><operator pos:start="53:23" pos:end="53:23">(</operator><specifier pos:start="53:24" pos:end="53:28">const</specifier> <name pos:start="53:30" pos:end="53:36">uint8_t</name> <operator pos:start="53:38" pos:end="53:38">*</operator> <specifier pos:start="53:40" pos:end="53:44">const</specifier> <operator pos:start="53:46" pos:end="53:46">*</operator><operator pos:start="53:47" pos:end="53:47">)</operator><name pos:start="53:48" pos:end="53:63"><name pos:start="53:48" pos:end="53:58">src_picture</name><operator pos:start="53:59" pos:end="53:59">.</operator><name pos:start="53:60" pos:end="53:63">data</name></name></expr></argument>, <argument pos:start="53:66" pos:end="53:85"><expr pos:start="53:66" pos:end="53:85"><name pos:start="53:66" pos:end="53:85"><name pos:start="53:66" pos:end="53:76">src_picture</name><operator pos:start="53:77" pos:end="53:77">.</operator><name pos:start="53:78" pos:end="53:85">linesize</name></name></expr></argument>,

                      <argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr></argument>, <argument pos:start="55:26" pos:end="55:34"><expr pos:start="55:26" pos:end="55:34"><name pos:start="55:26" pos:end="55:34"><name pos:start="55:26" pos:end="55:26">c</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:34">height</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:52"><expr pos:start="55:37" pos:end="55:52"><name pos:start="55:37" pos:end="55:52"><name pos:start="55:37" pos:end="55:47">dst_picture</name><operator pos:start="55:48" pos:end="55:48">.</operator><name pos:start="55:49" pos:end="55:52">data</name></name></expr></argument>, <argument pos:start="55:55" pos:end="55:74"><expr pos:start="55:55" pos:end="55:74"><name pos:start="55:55" pos:end="55:74"><name pos:start="55:55" pos:end="55:65">dst_picture</name><operator pos:start="55:66" pos:end="55:66">.</operator><name pos:start="55:67" pos:end="55:74">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:75">

            <expr_stmt pos:start="59:13" pos:end="59:75"><expr pos:start="59:13" pos:end="59:74"><call pos:start="59:13" pos:end="59:74"><name pos:start="59:13" pos:end="59:26">fill_yuv_image</name><argument_list pos:start="59:27" pos:end="59:74">(<argument pos:start="59:28" pos:end="59:39"><expr pos:start="59:28" pos:end="59:39"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:39">dst_picture</name></expr></argument>, <argument pos:start="59:42" pos:end="59:52"><expr pos:start="59:42" pos:end="59:52"><name pos:start="59:42" pos:end="59:52">frame_count</name></expr></argument>, <argument pos:start="59:55" pos:end="59:62"><expr pos:start="59:55" pos:end="59:62"><name pos:start="59:55" pos:end="59:62"><name pos:start="59:55" pos:end="59:55">c</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:62">width</name></name></expr></argument>, <argument pos:start="59:65" pos:end="59:73"><expr pos:start="59:65" pos:end="59:73"><name pos:start="59:65" pos:end="59:73"><name pos:start="59:65" pos:end="59:65">c</name><operator pos:start="59:66" pos:end="59:67">-&gt;</operator><name pos:start="59:68" pos:end="59:73">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="127:5"><if pos:start="67:5" pos:end="89:5">if <condition pos:start="67:8" pos:end="67:46">(<expr pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:10">oc</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:19">oformat</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:26">flags</name></name> <operator pos:start="67:28" pos:end="67:28">&amp;</operator> <name pos:start="67:30" pos:end="67:45">AVFMT_RAWPICTURE</name></expr>)</condition> <block pos:start="67:48" pos:end="89:5">{<block_content pos:start="71:9" pos:end="87:51">

        <comment type="block" pos:start="69:9" pos:end="69:71">/* Raw video case - directly store the picture in the packet */</comment>

        <decl_stmt pos:start="71:9" pos:end="71:21"><decl pos:start="71:9" pos:end="71:20"><type pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:16">AVPacket</name></type> <name pos:start="71:18" pos:end="71:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><call pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:22">av_init_packet</name><argument_list pos:start="73:23" pos:end="73:28">(<argument pos:start="73:24" pos:end="73:27"><expr pos:start="73:24" pos:end="73:27"><operator pos:start="73:24" pos:end="73:24">&amp;</operator><name pos:start="73:25" pos:end="73:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:44"><expr pos:start="77:9" pos:end="77:43"><name pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:11">pkt</name><operator pos:start="77:12" pos:end="77:12">.</operator><name pos:start="77:13" pos:end="77:17">flags</name></name>        <operator pos:start="77:26" pos:end="77:27">|=</operator> <name pos:start="77:29" pos:end="77:43">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:11">pkt</name><operator pos:start="79:12" pos:end="79:12">.</operator><name pos:start="79:13" pos:end="79:24">stream_index</name></name>  <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:37"><name pos:start="79:29" pos:end="79:30">st</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:37">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:48"><expr pos:start="81:9" pos:end="81:47"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:11">pkt</name><operator pos:start="81:12" pos:end="81:12">.</operator><name pos:start="81:13" pos:end="81:16">data</name></name>          <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:47"><name pos:start="81:29" pos:end="81:39">dst_picture</name><operator pos:start="81:40" pos:end="81:40">.</operator><name pos:start="81:41" pos:end="81:44">data</name><index pos:start="81:45" pos:end="81:47">[<expr pos:start="81:46" pos:end="81:46"><literal type="number" pos:start="81:46" pos:end="81:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:11">pkt</name><operator pos:start="83:12" pos:end="83:12">.</operator><name pos:start="83:13" pos:end="83:16">size</name></name>          <operator pos:start="83:27" pos:end="83:27">=</operator> <sizeof pos:start="83:29" pos:end="83:45">sizeof<argument_list pos:start="83:35" pos:end="83:45">(<argument pos:start="83:36" pos:end="83:44"><expr pos:start="83:36" pos:end="83:44"><name pos:start="83:36" pos:end="83:44">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:51"><expr pos:start="87:9" pos:end="87:50"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:50"><name pos:start="87:15" pos:end="87:40">av_interleaved_write_frame</name><argument_list pos:start="87:41" pos:end="87:50">(<argument pos:start="87:42" pos:end="87:43"><expr pos:start="87:42" pos:end="87:43"><name pos:start="87:42" pos:end="87:43">oc</name></expr></argument>, <argument pos:start="87:46" pos:end="87:49"><expr pos:start="87:46" pos:end="87:49"><operator pos:start="87:46" pos:end="87:46">&amp;</operator><name pos:start="87:47" pos:end="87:49">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="127:5">else <block pos:start="89:12" pos:end="127:5">{<block_content pos:start="91:9" pos:end="125:9">

        <decl_stmt pos:start="91:9" pos:end="91:29"><decl pos:start="91:9" pos:end="91:28"><type pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:16">AVPacket</name></type> <name pos:start="91:18" pos:end="91:20">pkt</name> <init pos:start="91:22" pos:end="91:28">= <expr pos:start="91:24" pos:end="91:28"><block pos:start="91:24" pos:end="91:28">{ <expr pos:start="91:26" pos:end="91:26"><literal type="number" pos:start="91:26" pos:end="91:26">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:23"><decl pos:start="93:9" pos:end="93:22"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:22">got_packet</name></decl>;</decl_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:22">av_init_packet</name><argument_list pos:start="95:23" pos:end="95:28">(<argument pos:start="95:24" pos:end="95:27"><expr pos:start="95:24" pos:end="95:27"><operator pos:start="95:24" pos:end="95:24">&amp;</operator><name pos:start="95:25" pos:end="95:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="99:9" pos:end="99:30">/* encode the image */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:13">frame</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:18">pts</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:32">frame_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:65"><expr pos:start="103:9" pos:end="103:64"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:64"><name pos:start="103:15" pos:end="103:35">avcodec_encode_video2</name><argument_list pos:start="103:36" pos:end="103:64">(<argument pos:start="103:37" pos:end="103:37"><expr pos:start="103:37" pos:end="103:37"><name pos:start="103:37" pos:end="103:37">c</name></expr></argument>, <argument pos:start="103:40" pos:end="103:43"><expr pos:start="103:40" pos:end="103:43"><operator pos:start="103:40" pos:end="103:40">&amp;</operator><name pos:start="103:41" pos:end="103:43">pkt</name></expr></argument>, <argument pos:start="103:46" pos:end="103:50"><expr pos:start="103:46" pos:end="103:50"><name pos:start="103:46" pos:end="103:50">frame</name></expr></argument>, <argument pos:start="103:53" pos:end="103:63"><expr pos:start="103:53" pos:end="103:63"><operator pos:start="103:53" pos:end="103:53">&amp;</operator><name pos:start="103:54" pos:end="103:63">got_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:20">(<expr pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">&lt;</operator> <literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>)</condition> <block pos:start="105:22" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:20">

            <expr_stmt pos:start="107:13" pos:end="107:81"><expr pos:start="107:13" pos:end="107:80"><call pos:start="107:13" pos:end="107:80"><name pos:start="107:13" pos:end="107:19">fprintf</name><argument_list pos:start="107:20" pos:end="107:80">(<argument pos:start="107:21" pos:end="107:26"><expr pos:start="107:21" pos:end="107:26"><name pos:start="107:21" pos:end="107:26">stderr</name></expr></argument>, <argument pos:start="107:29" pos:end="107:62"><expr pos:start="107:29" pos:end="107:62"><literal type="string" pos:start="107:29" pos:end="107:62">"Error encoding video frame: %s\n"</literal></expr></argument>, <argument pos:start="107:65" pos:end="107:79"><expr pos:start="107:65" pos:end="107:79"><call pos:start="107:65" pos:end="107:79"><name pos:start="107:65" pos:end="107:74">av_err2str</name><argument_list pos:start="107:75" pos:end="107:79">(<argument pos:start="107:76" pos:end="107:78"><expr pos:start="107:76" pos:end="107:78"><name pos:start="107:76" pos:end="107:78">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:20"><expr pos:start="109:13" pos:end="109:19"><call pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:16">exit</name><argument_list pos:start="109:17" pos:end="109:19">(<argument pos:start="109:18" pos:end="109:18"><expr pos:start="109:18" pos:end="109:18"><literal type="number" pos:start="109:18" pos:end="109:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="113:9" pos:end="113:63">/* If size is zero, it means the image was buffered. */</comment>



        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:23">(<expr pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:22">got_packet</name></expr>)</condition> <block pos:start="117:25" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:59">

            <expr_stmt pos:start="119:13" pos:end="119:59"><expr pos:start="119:13" pos:end="119:58"><name pos:start="119:13" pos:end="119:15">ret</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="119:58"><name pos:start="119:19" pos:end="119:29">write_frame</name><argument_list pos:start="119:30" pos:end="119:58">(<argument pos:start="119:31" pos:end="119:32"><expr pos:start="119:31" pos:end="119:32"><name pos:start="119:31" pos:end="119:32">oc</name></expr></argument>, <argument pos:start="119:35" pos:end="119:47"><expr pos:start="119:35" pos:end="119:47"><operator pos:start="119:35" pos:end="119:35">&amp;</operator><name pos:start="119:36" pos:end="119:47"><name pos:start="119:36" pos:end="119:36">c</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:47">time_base</name></name></expr></argument>, <argument pos:start="119:50" pos:end="119:51"><expr pos:start="119:50" pos:end="119:51"><name pos:start="119:50" pos:end="119:51">st</name></expr></argument>, <argument pos:start="119:54" pos:end="119:57"><expr pos:start="119:54" pos:end="119:57"><operator pos:start="119:54" pos:end="119:54">&amp;</operator><name pos:start="119:55" pos:end="119:57">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="125:9">else <block pos:start="121:16" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:20">

            <expr_stmt pos:start="123:13" pos:end="123:20"><expr pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="129:5" pos:end="135:5"><if pos:start="129:5" pos:end="135:5">if <condition pos:start="129:8" pos:end="129:17">(<expr pos:start="129:9" pos:end="129:16"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:14">!=</operator> <literal type="number" pos:start="129:16" pos:end="129:16">0</literal></expr>)</condition> <block pos:start="129:19" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:16">

        <expr_stmt pos:start="131:9" pos:end="131:82"><expr pos:start="131:9" pos:end="131:81"><call pos:start="131:9" pos:end="131:81"><name pos:start="131:9" pos:end="131:15">fprintf</name><argument_list pos:start="131:16" pos:end="131:81">(<argument pos:start="131:17" pos:end="131:22"><expr pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:22">stderr</name></expr></argument>, <argument pos:start="131:25" pos:end="131:63"><expr pos:start="131:25" pos:end="131:63"><literal type="string" pos:start="131:25" pos:end="131:63">"Error while writing video frame: %s\n"</literal></expr></argument>, <argument pos:start="131:66" pos:end="131:80"><expr pos:start="131:66" pos:end="131:80"><call pos:start="131:66" pos:end="131:80"><name pos:start="131:66" pos:end="131:75">av_err2str</name><argument_list pos:start="131:76" pos:end="131:80">(<argument pos:start="131:77" pos:end="131:79"><expr pos:start="131:77" pos:end="131:79"><name pos:start="131:77" pos:end="131:79">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:16"><expr pos:start="133:9" pos:end="133:15"><call pos:start="133:9" pos:end="133:15"><name pos:start="133:9" pos:end="133:12">exit</name><argument_list pos:start="133:13" pos:end="133:15">(<argument pos:start="133:14" pos:end="133:14"><expr pos:start="133:14" pos:end="133:14"><literal type="number" pos:start="133:14" pos:end="133:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:15">frame_count</name><operator pos:start="137:16" pos:end="137:17">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
