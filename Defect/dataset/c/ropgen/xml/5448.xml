<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5448.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_dref</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">entries</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><call pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">get_be32</name><argument_list pos:start="13:13" pos:end="13:16">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="13:19" pos:end="13:36">// version + flags</comment>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:11">entries</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:26"><name pos:start="15:15" pos:end="15:22">get_be32</name><argument_list pos:start="15:23" pos:end="15:26">(<argument pos:start="15:24" pos:end="15:25"><expr pos:start="15:24" pos:end="15:25"><name pos:start="15:24" pos:end="15:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:49">(<expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:15">entries</name> <operator pos:start="17:17" pos:end="17:18">&gt;=</operator> <name pos:start="17:20" pos:end="17:27">UINT_MAX</name> <operator pos:start="17:29" pos:end="17:29">/</operator> <sizeof pos:start="17:31" pos:end="17:48">sizeof<argument_list pos:start="17:37" pos:end="17:48">(<argument pos:start="17:38" pos:end="17:47"><expr pos:start="17:38" pos:end="17:47"><operator pos:start="17:38" pos:end="17:38">*</operator><name pos:start="17:39" pos:end="17:47"><name pos:start="17:39" pos:end="17:40">sc</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:47">drefs</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:6">sc</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:13">drefs</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:56"><name pos:start="21:17" pos:end="21:26">av_mallocz</name><argument_list pos:start="21:27" pos:end="21:56">(<argument pos:start="21:28" pos:end="21:55"><expr pos:start="21:28" pos:end="21:55"><name pos:start="21:28" pos:end="21:34">entries</name> <operator pos:start="21:36" pos:end="21:36">*</operator> <sizeof pos:start="21:38" pos:end="21:55">sizeof<argument_list pos:start="21:44" pos:end="21:55">(<argument pos:start="21:45" pos:end="21:54"><expr pos:start="21:45" pos:end="21:54"><operator pos:start="21:45" pos:end="21:45">*</operator><name pos:start="21:46" pos:end="21:54"><name pos:start="21:46" pos:end="21:47">sc</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:54">drefs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:18"><name pos:start="23:10" pos:end="23:11">sc</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:18">drefs</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:6">sc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:19">drefs_count</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:29">entries</name></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="133:5">for <control pos:start="31:9" pos:end="31:41">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:35"><name pos:start="31:21" pos:end="31:22">sc</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:35">drefs_count</name></name></expr>;</condition> <incr pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:38">i</name><operator pos:start="31:39" pos:end="31:40">++</operator></expr></incr>)</control> <block pos:start="31:43" pos:end="133:5">{<block_content pos:start="33:9" pos:end="131:38">

        <decl_stmt pos:start="33:9" pos:end="33:38"><decl pos:start="33:9" pos:end="33:37"><type pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">MOVDref</name> <modifier pos:start="33:17" pos:end="33:17">*</modifier></type><name pos:start="33:18" pos:end="33:21">dref</name> <init pos:start="33:23" pos:end="33:37">= <expr pos:start="33:25" pos:end="33:37"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:27">sc</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:34">drefs</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:37"><decl pos:start="35:9" pos:end="35:36"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">uint32_t</name></type> <name pos:start="35:18" pos:end="35:21">size</name> <init pos:start="35:23" pos:end="35:36">= <expr pos:start="35:25" pos:end="35:36"><call pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:32">get_be32</name><argument_list pos:start="35:33" pos:end="35:36">(<argument pos:start="35:34" pos:end="35:35"><expr pos:start="35:34" pos:end="35:35"><name pos:start="35:34" pos:end="35:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:48"><decl pos:start="37:9" pos:end="37:47"><type pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:15">int64_t</name></type> <name pos:start="37:17" pos:end="37:20">next</name> <init pos:start="37:22" pos:end="37:47">= <expr pos:start="37:24" pos:end="37:47"><call pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:32">url_ftell</name><argument_list pos:start="37:33" pos:end="37:36">(<argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><name pos:start="37:34" pos:end="37:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="37:38" pos:end="37:38">+</operator> <name pos:start="37:40" pos:end="37:43">size</name> <operator pos:start="37:45" pos:end="37:45">-</operator> <literal type="number" pos:start="37:47" pos:end="37:47">4</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:12">dref</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:18">type</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:33"><name pos:start="41:22" pos:end="41:29">get_le32</name><argument_list pos:start="41:30" pos:end="41:33">(<argument pos:start="41:31" pos:end="41:32"><expr pos:start="41:31" pos:end="41:32"><name pos:start="41:31" pos:end="41:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><call pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:16">get_be32</name><argument_list pos:start="43:17" pos:end="43:20">(<argument pos:start="43:18" pos:end="43:19"><expr pos:start="43:18" pos:end="43:19"><name pos:start="43:18" pos:end="43:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="43:23" pos:end="43:40">// version + flags</comment>

        <expr_stmt pos:start="45:9" pos:end="45:72"><expr pos:start="45:9" pos:end="45:71"><call pos:start="45:9" pos:end="45:71"><name pos:start="45:9" pos:end="45:15">dprintf</name><argument_list pos:start="45:16" pos:end="45:71">(<argument pos:start="45:17" pos:end="45:21"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:17">c</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:21">fc</name></name></expr></argument>, <argument pos:start="45:24" pos:end="45:44"><expr pos:start="45:24" pos:end="45:44"><literal type="string" pos:start="45:24" pos:end="45:44">"type %.4s size %d\n"</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:64"><expr pos:start="45:47" pos:end="45:64"><operator pos:start="45:47" pos:end="45:47">(</operator><name pos:start="45:48" pos:end="45:51">char</name><operator pos:start="45:52" pos:end="45:52">*</operator><operator pos:start="45:53" pos:end="45:53">)</operator><operator pos:start="45:54" pos:end="45:54">&amp;</operator><name pos:start="45:55" pos:end="45:64"><name pos:start="45:55" pos:end="45:58">dref</name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:64">type</name></name></expr></argument>, <argument pos:start="45:67" pos:end="45:70"><expr pos:start="45:67" pos:end="45:70"><name pos:start="45:67" pos:end="45:70">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="129:9"><if pos:start="49:9" pos:end="129:9">if <condition pos:start="49:12" pos:end="49:63">(<expr pos:start="49:13" pos:end="49:62"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:16">dref</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:22">type</name></name> <operator pos:start="49:24" pos:end="49:25">==</operator> <call pos:start="49:27" pos:end="49:48"><name pos:start="49:27" pos:end="49:31">MKTAG</name><argument_list pos:start="49:32" pos:end="49:48">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><literal type="char" pos:start="49:33" pos:end="49:35">'a'</literal></expr></argument>,<argument pos:start="49:37" pos:end="49:39"><expr pos:start="49:37" pos:end="49:39"><literal type="char" pos:start="49:37" pos:end="49:39">'l'</literal></expr></argument>,<argument pos:start="49:41" pos:end="49:43"><expr pos:start="49:41" pos:end="49:43"><literal type="char" pos:start="49:41" pos:end="49:43">'i'</literal></expr></argument>,<argument pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><literal type="char" pos:start="49:45" pos:end="49:47">'s'</literal></expr></argument>)</argument_list></call> <operator pos:start="49:50" pos:end="49:51">&amp;&amp;</operator> <name pos:start="49:53" pos:end="49:56">size</name> <operator pos:start="49:58" pos:end="49:58">&gt;</operator> <literal type="number" pos:start="49:60" pos:end="49:62">150</literal></expr>)</condition> <block pos:start="49:65" pos:end="129:9">{<block_content pos:start="53:13" pos:end="127:13">

            <comment type="block" pos:start="51:13" pos:end="51:40">/* macintosh alias record */</comment>

            <decl_stmt pos:start="53:13" pos:end="53:37"><decl pos:start="53:13" pos:end="53:31"><type pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20">uint16_t</name></type> <name pos:start="53:22" pos:end="53:31">volume_len</name></decl>, <decl pos:start="53:34" pos:end="53:36"><type ref="prev" pos:start="53:13" pos:end="53:20"/><name pos:start="53:34" pos:end="53:36">len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:28"><decl pos:start="55:13" pos:end="55:27"><type pos:start="55:13" pos:end="55:16"><name pos:start="55:13" pos:end="55:16">char</name></type> <name pos:start="55:18" pos:end="55:27"><name pos:start="55:18" pos:end="55:23">volume</name><index pos:start="55:24" pos:end="55:27">[<expr pos:start="55:25" pos:end="55:26"><literal type="number" pos:start="55:25" pos:end="55:26">28</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:25"><decl pos:start="57:13" pos:end="57:24"><type pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:19">int16_t</name></type> <name pos:start="57:21" pos:end="57:24">type</name></decl>;</decl_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><call pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:21">url_fskip</name><argument_list pos:start="61:22" pos:end="61:29">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">pb</name></expr></argument>, <argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><literal type="number" pos:start="61:27" pos:end="61:28">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:38"><expr pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:22">volume_len</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <call pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:33">get_byte</name><argument_list pos:start="65:34" pos:end="65:37">(<argument pos:start="65:35" pos:end="65:36"><expr pos:start="65:35" pos:end="65:36"><name pos:start="65:35" pos:end="65:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:47"><expr pos:start="67:13" pos:end="67:46"><name pos:start="67:13" pos:end="67:22">volume_len</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <call pos:start="67:26" pos:end="67:46"><name pos:start="67:26" pos:end="67:30">FFMIN</name><argument_list pos:start="67:31" pos:end="67:46">(<argument pos:start="67:32" pos:end="67:41"><expr pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:41">volume_len</name></expr></argument>, <argument pos:start="67:44" pos:end="67:45"><expr pos:start="67:44" pos:end="67:45"><literal type="number" pos:start="67:44" pos:end="67:45">27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:39"><expr pos:start="69:13" pos:end="69:38"><call pos:start="69:13" pos:end="69:38"><name pos:start="69:13" pos:end="69:22">get_buffer</name><argument_list pos:start="69:23" pos:end="69:38">(<argument pos:start="69:24" pos:end="69:25"><expr pos:start="69:24" pos:end="69:25"><name pos:start="69:24" pos:end="69:25">pb</name></expr></argument>, <argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">volume</name></expr></argument>, <argument pos:start="69:36" pos:end="69:37"><expr pos:start="69:36" pos:end="69:37"><literal type="number" pos:start="69:36" pos:end="69:37">27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:18">volume</name><index pos:start="71:19" pos:end="71:30">[<expr pos:start="71:20" pos:end="71:29"><name pos:start="71:20" pos:end="71:29">volume_len</name></expr>]</index></name> <operator pos:start="71:32" pos:end="71:32">=</operator> <literal type="number" pos:start="71:34" pos:end="71:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:83"><expr pos:start="73:13" pos:end="73:82"><call pos:start="73:13" pos:end="73:82"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:82">(<argument pos:start="73:20" pos:end="73:24"><expr pos:start="73:20" pos:end="73:24"><name pos:start="73:20" pos:end="73:24"><name pos:start="73:20" pos:end="73:20">c</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:24">fc</name></name></expr></argument>, <argument pos:start="73:27" pos:end="73:38"><expr pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:41" pos:end="73:61"><expr pos:start="73:41" pos:end="73:61"><literal type="string" pos:start="73:41" pos:end="73:61">"volume %s, len %d\n"</literal></expr></argument>, <argument pos:start="73:64" pos:end="73:69"><expr pos:start="73:64" pos:end="73:69"><name pos:start="73:64" pos:end="73:69">volume</name></expr></argument>, <argument pos:start="73:72" pos:end="73:81"><expr pos:start="73:72" pos:end="73:81"><name pos:start="73:72" pos:end="73:81">volume_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:31"><expr pos:start="77:13" pos:end="77:30"><call pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:21">url_fskip</name><argument_list pos:start="77:22" pos:end="77:30">(<argument pos:start="77:23" pos:end="77:24"><expr pos:start="77:23" pos:end="77:24"><name pos:start="77:23" pos:end="77:24">pb</name></expr></argument>, <argument pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><literal type="number" pos:start="77:27" pos:end="77:29">112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="81:13" pos:end="127:13">for <control pos:start="81:17" pos:end="81:64">(<init pos:start="81:18" pos:end="81:26"><expr pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:21">type</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">0</literal></expr>;</init> <condition pos:start="81:28" pos:end="81:62"><expr pos:start="81:28" pos:end="81:61"><name pos:start="81:28" pos:end="81:31">type</name> <operator pos:start="81:33" pos:end="81:34">!=</operator> <operator pos:start="81:36" pos:end="81:36">-</operator><literal type="number" pos:start="81:37" pos:end="81:37">1</literal> <operator pos:start="81:39" pos:end="81:40">&amp;&amp;</operator> <call pos:start="81:42" pos:end="81:54"><name pos:start="81:42" pos:end="81:50">url_ftell</name><argument_list pos:start="81:51" pos:end="81:54">(<argument pos:start="81:52" pos:end="81:53"><expr pos:start="81:52" pos:end="81:53"><name pos:start="81:52" pos:end="81:53">pb</name></expr></argument>)</argument_list></call> <operator pos:start="81:56" pos:end="81:56">&lt;</operator> <name pos:start="81:58" pos:end="81:61">next</name></expr>;</condition> <incr/>)</control> <block pos:start="81:66" pos:end="127:13">{<block_content pos:start="83:17" pos:end="125:39">

                <expr_stmt pos:start="83:17" pos:end="83:36"><expr pos:start="83:17" pos:end="83:35"><name pos:start="83:17" pos:end="83:20">type</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:35"><name pos:start="83:24" pos:end="83:31">get_be16</name><argument_list pos:start="83:32" pos:end="83:35">(<argument pos:start="83:33" pos:end="83:34"><expr pos:start="83:33" pos:end="83:34"><name pos:start="83:33" pos:end="83:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:35"><expr pos:start="85:17" pos:end="85:34"><name pos:start="85:17" pos:end="85:19">len</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:30">get_be16</name><argument_list pos:start="85:31" pos:end="85:34">(<argument pos:start="85:32" pos:end="85:33"><expr pos:start="85:32" pos:end="85:33"><name pos:start="85:32" pos:end="85:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:76"><expr pos:start="87:17" pos:end="87:75"><call pos:start="87:17" pos:end="87:75"><name pos:start="87:17" pos:end="87:22">av_log</name><argument_list pos:start="87:23" pos:end="87:75">(<argument pos:start="87:24" pos:end="87:28"><expr pos:start="87:24" pos:end="87:28"><name pos:start="87:24" pos:end="87:28"><name pos:start="87:24" pos:end="87:24">c</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:28">fc</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:42"><expr pos:start="87:31" pos:end="87:42"><name pos:start="87:31" pos:end="87:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="87:45" pos:end="87:63"><expr pos:start="87:45" pos:end="87:63"><literal type="string" pos:start="87:45" pos:end="87:63">"type %d, len %d\n"</literal></expr></argument>, <argument pos:start="87:66" pos:end="87:69"><expr pos:start="87:66" pos:end="87:69"><name pos:start="87:66" pos:end="87:69">type</name></expr></argument>, <argument pos:start="87:72" pos:end="87:74"><expr pos:start="87:72" pos:end="87:74"><name pos:start="87:72" pos:end="87:74">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="91:29"><if pos:start="89:17" pos:end="91:29">if <condition pos:start="89:20" pos:end="89:26">(<expr pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:23">len</name><operator pos:start="89:24" pos:end="89:24">&amp;</operator><literal type="number" pos:start="89:25" pos:end="89:25">1</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:29"><block_content pos:start="91:21" pos:end="91:29">

                    <expr_stmt pos:start="91:21" pos:end="91:29"><expr pos:start="91:21" pos:end="91:28"><name pos:start="91:21" pos:end="91:23">len</name> <operator pos:start="91:25" pos:end="91:26">+=</operator> <literal type="number" pos:start="91:28" pos:end="91:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="93:17" pos:end="125:39"><if pos:start="93:17" pos:end="123:17">if <condition pos:start="93:20" pos:end="93:30">(<expr pos:start="93:21" pos:end="93:29"><name pos:start="93:21" pos:end="93:24">type</name> <operator pos:start="93:26" pos:end="93:27">==</operator> <literal type="number" pos:start="93:29" pos:end="93:29">2</literal></expr>)</condition> <block pos:start="93:32" pos:end="123:17">{<block_content pos:start="95:21" pos:end="121:73"> <comment type="line" pos:start="93:34" pos:end="93:49">// absolute path</comment>

                    <expr_stmt pos:start="95:21" pos:end="95:40"><expr pos:start="95:21" pos:end="95:39"><call pos:start="95:21" pos:end="95:39"><name pos:start="95:21" pos:end="95:27">av_free</name><argument_list pos:start="95:28" pos:end="95:39">(<argument pos:start="95:29" pos:end="95:38"><expr pos:start="95:29" pos:end="95:38"><name pos:start="95:29" pos:end="95:38"><name pos:start="95:29" pos:end="95:32">dref</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:38">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:51"><expr pos:start="97:21" pos:end="97:50"><name pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:24">dref</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:30">path</name></name> <operator pos:start="97:32" pos:end="97:32">=</operator> <call pos:start="97:34" pos:end="97:50"><name pos:start="97:34" pos:end="97:43">av_mallocz</name><argument_list pos:start="97:44" pos:end="97:50">(<argument pos:start="97:45" pos:end="97:49"><expr pos:start="97:45" pos:end="97:49"><name pos:start="97:45" pos:end="97:47">len</name><operator pos:start="97:48" pos:end="97:48">+</operator><literal type="number" pos:start="97:49" pos:end="97:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="99:21" pos:end="101:47"><if pos:start="99:21" pos:end="101:47">if <condition pos:start="99:24" pos:end="99:36">(<expr pos:start="99:25" pos:end="99:35"><operator pos:start="99:25" pos:end="99:25">!</operator><name pos:start="99:26" pos:end="99:35"><name pos:start="99:26" pos:end="99:29">dref</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:35">path</name></name></expr>)</condition><block type="pseudo" pos:start="101:25" pos:end="101:47"><block_content pos:start="101:25" pos:end="101:47">

                        <return pos:start="101:25" pos:end="101:47">return <expr pos:start="101:32" pos:end="101:46"><call pos:start="101:32" pos:end="101:46"><name pos:start="101:32" pos:end="101:38">AVERROR</name><argument_list pos:start="101:39" pos:end="101:46">(<argument pos:start="101:40" pos:end="101:45"><expr pos:start="101:40" pos:end="101:45"><name pos:start="101:40" pos:end="101:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:52"><expr pos:start="103:21" pos:end="103:51"><call pos:start="103:21" pos:end="103:51"><name pos:start="103:21" pos:end="103:30">get_buffer</name><argument_list pos:start="103:31" pos:end="103:51">(<argument pos:start="103:32" pos:end="103:33"><expr pos:start="103:32" pos:end="103:33"><name pos:start="103:32" pos:end="103:33">pb</name></expr></argument>, <argument pos:start="103:36" pos:end="103:45"><expr pos:start="103:36" pos:end="103:45"><name pos:start="103:36" pos:end="103:45"><name pos:start="103:36" pos:end="103:39">dref</name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:45">path</name></name></expr></argument>, <argument pos:start="103:48" pos:end="103:50"><expr pos:start="103:48" pos:end="103:50"><name pos:start="103:48" pos:end="103:50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="105:21" pos:end="113:21"><if pos:start="105:21" pos:end="113:21">if <condition pos:start="105:24" pos:end="105:85">(<expr pos:start="105:25" pos:end="105:84"><name pos:start="105:25" pos:end="105:27">len</name> <operator pos:start="105:29" pos:end="105:29">&gt;</operator> <name pos:start="105:31" pos:end="105:40">volume_len</name> <operator pos:start="105:42" pos:end="105:43">&amp;&amp;</operator> <operator pos:start="105:45" pos:end="105:45">!</operator><call pos:start="105:46" pos:end="105:84"><name pos:start="105:46" pos:end="105:52">strncmp</name><argument_list pos:start="105:53" pos:end="105:84">(<argument pos:start="105:54" pos:end="105:63"><expr pos:start="105:54" pos:end="105:63"><name pos:start="105:54" pos:end="105:63"><name pos:start="105:54" pos:end="105:57">dref</name><operator pos:start="105:58" pos:end="105:59">-&gt;</operator><name pos:start="105:60" pos:end="105:63">path</name></name></expr></argument>, <argument pos:start="105:66" pos:end="105:71"><expr pos:start="105:66" pos:end="105:71"><name pos:start="105:66" pos:end="105:71">volume</name></expr></argument>, <argument pos:start="105:74" pos:end="105:83"><expr pos:start="105:74" pos:end="105:83"><name pos:start="105:74" pos:end="105:83">volume_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:87" pos:end="113:21">{<block_content pos:start="107:25" pos:end="111:44">

                        <expr_stmt pos:start="107:25" pos:end="107:42"><expr pos:start="107:25" pos:end="107:41"><name pos:start="107:25" pos:end="107:27">len</name> <operator pos:start="107:29" pos:end="107:30">-=</operator> <name pos:start="107:32" pos:end="107:41">volume_len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="109:25" pos:end="109:72"><expr pos:start="109:25" pos:end="109:71"><call pos:start="109:25" pos:end="109:71"><name pos:start="109:25" pos:end="109:31">memmove</name><argument_list pos:start="109:32" pos:end="109:71">(<argument pos:start="109:33" pos:end="109:42"><expr pos:start="109:33" pos:end="109:42"><name pos:start="109:33" pos:end="109:42"><name pos:start="109:33" pos:end="109:36">dref</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:42">path</name></name></expr></argument>, <argument pos:start="109:45" pos:end="109:65"><expr pos:start="109:45" pos:end="109:65"><name pos:start="109:45" pos:end="109:54"><name pos:start="109:45" pos:end="109:48">dref</name><operator pos:start="109:49" pos:end="109:50">-&gt;</operator><name pos:start="109:51" pos:end="109:54">path</name></name><operator pos:start="109:55" pos:end="109:55">+</operator><name pos:start="109:56" pos:end="109:65">volume_len</name></expr></argument>, <argument pos:start="109:68" pos:end="109:70"><expr pos:start="109:68" pos:end="109:70"><name pos:start="109:68" pos:end="109:70">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="111:25" pos:end="111:44"><expr pos:start="111:25" pos:end="111:43"><name pos:start="111:25" pos:end="111:39"><name pos:start="111:25" pos:end="111:28">dref</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:34">path</name><index pos:start="111:35" pos:end="111:39">[<expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:38">len</name></expr>]</index></name> <operator pos:start="111:41" pos:end="111:41">=</operator> <literal type="number" pos:start="111:43" pos:end="111:43">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <for pos:start="115:21" pos:end="119:48">for <control pos:start="115:25" pos:end="115:45">(<init pos:start="115:26" pos:end="115:31"><expr pos:start="115:26" pos:end="115:30"><name pos:start="115:26" pos:end="115:26">j</name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">0</literal></expr>;</init> <condition pos:start="115:33" pos:end="115:40"><expr pos:start="115:33" pos:end="115:39"><name pos:start="115:33" pos:end="115:33">j</name> <operator pos:start="115:35" pos:end="115:35">&lt;</operator> <name pos:start="115:37" pos:end="115:39">len</name></expr>;</condition> <incr pos:start="115:42" pos:end="115:44"><expr pos:start="115:42" pos:end="115:44"><name pos:start="115:42" pos:end="115:42">j</name><operator pos:start="115:43" pos:end="115:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:25" pos:end="119:48"><block_content pos:start="117:25" pos:end="119:48">

                        <if_stmt pos:start="117:25" pos:end="119:48"><if pos:start="117:25" pos:end="119:48">if <condition pos:start="117:28" pos:end="117:49">(<expr pos:start="117:29" pos:end="117:48"><name pos:start="117:29" pos:end="117:41"><name pos:start="117:29" pos:end="117:32">dref</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:38">path</name><index pos:start="117:39" pos:end="117:41">[<expr pos:start="117:40" pos:end="117:40"><name pos:start="117:40" pos:end="117:40">j</name></expr>]</index></name> <operator pos:start="117:43" pos:end="117:44">==</operator> <literal type="char" pos:start="117:46" pos:end="117:48">':'</literal></expr>)</condition><block type="pseudo" pos:start="119:29" pos:end="119:48"><block_content pos:start="119:29" pos:end="119:48">

                            <expr_stmt pos:start="119:29" pos:end="119:48"><expr pos:start="119:29" pos:end="119:47"><name pos:start="119:29" pos:end="119:41"><name pos:start="119:29" pos:end="119:32">dref</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:38">path</name><index pos:start="119:39" pos:end="119:41">[<expr pos:start="119:40" pos:end="119:40"><name pos:start="119:40" pos:end="119:40">j</name></expr>]</index></name> <operator pos:start="119:43" pos:end="119:43">=</operator> <literal type="char" pos:start="119:45" pos:end="119:47">'/'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                    <expr_stmt pos:start="121:21" pos:end="121:73"><expr pos:start="121:21" pos:end="121:72"><call pos:start="121:21" pos:end="121:72"><name pos:start="121:21" pos:end="121:26">av_log</name><argument_list pos:start="121:27" pos:end="121:72">(<argument pos:start="121:28" pos:end="121:32"><expr pos:start="121:28" pos:end="121:32"><name pos:start="121:28" pos:end="121:32"><name pos:start="121:28" pos:end="121:28">c</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:32">fc</name></name></expr></argument>, <argument pos:start="121:35" pos:end="121:46"><expr pos:start="121:35" pos:end="121:46"><name pos:start="121:35" pos:end="121:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="121:49" pos:end="121:59"><expr pos:start="121:49" pos:end="121:59"><literal type="string" pos:start="121:49" pos:end="121:59">"path %s\n"</literal></expr></argument>, <argument pos:start="121:62" pos:end="121:71"><expr pos:start="121:62" pos:end="121:71"><name pos:start="121:62" pos:end="121:71"><name pos:start="121:62" pos:end="121:65">dref</name><operator pos:start="121:66" pos:end="121:67">-&gt;</operator><name pos:start="121:68" pos:end="121:71">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="123:19" pos:end="125:39">else<block type="pseudo" pos:start="125:21" pos:end="125:39"><block_content pos:start="125:21" pos:end="125:39">

                    <expr_stmt pos:start="125:21" pos:end="125:39"><expr pos:start="125:21" pos:end="125:38"><call pos:start="125:21" pos:end="125:38"><name pos:start="125:21" pos:end="125:29">url_fskip</name><argument_list pos:start="125:30" pos:end="125:38">(<argument pos:start="125:31" pos:end="125:32"><expr pos:start="125:31" pos:end="125:32"><name pos:start="125:31" pos:end="125:32">pb</name></expr></argument>, <argument pos:start="125:35" pos:end="125:37"><expr pos:start="125:35" pos:end="125:37"><name pos:start="125:35" pos:end="125:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:38"><expr pos:start="131:9" pos:end="131:37"><call pos:start="131:9" pos:end="131:37"><name pos:start="131:9" pos:end="131:17">url_fseek</name><argument_list pos:start="131:18" pos:end="131:37">(<argument pos:start="131:19" pos:end="131:20"><expr pos:start="131:19" pos:end="131:20"><name pos:start="131:19" pos:end="131:20">pb</name></expr></argument>, <argument pos:start="131:23" pos:end="131:26"><expr pos:start="131:23" pos:end="131:26"><name pos:start="131:23" pos:end="131:26">next</name></expr></argument>, <argument pos:start="131:29" pos:end="131:36"><expr pos:start="131:29" pos:end="131:36"><name pos:start="131:29" pos:end="131:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
