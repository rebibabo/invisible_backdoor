<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7121.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">virtio_blk_reset</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">VirtIODevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:56">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">VirtIOBlock</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><call pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:31">VIRTIO_BLK</name><argument_list pos:start="5:32" pos:end="5:37">(<argument pos:start="5:33" pos:end="5:36"><expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AioContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">VirtIOBlockReq</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">req</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:7">ctx</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:37"><name pos:start="13:11" pos:end="13:29">blk_get_aio_context</name><argument_list pos:start="13:30" pos:end="13:37">(<argument pos:start="13:31" pos:end="13:36"><expr pos:start="13:31" pos:end="13:36"><name pos:start="13:31" pos:end="13:36"><name pos:start="13:31" pos:end="13:31">s</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:36">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:23">aio_context_acquire</name><argument_list pos:start="15:24" pos:end="15:28">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:13">blk_drain</name><argument_list pos:start="17:14" pos:end="17:21">(<argument pos:start="17:15" pos:end="17:20"><expr pos:start="17:15" pos:end="17:20"><name pos:start="17:15" pos:end="17:20"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:20">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="23:23">/* We drop queued requests after blk_drain() because blk_drain() itself can

     * produce them. */</comment>

    <while pos:start="25:5" pos:end="35:5">while <condition pos:start="25:11" pos:end="25:17">(<expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:16">rq</name></name></expr>)</condition> <block pos:start="25:19" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:37">

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:11">req</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:19">rq</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:13">rq</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:19">req</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:25">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><call pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:32">virtqueue_detach_element</name><argument_list pos:start="31:33" pos:end="31:56">(<argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:36">req</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:40">vq</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:52"><expr pos:start="31:43" pos:end="31:52"><operator pos:start="31:43" pos:end="31:43">&amp;</operator><name pos:start="31:44" pos:end="31:52"><name pos:start="31:44" pos:end="31:46">req</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:52">elem</name></name></expr></argument>, <argument pos:start="31:55" pos:end="31:55"><expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><call pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:31">virtio_blk_free_request</name><argument_list pos:start="33:32" pos:end="33:36">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:21">(<expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:20">dataplane</name></name></expr>)</condition> <block pos:start="39:23" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:49">

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:34">virtio_blk_data_plane_stop</name><argument_list pos:start="41:35" pos:end="41:48">(<argument pos:start="41:36" pos:end="41:47"><expr pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:47">dataplane</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><call pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:23">aio_context_release</name><argument_list pos:start="45:24" pos:end="45:28">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:56"><expr pos:start="49:5" pos:end="49:55"><call pos:start="49:5" pos:end="49:55"><name pos:start="49:5" pos:end="49:30">blk_set_enable_write_cache</name><argument_list pos:start="49:31" pos:end="49:55">(<argument pos:start="49:32" pos:end="49:37"><expr pos:start="49:32" pos:end="49:37"><name pos:start="49:32" pos:end="49:37"><name pos:start="49:32" pos:end="49:32">s</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:37">blk</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:54"><expr pos:start="49:40" pos:end="49:54"><name pos:start="49:40" pos:end="49:54"><name pos:start="49:40" pos:end="49:40">s</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:54">original_wce</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
