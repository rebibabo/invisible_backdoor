<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14153.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">xhci_fire_ctl_transfer</name><parameter_list pos:start="1:34" pos:end="1:70">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:43">XHCIState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">xhci</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><name pos:start="1:52" pos:end="1:63">XHCITransfer</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">xfer</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="5:5" pos:end="163:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">XHCITRB</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:22">trb_setup</name></decl>, <decl pos:start="5:25" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:35">trb_status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:25">bmRequestType</name></decl>, <decl pos:start="7:28" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:28" pos:end="7:35">bRequest</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:19">wValue</name></decl>, <decl pos:start="9:22" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:22" pos:end="9:28">wLength</name></decl>, <decl pos:start="9:31" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:31" pos:end="9:36">wIndex</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">XHCIPort</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">USBDevice</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><call pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="19:62">(<argument pos:start="19:13" pos:end="19:47"><expr pos:start="19:13" pos:end="19:47"><literal type="string" pos:start="19:13" pos:end="19:47">"xhci_fire_ctl_transfer(slot=%d)\n"</literal></expr></argument>, <argument pos:start="19:50" pos:end="19:61"><expr pos:start="19:50" pos:end="19:61"><name pos:start="19:50" pos:end="19:61"><name pos:start="19:50" pos:end="19:53">xfer</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:61">slotid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:13">trb_setup</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:30"><name pos:start="23:18" pos:end="23:21">xfer</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:27">trbs</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:14">trb_status</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:47"><name pos:start="25:19" pos:end="25:22">xfer</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:28">trbs</name><index pos:start="25:29" pos:end="25:47">[<expr pos:start="25:30" pos:end="25:46"><name pos:start="25:30" pos:end="25:44"><name pos:start="25:30" pos:end="25:33">xfer</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:44">trb_count</name></name><operator pos:start="25:45" pos:end="25:45">-</operator><literal type="number" pos:start="25:46" pos:end="25:46">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:57">/* at most one Event Data TRB allowed after STATUS */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:66">(<expr pos:start="31:9" pos:end="31:65"><call pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:16">TRB_TYPE</name><argument_list pos:start="31:17" pos:end="31:29">(<argument pos:start="31:18" pos:end="31:28"><expr pos:start="31:18" pos:end="31:28"><operator pos:start="31:18" pos:end="31:18">*</operator><name pos:start="31:19" pos:end="31:28">trb_status</name></expr></argument>)</argument_list></call> <operator pos:start="31:31" pos:end="31:32">==</operator> <name pos:start="31:34" pos:end="31:42">TR_EVDATA</name> <operator pos:start="31:44" pos:end="31:45">&amp;&amp;</operator> <name pos:start="31:47" pos:end="31:61"><name pos:start="31:47" pos:end="31:50">xfer</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:61">trb_count</name></name> <operator pos:start="31:63" pos:end="31:63">&gt;</operator> <literal type="number" pos:start="31:65" pos:end="31:65">2</literal></expr>)</condition> <block pos:start="31:68" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:21">

        <expr_stmt pos:start="33:9" pos:end="33:21"><expr pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:18">trb_status</name><operator pos:start="33:19" pos:end="33:20">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:31">/* do some sanity checks */</comment>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:41">(<expr pos:start="41:9" pos:end="41:40"><call pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:16">TRB_TYPE</name><argument_list pos:start="41:17" pos:end="41:28">(<argument pos:start="41:18" pos:end="41:27"><expr pos:start="41:18" pos:end="41:27"><operator pos:start="41:18" pos:end="41:18">*</operator><name pos:start="41:19" pos:end="41:27">trb_setup</name></expr></argument>)</argument_list></call> <operator pos:start="41:30" pos:end="41:31">!=</operator> <name pos:start="41:33" pos:end="41:40">TR_SETUP</name></expr>)</condition> <block pos:start="41:43" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:18">

        <expr_stmt pos:start="43:9" pos:end="45:38"><expr pos:start="43:9" pos:end="45:37"><call pos:start="43:9" pos:end="45:37"><name pos:start="43:9" pos:end="43:15">fprintf</name><argument_list pos:start="43:16" pos:end="45:37">(<argument pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">stderr</name></expr></argument>, <argument pos:start="43:25" pos:end="43:60"><expr pos:start="43:25" pos:end="43:60"><literal type="string" pos:start="43:25" pos:end="43:60">"xhci: ep0 first TD not SETUP: %d\n"</literal></expr></argument>,

                <argument pos:start="45:17" pos:end="45:36"><expr pos:start="45:17" pos:end="45:36"><call pos:start="45:17" pos:end="45:36"><name pos:start="45:17" pos:end="45:24">TRB_TYPE</name><argument_list pos:start="45:25" pos:end="45:36">(<argument pos:start="45:26" pos:end="45:35"><expr pos:start="45:26" pos:end="45:35"><operator pos:start="45:26" pos:end="45:26">*</operator><name pos:start="45:27" pos:end="45:35">trb_setup</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:43">(<expr pos:start="51:9" pos:end="51:42"><call pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:16">TRB_TYPE</name><argument_list pos:start="51:17" pos:end="51:29">(<argument pos:start="51:18" pos:end="51:28"><expr pos:start="51:18" pos:end="51:28"><operator pos:start="51:18" pos:end="51:18">*</operator><name pos:start="51:19" pos:end="51:28">trb_status</name></expr></argument>)</argument_list></call> <operator pos:start="51:31" pos:end="51:32">!=</operator> <name pos:start="51:34" pos:end="51:42">TR_STATUS</name></expr>)</condition> <block pos:start="51:45" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:18">

        <expr_stmt pos:start="53:9" pos:end="55:39"><expr pos:start="53:9" pos:end="55:38"><call pos:start="53:9" pos:end="55:38"><name pos:start="53:9" pos:end="53:15">fprintf</name><argument_list pos:start="53:16" pos:end="55:38">(<argument pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">stderr</name></expr></argument>, <argument pos:start="53:25" pos:end="53:60"><expr pos:start="53:25" pos:end="53:60"><literal type="string" pos:start="53:25" pos:end="53:60">"xhci: ep0 last TD not STATUS: %d\n"</literal></expr></argument>,

                <argument pos:start="55:17" pos:end="55:37"><expr pos:start="55:17" pos:end="55:37"><call pos:start="55:17" pos:end="55:37"><name pos:start="55:17" pos:end="55:24">TRB_TYPE</name><argument_list pos:start="55:25" pos:end="55:37">(<argument pos:start="55:26" pos:end="55:36"><expr pos:start="55:26" pos:end="55:36"><operator pos:start="55:26" pos:end="55:26">*</operator><name pos:start="55:27" pos:end="55:36">trb_status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:43">(<expr pos:start="61:9" pos:end="61:42"><operator pos:start="61:9" pos:end="61:9">!</operator><operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:28"><name pos:start="61:11" pos:end="61:19">trb_setup</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:28">control</name></name> <operator pos:start="61:30" pos:end="61:30">&amp;</operator> <name pos:start="61:32" pos:end="61:41">TRB_TR_IDT</name><operator pos:start="61:42" pos:end="61:42">)</operator></expr>)</condition> <block pos:start="61:45" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:18">

        <expr_stmt pos:start="63:9" pos:end="63:66"><expr pos:start="63:9" pos:end="63:65"><call pos:start="63:9" pos:end="63:65"><name pos:start="63:9" pos:end="63:15">fprintf</name><argument_list pos:start="63:16" pos:end="63:65">(<argument pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:22">stderr</name></expr></argument>, <argument pos:start="63:25" pos:end="63:64"><expr pos:start="63:25" pos:end="63:64"><literal type="string" pos:start="63:25" pos:end="63:64">"xhci: Setup TRB doesn't have IDT set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:43">(<expr pos:start="69:9" pos:end="69:42"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:26"><name pos:start="69:10" pos:end="69:18">trb_setup</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:26">status</name></name> <operator pos:start="69:28" pos:end="69:28">&amp;</operator> <literal type="number" pos:start="69:30" pos:end="69:36">0x1ffff</literal><operator pos:start="69:37" pos:end="69:37">)</operator> <operator pos:start="69:39" pos:end="69:40">!=</operator> <literal type="number" pos:start="69:42" pos:end="69:42">8</literal></expr>)</condition> <block pos:start="69:45" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:18">

        <expr_stmt pos:start="71:9" pos:end="73:47"><expr pos:start="71:9" pos:end="73:46"><call pos:start="71:9" pos:end="73:46"><name pos:start="71:9" pos:end="71:15">fprintf</name><argument_list pos:start="71:16" pos:end="73:46">(<argument pos:start="71:17" pos:end="71:22"><expr pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:22">stderr</name></expr></argument>, <argument pos:start="71:25" pos:end="71:63"><expr pos:start="71:25" pos:end="71:63"><literal type="string" pos:start="71:25" pos:end="71:63">"xhci: Setup TRB has bad length (%d)\n"</literal></expr></argument>,

                <argument pos:start="73:17" pos:end="73:45"><expr pos:start="73:17" pos:end="73:45"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:34"><name pos:start="73:18" pos:end="73:26">trb_setup</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:34">status</name></name> <operator pos:start="73:36" pos:end="73:36">&amp;</operator> <literal type="number" pos:start="73:38" pos:end="73:44">0x1ffff</literal><operator pos:start="73:45" pos:end="73:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:41"><expr pos:start="81:5" pos:end="81:40"><name pos:start="81:5" pos:end="81:17">bmRequestType</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:40"><name pos:start="81:21" pos:end="81:29">trb_setup</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:40">parameter</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:41"><expr pos:start="83:5" pos:end="83:40"><name pos:start="83:5" pos:end="83:12">bRequest</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <name pos:start="83:16" pos:end="83:35"><name pos:start="83:16" pos:end="83:24">trb_setup</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:35">parameter</name></name> <operator pos:start="83:37" pos:end="83:38">&gt;&gt;</operator> <literal type="number" pos:start="83:40" pos:end="83:40">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:40"><expr pos:start="85:5" pos:end="85:39"><name pos:start="85:5" pos:end="85:10">wValue</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <name pos:start="85:14" pos:end="85:33"><name pos:start="85:14" pos:end="85:22">trb_setup</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:33">parameter</name></name> <operator pos:start="85:35" pos:end="85:36">&gt;&gt;</operator> <literal type="number" pos:start="85:38" pos:end="85:39">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:40"><expr pos:start="87:5" pos:end="87:39"><name pos:start="87:5" pos:end="87:10">wIndex</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <name pos:start="87:14" pos:end="87:33"><name pos:start="87:14" pos:end="87:22">trb_setup</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:33">parameter</name></name> <operator pos:start="87:35" pos:end="87:36">&gt;&gt;</operator> <literal type="number" pos:start="87:38" pos:end="87:39">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:41"><expr pos:start="89:5" pos:end="89:40"><name pos:start="89:5" pos:end="89:11">wLength</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:34"><name pos:start="89:15" pos:end="89:23">trb_setup</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:34">parameter</name></name> <operator pos:start="89:36" pos:end="89:37">&gt;&gt;</operator> <literal type="number" pos:start="89:39" pos:end="89:40">48</literal></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="101:5"><if pos:start="93:5" pos:end="101:5">if <condition pos:start="93:8" pos:end="93:51">(<expr pos:start="93:9" pos:end="93:50"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:12">xfer</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:18">data</name></name> <operator pos:start="93:20" pos:end="93:21">&amp;&amp;</operator> <name pos:start="93:23" pos:end="93:40"><name pos:start="93:23" pos:end="93:26">xfer</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:40">data_alloced</name></name> <operator pos:start="93:42" pos:end="93:42">&lt;</operator> <name pos:start="93:44" pos:end="93:50">wLength</name></expr>)</condition> <block pos:start="93:53" pos:end="101:5">{<block_content pos:start="95:9" pos:end="99:26">

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:12">xfer</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:26">data_alloced</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <literal type="number" pos:start="95:30" pos:end="95:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:27"><expr pos:start="97:9" pos:end="97:26"><call pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:14">g_free</name><argument_list pos:start="97:15" pos:end="97:26">(<argument pos:start="97:16" pos:end="97:25"><expr pos:start="97:16" pos:end="97:25"><name pos:start="97:16" pos:end="97:25"><name pos:start="97:16" pos:end="97:19">xfer</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:25">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:18"><name pos:start="99:9" pos:end="99:12">xfer</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:18">data</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <name pos:start="99:22" pos:end="99:25">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="103:20">(<expr pos:start="103:9" pos:end="103:19"><operator pos:start="103:9" pos:end="103:9">!</operator><name pos:start="103:10" pos:end="103:19"><name pos:start="103:10" pos:end="103:13">xfer</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:19">data</name></name></expr>)</condition> <block pos:start="103:22" pos:end="111:5">{<block_content pos:start="105:9" pos:end="109:37">

        <expr_stmt pos:start="105:9" pos:end="105:56"><expr pos:start="105:9" pos:end="105:55"><call pos:start="105:9" pos:end="105:55"><name pos:start="105:9" pos:end="105:15">DPRINTF</name><argument_list pos:start="105:16" pos:end="105:55">(<argument pos:start="105:17" pos:end="105:45"><expr pos:start="105:17" pos:end="105:45"><literal type="string" pos:start="105:17" pos:end="105:45">"xhci: alloc %d bytes data\n"</literal></expr></argument>, <argument pos:start="105:48" pos:end="105:54"><expr pos:start="105:48" pos:end="105:54"><name pos:start="105:48" pos:end="105:54">wLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:41"><expr pos:start="107:9" pos:end="107:40"><name pos:start="107:9" pos:end="107:18"><name pos:start="107:9" pos:end="107:12">xfer</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:18">data</name></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <call pos:start="107:22" pos:end="107:40"><name pos:start="107:22" pos:end="107:29">g_malloc</name><argument_list pos:start="107:30" pos:end="107:40">(<argument pos:start="107:31" pos:end="107:39"><expr pos:start="107:31" pos:end="107:39"><name pos:start="107:31" pos:end="107:37">wLength</name><operator pos:start="107:38" pos:end="107:38">+</operator><literal type="number" pos:start="107:39" pos:end="107:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:37"><expr pos:start="109:9" pos:end="109:36"><name pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:12">xfer</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:26">data_alloced</name></name> <operator pos:start="109:28" pos:end="109:28">=</operator> <name pos:start="109:30" pos:end="109:36">wLength</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:32"><expr pos:start="113:5" pos:end="113:31"><name pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:8">xfer</name><operator pos:start="113:9" pos:end="113:10">-&gt;</operator><name pos:start="113:11" pos:end="113:21">data_length</name></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:31">wLength</name></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:60"><expr pos:start="117:5" pos:end="117:59"><name pos:start="117:5" pos:end="117:8">port</name> <operator pos:start="117:10" pos:end="117:10">=</operator> <operator pos:start="117:12" pos:end="117:12">&amp;</operator><name pos:start="117:13" pos:end="117:59"><name pos:start="117:13" pos:end="117:16">xhci</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:23">ports</name><index pos:start="117:24" pos:end="117:59">[<expr pos:start="117:25" pos:end="117:58"><name pos:start="117:25" pos:end="117:51"><name pos:start="117:25" pos:end="117:28">xhci</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:35">slots</name><index pos:start="117:36" pos:end="117:51">[<expr pos:start="117:37" pos:end="117:50"><name pos:start="117:37" pos:end="117:48"><name pos:start="117:37" pos:end="117:40">xfer</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:48">slotid</name></name><operator pos:start="117:49" pos:end="117:49">-</operator><literal type="number" pos:start="117:50" pos:end="117:50">1</literal></expr>]</index></name><operator pos:start="117:52" pos:end="117:52">.</operator><name pos:start="117:53" pos:end="117:56">port</name><operator pos:start="117:57" pos:end="117:57">-</operator><literal type="number" pos:start="117:58" pos:end="117:58">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:70"><expr pos:start="119:5" pos:end="119:69"><name pos:start="119:5" pos:end="119:7">dev</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <call pos:start="119:11" pos:end="119:69"><name pos:start="119:11" pos:end="119:26">xhci_find_device</name><argument_list pos:start="119:27" pos:end="119:69">(<argument pos:start="119:28" pos:end="119:31"><expr pos:start="119:28" pos:end="119:31"><name pos:start="119:28" pos:end="119:31">port</name></expr></argument>, <argument pos:start="119:34" pos:end="119:68"><expr pos:start="119:34" pos:end="119:68"><name pos:start="119:34" pos:end="119:60"><name pos:start="119:34" pos:end="119:37">xhci</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:44">slots</name><index pos:start="119:45" pos:end="119:60">[<expr pos:start="119:46" pos:end="119:59"><name pos:start="119:46" pos:end="119:57"><name pos:start="119:46" pos:end="119:49">xfer</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:57">slotid</name></name><operator pos:start="119:58" pos:end="119:58">-</operator><literal type="number" pos:start="119:59" pos:end="119:59">1</literal></expr>]</index></name><operator pos:start="119:61" pos:end="119:61">.</operator><name pos:start="119:62" pos:end="119:68">devaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="129:5"><if pos:start="121:5" pos:end="129:5">if <condition pos:start="121:8" pos:end="121:13">(<expr pos:start="121:9" pos:end="121:12"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:12">dev</name></expr>)</condition> <block pos:start="121:15" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:18">

        <expr_stmt pos:start="123:9" pos:end="125:50"><expr pos:start="123:9" pos:end="125:49"><call pos:start="123:9" pos:end="125:49"><name pos:start="123:9" pos:end="123:15">fprintf</name><argument_list pos:start="123:16" pos:end="125:49">(<argument pos:start="123:17" pos:end="123:22"><expr pos:start="123:17" pos:end="123:22"><name pos:start="123:17" pos:end="123:22">stderr</name></expr></argument>, <argument pos:start="123:25" pos:end="123:63"><expr pos:start="123:25" pos:end="123:63"><literal type="string" pos:start="123:25" pos:end="123:63">"xhci: slot %d port %d has no device\n"</literal></expr></argument>, <argument pos:start="123:66" pos:end="123:77"><expr pos:start="123:66" pos:end="123:77"><name pos:start="123:66" pos:end="123:77"><name pos:start="123:66" pos:end="123:69">xfer</name><operator pos:start="123:70" pos:end="123:71">-&gt;</operator><name pos:start="123:72" pos:end="123:77">slotid</name></name></expr></argument>,

                <argument pos:start="125:17" pos:end="125:48"><expr pos:start="125:17" pos:end="125:48"><name pos:start="125:17" pos:end="125:43"><name pos:start="125:17" pos:end="125:20">xhci</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:27">slots</name><index pos:start="125:28" pos:end="125:43">[<expr pos:start="125:29" pos:end="125:42"><name pos:start="125:29" pos:end="125:40"><name pos:start="125:29" pos:end="125:32">xfer</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:40">slotid</name></name><operator pos:start="125:41" pos:end="125:41">-</operator><literal type="number" pos:start="125:42" pos:end="125:42">1</literal></expr>]</index></name><operator pos:start="125:44" pos:end="125:44">.</operator><name pos:start="125:45" pos:end="125:48">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="127:9" pos:end="127:18">return <expr pos:start="127:16" pos:end="127:17"><operator pos:start="127:16" pos:end="127:16">-</operator><literal type="number" pos:start="127:17" pos:end="127:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:47"><expr pos:start="133:5" pos:end="133:46"><name pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:8">xfer</name><operator pos:start="133:9" pos:end="133:10">-&gt;</operator><name pos:start="133:11" pos:end="133:17">in_xfer</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <name pos:start="133:21" pos:end="133:33">bmRequestType</name> <operator pos:start="133:35" pos:end="133:35">&amp;</operator> <name pos:start="133:37" pos:end="133:46">USB_DIR_IN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:27"><expr pos:start="135:5" pos:end="135:26"><name pos:start="135:5" pos:end="135:18"><name pos:start="135:5" pos:end="135:8">xfer</name><operator pos:start="135:9" pos:end="135:10">-&gt;</operator><name pos:start="135:11" pos:end="135:18">iso_xfer</name></name> <operator pos:start="135:20" pos:end="135:20">=</operator> <name pos:start="135:22" pos:end="135:26">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:33"><expr pos:start="139:5" pos:end="139:32"><call pos:start="139:5" pos:end="139:32"><name pos:start="139:5" pos:end="139:21">xhci_setup_packet</name><argument_list pos:start="139:22" pos:end="139:32">(<argument pos:start="139:23" pos:end="139:26"><expr pos:start="139:23" pos:end="139:26"><name pos:start="139:23" pos:end="139:26">xfer</name></expr></argument>, <argument pos:start="139:29" pos:end="139:31"><expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="145:5"><if pos:start="141:5" pos:end="145:5">if <condition pos:start="141:8" pos:end="141:23">(<expr pos:start="141:9" pos:end="141:22"><operator pos:start="141:9" pos:end="141:9">!</operator><name pos:start="141:10" pos:end="141:22"><name pos:start="141:10" pos:end="141:13">xfer</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:22">in_xfer</name></name></expr>)</condition> <block pos:start="141:25" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:59">

        <expr_stmt pos:start="143:9" pos:end="143:59"><expr pos:start="143:9" pos:end="143:58"><call pos:start="143:9" pos:end="143:58"><name pos:start="143:9" pos:end="143:22">xhci_xfer_data</name><argument_list pos:start="143:23" pos:end="143:58">(<argument pos:start="143:24" pos:end="143:27"><expr pos:start="143:24" pos:end="143:27"><name pos:start="143:24" pos:end="143:27">xfer</name></expr></argument>, <argument pos:start="143:30" pos:end="143:39"><expr pos:start="143:30" pos:end="143:39"><name pos:start="143:30" pos:end="143:39"><name pos:start="143:30" pos:end="143:33">xfer</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:39">data</name></name></expr></argument>, <argument pos:start="143:42" pos:end="143:48"><expr pos:start="143:42" pos:end="143:48"><name pos:start="143:42" pos:end="143:48">wLength</name></expr></argument>, <argument pos:start="143:51" pos:end="143:51"><expr pos:start="143:51" pos:end="143:51"><literal type="number" pos:start="143:51" pos:end="143:51">0</literal></expr></argument>, <argument pos:start="143:54" pos:end="143:54"><expr pos:start="143:54" pos:end="143:54"><literal type="number" pos:start="143:54" pos:end="143:54">1</literal></expr></argument>, <argument pos:start="143:57" pos:end="143:57"><expr pos:start="143:57" pos:end="143:57"><literal type="number" pos:start="143:57" pos:end="143:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="151:73"><expr pos:start="147:5" pos:end="151:72"><name pos:start="147:5" pos:end="147:7">ret</name> <operator pos:start="147:9" pos:end="147:9">=</operator> <call pos:start="147:11" pos:end="151:72"><name pos:start="147:11" pos:end="147:35">usb_device_handle_control</name><argument_list pos:start="147:36" pos:end="151:72">(<argument pos:start="147:37" pos:end="147:39"><expr pos:start="147:37" pos:end="147:39"><name pos:start="147:37" pos:end="147:39">dev</name></expr></argument>, <argument pos:start="147:42" pos:end="147:54"><expr pos:start="147:42" pos:end="147:54"><operator pos:start="147:42" pos:end="147:42">&amp;</operator><name pos:start="147:43" pos:end="147:54"><name pos:start="147:43" pos:end="147:46">xfer</name><operator pos:start="147:47" pos:end="147:48">-&gt;</operator><name pos:start="147:49" pos:end="147:54">packet</name></name></expr></argument>,

                                    <argument pos:start="149:37" pos:end="149:67"><expr pos:start="149:37" pos:end="149:67"><operator pos:start="149:37" pos:end="149:37">(</operator><name pos:start="149:38" pos:end="149:50">bmRequestType</name> <operator pos:start="149:52" pos:end="149:53">&lt;&lt;</operator> <literal type="number" pos:start="149:55" pos:end="149:55">8</literal><operator pos:start="149:56" pos:end="149:56">)</operator> <operator pos:start="149:58" pos:end="149:58">|</operator> <name pos:start="149:60" pos:end="149:67">bRequest</name></expr></argument>,

                                    <argument pos:start="151:37" pos:end="151:42"><expr pos:start="151:37" pos:end="151:42"><name pos:start="151:37" pos:end="151:42">wValue</name></expr></argument>, <argument pos:start="151:45" pos:end="151:50"><expr pos:start="151:45" pos:end="151:50"><name pos:start="151:45" pos:end="151:50">wIndex</name></expr></argument>, <argument pos:start="151:53" pos:end="151:59"><expr pos:start="151:53" pos:end="151:59"><name pos:start="151:53" pos:end="151:59">wLength</name></expr></argument>, <argument pos:start="151:62" pos:end="151:71"><expr pos:start="151:62" pos:end="151:71"><name pos:start="151:62" pos:end="151:71"><name pos:start="151:62" pos:end="151:65">xfer</name><operator pos:start="151:66" pos:end="151:67">-&gt;</operator><name pos:start="151:68" pos:end="151:71">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:36"><expr pos:start="155:5" pos:end="155:35"><call pos:start="155:5" pos:end="155:35"><name pos:start="155:5" pos:end="155:24">xhci_complete_packet</name><argument_list pos:start="155:25" pos:end="155:35">(<argument pos:start="155:26" pos:end="155:29"><expr pos:start="155:26" pos:end="155:29"><name pos:start="155:26" pos:end="155:29">xfer</name></expr></argument>, <argument pos:start="155:32" pos:end="155:34"><expr pos:start="155:32" pos:end="155:34"><name pos:start="155:32" pos:end="155:34">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="161:5"><if pos:start="157:5" pos:end="161:5">if <condition pos:start="157:8" pos:end="157:53">(<expr pos:start="157:9" pos:end="157:52"><operator pos:start="157:9" pos:end="157:9">!</operator><name pos:start="157:10" pos:end="157:28"><name pos:start="157:10" pos:end="157:13">xfer</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:28">running_async</name></name> <operator pos:start="157:30" pos:end="157:31">&amp;&amp;</operator> <operator pos:start="157:33" pos:end="157:33">!</operator><name pos:start="157:34" pos:end="157:52"><name pos:start="157:34" pos:end="157:37">xfer</name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:52">running_retry</name></name></expr>)</condition> <block pos:start="157:55" pos:end="161:5">{<block_content pos:start="159:9" pos:end="159:53">

        <expr_stmt pos:start="159:9" pos:end="159:53"><expr pos:start="159:9" pos:end="159:52"><call pos:start="159:9" pos:end="159:52"><name pos:start="159:9" pos:end="159:20">xhci_kick_ep</name><argument_list pos:start="159:21" pos:end="159:52">(<argument pos:start="159:22" pos:end="159:25"><expr pos:start="159:22" pos:end="159:25"><name pos:start="159:22" pos:end="159:25">xhci</name></expr></argument>, <argument pos:start="159:28" pos:end="159:39"><expr pos:start="159:28" pos:end="159:39"><name pos:start="159:28" pos:end="159:39"><name pos:start="159:28" pos:end="159:31">xfer</name><operator pos:start="159:32" pos:end="159:33">-&gt;</operator><name pos:start="159:34" pos:end="159:39">slotid</name></name></expr></argument>, <argument pos:start="159:42" pos:end="159:51"><expr pos:start="159:42" pos:end="159:51"><name pos:start="159:42" pos:end="159:51"><name pos:start="159:42" pos:end="159:45">xfer</name><operator pos:start="159:46" pos:end="159:47">-&gt;</operator><name pos:start="159:48" pos:end="159:51">epid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="163:5" pos:end="163:13">return <expr pos:start="163:12" pos:end="163:12"><literal type="number" pos:start="163:12" pos:end="163:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
