<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12816.c" pos:tabs="8"><function pos:start="1:1" pos:end="60:36"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">rtmp_write</name><parameter_list pos:start="1:22" pos:end="1:66">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">URLContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">buf</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:65"><decl pos:start="1:58" pos:end="1:65"><type pos:start="1:58" pos:end="1:65"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:65">size</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="60:36">{<block_content pos:start="3:5" pos:end="60:36">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">RTMPContext</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:19">rt</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:24"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:17">size_temp</name> <init pos:start="4:19" pos:end="4:24">= <expr pos:start="4:21" pos:end="4:24"><name pos:start="4:21" pos:end="4:24">size</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">pktsize</name></decl>, <decl pos:start="5:18" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:24">pkttype</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:12">uint32_t</name></type> <name pos:start="6:14" pos:end="6:15">ts</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:27">buf_temp</name> <init pos:start="7:29" pos:end="7:33">= <expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">buf</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:14"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:11">uint8_t</name></type> <name pos:start="8:13" pos:end="8:13">c</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>
    <do pos:start="10:5" pos:end="60:36">do <block pos:start="10:8" pos:end="60:36">{<block_content pos:start="11:9" pos:end="60:36">
        <if_stmt pos:start="11:9" pos:end="60:36"><if pos:start="11:9" pos:end="60:36">if <condition pos:start="11:12" pos:end="11:27">(<expr pos:start="11:13" pos:end="11:26"><name pos:start="11:13" pos:end="11:26"><name pos:start="11:13" pos:end="11:14">rt</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:26">skip_bytes</name></name></expr>)</condition> <block pos:start="11:29" pos:end="60:36">{<block_content pos:start="12:13" pos:end="60:36">
            <decl_stmt pos:start="12:13" pos:end="12:56"><decl pos:start="12:13" pos:end="12:55"><type pos:start="12:13" pos:end="12:15"><name pos:start="12:13" pos:end="12:15">int</name></type> <name pos:start="12:17" pos:end="12:20">skip</name> <init pos:start="12:22" pos:end="12:55">= <expr pos:start="12:24" pos:end="12:55"><call pos:start="12:24" pos:end="12:55"><name pos:start="12:24" pos:end="12:28">FFMIN</name><argument_list pos:start="12:29" pos:end="12:55">(<argument pos:start="12:30" pos:end="12:43"><expr pos:start="12:30" pos:end="12:43"><name pos:start="12:30" pos:end="12:43"><name pos:start="12:30" pos:end="12:31">rt</name><operator pos:start="12:32" pos:end="12:33">-&gt;</operator><name pos:start="12:34" pos:end="12:43">skip_bytes</name></name></expr></argument>, <argument pos:start="12:46" pos:end="12:54"><expr pos:start="12:46" pos:end="12:54"><name pos:start="12:46" pos:end="12:54">size_temp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:35"><expr pos:start="13:13" pos:end="13:34"><name pos:start="13:13" pos:end="13:20">buf_temp</name>       <operator pos:start="13:28" pos:end="13:29">+=</operator> <name pos:start="13:31" pos:end="13:34">skip</name></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:35"><expr pos:start="14:13" pos:end="14:34"><name pos:start="14:13" pos:end="14:21">size_temp</name>      <operator pos:start="14:28" pos:end="14:29">-=</operator> <name pos:start="14:31" pos:end="14:34">skip</name></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:35"><expr pos:start="15:13" pos:end="15:34"><name pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:14">rt</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:26">skip_bytes</name></name> <operator pos:start="15:28" pos:end="15:29">-=</operator> <name pos:start="15:31" pos:end="15:34">skip</name></expr>;</expr_stmt>
            <continue pos:start="16:13" pos:end="16:21">continue;</continue>
        <if_stmt pos:start="17:9" pos:end="60:36"><if pos:start="17:9" pos:end="60:36">if <condition pos:start="17:12" pos:end="17:38">(<expr pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:32"><name pos:start="17:13" pos:end="17:14">rt</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:32">flv_header_bytes</name></name> <operator pos:start="17:34" pos:end="17:34">&lt;</operator> <literal type="number" pos:start="17:36" pos:end="17:37">11</literal></expr>)</condition> <block pos:start="17:40" pos:end="60:36">{<block_content pos:start="18:13" pos:end="60:36">
            <decl_stmt pos:start="18:13" pos:end="18:51"><decl pos:start="18:13" pos:end="18:50"><type pos:start="18:13" pos:end="18:27"><specifier pos:start="18:13" pos:end="18:17">const</specifier> <name pos:start="18:19" pos:end="18:25">uint8_t</name> <modifier pos:start="18:27" pos:end="18:27">*</modifier></type><name pos:start="18:28" pos:end="18:33">header</name> <init pos:start="18:35" pos:end="18:50">= <expr pos:start="18:37" pos:end="18:50"><name pos:start="18:37" pos:end="18:50"><name pos:start="18:37" pos:end="18:38">rt</name><operator pos:start="18:39" pos:end="18:40">-&gt;</operator><name pos:start="18:41" pos:end="18:50">flv_header</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="19:13" pos:end="19:67"><decl pos:start="19:13" pos:end="19:66"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:20">copy</name> <init pos:start="19:22" pos:end="19:66">= <expr pos:start="19:24" pos:end="19:66"><call pos:start="19:24" pos:end="19:66"><name pos:start="19:24" pos:end="19:28">FFMIN</name><argument_list pos:start="19:29" pos:end="19:66">(<argument pos:start="19:30" pos:end="19:54"><expr pos:start="19:30" pos:end="19:54"><literal type="number" pos:start="19:30" pos:end="19:33">11</literal> <operator pos:start="19:33" pos:end="19:33">-</operator> <name pos:start="19:35" pos:end="19:54"><name pos:start="19:35" pos:end="19:36">rt</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:54">flv_header_bytes</name></name></expr></argument>, <argument pos:start="19:57" pos:end="19:65"><expr pos:start="19:57" pos:end="19:65"><name pos:start="19:57" pos:end="19:65">size_temp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:90"><expr pos:start="20:13" pos:end="20:89"><call pos:start="20:13" pos:end="20:89"><name pos:start="20:13" pos:end="20:33">bytestream_get_buffer</name><argument_list pos:start="20:34" pos:end="20:89">(<argument pos:start="20:35" pos:end="20:43"><expr pos:start="20:35" pos:end="20:43"><operator pos:start="20:35" pos:end="20:35">&amp;</operator><name pos:start="20:36" pos:end="20:43">buf_temp</name></expr></argument>, <argument pos:start="20:46" pos:end="20:82"><expr pos:start="20:46" pos:end="20:82"><name pos:start="20:46" pos:end="20:59"><name pos:start="20:46" pos:end="20:47">rt</name><operator pos:start="20:48" pos:end="20:49">-&gt;</operator><name pos:start="20:50" pos:end="20:59">flv_header</name></name> <operator pos:start="20:61" pos:end="20:61">+</operator> <name pos:start="20:63" pos:end="20:82"><name pos:start="20:63" pos:end="20:64">rt</name><operator pos:start="20:65" pos:end="20:66">-&gt;</operator><name pos:start="20:67" pos:end="20:82">flv_header_bytes</name></name></expr></argument>, <argument pos:start="20:85" pos:end="20:88"><expr pos:start="20:85" pos:end="20:88"><name pos:start="20:85" pos:end="20:88">copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:32"><name pos:start="21:13" pos:end="21:14">rt</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:32">flv_header_bytes</name></name> <operator pos:start="21:34" pos:end="21:35">+=</operator> <name pos:start="21:37" pos:end="21:40">copy</name></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:41"><expr pos:start="22:13" pos:end="22:40"><name pos:start="22:13" pos:end="22:21">size_temp</name>            <operator pos:start="22:34" pos:end="22:35">-=</operator> <name pos:start="22:37" pos:end="22:40">copy</name></expr>;</expr_stmt>
            <if_stmt pos:start="23:13" pos:end="24:22"><if pos:start="23:13" pos:end="24:22">if <condition pos:start="23:16" pos:end="23:42">(<expr pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:36"><name pos:start="23:17" pos:end="23:18">rt</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:36">flv_header_bytes</name></name> <operator pos:start="23:38" pos:end="23:38">&lt;</operator> <literal type="number" pos:start="23:40" pos:end="23:41">11</literal></expr>)</condition><block type="pseudo" pos:start="24:17" pos:end="24:22"><block_content pos:start="24:17" pos:end="24:22">
                <break pos:start="24:17" pos:end="24:22">break;</break></block_content></block></if></if_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:51"><expr pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:19">pkttype</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:50"><name pos:start="25:23" pos:end="25:41">bytestream_get_byte</name><argument_list pos:start="25:42" pos:end="25:50">(<argument pos:start="25:43" pos:end="25:49"><expr pos:start="25:43" pos:end="25:49"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:49">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:51"><expr pos:start="26:13" pos:end="26:50"><name pos:start="26:13" pos:end="26:19">pktsize</name> <operator pos:start="26:21" pos:end="26:21">=</operator> <call pos:start="26:23" pos:end="26:50"><name pos:start="26:23" pos:end="26:41">bytestream_get_be24</name><argument_list pos:start="26:42" pos:end="26:50">(<argument pos:start="26:43" pos:end="26:49"><expr pos:start="26:43" pos:end="26:49"><operator pos:start="26:43" pos:end="26:43">&amp;</operator><name pos:start="26:44" pos:end="26:49">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:46"><expr pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:14">ts</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:45"><name pos:start="27:18" pos:end="27:36">bytestream_get_be24</name><argument_list pos:start="27:37" pos:end="27:45">(<argument pos:start="27:38" pos:end="27:44"><expr pos:start="27:38" pos:end="27:44"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:44">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:53"><expr pos:start="28:13" pos:end="28:52"><name pos:start="28:13" pos:end="28:14">ts</name> <operator pos:start="28:16" pos:end="28:17">|=</operator> <call pos:start="28:19" pos:end="28:46"><name pos:start="28:19" pos:end="28:37">bytestream_get_byte</name><argument_list pos:start="28:38" pos:end="28:46">(<argument pos:start="28:39" pos:end="28:45"><expr pos:start="28:39" pos:end="28:45"><operator pos:start="28:39" pos:end="28:39">&amp;</operator><name pos:start="28:40" pos:end="28:45">header</name></expr></argument>)</argument_list></call> <operator pos:start="28:48" pos:end="28:49">&lt;&lt;</operator> <literal type="number" pos:start="28:51" pos:end="28:52">24</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><call pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:31">bytestream_get_be24</name><argument_list pos:start="29:32" pos:end="29:40">(<argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:39">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:35"><expr pos:start="30:13" pos:end="30:34"><name pos:start="30:13" pos:end="30:24"><name pos:start="30:13" pos:end="30:14">rt</name><operator pos:start="30:15" pos:end="30:16">-&gt;</operator><name pos:start="30:17" pos:end="30:24">flv_size</name></name> <operator pos:start="30:26" pos:end="30:26">=</operator> <name pos:start="30:28" pos:end="30:34">pktsize</name></expr>;</expr_stmt>
            <comment type="line" pos:start="31:13" pos:end="31:34">//force 12bytes header</comment>
            <if_stmt pos:start="32:13" pos:end="60:36"><if pos:start="32:13" pos:end="60:36">if <condition pos:start="32:16" pos:end="33:42">(<expr pos:start="32:17" pos:end="33:41"><operator pos:start="32:17" pos:end="32:17">(</operator><operator pos:start="32:18" pos:end="32:18">(</operator><name pos:start="32:19" pos:end="32:25">pkttype</name> <operator pos:start="32:27" pos:end="32:28">==</operator> <name pos:start="32:30" pos:end="32:42">RTMP_PT_VIDEO</name> <operator pos:start="32:44" pos:end="32:45">||</operator> <name pos:start="32:47" pos:end="32:53">pkttype</name> <operator pos:start="32:55" pos:end="32:56">==</operator> <name pos:start="32:58" pos:end="32:70">RTMP_PT_AUDIO</name><operator pos:start="32:71" pos:end="32:71">)</operator> <operator pos:start="32:73" pos:end="32:74">&amp;&amp;</operator> <name pos:start="32:76" pos:end="32:77">ts</name> <operator pos:start="32:79" pos:end="32:80">==</operator> <literal type="number" pos:start="32:82" pos:end="32:82">0</literal><operator pos:start="32:83" pos:end="32:83">)</operator> <operator pos:start="32:85" pos:end="32:86">||</operator>
                <name pos:start="33:17" pos:end="33:23">pkttype</name> <operator pos:start="33:25" pos:end="33:26">==</operator> <name pos:start="33:28" pos:end="33:41">RTMP_PT_NOTIFY</name></expr>)</condition> <block pos:start="33:44" pos:end="60:36">{<block_content pos:start="34:17" pos:end="60:36">
                <if_stmt pos:start="34:17" pos:end="35:34"><if pos:start="34:17" pos:end="35:34">if <condition pos:start="34:20" pos:end="34:46">(<expr pos:start="34:21" pos:end="34:45"><name pos:start="34:21" pos:end="34:27">pkttype</name> <operator pos:start="34:29" pos:end="34:30">==</operator> <name pos:start="34:32" pos:end="34:45">RTMP_PT_NOTIFY</name></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:34"><block_content pos:start="35:21" pos:end="35:34">
                    <expr_stmt pos:start="35:21" pos:end="35:34"><expr pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:27">pktsize</name> <operator pos:start="35:29" pos:end="35:30">+=</operator> <literal type="number" pos:start="35:32" pos:end="35:33">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="36:17" pos:end="36:68"><expr pos:start="36:17" pos:end="36:67"><name pos:start="36:17" pos:end="36:52"><name pos:start="36:17" pos:end="36:18">rt</name><operator pos:start="36:19" pos:end="36:20">-&gt;</operator><name pos:start="36:21" pos:end="36:28">prev_pkt</name><index pos:start="36:29" pos:end="36:31">[<expr pos:start="36:30" pos:end="36:30"><literal type="number" pos:start="36:30" pos:end="36:30">1</literal></expr>]</index><index pos:start="36:32" pos:end="36:52">[<expr pos:start="36:33" pos:end="36:51"><name pos:start="36:33" pos:end="36:51">RTMP_SOURCE_CHANNEL</name></expr>]</index></name><operator pos:start="36:53" pos:end="36:53">.</operator><name pos:start="36:54" pos:end="36:63">channel_id</name> <operator pos:start="36:65" pos:end="36:65">=</operator> <literal type="number" pos:start="36:67" pos:end="36:67">0</literal></expr>;</expr_stmt>
            <comment type="line" pos:start="37:13" pos:end="37:73">//this can be a big packet, it's better to send it right here</comment>
            <if_stmt pos:start="38:13" pos:end="40:52"><if pos:start="38:13" pos:end="40:52">if <condition pos:start="38:16" pos:end="39:72">(<expr pos:start="38:17" pos:end="39:71"><operator pos:start="38:17" pos:end="38:17">(</operator><name pos:start="38:18" pos:end="38:20">ret</name> <operator pos:start="38:22" pos:end="38:22">=</operator> <call pos:start="38:24" pos:end="39:66"><name pos:start="38:24" pos:end="38:44">ff_rtmp_packet_create</name><argument_list pos:start="38:45" pos:end="39:66">(<argument pos:start="38:46" pos:end="38:57"><expr pos:start="38:46" pos:end="38:57"><operator pos:start="38:46" pos:end="38:46">&amp;</operator><name pos:start="38:47" pos:end="38:57"><name pos:start="38:47" pos:end="38:48">rt</name><operator pos:start="38:49" pos:end="38:50">-&gt;</operator><name pos:start="38:51" pos:end="38:57">out_pkt</name></name></expr></argument>, <argument pos:start="38:60" pos:end="38:78"><expr pos:start="38:60" pos:end="38:78"><name pos:start="38:60" pos:end="38:78">RTMP_SOURCE_CHANNEL</name></expr></argument>,
                                             <argument pos:start="39:46" pos:end="39:52"><expr pos:start="39:46" pos:end="39:52"><name pos:start="39:46" pos:end="39:52">pkttype</name></expr></argument>, <argument pos:start="39:55" pos:end="39:56"><expr pos:start="39:55" pos:end="39:56"><name pos:start="39:55" pos:end="39:56">ts</name></expr></argument>, <argument pos:start="39:59" pos:end="39:65"><expr pos:start="39:59" pos:end="39:65"><name pos:start="39:59" pos:end="39:65">pktsize</name></expr></argument>)</argument_list></call><operator pos:start="39:67" pos:end="39:67">)</operator> <operator pos:start="39:69" pos:end="39:69">&lt;</operator> <literal type="number" pos:start="39:71" pos:end="39:71">0</literal></expr>)</condition><block type="pseudo" pos:start="40:13" pos:end="40:52"><block_content pos:start="40:13" pos:end="40:52">
            <expr_stmt pos:start="40:13" pos:end="40:52"><expr pos:start="40:13" pos:end="40:51"><name pos:start="40:13" pos:end="40:29"><name pos:start="40:13" pos:end="40:14">rt</name><operator pos:start="40:15" pos:end="40:16">-&gt;</operator><name pos:start="40:17" pos:end="40:23">out_pkt</name><operator pos:start="40:24" pos:end="40:24">.</operator><name pos:start="40:25" pos:end="40:29">extra</name></name> <operator pos:start="40:31" pos:end="40:31">=</operator> <name pos:start="40:33" pos:end="40:51"><name pos:start="40:33" pos:end="40:34">rt</name><operator pos:start="40:35" pos:end="40:36">-&gt;</operator><name pos:start="40:37" pos:end="40:51">main_channel_id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="41:13" pos:end="41:44"><expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:14">rt</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:24">flv_data</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:43"><name pos:start="41:28" pos:end="41:29">rt</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:38">out_pkt</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:43">data</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="42:13" pos:end="43:68"><if pos:start="42:13" pos:end="43:68">if <condition pos:start="42:16" pos:end="42:42">(<expr pos:start="42:17" pos:end="42:41"><name pos:start="42:17" pos:end="42:23">pkttype</name> <operator pos:start="42:25" pos:end="42:26">==</operator> <name pos:start="42:28" pos:end="42:41">RTMP_PT_NOTIFY</name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:68"><block_content pos:start="43:17" pos:end="43:68">
                <expr_stmt pos:start="43:17" pos:end="43:68"><expr pos:start="43:17" pos:end="43:67"><call pos:start="43:17" pos:end="43:67"><name pos:start="43:17" pos:end="43:35">ff_amf_write_string</name><argument_list pos:start="43:36" pos:end="43:67">(<argument pos:start="43:37" pos:end="43:49"><expr pos:start="43:37" pos:end="43:49"><operator pos:start="43:37" pos:end="43:37">&amp;</operator><name pos:start="43:38" pos:end="43:49"><name pos:start="43:38" pos:end="43:39">rt</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:49">flv_data</name></name></expr></argument>, <argument pos:start="43:52" pos:end="43:66"><expr pos:start="43:52" pos:end="43:66"><literal type="string" pos:start="43:52" pos:end="43:66">"@setDataFrame"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="44:9" pos:end="60:36"><if pos:start="44:9" pos:end="48:9">if <condition pos:start="44:12" pos:end="44:51">(<expr pos:start="44:13" pos:end="44:50"><name pos:start="44:13" pos:end="44:24"><name pos:start="44:13" pos:end="44:14">rt</name><operator pos:start="44:15" pos:end="44:16">-&gt;</operator><name pos:start="44:17" pos:end="44:24">flv_size</name></name> <operator pos:start="44:26" pos:end="44:26">-</operator> <name pos:start="44:28" pos:end="44:38"><name pos:start="44:28" pos:end="44:29">rt</name><operator pos:start="44:30" pos:end="44:31">-&gt;</operator><name pos:start="44:32" pos:end="44:38">flv_off</name></name> <operator pos:start="44:40" pos:end="44:40">&gt;</operator> <name pos:start="44:42" pos:end="44:50">size_temp</name></expr>)</condition> <block pos:start="44:53" pos:end="48:9">{<block_content pos:start="45:13" pos:end="47:26">
            <expr_stmt pos:start="45:13" pos:end="45:84"><expr pos:start="45:13" pos:end="45:83"><call pos:start="45:13" pos:end="45:83"><name pos:start="45:13" pos:end="45:33">bytestream_get_buffer</name><argument_list pos:start="45:34" pos:end="45:83">(<argument pos:start="45:35" pos:end="45:43"><expr pos:start="45:35" pos:end="45:43"><operator pos:start="45:35" pos:end="45:35">&amp;</operator><name pos:start="45:36" pos:end="45:43">buf_temp</name></expr></argument>, <argument pos:start="45:46" pos:end="45:71"><expr pos:start="45:46" pos:end="45:71"><name pos:start="45:46" pos:end="45:57"><name pos:start="45:46" pos:end="45:47">rt</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:57">flv_data</name></name> <operator pos:start="45:59" pos:end="45:59">+</operator> <name pos:start="45:61" pos:end="45:71"><name pos:start="45:61" pos:end="45:62">rt</name><operator pos:start="45:63" pos:end="45:64">-&gt;</operator><name pos:start="45:65" pos:end="45:71">flv_off</name></name></expr></argument>, <argument pos:start="45:74" pos:end="45:82"><expr pos:start="45:74" pos:end="45:82"><name pos:start="45:74" pos:end="45:82">size_temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:37"><expr pos:start="46:13" pos:end="46:36"><name pos:start="46:13" pos:end="46:23"><name pos:start="46:13" pos:end="46:14">rt</name><operator pos:start="46:15" pos:end="46:16">-&gt;</operator><name pos:start="46:17" pos:end="46:23">flv_off</name></name> <operator pos:start="46:25" pos:end="46:26">+=</operator> <name pos:start="46:28" pos:end="46:36">size_temp</name></expr>;</expr_stmt>
            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:21">size_temp</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:25">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="48:11" pos:end="60:36">else <block pos:start="48:16" pos:end="60:36">{<block_content pos:start="49:13" pos:end="60:36">
            <expr_stmt pos:start="49:13" pos:end="49:101"><expr pos:start="49:13" pos:end="49:100"><call pos:start="49:13" pos:end="49:100"><name pos:start="49:13" pos:end="49:33">bytestream_get_buffer</name><argument_list pos:start="49:34" pos:end="49:100">(<argument pos:start="49:35" pos:end="49:43"><expr pos:start="49:35" pos:end="49:43"><operator pos:start="49:35" pos:end="49:35">&amp;</operator><name pos:start="49:36" pos:end="49:43">buf_temp</name></expr></argument>, <argument pos:start="49:46" pos:end="49:71"><expr pos:start="49:46" pos:end="49:71"><name pos:start="49:46" pos:end="49:57"><name pos:start="49:46" pos:end="49:47">rt</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:57">flv_data</name></name> <operator pos:start="49:59" pos:end="49:59">+</operator> <name pos:start="49:61" pos:end="49:71"><name pos:start="49:61" pos:end="49:62">rt</name><operator pos:start="49:63" pos:end="49:64">-&gt;</operator><name pos:start="49:65" pos:end="49:71">flv_off</name></name></expr></argument>, <argument pos:start="49:74" pos:end="49:99"><expr pos:start="49:74" pos:end="49:99"><name pos:start="49:74" pos:end="49:85"><name pos:start="49:74" pos:end="49:75">rt</name><operator pos:start="49:76" pos:end="49:77">-&gt;</operator><name pos:start="49:78" pos:end="49:85">flv_size</name></name> <operator pos:start="49:87" pos:end="49:87">-</operator> <name pos:start="49:89" pos:end="49:99"><name pos:start="49:89" pos:end="49:90">rt</name><operator pos:start="49:91" pos:end="49:92">-&gt;</operator><name pos:start="49:93" pos:end="49:99">flv_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="50:13" pos:end="50:54"><expr pos:start="50:13" pos:end="50:53"><name pos:start="50:13" pos:end="50:21">size_temp</name>   <operator pos:start="50:25" pos:end="50:26">-=</operator> <name pos:start="50:28" pos:end="50:39"><name pos:start="50:28" pos:end="50:29">rt</name><operator pos:start="50:30" pos:end="50:31">-&gt;</operator><name pos:start="50:32" pos:end="50:39">flv_size</name></name> <operator pos:start="50:41" pos:end="50:41">-</operator> <name pos:start="50:43" pos:end="50:53"><name pos:start="50:43" pos:end="50:44">rt</name><operator pos:start="50:45" pos:end="50:46">-&gt;</operator><name pos:start="50:47" pos:end="50:53">flv_off</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="51:13" pos:end="51:54"><expr pos:start="51:13" pos:end="51:53"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:14">rt</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:23">flv_off</name></name> <operator pos:start="51:25" pos:end="51:26">+=</operator> <name pos:start="51:28" pos:end="51:39"><name pos:start="51:28" pos:end="51:29">rt</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:39">flv_size</name></name> <operator pos:start="51:41" pos:end="51:41">-</operator> <name pos:start="51:43" pos:end="51:53"><name pos:start="51:43" pos:end="51:44">rt</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:53">flv_off</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="52:9" pos:end="60:5"><if pos:start="52:9" pos:end="60:5">if <condition pos:start="52:12" pos:end="52:40">(<expr pos:start="52:13" pos:end="52:39"><name pos:start="52:13" pos:end="52:23"><name pos:start="52:13" pos:end="52:14">rt</name><operator pos:start="52:15" pos:end="52:16">-&gt;</operator><name pos:start="52:17" pos:end="52:23">flv_off</name></name> <operator pos:start="52:25" pos:end="52:26">==</operator> <name pos:start="52:28" pos:end="52:39"><name pos:start="52:28" pos:end="52:29">rt</name><operator pos:start="52:30" pos:end="52:31">-&gt;</operator><name pos:start="52:32" pos:end="52:39">flv_size</name></name></expr>)</condition> <block pos:start="52:42" pos:end="60:5">{<block_content pos:start="53:13" pos:end="59:37">
            <expr_stmt pos:start="53:13" pos:end="53:31"><expr pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:14">rt</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:26">skip_bytes</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <literal type="number" pos:start="53:30" pos:end="53:30">4</literal></expr>;</expr_stmt>
            <if_stmt pos:start="54:13" pos:end="56:49"><if pos:start="54:13" pos:end="56:49">if <condition pos:start="54:16" pos:end="55:82">(<expr pos:start="54:17" pos:end="55:81"><operator pos:start="54:17" pos:end="54:17">(</operator><name pos:start="54:18" pos:end="54:20">ret</name> <operator pos:start="54:22" pos:end="54:22">=</operator> <call pos:start="54:24" pos:end="55:76"><name pos:start="54:24" pos:end="54:43">ff_rtmp_packet_write</name><argument_list pos:start="54:44" pos:end="55:76">(<argument pos:start="54:45" pos:end="54:54"><expr pos:start="54:45" pos:end="54:54"><name pos:start="54:45" pos:end="54:54"><name pos:start="54:45" pos:end="54:46">rt</name><operator pos:start="54:47" pos:end="54:48">-&gt;</operator><name pos:start="54:49" pos:end="54:54">stream</name></name></expr></argument>, <argument pos:start="54:57" pos:end="54:68"><expr pos:start="54:57" pos:end="54:68"><operator pos:start="54:57" pos:end="54:57">&amp;</operator><name pos:start="54:58" pos:end="54:68"><name pos:start="54:58" pos:end="54:59">rt</name><operator pos:start="54:60" pos:end="54:61">-&gt;</operator><name pos:start="54:62" pos:end="54:68">out_pkt</name></name></expr></argument>,
                                            <argument pos:start="55:45" pos:end="55:58"><expr pos:start="55:45" pos:end="55:58"><name pos:start="55:45" pos:end="55:58"><name pos:start="55:45" pos:end="55:46">rt</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:58">chunk_size</name></name></expr></argument>, <argument pos:start="55:61" pos:end="55:75"><expr pos:start="55:61" pos:end="55:75"><name pos:start="55:61" pos:end="55:75"><name pos:start="55:61" pos:end="55:62">rt</name><operator pos:start="55:63" pos:end="55:64">-&gt;</operator><name pos:start="55:65" pos:end="55:72">prev_pkt</name><index pos:start="55:73" pos:end="55:75">[<expr pos:start="55:74" pos:end="55:74"><literal type="number" pos:start="55:74" pos:end="55:74">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="55:77" pos:end="55:77">)</operator> <operator pos:start="55:79" pos:end="55:79">&lt;</operator> <literal type="number" pos:start="55:81" pos:end="55:81">0</literal></expr>)</condition><block type="pseudo" pos:start="56:13" pos:end="56:49"><block_content pos:start="56:13" pos:end="56:49">
            <expr_stmt pos:start="56:13" pos:end="56:49"><expr pos:start="56:13" pos:end="56:48"><call pos:start="56:13" pos:end="56:48"><name pos:start="56:13" pos:end="56:34">ff_rtmp_packet_destroy</name><argument_list pos:start="56:35" pos:end="56:48">(<argument pos:start="56:36" pos:end="56:47"><expr pos:start="56:36" pos:end="56:47"><operator pos:start="56:36" pos:end="56:36">&amp;</operator><name pos:start="56:37" pos:end="56:47"><name pos:start="56:37" pos:end="56:38">rt</name><operator pos:start="56:39" pos:end="56:40">-&gt;</operator><name pos:start="56:41" pos:end="56:47">out_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:14">rt</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:24">flv_size</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <literal type="number" pos:start="57:28" pos:end="57:28">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:28"><expr pos:start="58:13" pos:end="58:27"><name pos:start="58:13" pos:end="58:23"><name pos:start="58:13" pos:end="58:14">rt</name><operator pos:start="58:15" pos:end="58:16">-&gt;</operator><name pos:start="58:17" pos:end="58:23">flv_off</name></name> <operator pos:start="58:25" pos:end="58:25">=</operator> <literal type="number" pos:start="58:27" pos:end="58:27">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:14">rt</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:32">flv_header_bytes</name></name> <operator pos:start="59:34" pos:end="59:34">=</operator> <literal type="number" pos:start="59:36" pos:end="59:36">0</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt> <while pos:start="60:7" pos:end="60:36">while <condition pos:start="60:13" pos:end="60:35">(<expr pos:start="60:14" pos:end="60:34"><name pos:start="60:14" pos:end="60:21">buf_temp</name> <operator pos:start="60:23" pos:end="60:23">-</operator> <name pos:start="60:25" pos:end="60:27">buf</name> <operator pos:start="60:29" pos:end="60:29">&lt;</operator> <name pos:start="60:31" pos:end="60:34">size</name></expr>)</condition><block type="pseudo" pos:start="60:36" pos:end="60:36"><block_content pos:start="60:36" pos:end="60:36"><empty_stmt pos:start="60:36" pos:end="60:36">;</empty_stmt></block_content></block></while></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></do></block_content></block></function></unit>
