<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22644.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">xface_encode_frame</name><parameter_list pos:start="1:30" pos:end="3:68">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">pkt</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:50"><decl pos:start="3:31" pos:end="3:50"><type pos:start="3:31" pos:end="3:50"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:43">AVFrame</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:50">frame</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:67"><decl pos:start="3:53" pos:end="3:67"><type pos:start="3:53" pos:end="3:67"><name pos:start="3:53" pos:end="3:55">int</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:67">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="151:1">{<block_content pos:start="7:5" pos:end="149:13">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">XFaceContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">xface</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19">ProbRangesQueue</name></type> <name pos:start="9:21" pos:end="9:22">pq</name> <init pos:start="9:24" pos:end="9:35">= <expr pos:start="9:26" pos:end="9:35"><block pos:start="9:26" pos:end="9:35">{<expr pos:start="9:27" pos:end="9:31"><block pos:start="9:27" pos:end="9:31">{ <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr> }</block></expr>, <expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:37"><name pos:start="11:13" pos:end="11:23">bitmap_copy</name><index pos:start="11:24" pos:end="11:37">[<expr pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:36">XFACE_PIXELS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">BigInt</name></type> <name pos:start="13:12" pos:end="13:12">b</name> <init pos:start="13:14" pos:end="13:18">= <expr pos:start="13:16" pos:end="13:18"><block pos:start="13:16" pos:end="13:18">{<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">j</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">k</name></decl>, <decl pos:start="15:18" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:20">ret</name> <init pos:start="15:22" pos:end="15:24">= <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:33"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">char</name></type> <name pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:15">intbuf</name><index pos:start="21:16" pos:end="21:33">[<expr pos:start="21:17" pos:end="21:32"><name pos:start="21:17" pos:end="21:32">XFACE_MAX_DIGITS</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:38">(<expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">width</name></name> <operator pos:start="25:22" pos:end="25:23">||</operator> <name pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:29">avctx</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:37">height</name></name></expr>)</condition> <block pos:start="25:40" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:9">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:73">(<expr pos:start="27:13" pos:end="27:72"><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:24">width</name></name> <operator pos:start="27:26" pos:end="27:27">!=</operator> <name pos:start="27:29" pos:end="27:39">XFACE_WIDTH</name> <operator pos:start="27:41" pos:end="27:42">||</operator> <name pos:start="27:44" pos:end="27:56"><name pos:start="27:44" pos:end="27:48">avctx</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:56">height</name></name> <operator pos:start="27:58" pos:end="27:59">!=</operator> <name pos:start="27:61" pos:end="27:72">XFACE_HEIGHT</name></expr>)</condition> <block pos:start="27:75" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:35">

            <expr_stmt pos:start="29:13" pos:end="33:75"><expr pos:start="29:13" pos:end="33:74"><call pos:start="29:13" pos:end="33:74"><name pos:start="29:13" pos:end="29:18">av_log</name><argument_list pos:start="29:19" pos:end="33:74">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">avctx</name></expr></argument>, <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="31:20" pos:end="31:83"><expr pos:start="31:20" pos:end="31:83"><literal type="string" pos:start="31:20" pos:end="31:83">"Size value %dx%d not supported, only accepts a size of %dx%d\n"</literal></expr></argument>,

                   <argument pos:start="33:20" pos:end="33:31"><expr pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:24">avctx</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:31">width</name></name></expr></argument>, <argument pos:start="33:34" pos:end="33:46"><expr pos:start="33:34" pos:end="33:46"><name pos:start="33:34" pos:end="33:46"><name pos:start="33:34" pos:end="33:38">avctx</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:46">height</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:59"><expr pos:start="33:49" pos:end="33:59"><name pos:start="33:49" pos:end="33:59">XFACE_WIDTH</name></expr></argument>, <argument pos:start="33:62" pos:end="33:73"><expr pos:start="33:62" pos:end="33:73"><name pos:start="33:62" pos:end="33:73">XFACE_HEIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:9">avctx</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">width</name></name>  <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:31">XFACE_WIDTH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:9">avctx</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">height</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:32">XFACE_HEIGHT</name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:64">/* convert image from MONOWHITE to 1=black 0=white bitmap */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:25"><expr pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:7">buf</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <name pos:start="49:11" pos:end="49:24"><name pos:start="49:11" pos:end="49:15">frame</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:21">data</name><index pos:start="49:22" pos:end="49:24">[<expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:14"><expr pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:5">i</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <name pos:start="51:9" pos:end="51:9">j</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <literal type="number" pos:start="51:13" pos:end="51:13">0</literal></expr>;</expr_stmt>

    <do pos:start="53:5" pos:end="67:31">do <block pos:start="53:8" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:9">

        <for pos:start="55:9" pos:end="57:51">for <control pos:start="55:13" pos:end="55:31">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">k</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:25"><name pos:start="55:21" pos:end="55:21">k</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">8</literal></expr>;</condition> <incr pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:28">k</name><operator pos:start="55:29" pos:end="55:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:51"><block_content pos:start="57:13" pos:end="57:51">

            <expr_stmt pos:start="57:13" pos:end="57:51"><expr pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:17">xface</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:25">bitmap</name><index pos:start="57:26" pos:end="57:30">[<expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:27">i</name><operator pos:start="57:28" pos:end="57:29">++</operator></expr>]</index></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <operator pos:start="57:34" pos:end="57:34">(</operator><name pos:start="57:35" pos:end="57:40"><name pos:start="57:35" pos:end="57:37">buf</name><index pos:start="57:38" pos:end="57:40">[<expr pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">j</name></expr>]</index></name><operator pos:start="57:41" pos:end="57:42">&gt;&gt;</operator><operator pos:start="57:43" pos:end="57:43">(</operator><literal type="number" pos:start="57:44" pos:end="57:45">7</literal><operator pos:start="57:45" pos:end="57:45">-</operator><name pos:start="57:46" pos:end="57:46">k</name><operator pos:start="57:47" pos:end="57:47">)</operator><operator pos:start="57:48" pos:end="57:48">)</operator><operator pos:start="57:49" pos:end="57:49">&amp;</operator><literal type="number" pos:start="57:50" pos:end="57:50">1</literal></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:33">(<expr pos:start="59:13" pos:end="59:32"><operator pos:start="59:13" pos:end="59:14">++</operator><name pos:start="59:15" pos:end="59:15">j</name> <operator pos:start="59:17" pos:end="59:18">==</operator> <name pos:start="59:20" pos:end="59:30">XFACE_WIDTH</name><operator pos:start="59:31" pos:end="59:31">/</operator><literal type="number" pos:start="59:32" pos:end="59:32">8</literal></expr>)</condition> <block pos:start="59:35" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:18">

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:15">buf</name> <operator pos:start="61:17" pos:end="61:18">+=</operator> <name pos:start="61:20" pos:end="61:37"><name pos:start="61:20" pos:end="61:24">frame</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:34">linesize</name><index pos:start="61:35" pos:end="61:37">[<expr pos:start="61:36" pos:end="61:36"><literal type="number" pos:start="61:36" pos:end="61:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:18"><expr pos:start="63:13" pos:end="63:17"><name pos:start="63:13" pos:end="63:13">j</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="67:13" pos:end="67:30">(<expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">&lt;</operator> <name pos:start="67:18" pos:end="67:29">XFACE_PIXELS</name></expr>)</condition>;</do>



    <comment type="block" pos:start="71:5" pos:end="71:33">/* create a copy of bitmap */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:53"><expr pos:start="73:5" pos:end="73:52"><call pos:start="73:5" pos:end="73:52"><name pos:start="73:5" pos:end="73:10">memcpy</name><argument_list pos:start="73:11" pos:end="73:52">(<argument pos:start="73:12" pos:end="73:22"><expr pos:start="73:12" pos:end="73:22"><name pos:start="73:12" pos:end="73:22">bitmap_copy</name></expr></argument>, <argument pos:start="73:25" pos:end="73:37"><expr pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:29">xface</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:37">bitmap</name></name></expr></argument>, <argument pos:start="73:40" pos:end="73:51"><expr pos:start="73:40" pos:end="73:51"><name pos:start="73:40" pos:end="73:51">XFACE_PIXELS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:55"><expr pos:start="75:5" pos:end="75:54"><call pos:start="75:5" pos:end="75:54"><name pos:start="75:5" pos:end="75:26">ff_xface_generate_face</name><argument_list pos:start="75:27" pos:end="75:54">(<argument pos:start="75:28" pos:end="75:40"><expr pos:start="75:28" pos:end="75:40"><name pos:start="75:28" pos:end="75:40"><name pos:start="75:28" pos:end="75:32">xface</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:40">bitmap</name></name></expr></argument>, <argument pos:start="75:43" pos:end="75:53"><expr pos:start="75:43" pos:end="75:53"><name pos:start="75:43" pos:end="75:53">bitmap_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:72"><expr pos:start="79:5" pos:end="79:71"><call pos:start="79:5" pos:end="79:71"><name pos:start="79:5" pos:end="79:16">encode_block</name><argument_list pos:start="79:17" pos:end="79:71">(<argument pos:start="79:18" pos:end="79:30"><expr pos:start="79:18" pos:end="79:30"><name pos:start="79:18" pos:end="79:30"><name pos:start="79:18" pos:end="79:22">xface</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:30">bitmap</name></name></expr></argument>,                         <argument pos:start="79:57" pos:end="79:58"><expr pos:start="79:57" pos:end="79:58"><literal type="number" pos:start="79:57" pos:end="79:58">16</literal></expr></argument>, <argument pos:start="79:61" pos:end="79:62"><expr pos:start="79:61" pos:end="79:62"><literal type="number" pos:start="79:61" pos:end="79:62">16</literal></expr></argument>, <argument pos:start="79:65" pos:end="79:65"><expr pos:start="79:65" pos:end="79:65"><literal type="number" pos:start="79:65" pos:end="79:65">0</literal></expr></argument>, <argument pos:start="79:68" pos:end="79:70"><expr pos:start="79:68" pos:end="79:70"><operator pos:start="79:68" pos:end="79:68">&amp;</operator><name pos:start="79:69" pos:end="79:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:72"><expr pos:start="81:5" pos:end="81:71"><call pos:start="81:5" pos:end="81:71"><name pos:start="81:5" pos:end="81:16">encode_block</name><argument_list pos:start="81:17" pos:end="81:71">(<argument pos:start="81:18" pos:end="81:35"><expr pos:start="81:18" pos:end="81:35"><name pos:start="81:18" pos:end="81:30"><name pos:start="81:18" pos:end="81:22">xface</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:30">bitmap</name></name> <operator pos:start="81:32" pos:end="81:32">+</operator> <literal type="number" pos:start="81:34" pos:end="81:35">16</literal></expr></argument>,                    <argument pos:start="81:57" pos:end="81:58"><expr pos:start="81:57" pos:end="81:58"><literal type="number" pos:start="81:57" pos:end="81:58">16</literal></expr></argument>, <argument pos:start="81:61" pos:end="81:62"><expr pos:start="81:61" pos:end="81:62"><literal type="number" pos:start="81:61" pos:end="81:62">16</literal></expr></argument>, <argument pos:start="81:65" pos:end="81:65"><expr pos:start="81:65" pos:end="81:65"><literal type="number" pos:start="81:65" pos:end="81:65">0</literal></expr></argument>, <argument pos:start="81:68" pos:end="81:70"><expr pos:start="81:68" pos:end="81:70"><operator pos:start="81:68" pos:end="81:68">&amp;</operator><name pos:start="81:69" pos:end="81:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:72"><expr pos:start="83:5" pos:end="83:71"><call pos:start="83:5" pos:end="83:71"><name pos:start="83:5" pos:end="83:16">encode_block</name><argument_list pos:start="83:17" pos:end="83:71">(<argument pos:start="83:18" pos:end="83:35"><expr pos:start="83:18" pos:end="83:35"><name pos:start="83:18" pos:end="83:30"><name pos:start="83:18" pos:end="83:22">xface</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:30">bitmap</name></name> <operator pos:start="83:32" pos:end="83:32">+</operator> <literal type="number" pos:start="83:34" pos:end="83:35">32</literal></expr></argument>,                    <argument pos:start="83:57" pos:end="83:58"><expr pos:start="83:57" pos:end="83:58"><literal type="number" pos:start="83:57" pos:end="83:58">16</literal></expr></argument>, <argument pos:start="83:61" pos:end="83:62"><expr pos:start="83:61" pos:end="83:62"><literal type="number" pos:start="83:61" pos:end="83:62">16</literal></expr></argument>, <argument pos:start="83:65" pos:end="83:65"><expr pos:start="83:65" pos:end="83:65"><literal type="number" pos:start="83:65" pos:end="83:65">0</literal></expr></argument>, <argument pos:start="83:68" pos:end="83:70"><expr pos:start="83:68" pos:end="83:70"><operator pos:start="83:68" pos:end="83:68">&amp;</operator><name pos:start="83:69" pos:end="83:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:72"><expr pos:start="85:5" pos:end="85:71"><call pos:start="85:5" pos:end="85:71"><name pos:start="85:5" pos:end="85:16">encode_block</name><argument_list pos:start="85:17" pos:end="85:71">(<argument pos:start="85:18" pos:end="85:49"><expr pos:start="85:18" pos:end="85:49"><name pos:start="85:18" pos:end="85:30"><name pos:start="85:18" pos:end="85:22">xface</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:30">bitmap</name></name> <operator pos:start="85:32" pos:end="85:32">+</operator> <name pos:start="85:34" pos:end="85:44">XFACE_WIDTH</name> <operator pos:start="85:46" pos:end="85:46">*</operator> <literal type="number" pos:start="85:48" pos:end="85:49">16</literal></expr></argument>,      <argument pos:start="85:57" pos:end="85:58"><expr pos:start="85:57" pos:end="85:58"><literal type="number" pos:start="85:57" pos:end="85:58">16</literal></expr></argument>, <argument pos:start="85:61" pos:end="85:62"><expr pos:start="85:61" pos:end="85:62"><literal type="number" pos:start="85:61" pos:end="85:62">16</literal></expr></argument>, <argument pos:start="85:65" pos:end="85:65"><expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr></argument>, <argument pos:start="85:68" pos:end="85:70"><expr pos:start="85:68" pos:end="85:70"><operator pos:start="85:68" pos:end="85:68">&amp;</operator><name pos:start="85:69" pos:end="85:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:72"><expr pos:start="87:5" pos:end="87:71"><call pos:start="87:5" pos:end="87:71"><name pos:start="87:5" pos:end="87:16">encode_block</name><argument_list pos:start="87:17" pos:end="87:71">(<argument pos:start="87:18" pos:end="87:54"><expr pos:start="87:18" pos:end="87:54"><name pos:start="87:18" pos:end="87:30"><name pos:start="87:18" pos:end="87:22">xface</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:30">bitmap</name></name> <operator pos:start="87:32" pos:end="87:32">+</operator> <name pos:start="87:34" pos:end="87:44">XFACE_WIDTH</name> <operator pos:start="87:46" pos:end="87:46">*</operator> <literal type="number" pos:start="87:48" pos:end="87:51">16</literal> <operator pos:start="87:51" pos:end="87:51">+</operator> <literal type="number" pos:start="87:53" pos:end="87:54">16</literal></expr></argument>, <argument pos:start="87:57" pos:end="87:58"><expr pos:start="87:57" pos:end="87:58"><literal type="number" pos:start="87:57" pos:end="87:58">16</literal></expr></argument>, <argument pos:start="87:61" pos:end="87:62"><expr pos:start="87:61" pos:end="87:62"><literal type="number" pos:start="87:61" pos:end="87:62">16</literal></expr></argument>, <argument pos:start="87:65" pos:end="87:65"><expr pos:start="87:65" pos:end="87:65"><literal type="number" pos:start="87:65" pos:end="87:65">0</literal></expr></argument>, <argument pos:start="87:68" pos:end="87:70"><expr pos:start="87:68" pos:end="87:70"><operator pos:start="87:68" pos:end="87:68">&amp;</operator><name pos:start="87:69" pos:end="87:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:72"><expr pos:start="89:5" pos:end="89:71"><call pos:start="89:5" pos:end="89:71"><name pos:start="89:5" pos:end="89:16">encode_block</name><argument_list pos:start="89:17" pos:end="89:71">(<argument pos:start="89:18" pos:end="89:54"><expr pos:start="89:18" pos:end="89:54"><name pos:start="89:18" pos:end="89:30"><name pos:start="89:18" pos:end="89:22">xface</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:30">bitmap</name></name> <operator pos:start="89:32" pos:end="89:32">+</operator> <name pos:start="89:34" pos:end="89:44">XFACE_WIDTH</name> <operator pos:start="89:46" pos:end="89:46">*</operator> <literal type="number" pos:start="89:48" pos:end="89:51">16</literal> <operator pos:start="89:51" pos:end="89:51">+</operator> <literal type="number" pos:start="89:53" pos:end="89:54">32</literal></expr></argument>, <argument pos:start="89:57" pos:end="89:58"><expr pos:start="89:57" pos:end="89:58"><literal type="number" pos:start="89:57" pos:end="89:58">16</literal></expr></argument>, <argument pos:start="89:61" pos:end="89:62"><expr pos:start="89:61" pos:end="89:62"><literal type="number" pos:start="89:61" pos:end="89:62">16</literal></expr></argument>, <argument pos:start="89:65" pos:end="89:65"><expr pos:start="89:65" pos:end="89:65"><literal type="number" pos:start="89:65" pos:end="89:65">0</literal></expr></argument>, <argument pos:start="89:68" pos:end="89:70"><expr pos:start="89:68" pos:end="89:70"><operator pos:start="89:68" pos:end="89:68">&amp;</operator><name pos:start="89:69" pos:end="89:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:72"><expr pos:start="91:5" pos:end="91:71"><call pos:start="91:5" pos:end="91:71"><name pos:start="91:5" pos:end="91:16">encode_block</name><argument_list pos:start="91:17" pos:end="91:71">(<argument pos:start="91:18" pos:end="91:49"><expr pos:start="91:18" pos:end="91:49"><name pos:start="91:18" pos:end="91:30"><name pos:start="91:18" pos:end="91:22">xface</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:30">bitmap</name></name> <operator pos:start="91:32" pos:end="91:32">+</operator> <name pos:start="91:34" pos:end="91:44">XFACE_WIDTH</name> <operator pos:start="91:46" pos:end="91:46">*</operator> <literal type="number" pos:start="91:48" pos:end="91:49">32</literal></expr></argument>,      <argument pos:start="91:57" pos:end="91:58"><expr pos:start="91:57" pos:end="91:58"><literal type="number" pos:start="91:57" pos:end="91:58">16</literal></expr></argument>, <argument pos:start="91:61" pos:end="91:62"><expr pos:start="91:61" pos:end="91:62"><literal type="number" pos:start="91:61" pos:end="91:62">16</literal></expr></argument>, <argument pos:start="91:65" pos:end="91:65"><expr pos:start="91:65" pos:end="91:65"><literal type="number" pos:start="91:65" pos:end="91:65">0</literal></expr></argument>, <argument pos:start="91:68" pos:end="91:70"><expr pos:start="91:68" pos:end="91:70"><operator pos:start="91:68" pos:end="91:68">&amp;</operator><name pos:start="91:69" pos:end="91:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:72"><expr pos:start="93:5" pos:end="93:71"><call pos:start="93:5" pos:end="93:71"><name pos:start="93:5" pos:end="93:16">encode_block</name><argument_list pos:start="93:17" pos:end="93:71">(<argument pos:start="93:18" pos:end="93:54"><expr pos:start="93:18" pos:end="93:54"><name pos:start="93:18" pos:end="93:30"><name pos:start="93:18" pos:end="93:22">xface</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:30">bitmap</name></name> <operator pos:start="93:32" pos:end="93:32">+</operator> <name pos:start="93:34" pos:end="93:44">XFACE_WIDTH</name> <operator pos:start="93:46" pos:end="93:46">*</operator> <literal type="number" pos:start="93:48" pos:end="93:51">32</literal> <operator pos:start="93:51" pos:end="93:51">+</operator> <literal type="number" pos:start="93:53" pos:end="93:54">16</literal></expr></argument>, <argument pos:start="93:57" pos:end="93:58"><expr pos:start="93:57" pos:end="93:58"><literal type="number" pos:start="93:57" pos:end="93:58">16</literal></expr></argument>, <argument pos:start="93:61" pos:end="93:62"><expr pos:start="93:61" pos:end="93:62"><literal type="number" pos:start="93:61" pos:end="93:62">16</literal></expr></argument>, <argument pos:start="93:65" pos:end="93:65"><expr pos:start="93:65" pos:end="93:65"><literal type="number" pos:start="93:65" pos:end="93:65">0</literal></expr></argument>, <argument pos:start="93:68" pos:end="93:70"><expr pos:start="93:68" pos:end="93:70"><operator pos:start="93:68" pos:end="93:68">&amp;</operator><name pos:start="93:69" pos:end="93:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:72"><expr pos:start="95:5" pos:end="95:71"><call pos:start="95:5" pos:end="95:71"><name pos:start="95:5" pos:end="95:16">encode_block</name><argument_list pos:start="95:17" pos:end="95:71">(<argument pos:start="95:18" pos:end="95:54"><expr pos:start="95:18" pos:end="95:54"><name pos:start="95:18" pos:end="95:30"><name pos:start="95:18" pos:end="95:22">xface</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:30">bitmap</name></name> <operator pos:start="95:32" pos:end="95:32">+</operator> <name pos:start="95:34" pos:end="95:44">XFACE_WIDTH</name> <operator pos:start="95:46" pos:end="95:46">*</operator> <literal type="number" pos:start="95:48" pos:end="95:51">32</literal> <operator pos:start="95:51" pos:end="95:51">+</operator> <literal type="number" pos:start="95:53" pos:end="95:54">32</literal></expr></argument>, <argument pos:start="95:57" pos:end="95:58"><expr pos:start="95:57" pos:end="95:58"><literal type="number" pos:start="95:57" pos:end="95:58">16</literal></expr></argument>, <argument pos:start="95:61" pos:end="95:62"><expr pos:start="95:61" pos:end="95:62"><literal type="number" pos:start="95:61" pos:end="95:62">16</literal></expr></argument>, <argument pos:start="95:65" pos:end="95:65"><expr pos:start="95:65" pos:end="95:65"><literal type="number" pos:start="95:65" pos:end="95:65">0</literal></expr></argument>, <argument pos:start="95:68" pos:end="95:70"><expr pos:start="95:68" pos:end="95:70"><operator pos:start="95:68" pos:end="95:68">&amp;</operator><name pos:start="95:69" pos:end="95:70">pq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="99:5" pos:end="101:63">while <condition pos:start="99:11" pos:end="99:34">(<expr pos:start="99:12" pos:end="99:33"><name pos:start="99:12" pos:end="99:29"><name pos:start="99:12" pos:end="99:13">pq</name><operator pos:start="99:14" pos:end="99:14">.</operator><name pos:start="99:15" pos:end="99:29">prob_ranges_idx</name></name> <operator pos:start="99:31" pos:end="99:31">&gt;</operator> <literal type="number" pos:start="99:33" pos:end="99:33">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:63"><block_content pos:start="101:9" pos:end="101:63">

        <expr_stmt pos:start="101:9" pos:end="101:63"><expr pos:start="101:9" pos:end="101:62"><call pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:20">push_integer</name><argument_list pos:start="101:21" pos:end="101:62">(<argument pos:start="101:22" pos:end="101:23"><expr pos:start="101:22" pos:end="101:23"><operator pos:start="101:22" pos:end="101:22">&amp;</operator><name pos:start="101:23" pos:end="101:23">b</name></expr></argument>, <argument pos:start="101:26" pos:end="101:61"><expr pos:start="101:26" pos:end="101:61"><name pos:start="101:26" pos:end="101:61"><name pos:start="101:26" pos:end="101:27">pq</name><operator pos:start="101:28" pos:end="101:28">.</operator><name pos:start="101:29" pos:end="101:39">prob_ranges</name><index pos:start="101:40" pos:end="101:61">[<expr pos:start="101:41" pos:end="101:60"><operator pos:start="101:41" pos:end="101:42">--</operator><name pos:start="101:43" pos:end="101:60"><name pos:start="101:43" pos:end="101:44">pq</name><operator pos:start="101:45" pos:end="101:45">.</operator><name pos:start="101:46" pos:end="101:60">prob_ranges_idx</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <comment type="block" pos:start="105:5" pos:end="105:55">/* write the inverted big integer in b to intbuf */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:10"><expr pos:start="107:5" pos:end="107:9"><name pos:start="107:5" pos:end="107:5">i</name> <operator pos:start="107:7" pos:end="107:7">=</operator> <literal type="number" pos:start="107:9" pos:end="107:9">0</literal></expr>;</expr_stmt>


    <while pos:start="110:5" pos:end="119:5">while <condition pos:start="110:11" pos:end="110:22">(<expr pos:start="110:12" pos:end="110:21"><name pos:start="110:12" pos:end="110:21"><name pos:start="110:12" pos:end="110:12">b</name><operator pos:start="110:13" pos:end="110:13">.</operator><name pos:start="110:14" pos:end="110:21">nb_words</name></name></expr>)</condition> <block pos:start="110:24" pos:end="119:5">{<block_content pos:start="112:9" pos:end="117:44">

        <decl_stmt pos:start="112:9" pos:end="112:18"><decl pos:start="112:9" pos:end="112:17"><type pos:start="112:9" pos:end="112:15"><name pos:start="112:9" pos:end="112:15">uint8_t</name></type> <name pos:start="112:17" pos:end="112:17">r</name></decl>;</decl_stmt>

        <expr_stmt pos:start="114:9" pos:end="114:41"><expr pos:start="114:9" pos:end="114:40"><call pos:start="114:9" pos:end="114:40"><name pos:start="114:9" pos:end="114:18">ff_big_div</name><argument_list pos:start="114:19" pos:end="114:40">(<argument pos:start="114:20" pos:end="114:21"><expr pos:start="114:20" pos:end="114:21"><operator pos:start="114:20" pos:end="114:20">&amp;</operator><name pos:start="114:21" pos:end="114:21">b</name></expr></argument>, <argument pos:start="114:24" pos:end="114:35"><expr pos:start="114:24" pos:end="114:35"><name pos:start="114:24" pos:end="114:35">XFACE_PRINTS</name></expr></argument>, <argument pos:start="114:38" pos:end="114:39"><expr pos:start="114:38" pos:end="114:39"><operator pos:start="114:38" pos:end="114:38">&amp;</operator><name pos:start="114:39" pos:end="114:39">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="117:9" pos:end="117:44"><expr pos:start="117:9" pos:end="117:43"><name pos:start="117:9" pos:end="117:19"><name pos:start="117:9" pos:end="117:14">intbuf</name><index pos:start="117:15" pos:end="117:19">[<expr pos:start="117:16" pos:end="117:18"><name pos:start="117:16" pos:end="117:16">i</name><operator pos:start="117:17" pos:end="117:18">++</operator></expr>]</index></name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:23">r</name> <operator pos:start="117:25" pos:end="117:25">+</operator> <name pos:start="117:27" pos:end="117:43">XFACE_FIRST_PRINT</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="123:5" pos:end="125:19"><if pos:start="123:5" pos:end="125:19">if <condition pos:start="123:8" pos:end="123:54">(<expr pos:start="123:9" pos:end="123:53"><operator pos:start="123:9" pos:end="123:9">(</operator><name pos:start="123:10" pos:end="123:12">ret</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <call pos:start="123:16" pos:end="123:48"><name pos:start="123:16" pos:end="123:31">ff_alloc_packet2</name><argument_list pos:start="123:32" pos:end="123:48">(<argument pos:start="123:33" pos:end="123:37"><expr pos:start="123:33" pos:end="123:37"><name pos:start="123:33" pos:end="123:37">avctx</name></expr></argument>, <argument pos:start="123:40" pos:end="123:42"><expr pos:start="123:40" pos:end="123:42"><name pos:start="123:40" pos:end="123:42">pkt</name></expr></argument>, <argument pos:start="123:45" pos:end="123:47"><expr pos:start="123:45" pos:end="123:47"><name pos:start="123:45" pos:end="123:45">i</name><operator pos:start="123:46" pos:end="123:46">+</operator><literal type="number" pos:start="123:47" pos:end="123:47">2</literal></expr></argument>)</argument_list></call><operator pos:start="123:49" pos:end="123:49">)</operator> <operator pos:start="123:51" pos:end="123:51">&lt;</operator> <literal type="number" pos:start="123:53" pos:end="123:53">0</literal></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:19"><block_content pos:start="125:9" pos:end="125:19">

        <return pos:start="125:9" pos:end="125:19">return <expr pos:start="125:16" pos:end="125:18"><name pos:start="125:16" pos:end="125:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="129:5" pos:end="129:49">/* revert the number, and close the buffer */</comment>

    <expr_stmt pos:start="131:5" pos:end="131:18"><expr pos:start="131:5" pos:end="131:17"><name pos:start="131:5" pos:end="131:5">p</name> <operator pos:start="131:7" pos:end="131:7">=</operator> <name pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:11">pkt</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:17">data</name></name></expr>;</expr_stmt>

    <while pos:start="133:5" pos:end="135:27">while <condition pos:start="133:11" pos:end="133:20">(<expr pos:start="133:12" pos:end="133:19"><operator pos:start="133:12" pos:end="133:13">--</operator><name pos:start="133:14" pos:end="133:14">i</name> <operator pos:start="133:16" pos:end="133:17">&gt;=</operator> <literal type="number" pos:start="133:19" pos:end="133:19">0</literal></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:27"><block_content pos:start="135:9" pos:end="135:27">

        <expr_stmt pos:start="135:9" pos:end="135:27"><expr pos:start="135:9" pos:end="135:26"><operator pos:start="135:9" pos:end="135:9">*</operator><operator pos:start="135:10" pos:end="135:10">(</operator><name pos:start="135:11" pos:end="135:11">p</name><operator pos:start="135:12" pos:end="135:13">++</operator><operator pos:start="135:14" pos:end="135:14">)</operator> <operator pos:start="135:16" pos:end="135:16">=</operator> <name pos:start="135:18" pos:end="135:26"><name pos:start="135:18" pos:end="135:23">intbuf</name><index pos:start="135:24" pos:end="135:26">[<expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></while>

    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><operator pos:start="137:5" pos:end="137:5">*</operator><operator pos:start="137:6" pos:end="137:6">(</operator><name pos:start="137:7" pos:end="137:7">p</name><operator pos:start="137:8" pos:end="137:9">++</operator><operator pos:start="137:10" pos:end="137:10">)</operator> <operator pos:start="137:12" pos:end="137:12">=</operator> <literal type="char" pos:start="137:14" pos:end="137:17">'\n'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:15"><expr pos:start="139:5" pos:end="139:14"><operator pos:start="139:5" pos:end="139:5">*</operator><operator pos:start="139:6" pos:end="139:6">(</operator><name pos:start="139:7" pos:end="139:7">p</name><operator pos:start="139:8" pos:end="139:9">++</operator><operator pos:start="139:10" pos:end="139:10">)</operator> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:34"><expr pos:start="143:5" pos:end="143:33"><name pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:7">pkt</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:14">flags</name></name> <operator pos:start="143:16" pos:end="143:17">|=</operator> <name pos:start="143:19" pos:end="143:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:20"><expr pos:start="145:5" pos:end="145:19"><operator pos:start="145:5" pos:end="145:5">*</operator><name pos:start="145:6" pos:end="145:15">got_packet</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <literal type="number" pos:start="145:19" pos:end="145:19">1</literal></expr>;</expr_stmt>



    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
