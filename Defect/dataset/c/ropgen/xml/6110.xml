<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6110.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_mfsri</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="42:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">ra</name> <init pos:start="11:12" pos:end="11:28">= <expr pos:start="11:14" pos:end="11:28"><call pos:start="11:14" pos:end="11:28"><name pos:start="11:14" pos:end="11:15">rA</name><argument_list pos:start="11:16" pos:end="11:28">(<argument pos:start="11:17" pos:end="11:27"><expr pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:19">ctx</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:27">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">rd</name> <init pos:start="13:12" pos:end="13:28">= <expr pos:start="13:14" pos:end="13:28"><call pos:start="13:14" pos:end="13:28"><name pos:start="13:14" pos:end="13:15">rD</name><argument_list pos:start="13:16" pos:end="13:28">(<argument pos:start="13:17" pos:end="13:27"><expr pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:19">ctx</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:27">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">TCGv</name></type> <name pos:start="15:10" pos:end="15:11">t0</name></decl>;</decl_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><call pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:16">unlikely</name><argument_list pos:start="17:17" pos:end="17:25">(<argument pos:start="17:18" pos:end="17:24"><expr pos:start="17:18" pos:end="17:24"><name pos:start="17:18" pos:end="17:24"><name pos:start="17:18" pos:end="17:20">ctx</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:24">pr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:28" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:56"><expr pos:start="19:9" pos:end="19:55"><call pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:27">gen_inval_exception</name><argument_list pos:start="19:28" pos:end="19:55">(<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">ctx</name></expr></argument>, <argument pos:start="19:34" pos:end="19:54"><expr pos:start="19:34" pos:end="19:54"><name pos:start="19:34" pos:end="19:54">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:6">t0</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:21">tcg_temp_new</name><argument_list pos:start="25:22" pos:end="25:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:22">gen_addr_reg_index</name><argument_list pos:start="27:23" pos:end="27:31">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">ctx</name></expr></argument>, <argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><name pos:start="27:29" pos:end="27:30">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><call pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:19">tcg_gen_shri_tl</name><argument_list pos:start="29:20" pos:end="29:31">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><name pos:start="29:21" pos:end="29:22">t0</name></expr></argument>, <argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><name pos:start="29:25" pos:end="29:26">t0</name></expr></argument>, <argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><literal type="number" pos:start="29:29" pos:end="29:30">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:19">tcg_gen_andi_tl</name><argument_list pos:start="31:20" pos:end="31:32">(<argument pos:start="31:21" pos:end="31:22"><expr pos:start="31:21" pos:end="31:22"><name pos:start="31:21" pos:end="31:22">t0</name></expr></argument>, <argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">t0</name></expr></argument>, <argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><literal type="number" pos:start="31:29" pos:end="31:31">0xF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:49"><expr pos:start="33:5" pos:end="33:48"><call pos:start="33:5" pos:end="33:48"><name pos:start="33:5" pos:end="33:22">gen_helper_load_sr</name><argument_list pos:start="33:23" pos:end="33:48">(<argument pos:start="33:24" pos:end="33:34"><expr pos:start="33:24" pos:end="33:34"><name pos:start="33:24" pos:end="33:34"><name pos:start="33:24" pos:end="33:30">cpu_gpr</name><index pos:start="33:31" pos:end="33:34">[<expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="33:37" pos:end="33:43"><expr pos:start="33:37" pos:end="33:43"><name pos:start="33:37" pos:end="33:43">cpu_env</name></expr></argument>, <argument pos:start="33:46" pos:end="33:47"><expr pos:start="33:46" pos:end="33:47"><name pos:start="33:46" pos:end="33:47">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><call pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:17">tcg_temp_free</name><argument_list pos:start="35:18" pos:end="35:21">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="42:0"><if pos:start="37:5" pos:end="42:0">if <condition pos:start="37:8" pos:end="37:28">(<expr pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:10">ra</name> <operator pos:start="37:12" pos:end="37:13">!=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal> <operator pos:start="37:17" pos:end="37:18">&amp;&amp;</operator> <name pos:start="37:20" pos:end="37:21">ra</name> <operator pos:start="37:23" pos:end="37:24">!=</operator> <name pos:start="37:26" pos:end="37:27">rd</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="42:0"><block_content pos:start="39:9" pos:end="42:0">

        <expr_stmt pos:start="39:9" pos:end="42:0"><expr pos:start="39:9" pos:end="39:48"><call pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:22">tcg_gen_mov_tl</name><argument_list pos:start="39:23" pos:end="39:48">(<argument pos:start="39:24" pos:end="39:34"><expr pos:start="39:24" pos:end="39:34"><name pos:start="39:24" pos:end="39:34"><name pos:start="39:24" pos:end="39:30">cpu_gpr</name><index pos:start="39:31" pos:end="39:34">[<expr pos:start="39:32" pos:end="39:33"><name pos:start="39:32" pos:end="39:33">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="39:37" pos:end="39:47"><expr pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:43">cpu_gpr</name><index pos:start="39:44" pos:end="39:47">[<expr pos:start="39:45" pos:end="39:46"><name pos:start="39:45" pos:end="39:46">rd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
