<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2448.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">adx_encode</name><parameter_list pos:start="1:23" pos:end="1:70">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:31">unsigned</name> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">adx</name></decl></parameter>,<parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:53">short</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">wav</name></decl></parameter>,<parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:63">PREV</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">prev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:9" pos:end="81:9">

	<decl_stmt pos:start="5:9" pos:end="5:18"><decl pos:start="5:9" pos:end="5:17"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:17">scale</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:14"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:23"><decl pos:start="9:9" pos:end="9:14"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:14">s0</name></decl>,<decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:16" pos:end="9:17">s1</name></decl>,<decl pos:start="9:19" pos:end="9:20"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:19" pos:end="9:20">s2</name></decl>,<decl pos:start="9:22" pos:end="9:22"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:22" pos:end="9:22">d</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">max</name><init pos:start="11:16" pos:end="11:17">=<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">min</name><init pos:start="13:16" pos:end="13:17">=<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:21"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:16">data</name><index pos:start="15:17" pos:end="15:20">[<expr pos:start="15:18" pos:end="15:19"><literal type="number" pos:start="15:18" pos:end="15:19">32</literal></expr>]</index></name></decl>;</decl_stmt>



	<expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:10">s1</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:21"><name pos:start="19:14" pos:end="19:17">prev</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:21">s1</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:10">s2</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:17">prev</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:21">s2</name></name></expr>;</expr_stmt>

	<for pos:start="23:9" pos:end="39:9">for<control pos:start="23:12" pos:end="23:25">(<init pos:start="23:13" pos:end="23:16"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:13">i</name><operator pos:start="23:14" pos:end="23:14">=</operator><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>;</init><condition pos:start="23:17" pos:end="23:21"><expr pos:start="23:17" pos:end="23:20"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:18">&lt;</operator><literal type="number" pos:start="23:19" pos:end="23:20">32</literal></expr>;</condition><incr pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:22">i</name><operator pos:start="23:23" pos:end="23:24">++</operator></expr></incr>)</control> <block pos:start="23:27" pos:end="39:9">{<block_content pos:start="25:17" pos:end="37:24">

		<expr_stmt pos:start="25:17" pos:end="25:28"><expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:18">s0</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:27"><name pos:start="25:22" pos:end="25:24">wav</name><index pos:start="25:25" pos:end="25:27">[<expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">i</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="27:17" pos:end="27:63"><expr pos:start="27:17" pos:end="27:62"><name pos:start="27:17" pos:end="27:17">d</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">(</operator><operator pos:start="27:22" pos:end="27:22">(</operator><name pos:start="27:23" pos:end="27:24">s0</name><operator pos:start="27:25" pos:end="27:26">&lt;&lt;</operator><literal type="number" pos:start="27:27" pos:end="27:28">14</literal><operator pos:start="27:29" pos:end="27:29">)</operator> <operator pos:start="27:31" pos:end="27:31">-</operator> <name pos:start="27:33" pos:end="27:38">SCALE1</name><operator pos:start="27:39" pos:end="27:39">*</operator><name pos:start="27:40" pos:end="27:41">s1</name> <operator pos:start="27:43" pos:end="27:43">+</operator> <name pos:start="27:45" pos:end="27:50">SCALE2</name><operator pos:start="27:51" pos:end="27:51">*</operator><name pos:start="27:52" pos:end="27:53">s2</name><operator pos:start="27:54" pos:end="27:54">)</operator><operator pos:start="27:55" pos:end="27:55">/</operator><name pos:start="27:56" pos:end="27:62">BASEVOL</name></expr>;</expr_stmt>

		<expr_stmt pos:start="29:17" pos:end="29:26"><expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:20">data</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">i</name></expr>]</index></name><operator pos:start="29:24" pos:end="29:24">=</operator><name pos:start="29:25" pos:end="29:25">d</name></expr>;</expr_stmt>

		<if_stmt pos:start="31:17" pos:end="31:33"><if pos:start="31:17" pos:end="31:33">if <condition pos:start="31:20" pos:end="31:26">(<expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:23">max</name><operator pos:start="31:24" pos:end="31:24">&lt;</operator><name pos:start="31:25" pos:end="31:25">d</name></expr>)</condition><block type="pseudo" pos:start="31:28" pos:end="31:33"><block_content pos:start="31:28" pos:end="31:33"> <expr_stmt pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:30">max</name><operator pos:start="31:31" pos:end="31:31">=</operator><name pos:start="31:32" pos:end="31:32">d</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<if_stmt pos:start="33:17" pos:end="33:33"><if pos:start="33:17" pos:end="33:33">if <condition pos:start="33:20" pos:end="33:26">(<expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:23">min</name><operator pos:start="33:24" pos:end="33:24">&gt;</operator><name pos:start="33:25" pos:end="33:25">d</name></expr>)</condition><block type="pseudo" pos:start="33:28" pos:end="33:33"><block_content pos:start="33:28" pos:end="33:33"> <expr_stmt pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:30">min</name><operator pos:start="33:31" pos:end="33:31">=</operator><name pos:start="33:32" pos:end="33:32">d</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:18">s2</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:23">s1</name></expr>;</expr_stmt>

		<expr_stmt pos:start="37:17" pos:end="37:24"><expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:18">s1</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:23">s0</name></expr>;</expr_stmt>

	</block_content>}</block></for>

	<expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:12">prev</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:16">s1</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:21">s1</name></expr>;</expr_stmt>

	<expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:12">prev</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:16">s2</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:21">s2</name></expr>;</expr_stmt>



	<comment type="block" pos:start="47:9" pos:end="47:20">/* -8..+7 */</comment>



	<if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:15">max</name><operator pos:start="51:16" pos:end="51:17">==</operator><literal type="number" pos:start="51:18" pos:end="51:18">0</literal> <operator pos:start="51:20" pos:end="51:21">&amp;&amp;</operator> <name pos:start="51:23" pos:end="51:25">min</name><operator pos:start="51:26" pos:end="51:27">==</operator><literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>)</condition> <block pos:start="51:31" pos:end="57:9">{<block_content pos:start="53:17" pos:end="55:23">

		<expr_stmt pos:start="53:17" pos:end="53:33"><expr pos:start="53:17" pos:end="53:32"><call pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:22">memset</name><argument_list pos:start="53:23" pos:end="53:32">(<argument pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:26">adx</name></expr></argument>,<argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr></argument>,<argument pos:start="53:30" pos:end="53:31"><expr pos:start="53:30" pos:end="53:31"><literal type="number" pos:start="53:30" pos:end="53:31">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="55:17" pos:end="55:23">return;</return>

	</block_content>}</block></if></if_stmt>



	<if_stmt pos:start="61:9" pos:end="63:28"><if pos:start="61:9" pos:end="61:40">if <condition pos:start="61:12" pos:end="61:25">(<expr pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:15">max</name><operator pos:start="61:16" pos:end="61:16">/</operator><literal type="number" pos:start="61:17" pos:end="61:17">7</literal><operator pos:start="61:18" pos:end="61:18">&gt;</operator><operator pos:start="61:19" pos:end="61:19">-</operator><name pos:start="61:20" pos:end="61:22">min</name><operator pos:start="61:23" pos:end="61:23">/</operator><literal type="number" pos:start="61:24" pos:end="61:24">8</literal></expr>)</condition><block type="pseudo" pos:start="61:27" pos:end="61:40"><block_content pos:start="61:27" pos:end="61:40"> <expr_stmt pos:start="61:27" pos:end="61:40"><expr pos:start="61:27" pos:end="61:39"><name pos:start="61:27" pos:end="61:31">scale</name> <operator pos:start="61:33" pos:end="61:33">=</operator> <name pos:start="61:35" pos:end="61:37">max</name><operator pos:start="61:38" pos:end="61:38">/</operator><literal type="number" pos:start="61:39" pos:end="61:39">7</literal></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="63:9" pos:end="63:28">else<block type="pseudo" pos:start="63:14" pos:end="63:28"><block_content pos:start="63:14" pos:end="63:28"> <expr_stmt pos:start="63:14" pos:end="63:28"><expr pos:start="63:14" pos:end="63:27"><name pos:start="63:14" pos:end="63:18">scale</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <operator pos:start="63:22" pos:end="63:22">-</operator><name pos:start="63:23" pos:end="63:25">min</name><operator pos:start="63:26" pos:end="63:26">/</operator><literal type="number" pos:start="63:27" pos:end="63:27">8</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



	<if_stmt pos:start="67:9" pos:end="67:30"><if pos:start="67:9" pos:end="67:30">if <condition pos:start="67:12" pos:end="67:21">(<expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:17">scale</name><operator pos:start="67:18" pos:end="67:19">==</operator><literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>)</condition><block type="pseudo" pos:start="67:23" pos:end="67:30"><block_content pos:start="67:23" pos:end="67:30"> <expr_stmt pos:start="67:23" pos:end="67:30"><expr pos:start="67:23" pos:end="67:29"><name pos:start="67:23" pos:end="67:27">scale</name><operator pos:start="67:28" pos:end="67:28">=</operator><literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



	<expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:11">adx</name><index pos:start="71:12" pos:end="71:14">[<expr pos:start="71:13" pos:end="71:13"><literal type="number" pos:start="71:13" pos:end="71:13">0</literal></expr>]</index></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:22">scale</name><operator pos:start="71:23" pos:end="71:24">&gt;&gt;</operator><literal type="number" pos:start="71:25" pos:end="71:25">8</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="73:9" pos:end="73:23"><expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:11">adx</name><index pos:start="73:12" pos:end="73:14">[<expr pos:start="73:13" pos:end="73:13"><literal type="number" pos:start="73:13" pos:end="73:13">1</literal></expr>]</index></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:22">scale</name></expr>;</expr_stmt>



	<for pos:start="77:9" pos:end="81:9">for<control pos:start="77:12" pos:end="77:25">(<init pos:start="77:13" pos:end="77:16"><expr pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:13">i</name><operator pos:start="77:14" pos:end="77:14">=</operator><literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>;</init><condition pos:start="77:17" pos:end="77:21"><expr pos:start="77:17" pos:end="77:20"><name pos:start="77:17" pos:end="77:17">i</name><operator pos:start="77:18" pos:end="77:18">&lt;</operator><literal type="number" pos:start="77:19" pos:end="77:20">16</literal></expr>;</condition><incr pos:start="77:22" pos:end="77:24"><expr pos:start="77:22" pos:end="77:24"><name pos:start="77:22" pos:end="77:22">i</name><operator pos:start="77:23" pos:end="77:24">++</operator></expr></incr>)</control> <block pos:start="77:27" pos:end="81:9">{<block_content pos:start="79:17" pos:end="79:78">

		<expr_stmt pos:start="79:17" pos:end="79:78"><expr pos:start="79:17" pos:end="79:77"><name pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:19">adx</name><index pos:start="79:20" pos:end="79:24">[<expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:21">i</name><operator pos:start="79:22" pos:end="79:22">+</operator><literal type="number" pos:start="79:23" pos:end="79:23">2</literal></expr>]</index></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <operator pos:start="79:28" pos:end="79:28">(</operator><operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:38"><name pos:start="79:30" pos:end="79:33">data</name><index pos:start="79:34" pos:end="79:38">[<expr pos:start="79:35" pos:end="79:37"><name pos:start="79:35" pos:end="79:35">i</name><operator pos:start="79:36" pos:end="79:36">*</operator><literal type="number" pos:start="79:37" pos:end="79:37">2</literal></expr>]</index></name><operator pos:start="79:39" pos:end="79:39">/</operator><name pos:start="79:40" pos:end="79:44">scale</name><operator pos:start="79:45" pos:end="79:45">)</operator><operator pos:start="79:46" pos:end="79:47">&lt;&lt;</operator><literal type="number" pos:start="79:48" pos:end="79:48">4</literal><operator pos:start="79:49" pos:end="79:49">)</operator> <operator pos:start="79:51" pos:end="79:51">|</operator> <operator pos:start="79:53" pos:end="79:53">(</operator><operator pos:start="79:54" pos:end="79:54">(</operator><name pos:start="79:55" pos:end="79:65"><name pos:start="79:55" pos:end="79:58">data</name><index pos:start="79:59" pos:end="79:65">[<expr pos:start="79:60" pos:end="79:64"><name pos:start="79:60" pos:end="79:60">i</name><operator pos:start="79:61" pos:end="79:61">*</operator><literal type="number" pos:start="79:62" pos:end="79:63">2</literal><operator pos:start="79:63" pos:end="79:63">+</operator><literal type="number" pos:start="79:64" pos:end="79:64">1</literal></expr>]</index></name><operator pos:start="79:66" pos:end="79:66">/</operator><name pos:start="79:67" pos:end="79:71">scale</name><operator pos:start="79:72" pos:end="79:72">)</operator><operator pos:start="79:73" pos:end="79:73">&amp;</operator><literal type="number" pos:start="79:74" pos:end="79:76">0xf</literal><operator pos:start="79:77" pos:end="79:77">)</operator></expr>;</expr_stmt>

	</block_content>}</block></for>

</block_content>}</block></function>
</unit>
