<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1489.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">tcg_out_ld</name><parameter_list pos:start="1:23" pos:end="3:44">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">TCGContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">TCGType</name></type> <name pos:start="1:47" pos:end="1:50">type</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:58">TCGReg</name></type> <name pos:start="1:60" pos:end="1:62">ret</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:75"><decl pos:start="1:65" pos:end="1:75"><type pos:start="1:65" pos:end="1:75"><name pos:start="1:65" pos:end="1:70">TCGReg</name></type> <name pos:start="1:72" pos:end="1:75">arg1</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:43"><decl pos:start="3:24" pos:end="3:43"><type pos:start="3:24" pos:end="3:43"><name pos:start="3:24" pos:end="3:38">tcg_target_long</name></type> <name pos:start="3:40" pos:end="3:43">arg2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:49">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:25">old_code_ptr</name> <init pos:start="7:27" pos:end="7:39">= <expr pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:39">code_ptr</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="41:5"><if pos:start="9:5" pos:end="19:5">if <condition pos:start="9:8" pos:end="9:29">(<expr pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:12">type</name> <operator pos:start="9:14" pos:end="9:15">==</operator> <name pos:start="9:17" pos:end="9:28">TCG_TYPE_I32</name></expr>)</condition> <block pos:start="9:31" pos:end="19:5">{<block_content pos:start="11:9" pos:end="17:27">

        <expr_stmt pos:start="11:9" pos:end="11:41"><expr pos:start="11:9" pos:end="11:40"><call pos:start="11:9" pos:end="11:40"><name pos:start="11:9" pos:end="11:20">tcg_out_op_t</name><argument_list pos:start="11:21" pos:end="11:40">(<argument pos:start="11:22" pos:end="11:22"><expr pos:start="11:22" pos:end="11:22"><name pos:start="11:22" pos:end="11:22">s</name></expr></argument>, <argument pos:start="11:25" pos:end="11:39"><expr pos:start="11:25" pos:end="11:39"><name pos:start="11:25" pos:end="11:39">INDEX_op_ld_i32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><call pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:17">tcg_out_r</name><argument_list pos:start="13:18" pos:end="13:25">(<argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">s</name></expr></argument>, <argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:24">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:27"><expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:17">tcg_out_r</name><argument_list pos:start="15:18" pos:end="15:26">(<argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">s</name></expr></argument>, <argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:17">tcg_out32</name><argument_list pos:start="17:18" pos:end="17:26">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>, <argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="41:5">else <block pos:start="19:12" pos:end="41:5">{<block_content pos:start="21:9" pos:end="40:0">

        <expr_stmt pos:start="21:9" pos:end="24:0"><expr pos:start="21:9" pos:end="21:36"><call pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:14">assert</name><argument_list pos:start="21:15" pos:end="21:36">(<argument pos:start="21:16" pos:end="21:35"><expr pos:start="21:16" pos:end="21:35"><name pos:start="21:16" pos:end="21:19">type</name> <operator pos:start="21:21" pos:end="21:22">==</operator> <name pos:start="21:24" pos:end="21:35">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="23:1" pos:end="23:29">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:23">TCG_TARGET_REG_BITS</name> <operator pos:start="23:25" pos:end="23:26">==</operator> <literal type="number" pos:start="23:28" pos:end="23:29">64</literal></expr></cpp:if>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:20">tcg_out_op_t</name><argument_list pos:start="25:21" pos:end="25:40">(<argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">s</name></expr></argument>, <argument pos:start="25:25" pos:end="25:39"><expr pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:39">INDEX_op_ld_i64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><call pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:17">tcg_out_r</name><argument_list pos:start="27:18" pos:end="27:25">(<argument pos:start="27:19" pos:end="27:19"><expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">s</name></expr></argument>, <argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:24">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><call pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:17">tcg_out_r</name><argument_list pos:start="29:18" pos:end="29:26">(<argument pos:start="29:19" pos:end="29:19"><expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">s</name></expr></argument>, <argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><call pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:14">assert</name><argument_list pos:start="31:15" pos:end="31:38">(<argument pos:start="31:16" pos:end="31:37"><expr pos:start="31:16" pos:end="31:37"><name pos:start="31:16" pos:end="31:19">arg2</name> <operator pos:start="31:21" pos:end="31:22">==</operator> <operator pos:start="31:24" pos:end="31:24">(</operator><name pos:start="31:25" pos:end="31:32">uint32_t</name><operator pos:start="31:33" pos:end="31:33">)</operator><name pos:start="31:34" pos:end="31:37">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:26"><call pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:17">tcg_out32</name><argument_list pos:start="33:18" pos:end="33:26">(<argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">s</name></expr></argument>, <argument pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><name pos:start="33:22" pos:end="33:25">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="35:1" pos:end="35:5">#<cpp:directive pos:start="35:2" pos:end="35:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:14"><call pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:12">TODO</name><argument_list pos:start="37:13" pos:end="37:14">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:16">old_code_ptr</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:33"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:33">code_ptr</name></name> <operator pos:start="43:35" pos:end="43:35">-</operator> <name pos:start="43:37" pos:end="43:48">old_code_ptr</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
