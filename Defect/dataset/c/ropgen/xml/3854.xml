<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3854.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tcp_chr_connect</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:34">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">TCPCharDriver</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:34">= <expr pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:26">chr</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:27">sockaddr_storage</name></name></type> <name pos:start="9:29" pos:end="9:30">ss</name></decl>, <decl pos:start="9:33" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:27"/><name pos:start="9:33" pos:end="9:34">ps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">socklen_t</name></type> <name pos:start="11:15" pos:end="11:20">ss_len</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><sizeof pos:start="11:24" pos:end="11:33">sizeof<argument_list pos:start="11:30" pos:end="11:33">(<argument pos:start="11:31" pos:end="11:32"><expr pos:start="11:31" pos:end="11:32"><name pos:start="11:31" pos:end="11:32">ss</name></expr></argument>)</argument_list></sizeof></expr></init></decl>, <decl pos:start="11:36" pos:end="11:54"><type ref="prev" pos:start="11:5" pos:end="11:13"/><name pos:start="11:36" pos:end="11:41">ps_len</name> <init pos:start="11:43" pos:end="11:54">= <expr pos:start="11:45" pos:end="11:54"><sizeof pos:start="11:45" pos:end="11:54">sizeof<argument_list pos:start="11:51" pos:end="11:54">(<argument pos:start="11:52" pos:end="11:53"><expr pos:start="11:52" pos:end="11:53"><name pos:start="11:52" pos:end="11:53">ps</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:26">(<argument pos:start="15:12" pos:end="15:14"><expr pos:start="15:12" pos:end="15:14"><operator pos:start="15:12" pos:end="15:12">&amp;</operator><name pos:start="15:13" pos:end="15:14">ss</name></expr></argument>, <argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></argument>, <argument pos:start="15:20" pos:end="15:25"><expr pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:25">ss_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:66">(<expr pos:start="17:9" pos:end="17:65"><call pos:start="17:9" pos:end="17:60"><name pos:start="17:9" pos:end="17:19">getsockname</name><argument_list pos:start="17:20" pos:end="17:60">(<argument pos:start="17:21" pos:end="17:25"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:25">fd</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:50"><expr pos:start="17:28" pos:end="17:50"><operator pos:start="17:28" pos:end="17:28">(</operator>struct <name pos:start="17:36" pos:end="17:43">sockaddr</name> <operator pos:start="17:45" pos:end="17:45">*</operator><operator pos:start="17:46" pos:end="17:46">)</operator> <operator pos:start="17:48" pos:end="17:48">&amp;</operator><name pos:start="17:49" pos:end="17:50">ss</name></expr></argument>, <argument pos:start="17:53" pos:end="17:59"><expr pos:start="17:53" pos:end="17:59"><operator pos:start="17:53" pos:end="17:53">&amp;</operator><name pos:start="17:54" pos:end="17:59">ss_len</name></expr></argument>)</argument_list></call> <operator pos:start="17:62" pos:end="17:63">!=</operator> <literal type="number" pos:start="17:65" pos:end="17:65">0</literal></expr>)</condition> <block pos:start="17:68" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:64">

        <expr_stmt pos:start="19:9" pos:end="21:64"><expr pos:start="19:9" pos:end="21:63"><call pos:start="19:9" pos:end="21:63"><name pos:start="19:9" pos:end="19:16">snprintf</name><argument_list pos:start="19:17" pos:end="21:63">(<argument pos:start="19:18" pos:end="19:30"><expr pos:start="19:18" pos:end="19:30"><name pos:start="19:18" pos:end="19:30"><name pos:start="19:18" pos:end="19:20">chr</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:30">filename</name></name></expr></argument>, <argument pos:start="19:33" pos:end="19:53"><expr pos:start="19:33" pos:end="19:53"><name pos:start="19:33" pos:end="19:53">CHR_MAX_FILENAME_SIZE</name></expr></argument>,

                 <argument pos:start="21:18" pos:end="21:45"><expr pos:start="21:18" pos:end="21:45"><literal type="string" pos:start="21:18" pos:end="21:45">"Error in getsockname: %s\n"</literal></expr></argument>, <argument pos:start="21:48" pos:end="21:62"><expr pos:start="21:48" pos:end="21:62"><call pos:start="21:48" pos:end="21:62"><name pos:start="21:48" pos:end="21:55">strerror</name><argument_list pos:start="21:56" pos:end="21:62">(<argument pos:start="21:57" pos:end="21:61"><expr pos:start="21:57" pos:end="21:61"><name pos:start="21:57" pos:end="21:61">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="29:5">else if <condition pos:start="23:15" pos:end="23:73">(<expr pos:start="23:16" pos:end="23:72"><call pos:start="23:16" pos:end="23:67"><name pos:start="23:16" pos:end="23:26">getpeername</name><argument_list pos:start="23:27" pos:end="23:67">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:32">fd</name></name></expr></argument>, <argument pos:start="23:35" pos:end="23:57"><expr pos:start="23:35" pos:end="23:57"><operator pos:start="23:35" pos:end="23:35">(</operator>struct <name pos:start="23:43" pos:end="23:50">sockaddr</name> <operator pos:start="23:52" pos:end="23:52">*</operator><operator pos:start="23:53" pos:end="23:53">)</operator> <operator pos:start="23:55" pos:end="23:55">&amp;</operator><name pos:start="23:56" pos:end="23:57">ps</name></expr></argument>, <argument pos:start="23:60" pos:end="23:66"><expr pos:start="23:60" pos:end="23:66"><operator pos:start="23:60" pos:end="23:60">&amp;</operator><name pos:start="23:61" pos:end="23:66">ps_len</name></expr></argument>)</argument_list></call> <operator pos:start="23:69" pos:end="23:70">!=</operator> <literal type="number" pos:start="23:72" pos:end="23:72">0</literal></expr>)</condition> <block pos:start="23:75" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:64">

        <expr_stmt pos:start="25:9" pos:end="27:64"><expr pos:start="25:9" pos:end="27:63"><call pos:start="25:9" pos:end="27:63"><name pos:start="25:9" pos:end="25:16">snprintf</name><argument_list pos:start="25:17" pos:end="27:63">(<argument pos:start="25:18" pos:end="25:30"><expr pos:start="25:18" pos:end="25:30"><name pos:start="25:18" pos:end="25:30"><name pos:start="25:18" pos:end="25:20">chr</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:30">filename</name></name></expr></argument>, <argument pos:start="25:33" pos:end="25:53"><expr pos:start="25:33" pos:end="25:53"><name pos:start="25:33" pos:end="25:53">CHR_MAX_FILENAME_SIZE</name></expr></argument>,

                 <argument pos:start="27:18" pos:end="27:45"><expr pos:start="27:18" pos:end="27:45"><literal type="string" pos:start="27:18" pos:end="27:45">"Error in getpeername: %s\n"</literal></expr></argument>, <argument pos:start="27:48" pos:end="27:62"><expr pos:start="27:48" pos:end="27:62"><call pos:start="27:48" pos:end="27:62"><name pos:start="27:48" pos:end="27:55">strerror</name><argument_list pos:start="27:56" pos:end="27:62">(<argument pos:start="27:57" pos:end="27:61"><expr pos:start="27:57" pos:end="27:61"><name pos:start="27:57" pos:end="27:61">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="37:5">else <block pos:start="29:12" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:52">

        <expr_stmt pos:start="31:9" pos:end="35:52"><expr pos:start="31:9" pos:end="35:51"><call pos:start="31:9" pos:end="35:51"><name pos:start="31:9" pos:end="31:23">sockaddr_to_str</name><argument_list pos:start="31:24" pos:end="35:51">(<argument pos:start="31:25" pos:end="31:37"><expr pos:start="31:25" pos:end="31:37"><name pos:start="31:25" pos:end="31:37"><name pos:start="31:25" pos:end="31:27">chr</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:37">filename</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:60"><expr pos:start="31:40" pos:end="31:60"><name pos:start="31:40" pos:end="31:60">CHR_MAX_FILENAME_SIZE</name></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:27">ss</name></expr></argument>, <argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:35">ss_len</name></expr></argument>, <argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><operator pos:start="33:38" pos:end="33:38">&amp;</operator><name pos:start="33:39" pos:end="33:40">ps</name></expr></argument>, <argument pos:start="33:43" pos:end="33:48"><expr pos:start="33:43" pos:end="33:48"><name pos:start="33:43" pos:end="33:48">ps_len</name></expr></argument>,

                        <argument pos:start="35:25" pos:end="35:36"><expr pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:36">is_listen</name></name></expr></argument>, <argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><name pos:start="35:39" pos:end="35:50"><name pos:start="35:39" pos:end="35:39">s</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:50">is_telnet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:21"><expr pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:16">connected</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <literal type="number" pos:start="41:20" pos:end="41:20">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:15">chan</name></name></expr>)</condition> <block pos:start="43:18" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:62">

        <expr_stmt pos:start="45:9" pos:end="47:62"><expr pos:start="45:9" pos:end="47:61"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:11">chr</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:22">fd_in_tag</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="47:61"><name pos:start="45:26" pos:end="45:42">io_add_watch_poll</name><argument_list pos:start="45:43" pos:end="47:61">(<argument pos:start="45:44" pos:end="45:50"><expr pos:start="45:44" pos:end="45:50"><name pos:start="45:44" pos:end="45:50"><name pos:start="45:44" pos:end="45:44">s</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:50">chan</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:69"><expr pos:start="45:53" pos:end="45:69"><name pos:start="45:53" pos:end="45:69">tcp_chr_read_poll</name></expr></argument>,

                                           <argument pos:start="47:44" pos:end="47:55"><expr pos:start="47:44" pos:end="47:55"><name pos:start="47:44" pos:end="47:55">tcp_chr_read</name></expr></argument>, <argument pos:start="47:58" pos:end="47:60"><expr pos:start="47:58" pos:end="47:60"><name pos:start="47:58" pos:end="47:60">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><call pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:28">qemu_chr_be_generic_open</name><argument_list pos:start="51:29" pos:end="51:33">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
