<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6231.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">curses_display_init</name><parameter_list pos:start="1:25" pos:end="1:59">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:37">DisplayState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">ds</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:58">full_screen</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:30">

<cpp:ifndef pos:start="5:1" pos:end="5:14">#<cpp:directive pos:start="5:2" pos:end="5:7">ifndef</cpp:directive> <name pos:start="5:9" pos:end="5:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="7:5" pos:end="16:0"><if pos:start="7:5" pos:end="16:0">if <condition pos:start="7:8" pos:end="7:19">(<expr pos:start="7:9" pos:end="7:18"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:15">isatty</name><argument_list pos:start="7:16" pos:end="7:18">(<argument pos:start="7:17" pos:end="7:17"><expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:21" pos:end="16:0">{<block_content pos:start="9:9" pos:end="11:16">

        <expr_stmt pos:start="9:9" pos:end="9:55"><expr pos:start="9:9" pos:end="9:54"><call pos:start="9:9" pos:end="9:54"><name pos:start="9:9" pos:end="9:15">fprintf</name><argument_list pos:start="9:16" pos:end="9:54">(<argument pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:22">stderr</name></expr></argument>, <argument pos:start="9:25" pos:end="9:53"><expr pos:start="9:25" pos:end="9:53"><literal type="string" pos:start="9:25" pos:end="9:53">"We need a terminal output\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><call pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:12">exit</name><argument_list pos:start="11:13" pos:end="11:15">(<argument pos:start="11:14" pos:end="11:14"><expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">curses_setup</name><argument_list pos:start="19:17" pos:end="19:18">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><call pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:25">curses_keyboard_setup</name><argument_list pos:start="21:26" pos:end="21:27">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="28:0"><expr pos:start="23:5" pos:end="23:25"><call pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:10">atexit</name><argument_list pos:start="23:11" pos:end="23:25">(<argument pos:start="23:12" pos:end="23:24"><expr pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:24">curses_atexit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifndef pos:start="27:1" pos:end="27:14">#<cpp:directive pos:start="27:2" pos:end="27:7">ifndef</cpp:directive> <name pos:start="27:9" pos:end="27:14">_WIN32</name></cpp:ifndef>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><call pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:10">signal</name><argument_list pos:start="29:11" pos:end="29:27">(<argument pos:start="29:12" pos:end="29:17"><expr pos:start="29:12" pos:end="29:17"><name pos:start="29:12" pos:end="29:17">SIGINT</name></expr></argument>, <argument pos:start="29:20" pos:end="29:26"><expr pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:26">SIG_DFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:28"><call pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:10">signal</name><argument_list pos:start="31:11" pos:end="31:28">(<argument pos:start="31:12" pos:end="31:18"><expr pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:18">SIGQUIT</name></expr></argument>, <argument pos:start="31:21" pos:end="31:27"><expr pos:start="31:21" pos:end="31:27"><name pos:start="31:21" pos:end="31:27">SIG_DFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="33:1" pos:end="33:44">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:44"><call pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:21">(<argument pos:start="33:13" pos:end="33:20"><expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:20">SIGWINCH</name></expr></argument>)</argument_list></call> <operator pos:start="33:23" pos:end="33:24">&amp;&amp;</operator> <call pos:start="33:26" pos:end="33:44"><name pos:start="33:26" pos:end="33:32">defined</name><argument_list pos:start="33:33" pos:end="33:44">(<argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:43">KEY_RESIZE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="35:5" pos:end="37:67">/* some curses implementations provide a handler, but we

     * want to be sure this is handled regardless of the library */</comment>

    <expr_stmt pos:start="39:5" pos:end="44:0"><expr pos:start="39:5" pos:end="39:42"><call pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:10">signal</name><argument_list pos:start="39:11" pos:end="39:42">(<argument pos:start="39:12" pos:end="39:19"><expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:19">SIGWINCH</name></expr></argument>, <argument pos:start="39:22" pos:end="39:41"><expr pos:start="39:22" pos:end="39:41"><name pos:start="39:22" pos:end="39:41">curses_winch_handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:6">ds</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:12">data</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:20">void</name> <operator pos:start="47:22" pos:end="47:22">*</operator><operator pos:start="47:23" pos:end="47:23">)</operator> <name pos:start="47:25" pos:end="47:30">screen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:6">ds</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:16">linesize</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:6">ds</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:13">depth</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:20"><expr pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:6">ds</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">width</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <literal type="number" pos:start="53:17" pos:end="53:19">640</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:6">ds</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:14">height</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:20">400</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:35"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:6">ds</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:18">dpy_update</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:34">curses_update</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:6">ds</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:18">dpy_resize</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:34">curses_resize</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:6">ds</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:19">dpy_refresh</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:36">curses_refresh</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:49"><expr pos:start="63:5" pos:end="63:48"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:6">ds</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:23">dpy_text_cursor</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:48">curses_cursor_position</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:19"><expr pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:14">invalidate</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:51">/* Standard VGA initial text mode dimensions */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><call pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:17">curses_resize</name><argument_list pos:start="73:18" pos:end="73:29">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">ds</name></expr></argument>, <argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><literal type="number" pos:start="73:23" pos:end="73:24">80</literal></expr></argument>, <argument pos:start="73:27" pos:end="73:28"><expr pos:start="73:27" pos:end="73:28"><literal type="number" pos:start="73:27" pos:end="73:28">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
