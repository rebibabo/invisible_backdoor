<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6483.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="89:1"><decl pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_get_best_fcode</name><argument_list pos:start="1:22" pos:end="1:75">(<argument pos:start="1:23" pos:end="1:40"><expr pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:36">MpegEncContext</name> <operator pos:start="1:38" pos:end="1:38">*</operator> <name pos:start="1:40" pos:end="1:40">s</name></expr></argument>, <argument pos:start="1:43" pos:end="1:64"><expr pos:start="1:43" pos:end="1:64"><call pos:start="1:43" pos:end="1:61"><name pos:start="1:43" pos:end="1:49">int16_t</name> <argument_list pos:start="1:51" pos:end="1:61">(<argument pos:start="1:52" pos:end="1:60"><expr pos:start="1:52" pos:end="1:60"><operator pos:start="1:52" pos:end="1:52">*</operator><name pos:start="1:53" pos:end="1:60">mv_table</name></expr></argument>)</argument_list></call><index pos:start="1:62" pos:end="1:64">[<expr pos:start="1:63" pos:end="1:63"><literal type="number" pos:start="1:63" pos:end="1:63">2</literal></expr>]</index></expr></argument>, <argument pos:start="1:67" pos:end="1:74"><expr pos:start="1:67" pos:end="1:74"><name pos:start="1:67" pos:end="1:69">int</name> <name pos:start="1:71" pos:end="1:74">type</name></expr></argument>)</argument_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">f_code</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="87:5"><if pos:start="9:5" pos:end="83:5">if<condition pos:start="9:7" pos:end="9:29">(<expr pos:start="9:8" pos:end="9:28"><name pos:start="9:8" pos:end="9:19"><name pos:start="9:8" pos:end="9:8">s</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:19">me_method</name></name><operator pos:start="9:20" pos:end="9:21">&gt;=</operator><name pos:start="9:22" pos:end="9:28">ME_EPZS</name></expr>)</condition><block pos:start="9:30" pos:end="83:5">{<block_content pos:start="11:9" pos:end="73:17">

        <decl_stmt pos:start="11:9" pos:end="11:22"><decl pos:start="11:9" pos:end="11:21"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:18">mv_num</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">8</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:17"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>, <decl pos:start="13:16" pos:end="13:16"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:16" pos:end="13:16">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:20"><decl pos:start="15:9" pos:end="15:19"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:17">loose</name><init pos:start="15:18" pos:end="15:19">=<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:40"><decl pos:start="17:9" pos:end="17:39"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:13">UINT8</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type> <name pos:start="17:17" pos:end="17:25">fcode_tab</name><init pos:start="17:26" pos:end="17:39">= <expr pos:start="17:28" pos:end="17:39"><name pos:start="17:28" pos:end="17:39"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:39">fcode_tab</name></name></expr></init></decl>;</decl_stmt>



        <for pos:start="21:9" pos:end="21:39">for<control pos:start="21:12" pos:end="21:26">(<init pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">i</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</init> <condition pos:start="21:18" pos:end="21:21"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:18">i</name><operator pos:start="21:19" pos:end="21:19">&lt;</operator><literal type="number" pos:start="21:20" pos:end="21:20">8</literal></expr>;</condition> <incr pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">i</name><operator pos:start="21:24" pos:end="21:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:28" pos:end="21:39"><block_content pos:start="21:28" pos:end="21:39"> <expr_stmt pos:start="21:28" pos:end="21:39"><expr pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:36"><name pos:start="21:28" pos:end="21:33">mv_num</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">i</name></expr>]</index></name><operator pos:start="21:37" pos:end="21:37">=</operator><literal type="number" pos:start="21:38" pos:end="21:38">0</literal></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="25:9" pos:end="51:9">for<control pos:start="25:12" pos:end="25:37">(<init pos:start="25:13" pos:end="25:16"><expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:13">y</name><operator pos:start="25:14" pos:end="25:14">=</operator><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>;</init> <condition pos:start="25:18" pos:end="25:32"><expr pos:start="25:18" pos:end="25:31"><name pos:start="25:18" pos:end="25:18">y</name><operator pos:start="25:19" pos:end="25:19">&lt;</operator><name pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:31">mb_height</name></name></expr>;</condition> <incr pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:34">y</name><operator pos:start="25:35" pos:end="25:36">++</operator></expr></incr>)</control><block pos:start="25:38" pos:end="51:9">{<block_content pos:start="27:13" pos:end="49:13">

            <decl_stmt pos:start="27:13" pos:end="27:18"><decl pos:start="27:13" pos:end="27:17"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:17">x</name></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:47"><decl pos:start="29:13" pos:end="29:46"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:18">xy</name><init pos:start="29:19" pos:end="29:46">= <expr pos:start="29:21" pos:end="29:46"><operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:22">y</name><operator pos:start="29:23" pos:end="29:23">+</operator><literal type="number" pos:start="29:24" pos:end="29:24">1</literal><operator pos:start="29:25" pos:end="29:25">)</operator><operator pos:start="29:26" pos:end="29:26">*</operator> <operator pos:start="29:28" pos:end="29:28">(</operator><name pos:start="29:29" pos:end="29:39"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:39">mb_width</name></name><operator pos:start="29:40" pos:end="29:40">+</operator><literal type="number" pos:start="29:41" pos:end="29:41">2</literal><operator pos:start="29:42" pos:end="29:42">)</operator> <operator pos:start="29:44" pos:end="29:44">+</operator> <literal type="number" pos:start="29:46" pos:end="29:46">1</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:13">i</name><operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:16">y</name><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:28"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:28">mb_width</name></name></expr>;</expr_stmt>

            <for pos:start="33:13" pos:end="49:13">for<control pos:start="33:16" pos:end="33:40">(<init pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:17">x</name><operator pos:start="33:18" pos:end="33:18">=</operator><literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>;</init> <condition pos:start="33:22" pos:end="33:35"><expr pos:start="33:22" pos:end="33:34"><name pos:start="33:22" pos:end="33:22">x</name><operator pos:start="33:23" pos:end="33:23">&lt;</operator><name pos:start="33:24" pos:end="33:34"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:34">mb_width</name></name></expr>;</condition> <incr pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:37">x</name><operator pos:start="33:38" pos:end="33:39">++</operator></expr></incr>)</control><block pos:start="33:41" pos:end="49:13">{<block_content pos:start="35:17" pos:end="47:21">

                <if_stmt pos:start="35:17" pos:end="43:17"><if pos:start="35:17" pos:end="43:17">if<condition pos:start="35:19" pos:end="35:40">(<expr pos:start="35:20" pos:end="35:39"><name pos:start="35:20" pos:end="35:32"><name pos:start="35:20" pos:end="35:20">s</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:29">mb_type</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">i</name></expr>]</index></name> <operator pos:start="35:34" pos:end="35:34">&amp;</operator> <name pos:start="35:36" pos:end="35:39">type</name></expr>)</condition><block pos:start="35:41" pos:end="43:17">{<block_content pos:start="37:21" pos:end="39:68">

                    <expr_stmt pos:start="37:21" pos:end="37:68"><expr pos:start="37:21" pos:end="37:67"><name pos:start="37:21" pos:end="37:65"><name pos:start="37:21" pos:end="37:26">mv_num</name><index pos:start="37:27" pos:end="37:65">[ <expr pos:start="37:29" pos:end="37:63"><name pos:start="37:29" pos:end="37:63"><name pos:start="37:29" pos:end="37:37">fcode_tab</name><index pos:start="37:38" pos:end="37:63">[<expr pos:start="37:39" pos:end="37:62"><name pos:start="37:39" pos:end="37:53"><name pos:start="37:39" pos:end="37:46">mv_table</name><index pos:start="37:47" pos:end="37:50">[<expr pos:start="37:48" pos:end="37:49"><name pos:start="37:48" pos:end="37:49">xy</name></expr>]</index><index pos:start="37:51" pos:end="37:53">[<expr pos:start="37:52" pos:end="37:52"><literal type="number" pos:start="37:52" pos:end="37:52">0</literal></expr>]</index></name> <operator pos:start="37:55" pos:end="37:55">+</operator> <name pos:start="37:57" pos:end="37:62">MAX_MV</name></expr>]</index></name></expr> ]</index></name><operator pos:start="37:66" pos:end="37:67">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:68"><expr pos:start="39:21" pos:end="39:67"><name pos:start="39:21" pos:end="39:65"><name pos:start="39:21" pos:end="39:26">mv_num</name><index pos:start="39:27" pos:end="39:65">[ <expr pos:start="39:29" pos:end="39:63"><name pos:start="39:29" pos:end="39:63"><name pos:start="39:29" pos:end="39:37">fcode_tab</name><index pos:start="39:38" pos:end="39:63">[<expr pos:start="39:39" pos:end="39:62"><name pos:start="39:39" pos:end="39:53"><name pos:start="39:39" pos:end="39:46">mv_table</name><index pos:start="39:47" pos:end="39:50">[<expr pos:start="39:48" pos:end="39:49"><name pos:start="39:48" pos:end="39:49">xy</name></expr>]</index><index pos:start="39:51" pos:end="39:53">[<expr pos:start="39:52" pos:end="39:52"><literal type="number" pos:start="39:52" pos:end="39:52">1</literal></expr>]</index></name> <operator pos:start="39:55" pos:end="39:55">+</operator> <name pos:start="39:57" pos:end="39:62">MAX_MV</name></expr>]</index></name></expr> ]</index></name><operator pos:start="39:66" pos:end="39:67">++</operator></expr>;</expr_stmt>

<comment type="line" pos:start="41:1" pos:end="41:84">//printf("%d %d %d\n", s-&gt;mv_table[0][i], fcode_tab[s-&gt;mv_table[0][i] + MAX_MV], i);</comment>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:20"><expr pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:17">i</name><operator pos:start="45:18" pos:end="45:19">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:21"><expr pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:18">xy</name><operator pos:start="47:19" pos:end="47:20">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <for pos:start="55:9" pos:end="69:9">for<control pos:start="55:12" pos:end="55:34">(<init pos:start="55:13" pos:end="55:24"><expr pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:13">i</name><operator pos:start="55:14" pos:end="55:14">=</operator><name pos:start="55:15" pos:end="55:23">MAX_FCODE</name></expr>;</init> <condition pos:start="55:26" pos:end="55:29"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:26">i</name><operator pos:start="55:27" pos:end="55:27">&gt;</operator><literal type="number" pos:start="55:28" pos:end="55:28">1</literal></expr>;</condition> <incr pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:31">i</name><operator pos:start="55:32" pos:end="55:33">--</operator></expr></incr>)</control><block pos:start="55:35" pos:end="69:9">{<block_content pos:start="57:13" pos:end="67:40">

            <decl_stmt pos:start="57:13" pos:end="57:26"><decl pos:start="57:13" pos:end="57:25"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:25">threshold</name></decl>;</decl_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:17">loose</name><operator pos:start="59:18" pos:end="59:19">+=</operator> <name pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:26">mv_num</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">i</name></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="63:13" pos:end="65:61"><if pos:start="63:13" pos:end="63:50">if<condition pos:start="63:15" pos:end="63:36">(<expr pos:start="63:16" pos:end="63:35"><name pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:27">pict_type</name></name><operator pos:start="63:28" pos:end="63:29">==</operator><name pos:start="63:30" pos:end="63:35">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="63:38" pos:end="63:50"><block_content pos:start="63:38" pos:end="63:50"> <expr_stmt pos:start="63:38" pos:end="63:50"><expr pos:start="63:38" pos:end="63:49"><name pos:start="63:38" pos:end="63:46">threshold</name><operator pos:start="63:47" pos:end="63:47">=</operator> <literal type="number" pos:start="63:49" pos:end="63:49">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="65:13" pos:end="65:61">else<block type="pseudo" pos:start="65:38" pos:end="65:61"><block_content pos:start="65:38" pos:end="65:61">                     <expr_stmt pos:start="65:38" pos:end="65:61"><expr pos:start="65:38" pos:end="65:60"><name pos:start="65:38" pos:end="65:46">threshold</name><operator pos:start="65:47" pos:end="65:47">=</operator> <name pos:start="65:49" pos:end="65:57"><name pos:start="65:49" pos:end="65:49">s</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:57">mb_num</name></name><operator pos:start="65:58" pos:end="65:58">/</operator><literal type="number" pos:start="65:59" pos:end="65:60">20</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="65:63" pos:end="65:70">//FIXME </comment>

            <if_stmt pos:start="67:13" pos:end="67:40"><if pos:start="67:13" pos:end="67:40">if<condition pos:start="67:15" pos:end="67:33">(<expr pos:start="67:16" pos:end="67:32"><name pos:start="67:16" pos:end="67:20">loose</name> <operator pos:start="67:22" pos:end="67:22">&gt;</operator> <name pos:start="67:24" pos:end="67:32">threshold</name></expr>)</condition><block type="pseudo" pos:start="67:35" pos:end="67:40"><block_content pos:start="67:35" pos:end="67:40"> <break pos:start="67:35" pos:end="67:40">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

<comment type="line" pos:start="71:1" pos:end="71:54">//    printf("fcode: %d type: %d\n", i, s-&gt;pict_type);</comment>

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">i</name></expr>;</return>

<comment type="block" pos:start="75:1" pos:end="81:23">/*        for(i=0; i&lt;=MAX_FCODE; i++){

            printf("%d ", mv_num[i]);

        }

        printf("\n");*/</comment>

    </block_content>}</block></if><else pos:start="83:6" pos:end="87:5">else<block pos:start="83:10" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:17">

        <return pos:start="85:9" pos:end="85:17">return <expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></decl></decl_stmt>
</unit>
