<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20446.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">s390_pcihost_hot_unplug</name><parameter_list pos:start="1:36" pos:end="3:67">(<parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:50">HotplugHandler</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:63">hotplug_dev</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:52"><decl pos:start="3:37" pos:end="3:52"><type pos:start="3:37" pos:end="3:52"><name pos:start="3:37" pos:end="3:47">DeviceState</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">dev</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:66"><decl pos:start="3:55" pos:end="3:66"><type pos:start="3:55" pos:end="3:66"><name pos:start="3:55" pos:end="3:59">Error</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier><modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:35">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:22">pci_dev</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">PCIBus</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int32_t</name></type> <name pos:start="11:13" pos:end="11:17">devfn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">S390PCIBusDevice</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:27">pbdev</name> <init pos:start="13:29" pos:end="13:34">= <expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">S390pciState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:19">s</name> <init pos:start="15:21" pos:end="15:36">= <expr pos:start="15:23" pos:end="15:36"><call pos:start="15:23" pos:end="15:36"><name pos:start="15:23" pos:end="15:34">s390_get_phb</name><argument_list pos:start="15:35" pos:end="15:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="49:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:58">(<expr pos:start="19:9" pos:end="19:57"><call pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:27">object_dynamic_cast</name><argument_list pos:start="19:28" pos:end="19:57">(<argument pos:start="19:29" pos:end="19:39"><expr pos:start="19:29" pos:end="19:39"><call pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:34">OBJECT</name><argument_list pos:start="19:35" pos:end="19:39">(<argument pos:start="19:36" pos:end="19:38"><expr pos:start="19:36" pos:end="19:38"><name pos:start="19:36" pos:end="19:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:42" pos:end="19:56"><expr pos:start="19:42" pos:end="19:56"><name pos:start="19:42" pos:end="19:56">TYPE_PCI_BRIDGE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:60" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:74"><expr pos:start="21:9" pos:end="21:73"><call pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:18">error_setg</name><argument_list pos:start="21:19" pos:end="21:73">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">errp</name></expr></argument>, <argument pos:start="21:26" pos:end="21:72"><expr pos:start="21:26" pos:end="21:72"><literal type="string" pos:start="21:26" pos:end="21:72">"PCI bridge hot unplug currently not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="43:5">else if <condition pos:start="25:15" pos:end="25:65">(<expr pos:start="25:16" pos:end="25:64"><call pos:start="25:16" pos:end="25:64"><name pos:start="25:16" pos:end="25:34">object_dynamic_cast</name><argument_list pos:start="25:35" pos:end="25:64">(<argument pos:start="25:36" pos:end="25:46"><expr pos:start="25:36" pos:end="25:46"><call pos:start="25:36" pos:end="25:46"><name pos:start="25:36" pos:end="25:41">OBJECT</name><argument_list pos:start="25:42" pos:end="25:46">(<argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:49" pos:end="25:63"><expr pos:start="25:49" pos:end="25:63"><name pos:start="25:49" pos:end="25:63">TYPE_PCI_DEVICE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:67" pos:end="43:5">{<block_content pos:start="27:9" pos:end="41:30">

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:15">pci_dev</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:33"><name pos:start="27:19" pos:end="27:28">PCI_DEVICE</name><argument_list pos:start="27:29" pos:end="27:33">(<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <macro pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:22">QTAILQ_FOREACH</name><argument_list pos:start="31:23" pos:end="31:50">(<argument pos:start="31:24" pos:end="31:28">pbdev</argument>, <argument pos:start="31:31" pos:end="31:43">&amp;s-&gt;zpci_devs</argument>, <argument pos:start="31:46" pos:end="31:49">link</argument>)</argument_list></macro> <block pos:start="31:52" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:13">

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:39">(<expr pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:21">pbdev</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:27">pdev</name></name> <operator pos:start="33:29" pos:end="33:30">==</operator> <name pos:start="33:32" pos:end="33:38">pci_dev</name></expr>)</condition> <block pos:start="33:41" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:22">

                <break pos:start="35:17" pos:end="35:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><call pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:14">assert</name><argument_list pos:start="41:15" pos:end="41:29">(<argument pos:start="41:16" pos:end="41:28"><expr pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:20">pbdev</name> <operator pos:start="41:22" pos:end="41:23">!=</operator> <name pos:start="41:25" pos:end="41:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="49:5">else if <condition pos:start="43:15" pos:end="43:70">(<expr pos:start="43:16" pos:end="43:69"><call pos:start="43:16" pos:end="43:69"><name pos:start="43:16" pos:end="43:34">object_dynamic_cast</name><argument_list pos:start="43:35" pos:end="43:69">(<argument pos:start="43:36" pos:end="43:46"><expr pos:start="43:36" pos:end="43:46"><call pos:start="43:36" pos:end="43:46"><name pos:start="43:36" pos:end="43:41">OBJECT</name><argument_list pos:start="43:42" pos:end="43:46">(<argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:49" pos:end="43:68"><expr pos:start="43:49" pos:end="43:68"><name pos:start="43:49" pos:end="43:68">TYPE_S390_PCI_DEVICE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:72" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:30">

        <expr_stmt pos:start="45:9" pos:end="45:37"><expr pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:13">pbdev</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:36"><name pos:start="45:17" pos:end="45:31">S390_PCI_DEVICE</name><argument_list pos:start="45:32" pos:end="45:36">(<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:35">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:15">pci_dev</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:29"><name pos:start="47:19" pos:end="47:23">pbdev</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:29">pdev</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="53:5" pos:end="81:5">switch <condition pos:start="53:12" pos:end="53:25">(<expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:17">pbdev</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">state</name></name></expr>)</condition> <block pos:start="53:27" pos:end="81:5">{<block_content pos:start="55:5" pos:end="79:15">

    <case pos:start="55:5" pos:end="55:26">case <expr pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:25">ZPCI_FS_RESERVED</name></expr>:</case>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">out</name>;</goto>

    <case pos:start="59:5" pos:end="59:25">case <expr pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:24">ZPCI_FS_STANDBY</name></expr>:</case>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <default pos:start="63:5" pos:end="63:12">default:</default>

        <expr_stmt pos:start="65:9" pos:end="67:60"><expr pos:start="65:9" pos:end="67:59"><call pos:start="65:9" pos:end="67:59"><name pos:start="65:9" pos:end="65:36">s390_pci_generate_plug_event</name><argument_list pos:start="65:37" pos:end="67:59">(<argument pos:start="65:38" pos:end="65:65"><expr pos:start="65:38" pos:end="65:65"><name pos:start="65:38" pos:end="65:65">HP_EVENT_DECONFIGURE_REQUEST</name></expr></argument>,

                                     <argument pos:start="67:38" pos:end="67:46"><expr pos:start="67:38" pos:end="67:46"><name pos:start="67:38" pos:end="67:46"><name pos:start="67:38" pos:end="67:42">pbdev</name><operator pos:start="67:43" pos:end="67:44">-&gt;</operator><name pos:start="67:45" pos:end="67:46">fh</name></name></expr></argument>, <argument pos:start="67:49" pos:end="67:58"><expr pos:start="67:49" pos:end="67:58"><name pos:start="67:49" pos:end="67:58"><name pos:start="67:49" pos:end="67:53">pbdev</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:58">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="73:51"><expr pos:start="69:9" pos:end="73:50"><name pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:13">pbdev</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:28">release_timer</name></name> <operator pos:start="69:30" pos:end="69:30">=</operator> <call pos:start="69:32" pos:end="73:50"><name pos:start="69:32" pos:end="69:43">timer_new_ns</name><argument_list pos:start="69:44" pos:end="73:50">(<argument pos:start="69:45" pos:end="69:62"><expr pos:start="69:45" pos:end="69:62"><name pos:start="69:45" pos:end="69:62">QEMU_CLOCK_VIRTUAL</name></expr></argument>,

                                            <argument pos:start="71:45" pos:end="71:65"><expr pos:start="71:45" pos:end="71:65"><name pos:start="71:45" pos:end="71:65">s390_pcihost_timer_cb</name></expr></argument>,

                                            <argument pos:start="73:45" pos:end="73:49"><expr pos:start="73:45" pos:end="73:49"><name pos:start="73:45" pos:end="73:49">pbdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="77:78"><expr pos:start="75:9" pos:end="77:77"><call pos:start="75:9" pos:end="77:77"><name pos:start="75:9" pos:end="75:17">timer_mod</name><argument_list pos:start="75:18" pos:end="77:77">(<argument pos:start="75:19" pos:end="75:38"><expr pos:start="75:19" pos:end="75:38"><name pos:start="75:19" pos:end="75:38"><name pos:start="75:19" pos:end="75:23">pbdev</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:38">release_timer</name></name></expr></argument>,

                  <argument pos:start="77:19" pos:end="77:76"><expr pos:start="77:19" pos:end="77:76"><call pos:start="77:19" pos:end="77:55"><name pos:start="77:19" pos:end="77:35">qemu_clock_get_ns</name><argument_list pos:start="77:36" pos:end="77:55">(<argument pos:start="77:37" pos:end="77:54"><expr pos:start="77:37" pos:end="77:54"><name pos:start="77:37" pos:end="77:54">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call> <operator pos:start="77:57" pos:end="77:57">+</operator> <name pos:start="77:59" pos:end="77:76">HOT_UNPLUG_TIMEOUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:15">return;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:68">(<expr pos:start="85:9" pos:end="85:67"><name pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:13">pbdev</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:28">release_timer</name></name> <operator pos:start="85:30" pos:end="85:31">&amp;&amp;</operator> <call pos:start="85:33" pos:end="85:67"><name pos:start="85:33" pos:end="85:45">timer_pending</name><argument_list pos:start="85:46" pos:end="85:67">(<argument pos:start="85:47" pos:end="85:66"><expr pos:start="85:47" pos:end="85:66"><name pos:start="85:47" pos:end="85:66"><name pos:start="85:47" pos:end="85:51">pbdev</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:66">release_timer</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:70" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:36">

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><call pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:17">timer_del</name><argument_list pos:start="87:18" pos:end="87:39">(<argument pos:start="87:19" pos:end="87:38"><expr pos:start="87:19" pos:end="87:38"><name pos:start="87:19" pos:end="87:38"><name pos:start="87:19" pos:end="87:23">pbdev</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:38">release_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><call pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:18">timer_free</name><argument_list pos:start="89:19" pos:end="89:40">(<argument pos:start="89:20" pos:end="89:39"><expr pos:start="89:20" pos:end="89:39"><name pos:start="89:20" pos:end="89:39"><name pos:start="89:20" pos:end="89:24">pbdev</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:39">release_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:36"><expr pos:start="91:9" pos:end="91:35"><name pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:13">pbdev</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:28">release_timer</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <name pos:start="91:32" pos:end="91:35">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="99:56"><expr pos:start="97:5" pos:end="99:55"><call pos:start="97:5" pos:end="99:55"><name pos:start="97:5" pos:end="97:32">s390_pci_generate_plug_event</name><argument_list pos:start="97:33" pos:end="99:55">(<argument pos:start="97:34" pos:end="97:61"><expr pos:start="97:34" pos:end="97:61"><name pos:start="97:34" pos:end="97:61">HP_EVENT_STANDBY_TO_RESERVED</name></expr></argument>,

                                 <argument pos:start="99:34" pos:end="99:42"><expr pos:start="99:34" pos:end="99:42"><name pos:start="99:34" pos:end="99:42"><name pos:start="99:34" pos:end="99:38">pbdev</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:42">fh</name></name></expr></argument>, <argument pos:start="99:45" pos:end="99:54"><expr pos:start="99:45" pos:end="99:54"><name pos:start="99:45" pos:end="99:54"><name pos:start="99:45" pos:end="99:49">pbdev</name><operator pos:start="99:50" pos:end="99:51">-&gt;</operator><name pos:start="99:52" pos:end="99:54">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:23"><expr pos:start="101:5" pos:end="101:22"><name pos:start="101:5" pos:end="101:7">bus</name> <operator pos:start="101:9" pos:end="101:9">=</operator> <name pos:start="101:11" pos:end="101:22"><name pos:start="101:11" pos:end="101:17">pci_dev</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:22">bus</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:9">devfn</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <name pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:19">pci_dev</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:26">devfn</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:37"><expr pos:start="105:5" pos:end="105:36"><call pos:start="105:5" pos:end="105:36"><name pos:start="105:5" pos:end="105:19">object_unparent</name><argument_list pos:start="105:20" pos:end="105:36">(<argument pos:start="105:21" pos:end="105:35"><expr pos:start="105:21" pos:end="105:35"><call pos:start="105:21" pos:end="105:35"><name pos:start="105:21" pos:end="105:26">OBJECT</name><argument_list pos:start="105:27" pos:end="105:35">(<argument pos:start="105:28" pos:end="105:34"><expr pos:start="105:28" pos:end="105:34"><name pos:start="105:28" pos:end="105:34">pci_dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:30"><expr pos:start="107:5" pos:end="107:29"><call pos:start="107:5" pos:end="107:29"><name pos:start="107:5" pos:end="107:22">s390_pci_msix_free</name><argument_list pos:start="107:23" pos:end="107:29">(<argument pos:start="107:24" pos:end="107:28"><expr pos:start="107:24" pos:end="107:28"><name pos:start="107:24" pos:end="107:28">pbdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:39"><expr pos:start="109:5" pos:end="109:38"><call pos:start="109:5" pos:end="109:38"><name pos:start="109:5" pos:end="109:23">s390_pci_iommu_free</name><argument_list pos:start="109:24" pos:end="109:38">(<argument pos:start="109:25" pos:end="109:25"><expr pos:start="109:25" pos:end="109:25"><name pos:start="109:25" pos:end="109:25">s</name></expr></argument>, <argument pos:start="109:28" pos:end="109:30"><expr pos:start="109:28" pos:end="109:30"><name pos:start="109:28" pos:end="109:30">bus</name></expr></argument>, <argument pos:start="109:33" pos:end="109:37"><expr pos:start="109:33" pos:end="109:37"><name pos:start="109:33" pos:end="109:37">devfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:23"><expr pos:start="111:5" pos:end="111:22"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:9">pbdev</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:15">pdev</name></name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:36"><expr pos:start="113:5" pos:end="113:35"><name pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:9">pbdev</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:16">state</name></name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:35">ZPCI_FS_RESERVED</name></expr>;</expr_stmt>

<label pos:start="115:1" pos:end="115:4"><name pos:start="115:1" pos:end="115:3">out</name>:</label>

    <expr_stmt pos:start="117:5" pos:end="117:19"><expr pos:start="117:5" pos:end="117:18"><name pos:start="117:5" pos:end="117:14"><name pos:start="117:5" pos:end="117:9">pbdev</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:14">fid</name></name> <operator pos:start="117:16" pos:end="117:16">=</operator> <literal type="number" pos:start="117:18" pos:end="117:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:46"><expr pos:start="119:5" pos:end="119:45"><call pos:start="119:5" pos:end="119:45"><name pos:start="119:5" pos:end="119:17">QTAILQ_REMOVE</name><argument_list pos:start="119:18" pos:end="119:45">(<argument pos:start="119:19" pos:end="119:31"><expr pos:start="119:19" pos:end="119:31"><operator pos:start="119:19" pos:end="119:19">&amp;</operator><name pos:start="119:20" pos:end="119:31"><name pos:start="119:20" pos:end="119:20">s</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:31">zpci_devs</name></name></expr></argument>, <argument pos:start="119:34" pos:end="119:38"><expr pos:start="119:34" pos:end="119:38"><name pos:start="119:34" pos:end="119:38">pbdev</name></expr></argument>, <argument pos:start="119:41" pos:end="119:44"><expr pos:start="119:41" pos:end="119:44"><name pos:start="119:41" pos:end="119:44">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:52"><expr pos:start="121:5" pos:end="121:51"><call pos:start="121:5" pos:end="121:51"><name pos:start="121:5" pos:end="121:23">g_hash_table_remove</name><argument_list pos:start="121:24" pos:end="121:51">(<argument pos:start="121:25" pos:end="121:37"><expr pos:start="121:25" pos:end="121:37"><name pos:start="121:25" pos:end="121:37"><name pos:start="121:25" pos:end="121:25">s</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:37">zpci_table</name></name></expr></argument>, <argument pos:start="121:40" pos:end="121:50"><expr pos:start="121:40" pos:end="121:50"><operator pos:start="121:40" pos:end="121:40">&amp;</operator><name pos:start="121:41" pos:end="121:50"><name pos:start="121:41" pos:end="121:45">pbdev</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:50">idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:35"><expr pos:start="123:5" pos:end="123:34"><call pos:start="123:5" pos:end="123:34"><name pos:start="123:5" pos:end="123:19">object_unparent</name><argument_list pos:start="123:20" pos:end="123:34">(<argument pos:start="123:21" pos:end="123:33"><expr pos:start="123:21" pos:end="123:33"><call pos:start="123:21" pos:end="123:33"><name pos:start="123:21" pos:end="123:26">OBJECT</name><argument_list pos:start="123:27" pos:end="123:33">(<argument pos:start="123:28" pos:end="123:32"><expr pos:start="123:28" pos:end="123:32"><name pos:start="123:28" pos:end="123:32">pbdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
