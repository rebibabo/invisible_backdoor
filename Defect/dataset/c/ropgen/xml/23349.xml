<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23349.c" pos:tabs="8"><function pos:start="1:1" pos:end="16:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">vmxnet3_post_load</name><parameter_list pos:start="1:29" pos:end="1:58">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:57">version_id</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="16:1">{<block_content pos:start="3:5" pos:end="15:13">
    <decl_stmt pos:start="3:5" pos:end="3:29"><decl pos:start="3:5" pos:end="3:28"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:16">VMXNET3State</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:19">s</name> <init pos:start="3:21" pos:end="3:28">= <expr pos:start="3:23" pos:end="3:28"><name pos:start="3:23" pos:end="3:28">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:33"><decl pos:start="4:5" pos:end="4:32"><type pos:start="4:5" pos:end="4:15"><name pos:start="4:5" pos:end="4:13">PCIDevice</name> <modifier pos:start="4:15" pos:end="4:15">*</modifier></type><name pos:start="4:16" pos:end="4:16">d</name> <init pos:start="4:18" pos:end="4:32">= <expr pos:start="4:20" pos:end="4:32"><call pos:start="4:20" pos:end="4:32"><name pos:start="4:20" pos:end="4:29">PCI_DEVICE</name><argument_list pos:start="4:30" pos:end="4:32">(<argument pos:start="4:31" pos:end="4:31"><expr pos:start="4:31" pos:end="4:31"><name pos:start="4:31" pos:end="4:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:70"><expr pos:start="5:5" pos:end="5:69"><call pos:start="5:5" pos:end="5:69"><name pos:start="5:5" pos:end="5:22">vmxnet_tx_pkt_init</name><argument_list pos:start="5:23" pos:end="5:69">(<argument pos:start="5:24" pos:end="5:33"><expr pos:start="5:24" pos:end="5:33"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">tx_pkt</name></name></expr></argument>, <argument pos:start="5:36" pos:end="5:50"><expr pos:start="5:36" pos:end="5:50"><name pos:start="5:36" pos:end="5:50"><name pos:start="5:36" pos:end="5:36">s</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:50">max_tx_frags</name></name></expr></argument>, <argument pos:start="5:53" pos:end="5:68"><expr pos:start="5:53" pos:end="5:68"><name pos:start="5:53" pos:end="5:68"><name pos:start="5:53" pos:end="5:53">s</name><operator pos:start="5:54" pos:end="5:55">-&gt;</operator><name pos:start="5:56" pos:end="5:68">peer_has_vhdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:53"><expr pos:start="6:5" pos:end="6:52"><call pos:start="6:5" pos:end="6:52"><name pos:start="6:5" pos:end="6:22">vmxnet_rx_pkt_init</name><argument_list pos:start="6:23" pos:end="6:52">(<argument pos:start="6:24" pos:end="6:33"><expr pos:start="6:24" pos:end="6:33"><operator pos:start="6:24" pos:end="6:24">&amp;</operator><name pos:start="6:25" pos:end="6:33"><name pos:start="6:25" pos:end="6:25">s</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:33">rx_pkt</name></name></expr></argument>, <argument pos:start="6:36" pos:end="6:51"><expr pos:start="6:36" pos:end="6:51"><name pos:start="6:36" pos:end="6:51"><name pos:start="6:36" pos:end="6:36">s</name><operator pos:start="6:37" pos:end="6:38">-&gt;</operator><name pos:start="6:39" pos:end="6:51">peer_has_vhdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="14:5"><if pos:start="7:5" pos:end="14:5">if <condition pos:start="7:8" pos:end="7:21">(<expr pos:start="7:9" pos:end="7:20"><name pos:start="7:9" pos:end="7:20"><name pos:start="7:9" pos:end="7:9">s</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:20">msix_used</name></name></expr>)</condition> <block pos:start="7:23" pos:end="14:5">{<block_content pos:start="8:9" pos:end="13:9">
        <if_stmt pos:start="8:9" pos:end="13:9"><if pos:start="8:9" pos:end="13:9">if  <condition pos:start="8:13" pos:end="8:61">(<expr pos:start="8:14" pos:end="8:60"><operator pos:start="8:14" pos:end="8:14">!</operator><call pos:start="8:15" pos:end="8:60"><name pos:start="8:15" pos:end="8:38">vmxnet3_use_msix_vectors</name><argument_list pos:start="8:39" pos:end="8:60">(<argument pos:start="8:40" pos:end="8:40"><expr pos:start="8:40" pos:end="8:40"><name pos:start="8:40" pos:end="8:40">s</name></expr></argument>, <argument pos:start="8:43" pos:end="8:59"><expr pos:start="8:43" pos:end="8:59"><name pos:start="8:43" pos:end="8:59">VMXNET3_MAX_INTRS</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="8:63" pos:end="13:9">{<block_content pos:start="9:13" pos:end="12:22">
            <expr_stmt pos:start="9:13" pos:end="9:56"><expr pos:start="9:13" pos:end="9:55"><call pos:start="9:13" pos:end="9:55"><name pos:start="9:13" pos:end="9:21">VMW_WRPRN</name><argument_list pos:start="9:22" pos:end="9:55">(<argument pos:start="9:23" pos:end="9:54"><expr pos:start="9:23" pos:end="9:54"><literal type="string" pos:start="9:23" pos:end="9:54">"Failed to re-use MSI-X vectors"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="10:13" pos:end="10:55"><expr pos:start="10:13" pos:end="10:54"><call pos:start="10:13" pos:end="10:54"><name pos:start="10:13" pos:end="10:23">msix_uninit</name><argument_list pos:start="10:24" pos:end="10:54">(<argument pos:start="10:25" pos:end="10:25"><expr pos:start="10:25" pos:end="10:25"><name pos:start="10:25" pos:end="10:25">d</name></expr></argument>, <argument pos:start="10:28" pos:end="10:39"><expr pos:start="10:28" pos:end="10:39"><operator pos:start="10:28" pos:end="10:28">&amp;</operator><name pos:start="10:29" pos:end="10:39"><name pos:start="10:29" pos:end="10:29">s</name><operator pos:start="10:30" pos:end="10:31">-&gt;</operator><name pos:start="10:32" pos:end="10:39">msix_bar</name></name></expr></argument>, <argument pos:start="10:42" pos:end="10:53"><expr pos:start="10:42" pos:end="10:53"><operator pos:start="10:42" pos:end="10:42">&amp;</operator><name pos:start="10:43" pos:end="10:53"><name pos:start="10:43" pos:end="10:43">s</name><operator pos:start="10:44" pos:end="10:45">-&gt;</operator><name pos:start="10:46" pos:end="10:53">msix_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:33"><expr pos:start="11:13" pos:end="11:32"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:24">msix_used</name></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <name pos:start="11:28" pos:end="11:32">false</name></expr>;</expr_stmt>
            <return pos:start="12:13" pos:end="12:22">return <expr pos:start="12:20" pos:end="12:21"><operator pos:start="12:20" pos:end="12:20">-</operator><literal type="number" pos:start="12:21" pos:end="12:21">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="15:5" pos:end="15:13">return <expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
