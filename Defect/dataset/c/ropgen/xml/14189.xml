<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14189.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:31"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:34">spapr_create_fdt_skel</name><parameter_list pos:start="1:35" pos:end="7:53">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:41">hwaddr</name></type> <name pos:start="1:43" pos:end="1:53">initrd_base</name></decl></parameter>,
                                   <parameter pos:start="2:36" pos:end="2:53"><decl pos:start="2:36" pos:end="2:53"><type pos:start="2:36" pos:end="2:53"><name pos:start="2:36" pos:end="2:41">hwaddr</name></type> <name pos:start="2:43" pos:end="2:53">initrd_size</name></decl></parameter>,
                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><name pos:start="3:36" pos:end="3:41">hwaddr</name></type> <name pos:start="3:43" pos:end="3:53">kernel_size</name></decl></parameter>,
                                   <parameter pos:start="4:36" pos:end="4:53"><decl pos:start="4:36" pos:end="4:53"><type pos:start="4:36" pos:end="4:53"><name pos:start="4:36" pos:end="4:39">bool</name></type> <name pos:start="4:41" pos:end="4:53">little_endian</name></decl></parameter>,
                                   <parameter pos:start="5:36" pos:end="5:58"><decl pos:start="5:36" pos:end="5:58"><type pos:start="5:36" pos:end="5:58"><specifier pos:start="5:36" pos:end="5:40">const</specifier> <name pos:start="5:42" pos:end="5:45">char</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:58">boot_device</name></decl></parameter>,
                                   <parameter pos:start="6:36" pos:end="6:61"><decl pos:start="6:36" pos:end="6:61"><type pos:start="6:36" pos:end="6:61"><specifier pos:start="6:36" pos:end="6:40">const</specifier> <name pos:start="6:42" pos:end="6:45">char</name> <modifier pos:start="6:47" pos:end="6:47">*</modifier></type><name pos:start="6:48" pos:end="6:61">kernel_cmdline</name></decl></parameter>,
                                   <parameter pos:start="7:36" pos:end="7:52"><decl pos:start="7:36" pos:end="7:52"><type pos:start="7:36" pos:end="7:52"><name pos:start="7:36" pos:end="7:43">uint32_t</name></type> <name pos:start="7:45" pos:end="7:52">epow_irq</name></decl></parameter>)</parameter_list>
<block pos:start="8:1" pos:end="203:31">{<block_content pos:start="9:5" pos:end="203:31">
    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">fdt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:17"><decl pos:start="10:5" pos:end="10:16"><type pos:start="10:5" pos:end="10:14"><name pos:start="10:5" pos:end="10:12">CPUState</name> <modifier pos:start="10:14" pos:end="10:14">*</modifier></type><name pos:start="10:15" pos:end="10:16">cs</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:23">start_prop</name> <init pos:start="11:25" pos:end="11:50">= <expr pos:start="11:27" pos:end="11:50"><call pos:start="11:27" pos:end="11:50"><name pos:start="11:27" pos:end="11:37">cpu_to_be32</name><argument_list pos:start="11:38" pos:end="11:50">(<argument pos:start="11:39" pos:end="11:49"><expr pos:start="11:39" pos:end="11:49"><name pos:start="11:39" pos:end="11:49">initrd_base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:63"><decl pos:start="12:5" pos:end="12:62"><type pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:12">uint32_t</name></type> <name pos:start="12:14" pos:end="12:21">end_prop</name> <init pos:start="12:23" pos:end="12:62">= <expr pos:start="12:25" pos:end="12:62"><call pos:start="12:25" pos:end="12:62"><name pos:start="12:25" pos:end="12:35">cpu_to_be32</name><argument_list pos:start="12:36" pos:end="12:62">(<argument pos:start="12:37" pos:end="12:61"><expr pos:start="12:37" pos:end="12:61"><name pos:start="12:37" pos:end="12:47">initrd_base</name> <operator pos:start="12:49" pos:end="12:49">+</operator> <name pos:start="12:51" pos:end="12:61">initrd_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">GString</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:21">hypertas</name> <init pos:start="13:23" pos:end="13:47">= <expr pos:start="13:25" pos:end="13:47"><call pos:start="13:25" pos:end="13:47"><name pos:start="13:25" pos:end="13:42">g_string_sized_new</name><argument_list pos:start="13:43" pos:end="13:47">(<argument pos:start="13:44" pos:end="13:46"><expr pos:start="13:44" pos:end="13:46"><literal type="number" pos:start="13:44" pos:end="13:46">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:53"><decl pos:start="14:5" pos:end="14:52"><type pos:start="14:5" pos:end="14:13"><name pos:start="14:5" pos:end="14:11">GString</name> <modifier pos:start="14:13" pos:end="14:13">*</modifier></type><name pos:start="14:14" pos:end="14:26">qemu_hypertas</name> <init pos:start="14:28" pos:end="14:52">= <expr pos:start="14:30" pos:end="14:52"><call pos:start="14:30" pos:end="14:52"><name pos:start="14:30" pos:end="14:47">g_string_sized_new</name><argument_list pos:start="14:48" pos:end="14:52">(<argument pos:start="14:49" pos:end="14:51"><expr pos:start="14:49" pos:end="14:51"><literal type="number" pos:start="14:49" pos:end="14:51">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:64"><decl pos:start="15:5" pos:end="15:63"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:24"><name pos:start="15:14" pos:end="15:22">refpoints</name><index pos:start="15:23" pos:end="15:24">[]</index></name> <init pos:start="15:26" pos:end="15:63">= <expr pos:start="15:28" pos:end="15:63"><block pos:start="15:28" pos:end="15:63">{<expr pos:start="15:29" pos:end="15:44"><call pos:start="15:29" pos:end="15:44"><name pos:start="15:29" pos:end="15:39">cpu_to_be32</name><argument_list pos:start="15:40" pos:end="15:44">(<argument pos:start="15:41" pos:end="15:43"><expr pos:start="15:41" pos:end="15:43"><literal type="number" pos:start="15:41" pos:end="15:43">0x4</literal></expr></argument>)</argument_list></call></expr>, <macro pos:start="15:47" pos:end="15:62"><name pos:start="15:47" pos:end="15:57">cpu_to_be32</name><argument_list pos:start="15:58" pos:end="15:62">(<argument pos:start="15:59" pos:end="15:61"><literal type="number" pos:start="15:59" pos:end="15:61">0x4</literal></argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:73"><decl pos:start="16:5" pos:end="16:72"><type pos:start="16:5" pos:end="16:12"><name pos:start="16:5" pos:end="16:12">uint32_t</name></type> <name pos:start="16:14" pos:end="16:43"><name pos:start="16:14" pos:end="16:41">interrupt_server_ranges_prop</name><index pos:start="16:42" pos:end="16:43">[]</index></name> <init pos:start="16:45" pos:end="16:72">= <expr pos:start="16:47" pos:end="16:72"><block pos:start="16:47" pos:end="16:72">{<expr pos:start="16:48" pos:end="16:48"><literal type="number" pos:start="16:48" pos:end="16:48">0</literal></expr>, <macro pos:start="16:51" pos:end="16:71"><name pos:start="16:51" pos:end="16:61">cpu_to_be32</name><argument_list pos:start="16:62" pos:end="16:71">(<argument pos:start="16:63" pos:end="16:70">smp_cpus</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">smt</name> <init pos:start="17:13" pos:end="17:34">= <expr pos:start="17:15" pos:end="17:34"><call pos:start="17:15" pos:end="17:34"><name pos:start="17:15" pos:end="17:32">kvmppc_smt_threads</name><argument_list pos:start="17:33" pos:end="17:34">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="18:5" pos:end="18:59"><decl pos:start="18:5" pos:end="18:58"><type pos:start="18:5" pos:end="18:17"><name pos:start="18:5" pos:end="18:12">unsigned</name> <name pos:start="18:14" pos:end="18:17">char</name></type> <name pos:start="18:19" pos:end="18:24"><name pos:start="18:19" pos:end="18:22">vec5</name><index pos:start="18:23" pos:end="18:24">[]</index></name> <init pos:start="18:26" pos:end="18:58">= <expr pos:start="18:28" pos:end="18:58"><block pos:start="18:28" pos:end="18:58">{<expr pos:start="18:29" pos:end="18:31"><literal type="number" pos:start="18:29" pos:end="18:31">0x0</literal></expr>, <expr pos:start="18:34" pos:end="18:36"><literal type="number" pos:start="18:34" pos:end="18:36">0x0</literal></expr>, <expr pos:start="18:39" pos:end="18:41"><literal type="number" pos:start="18:39" pos:end="18:41">0x0</literal></expr>, <expr pos:start="18:44" pos:end="18:46"><literal type="number" pos:start="18:44" pos:end="18:46">0x0</literal></expr>, <expr pos:start="18:49" pos:end="18:51"><literal type="number" pos:start="18:49" pos:end="18:51">0x0</literal></expr>, <expr pos:start="18:54" pos:end="18:57"><literal type="number" pos:start="18:54" pos:end="18:57">0x80</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="19:5" pos:end="19:70"><decl pos:start="19:5" pos:end="19:69"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">QemuOpts</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:18">opts</name> <init pos:start="19:20" pos:end="19:69">= <expr pos:start="19:22" pos:end="19:69"><call pos:start="19:22" pos:end="19:69"><name pos:start="19:22" pos:end="19:35">qemu_opts_find</name><argument_list pos:start="19:36" pos:end="19:69">(<argument pos:start="19:37" pos:end="19:62"><expr pos:start="19:37" pos:end="19:62"><call pos:start="19:37" pos:end="19:62"><name pos:start="19:37" pos:end="19:50">qemu_find_opts</name><argument_list pos:start="19:51" pos:end="19:62">(<argument pos:start="19:52" pos:end="19:61"><expr pos:start="19:52" pos:end="19:61"><literal type="string" pos:start="19:52" pos:end="19:61">"smp-opts"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:65" pos:end="19:68"><expr pos:start="19:65" pos:end="19:68"><name pos:start="19:65" pos:end="19:68">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:74"><decl pos:start="20:5" pos:end="20:73"><type pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:12">unsigned</name></type> <name pos:start="20:14" pos:end="20:20">sockets</name> <init pos:start="20:22" pos:end="20:73">= <expr pos:start="20:24" pos:end="20:73"><ternary pos:start="20:24" pos:end="20:73"><condition pos:start="20:24" pos:end="20:29"><expr pos:start="20:24" pos:end="20:27"><name pos:start="20:24" pos:end="20:27">opts</name></expr> ?</condition><then pos:start="20:31" pos:end="20:69"> <expr pos:start="20:31" pos:end="20:69"><call pos:start="20:31" pos:end="20:69"><name pos:start="20:31" pos:end="20:49">qemu_opt_get_number</name><argument_list pos:start="20:50" pos:end="20:69">(<argument pos:start="20:51" pos:end="20:54"><expr pos:start="20:51" pos:end="20:54"><name pos:start="20:51" pos:end="20:54">opts</name></expr></argument>, <argument pos:start="20:57" pos:end="20:65"><expr pos:start="20:57" pos:end="20:65"><literal type="string" pos:start="20:57" pos:end="20:65">"sockets"</literal></expr></argument>, <argument pos:start="20:68" pos:end="20:68"><expr pos:start="20:68" pos:end="20:68"><literal type="number" pos:start="20:68" pos:end="20:68">0</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="20:71" pos:end="20:73">: <expr pos:start="20:73" pos:end="20:73"><literal type="number" pos:start="20:73" pos:end="20:73">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:66"><decl pos:start="21:5" pos:end="21:65"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:28">cpus_per_socket</name> <init pos:start="21:30" pos:end="21:65">= <expr pos:start="21:32" pos:end="21:65"><ternary pos:start="21:32" pos:end="21:65"><condition pos:start="21:32" pos:end="21:40"><expr pos:start="21:32" pos:end="21:38"><name pos:start="21:32" pos:end="21:38">sockets</name></expr> ?</condition><then pos:start="21:42" pos:end="21:61"> <expr pos:start="21:42" pos:end="21:61"><operator pos:start="21:42" pos:end="21:42">(</operator><name pos:start="21:43" pos:end="21:50">smp_cpus</name> <operator pos:start="21:52" pos:end="21:52">/</operator> <name pos:start="21:54" pos:end="21:60">sockets</name><operator pos:start="21:61" pos:end="21:61">)</operator></expr> </then><else pos:start="21:63" pos:end="21:65">: <expr pos:start="21:65" pos:end="21:65"><literal type="number" pos:start="21:65" pos:end="21:65">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:35"><expr pos:start="22:5" pos:end="22:34"><call pos:start="22:5" pos:end="22:34"><name pos:start="22:5" pos:end="22:11">add_str</name><argument_list pos:start="22:12" pos:end="22:34">(<argument pos:start="22:13" pos:end="22:20"><expr pos:start="22:13" pos:end="22:20"><name pos:start="22:13" pos:end="22:20">hypertas</name></expr></argument>, <argument pos:start="22:23" pos:end="22:33"><expr pos:start="22:23" pos:end="22:33"><literal type="string" pos:start="22:23" pos:end="22:33">"hcall-pft"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:11">add_str</name><argument_list pos:start="23:12" pos:end="23:35">(<argument pos:start="23:13" pos:end="23:20"><expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:20">hypertas</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><literal type="string" pos:start="23:23" pos:end="23:34">"hcall-term"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:36"><expr pos:start="24:5" pos:end="24:35"><call pos:start="24:5" pos:end="24:35"><name pos:start="24:5" pos:end="24:11">add_str</name><argument_list pos:start="24:12" pos:end="24:35">(<argument pos:start="24:13" pos:end="24:20"><expr pos:start="24:13" pos:end="24:20"><name pos:start="24:13" pos:end="24:20">hypertas</name></expr></argument>, <argument pos:start="24:23" pos:end="24:34"><expr pos:start="24:23" pos:end="24:34"><literal type="string" pos:start="24:23" pos:end="24:34">"hcall-dabr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:11">add_str</name><argument_list pos:start="25:12" pos:end="25:40">(<argument pos:start="25:13" pos:end="25:20"><expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:20">hypertas</name></expr></argument>, <argument pos:start="25:23" pos:end="25:39"><expr pos:start="25:23" pos:end="25:39"><literal type="string" pos:start="25:23" pos:end="25:39">"hcall-interrupt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:35"><expr pos:start="26:5" pos:end="26:34"><call pos:start="26:5" pos:end="26:34"><name pos:start="26:5" pos:end="26:11">add_str</name><argument_list pos:start="26:12" pos:end="26:34">(<argument pos:start="26:13" pos:end="26:20"><expr pos:start="26:13" pos:end="26:20"><name pos:start="26:13" pos:end="26:20">hypertas</name></expr></argument>, <argument pos:start="26:23" pos:end="26:33"><expr pos:start="26:23" pos:end="26:33"><literal type="string" pos:start="26:23" pos:end="26:33">"hcall-tce"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:11">add_str</name><argument_list pos:start="27:12" pos:end="27:34">(<argument pos:start="27:13" pos:end="27:20"><expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:20">hypertas</name></expr></argument>, <argument pos:start="27:23" pos:end="27:33"><expr pos:start="27:23" pos:end="27:33"><literal type="string" pos:start="27:23" pos:end="27:33">"hcall-vio"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:38"><expr pos:start="28:5" pos:end="28:37"><call pos:start="28:5" pos:end="28:37"><name pos:start="28:5" pos:end="28:11">add_str</name><argument_list pos:start="28:12" pos:end="28:37">(<argument pos:start="28:13" pos:end="28:20"><expr pos:start="28:13" pos:end="28:20"><name pos:start="28:13" pos:end="28:20">hypertas</name></expr></argument>, <argument pos:start="28:23" pos:end="28:36"><expr pos:start="28:23" pos:end="28:36"><literal type="string" pos:start="28:23" pos:end="28:36">"hcall-splpar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:11">add_str</name><argument_list pos:start="29:12" pos:end="29:35">(<argument pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:20">hypertas</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><literal type="string" pos:start="29:23" pos:end="29:34">"hcall-bulk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:40"><expr pos:start="30:5" pos:end="30:39"><call pos:start="30:5" pos:end="30:39"><name pos:start="30:5" pos:end="30:11">add_str</name><argument_list pos:start="30:12" pos:end="30:39">(<argument pos:start="30:13" pos:end="30:20"><expr pos:start="30:13" pos:end="30:20"><name pos:start="30:13" pos:end="30:20">hypertas</name></expr></argument>, <argument pos:start="30:23" pos:end="30:38"><expr pos:start="30:23" pos:end="30:38"><literal type="string" pos:start="30:23" pos:end="30:38">"hcall-set-mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><call pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:11">add_str</name><argument_list pos:start="31:12" pos:end="31:42">(<argument pos:start="31:13" pos:end="31:25"><expr pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:25">qemu_hypertas</name></expr></argument>, <argument pos:start="31:28" pos:end="31:41"><expr pos:start="31:28" pos:end="31:41"><literal type="string" pos:start="31:28" pos:end="31:41">"hcall-memop1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:34"><expr pos:start="32:5" pos:end="32:33"><name pos:start="32:5" pos:end="32:7">fdt</name> <operator pos:start="32:9" pos:end="32:9">=</operator> <call pos:start="32:11" pos:end="32:33"><name pos:start="32:11" pos:end="32:19">g_malloc0</name><argument_list pos:start="32:20" pos:end="32:33">(<argument pos:start="32:21" pos:end="32:32"><expr pos:start="32:21" pos:end="32:32"><name pos:start="32:21" pos:end="32:32">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:8">_FDT</name><argument_list pos:start="33:9" pos:end="33:41">(<argument pos:start="33:10" pos:end="33:40"><expr pos:start="33:10" pos:end="33:40"><operator pos:start="33:10" pos:end="33:10">(</operator><call pos:start="33:11" pos:end="33:39"><name pos:start="33:11" pos:end="33:20">fdt_create</name><argument_list pos:start="33:21" pos:end="33:39">(<argument pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:24">fdt</name></expr></argument>, <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="33:40" pos:end="33:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="34:5" pos:end="36:5"><if pos:start="34:5" pos:end="36:5">if <condition pos:start="34:8" pos:end="34:20">(<expr pos:start="34:9" pos:end="34:19"><name pos:start="34:9" pos:end="34:19">kernel_size</name></expr>)</condition> <block pos:start="34:22" pos:end="36:5">{<block_content pos:start="35:9" pos:end="35:77">
        <expr_stmt pos:start="35:9" pos:end="35:77"><expr pos:start="35:9" pos:end="35:76"><call pos:start="35:9" pos:end="35:76"><name pos:start="35:9" pos:end="35:12">_FDT</name><argument_list pos:start="35:13" pos:end="35:76">(<argument pos:start="35:14" pos:end="35:75"><expr pos:start="35:14" pos:end="35:75"><operator pos:start="35:14" pos:end="35:14">(</operator><call pos:start="35:15" pos:end="35:74"><name pos:start="35:15" pos:end="35:38">fdt_add_reservemap_entry</name><argument_list pos:start="35:39" pos:end="35:74">(<argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:42">fdt</name></expr></argument>, <argument pos:start="35:45" pos:end="35:60"><expr pos:start="35:45" pos:end="35:60"><name pos:start="35:45" pos:end="35:60">KERNEL_LOAD_ADDR</name></expr></argument>, <argument pos:start="35:63" pos:end="35:73"><expr pos:start="35:63" pos:end="35:73"><name pos:start="35:63" pos:end="35:73">kernel_size</name></expr></argument>)</argument_list></call><operator pos:start="35:75" pos:end="35:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="37:5" pos:end="39:5"><if pos:start="37:5" pos:end="39:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:19">initrd_size</name></expr>)</condition> <block pos:start="37:22" pos:end="39:5">{<block_content pos:start="38:9" pos:end="38:72">
        <expr_stmt pos:start="38:9" pos:end="38:72"><expr pos:start="38:9" pos:end="38:71"><call pos:start="38:9" pos:end="38:71"><name pos:start="38:9" pos:end="38:12">_FDT</name><argument_list pos:start="38:13" pos:end="38:71">(<argument pos:start="38:14" pos:end="38:70"><expr pos:start="38:14" pos:end="38:70"><operator pos:start="38:14" pos:end="38:14">(</operator><call pos:start="38:15" pos:end="38:69"><name pos:start="38:15" pos:end="38:38">fdt_add_reservemap_entry</name><argument_list pos:start="38:39" pos:end="38:69">(<argument pos:start="38:40" pos:end="38:42"><expr pos:start="38:40" pos:end="38:42"><name pos:start="38:40" pos:end="38:42">fdt</name></expr></argument>, <argument pos:start="38:45" pos:end="38:55"><expr pos:start="38:45" pos:end="38:55"><name pos:start="38:45" pos:end="38:55">initrd_base</name></expr></argument>, <argument pos:start="38:58" pos:end="38:68"><expr pos:start="38:58" pos:end="38:68"><name pos:start="38:58" pos:end="38:68">initrd_size</name></expr></argument>)</argument_list></call><operator pos:start="38:70" pos:end="38:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:39"><expr pos:start="40:5" pos:end="40:38"><call pos:start="40:5" pos:end="40:38"><name pos:start="40:5" pos:end="40:8">_FDT</name><argument_list pos:start="40:9" pos:end="40:38">(<argument pos:start="40:10" pos:end="40:37"><expr pos:start="40:10" pos:end="40:37"><operator pos:start="40:10" pos:end="40:10">(</operator><call pos:start="40:11" pos:end="40:36"><name pos:start="40:11" pos:end="40:31">fdt_finish_reservemap</name><argument_list pos:start="40:32" pos:end="40:36">(<argument pos:start="40:33" pos:end="40:35"><expr pos:start="40:33" pos:end="40:35"><name pos:start="40:33" pos:end="40:35">fdt</name></expr></argument>)</argument_list></call><operator pos:start="40:37" pos:end="40:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="41:5" pos:end="41:19">/* Root node */</comment>
    <expr_stmt pos:start="42:5" pos:end="42:36"><expr pos:start="42:5" pos:end="42:35"><call pos:start="42:5" pos:end="42:35"><name pos:start="42:5" pos:end="42:8">_FDT</name><argument_list pos:start="42:9" pos:end="42:35">(<argument pos:start="42:10" pos:end="42:34"><expr pos:start="42:10" pos:end="42:34"><operator pos:start="42:10" pos:end="42:10">(</operator><call pos:start="42:11" pos:end="42:33"><name pos:start="42:11" pos:end="42:24">fdt_begin_node</name><argument_list pos:start="42:25" pos:end="42:33">(<argument pos:start="42:26" pos:end="42:28"><expr pos:start="42:26" pos:end="42:28"><name pos:start="42:26" pos:end="42:28">fdt</name></expr></argument>, <argument pos:start="42:31" pos:end="42:32"><expr pos:start="42:31" pos:end="42:32"><literal type="string" pos:start="42:31" pos:end="42:32">""</literal></expr></argument>)</argument_list></call><operator pos:start="42:34" pos:end="42:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:60"><expr pos:start="43:5" pos:end="43:59"><call pos:start="43:5" pos:end="43:59"><name pos:start="43:5" pos:end="43:8">_FDT</name><argument_list pos:start="43:9" pos:end="43:59">(<argument pos:start="43:10" pos:end="43:58"><expr pos:start="43:10" pos:end="43:58"><operator pos:start="43:10" pos:end="43:10">(</operator><call pos:start="43:11" pos:end="43:57"><name pos:start="43:11" pos:end="43:29">fdt_property_string</name><argument_list pos:start="43:30" pos:end="43:57">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">fdt</name></expr></argument>, <argument pos:start="43:36" pos:end="43:48"><expr pos:start="43:36" pos:end="43:48"><literal type="string" pos:start="43:36" pos:end="43:48">"device_type"</literal></expr></argument>, <argument pos:start="43:51" pos:end="43:56"><expr pos:start="43:51" pos:end="43:56"><literal type="string" pos:start="43:51" pos:end="43:56">"chrp"</literal></expr></argument>)</argument_list></call><operator pos:start="43:58" pos:end="43:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:80"><expr pos:start="44:5" pos:end="44:79"><call pos:start="44:5" pos:end="44:79"><name pos:start="44:5" pos:end="44:8">_FDT</name><argument_list pos:start="44:9" pos:end="44:79">(<argument pos:start="44:10" pos:end="44:78"><expr pos:start="44:10" pos:end="44:78"><operator pos:start="44:10" pos:end="44:10">(</operator><call pos:start="44:11" pos:end="44:77"><name pos:start="44:11" pos:end="44:29">fdt_property_string</name><argument_list pos:start="44:30" pos:end="44:77">(<argument pos:start="44:31" pos:end="44:33"><expr pos:start="44:31" pos:end="44:33"><name pos:start="44:31" pos:end="44:33">fdt</name></expr></argument>, <argument pos:start="44:36" pos:end="44:42"><expr pos:start="44:36" pos:end="44:42"><literal type="string" pos:start="44:36" pos:end="44:42">"model"</literal></expr></argument>, <argument pos:start="44:45" pos:end="44:76"><expr pos:start="44:45" pos:end="44:76"><literal type="string" pos:start="44:45" pos:end="44:76">"IBM pSeries (emulated by qemu)"</literal></expr></argument>)</argument_list></call><operator pos:start="44:78" pos:end="44:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:67"><expr pos:start="45:5" pos:end="45:66"><call pos:start="45:5" pos:end="45:66"><name pos:start="45:5" pos:end="45:8">_FDT</name><argument_list pos:start="45:9" pos:end="45:66">(<argument pos:start="45:10" pos:end="45:65"><expr pos:start="45:10" pos:end="45:65"><operator pos:start="45:10" pos:end="45:10">(</operator><call pos:start="45:11" pos:end="45:64"><name pos:start="45:11" pos:end="45:29">fdt_property_string</name><argument_list pos:start="45:30" pos:end="45:64">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">fdt</name></expr></argument>, <argument pos:start="45:36" pos:end="45:47"><expr pos:start="45:36" pos:end="45:47"><literal type="string" pos:start="45:36" pos:end="45:47">"compatible"</literal></expr></argument>, <argument pos:start="45:50" pos:end="45:63"><expr pos:start="45:50" pos:end="45:63"><literal type="string" pos:start="45:50" pos:end="45:63">"qemu,pseries"</literal></expr></argument>)</argument_list></call><operator pos:start="45:65" pos:end="45:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="46:5" pos:end="46:58"><expr pos:start="46:5" pos:end="46:57"><call pos:start="46:5" pos:end="46:57"><name pos:start="46:5" pos:end="46:8">_FDT</name><argument_list pos:start="46:9" pos:end="46:57">(<argument pos:start="46:10" pos:end="46:56"><expr pos:start="46:10" pos:end="46:56"><operator pos:start="46:10" pos:end="46:10">(</operator><call pos:start="46:11" pos:end="46:55"><name pos:start="46:11" pos:end="46:27">fdt_property_cell</name><argument_list pos:start="46:28" pos:end="46:55">(<argument pos:start="46:29" pos:end="46:31"><expr pos:start="46:29" pos:end="46:31"><name pos:start="46:29" pos:end="46:31">fdt</name></expr></argument>, <argument pos:start="46:34" pos:end="46:49"><expr pos:start="46:34" pos:end="46:49"><literal type="string" pos:start="46:34" pos:end="46:49">"#address-cells"</literal></expr></argument>, <argument pos:start="46:52" pos:end="46:54"><expr pos:start="46:52" pos:end="46:54"><literal type="number" pos:start="46:52" pos:end="46:54">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="46:56" pos:end="46:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:55"><expr pos:start="47:5" pos:end="47:54"><call pos:start="47:5" pos:end="47:54"><name pos:start="47:5" pos:end="47:8">_FDT</name><argument_list pos:start="47:9" pos:end="47:54">(<argument pos:start="47:10" pos:end="47:53"><expr pos:start="47:10" pos:end="47:53"><operator pos:start="47:10" pos:end="47:10">(</operator><call pos:start="47:11" pos:end="47:52"><name pos:start="47:11" pos:end="47:27">fdt_property_cell</name><argument_list pos:start="47:28" pos:end="47:52">(<argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:31">fdt</name></expr></argument>, <argument pos:start="47:34" pos:end="47:46"><expr pos:start="47:34" pos:end="47:46"><literal type="string" pos:start="47:34" pos:end="47:46">"#size-cells"</literal></expr></argument>, <argument pos:start="47:49" pos:end="47:51"><expr pos:start="47:49" pos:end="47:51"><literal type="number" pos:start="47:49" pos:end="47:51">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="47:53" pos:end="47:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="48:5" pos:end="48:17">/* /chosen */</comment>
    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><call pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:8">_FDT</name><argument_list pos:start="49:9" pos:end="49:41">(<argument pos:start="49:10" pos:end="49:40"><expr pos:start="49:10" pos:end="49:40"><operator pos:start="49:10" pos:end="49:10">(</operator><call pos:start="49:11" pos:end="49:39"><name pos:start="49:11" pos:end="49:24">fdt_begin_node</name><argument_list pos:start="49:25" pos:end="49:39">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">fdt</name></expr></argument>, <argument pos:start="49:31" pos:end="49:38"><expr pos:start="49:31" pos:end="49:38"><literal type="string" pos:start="49:31" pos:end="49:38">"chosen"</literal></expr></argument>)</argument_list></call><operator pos:start="49:40" pos:end="49:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="50:5" pos:end="50:28">/* Set Form1_affinity */</comment>
    <expr_stmt pos:start="51:5" pos:end="51:76"><expr pos:start="51:5" pos:end="51:75"><call pos:start="51:5" pos:end="51:75"><name pos:start="51:5" pos:end="51:8">_FDT</name><argument_list pos:start="51:9" pos:end="51:75">(<argument pos:start="51:10" pos:end="51:74"><expr pos:start="51:10" pos:end="51:74"><operator pos:start="51:10" pos:end="51:10">(</operator><call pos:start="51:11" pos:end="51:73"><name pos:start="51:11" pos:end="51:22">fdt_property</name><argument_list pos:start="51:23" pos:end="51:73">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">fdt</name></expr></argument>, <argument pos:start="51:29" pos:end="51:52"><expr pos:start="51:29" pos:end="51:52"><literal type="string" pos:start="51:29" pos:end="51:52">"ibm,architecture-vec-5"</literal></expr></argument>, <argument pos:start="51:55" pos:end="51:58"><expr pos:start="51:55" pos:end="51:58"><name pos:start="51:55" pos:end="51:58">vec5</name></expr></argument>, <argument pos:start="51:61" pos:end="51:72"><expr pos:start="51:61" pos:end="51:72"><sizeof pos:start="51:61" pos:end="51:72">sizeof<argument_list pos:start="51:67" pos:end="51:72">(<argument pos:start="51:68" pos:end="51:71"><expr pos:start="51:68" pos:end="51:71"><name pos:start="51:68" pos:end="51:71">vec5</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="51:74" pos:end="51:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="52:5" pos:end="52:65"><expr pos:start="52:5" pos:end="52:64"><call pos:start="52:5" pos:end="52:64"><name pos:start="52:5" pos:end="52:8">_FDT</name><argument_list pos:start="52:9" pos:end="52:64">(<argument pos:start="52:10" pos:end="52:63"><expr pos:start="52:10" pos:end="52:63"><operator pos:start="52:10" pos:end="52:10">(</operator><call pos:start="52:11" pos:end="52:62"><name pos:start="52:11" pos:end="52:29">fdt_property_string</name><argument_list pos:start="52:30" pos:end="52:62">(<argument pos:start="52:31" pos:end="52:33"><expr pos:start="52:31" pos:end="52:33"><name pos:start="52:31" pos:end="52:33">fdt</name></expr></argument>, <argument pos:start="52:36" pos:end="52:45"><expr pos:start="52:36" pos:end="52:45"><literal type="string" pos:start="52:36" pos:end="52:45">"bootargs"</literal></expr></argument>, <argument pos:start="52:48" pos:end="52:61"><expr pos:start="52:48" pos:end="52:61"><name pos:start="52:48" pos:end="52:61">kernel_cmdline</name></expr></argument>)</argument_list></call><operator pos:start="52:63" pos:end="52:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="53:5" pos:end="54:58"><expr pos:start="53:5" pos:end="54:57"><call pos:start="53:5" pos:end="54:57"><name pos:start="53:5" pos:end="53:8">_FDT</name><argument_list pos:start="53:9" pos:end="54:57">(<argument pos:start="53:10" pos:end="54:56"><expr pos:start="53:10" pos:end="54:56"><operator pos:start="53:10" pos:end="53:10">(</operator><call pos:start="53:11" pos:end="54:55"><name pos:start="53:11" pos:end="53:22">fdt_property</name><argument_list pos:start="53:23" pos:end="54:55">(<argument pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:26">fdt</name></expr></argument>, <argument pos:start="53:29" pos:end="53:48"><expr pos:start="53:29" pos:end="53:48"><literal type="string" pos:start="53:29" pos:end="53:48">"linux,initrd-start"</literal></expr></argument>,
                       <argument pos:start="54:24" pos:end="54:34"><expr pos:start="54:24" pos:end="54:34"><operator pos:start="54:24" pos:end="54:24">&amp;</operator><name pos:start="54:25" pos:end="54:34">start_prop</name></expr></argument>, <argument pos:start="54:37" pos:end="54:54"><expr pos:start="54:37" pos:end="54:54"><sizeof pos:start="54:37" pos:end="54:54">sizeof<argument_list pos:start="54:43" pos:end="54:54">(<argument pos:start="54:44" pos:end="54:53"><expr pos:start="54:44" pos:end="54:53"><name pos:start="54:44" pos:end="54:53">start_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="54:56" pos:end="54:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="55:5" pos:end="56:54"><expr pos:start="55:5" pos:end="56:53"><call pos:start="55:5" pos:end="56:53"><name pos:start="55:5" pos:end="55:8">_FDT</name><argument_list pos:start="55:9" pos:end="56:53">(<argument pos:start="55:10" pos:end="56:52"><expr pos:start="55:10" pos:end="56:52"><operator pos:start="55:10" pos:end="55:10">(</operator><call pos:start="55:11" pos:end="56:51"><name pos:start="55:11" pos:end="55:22">fdt_property</name><argument_list pos:start="55:23" pos:end="56:51">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">fdt</name></expr></argument>, <argument pos:start="55:29" pos:end="55:46"><expr pos:start="55:29" pos:end="55:46"><literal type="string" pos:start="55:29" pos:end="55:46">"linux,initrd-end"</literal></expr></argument>,
                       <argument pos:start="56:24" pos:end="56:32"><expr pos:start="56:24" pos:end="56:32"><operator pos:start="56:24" pos:end="56:24">&amp;</operator><name pos:start="56:25" pos:end="56:32">end_prop</name></expr></argument>, <argument pos:start="56:35" pos:end="56:50"><expr pos:start="56:35" pos:end="56:50"><sizeof pos:start="56:35" pos:end="56:50">sizeof<argument_list pos:start="56:41" pos:end="56:50">(<argument pos:start="56:42" pos:end="56:49"><expr pos:start="56:42" pos:end="56:49"><name pos:start="56:42" pos:end="56:49">end_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="56:52" pos:end="56:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="57:5" pos:end="64:5"><if pos:start="57:5" pos:end="64:5">if <condition pos:start="57:8" pos:end="57:20">(<expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:19">kernel_size</name></expr>)</condition> <block pos:start="57:22" pos:end="64:5">{<block_content pos:start="58:9" pos:end="63:9">
        <decl_stmt pos:start="58:9" pos:end="59:57"><decl pos:start="58:9" pos:end="59:56"><type pos:start="58:9" pos:end="58:16"><name pos:start="58:9" pos:end="58:16">uint64_t</name></type> <name pos:start="58:18" pos:end="58:25"><name pos:start="58:18" pos:end="58:22">kprop</name><index pos:start="58:23" pos:end="58:25">[<expr pos:start="58:24" pos:end="58:24"><literal type="number" pos:start="58:24" pos:end="58:24">2</literal></expr>]</index></name> <init pos:start="58:27" pos:end="59:56">= <expr pos:start="58:29" pos:end="59:56"><block pos:start="58:29" pos:end="59:56">{ <expr pos:start="58:31" pos:end="58:59"><call pos:start="58:31" pos:end="58:59"><name pos:start="58:31" pos:end="58:41">cpu_to_be64</name><argument_list pos:start="58:42" pos:end="58:59">(<argument pos:start="58:43" pos:end="58:58"><expr pos:start="58:43" pos:end="58:58"><name pos:start="58:43" pos:end="58:58">KERNEL_LOAD_ADDR</name></expr></argument>)</argument_list></call></expr>,
                              <macro pos:start="59:31" pos:end="59:54"><name pos:start="59:31" pos:end="59:41">cpu_to_be64</name><argument_list pos:start="59:42" pos:end="59:54">(<argument pos:start="59:43" pos:end="59:53">kernel_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:77"><expr pos:start="60:9" pos:end="60:76"><call pos:start="60:9" pos:end="60:76"><name pos:start="60:9" pos:end="60:12">_FDT</name><argument_list pos:start="60:13" pos:end="60:76">(<argument pos:start="60:14" pos:end="60:75"><expr pos:start="60:14" pos:end="60:75"><operator pos:start="60:14" pos:end="60:14">(</operator><call pos:start="60:15" pos:end="60:74"><name pos:start="60:15" pos:end="60:26">fdt_property</name><argument_list pos:start="60:27" pos:end="60:74">(<argument pos:start="60:28" pos:end="60:30"><expr pos:start="60:28" pos:end="60:30"><name pos:start="60:28" pos:end="60:30">fdt</name></expr></argument>, <argument pos:start="60:33" pos:end="60:50"><expr pos:start="60:33" pos:end="60:50"><literal type="string" pos:start="60:33" pos:end="60:50">"qemu,boot-kernel"</literal></expr></argument>, <argument pos:start="60:53" pos:end="60:58"><expr pos:start="60:53" pos:end="60:58"><operator pos:start="60:53" pos:end="60:53">&amp;</operator><name pos:start="60:54" pos:end="60:58">kprop</name></expr></argument>, <argument pos:start="60:61" pos:end="60:73"><expr pos:start="60:61" pos:end="60:73"><sizeof pos:start="60:61" pos:end="60:73">sizeof<argument_list pos:start="60:67" pos:end="60:73">(<argument pos:start="60:68" pos:end="60:72"><expr pos:start="60:68" pos:end="60:72"><name pos:start="60:68" pos:end="60:72">kprop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="60:75" pos:end="60:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="61:9" pos:end="63:9"><if pos:start="61:9" pos:end="63:9">if <condition pos:start="61:12" pos:end="61:26">(<expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:25">little_endian</name></expr>)</condition> <block pos:start="61:28" pos:end="63:9">{<block_content pos:start="62:13" pos:end="62:70">
            <expr_stmt pos:start="62:13" pos:end="62:70"><expr pos:start="62:13" pos:end="62:69"><call pos:start="62:13" pos:end="62:69"><name pos:start="62:13" pos:end="62:16">_FDT</name><argument_list pos:start="62:17" pos:end="62:69">(<argument pos:start="62:18" pos:end="62:68"><expr pos:start="62:18" pos:end="62:68"><operator pos:start="62:18" pos:end="62:18">(</operator><call pos:start="62:19" pos:end="62:67"><name pos:start="62:19" pos:end="62:30">fdt_property</name><argument_list pos:start="62:31" pos:end="62:67">(<argument pos:start="62:32" pos:end="62:34"><expr pos:start="62:32" pos:end="62:34"><name pos:start="62:32" pos:end="62:34">fdt</name></expr></argument>, <argument pos:start="62:37" pos:end="62:57"><expr pos:start="62:37" pos:end="62:57"><literal type="string" pos:start="62:37" pos:end="62:57">"qemu,boot-kernel-le"</literal></expr></argument>, <argument pos:start="62:60" pos:end="62:63"><expr pos:start="62:60" pos:end="62:63"><name pos:start="62:60" pos:end="62:63">NULL</name></expr></argument>, <argument pos:start="62:66" pos:end="62:66"><expr pos:start="62:66" pos:end="62:66"><literal type="number" pos:start="62:66" pos:end="62:66">0</literal></expr></argument>)</argument_list></call><operator pos:start="62:68" pos:end="62:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="65:5" pos:end="67:5"><if pos:start="65:5" pos:end="67:5">if <condition pos:start="65:8" pos:end="65:20">(<expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:19">boot_device</name></expr>)</condition> <block pos:start="65:22" pos:end="67:5">{<block_content pos:start="66:9" pos:end="66:74">
        <expr_stmt pos:start="66:9" pos:end="66:74"><expr pos:start="66:9" pos:end="66:73"><call pos:start="66:9" pos:end="66:73"><name pos:start="66:9" pos:end="66:12">_FDT</name><argument_list pos:start="66:13" pos:end="66:73">(<argument pos:start="66:14" pos:end="66:72"><expr pos:start="66:14" pos:end="66:72"><operator pos:start="66:14" pos:end="66:14">(</operator><call pos:start="66:15" pos:end="66:71"><name pos:start="66:15" pos:end="66:33">fdt_property_string</name><argument_list pos:start="66:34" pos:end="66:71">(<argument pos:start="66:35" pos:end="66:37"><expr pos:start="66:35" pos:end="66:37"><name pos:start="66:35" pos:end="66:37">fdt</name></expr></argument>, <argument pos:start="66:40" pos:end="66:57"><expr pos:start="66:40" pos:end="66:57"><literal type="string" pos:start="66:40" pos:end="66:57">"qemu,boot-device"</literal></expr></argument>, <argument pos:start="66:60" pos:end="66:70"><expr pos:start="66:60" pos:end="66:70"><name pos:start="66:60" pos:end="66:70">boot_device</name></expr></argument>)</argument_list></call><operator pos:start="66:72" pos:end="66:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="68:5" pos:end="70:5"><if pos:start="68:5" pos:end="70:5">if <condition pos:start="68:8" pos:end="68:18">(<expr pos:start="68:9" pos:end="68:17"><name pos:start="68:9" pos:end="68:17">boot_menu</name></expr>)</condition> <block pos:start="68:20" pos:end="70:5">{<block_content pos:start="69:9" pos:end="69:68">
        <expr_stmt pos:start="69:9" pos:end="69:68"><expr pos:start="69:9" pos:end="69:67"><call pos:start="69:9" pos:end="69:67"><name pos:start="69:9" pos:end="69:12">_FDT</name><argument_list pos:start="69:13" pos:end="69:67">(<argument pos:start="69:14" pos:end="69:66"><expr pos:start="69:14" pos:end="69:66"><operator pos:start="69:14" pos:end="69:14">(</operator><call pos:start="69:15" pos:end="69:65"><name pos:start="69:15" pos:end="69:31">fdt_property_cell</name><argument_list pos:start="69:32" pos:end="69:65">(<argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:35">fdt</name></expr></argument>, <argument pos:start="69:38" pos:end="69:53"><expr pos:start="69:38" pos:end="69:53"><literal type="string" pos:start="69:38" pos:end="69:53">"qemu,boot-menu"</literal></expr></argument>, <argument pos:start="69:56" pos:end="69:64"><expr pos:start="69:56" pos:end="69:64"><name pos:start="69:56" pos:end="69:64">boot_menu</name></expr></argument>)</argument_list></call><operator pos:start="69:66" pos:end="69:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="71:5" pos:end="71:72"><expr pos:start="71:5" pos:end="71:71"><call pos:start="71:5" pos:end="71:71"><name pos:start="71:5" pos:end="71:8">_FDT</name><argument_list pos:start="71:9" pos:end="71:71">(<argument pos:start="71:10" pos:end="71:70"><expr pos:start="71:10" pos:end="71:70"><operator pos:start="71:10" pos:end="71:10">(</operator><call pos:start="71:11" pos:end="71:69"><name pos:start="71:11" pos:end="71:27">fdt_property_cell</name><argument_list pos:start="71:28" pos:end="71:69">(<argument pos:start="71:29" pos:end="71:31"><expr pos:start="71:29" pos:end="71:31"><name pos:start="71:29" pos:end="71:31">fdt</name></expr></argument>, <argument pos:start="71:34" pos:end="71:53"><expr pos:start="71:34" pos:end="71:53"><literal type="string" pos:start="71:34" pos:end="71:53">"qemu,graphic-width"</literal></expr></argument>, <argument pos:start="71:56" pos:end="71:68"><expr pos:start="71:56" pos:end="71:68"><name pos:start="71:56" pos:end="71:68">graphic_width</name></expr></argument>)</argument_list></call><operator pos:start="71:70" pos:end="71:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="72:5" pos:end="72:74"><expr pos:start="72:5" pos:end="72:73"><call pos:start="72:5" pos:end="72:73"><name pos:start="72:5" pos:end="72:8">_FDT</name><argument_list pos:start="72:9" pos:end="72:73">(<argument pos:start="72:10" pos:end="72:72"><expr pos:start="72:10" pos:end="72:72"><operator pos:start="72:10" pos:end="72:10">(</operator><call pos:start="72:11" pos:end="72:71"><name pos:start="72:11" pos:end="72:27">fdt_property_cell</name><argument_list pos:start="72:28" pos:end="72:71">(<argument pos:start="72:29" pos:end="72:31"><expr pos:start="72:29" pos:end="72:31"><name pos:start="72:29" pos:end="72:31">fdt</name></expr></argument>, <argument pos:start="72:34" pos:end="72:54"><expr pos:start="72:34" pos:end="72:54"><literal type="string" pos:start="72:34" pos:end="72:54">"qemu,graphic-height"</literal></expr></argument>, <argument pos:start="72:57" pos:end="72:70"><expr pos:start="72:57" pos:end="72:70"><name pos:start="72:57" pos:end="72:70">graphic_height</name></expr></argument>)</argument_list></call><operator pos:start="72:72" pos:end="72:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="73:5" pos:end="73:72"><expr pos:start="73:5" pos:end="73:71"><call pos:start="73:5" pos:end="73:71"><name pos:start="73:5" pos:end="73:8">_FDT</name><argument_list pos:start="73:9" pos:end="73:71">(<argument pos:start="73:10" pos:end="73:70"><expr pos:start="73:10" pos:end="73:70"><operator pos:start="73:10" pos:end="73:10">(</operator><call pos:start="73:11" pos:end="73:69"><name pos:start="73:11" pos:end="73:27">fdt_property_cell</name><argument_list pos:start="73:28" pos:end="73:69">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">fdt</name></expr></argument>, <argument pos:start="73:34" pos:end="73:53"><expr pos:start="73:34" pos:end="73:53"><literal type="string" pos:start="73:34" pos:end="73:53">"qemu,graphic-depth"</literal></expr></argument>, <argument pos:start="73:56" pos:end="73:68"><expr pos:start="73:56" pos:end="73:68"><name pos:start="73:56" pos:end="73:68">graphic_depth</name></expr></argument>)</argument_list></call><operator pos:start="73:70" pos:end="73:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="74:5" pos:end="74:30"><expr pos:start="74:5" pos:end="74:29"><call pos:start="74:5" pos:end="74:29"><name pos:start="74:5" pos:end="74:8">_FDT</name><argument_list pos:start="74:9" pos:end="74:29">(<argument pos:start="74:10" pos:end="74:28"><expr pos:start="74:10" pos:end="74:28"><operator pos:start="74:10" pos:end="74:10">(</operator><call pos:start="74:11" pos:end="74:27"><name pos:start="74:11" pos:end="74:22">fdt_end_node</name><argument_list pos:start="74:23" pos:end="74:27">(<argument pos:start="74:24" pos:end="74:26"><expr pos:start="74:24" pos:end="74:26"><name pos:start="74:24" pos:end="74:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="74:28" pos:end="74:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="75:5" pos:end="75:14">/* cpus */</comment>
    <expr_stmt pos:start="76:5" pos:end="76:40"><expr pos:start="76:5" pos:end="76:39"><call pos:start="76:5" pos:end="76:39"><name pos:start="76:5" pos:end="76:8">_FDT</name><argument_list pos:start="76:9" pos:end="76:39">(<argument pos:start="76:10" pos:end="76:38"><expr pos:start="76:10" pos:end="76:38"><operator pos:start="76:10" pos:end="76:10">(</operator><call pos:start="76:11" pos:end="76:37"><name pos:start="76:11" pos:end="76:24">fdt_begin_node</name><argument_list pos:start="76:25" pos:end="76:37">(<argument pos:start="76:26" pos:end="76:28"><expr pos:start="76:26" pos:end="76:28"><name pos:start="76:26" pos:end="76:28">fdt</name></expr></argument>, <argument pos:start="76:31" pos:end="76:36"><expr pos:start="76:31" pos:end="76:36"><literal type="string" pos:start="76:31" pos:end="76:36">"cpus"</literal></expr></argument>)</argument_list></call><operator pos:start="76:38" pos:end="76:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="77:5" pos:end="77:58"><expr pos:start="77:5" pos:end="77:57"><call pos:start="77:5" pos:end="77:57"><name pos:start="77:5" pos:end="77:8">_FDT</name><argument_list pos:start="77:9" pos:end="77:57">(<argument pos:start="77:10" pos:end="77:56"><expr pos:start="77:10" pos:end="77:56"><operator pos:start="77:10" pos:end="77:10">(</operator><call pos:start="77:11" pos:end="77:55"><name pos:start="77:11" pos:end="77:27">fdt_property_cell</name><argument_list pos:start="77:28" pos:end="77:55">(<argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">fdt</name></expr></argument>, <argument pos:start="77:34" pos:end="77:49"><expr pos:start="77:34" pos:end="77:49"><literal type="string" pos:start="77:34" pos:end="77:49">"#address-cells"</literal></expr></argument>, <argument pos:start="77:52" pos:end="77:54"><expr pos:start="77:52" pos:end="77:54"><literal type="number" pos:start="77:52" pos:end="77:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="77:56" pos:end="77:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="78:5" pos:end="78:55"><expr pos:start="78:5" pos:end="78:54"><call pos:start="78:5" pos:end="78:54"><name pos:start="78:5" pos:end="78:8">_FDT</name><argument_list pos:start="78:9" pos:end="78:54">(<argument pos:start="78:10" pos:end="78:53"><expr pos:start="78:10" pos:end="78:53"><operator pos:start="78:10" pos:end="78:10">(</operator><call pos:start="78:11" pos:end="78:52"><name pos:start="78:11" pos:end="78:27">fdt_property_cell</name><argument_list pos:start="78:28" pos:end="78:52">(<argument pos:start="78:29" pos:end="78:31"><expr pos:start="78:29" pos:end="78:31"><name pos:start="78:29" pos:end="78:31">fdt</name></expr></argument>, <argument pos:start="78:34" pos:end="78:46"><expr pos:start="78:34" pos:end="78:46"><literal type="string" pos:start="78:34" pos:end="78:46">"#size-cells"</literal></expr></argument>, <argument pos:start="78:49" pos:end="78:51"><expr pos:start="78:49" pos:end="78:51"><literal type="number" pos:start="78:49" pos:end="78:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="78:53" pos:end="78:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <macro pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:15">CPU_FOREACH</name><argument_list pos:start="79:16" pos:end="79:19">(<argument pos:start="79:17" pos:end="79:18">cs</argument>)</argument_list></macro> <block pos:start="79:21" pos:end="154:5">{<block_content pos:start="80:9" pos:end="153:34">
        <decl_stmt pos:start="80:9" pos:end="80:42"><decl pos:start="80:9" pos:end="80:41"><type pos:start="80:9" pos:end="80:20"><name pos:start="80:9" pos:end="80:18">PowerPCCPU</name> <modifier pos:start="80:20" pos:end="80:20">*</modifier></type><name pos:start="80:21" pos:end="80:23">cpu</name> <init pos:start="80:25" pos:end="80:41">= <expr pos:start="80:27" pos:end="80:41"><call pos:start="80:27" pos:end="80:41"><name pos:start="80:27" pos:end="80:37">POWERPC_CPU</name><argument_list pos:start="80:38" pos:end="80:41">(<argument pos:start="80:39" pos:end="80:40"><expr pos:start="80:39" pos:end="80:40"><name pos:start="80:39" pos:end="80:40">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="81:9" pos:end="81:37"><decl pos:start="81:9" pos:end="81:36"><type pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:19">CPUPPCState</name> <modifier pos:start="81:21" pos:end="81:21">*</modifier></type><name pos:start="81:22" pos:end="81:24">env</name> <init pos:start="81:26" pos:end="81:36">= <expr pos:start="81:28" pos:end="81:36"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:36"><name pos:start="81:29" pos:end="81:31">cpu</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:36">env</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="82:9" pos:end="82:47"><decl pos:start="82:9" pos:end="82:46"><type pos:start="82:9" pos:end="82:21"><name pos:start="82:9" pos:end="82:19">DeviceClass</name> <modifier pos:start="82:21" pos:end="82:21">*</modifier></type><name pos:start="82:22" pos:end="82:23">dc</name> <init pos:start="82:25" pos:end="82:46">= <expr pos:start="82:27" pos:end="82:46"><call pos:start="82:27" pos:end="82:46"><name pos:start="82:27" pos:end="82:42">DEVICE_GET_CLASS</name><argument_list pos:start="82:43" pos:end="82:46">(<argument pos:start="82:44" pos:end="82:45"><expr pos:start="82:44" pos:end="82:45"><name pos:start="82:44" pos:end="82:45">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="83:9" pos:end="83:57"><decl pos:start="83:9" pos:end="83:56"><type pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:23">PowerPCCPUClass</name> <modifier pos:start="83:25" pos:end="83:25">*</modifier></type><name pos:start="83:26" pos:end="83:28">pcc</name> <init pos:start="83:30" pos:end="83:56">= <expr pos:start="83:32" pos:end="83:56"><call pos:start="83:32" pos:end="83:56"><name pos:start="83:32" pos:end="83:52">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="83:53" pos:end="83:56">(<argument pos:start="83:54" pos:end="83:55"><expr pos:start="83:54" pos:end="83:55"><name pos:start="83:54" pos:end="83:55">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="84:9" pos:end="84:44"><decl pos:start="84:9" pos:end="84:43"><type pos:start="84:9" pos:end="84:11"><name pos:start="84:9" pos:end="84:11">int</name></type> <name pos:start="84:13" pos:end="84:17">index</name> <init pos:start="84:19" pos:end="84:43">= <expr pos:start="84:21" pos:end="84:43"><call pos:start="84:21" pos:end="84:43"><name pos:start="84:21" pos:end="84:38">ppc_get_vcpu_dt_id</name><argument_list pos:start="84:39" pos:end="84:43">(<argument pos:start="84:40" pos:end="84:42"><expr pos:start="84:40" pos:end="84:42"><name pos:start="84:40" pos:end="84:42">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="85:9" pos:end="85:23"><decl pos:start="85:9" pos:end="85:22"><type pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:12">char</name> <modifier pos:start="85:14" pos:end="85:14">*</modifier></type><name pos:start="85:15" pos:end="85:22">nodename</name></decl>;</decl_stmt>
        <decl_stmt pos:start="86:9" pos:end="87:51"><decl pos:start="86:9" pos:end="87:50"><type pos:start="86:9" pos:end="86:16"><name pos:start="86:9" pos:end="86:16">uint32_t</name></type> <name pos:start="86:18" pos:end="86:23"><name pos:start="86:18" pos:end="86:21">segs</name><index pos:start="86:22" pos:end="86:23">[]</index></name> <init pos:start="86:25" pos:end="87:50">= <expr pos:start="86:27" pos:end="87:50"><block pos:start="86:27" pos:end="87:50">{<expr pos:start="86:28" pos:end="86:42"><call pos:start="86:28" pos:end="86:42"><name pos:start="86:28" pos:end="86:38">cpu_to_be32</name><argument_list pos:start="86:39" pos:end="86:42">(<argument pos:start="86:40" pos:end="86:41"><expr pos:start="86:40" pos:end="86:41"><literal type="number" pos:start="86:40" pos:end="86:41">28</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="86:45" pos:end="86:59"><call pos:start="86:45" pos:end="86:59"><name pos:start="86:45" pos:end="86:55">cpu_to_be32</name><argument_list pos:start="86:56" pos:end="86:59">(<argument pos:start="86:57" pos:end="86:58"><expr pos:start="86:57" pos:end="86:58"><literal type="number" pos:start="86:57" pos:end="86:58">40</literal></expr></argument>)</argument_list></call></expr>,
                           <expr pos:start="87:28" pos:end="87:37"><literal type="number" pos:start="87:28" pos:end="87:37">0xffffffff</literal></expr>, <expr pos:start="87:40" pos:end="87:49"><literal type="number" pos:start="87:40" pos:end="87:49">0xffffffff</literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="88:9" pos:end="88:78"><decl pos:start="88:9" pos:end="88:77"><type pos:start="88:9" pos:end="88:16"><name pos:start="88:9" pos:end="88:16">uint32_t</name></type> <name pos:start="88:18" pos:end="88:23">tbfreq</name> <init pos:start="88:25" pos:end="88:77">= <expr pos:start="88:27" pos:end="88:77"><ternary pos:start="88:27" pos:end="88:77"><condition pos:start="88:27" pos:end="88:41"><expr pos:start="88:27" pos:end="88:39"><call pos:start="88:27" pos:end="88:39"><name pos:start="88:27" pos:end="88:37">kvm_enabled</name><argument_list pos:start="88:38" pos:end="88:39">()</argument_list></call></expr> ?</condition><then pos:start="88:43" pos:end="88:61"> <expr pos:start="88:43" pos:end="88:61"><call pos:start="88:43" pos:end="88:61"><name pos:start="88:43" pos:end="88:59">kvmppc_get_tbfreq</name><argument_list pos:start="88:60" pos:end="88:61">()</argument_list></call></expr> </then><else pos:start="88:63" pos:end="88:77">: <expr pos:start="88:65" pos:end="88:77"><name pos:start="88:65" pos:end="88:77">TIMEBASE_FREQ</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="89:9" pos:end="89:79"><decl pos:start="89:9" pos:end="89:78"><type pos:start="89:9" pos:end="89:16"><name pos:start="89:9" pos:end="89:16">uint32_t</name></type> <name pos:start="89:18" pos:end="89:24">cpufreq</name> <init pos:start="89:26" pos:end="89:78">= <expr pos:start="89:28" pos:end="89:78"><ternary pos:start="89:28" pos:end="89:78"><condition pos:start="89:28" pos:end="89:42"><expr pos:start="89:28" pos:end="89:40"><call pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:38">kvm_enabled</name><argument_list pos:start="89:39" pos:end="89:40">()</argument_list></call></expr> ?</condition><then pos:start="89:44" pos:end="89:65"> <expr pos:start="89:44" pos:end="89:65"><call pos:start="89:44" pos:end="89:65"><name pos:start="89:44" pos:end="89:63">kvmppc_get_clockfreq</name><argument_list pos:start="89:64" pos:end="89:65">()</argument_list></call></expr> </then><else pos:start="89:67" pos:end="89:78">: <expr pos:start="89:69" pos:end="89:78"><literal type="number" pos:start="89:69" pos:end="89:78">1000000000</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="90:9" pos:end="90:37"><decl pos:start="90:9" pos:end="90:36"><type pos:start="90:9" pos:end="90:16"><name pos:start="90:9" pos:end="90:16">uint32_t</name></type> <name pos:start="90:18" pos:end="90:36"><name pos:start="90:18" pos:end="90:32">page_sizes_prop</name><index pos:start="90:33" pos:end="90:36">[<expr pos:start="90:34" pos:end="90:35"><literal type="number" pos:start="90:34" pos:end="90:35">64</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="91:9" pos:end="91:36"><decl pos:start="91:9" pos:end="91:35"><type pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:14">size_t</name></type> <name pos:start="91:16" pos:end="91:35">page_sizes_prop_size</name></decl>;</decl_stmt>
        <if_stmt pos:start="92:9" pos:end="94:9"><if pos:start="92:9" pos:end="94:9">if <condition pos:start="92:12" pos:end="92:31">(<expr pos:start="92:13" pos:end="92:30"><operator pos:start="92:13" pos:end="92:13">(</operator><name pos:start="92:14" pos:end="92:18">index</name> <operator pos:start="92:20" pos:end="92:20">%</operator> <name pos:start="92:22" pos:end="92:24">smt</name><operator pos:start="92:25" pos:end="92:25">)</operator> <operator pos:start="92:27" pos:end="92:28">!=</operator> <literal type="number" pos:start="92:30" pos:end="92:30">0</literal></expr>)</condition> <block pos:start="92:33" pos:end="94:9">{<block_content pos:start="93:13" pos:end="93:21">
            <continue pos:start="93:13" pos:end="93:21">continue;</continue>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="95:9" pos:end="95:64"><expr pos:start="95:9" pos:end="95:63"><name pos:start="95:9" pos:end="95:16">nodename</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <call pos:start="95:20" pos:end="95:63"><name pos:start="95:20" pos:end="95:34">g_strdup_printf</name><argument_list pos:start="95:35" pos:end="95:63">(<argument pos:start="95:36" pos:end="95:42"><expr pos:start="95:36" pos:end="95:42"><literal type="string" pos:start="95:36" pos:end="95:42">"%s@%x"</literal></expr></argument>, <argument pos:start="95:45" pos:end="95:55"><expr pos:start="95:45" pos:end="95:55"><name pos:start="95:45" pos:end="95:55"><name pos:start="95:45" pos:end="95:46">dc</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:55">fw_name</name></name></expr></argument>, <argument pos:start="95:58" pos:end="95:62"><expr pos:start="95:58" pos:end="95:62"><name pos:start="95:58" pos:end="95:62">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="96:9" pos:end="96:46"><expr pos:start="96:9" pos:end="96:45"><call pos:start="96:9" pos:end="96:45"><name pos:start="96:9" pos:end="96:12">_FDT</name><argument_list pos:start="96:13" pos:end="96:45">(<argument pos:start="96:14" pos:end="96:44"><expr pos:start="96:14" pos:end="96:44"><operator pos:start="96:14" pos:end="96:14">(</operator><call pos:start="96:15" pos:end="96:43"><name pos:start="96:15" pos:end="96:28">fdt_begin_node</name><argument_list pos:start="96:29" pos:end="96:43">(<argument pos:start="96:30" pos:end="96:32"><expr pos:start="96:30" pos:end="96:32"><name pos:start="96:30" pos:end="96:32">fdt</name></expr></argument>, <argument pos:start="96:35" pos:end="96:42"><expr pos:start="96:35" pos:end="96:42"><name pos:start="96:35" pos:end="96:42">nodename</name></expr></argument>)</argument_list></call><operator pos:start="96:44" pos:end="96:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="97:9" pos:end="97:25"><expr pos:start="97:9" pos:end="97:24"><call pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:14">g_free</name><argument_list pos:start="97:15" pos:end="97:24">(<argument pos:start="97:16" pos:end="97:23"><expr pos:start="97:16" pos:end="97:23"><name pos:start="97:16" pos:end="97:23">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="98:9" pos:end="98:53"><expr pos:start="98:9" pos:end="98:52"><call pos:start="98:9" pos:end="98:52"><name pos:start="98:9" pos:end="98:12">_FDT</name><argument_list pos:start="98:13" pos:end="98:52">(<argument pos:start="98:14" pos:end="98:51"><expr pos:start="98:14" pos:end="98:51"><operator pos:start="98:14" pos:end="98:14">(</operator><call pos:start="98:15" pos:end="98:50"><name pos:start="98:15" pos:end="98:31">fdt_property_cell</name><argument_list pos:start="98:32" pos:end="98:50">(<argument pos:start="98:33" pos:end="98:35"><expr pos:start="98:33" pos:end="98:35"><name pos:start="98:33" pos:end="98:35">fdt</name></expr></argument>, <argument pos:start="98:38" pos:end="98:42"><expr pos:start="98:38" pos:end="98:42"><literal type="string" pos:start="98:38" pos:end="98:42">"reg"</literal></expr></argument>, <argument pos:start="98:45" pos:end="98:49"><expr pos:start="98:45" pos:end="98:49"><name pos:start="98:45" pos:end="98:49">index</name></expr></argument>)</argument_list></call><operator pos:start="98:51" pos:end="98:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="99:9" pos:end="99:63"><expr pos:start="99:9" pos:end="99:62"><call pos:start="99:9" pos:end="99:62"><name pos:start="99:9" pos:end="99:12">_FDT</name><argument_list pos:start="99:13" pos:end="99:62">(<argument pos:start="99:14" pos:end="99:61"><expr pos:start="99:14" pos:end="99:61"><operator pos:start="99:14" pos:end="99:14">(</operator><call pos:start="99:15" pos:end="99:60"><name pos:start="99:15" pos:end="99:33">fdt_property_string</name><argument_list pos:start="99:34" pos:end="99:60">(<argument pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><name pos:start="99:35" pos:end="99:37">fdt</name></expr></argument>, <argument pos:start="99:40" pos:end="99:52"><expr pos:start="99:40" pos:end="99:52"><literal type="string" pos:start="99:40" pos:end="99:52">"device_type"</literal></expr></argument>, <argument pos:start="99:55" pos:end="99:59"><expr pos:start="99:55" pos:end="99:59"><literal type="string" pos:start="99:55" pos:end="99:59">"cpu"</literal></expr></argument>)</argument_list></call><operator pos:start="99:61" pos:end="99:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="100:9" pos:end="100:73"><expr pos:start="100:9" pos:end="100:72"><call pos:start="100:9" pos:end="100:72"><name pos:start="100:9" pos:end="100:12">_FDT</name><argument_list pos:start="100:13" pos:end="100:72">(<argument pos:start="100:14" pos:end="100:71"><expr pos:start="100:14" pos:end="100:71"><operator pos:start="100:14" pos:end="100:14">(</operator><call pos:start="100:15" pos:end="100:70"><name pos:start="100:15" pos:end="100:31">fdt_property_cell</name><argument_list pos:start="100:32" pos:end="100:70">(<argument pos:start="100:33" pos:end="100:35"><expr pos:start="100:33" pos:end="100:35"><name pos:start="100:33" pos:end="100:35">fdt</name></expr></argument>, <argument pos:start="100:38" pos:end="100:50"><expr pos:start="100:38" pos:end="100:50"><literal type="string" pos:start="100:38" pos:end="100:50">"cpu-version"</literal></expr></argument>, <argument pos:start="100:53" pos:end="100:69"><expr pos:start="100:53" pos:end="100:69"><name pos:start="100:53" pos:end="100:69"><name pos:start="100:53" pos:end="100:55">env</name><operator pos:start="100:56" pos:end="100:57">-&gt;</operator><name pos:start="100:58" pos:end="100:60">spr</name><index pos:start="100:61" pos:end="100:69">[<expr pos:start="100:62" pos:end="100:68"><name pos:start="100:62" pos:end="100:68">SPR_PVR</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="100:71" pos:end="100:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="101:9" pos:end="102:57"><expr pos:start="101:9" pos:end="102:56"><call pos:start="101:9" pos:end="102:56"><name pos:start="101:9" pos:end="101:12">_FDT</name><argument_list pos:start="101:13" pos:end="102:56">(<argument pos:start="101:14" pos:end="102:55"><expr pos:start="101:14" pos:end="102:55"><operator pos:start="101:14" pos:end="101:14">(</operator><call pos:start="101:15" pos:end="102:54"><name pos:start="101:15" pos:end="101:31">fdt_property_cell</name><argument_list pos:start="101:32" pos:end="102:54">(<argument pos:start="101:33" pos:end="101:35"><expr pos:start="101:33" pos:end="101:35"><name pos:start="101:33" pos:end="101:35">fdt</name></expr></argument>, <argument pos:start="101:38" pos:end="101:57"><expr pos:start="101:38" pos:end="101:57"><literal type="string" pos:start="101:38" pos:end="101:57">"d-cache-block-size"</literal></expr></argument>,
                                <argument pos:start="102:33" pos:end="102:53"><expr pos:start="102:33" pos:end="102:53"><name pos:start="102:33" pos:end="102:53"><name pos:start="102:33" pos:end="102:35">env</name><operator pos:start="102:36" pos:end="102:37">-&gt;</operator><name pos:start="102:38" pos:end="102:53">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="102:55" pos:end="102:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="103:9" pos:end="104:57"><expr pos:start="103:9" pos:end="104:56"><call pos:start="103:9" pos:end="104:56"><name pos:start="103:9" pos:end="103:12">_FDT</name><argument_list pos:start="103:13" pos:end="104:56">(<argument pos:start="103:14" pos:end="104:55"><expr pos:start="103:14" pos:end="104:55"><operator pos:start="103:14" pos:end="103:14">(</operator><call pos:start="103:15" pos:end="104:54"><name pos:start="103:15" pos:end="103:31">fdt_property_cell</name><argument_list pos:start="103:32" pos:end="104:54">(<argument pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">fdt</name></expr></argument>, <argument pos:start="103:38" pos:end="103:56"><expr pos:start="103:38" pos:end="103:56"><literal type="string" pos:start="103:38" pos:end="103:56">"d-cache-line-size"</literal></expr></argument>,
                                <argument pos:start="104:33" pos:end="104:53"><expr pos:start="104:33" pos:end="104:53"><name pos:start="104:33" pos:end="104:53"><name pos:start="104:33" pos:end="104:35">env</name><operator pos:start="104:36" pos:end="104:37">-&gt;</operator><name pos:start="104:38" pos:end="104:53">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="104:55" pos:end="104:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="105:9" pos:end="106:57"><expr pos:start="105:9" pos:end="106:56"><call pos:start="105:9" pos:end="106:56"><name pos:start="105:9" pos:end="105:12">_FDT</name><argument_list pos:start="105:13" pos:end="106:56">(<argument pos:start="105:14" pos:end="106:55"><expr pos:start="105:14" pos:end="106:55"><operator pos:start="105:14" pos:end="105:14">(</operator><call pos:start="105:15" pos:end="106:54"><name pos:start="105:15" pos:end="105:31">fdt_property_cell</name><argument_list pos:start="105:32" pos:end="106:54">(<argument pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><name pos:start="105:33" pos:end="105:35">fdt</name></expr></argument>, <argument pos:start="105:38" pos:end="105:57"><expr pos:start="105:38" pos:end="105:57"><literal type="string" pos:start="105:38" pos:end="105:57">"i-cache-block-size"</literal></expr></argument>,
                                <argument pos:start="106:33" pos:end="106:53"><expr pos:start="106:33" pos:end="106:53"><name pos:start="106:33" pos:end="106:53"><name pos:start="106:33" pos:end="106:35">env</name><operator pos:start="106:36" pos:end="106:37">-&gt;</operator><name pos:start="106:38" pos:end="106:53">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="106:55" pos:end="106:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="107:9" pos:end="108:57"><expr pos:start="107:9" pos:end="108:56"><call pos:start="107:9" pos:end="108:56"><name pos:start="107:9" pos:end="107:12">_FDT</name><argument_list pos:start="107:13" pos:end="108:56">(<argument pos:start="107:14" pos:end="108:55"><expr pos:start="107:14" pos:end="108:55"><operator pos:start="107:14" pos:end="107:14">(</operator><call pos:start="107:15" pos:end="108:54"><name pos:start="107:15" pos:end="107:31">fdt_property_cell</name><argument_list pos:start="107:32" pos:end="108:54">(<argument pos:start="107:33" pos:end="107:35"><expr pos:start="107:33" pos:end="107:35"><name pos:start="107:33" pos:end="107:35">fdt</name></expr></argument>, <argument pos:start="107:38" pos:end="107:56"><expr pos:start="107:38" pos:end="107:56"><literal type="string" pos:start="107:38" pos:end="107:56">"i-cache-line-size"</literal></expr></argument>,
                                <argument pos:start="108:33" pos:end="108:53"><expr pos:start="108:33" pos:end="108:53"><name pos:start="108:33" pos:end="108:53"><name pos:start="108:33" pos:end="108:35">env</name><operator pos:start="108:36" pos:end="108:37">-&gt;</operator><name pos:start="108:38" pos:end="108:53">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="108:55" pos:end="108:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="109:9" pos:end="113:9"><if pos:start="109:9" pos:end="111:9">if <condition pos:start="109:12" pos:end="109:32">(<expr pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:15">pcc</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:31">l1_dcache_size</name></name></expr>)</condition> <block pos:start="109:34" pos:end="111:9">{<block_content pos:start="110:13" pos:end="110:80">
            <expr_stmt pos:start="110:13" pos:end="110:80"><expr pos:start="110:13" pos:end="110:79"><call pos:start="110:13" pos:end="110:79"><name pos:start="110:13" pos:end="110:16">_FDT</name><argument_list pos:start="110:17" pos:end="110:79">(<argument pos:start="110:18" pos:end="110:78"><expr pos:start="110:18" pos:end="110:78"><operator pos:start="110:18" pos:end="110:18">(</operator><call pos:start="110:19" pos:end="110:77"><name pos:start="110:19" pos:end="110:35">fdt_property_cell</name><argument_list pos:start="110:36" pos:end="110:77">(<argument pos:start="110:37" pos:end="110:39"><expr pos:start="110:37" pos:end="110:39"><name pos:start="110:37" pos:end="110:39">fdt</name></expr></argument>, <argument pos:start="110:42" pos:end="110:55"><expr pos:start="110:42" pos:end="110:55"><literal type="string" pos:start="110:42" pos:end="110:55">"d-cache-size"</literal></expr></argument>, <argument pos:start="110:58" pos:end="110:76"><expr pos:start="110:58" pos:end="110:76"><name pos:start="110:58" pos:end="110:76"><name pos:start="110:58" pos:end="110:60">pcc</name><operator pos:start="110:61" pos:end="110:62">-&gt;</operator><name pos:start="110:63" pos:end="110:76">l1_dcache_size</name></name></expr></argument>)</argument_list></call><operator pos:start="110:78" pos:end="110:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="111:11" pos:end="113:9">else <block pos:start="111:16" pos:end="113:9">{<block_content pos:start="112:13" pos:end="112:73">
            <expr_stmt pos:start="112:13" pos:end="112:73"><expr pos:start="112:13" pos:end="112:72"><call pos:start="112:13" pos:end="112:72"><name pos:start="112:13" pos:end="112:19">fprintf</name><argument_list pos:start="112:20" pos:end="112:72">(<argument pos:start="112:21" pos:end="112:26"><expr pos:start="112:21" pos:end="112:26"><name pos:start="112:21" pos:end="112:26">stderr</name></expr></argument>, <argument pos:start="112:29" pos:end="112:71"><expr pos:start="112:29" pos:end="112:71"><literal type="string" pos:start="112:29" pos:end="112:71">"Warning: Unknown L1 dcache size for cpu\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <if_stmt pos:start="114:9" pos:end="118:9"><if pos:start="114:9" pos:end="116:9">if <condition pos:start="114:12" pos:end="114:32">(<expr pos:start="114:13" pos:end="114:31"><name pos:start="114:13" pos:end="114:31"><name pos:start="114:13" pos:end="114:15">pcc</name><operator pos:start="114:16" pos:end="114:17">-&gt;</operator><name pos:start="114:18" pos:end="114:31">l1_icache_size</name></name></expr>)</condition> <block pos:start="114:34" pos:end="116:9">{<block_content pos:start="115:13" pos:end="115:80">
            <expr_stmt pos:start="115:13" pos:end="115:80"><expr pos:start="115:13" pos:end="115:79"><call pos:start="115:13" pos:end="115:79"><name pos:start="115:13" pos:end="115:16">_FDT</name><argument_list pos:start="115:17" pos:end="115:79">(<argument pos:start="115:18" pos:end="115:78"><expr pos:start="115:18" pos:end="115:78"><operator pos:start="115:18" pos:end="115:18">(</operator><call pos:start="115:19" pos:end="115:77"><name pos:start="115:19" pos:end="115:35">fdt_property_cell</name><argument_list pos:start="115:36" pos:end="115:77">(<argument pos:start="115:37" pos:end="115:39"><expr pos:start="115:37" pos:end="115:39"><name pos:start="115:37" pos:end="115:39">fdt</name></expr></argument>, <argument pos:start="115:42" pos:end="115:55"><expr pos:start="115:42" pos:end="115:55"><literal type="string" pos:start="115:42" pos:end="115:55">"i-cache-size"</literal></expr></argument>, <argument pos:start="115:58" pos:end="115:76"><expr pos:start="115:58" pos:end="115:76"><name pos:start="115:58" pos:end="115:76"><name pos:start="115:58" pos:end="115:60">pcc</name><operator pos:start="115:61" pos:end="115:62">-&gt;</operator><name pos:start="115:63" pos:end="115:76">l1_icache_size</name></name></expr></argument>)</argument_list></call><operator pos:start="115:78" pos:end="115:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="116:11" pos:end="118:9">else <block pos:start="116:16" pos:end="118:9">{<block_content pos:start="117:13" pos:end="117:73">
            <expr_stmt pos:start="117:13" pos:end="117:73"><expr pos:start="117:13" pos:end="117:72"><call pos:start="117:13" pos:end="117:72"><name pos:start="117:13" pos:end="117:19">fprintf</name><argument_list pos:start="117:20" pos:end="117:72">(<argument pos:start="117:21" pos:end="117:26"><expr pos:start="117:21" pos:end="117:26"><name pos:start="117:21" pos:end="117:26">stderr</name></expr></argument>, <argument pos:start="117:29" pos:end="117:71"><expr pos:start="117:29" pos:end="117:71"><literal type="string" pos:start="117:29" pos:end="117:71">"Warning: Unknown L1 icache size for cpu\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="119:9" pos:end="119:69"><expr pos:start="119:9" pos:end="119:68"><call pos:start="119:9" pos:end="119:68"><name pos:start="119:9" pos:end="119:12">_FDT</name><argument_list pos:start="119:13" pos:end="119:68">(<argument pos:start="119:14" pos:end="119:67"><expr pos:start="119:14" pos:end="119:67"><operator pos:start="119:14" pos:end="119:14">(</operator><call pos:start="119:15" pos:end="119:66"><name pos:start="119:15" pos:end="119:31">fdt_property_cell</name><argument_list pos:start="119:32" pos:end="119:66">(<argument pos:start="119:33" pos:end="119:35"><expr pos:start="119:33" pos:end="119:35"><name pos:start="119:33" pos:end="119:35">fdt</name></expr></argument>, <argument pos:start="119:38" pos:end="119:57"><expr pos:start="119:38" pos:end="119:57"><literal type="string" pos:start="119:38" pos:end="119:57">"timebase-frequency"</literal></expr></argument>, <argument pos:start="119:60" pos:end="119:65"><expr pos:start="119:60" pos:end="119:65"><name pos:start="119:60" pos:end="119:65">tbfreq</name></expr></argument>)</argument_list></call><operator pos:start="119:67" pos:end="119:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="120:9" pos:end="120:67"><expr pos:start="120:9" pos:end="120:66"><call pos:start="120:9" pos:end="120:66"><name pos:start="120:9" pos:end="120:12">_FDT</name><argument_list pos:start="120:13" pos:end="120:66">(<argument pos:start="120:14" pos:end="120:65"><expr pos:start="120:14" pos:end="120:65"><operator pos:start="120:14" pos:end="120:14">(</operator><call pos:start="120:15" pos:end="120:64"><name pos:start="120:15" pos:end="120:31">fdt_property_cell</name><argument_list pos:start="120:32" pos:end="120:64">(<argument pos:start="120:33" pos:end="120:35"><expr pos:start="120:33" pos:end="120:35"><name pos:start="120:33" pos:end="120:35">fdt</name></expr></argument>, <argument pos:start="120:38" pos:end="120:54"><expr pos:start="120:38" pos:end="120:54"><literal type="string" pos:start="120:38" pos:end="120:54">"clock-frequency"</literal></expr></argument>, <argument pos:start="120:57" pos:end="120:63"><expr pos:start="120:57" pos:end="120:63"><name pos:start="120:57" pos:end="120:63">cpufreq</name></expr></argument>)</argument_list></call><operator pos:start="120:65" pos:end="120:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="121:9" pos:end="121:68"><expr pos:start="121:9" pos:end="121:67"><call pos:start="121:9" pos:end="121:67"><name pos:start="121:9" pos:end="121:12">_FDT</name><argument_list pos:start="121:13" pos:end="121:67">(<argument pos:start="121:14" pos:end="121:66"><expr pos:start="121:14" pos:end="121:66"><operator pos:start="121:14" pos:end="121:14">(</operator><call pos:start="121:15" pos:end="121:65"><name pos:start="121:15" pos:end="121:31">fdt_property_cell</name><argument_list pos:start="121:32" pos:end="121:65">(<argument pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:35">fdt</name></expr></argument>, <argument pos:start="121:38" pos:end="121:51"><expr pos:start="121:38" pos:end="121:51"><literal type="string" pos:start="121:38" pos:end="121:51">"ibm,slb-size"</literal></expr></argument>, <argument pos:start="121:54" pos:end="121:64"><expr pos:start="121:54" pos:end="121:64"><name pos:start="121:54" pos:end="121:64"><name pos:start="121:54" pos:end="121:56">env</name><operator pos:start="121:57" pos:end="121:58">-&gt;</operator><name pos:start="121:59" pos:end="121:64">slb_nr</name></name></expr></argument>)</argument_list></call><operator pos:start="121:66" pos:end="121:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="122:9" pos:end="122:59"><expr pos:start="122:9" pos:end="122:58"><call pos:start="122:9" pos:end="122:58"><name pos:start="122:9" pos:end="122:12">_FDT</name><argument_list pos:start="122:13" pos:end="122:58">(<argument pos:start="122:14" pos:end="122:57"><expr pos:start="122:14" pos:end="122:57"><operator pos:start="122:14" pos:end="122:14">(</operator><call pos:start="122:15" pos:end="122:56"><name pos:start="122:15" pos:end="122:33">fdt_property_string</name><argument_list pos:start="122:34" pos:end="122:56">(<argument pos:start="122:35" pos:end="122:37"><expr pos:start="122:35" pos:end="122:37"><name pos:start="122:35" pos:end="122:37">fdt</name></expr></argument>, <argument pos:start="122:40" pos:end="122:47"><expr pos:start="122:40" pos:end="122:47"><literal type="string" pos:start="122:40" pos:end="122:47">"status"</literal></expr></argument>, <argument pos:start="122:50" pos:end="122:55"><expr pos:start="122:50" pos:end="122:55"><literal type="string" pos:start="122:50" pos:end="122:55">"okay"</literal></expr></argument>)</argument_list></call><operator pos:start="122:57" pos:end="122:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="123:9" pos:end="123:53"><expr pos:start="123:9" pos:end="123:52"><call pos:start="123:9" pos:end="123:52"><name pos:start="123:9" pos:end="123:12">_FDT</name><argument_list pos:start="123:13" pos:end="123:52">(<argument pos:start="123:14" pos:end="123:51"><expr pos:start="123:14" pos:end="123:51"><operator pos:start="123:14" pos:end="123:14">(</operator><call pos:start="123:15" pos:end="123:50"><name pos:start="123:15" pos:end="123:26">fdt_property</name><argument_list pos:start="123:27" pos:end="123:50">(<argument pos:start="123:28" pos:end="123:30"><expr pos:start="123:28" pos:end="123:30"><name pos:start="123:28" pos:end="123:30">fdt</name></expr></argument>, <argument pos:start="123:33" pos:end="123:40"><expr pos:start="123:33" pos:end="123:40"><literal type="string" pos:start="123:33" pos:end="123:40">"64-bit"</literal></expr></argument>, <argument pos:start="123:43" pos:end="123:46"><expr pos:start="123:43" pos:end="123:46"><name pos:start="123:43" pos:end="123:46">NULL</name></expr></argument>, <argument pos:start="123:49" pos:end="123:49"><expr pos:start="123:49" pos:end="123:49"><literal type="number" pos:start="123:49" pos:end="123:49">0</literal></expr></argument>)</argument_list></call><operator pos:start="123:51" pos:end="123:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="124:9" pos:end="126:9"><if pos:start="124:9" pos:end="126:9">if <condition pos:start="124:12" pos:end="124:43">(<expr pos:start="124:13" pos:end="124:42"><name pos:start="124:13" pos:end="124:33"><name pos:start="124:13" pos:end="124:15">env</name><operator pos:start="124:16" pos:end="124:17">-&gt;</operator><name pos:start="124:18" pos:end="124:23">spr_cb</name><index pos:start="124:24" pos:end="124:33">[<expr pos:start="124:25" pos:end="124:32"><name pos:start="124:25" pos:end="124:32">SPR_PURR</name></expr>]</index></name><operator pos:start="124:34" pos:end="124:34">.</operator><name pos:start="124:35" pos:end="124:42">oea_read</name></expr>)</condition> <block pos:start="124:45" pos:end="126:9">{<block_content pos:start="125:13" pos:end="125:59">
            <expr_stmt pos:start="125:13" pos:end="125:59"><expr pos:start="125:13" pos:end="125:58"><call pos:start="125:13" pos:end="125:58"><name pos:start="125:13" pos:end="125:16">_FDT</name><argument_list pos:start="125:17" pos:end="125:58">(<argument pos:start="125:18" pos:end="125:57"><expr pos:start="125:18" pos:end="125:57"><operator pos:start="125:18" pos:end="125:18">(</operator><call pos:start="125:19" pos:end="125:56"><name pos:start="125:19" pos:end="125:30">fdt_property</name><argument_list pos:start="125:31" pos:end="125:56">(<argument pos:start="125:32" pos:end="125:34"><expr pos:start="125:32" pos:end="125:34"><name pos:start="125:32" pos:end="125:34">fdt</name></expr></argument>, <argument pos:start="125:37" pos:end="125:46"><expr pos:start="125:37" pos:end="125:46"><literal type="string" pos:start="125:37" pos:end="125:46">"ibm,purr"</literal></expr></argument>, <argument pos:start="125:49" pos:end="125:52"><expr pos:start="125:49" pos:end="125:52"><name pos:start="125:49" pos:end="125:52">NULL</name></expr></argument>, <argument pos:start="125:55" pos:end="125:55"><expr pos:start="125:55" pos:end="125:55"><literal type="number" pos:start="125:55" pos:end="125:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="125:57" pos:end="125:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="127:9" pos:end="130:9"><if pos:start="127:9" pos:end="130:9">if <condition pos:start="127:12" pos:end="127:47">(<expr pos:start="127:13" pos:end="127:46"><name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:15">env</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:26">mmu_model</name></name> <operator pos:start="127:28" pos:end="127:28">&amp;</operator> <name pos:start="127:30" pos:end="127:46">POWERPC_MMU_1TSEG</name></expr>)</condition> <block pos:start="127:49" pos:end="130:9">{<block_content pos:start="128:13" pos:end="129:53">
            <expr_stmt pos:start="128:13" pos:end="129:53"><expr pos:start="128:13" pos:end="129:52"><call pos:start="128:13" pos:end="129:52"><name pos:start="128:13" pos:end="128:16">_FDT</name><argument_list pos:start="128:17" pos:end="129:52">(<argument pos:start="128:18" pos:end="129:51"><expr pos:start="128:18" pos:end="129:51"><operator pos:start="128:18" pos:end="128:18">(</operator><call pos:start="128:19" pos:end="129:50"><name pos:start="128:19" pos:end="128:30">fdt_property</name><argument_list pos:start="128:31" pos:end="129:50">(<argument pos:start="128:32" pos:end="128:34"><expr pos:start="128:32" pos:end="128:34"><name pos:start="128:32" pos:end="128:34">fdt</name></expr></argument>, <argument pos:start="128:37" pos:end="128:65"><expr pos:start="128:37" pos:end="128:65"><literal type="string" pos:start="128:37" pos:end="128:65">"ibm,processor-segment-sizes"</literal></expr></argument>,
                               <argument pos:start="129:32" pos:end="129:35"><expr pos:start="129:32" pos:end="129:35"><name pos:start="129:32" pos:end="129:35">segs</name></expr></argument>, <argument pos:start="129:38" pos:end="129:49"><expr pos:start="129:38" pos:end="129:49"><sizeof pos:start="129:38" pos:end="129:49">sizeof<argument_list pos:start="129:44" pos:end="129:49">(<argument pos:start="129:45" pos:end="129:48"><expr pos:start="129:45" pos:end="129:48"><name pos:start="129:45" pos:end="129:48">segs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="129:51" pos:end="129:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <comment type="block" pos:start="131:9" pos:end="134:48">/* Advertise VMX/VSX (vector extensions) if available
         *   0 / no property == no vector extensions
         *   1               == VMX / Altivec available
         *   2               == VSX available */</comment>
        <if_stmt pos:start="135:9" pos:end="138:9"><if pos:start="135:9" pos:end="138:9">if <condition pos:start="135:12" pos:end="135:43">(<expr pos:start="135:13" pos:end="135:42"><name pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:15">env</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:28">insns_flags</name></name> <operator pos:start="135:30" pos:end="135:30">&amp;</operator> <name pos:start="135:32" pos:end="135:42">PPC_ALTIVEC</name></expr>)</condition> <block pos:start="135:45" pos:end="138:9">{<block_content pos:start="136:13" pos:end="137:59">
            <decl_stmt pos:start="136:13" pos:end="136:66"><decl pos:start="136:13" pos:end="136:65"><type pos:start="136:13" pos:end="136:20"><name pos:start="136:13" pos:end="136:20">uint32_t</name></type> <name pos:start="136:22" pos:end="136:24">vmx</name> <init pos:start="136:26" pos:end="136:65">= <expr pos:start="136:28" pos:end="136:65"><ternary pos:start="136:28" pos:end="136:65"><condition pos:start="136:28" pos:end="136:59"><expr pos:start="136:28" pos:end="136:57"><operator pos:start="136:28" pos:end="136:28">(</operator><name pos:start="136:29" pos:end="136:45"><name pos:start="136:29" pos:end="136:31">env</name><operator pos:start="136:32" pos:end="136:33">-&gt;</operator><name pos:start="136:34" pos:end="136:45">insns_flags2</name></name> <operator pos:start="136:47" pos:end="136:47">&amp;</operator> <name pos:start="136:49" pos:end="136:56">PPC2_VSX</name><operator pos:start="136:57" pos:end="136:57">)</operator></expr> ?</condition><then pos:start="136:61" pos:end="136:61"> <expr pos:start="136:61" pos:end="136:61"><literal type="number" pos:start="136:61" pos:end="136:61">2</literal></expr> </then><else pos:start="136:63" pos:end="136:65">: <expr pos:start="136:65" pos:end="136:65"><literal type="number" pos:start="136:65" pos:end="136:65">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="137:13" pos:end="137:59"><expr pos:start="137:13" pos:end="137:58"><call pos:start="137:13" pos:end="137:58"><name pos:start="137:13" pos:end="137:16">_FDT</name><argument_list pos:start="137:17" pos:end="137:58">(<argument pos:start="137:18" pos:end="137:57"><expr pos:start="137:18" pos:end="137:57"><operator pos:start="137:18" pos:end="137:18">(</operator><call pos:start="137:19" pos:end="137:56"><name pos:start="137:19" pos:end="137:35">fdt_property_cell</name><argument_list pos:start="137:36" pos:end="137:56">(<argument pos:start="137:37" pos:end="137:39"><expr pos:start="137:37" pos:end="137:39"><name pos:start="137:37" pos:end="137:39">fdt</name></expr></argument>, <argument pos:start="137:42" pos:end="137:50"><expr pos:start="137:42" pos:end="137:50"><literal type="string" pos:start="137:42" pos:end="137:50">"ibm,vmx"</literal></expr></argument>, <argument pos:start="137:53" pos:end="137:55"><expr pos:start="137:53" pos:end="137:55"><name pos:start="137:53" pos:end="137:55">vmx</name></expr></argument>)</argument_list></call><operator pos:start="137:57" pos:end="137:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <comment type="block" pos:start="139:9" pos:end="141:48">/* Advertise DFP (Decimal Floating Point) if available
         *   0 / no property == no DFP
         *   1               == DFP available */</comment>
        <if_stmt pos:start="142:9" pos:end="144:9"><if pos:start="142:9" pos:end="144:9">if <condition pos:start="142:12" pos:end="142:41">(<expr pos:start="142:13" pos:end="142:40"><name pos:start="142:13" pos:end="142:29"><name pos:start="142:13" pos:end="142:15">env</name><operator pos:start="142:16" pos:end="142:17">-&gt;</operator><name pos:start="142:18" pos:end="142:29">insns_flags2</name></name> <operator pos:start="142:31" pos:end="142:31">&amp;</operator> <name pos:start="142:33" pos:end="142:40">PPC2_DFP</name></expr>)</condition> <block pos:start="142:43" pos:end="144:9">{<block_content pos:start="143:13" pos:end="143:57">
            <expr_stmt pos:start="143:13" pos:end="143:57"><expr pos:start="143:13" pos:end="143:56"><call pos:start="143:13" pos:end="143:56"><name pos:start="143:13" pos:end="143:16">_FDT</name><argument_list pos:start="143:17" pos:end="143:56">(<argument pos:start="143:18" pos:end="143:55"><expr pos:start="143:18" pos:end="143:55"><operator pos:start="143:18" pos:end="143:18">(</operator><call pos:start="143:19" pos:end="143:54"><name pos:start="143:19" pos:end="143:35">fdt_property_cell</name><argument_list pos:start="143:36" pos:end="143:54">(<argument pos:start="143:37" pos:end="143:39"><expr pos:start="143:37" pos:end="143:39"><name pos:start="143:37" pos:end="143:39">fdt</name></expr></argument>, <argument pos:start="143:42" pos:end="143:50"><expr pos:start="143:42" pos:end="143:50"><literal type="string" pos:start="143:42" pos:end="143:50">"ibm,dfp"</literal></expr></argument>, <argument pos:start="143:53" pos:end="143:53"><expr pos:start="143:53" pos:end="143:53"><literal type="number" pos:start="143:53" pos:end="143:53">1</literal></expr></argument>)</argument_list></call><operator pos:start="143:55" pos:end="143:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="145:9" pos:end="146:79"><expr pos:start="145:9" pos:end="146:78"><name pos:start="145:9" pos:end="145:28">page_sizes_prop_size</name> <operator pos:start="145:30" pos:end="145:30">=</operator> <call pos:start="145:32" pos:end="146:78"><name pos:start="145:32" pos:end="145:53">create_page_sizes_prop</name><argument_list pos:start="145:54" pos:end="146:78">(<argument pos:start="145:55" pos:end="145:57"><expr pos:start="145:55" pos:end="145:57"><name pos:start="145:55" pos:end="145:57">env</name></expr></argument>, <argument pos:start="145:60" pos:end="145:74"><expr pos:start="145:60" pos:end="145:74"><name pos:start="145:60" pos:end="145:74">page_sizes_prop</name></expr></argument>,
                                                      <argument pos:start="146:55" pos:end="146:77"><expr pos:start="146:55" pos:end="146:77"><sizeof pos:start="146:55" pos:end="146:77">sizeof<argument_list pos:start="146:61" pos:end="146:77">(<argument pos:start="146:62" pos:end="146:76"><expr pos:start="146:62" pos:end="146:76"><name pos:start="146:62" pos:end="146:76">page_sizes_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="147:9" pos:end="150:9"><if pos:start="147:9" pos:end="150:9">if <condition pos:start="147:12" pos:end="147:33">(<expr pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:32">page_sizes_prop_size</name></expr>)</condition> <block pos:start="147:35" pos:end="150:9">{<block_content pos:start="148:13" pos:end="149:72">
            <expr_stmt pos:start="148:13" pos:end="149:72"><expr pos:start="148:13" pos:end="149:71"><call pos:start="148:13" pos:end="149:71"><name pos:start="148:13" pos:end="148:16">_FDT</name><argument_list pos:start="148:17" pos:end="149:71">(<argument pos:start="148:18" pos:end="149:70"><expr pos:start="148:18" pos:end="149:70"><operator pos:start="148:18" pos:end="148:18">(</operator><call pos:start="148:19" pos:end="149:69"><name pos:start="148:19" pos:end="148:30">fdt_property</name><argument_list pos:start="148:31" pos:end="149:69">(<argument pos:start="148:32" pos:end="148:34"><expr pos:start="148:32" pos:end="148:34"><name pos:start="148:32" pos:end="148:34">fdt</name></expr></argument>, <argument pos:start="148:37" pos:end="148:60"><expr pos:start="148:37" pos:end="148:60"><literal type="string" pos:start="148:37" pos:end="148:60">"ibm,segment-page-sizes"</literal></expr></argument>,
                               <argument pos:start="149:32" pos:end="149:46"><expr pos:start="149:32" pos:end="149:46"><name pos:start="149:32" pos:end="149:46">page_sizes_prop</name></expr></argument>, <argument pos:start="149:49" pos:end="149:68"><expr pos:start="149:49" pos:end="149:68"><name pos:start="149:49" pos:end="149:68">page_sizes_prop_size</name></expr></argument>)</argument_list></call><operator pos:start="149:70" pos:end="149:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="151:9" pos:end="152:67"><expr pos:start="151:9" pos:end="152:66"><call pos:start="151:9" pos:end="152:66"><name pos:start="151:9" pos:end="151:12">_FDT</name><argument_list pos:start="151:13" pos:end="152:66">(<argument pos:start="151:14" pos:end="152:65"><expr pos:start="151:14" pos:end="152:65"><operator pos:start="151:14" pos:end="151:14">(</operator><call pos:start="151:15" pos:end="152:64"><name pos:start="151:15" pos:end="151:31">fdt_property_cell</name><argument_list pos:start="151:32" pos:end="152:64">(<argument pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><name pos:start="151:33" pos:end="151:35">fdt</name></expr></argument>, <argument pos:start="151:38" pos:end="151:50"><expr pos:start="151:38" pos:end="151:50"><literal type="string" pos:start="151:38" pos:end="151:50">"ibm,chip-id"</literal></expr></argument>,
                                <argument pos:start="152:33" pos:end="152:63"><expr pos:start="152:33" pos:end="152:63"><name pos:start="152:33" pos:end="152:45"><name pos:start="152:33" pos:end="152:34">cs</name><operator pos:start="152:35" pos:end="152:36">-&gt;</operator><name pos:start="152:37" pos:end="152:45">cpu_index</name></name> <operator pos:start="152:47" pos:end="152:47">/</operator> <name pos:start="152:49" pos:end="152:63">cpus_per_socket</name></expr></argument>)</argument_list></call><operator pos:start="152:65" pos:end="152:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="153:9" pos:end="153:34"><expr pos:start="153:9" pos:end="153:33"><call pos:start="153:9" pos:end="153:33"><name pos:start="153:9" pos:end="153:12">_FDT</name><argument_list pos:start="153:13" pos:end="153:33">(<argument pos:start="153:14" pos:end="153:32"><expr pos:start="153:14" pos:end="153:32"><operator pos:start="153:14" pos:end="153:14">(</operator><call pos:start="153:15" pos:end="153:31"><name pos:start="153:15" pos:end="153:26">fdt_end_node</name><argument_list pos:start="153:27" pos:end="153:31">(<argument pos:start="153:28" pos:end="153:30"><expr pos:start="153:28" pos:end="153:30"><name pos:start="153:28" pos:end="153:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="153:32" pos:end="153:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
    <expr_stmt pos:start="155:5" pos:end="155:30"><expr pos:start="155:5" pos:end="155:29"><call pos:start="155:5" pos:end="155:29"><name pos:start="155:5" pos:end="155:8">_FDT</name><argument_list pos:start="155:9" pos:end="155:29">(<argument pos:start="155:10" pos:end="155:28"><expr pos:start="155:10" pos:end="155:28"><operator pos:start="155:10" pos:end="155:10">(</operator><call pos:start="155:11" pos:end="155:27"><name pos:start="155:11" pos:end="155:22">fdt_end_node</name><argument_list pos:start="155:23" pos:end="155:27">(<argument pos:start="155:24" pos:end="155:26"><expr pos:start="155:24" pos:end="155:26"><name pos:start="155:24" pos:end="155:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="155:28" pos:end="155:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="156:5" pos:end="156:14">/* RTAS */</comment>
    <expr_stmt pos:start="157:5" pos:end="157:40"><expr pos:start="157:5" pos:end="157:39"><call pos:start="157:5" pos:end="157:39"><name pos:start="157:5" pos:end="157:8">_FDT</name><argument_list pos:start="157:9" pos:end="157:39">(<argument pos:start="157:10" pos:end="157:38"><expr pos:start="157:10" pos:end="157:38"><operator pos:start="157:10" pos:end="157:10">(</operator><call pos:start="157:11" pos:end="157:37"><name pos:start="157:11" pos:end="157:24">fdt_begin_node</name><argument_list pos:start="157:25" pos:end="157:37">(<argument pos:start="157:26" pos:end="157:28"><expr pos:start="157:26" pos:end="157:28"><name pos:start="157:26" pos:end="157:28">fdt</name></expr></argument>, <argument pos:start="157:31" pos:end="157:36"><expr pos:start="157:31" pos:end="157:36"><literal type="string" pos:start="157:31" pos:end="157:36">"rtas"</literal></expr></argument>)</argument_list></call><operator pos:start="157:38" pos:end="157:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="158:5" pos:end="160:5"><if pos:start="158:5" pos:end="160:5">if <condition pos:start="158:8" pos:end="158:54">(<expr pos:start="158:9" pos:end="158:53"><operator pos:start="158:9" pos:end="158:9">!</operator><call pos:start="158:10" pos:end="158:22"><name pos:start="158:10" pos:end="158:20">kvm_enabled</name><argument_list pos:start="158:21" pos:end="158:22">()</argument_list></call> <operator pos:start="158:24" pos:end="158:25">||</operator> <call pos:start="158:27" pos:end="158:53"><name pos:start="158:27" pos:end="158:51">kvmppc_spapr_use_multitce</name><argument_list pos:start="158:52" pos:end="158:53">()</argument_list></call></expr>)</condition> <block pos:start="158:56" pos:end="160:5">{<block_content pos:start="159:9" pos:end="159:45">
        <expr_stmt pos:start="159:9" pos:end="159:45"><expr pos:start="159:9" pos:end="159:44"><call pos:start="159:9" pos:end="159:44"><name pos:start="159:9" pos:end="159:15">add_str</name><argument_list pos:start="159:16" pos:end="159:44">(<argument pos:start="159:17" pos:end="159:24"><expr pos:start="159:17" pos:end="159:24"><name pos:start="159:17" pos:end="159:24">hypertas</name></expr></argument>, <argument pos:start="159:27" pos:end="159:43"><expr pos:start="159:27" pos:end="159:43"><literal type="string" pos:start="159:27" pos:end="159:43">"hcall-multi-tce"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="161:5" pos:end="162:40"><expr pos:start="161:5" pos:end="162:39"><call pos:start="161:5" pos:end="162:39"><name pos:start="161:5" pos:end="161:8">_FDT</name><argument_list pos:start="161:9" pos:end="162:39">(<argument pos:start="161:10" pos:end="162:38"><expr pos:start="161:10" pos:end="162:38"><operator pos:start="161:10" pos:end="161:10">(</operator><call pos:start="161:11" pos:end="162:37"><name pos:start="161:11" pos:end="161:22">fdt_property</name><argument_list pos:start="161:23" pos:end="162:37">(<argument pos:start="161:24" pos:end="161:26"><expr pos:start="161:24" pos:end="161:26"><name pos:start="161:24" pos:end="161:26">fdt</name></expr></argument>, <argument pos:start="161:29" pos:end="161:52"><expr pos:start="161:29" pos:end="161:52"><literal type="string" pos:start="161:29" pos:end="161:52">"ibm,hypertas-functions"</literal></expr></argument>, <argument pos:start="161:55" pos:end="161:67"><expr pos:start="161:55" pos:end="161:67"><name pos:start="161:55" pos:end="161:67"><name pos:start="161:55" pos:end="161:62">hypertas</name><operator pos:start="161:63" pos:end="161:64">-&gt;</operator><name pos:start="161:65" pos:end="161:67">str</name></name></expr></argument>,
                       <argument pos:start="162:24" pos:end="162:36"><expr pos:start="162:24" pos:end="162:36"><name pos:start="162:24" pos:end="162:36"><name pos:start="162:24" pos:end="162:31">hypertas</name><operator pos:start="162:32" pos:end="162:33">-&gt;</operator><name pos:start="162:34" pos:end="162:36">len</name></name></expr></argument>)</argument_list></call><operator pos:start="162:38" pos:end="162:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="163:5" pos:end="163:34"><expr pos:start="163:5" pos:end="163:33"><call pos:start="163:5" pos:end="163:33"><name pos:start="163:5" pos:end="163:17">g_string_free</name><argument_list pos:start="163:18" pos:end="163:33">(<argument pos:start="163:19" pos:end="163:26"><expr pos:start="163:19" pos:end="163:26"><name pos:start="163:19" pos:end="163:26">hypertas</name></expr></argument>, <argument pos:start="163:29" pos:end="163:32"><expr pos:start="163:29" pos:end="163:32"><name pos:start="163:29" pos:end="163:32">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="164:5" pos:end="165:45"><expr pos:start="164:5" pos:end="165:44"><call pos:start="164:5" pos:end="165:44"><name pos:start="164:5" pos:end="164:8">_FDT</name><argument_list pos:start="164:9" pos:end="165:44">(<argument pos:start="164:10" pos:end="165:43"><expr pos:start="164:10" pos:end="165:43"><operator pos:start="164:10" pos:end="164:10">(</operator><call pos:start="164:11" pos:end="165:42"><name pos:start="164:11" pos:end="164:22">fdt_property</name><argument_list pos:start="164:23" pos:end="165:42">(<argument pos:start="164:24" pos:end="164:26"><expr pos:start="164:24" pos:end="164:26"><name pos:start="164:24" pos:end="164:26">fdt</name></expr></argument>, <argument pos:start="164:29" pos:end="164:53"><expr pos:start="164:29" pos:end="164:53"><literal type="string" pos:start="164:29" pos:end="164:53">"qemu,hypertas-functions"</literal></expr></argument>, <argument pos:start="164:56" pos:end="164:73"><expr pos:start="164:56" pos:end="164:73"><name pos:start="164:56" pos:end="164:73"><name pos:start="164:56" pos:end="164:68">qemu_hypertas</name><operator pos:start="164:69" pos:end="164:70">-&gt;</operator><name pos:start="164:71" pos:end="164:73">str</name></name></expr></argument>,
                       <argument pos:start="165:24" pos:end="165:41"><expr pos:start="165:24" pos:end="165:41"><name pos:start="165:24" pos:end="165:41"><name pos:start="165:24" pos:end="165:36">qemu_hypertas</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:41">len</name></name></expr></argument>)</argument_list></call><operator pos:start="165:43" pos:end="165:43">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="166:5" pos:end="166:39"><expr pos:start="166:5" pos:end="166:38"><call pos:start="166:5" pos:end="166:38"><name pos:start="166:5" pos:end="166:17">g_string_free</name><argument_list pos:start="166:18" pos:end="166:38">(<argument pos:start="166:19" pos:end="166:31"><expr pos:start="166:19" pos:end="166:31"><name pos:start="166:19" pos:end="166:31">qemu_hypertas</name></expr></argument>, <argument pos:start="166:34" pos:end="166:37"><expr pos:start="166:34" pos:end="166:37"><name pos:start="166:34" pos:end="166:37">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="167:5" pos:end="168:40"><expr pos:start="167:5" pos:end="168:39"><call pos:start="167:5" pos:end="168:39"><name pos:start="167:5" pos:end="167:8">_FDT</name><argument_list pos:start="167:9" pos:end="168:39">(<argument pos:start="167:10" pos:end="168:38"><expr pos:start="167:10" pos:end="168:38"><operator pos:start="167:10" pos:end="167:10">(</operator><call pos:start="167:11" pos:end="168:37"><name pos:start="167:11" pos:end="167:22">fdt_property</name><argument_list pos:start="167:23" pos:end="168:37">(<argument pos:start="167:24" pos:end="167:26"><expr pos:start="167:24" pos:end="167:26"><name pos:start="167:24" pos:end="167:26">fdt</name></expr></argument>, <argument pos:start="167:29" pos:end="167:64"><expr pos:start="167:29" pos:end="167:64"><literal type="string" pos:start="167:29" pos:end="167:64">"ibm,associativity-reference-points"</literal></expr></argument>,
        <argument pos:start="168:9" pos:end="168:17"><expr pos:start="168:9" pos:end="168:17"><name pos:start="168:9" pos:end="168:17">refpoints</name></expr></argument>, <argument pos:start="168:20" pos:end="168:36"><expr pos:start="168:20" pos:end="168:36"><sizeof pos:start="168:20" pos:end="168:36">sizeof<argument_list pos:start="168:26" pos:end="168:36">(<argument pos:start="168:27" pos:end="168:35"><expr pos:start="168:27" pos:end="168:35"><name pos:start="168:27" pos:end="168:35">refpoints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="168:38" pos:end="168:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="169:5" pos:end="169:77"><expr pos:start="169:5" pos:end="169:76"><call pos:start="169:5" pos:end="169:76"><name pos:start="169:5" pos:end="169:8">_FDT</name><argument_list pos:start="169:9" pos:end="169:76">(<argument pos:start="169:10" pos:end="169:75"><expr pos:start="169:10" pos:end="169:75"><operator pos:start="169:10" pos:end="169:10">(</operator><call pos:start="169:11" pos:end="169:74"><name pos:start="169:11" pos:end="169:27">fdt_property_cell</name><argument_list pos:start="169:28" pos:end="169:74">(<argument pos:start="169:29" pos:end="169:31"><expr pos:start="169:29" pos:end="169:31"><name pos:start="169:29" pos:end="169:31">fdt</name></expr></argument>, <argument pos:start="169:34" pos:end="169:53"><expr pos:start="169:34" pos:end="169:53"><literal type="string" pos:start="169:34" pos:end="169:53">"rtas-error-log-max"</literal></expr></argument>, <argument pos:start="169:56" pos:end="169:73"><expr pos:start="169:56" pos:end="169:73"><name pos:start="169:56" pos:end="169:73">RTAS_ERROR_LOG_MAX</name></expr></argument>)</argument_list></call><operator pos:start="169:75" pos:end="169:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="170:5" pos:end="170:30"><expr pos:start="170:5" pos:end="170:29"><call pos:start="170:5" pos:end="170:29"><name pos:start="170:5" pos:end="170:8">_FDT</name><argument_list pos:start="170:9" pos:end="170:29">(<argument pos:start="170:10" pos:end="170:28"><expr pos:start="170:10" pos:end="170:28"><operator pos:start="170:10" pos:end="170:10">(</operator><call pos:start="170:11" pos:end="170:27"><name pos:start="170:11" pos:end="170:22">fdt_end_node</name><argument_list pos:start="170:23" pos:end="170:27">(<argument pos:start="170:24" pos:end="170:26"><expr pos:start="170:24" pos:end="170:26"><name pos:start="170:24" pos:end="170:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="170:28" pos:end="170:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="171:5" pos:end="171:30">/* interrupt controller */</comment>
    <expr_stmt pos:start="172:5" pos:end="172:56"><expr pos:start="172:5" pos:end="172:55"><call pos:start="172:5" pos:end="172:55"><name pos:start="172:5" pos:end="172:8">_FDT</name><argument_list pos:start="172:9" pos:end="172:55">(<argument pos:start="172:10" pos:end="172:54"><expr pos:start="172:10" pos:end="172:54"><operator pos:start="172:10" pos:end="172:10">(</operator><call pos:start="172:11" pos:end="172:53"><name pos:start="172:11" pos:end="172:24">fdt_begin_node</name><argument_list pos:start="172:25" pos:end="172:53">(<argument pos:start="172:26" pos:end="172:28"><expr pos:start="172:26" pos:end="172:28"><name pos:start="172:26" pos:end="172:28">fdt</name></expr></argument>, <argument pos:start="172:31" pos:end="172:52"><expr pos:start="172:31" pos:end="172:52"><literal type="string" pos:start="172:31" pos:end="172:52">"interrupt-controller"</literal></expr></argument>)</argument_list></call><operator pos:start="172:54" pos:end="172:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="173:5" pos:end="174:75"><expr pos:start="173:5" pos:end="174:74"><call pos:start="173:5" pos:end="174:74"><name pos:start="173:5" pos:end="173:8">_FDT</name><argument_list pos:start="173:9" pos:end="174:74">(<argument pos:start="173:10" pos:end="174:73"><expr pos:start="173:10" pos:end="174:73"><operator pos:start="173:10" pos:end="173:10">(</operator><call pos:start="173:11" pos:end="174:72"><name pos:start="173:11" pos:end="173:29">fdt_property_string</name><argument_list pos:start="173:30" pos:end="174:72">(<argument pos:start="173:31" pos:end="173:33"><expr pos:start="173:31" pos:end="173:33"><name pos:start="173:31" pos:end="173:33">fdt</name></expr></argument>, <argument pos:start="173:36" pos:end="173:48"><expr pos:start="173:36" pos:end="173:48"><literal type="string" pos:start="173:36" pos:end="173:48">"device_type"</literal></expr></argument>,
                              <argument pos:start="174:31" pos:end="174:71"><expr pos:start="174:31" pos:end="174:71"><literal type="string" pos:start="174:31" pos:end="174:71">"PowerPC-External-Interrupt-Presentation"</literal></expr></argument>)</argument_list></call><operator pos:start="174:73" pos:end="174:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="175:5" pos:end="175:67"><expr pos:start="175:5" pos:end="175:66"><call pos:start="175:5" pos:end="175:66"><name pos:start="175:5" pos:end="175:8">_FDT</name><argument_list pos:start="175:9" pos:end="175:66">(<argument pos:start="175:10" pos:end="175:65"><expr pos:start="175:10" pos:end="175:65"><operator pos:start="175:10" pos:end="175:10">(</operator><call pos:start="175:11" pos:end="175:64"><name pos:start="175:11" pos:end="175:29">fdt_property_string</name><argument_list pos:start="175:30" pos:end="175:64">(<argument pos:start="175:31" pos:end="175:33"><expr pos:start="175:31" pos:end="175:33"><name pos:start="175:31" pos:end="175:33">fdt</name></expr></argument>, <argument pos:start="175:36" pos:end="175:47"><expr pos:start="175:36" pos:end="175:47"><literal type="string" pos:start="175:36" pos:end="175:47">"compatible"</literal></expr></argument>, <argument pos:start="175:50" pos:end="175:63"><expr pos:start="175:50" pos:end="175:63"><literal type="string" pos:start="175:50" pos:end="175:63">"IBM,ppc-xicp"</literal></expr></argument>)</argument_list></call><operator pos:start="175:65" pos:end="175:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="176:5" pos:end="176:63"><expr pos:start="176:5" pos:end="176:62"><call pos:start="176:5" pos:end="176:62"><name pos:start="176:5" pos:end="176:8">_FDT</name><argument_list pos:start="176:9" pos:end="176:62">(<argument pos:start="176:10" pos:end="176:61"><expr pos:start="176:10" pos:end="176:61"><operator pos:start="176:10" pos:end="176:10">(</operator><call pos:start="176:11" pos:end="176:60"><name pos:start="176:11" pos:end="176:22">fdt_property</name><argument_list pos:start="176:23" pos:end="176:60">(<argument pos:start="176:24" pos:end="176:26"><expr pos:start="176:24" pos:end="176:26"><name pos:start="176:24" pos:end="176:26">fdt</name></expr></argument>, <argument pos:start="176:29" pos:end="176:50"><expr pos:start="176:29" pos:end="176:50"><literal type="string" pos:start="176:29" pos:end="176:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="176:53" pos:end="176:56"><expr pos:start="176:53" pos:end="176:56"><name pos:start="176:53" pos:end="176:56">NULL</name></expr></argument>, <argument pos:start="176:59" pos:end="176:59"><expr pos:start="176:59" pos:end="176:59"><literal type="number" pos:start="176:59" pos:end="176:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="176:61" pos:end="176:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="177:5" pos:end="179:63"><expr pos:start="177:5" pos:end="179:62"><call pos:start="177:5" pos:end="179:62"><name pos:start="177:5" pos:end="177:8">_FDT</name><argument_list pos:start="177:9" pos:end="179:62">(<argument pos:start="177:10" pos:end="179:61"><expr pos:start="177:10" pos:end="179:61"><operator pos:start="177:10" pos:end="177:10">(</operator><call pos:start="177:11" pos:end="179:60"><name pos:start="177:11" pos:end="177:22">fdt_property</name><argument_list pos:start="177:23" pos:end="179:60">(<argument pos:start="177:24" pos:end="177:26"><expr pos:start="177:24" pos:end="177:26"><name pos:start="177:24" pos:end="177:26">fdt</name></expr></argument>, <argument pos:start="177:29" pos:end="177:57"><expr pos:start="177:29" pos:end="177:57"><literal type="string" pos:start="177:29" pos:end="177:57">"ibm,interrupt-server-ranges"</literal></expr></argument>,
                       <argument pos:start="178:24" pos:end="178:51"><expr pos:start="178:24" pos:end="178:51"><name pos:start="178:24" pos:end="178:51">interrupt_server_ranges_prop</name></expr></argument>,
                       <argument pos:start="179:24" pos:end="179:59"><expr pos:start="179:24" pos:end="179:59"><sizeof pos:start="179:24" pos:end="179:59">sizeof<argument_list pos:start="179:30" pos:end="179:59">(<argument pos:start="179:31" pos:end="179:58"><expr pos:start="179:31" pos:end="179:58"><name pos:start="179:31" pos:end="179:58">interrupt_server_ranges_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="179:61" pos:end="179:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="180:5" pos:end="180:58"><expr pos:start="180:5" pos:end="180:57"><call pos:start="180:5" pos:end="180:57"><name pos:start="180:5" pos:end="180:8">_FDT</name><argument_list pos:start="180:9" pos:end="180:57">(<argument pos:start="180:10" pos:end="180:56"><expr pos:start="180:10" pos:end="180:56"><operator pos:start="180:10" pos:end="180:10">(</operator><call pos:start="180:11" pos:end="180:55"><name pos:start="180:11" pos:end="180:27">fdt_property_cell</name><argument_list pos:start="180:28" pos:end="180:55">(<argument pos:start="180:29" pos:end="180:31"><expr pos:start="180:29" pos:end="180:31"><name pos:start="180:29" pos:end="180:31">fdt</name></expr></argument>, <argument pos:start="180:34" pos:end="180:51"><expr pos:start="180:34" pos:end="180:51"><literal type="string" pos:start="180:34" pos:end="180:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="180:54" pos:end="180:54"><expr pos:start="180:54" pos:end="180:54"><literal type="number" pos:start="180:54" pos:end="180:54">2</literal></expr></argument>)</argument_list></call><operator pos:start="180:56" pos:end="180:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="181:5" pos:end="181:66"><expr pos:start="181:5" pos:end="181:65"><call pos:start="181:5" pos:end="181:65"><name pos:start="181:5" pos:end="181:8">_FDT</name><argument_list pos:start="181:9" pos:end="181:65">(<argument pos:start="181:10" pos:end="181:64"><expr pos:start="181:10" pos:end="181:64"><operator pos:start="181:10" pos:end="181:10">(</operator><call pos:start="181:11" pos:end="181:63"><name pos:start="181:11" pos:end="181:27">fdt_property_cell</name><argument_list pos:start="181:28" pos:end="181:63">(<argument pos:start="181:29" pos:end="181:31"><expr pos:start="181:29" pos:end="181:31"><name pos:start="181:29" pos:end="181:31">fdt</name></expr></argument>, <argument pos:start="181:34" pos:end="181:48"><expr pos:start="181:34" pos:end="181:48"><literal type="string" pos:start="181:34" pos:end="181:48">"linux,phandle"</literal></expr></argument>, <argument pos:start="181:51" pos:end="181:62"><expr pos:start="181:51" pos:end="181:62"><name pos:start="181:51" pos:end="181:62">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="181:64" pos:end="181:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="182:5" pos:end="182:60"><expr pos:start="182:5" pos:end="182:59"><call pos:start="182:5" pos:end="182:59"><name pos:start="182:5" pos:end="182:8">_FDT</name><argument_list pos:start="182:9" pos:end="182:59">(<argument pos:start="182:10" pos:end="182:58"><expr pos:start="182:10" pos:end="182:58"><operator pos:start="182:10" pos:end="182:10">(</operator><call pos:start="182:11" pos:end="182:57"><name pos:start="182:11" pos:end="182:27">fdt_property_cell</name><argument_list pos:start="182:28" pos:end="182:57">(<argument pos:start="182:29" pos:end="182:31"><expr pos:start="182:29" pos:end="182:31"><name pos:start="182:29" pos:end="182:31">fdt</name></expr></argument>, <argument pos:start="182:34" pos:end="182:42"><expr pos:start="182:34" pos:end="182:42"><literal type="string" pos:start="182:34" pos:end="182:42">"phandle"</literal></expr></argument>, <argument pos:start="182:45" pos:end="182:56"><expr pos:start="182:45" pos:end="182:56"><name pos:start="182:45" pos:end="182:56">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="182:58" pos:end="182:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="183:5" pos:end="183:30"><expr pos:start="183:5" pos:end="183:29"><call pos:start="183:5" pos:end="183:29"><name pos:start="183:5" pos:end="183:8">_FDT</name><argument_list pos:start="183:9" pos:end="183:29">(<argument pos:start="183:10" pos:end="183:28"><expr pos:start="183:10" pos:end="183:28"><operator pos:start="183:10" pos:end="183:10">(</operator><call pos:start="183:11" pos:end="183:27"><name pos:start="183:11" pos:end="183:22">fdt_end_node</name><argument_list pos:start="183:23" pos:end="183:27">(<argument pos:start="183:24" pos:end="183:26"><expr pos:start="183:24" pos:end="183:26"><name pos:start="183:24" pos:end="183:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="183:28" pos:end="183:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="184:5" pos:end="184:17">/* vdevice */</comment>
    <expr_stmt pos:start="185:5" pos:end="185:43"><expr pos:start="185:5" pos:end="185:42"><call pos:start="185:5" pos:end="185:42"><name pos:start="185:5" pos:end="185:8">_FDT</name><argument_list pos:start="185:9" pos:end="185:42">(<argument pos:start="185:10" pos:end="185:41"><expr pos:start="185:10" pos:end="185:41"><operator pos:start="185:10" pos:end="185:10">(</operator><call pos:start="185:11" pos:end="185:40"><name pos:start="185:11" pos:end="185:24">fdt_begin_node</name><argument_list pos:start="185:25" pos:end="185:40">(<argument pos:start="185:26" pos:end="185:28"><expr pos:start="185:26" pos:end="185:28"><name pos:start="185:26" pos:end="185:28">fdt</name></expr></argument>, <argument pos:start="185:31" pos:end="185:39"><expr pos:start="185:31" pos:end="185:39"><literal type="string" pos:start="185:31" pos:end="185:39">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="185:41" pos:end="185:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="186:5" pos:end="186:63"><expr pos:start="186:5" pos:end="186:62"><call pos:start="186:5" pos:end="186:62"><name pos:start="186:5" pos:end="186:8">_FDT</name><argument_list pos:start="186:9" pos:end="186:62">(<argument pos:start="186:10" pos:end="186:61"><expr pos:start="186:10" pos:end="186:61"><operator pos:start="186:10" pos:end="186:10">(</operator><call pos:start="186:11" pos:end="186:60"><name pos:start="186:11" pos:end="186:29">fdt_property_string</name><argument_list pos:start="186:30" pos:end="186:60">(<argument pos:start="186:31" pos:end="186:33"><expr pos:start="186:31" pos:end="186:33"><name pos:start="186:31" pos:end="186:33">fdt</name></expr></argument>, <argument pos:start="186:36" pos:end="186:48"><expr pos:start="186:36" pos:end="186:48"><literal type="string" pos:start="186:36" pos:end="186:48">"device_type"</literal></expr></argument>, <argument pos:start="186:51" pos:end="186:59"><expr pos:start="186:51" pos:end="186:59"><literal type="string" pos:start="186:51" pos:end="186:59">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="186:61" pos:end="186:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="187:5" pos:end="187:66"><expr pos:start="187:5" pos:end="187:65"><call pos:start="187:5" pos:end="187:65"><name pos:start="187:5" pos:end="187:8">_FDT</name><argument_list pos:start="187:9" pos:end="187:65">(<argument pos:start="187:10" pos:end="187:64"><expr pos:start="187:10" pos:end="187:64"><operator pos:start="187:10" pos:end="187:10">(</operator><call pos:start="187:11" pos:end="187:63"><name pos:start="187:11" pos:end="187:29">fdt_property_string</name><argument_list pos:start="187:30" pos:end="187:63">(<argument pos:start="187:31" pos:end="187:33"><expr pos:start="187:31" pos:end="187:33"><name pos:start="187:31" pos:end="187:33">fdt</name></expr></argument>, <argument pos:start="187:36" pos:end="187:47"><expr pos:start="187:36" pos:end="187:47"><literal type="string" pos:start="187:36" pos:end="187:47">"compatible"</literal></expr></argument>, <argument pos:start="187:50" pos:end="187:62"><expr pos:start="187:50" pos:end="187:62"><literal type="string" pos:start="187:50" pos:end="187:62">"IBM,vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="187:64" pos:end="187:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="188:5" pos:end="188:58"><expr pos:start="188:5" pos:end="188:57"><call pos:start="188:5" pos:end="188:57"><name pos:start="188:5" pos:end="188:8">_FDT</name><argument_list pos:start="188:9" pos:end="188:57">(<argument pos:start="188:10" pos:end="188:56"><expr pos:start="188:10" pos:end="188:56"><operator pos:start="188:10" pos:end="188:10">(</operator><call pos:start="188:11" pos:end="188:55"><name pos:start="188:11" pos:end="188:27">fdt_property_cell</name><argument_list pos:start="188:28" pos:end="188:55">(<argument pos:start="188:29" pos:end="188:31"><expr pos:start="188:29" pos:end="188:31"><name pos:start="188:29" pos:end="188:31">fdt</name></expr></argument>, <argument pos:start="188:34" pos:end="188:49"><expr pos:start="188:34" pos:end="188:49"><literal type="string" pos:start="188:34" pos:end="188:49">"#address-cells"</literal></expr></argument>, <argument pos:start="188:52" pos:end="188:54"><expr pos:start="188:52" pos:end="188:54"><literal type="number" pos:start="188:52" pos:end="188:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="188:56" pos:end="188:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="189:5" pos:end="189:55"><expr pos:start="189:5" pos:end="189:54"><call pos:start="189:5" pos:end="189:54"><name pos:start="189:5" pos:end="189:8">_FDT</name><argument_list pos:start="189:9" pos:end="189:54">(<argument pos:start="189:10" pos:end="189:53"><expr pos:start="189:10" pos:end="189:53"><operator pos:start="189:10" pos:end="189:10">(</operator><call pos:start="189:11" pos:end="189:52"><name pos:start="189:11" pos:end="189:27">fdt_property_cell</name><argument_list pos:start="189:28" pos:end="189:52">(<argument pos:start="189:29" pos:end="189:31"><expr pos:start="189:29" pos:end="189:31"><name pos:start="189:29" pos:end="189:31">fdt</name></expr></argument>, <argument pos:start="189:34" pos:end="189:46"><expr pos:start="189:34" pos:end="189:46"><literal type="string" pos:start="189:34" pos:end="189:46">"#size-cells"</literal></expr></argument>, <argument pos:start="189:49" pos:end="189:51"><expr pos:start="189:49" pos:end="189:51"><literal type="number" pos:start="189:49" pos:end="189:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="189:53" pos:end="189:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="190:5" pos:end="190:60"><expr pos:start="190:5" pos:end="190:59"><call pos:start="190:5" pos:end="190:59"><name pos:start="190:5" pos:end="190:8">_FDT</name><argument_list pos:start="190:9" pos:end="190:59">(<argument pos:start="190:10" pos:end="190:58"><expr pos:start="190:10" pos:end="190:58"><operator pos:start="190:10" pos:end="190:10">(</operator><call pos:start="190:11" pos:end="190:57"><name pos:start="190:11" pos:end="190:27">fdt_property_cell</name><argument_list pos:start="190:28" pos:end="190:57">(<argument pos:start="190:29" pos:end="190:31"><expr pos:start="190:29" pos:end="190:31"><name pos:start="190:29" pos:end="190:31">fdt</name></expr></argument>, <argument pos:start="190:34" pos:end="190:51"><expr pos:start="190:34" pos:end="190:51"><literal type="string" pos:start="190:34" pos:end="190:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="190:54" pos:end="190:56"><expr pos:start="190:54" pos:end="190:56"><literal type="number" pos:start="190:54" pos:end="190:56">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="190:58" pos:end="190:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="191:5" pos:end="191:63"><expr pos:start="191:5" pos:end="191:62"><call pos:start="191:5" pos:end="191:62"><name pos:start="191:5" pos:end="191:8">_FDT</name><argument_list pos:start="191:9" pos:end="191:62">(<argument pos:start="191:10" pos:end="191:61"><expr pos:start="191:10" pos:end="191:61"><operator pos:start="191:10" pos:end="191:10">(</operator><call pos:start="191:11" pos:end="191:60"><name pos:start="191:11" pos:end="191:22">fdt_property</name><argument_list pos:start="191:23" pos:end="191:60">(<argument pos:start="191:24" pos:end="191:26"><expr pos:start="191:24" pos:end="191:26"><name pos:start="191:24" pos:end="191:26">fdt</name></expr></argument>, <argument pos:start="191:29" pos:end="191:50"><expr pos:start="191:29" pos:end="191:50"><literal type="string" pos:start="191:29" pos:end="191:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="191:53" pos:end="191:56"><expr pos:start="191:53" pos:end="191:56"><name pos:start="191:53" pos:end="191:56">NULL</name></expr></argument>, <argument pos:start="191:59" pos:end="191:59"><expr pos:start="191:59" pos:end="191:59"><literal type="number" pos:start="191:59" pos:end="191:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="191:61" pos:end="191:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="192:5" pos:end="192:30"><expr pos:start="192:5" pos:end="192:29"><call pos:start="192:5" pos:end="192:29"><name pos:start="192:5" pos:end="192:8">_FDT</name><argument_list pos:start="192:9" pos:end="192:29">(<argument pos:start="192:10" pos:end="192:28"><expr pos:start="192:10" pos:end="192:28"><operator pos:start="192:10" pos:end="192:10">(</operator><call pos:start="192:11" pos:end="192:27"><name pos:start="192:11" pos:end="192:22">fdt_end_node</name><argument_list pos:start="192:23" pos:end="192:27">(<argument pos:start="192:24" pos:end="192:26"><expr pos:start="192:24" pos:end="192:26"><name pos:start="192:24" pos:end="192:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="192:28" pos:end="192:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="193:5" pos:end="193:23">/* event-sources */</comment>
    <expr_stmt pos:start="194:5" pos:end="194:41"><expr pos:start="194:5" pos:end="194:40"><call pos:start="194:5" pos:end="194:40"><name pos:start="194:5" pos:end="194:25">spapr_events_fdt_skel</name><argument_list pos:start="194:26" pos:end="194:40">(<argument pos:start="194:27" pos:end="194:29"><expr pos:start="194:27" pos:end="194:29"><name pos:start="194:27" pos:end="194:29">fdt</name></expr></argument>, <argument pos:start="194:32" pos:end="194:39"><expr pos:start="194:32" pos:end="194:39"><name pos:start="194:32" pos:end="194:39">epow_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="195:5" pos:end="195:26">/* /hypervisor node */</comment>
    <if_stmt pos:start="196:5" pos:end="203:31"><if pos:start="196:5" pos:end="203:31">if <condition pos:start="196:8" pos:end="196:22">(<expr pos:start="196:9" pos:end="196:21"><call pos:start="196:9" pos:end="196:21"><name pos:start="196:9" pos:end="196:19">kvm_enabled</name><argument_list pos:start="196:20" pos:end="196:21">()</argument_list></call></expr>)</condition> <block pos:start="196:24" pos:end="203:31">{<block_content pos:start="197:9" pos:end="203:31">
        <decl_stmt pos:start="197:9" pos:end="197:30"><decl pos:start="197:9" pos:end="197:29"><type pos:start="197:9" pos:end="197:15"><name pos:start="197:9" pos:end="197:15">uint8_t</name></type> <name pos:start="197:17" pos:end="197:29"><name pos:start="197:17" pos:end="197:25">hypercall</name><index pos:start="197:26" pos:end="197:29">[<expr pos:start="197:27" pos:end="197:28"><literal type="number" pos:start="197:27" pos:end="197:28">16</literal></expr>]</index></name></decl>;</decl_stmt>
        <comment type="block" pos:start="198:9" pos:end="198:46">/* indicate KVM hypercall interface */</comment>
        <expr_stmt pos:start="199:9" pos:end="199:50"><expr pos:start="199:9" pos:end="199:49"><call pos:start="199:9" pos:end="199:49"><name pos:start="199:9" pos:end="199:12">_FDT</name><argument_list pos:start="199:13" pos:end="199:49">(<argument pos:start="199:14" pos:end="199:48"><expr pos:start="199:14" pos:end="199:48"><operator pos:start="199:14" pos:end="199:14">(</operator><call pos:start="199:15" pos:end="199:47"><name pos:start="199:15" pos:end="199:28">fdt_begin_node</name><argument_list pos:start="199:29" pos:end="199:47">(<argument pos:start="199:30" pos:end="199:32"><expr pos:start="199:30" pos:end="199:32"><name pos:start="199:30" pos:end="199:32">fdt</name></expr></argument>, <argument pos:start="199:35" pos:end="199:46"><expr pos:start="199:35" pos:end="199:46"><literal type="string" pos:start="199:35" pos:end="199:46">"hypervisor"</literal></expr></argument>)</argument_list></call><operator pos:start="199:48" pos:end="199:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="200:9" pos:end="200:68"><expr pos:start="200:9" pos:end="200:67"><call pos:start="200:9" pos:end="200:67"><name pos:start="200:9" pos:end="200:12">_FDT</name><argument_list pos:start="200:13" pos:end="200:67">(<argument pos:start="200:14" pos:end="200:66"><expr pos:start="200:14" pos:end="200:66"><operator pos:start="200:14" pos:end="200:14">(</operator><call pos:start="200:15" pos:end="200:65"><name pos:start="200:15" pos:end="200:33">fdt_property_string</name><argument_list pos:start="200:34" pos:end="200:65">(<argument pos:start="200:35" pos:end="200:37"><expr pos:start="200:35" pos:end="200:37"><name pos:start="200:35" pos:end="200:37">fdt</name></expr></argument>, <argument pos:start="200:40" pos:end="200:51"><expr pos:start="200:40" pos:end="200:51"><literal type="string" pos:start="200:40" pos:end="200:51">"compatible"</literal></expr></argument>, <argument pos:start="200:54" pos:end="200:64"><expr pos:start="200:54" pos:end="200:64"><literal type="string" pos:start="200:54" pos:end="200:64">"linux,kvm"</literal></expr></argument>)</argument_list></call><operator pos:start="200:66" pos:end="200:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="201:9" pos:end="203:31"><if pos:start="201:9" pos:end="203:31">if <condition pos:start="201:12" pos:end="201:42">(<expr pos:start="201:13" pos:end="201:41"><call pos:start="201:13" pos:end="201:41"><name pos:start="201:13" pos:end="201:39">kvmppc_has_cap_fixup_hcalls</name><argument_list pos:start="201:40" pos:end="201:41">()</argument_list></call></expr>)</condition> <block pos:start="201:44" pos:end="203:31">{<block_content pos:start="202:14" pos:end="203:31">
             <expr_stmt pos:start="202:14" pos:end="203:31"><expr pos:start="202:14" pos:end="203:25"><operator pos:start="202:14" pos:end="202:14">*</operator> <name pos:start="202:16" pos:end="202:20">Older</name> <name pos:start="202:22" pos:end="202:24">KVM</name> <name pos:start="202:26" pos:end="202:33">versions</name> <name pos:start="202:35" pos:end="202:38">with</name> <name pos:start="202:40" pos:end="202:44">older</name> <name pos:start="202:46" pos:end="202:50">guest</name> <name pos:start="202:52" pos:end="202:58">kernels</name> <name pos:start="202:60" pos:end="202:63">were</name> <name pos:start="202:65" pos:end="202:70">broken</name> <name pos:start="202:72" pos:end="202:75">with</name> <name pos:start="202:77" pos:end="202:79">the</name>
             <operator pos:start="203:14" pos:end="203:14">*</operator> <name pos:start="203:16" pos:end="203:20">magic</name> <name pos:start="203:22" pos:end="203:25">page</name></expr><operator pos:start="203:26" pos:end="203:26">,</operator> <expr pos:start="203:28" pos:end="203:31"><name pos:start="203:28" pos:end="203:30">don</name><literal type="char" pos:start="203:31" pos:end="203:31">'</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>t allow the guest to map it.
            kvmppc_get_hypercall(first_cpu-&gt;env_ptr, hypercall,
                                 sizeof(hypercall));
            _FDT((fdt_property(fdt, "hcall-instructions", hypercall,
                              sizeof(hypercall))));
        }
        _FDT((fdt_end_node(fdt)));
    }
    _FDT((fdt_end_node(fdt))); /* close root node */
    _FDT((fdt_finish(fdt)));
    return fdt;
}</unit>
