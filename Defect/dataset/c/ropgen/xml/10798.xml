<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10798.c" pos:tabs="8"><function pos:start="1:1" pos:end="315:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">acpi_build</name><parameter_list pos:start="1:16" pos:end="1:63">(<parameter pos:start="1:17" pos:end="1:39"><decl pos:start="1:17" pos:end="1:39"><type pos:start="1:17" pos:end="1:39"><name pos:start="1:17" pos:end="1:31">AcpiBuildTables</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">tables</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:62"><decl pos:start="1:42" pos:end="1:62"><type pos:start="1:42" pos:end="1:62"><name pos:start="1:42" pos:end="1:53">MachineState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:62">machine</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="315:1">{<block_content pos:start="5:5" pos:end="313:38">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PCMachineState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">pcms</name> <init pos:start="5:26" pos:end="5:46">= <expr pos:start="5:28" pos:end="5:46"><call pos:start="5:28" pos:end="5:46"><name pos:start="5:28" pos:end="5:37">PC_MACHINE</name><argument_list pos:start="5:38" pos:end="5:46">(<argument pos:start="5:39" pos:end="5:45"><expr pos:start="5:39" pos:end="5:45"><name pos:start="5:39" pos:end="5:45">machine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCMachineClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">pcmc</name> <init pos:start="7:26" pos:end="7:53">= <expr pos:start="7:28" pos:end="7:53"><call pos:start="7:28" pos:end="7:53"><name pos:start="7:28" pos:end="7:47">PC_MACHINE_GET_CLASS</name><argument_list pos:start="7:48" pos:end="7:53">(<argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">pcms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">GArray</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:25">table_offsets</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:17">facs</name></decl>, <decl pos:start="11:20" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:23">dsdt</name></decl>, <decl pos:start="11:26" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:26" pos:end="11:29">rsdt</name></decl>, <decl pos:start="11:32" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:32" pos:end="11:35">fadt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">AcpiPmInfo</name></type> <name pos:start="13:16" pos:end="13:17">pm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">AcpiMiscInfo</name></type> <name pos:start="15:18" pos:end="15:21">misc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">AcpiMcfgInfo</name></type> <name pos:start="17:18" pos:end="17:21">mcfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">Range</name></type> <name pos:start="19:11" pos:end="19:18">pci_hole</name></decl>, <decl pos:start="19:21" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:21" pos:end="19:30">pci_hole64</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:14">u</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">size_t</name></type> <name pos:start="23:12" pos:end="23:18">aml_len</name> <init pos:start="23:20" pos:end="23:22">= <expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:45"><decl pos:start="25:5" pos:end="25:44"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:10">GArray</name> <modifier pos:start="25:12" pos:end="25:12">*</modifier></type><name pos:start="25:13" pos:end="25:23">tables_blob</name> <init pos:start="25:25" pos:end="25:44">= <expr pos:start="25:27" pos:end="25:44"><name pos:start="25:27" pos:end="25:44"><name pos:start="25:27" pos:end="25:32">tables</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:44">table_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:60"><decl pos:start="27:5" pos:end="27:59"><type pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:15">AcpiSlicOem</name></type> <name pos:start="27:17" pos:end="27:24">slic_oem</name> <init pos:start="27:26" pos:end="27:59">= <expr pos:start="27:28" pos:end="27:59"><block pos:start="27:28" pos:end="27:59">{ <expr pos:start="27:30" pos:end="27:39"><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:32">id</name> <operator pos:start="27:34" pos:end="27:34">=</operator> <name pos:start="27:36" pos:end="27:39">NULL</name></expr>, <expr pos:start="27:42" pos:end="27:57"><operator pos:start="27:42" pos:end="27:42">.</operator><name pos:start="27:43" pos:end="27:50">table_id</name> <operator pos:start="27:52" pos:end="27:52">=</operator> <name pos:start="27:54" pos:end="27:57">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><call pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:20">acpi_get_pm_info</name><argument_list pos:start="31:21" pos:end="31:25">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:24">pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:22">acpi_get_misc_info</name><argument_list pos:start="33:23" pos:end="33:29">(<argument pos:start="33:24" pos:end="33:28"><expr pos:start="33:24" pos:end="33:28"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:28">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><call pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:22">acpi_get_pci_holes</name><argument_list pos:start="35:23" pos:end="35:46">(<argument pos:start="35:24" pos:end="35:32"><expr pos:start="35:24" pos:end="35:32"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:32">pci_hole</name></expr></argument>, <argument pos:start="35:35" pos:end="35:45"><expr pos:start="35:35" pos:end="35:45"><operator pos:start="35:35" pos:end="35:35">&amp;</operator><name pos:start="35:36" pos:end="35:45">pci_hole64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:21">acpi_get_slic_oem</name><argument_list pos:start="37:22" pos:end="37:32">(<argument pos:start="37:23" pos:end="37:31"><expr pos:start="37:23" pos:end="37:31"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:31">slic_oem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:58"><expr pos:start="41:5" pos:end="43:57"><name pos:start="41:5" pos:end="41:17">table_offsets</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="43:57"><name pos:start="41:21" pos:end="41:31">g_array_new</name><argument_list pos:start="41:32" pos:end="43:57">(<argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">false</name></expr></argument>, <argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><name pos:start="41:40" pos:end="41:43">true</name></expr></argument> <comment type="block" pos:start="41:45" pos:end="41:55">/* clear */</comment>,

                                        <argument pos:start="43:41" pos:end="43:56"><expr pos:start="43:41" pos:end="43:56"><sizeof pos:start="43:41" pos:end="43:56">sizeof<argument_list pos:start="43:47" pos:end="43:56">(<argument pos:start="43:48" pos:end="43:55"><expr pos:start="43:48" pos:end="43:55"><name pos:start="43:48" pos:end="43:55">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><call pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:22">ACPI_BUILD_DPRINTF</name><argument_list pos:start="45:23" pos:end="45:44">(<argument pos:start="45:24" pos:end="45:43"><expr pos:start="45:24" pos:end="45:43"><literal type="string" pos:start="45:24" pos:end="45:43">"init ACPI tables\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="55:54"><expr pos:start="49:5" pos:end="55:53"><call pos:start="49:5" pos:end="55:53"><name pos:start="49:5" pos:end="49:28">bios_linker_loader_alloc</name><argument_list pos:start="49:29" pos:end="55:53">(<argument pos:start="49:30" pos:end="49:43"><expr pos:start="49:30" pos:end="49:43"><name pos:start="49:30" pos:end="49:43"><name pos:start="49:30" pos:end="49:35">tables</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:43">linker</name></name></expr></argument>,

                             <argument pos:start="51:30" pos:end="51:50"><expr pos:start="51:30" pos:end="51:50"><name pos:start="51:30" pos:end="51:50">ACPI_BUILD_TABLE_FILE</name></expr></argument>, <argument pos:start="51:53" pos:end="51:63"><expr pos:start="51:53" pos:end="51:63"><name pos:start="51:53" pos:end="51:63">tables_blob</name></expr></argument>,

                             <argument pos:start="53:30" pos:end="53:31"><expr pos:start="53:30" pos:end="53:31"><literal type="number" pos:start="53:30" pos:end="53:31">64</literal></expr></argument> <comment type="block" pos:start="53:33" pos:end="53:60">/* Ensure FACS is aligned */</comment>,

                             <argument pos:start="55:30" pos:end="55:34"><expr pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:34">false</name></expr></argument> <comment type="block" pos:start="55:36" pos:end="55:52">/* high memory */</comment>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="67:7">/*

     * FACS is pointed to by FADT.

     * We place it first since it's the only table that has alignment

     * requirements.

     */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:28"><expr pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:8">facs</name> <operator pos:start="69:10" pos:end="69:10">=</operator> <name pos:start="69:12" pos:end="69:27"><name pos:start="69:12" pos:end="69:22">tables_blob</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:44"><expr pos:start="71:5" pos:end="71:43"><call pos:start="71:5" pos:end="71:43"><name pos:start="71:5" pos:end="71:14">build_facs</name><argument_list pos:start="71:15" pos:end="71:43">(<argument pos:start="71:16" pos:end="71:26"><expr pos:start="71:16" pos:end="71:26"><name pos:start="71:16" pos:end="71:26">tables_blob</name></expr></argument>, <argument pos:start="71:29" pos:end="71:42"><expr pos:start="71:29" pos:end="71:42"><name pos:start="71:29" pos:end="71:42"><name pos:start="71:29" pos:end="71:34">tables</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:42">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:36">/* DSDT is pointed to by FADT */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:28"><expr pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:8">dsdt</name> <operator pos:start="77:10" pos:end="77:10">=</operator> <name pos:start="77:12" pos:end="77:27"><name pos:start="77:12" pos:end="77:22">tables_blob</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:48"><expr pos:start="79:5" pos:end="81:47"><call pos:start="79:5" pos:end="81:47"><name pos:start="79:5" pos:end="79:14">build_dsdt</name><argument_list pos:start="79:15" pos:end="81:47">(<argument pos:start="79:16" pos:end="79:26"><expr pos:start="79:16" pos:end="79:26"><name pos:start="79:16" pos:end="79:26">tables_blob</name></expr></argument>, <argument pos:start="79:29" pos:end="79:42"><expr pos:start="79:29" pos:end="79:42"><name pos:start="79:29" pos:end="79:42"><name pos:start="79:29" pos:end="79:34">tables</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:42">linker</name></name></expr></argument>, <argument pos:start="79:45" pos:end="79:47"><expr pos:start="79:45" pos:end="79:47"><operator pos:start="79:45" pos:end="79:45">&amp;</operator><name pos:start="79:46" pos:end="79:47">pm</name></expr></argument>, <argument pos:start="79:50" pos:end="79:54"><expr pos:start="79:50" pos:end="79:54"><operator pos:start="79:50" pos:end="79:50">&amp;</operator><name pos:start="79:51" pos:end="79:54">misc</name></expr></argument>,

               <argument pos:start="81:16" pos:end="81:24"><expr pos:start="81:16" pos:end="81:24"><operator pos:start="81:16" pos:end="81:16">&amp;</operator><name pos:start="81:17" pos:end="81:24">pci_hole</name></expr></argument>, <argument pos:start="81:27" pos:end="81:37"><expr pos:start="81:27" pos:end="81:37"><operator pos:start="81:27" pos:end="81:27">&amp;</operator><name pos:start="81:28" pos:end="81:37">pci_hole64</name></expr></argument>, <argument pos:start="81:40" pos:end="81:46"><expr pos:start="81:40" pos:end="81:46"><name pos:start="81:40" pos:end="81:46">machine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="89:7">/* Count the size of the DSDT and SSDT, we will need it for legacy

     * sizing of ACPI tables.

     */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:11">aml_len</name> <operator pos:start="91:13" pos:end="91:14">+=</operator> <name pos:start="91:16" pos:end="91:31"><name pos:start="91:16" pos:end="91:26">tables_blob</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:31">len</name></name> <operator pos:start="91:33" pos:end="91:33">-</operator> <name pos:start="91:35" pos:end="91:38">dsdt</name></expr>;</expr_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:40">/* ACPI tables pointed to by RSDT */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:8">fadt</name> <operator pos:start="97:10" pos:end="97:10">=</operator> <name pos:start="97:12" pos:end="97:27"><name pos:start="97:12" pos:end="97:22">tables_blob</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:47"><expr pos:start="99:5" pos:end="99:46"><call pos:start="99:5" pos:end="99:46"><name pos:start="99:5" pos:end="99:18">acpi_add_table</name><argument_list pos:start="99:19" pos:end="99:46">(<argument pos:start="99:20" pos:end="99:32"><expr pos:start="99:20" pos:end="99:32"><name pos:start="99:20" pos:end="99:32">table_offsets</name></expr></argument>, <argument pos:start="99:35" pos:end="99:45"><expr pos:start="99:35" pos:end="99:45"><name pos:start="99:35" pos:end="99:45">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:47"><expr pos:start="101:5" pos:end="103:46"><call pos:start="101:5" pos:end="103:46"><name pos:start="101:5" pos:end="101:14">build_fadt</name><argument_list pos:start="101:15" pos:end="103:46">(<argument pos:start="101:16" pos:end="101:26"><expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:26">tables_blob</name></expr></argument>, <argument pos:start="101:29" pos:end="101:42"><expr pos:start="101:29" pos:end="101:42"><name pos:start="101:29" pos:end="101:42"><name pos:start="101:29" pos:end="101:34">tables</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:42">linker</name></name></expr></argument>, <argument pos:start="101:45" pos:end="101:47"><expr pos:start="101:45" pos:end="101:47"><operator pos:start="101:45" pos:end="101:45">&amp;</operator><name pos:start="101:46" pos:end="101:47">pm</name></expr></argument>, <argument pos:start="101:50" pos:end="101:53"><expr pos:start="101:50" pos:end="101:53"><name pos:start="101:50" pos:end="101:53">facs</name></expr></argument>, <argument pos:start="101:56" pos:end="101:59"><expr pos:start="101:56" pos:end="101:59"><name pos:start="101:56" pos:end="101:59">dsdt</name></expr></argument>,

               <argument pos:start="103:16" pos:end="103:26"><expr pos:start="103:16" pos:end="103:26"><name pos:start="103:16" pos:end="103:26"><name pos:start="103:16" pos:end="103:23">slic_oem</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:26">id</name></name></expr></argument>, <argument pos:start="103:29" pos:end="103:45"><expr pos:start="103:29" pos:end="103:45"><name pos:start="103:29" pos:end="103:45"><name pos:start="103:29" pos:end="103:36">slic_oem</name><operator pos:start="103:37" pos:end="103:37">.</operator><name pos:start="103:38" pos:end="103:45">table_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:39"><expr pos:start="105:5" pos:end="105:38"><name pos:start="105:5" pos:end="105:11">aml_len</name> <operator pos:start="105:13" pos:end="105:14">+=</operator> <name pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:26">tables_blob</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:31">len</name></name> <operator pos:start="105:33" pos:end="105:33">-</operator> <name pos:start="105:35" pos:end="105:38">fadt</name></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:47"><expr pos:start="109:5" pos:end="109:46"><call pos:start="109:5" pos:end="109:46"><name pos:start="109:5" pos:end="109:18">acpi_add_table</name><argument_list pos:start="109:19" pos:end="109:46">(<argument pos:start="109:20" pos:end="109:32"><expr pos:start="109:20" pos:end="109:32"><name pos:start="109:20" pos:end="109:32">table_offsets</name></expr></argument>, <argument pos:start="109:35" pos:end="109:45"><expr pos:start="109:35" pos:end="109:45"><name pos:start="109:35" pos:end="109:45">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:50"><expr pos:start="111:5" pos:end="111:49"><call pos:start="111:5" pos:end="111:49"><name pos:start="111:5" pos:end="111:14">build_madt</name><argument_list pos:start="111:15" pos:end="111:49">(<argument pos:start="111:16" pos:end="111:26"><expr pos:start="111:16" pos:end="111:26"><name pos:start="111:16" pos:end="111:26">tables_blob</name></expr></argument>, <argument pos:start="111:29" pos:end="111:42"><expr pos:start="111:29" pos:end="111:42"><name pos:start="111:29" pos:end="111:42"><name pos:start="111:29" pos:end="111:34">tables</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:42">linker</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:48"><expr pos:start="111:45" pos:end="111:48"><name pos:start="111:45" pos:end="111:48">pcms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:22">(<expr pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:12">misc</name><operator pos:start="115:13" pos:end="115:13">.</operator><name pos:start="115:14" pos:end="115:21">has_hpet</name></name></expr>)</condition> <block pos:start="115:24" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:48">

        <expr_stmt pos:start="117:9" pos:end="117:51"><expr pos:start="117:9" pos:end="117:50"><call pos:start="117:9" pos:end="117:50"><name pos:start="117:9" pos:end="117:22">acpi_add_table</name><argument_list pos:start="117:23" pos:end="117:50">(<argument pos:start="117:24" pos:end="117:36"><expr pos:start="117:24" pos:end="117:36"><name pos:start="117:24" pos:end="117:36">table_offsets</name></expr></argument>, <argument pos:start="117:39" pos:end="117:49"><expr pos:start="117:39" pos:end="117:49"><name pos:start="117:39" pos:end="117:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:48"><expr pos:start="119:9" pos:end="119:47"><call pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:18">build_hpet</name><argument_list pos:start="119:19" pos:end="119:47">(<argument pos:start="119:20" pos:end="119:30"><expr pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:30">tables_blob</name></expr></argument>, <argument pos:start="119:33" pos:end="119:46"><expr pos:start="119:33" pos:end="119:46"><name pos:start="119:33" pos:end="119:46"><name pos:start="119:33" pos:end="119:38">tables</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:46">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="139:5"><if pos:start="123:5" pos:end="139:5">if <condition pos:start="123:8" pos:end="123:47">(<expr pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:12">misc</name><operator pos:start="123:13" pos:end="123:13">.</operator><name pos:start="123:14" pos:end="123:24">tpm_version</name></name> <operator pos:start="123:26" pos:end="123:27">!=</operator> <name pos:start="123:29" pos:end="123:46">TPM_VERSION_UNSPEC</name></expr>)</condition> <block pos:start="123:49" pos:end="139:5">{<block_content pos:start="125:9" pos:end="137:9">

        <expr_stmt pos:start="125:9" pos:end="125:51"><expr pos:start="125:9" pos:end="125:50"><call pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:22">acpi_add_table</name><argument_list pos:start="125:23" pos:end="125:50">(<argument pos:start="125:24" pos:end="125:36"><expr pos:start="125:24" pos:end="125:36"><name pos:start="125:24" pos:end="125:36">table_offsets</name></expr></argument>, <argument pos:start="125:39" pos:end="125:49"><expr pos:start="125:39" pos:end="125:49"><name pos:start="125:39" pos:end="125:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:69"><expr pos:start="127:9" pos:end="127:68"><call pos:start="127:9" pos:end="127:68"><name pos:start="127:9" pos:end="127:22">build_tpm_tcpa</name><argument_list pos:start="127:23" pos:end="127:68">(<argument pos:start="127:24" pos:end="127:34"><expr pos:start="127:24" pos:end="127:34"><name pos:start="127:24" pos:end="127:34">tables_blob</name></expr></argument>, <argument pos:start="127:37" pos:end="127:50"><expr pos:start="127:37" pos:end="127:50"><name pos:start="127:37" pos:end="127:50"><name pos:start="127:37" pos:end="127:42">tables</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:50">linker</name></name></expr></argument>, <argument pos:start="127:53" pos:end="127:67"><expr pos:start="127:53" pos:end="127:67"><name pos:start="127:53" pos:end="127:67"><name pos:start="127:53" pos:end="127:58">tables</name><operator pos:start="127:59" pos:end="127:60">-&gt;</operator><name pos:start="127:61" pos:end="127:67">tcpalog</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:48">(<expr pos:start="131:13" pos:end="131:47"><name pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:16">misc</name><operator pos:start="131:17" pos:end="131:17">.</operator><name pos:start="131:18" pos:end="131:28">tpm_version</name></name> <operator pos:start="131:30" pos:end="131:31">==</operator> <name pos:start="131:33" pos:end="131:47">TPM_VERSION_2_0</name></expr>)</condition> <block pos:start="131:50" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:52">

            <expr_stmt pos:start="133:13" pos:end="133:55"><expr pos:start="133:13" pos:end="133:54"><call pos:start="133:13" pos:end="133:54"><name pos:start="133:13" pos:end="133:26">acpi_add_table</name><argument_list pos:start="133:27" pos:end="133:54">(<argument pos:start="133:28" pos:end="133:40"><expr pos:start="133:28" pos:end="133:40"><name pos:start="133:28" pos:end="133:40">table_offsets</name></expr></argument>, <argument pos:start="133:43" pos:end="133:53"><expr pos:start="133:43" pos:end="133:53"><name pos:start="133:43" pos:end="133:53">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:52"><expr pos:start="135:13" pos:end="135:51"><call pos:start="135:13" pos:end="135:51"><name pos:start="135:13" pos:end="135:22">build_tpm2</name><argument_list pos:start="135:23" pos:end="135:51">(<argument pos:start="135:24" pos:end="135:34"><expr pos:start="135:24" pos:end="135:34"><name pos:start="135:24" pos:end="135:34">tables_blob</name></expr></argument>, <argument pos:start="135:37" pos:end="135:50"><expr pos:start="135:37" pos:end="135:50"><name pos:start="135:37" pos:end="135:50"><name pos:start="135:37" pos:end="135:42">tables</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:50">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:25">(<expr pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:12">pcms</name><operator pos:start="141:13" pos:end="141:14">-&gt;</operator><name pos:start="141:15" pos:end="141:24">numa_nodes</name></name></expr>)</condition> <block pos:start="141:27" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:57">

        <expr_stmt pos:start="143:9" pos:end="143:51"><expr pos:start="143:9" pos:end="143:50"><call pos:start="143:9" pos:end="143:50"><name pos:start="143:9" pos:end="143:22">acpi_add_table</name><argument_list pos:start="143:23" pos:end="143:50">(<argument pos:start="143:24" pos:end="143:36"><expr pos:start="143:24" pos:end="143:36"><name pos:start="143:24" pos:end="143:36">table_offsets</name></expr></argument>, <argument pos:start="143:39" pos:end="143:49"><expr pos:start="143:39" pos:end="143:49"><name pos:start="143:39" pos:end="143:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:57"><expr pos:start="145:9" pos:end="145:56"><call pos:start="145:9" pos:end="145:56"><name pos:start="145:9" pos:end="145:18">build_srat</name><argument_list pos:start="145:19" pos:end="145:56">(<argument pos:start="145:20" pos:end="145:30"><expr pos:start="145:20" pos:end="145:30"><name pos:start="145:20" pos:end="145:30">tables_blob</name></expr></argument>, <argument pos:start="145:33" pos:end="145:46"><expr pos:start="145:33" pos:end="145:46"><name pos:start="145:33" pos:end="145:46"><name pos:start="145:33" pos:end="145:38">tables</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:46">linker</name></name></expr></argument>, <argument pos:start="145:49" pos:end="145:55"><expr pos:start="145:49" pos:end="145:55"><name pos:start="145:49" pos:end="145:55">machine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:29">(<expr pos:start="149:9" pos:end="149:28"><call pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:21">acpi_get_mcfg</name><argument_list pos:start="149:22" pos:end="149:28">(<argument pos:start="149:23" pos:end="149:27"><expr pos:start="149:23" pos:end="149:27"><operator pos:start="149:23" pos:end="149:23">&amp;</operator><name pos:start="149:24" pos:end="149:27">mcfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:31" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:59">

        <expr_stmt pos:start="151:9" pos:end="151:51"><expr pos:start="151:9" pos:end="151:50"><call pos:start="151:9" pos:end="151:50"><name pos:start="151:9" pos:end="151:22">acpi_add_table</name><argument_list pos:start="151:23" pos:end="151:50">(<argument pos:start="151:24" pos:end="151:36"><expr pos:start="151:24" pos:end="151:36"><name pos:start="151:24" pos:end="151:36">table_offsets</name></expr></argument>, <argument pos:start="151:39" pos:end="151:49"><expr pos:start="151:39" pos:end="151:49"><name pos:start="151:39" pos:end="151:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:59"><expr pos:start="153:9" pos:end="153:58"><call pos:start="153:9" pos:end="153:58"><name pos:start="153:9" pos:end="153:22">build_mcfg_q35</name><argument_list pos:start="153:23" pos:end="153:58">(<argument pos:start="153:24" pos:end="153:34"><expr pos:start="153:24" pos:end="153:34"><name pos:start="153:24" pos:end="153:34">tables_blob</name></expr></argument>, <argument pos:start="153:37" pos:end="153:50"><expr pos:start="153:37" pos:end="153:50"><name pos:start="153:37" pos:end="153:50"><name pos:start="153:37" pos:end="153:42">tables</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:50">linker</name></name></expr></argument>, <argument pos:start="153:53" pos:end="153:57"><expr pos:start="153:53" pos:end="153:57"><operator pos:start="153:53" pos:end="153:53">&amp;</operator><name pos:start="153:54" pos:end="153:57">mcfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="175:5"><if pos:start="157:5" pos:end="175:5">if <condition pos:start="157:8" pos:end="157:32">(<expr pos:start="157:9" pos:end="157:31"><call pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:29">x86_iommu_get_default</name><argument_list pos:start="157:30" pos:end="157:31">()</argument_list></call></expr>)</condition> <block pos:start="157:34" pos:end="175:5">{<block_content pos:start="159:9" pos:end="173:9">

        <decl_stmt pos:start="159:9" pos:end="159:51"><decl pos:start="159:9" pos:end="159:50"><type pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:17">IommuType</name></type> <name pos:start="159:19" pos:end="159:27">IOMMUType</name> <init pos:start="159:29" pos:end="159:50">= <expr pos:start="159:31" pos:end="159:50"><call pos:start="159:31" pos:end="159:50"><name pos:start="159:31" pos:end="159:48">x86_iommu_get_type</name><argument_list pos:start="159:49" pos:end="159:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="161:9" pos:end="173:9"><if pos:start="161:9" pos:end="167:9">if <condition pos:start="161:12" pos:end="161:34">(<expr pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:21">IOMMUType</name> <operator pos:start="161:23" pos:end="161:24">==</operator> <name pos:start="161:26" pos:end="161:33">TYPE_AMD</name></expr>)</condition> <block pos:start="161:36" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:57">

            <expr_stmt pos:start="163:13" pos:end="163:55"><expr pos:start="163:13" pos:end="163:54"><call pos:start="163:13" pos:end="163:54"><name pos:start="163:13" pos:end="163:26">acpi_add_table</name><argument_list pos:start="163:27" pos:end="163:54">(<argument pos:start="163:28" pos:end="163:40"><expr pos:start="163:28" pos:end="163:40"><name pos:start="163:28" pos:end="163:40">table_offsets</name></expr></argument>, <argument pos:start="163:43" pos:end="163:53"><expr pos:start="163:43" pos:end="163:53"><name pos:start="163:43" pos:end="163:53">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:57"><expr pos:start="165:13" pos:end="165:56"><call pos:start="165:13" pos:end="165:56"><name pos:start="165:13" pos:end="165:27">build_amd_iommu</name><argument_list pos:start="165:28" pos:end="165:56">(<argument pos:start="165:29" pos:end="165:39"><expr pos:start="165:29" pos:end="165:39"><name pos:start="165:29" pos:end="165:39">tables_blob</name></expr></argument>, <argument pos:start="165:42" pos:end="165:55"><expr pos:start="165:42" pos:end="165:55"><name pos:start="165:42" pos:end="165:55"><name pos:start="165:42" pos:end="165:47">tables</name><operator pos:start="165:48" pos:end="165:49">-&gt;</operator><name pos:start="165:50" pos:end="165:55">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="167:11" pos:end="173:9">else if <condition pos:start="167:19" pos:end="167:43">(<expr pos:start="167:20" pos:end="167:42"><name pos:start="167:20" pos:end="167:28">IOMMUType</name> <operator pos:start="167:30" pos:end="167:31">==</operator> <name pos:start="167:33" pos:end="167:42">TYPE_INTEL</name></expr>)</condition> <block pos:start="167:45" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:56">

            <expr_stmt pos:start="169:13" pos:end="169:55"><expr pos:start="169:13" pos:end="169:54"><call pos:start="169:13" pos:end="169:54"><name pos:start="169:13" pos:end="169:26">acpi_add_table</name><argument_list pos:start="169:27" pos:end="169:54">(<argument pos:start="169:28" pos:end="169:40"><expr pos:start="169:28" pos:end="169:40"><name pos:start="169:28" pos:end="169:40">table_offsets</name></expr></argument>, <argument pos:start="169:43" pos:end="169:53"><expr pos:start="169:43" pos:end="169:53"><name pos:start="169:43" pos:end="169:53">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:56"><expr pos:start="171:13" pos:end="171:55"><call pos:start="171:13" pos:end="171:55"><name pos:start="171:13" pos:end="171:26">build_dmar_q35</name><argument_list pos:start="171:27" pos:end="171:55">(<argument pos:start="171:28" pos:end="171:38"><expr pos:start="171:28" pos:end="171:38"><name pos:start="171:28" pos:end="171:38">tables_blob</name></expr></argument>, <argument pos:start="171:41" pos:end="171:54"><expr pos:start="171:41" pos:end="171:54"><name pos:start="171:41" pos:end="171:54"><name pos:start="171:41" pos:end="171:46">tables</name><operator pos:start="171:47" pos:end="171:48">-&gt;</operator><name pos:start="171:49" pos:end="171:54">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="183:5"><if pos:start="177:5" pos:end="183:5">if <condition pos:start="177:8" pos:end="177:43">(<expr pos:start="177:9" pos:end="177:42"><name pos:start="177:9" pos:end="177:42"><name pos:start="177:9" pos:end="177:12">pcms</name><operator pos:start="177:13" pos:end="177:14">-&gt;</operator><name pos:start="177:15" pos:end="177:31">acpi_nvdimm_state</name><operator pos:start="177:32" pos:end="177:32">.</operator><name pos:start="177:33" pos:end="177:42">is_enabled</name></name></expr>)</condition> <block pos:start="177:45" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:79">

        <expr_stmt pos:start="179:9" pos:end="181:79"><expr pos:start="179:9" pos:end="181:78"><call pos:start="179:9" pos:end="181:78"><name pos:start="179:9" pos:end="179:25">nvdimm_build_acpi</name><argument_list pos:start="179:26" pos:end="181:78">(<argument pos:start="179:27" pos:end="179:39"><expr pos:start="179:27" pos:end="179:39"><name pos:start="179:27" pos:end="179:39">table_offsets</name></expr></argument>, <argument pos:start="179:42" pos:end="179:52"><expr pos:start="179:42" pos:end="179:52"><name pos:start="179:42" pos:end="179:52">tables_blob</name></expr></argument>, <argument pos:start="179:55" pos:end="179:68"><expr pos:start="179:55" pos:end="179:68"><name pos:start="179:55" pos:end="179:68"><name pos:start="179:55" pos:end="179:60">tables</name><operator pos:start="179:61" pos:end="179:62">-&gt;</operator><name pos:start="179:63" pos:end="179:68">linker</name></name></expr></argument>,

                          <argument pos:start="181:27" pos:end="181:57"><expr pos:start="181:27" pos:end="181:57"><name pos:start="181:27" pos:end="181:57"><name pos:start="181:27" pos:end="181:30">pcms</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:49">acpi_nvdimm_state</name><operator pos:start="181:50" pos:end="181:50">.</operator><name pos:start="181:51" pos:end="181:57">dsm_mem</name></name></expr></argument>, <argument pos:start="181:60" pos:end="181:77"><expr pos:start="181:60" pos:end="181:77"><name pos:start="181:60" pos:end="181:77"><name pos:start="181:60" pos:end="181:66">machine</name><operator pos:start="181:67" pos:end="181:68">-&gt;</operator><name pos:start="181:69" pos:end="181:77">ram_slots</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="187:5" pos:end="187:46">/* Add tables supplied by user (if any) */</comment>

    <for pos:start="189:5" pos:end="199:5">for <control pos:start="189:9" pos:end="189:59">(<init pos:start="189:10" pos:end="189:32"><expr pos:start="189:10" pos:end="189:31"><name pos:start="189:10" pos:end="189:10">u</name> <operator pos:start="189:12" pos:end="189:12">=</operator> <call pos:start="189:14" pos:end="189:31"><name pos:start="189:14" pos:end="189:29">acpi_table_first</name><argument_list pos:start="189:30" pos:end="189:31">()</argument_list></call></expr>;</init> <condition pos:start="189:34" pos:end="189:35"><expr pos:start="189:34" pos:end="189:34"><name pos:start="189:34" pos:end="189:34">u</name></expr>;</condition> <incr pos:start="189:37" pos:end="189:58"><expr pos:start="189:37" pos:end="189:58"><name pos:start="189:37" pos:end="189:37">u</name> <operator pos:start="189:39" pos:end="189:39">=</operator> <call pos:start="189:41" pos:end="189:58"><name pos:start="189:41" pos:end="189:55">acpi_table_next</name><argument_list pos:start="189:56" pos:end="189:58">(<argument pos:start="189:57" pos:end="189:57"><expr pos:start="189:57" pos:end="189:57"><name pos:start="189:57" pos:end="189:57">u</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="189:61" pos:end="199:5">{<block_content pos:start="191:9" pos:end="197:49">

        <decl_stmt pos:start="191:9" pos:end="191:41"><decl pos:start="191:9" pos:end="191:40"><type pos:start="191:9" pos:end="191:16"><name pos:start="191:9" pos:end="191:16">unsigned</name></type> <name pos:start="191:18" pos:end="191:20">len</name> <init pos:start="191:22" pos:end="191:40">= <expr pos:start="191:24" pos:end="191:40"><call pos:start="191:24" pos:end="191:40"><name pos:start="191:24" pos:end="191:37">acpi_table_len</name><argument_list pos:start="191:38" pos:end="191:40">(<argument pos:start="191:39" pos:end="191:39"><expr pos:start="191:39" pos:end="191:39"><name pos:start="191:39" pos:end="191:39">u</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="195:9" pos:end="195:51"><expr pos:start="195:9" pos:end="195:50"><call pos:start="195:9" pos:end="195:50"><name pos:start="195:9" pos:end="195:22">acpi_add_table</name><argument_list pos:start="195:23" pos:end="195:50">(<argument pos:start="195:24" pos:end="195:36"><expr pos:start="195:24" pos:end="195:36"><name pos:start="195:24" pos:end="195:36">table_offsets</name></expr></argument>, <argument pos:start="195:39" pos:end="195:49"><expr pos:start="195:39" pos:end="195:49"><name pos:start="195:39" pos:end="195:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:49"><expr pos:start="197:9" pos:end="197:48"><call pos:start="197:9" pos:end="197:48"><name pos:start="197:9" pos:end="197:27">g_array_append_vals</name><argument_list pos:start="197:28" pos:end="197:48">(<argument pos:start="197:29" pos:end="197:39"><expr pos:start="197:29" pos:end="197:39"><name pos:start="197:29" pos:end="197:39">tables_blob</name></expr></argument>, <argument pos:start="197:42" pos:end="197:42"><expr pos:start="197:42" pos:end="197:42"><name pos:start="197:42" pos:end="197:42">u</name></expr></argument>, <argument pos:start="197:45" pos:end="197:47"><expr pos:start="197:45" pos:end="197:47"><name pos:start="197:45" pos:end="197:47">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="203:5" pos:end="203:36">/* RSDT is pointed to by RSDP */</comment>

    <expr_stmt pos:start="205:5" pos:end="205:28"><expr pos:start="205:5" pos:end="205:27"><name pos:start="205:5" pos:end="205:8">rsdt</name> <operator pos:start="205:10" pos:end="205:10">=</operator> <name pos:start="205:12" pos:end="205:27"><name pos:start="205:12" pos:end="205:22">tables_blob</name><operator pos:start="205:23" pos:end="205:24">-&gt;</operator><name pos:start="205:25" pos:end="205:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="209:47"><expr pos:start="207:5" pos:end="209:46"><call pos:start="207:5" pos:end="209:46"><name pos:start="207:5" pos:end="207:14">build_rsdt</name><argument_list pos:start="207:15" pos:end="209:46">(<argument pos:start="207:16" pos:end="207:26"><expr pos:start="207:16" pos:end="207:26"><name pos:start="207:16" pos:end="207:26">tables_blob</name></expr></argument>, <argument pos:start="207:29" pos:end="207:42"><expr pos:start="207:29" pos:end="207:42"><name pos:start="207:29" pos:end="207:42"><name pos:start="207:29" pos:end="207:34">tables</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:42">linker</name></name></expr></argument>, <argument pos:start="207:45" pos:end="207:57"><expr pos:start="207:45" pos:end="207:57"><name pos:start="207:45" pos:end="207:57">table_offsets</name></expr></argument>,

               <argument pos:start="209:16" pos:end="209:26"><expr pos:start="209:16" pos:end="209:26"><name pos:start="209:16" pos:end="209:26"><name pos:start="209:16" pos:end="209:23">slic_oem</name><operator pos:start="209:24" pos:end="209:24">.</operator><name pos:start="209:25" pos:end="209:26">id</name></name></expr></argument>, <argument pos:start="209:29" pos:end="209:45"><expr pos:start="209:29" pos:end="209:45"><name pos:start="209:29" pos:end="209:45"><name pos:start="209:29" pos:end="209:36">slic_oem</name><operator pos:start="209:37" pos:end="209:37">.</operator><name pos:start="209:38" pos:end="209:45">table_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:59">/* RSDP is in FSEG memory, so allocate it separately */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:51"><expr pos:start="215:5" pos:end="215:50"><call pos:start="215:5" pos:end="215:50"><name pos:start="215:5" pos:end="215:14">build_rsdp</name><argument_list pos:start="215:15" pos:end="215:50">(<argument pos:start="215:16" pos:end="215:27"><expr pos:start="215:16" pos:end="215:27"><name pos:start="215:16" pos:end="215:27"><name pos:start="215:16" pos:end="215:21">tables</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:27">rsdp</name></name></expr></argument>, <argument pos:start="215:30" pos:end="215:43"><expr pos:start="215:30" pos:end="215:43"><name pos:start="215:30" pos:end="215:43"><name pos:start="215:30" pos:end="215:35">tables</name><operator pos:start="215:36" pos:end="215:37">-&gt;</operator><name pos:start="215:38" pos:end="215:43">linker</name></name></expr></argument>, <argument pos:start="215:46" pos:end="215:49"><expr pos:start="215:46" pos:end="215:49"><name pos:start="215:46" pos:end="215:49">rsdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="219:5" pos:end="251:7">/* We'll expose it all to Guest so we want to reduce

     * chance of size changes.

     *

     * We used to align the tables to 4k, but of course this would

     * too simple to be enough.  4k turned out to be too small an

     * alignment very soon, and in fact it is almost impossible to

     * keep the table size stable for all (max_cpus, max_memory_slots)

     * combinations.  So the table size is always 64k for pc-i440fx-2.1

     * and we give an error if the table grows beyond that limit.

     *

     * We still have the problem of migrating from "-M pc-i440fx-2.0".  For

     * that, we exploit the fact that QEMU 2.1 generates _smaller_ tables

     * than 2.0 and we can always pad the smaller tables with zeros.  We can

     * then use the exact size of the 2.0 tables.

     *

     * All this is for PIIX4, since QEMU 2.0 didn't support Q35 migration.

     */</comment>

    <if_stmt pos:start="253:5" pos:end="303:5"><if pos:start="253:5" pos:end="283:5">if <condition pos:start="253:8" pos:end="253:37">(<expr pos:start="253:9" pos:end="253:36"><name pos:start="253:9" pos:end="253:36"><name pos:start="253:9" pos:end="253:12">pcmc</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:36">legacy_acpi_table_size</name></name></expr>)</condition> <block pos:start="253:39" pos:end="283:5">{<block_content pos:start="261:9" pos:end="281:57">

        <comment type="block" pos:start="255:9" pos:end="259:11">/* Subtracting aml_len gives the size of fixed tables.  Then add the

         * size of the PIIX4 DSDT/SSDT in QEMU 2.0.

         */</comment>

        <decl_stmt pos:start="261:9" pos:end="265:54"><decl pos:start="261:9" pos:end="265:53"><type pos:start="261:9" pos:end="261:11"><name pos:start="261:9" pos:end="261:11">int</name></type> <name pos:start="261:13" pos:end="261:26">legacy_aml_len</name> <init pos:start="261:28" pos:end="265:53">=

            <expr pos:start="263:13" pos:end="265:53"><name pos:start="263:13" pos:end="263:40"><name pos:start="263:13" pos:end="263:16">pcmc</name><operator pos:start="263:17" pos:end="263:18">-&gt;</operator><name pos:start="263:19" pos:end="263:40">legacy_acpi_table_size</name></name> <operator pos:start="263:42" pos:end="263:42">+</operator>

            <name pos:start="265:13" pos:end="265:42">ACPI_BUILD_LEGACY_CPU_AML_SIZE</name> <operator pos:start="265:44" pos:end="265:44">*</operator> <name pos:start="265:46" pos:end="265:53">max_cpus</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="267:9" pos:end="271:44"><decl pos:start="267:9" pos:end="271:43"><type pos:start="267:9" pos:end="267:11"><name pos:start="267:9" pos:end="267:11">int</name></type> <name pos:start="267:13" pos:end="267:29">legacy_table_size</name> <init pos:start="267:31" pos:end="271:43">=

            <expr pos:start="269:13" pos:end="271:43"><call pos:start="269:13" pos:end="271:43"><name pos:start="269:13" pos:end="269:20">ROUND_UP</name><argument_list pos:start="269:21" pos:end="271:43">(<argument pos:start="269:22" pos:end="269:64"><expr pos:start="269:22" pos:end="269:64"><name pos:start="269:22" pos:end="269:37"><name pos:start="269:22" pos:end="269:32">tables_blob</name><operator pos:start="269:33" pos:end="269:34">-&gt;</operator><name pos:start="269:35" pos:end="269:37">len</name></name> <operator pos:start="269:39" pos:end="269:39">-</operator> <name pos:start="269:41" pos:end="269:47">aml_len</name> <operator pos:start="269:49" pos:end="269:49">+</operator> <name pos:start="269:51" pos:end="269:64">legacy_aml_len</name></expr></argument>,

                     <argument pos:start="271:22" pos:end="271:42"><expr pos:start="271:22" pos:end="271:42"><name pos:start="271:22" pos:end="271:42">ACPI_BUILD_ALIGN_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="273:9" pos:end="279:9"><if pos:start="273:9" pos:end="279:9">if <condition pos:start="273:12" pos:end="273:49">(<expr pos:start="273:13" pos:end="273:48"><name pos:start="273:13" pos:end="273:28"><name pos:start="273:13" pos:end="273:23">tables_blob</name><operator pos:start="273:24" pos:end="273:25">-&gt;</operator><name pos:start="273:26" pos:end="273:28">len</name></name> <operator pos:start="273:30" pos:end="273:30">&gt;</operator> <name pos:start="273:32" pos:end="273:48">legacy_table_size</name></expr>)</condition> <block pos:start="273:51" pos:end="279:9">{<block_content pos:start="277:13" pos:end="277:61">

            <comment type="block" pos:start="275:13" pos:end="275:76">/* Should happen only with PCI bridges and -M pc-i440fx-2.0.  */</comment>

            <expr_stmt pos:start="277:13" pos:end="277:61"><expr pos:start="277:13" pos:end="277:60"><call pos:start="277:13" pos:end="277:60"><name pos:start="277:13" pos:end="277:24">error_report</name><argument_list pos:start="277:25" pos:end="277:60">(<argument pos:start="277:26" pos:end="277:59"><expr pos:start="277:26" pos:end="277:59"><literal type="string" pos:start="277:26" pos:end="277:59">"Warning: migration may not work."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:57"><expr pos:start="281:9" pos:end="281:56"><call pos:start="281:9" pos:end="281:56"><name pos:start="281:9" pos:end="281:24">g_array_set_size</name><argument_list pos:start="281:25" pos:end="281:56">(<argument pos:start="281:26" pos:end="281:36"><expr pos:start="281:26" pos:end="281:36"><name pos:start="281:26" pos:end="281:36">tables_blob</name></expr></argument>, <argument pos:start="281:39" pos:end="281:55"><expr pos:start="281:39" pos:end="281:55"><name pos:start="281:39" pos:end="281:55">legacy_table_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="283:7" pos:end="303:5">else <block pos:start="283:12" pos:end="303:5">{<block_content pos:start="287:9" pos:end="301:60">

        <comment type="block" pos:start="285:9" pos:end="285:78">/* Make sure we have a buffer in case we need to resize the tables. */</comment>

        <if_stmt pos:start="287:9" pos:end="299:9"><if pos:start="287:9" pos:end="299:9">if <condition pos:start="287:12" pos:end="287:57">(<expr pos:start="287:13" pos:end="287:56"><name pos:start="287:13" pos:end="287:28"><name pos:start="287:13" pos:end="287:23">tables_blob</name><operator pos:start="287:24" pos:end="287:25">-&gt;</operator><name pos:start="287:26" pos:end="287:28">len</name></name> <operator pos:start="287:30" pos:end="287:30">&gt;</operator> <name pos:start="287:32" pos:end="287:52">ACPI_BUILD_TABLE_SIZE</name> <operator pos:start="287:54" pos:end="287:54">/</operator> <literal type="number" pos:start="287:56" pos:end="287:56">2</literal></expr>)</condition> <block pos:start="287:59" pos:end="299:9">{<block_content pos:start="291:13" pos:end="297:57">

            <comment type="block" pos:start="289:13" pos:end="289:82">/* As of QEMU 2.1, this fires with 160 VCPUs and 255 memory slots.  */</comment>

            <expr_stmt pos:start="291:13" pos:end="291:70"><expr pos:start="291:13" pos:end="291:69"><call pos:start="291:13" pos:end="291:69"><name pos:start="291:13" pos:end="291:24">error_report</name><argument_list pos:start="291:25" pos:end="291:69">(<argument pos:start="291:26" pos:end="291:68"><expr pos:start="291:26" pos:end="291:68"><literal type="string" pos:start="291:26" pos:end="291:68">"Warning: ACPI tables are larger than 64k."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:61"><expr pos:start="293:13" pos:end="293:60"><call pos:start="293:13" pos:end="293:60"><name pos:start="293:13" pos:end="293:24">error_report</name><argument_list pos:start="293:25" pos:end="293:60">(<argument pos:start="293:26" pos:end="293:59"><expr pos:start="293:26" pos:end="293:59"><literal type="string" pos:start="293:26" pos:end="293:59">"Warning: migration may not work."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="297:57"><expr pos:start="295:13" pos:end="297:56"><call pos:start="295:13" pos:end="297:56"><name pos:start="295:13" pos:end="295:24">error_report</name><argument_list pos:start="295:25" pos:end="297:56">(<argument pos:start="295:26" pos:end="297:55"><expr pos:start="295:26" pos:end="297:55"><literal type="string" pos:start="295:26" pos:end="295:68">"Warning: please remove CPUs, NUMA nodes, "</literal>

                         <literal type="string" pos:start="297:26" pos:end="297:55">"memory slots or PCI bridges."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:60"><expr pos:start="301:9" pos:end="301:59"><call pos:start="301:9" pos:end="301:59"><name pos:start="301:9" pos:end="301:23">acpi_align_size</name><argument_list pos:start="301:24" pos:end="301:59">(<argument pos:start="301:25" pos:end="301:35"><expr pos:start="301:25" pos:end="301:35"><name pos:start="301:25" pos:end="301:35">tables_blob</name></expr></argument>, <argument pos:start="301:38" pos:end="301:58"><expr pos:start="301:38" pos:end="301:58"><name pos:start="301:38" pos:end="301:58">ACPI_BUILD_TABLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:69"><expr pos:start="307:5" pos:end="307:68"><call pos:start="307:5" pos:end="307:68"><name pos:start="307:5" pos:end="307:19">acpi_align_size</name><argument_list pos:start="307:20" pos:end="307:68">(<argument pos:start="307:21" pos:end="307:44"><expr pos:start="307:21" pos:end="307:44"><name pos:start="307:21" pos:end="307:44"><name pos:start="307:21" pos:end="307:26">tables</name><operator pos:start="307:27" pos:end="307:28">-&gt;</operator><name pos:start="307:29" pos:end="307:34">linker</name><operator pos:start="307:35" pos:end="307:36">-&gt;</operator><name pos:start="307:37" pos:end="307:44">cmd_blob</name></name></expr></argument>, <argument pos:start="307:47" pos:end="307:67"><expr pos:start="307:47" pos:end="307:67"><name pos:start="307:47" pos:end="307:67">ACPI_BUILD_ALIGN_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="311:5" pos:end="311:47">/* Cleanup memory that's no longer used. */</comment>

    <expr_stmt pos:start="313:5" pos:end="313:38"><expr pos:start="313:5" pos:end="313:37"><call pos:start="313:5" pos:end="313:37"><name pos:start="313:5" pos:end="313:16">g_array_free</name><argument_list pos:start="313:17" pos:end="313:37">(<argument pos:start="313:18" pos:end="313:30"><expr pos:start="313:18" pos:end="313:30"><name pos:start="313:18" pos:end="313:30">table_offsets</name></expr></argument>, <argument pos:start="313:33" pos:end="313:36"><expr pos:start="313:33" pos:end="313:36"><name pos:start="313:33" pos:end="313:36">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
