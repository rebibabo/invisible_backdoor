<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1833.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">m4sl_cb</name><parameter_list pos:start="1:20" pos:end="3:36">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:32">MpegTSFilter</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">filter</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:64"><decl pos:start="1:43" pos:end="1:64"><type pos:start="1:43" pos:end="1:64"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">section</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:35"><decl pos:start="3:21" pos:end="3:35"><type pos:start="3:21" pos:end="3:35"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:35">section_len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:47">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MpegTSContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">ts</name> <init pos:start="7:23" pos:end="7:55">= <expr pos:start="7:25" pos:end="7:55"><name pos:start="7:25" pos:end="7:55"><name pos:start="7:25" pos:end="7:30">filter</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:33">u</name><operator pos:start="7:34" pos:end="7:34">.</operator><name pos:start="7:35" pos:end="7:48">section_filter</name><operator pos:start="7:49" pos:end="7:49">.</operator><name pos:start="7:50" pos:end="7:55">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">MpegTSSectionFilter</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:29">tssf</name> <init pos:start="9:31" pos:end="9:57">= <expr pos:start="9:33" pos:end="9:57"><operator pos:start="9:33" pos:end="9:33">&amp;</operator><name pos:start="9:34" pos:end="9:57"><name pos:start="9:34" pos:end="9:39">filter</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:42">u</name><operator pos:start="9:43" pos:end="9:43">.</operator><name pos:start="9:44" pos:end="9:57">section_filter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">SectionHeader</name></type> <name pos:start="11:19" pos:end="11:19">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">p</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">p_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15">AVIOContext</name></type> <name pos:start="15:17" pos:end="15:18">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:23">mp4_descr_count</name> <init pos:start="17:25" pos:end="17:27">= <expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:56"><decl pos:start="19:5" pos:end="19:55"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">Mp4Descr</name></type> <name pos:start="19:14" pos:end="19:43"><name pos:start="19:14" pos:end="19:22">mp4_descr</name><index pos:start="19:23" pos:end="19:43">[<expr pos:start="19:24" pos:end="19:42"><name pos:start="19:24" pos:end="19:42">MAX_MP4_DESCR_COUNT</name></expr>]</index></name> <init pos:start="19:45" pos:end="19:55">= <expr pos:start="19:47" pos:end="19:55"><block pos:start="19:47" pos:end="19:55">{ <expr pos:start="19:49" pos:end="19:53"><block pos:start="19:49" pos:end="19:53">{ <expr pos:start="19:51" pos:end="19:51"><literal type="number" pos:start="19:51" pos:end="19:51">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:14"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:14">pid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:35"><type pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:19">AVFormatContext</name> <modifier pos:start="23:21" pos:end="23:21">*</modifier></type><name pos:start="23:22" pos:end="23:22">s</name> <init pos:start="23:24" pos:end="23:35">= <expr pos:start="23:26" pos:end="23:35"><name pos:start="23:26" pos:end="23:35"><name pos:start="23:26" pos:end="23:27">ts</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">stream</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:9">p_end</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:19">section</name> <operator pos:start="27:21" pos:end="27:21">+</operator> <name pos:start="27:23" pos:end="27:33">section_len</name> <operator pos:start="27:35" pos:end="27:35">-</operator> <literal type="number" pos:start="27:37" pos:end="27:37">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">p</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:15">section</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:15"><if pos:start="31:5" pos:end="33:15">if <condition pos:start="31:8" pos:end="31:48">(<expr pos:start="31:9" pos:end="31:47"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:28">parse_section_header</name><argument_list pos:start="31:29" pos:end="31:43">(<argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:31">h</name></expr></argument>, <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:35">p</name></expr></argument>, <argument pos:start="31:38" pos:end="31:42"><expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:42">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="31:45" pos:end="31:45">&lt;</operator> <literal type="number" pos:start="31:47" pos:end="31:47">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:15"><block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:15"><if pos:start="35:5" pos:end="37:15">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">h</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:13">tid</name></name> <operator pos:start="35:15" pos:end="35:16">!=</operator> <name pos:start="35:18" pos:end="35:25">M4OD_TID</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:15"><block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:15"><if pos:start="39:5" pos:end="41:15">if <condition pos:start="39:8" pos:end="39:36">(<expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">h</name><operator pos:start="39:10" pos:end="39:10">.</operator><name pos:start="39:11" pos:end="39:17">version</name></name> <operator pos:start="39:19" pos:end="39:20">==</operator> <name pos:start="39:22" pos:end="39:35"><name pos:start="39:22" pos:end="39:25">tssf</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:35">last_ver</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:15"><block_content pos:start="41:9" pos:end="41:15">

        <return pos:start="41:9" pos:end="41:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:8">tssf</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:18">last_ver</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:22">h</name><operator pos:start="43:23" pos:end="43:23">.</operator><name pos:start="43:24" pos:end="43:30">version</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:37"><expr pos:start="47:5" pos:end="49:36"><call pos:start="47:5" pos:end="49:36"><name pos:start="47:5" pos:end="47:15">mp4_read_od</name><argument_list pos:start="47:16" pos:end="49:36">(<argument pos:start="47:17" pos:end="47:17"><expr pos:start="47:17" pos:end="47:17"><name pos:start="47:17" pos:end="47:17">s</name></expr></argument>, <argument pos:start="47:20" pos:end="47:20"><expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">p</name></expr></argument>, <argument pos:start="47:23" pos:end="47:44"><expr pos:start="47:23" pos:end="47:44"><operator pos:start="47:23" pos:end="47:23">(</operator><name pos:start="47:24" pos:end="47:31">unsigned</name><operator pos:start="47:32" pos:end="47:32">)</operator> <operator pos:start="47:34" pos:end="47:34">(</operator><name pos:start="47:35" pos:end="47:39">p_end</name> <operator pos:start="47:41" pos:end="47:41">-</operator> <name pos:start="47:43" pos:end="47:43">p</name><operator pos:start="47:44" pos:end="47:44">)</operator></expr></argument>, <argument pos:start="47:47" pos:end="47:55"><expr pos:start="47:47" pos:end="47:55"><name pos:start="47:47" pos:end="47:55">mp4_descr</name></expr></argument>, <argument pos:start="47:58" pos:end="47:73"><expr pos:start="47:58" pos:end="47:73"><operator pos:start="47:58" pos:end="47:58">&amp;</operator><name pos:start="47:59" pos:end="47:73">mp4_descr_count</name></expr></argument>,

                <argument pos:start="49:17" pos:end="49:35"><expr pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:35">MAX_MP4_DESCR_COUNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="53:5" pos:end="131:5">for <control pos:start="53:9" pos:end="53:42">(<init pos:start="53:10" pos:end="53:17"><expr pos:start="53:10" pos:end="53:16"><name pos:start="53:10" pos:end="53:12">pid</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</init> <condition pos:start="53:19" pos:end="53:35"><expr pos:start="53:19" pos:end="53:34"><name pos:start="53:19" pos:end="53:21">pid</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <name pos:start="53:25" pos:end="53:34">NB_PID_MAX</name></expr>;</condition> <incr pos:start="53:37" pos:end="53:41"><expr pos:start="53:37" pos:end="53:41"><name pos:start="53:37" pos:end="53:39">pid</name><operator pos:start="53:40" pos:end="53:41">++</operator></expr></incr>)</control> <block pos:start="53:44" pos:end="131:5">{<block_content pos:start="55:9" pos:end="129:9">

        <if_stmt pos:start="55:9" pos:end="57:21"><if pos:start="55:9" pos:end="57:21">if <condition pos:start="55:12" pos:end="55:27">(<expr pos:start="55:13" pos:end="55:26"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:26"><name pos:start="55:14" pos:end="55:15">ts</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">pids</name><index pos:start="55:22" pos:end="55:26">[<expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">pid</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:21"><block_content pos:start="57:13" pos:end="57:21">

            <continue pos:start="57:13" pos:end="57:21">continue;</continue></block_content></block></if></if_stmt>

        <for pos:start="59:9" pos:end="129:9">for <control pos:start="59:13" pos:end="59:45">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:40"><expr pos:start="59:21" pos:end="59:39"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:39">mp4_descr_count</name></expr>;</condition> <incr pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:42">i</name><operator pos:start="59:43" pos:end="59:44">++</operator></expr></incr>)</control> <block pos:start="59:47" pos:end="129:9">{<block_content pos:start="61:13" pos:end="127:62">

            <decl_stmt pos:start="61:13" pos:end="61:28"><decl pos:start="61:13" pos:end="61:27"><type pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:22">PESContext</name> <modifier pos:start="61:24" pos:end="61:24">*</modifier></type><name pos:start="61:25" pos:end="61:27">pes</name></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:25"><decl pos:start="63:13" pos:end="63:24"><type pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:20">AVStream</name> <modifier pos:start="63:22" pos:end="63:22">*</modifier></type><name pos:start="63:23" pos:end="63:24">st</name></decl>;</decl_stmt>

            <if_stmt pos:start="65:13" pos:end="67:25"><if pos:start="65:13" pos:end="67:25">if <condition pos:start="65:16" pos:end="65:59">(<expr pos:start="65:17" pos:end="65:58"><name pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:18">ts</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:24">pids</name><index pos:start="65:25" pos:end="65:29">[<expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:28">pid</name></expr>]</index></name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:36">es_id</name> <operator pos:start="65:38" pos:end="65:39">!=</operator> <name pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:49">mp4_descr</name><index pos:start="65:50" pos:end="65:52">[<expr pos:start="65:51" pos:end="65:51"><name pos:start="65:51" pos:end="65:51">i</name></expr>]</index></name><operator pos:start="65:53" pos:end="65:53">.</operator><name pos:start="65:54" pos:end="65:58">es_id</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:25"><block_content pos:start="67:17" pos:end="67:25">

                <continue pos:start="67:17" pos:end="67:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:50">(<expr pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:18">ts</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:24">pids</name><index pos:start="69:25" pos:end="69:29">[<expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">pid</name></expr>]</index></name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:35">type</name> <operator pos:start="69:37" pos:end="69:38">!=</operator> <name pos:start="69:40" pos:end="69:49">MPEGTS_PES</name></expr>)</condition> <block pos:start="69:52" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:25">

                <expr_stmt pos:start="71:17" pos:end="71:68"><expr pos:start="71:17" pos:end="71:67"><call pos:start="71:17" pos:end="71:67"><name pos:start="71:17" pos:end="71:22">av_log</name><argument_list pos:start="71:23" pos:end="71:67">(<argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><name pos:start="71:24" pos:end="71:24">s</name></expr></argument>, <argument pos:start="71:27" pos:end="71:38"><expr pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:41" pos:end="71:61"><expr pos:start="71:41" pos:end="71:61"><literal type="string" pos:start="71:41" pos:end="71:61">"pid %x is not PES\n"</literal></expr></argument>, <argument pos:start="71:64" pos:end="71:66"><expr pos:start="71:64" pos:end="71:66"><name pos:start="71:64" pos:end="71:66">pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="73:17" pos:end="73:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:53"><expr pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:15">pes</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:20">ts</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:26">pids</name><index pos:start="77:27" pos:end="77:31">[<expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:30">pid</name></expr>]</index></name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:52"><name pos:start="77:34" pos:end="77:34">u</name><operator pos:start="77:35" pos:end="77:35">.</operator><name pos:start="77:36" pos:end="77:45">pes_filter</name><operator pos:start="77:46" pos:end="77:46">.</operator><name pos:start="77:47" pos:end="77:52">opaque</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:14">st</name>  <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:25"><name pos:start="79:19" pos:end="79:21">pes</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:25">st</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="83:25"><if pos:start="81:13" pos:end="83:25">if <condition pos:start="81:16" pos:end="81:20">(<expr pos:start="81:17" pos:end="81:19"><operator pos:start="81:17" pos:end="81:17">!</operator><name pos:start="81:18" pos:end="81:19">st</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">

                <continue pos:start="83:17" pos:end="83:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:38"><expr pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:15">pes</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:19">sl</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:31">mp4_descr</name><index pos:start="87:32" pos:end="87:34">[<expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">i</name></expr>]</index></name><operator pos:start="87:35" pos:end="87:35">.</operator><name pos:start="87:36" pos:end="87:37">sl</name></expr>;</expr_stmt>



            <expr_stmt pos:start="91:13" pos:end="95:54"><expr pos:start="91:13" pos:end="95:53"><call pos:start="91:13" pos:end="95:53"><name pos:start="91:13" pos:end="91:29">ffio_init_context</name><argument_list pos:start="91:30" pos:end="95:53">(<argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><operator pos:start="91:31" pos:end="91:31">&amp;</operator><name pos:start="91:32" pos:end="91:33">pb</name></expr></argument>, <argument pos:start="91:36" pos:end="91:64"><expr pos:start="91:36" pos:end="91:64"><name pos:start="91:36" pos:end="91:47"><name pos:start="91:36" pos:end="91:44">mp4_descr</name><index pos:start="91:45" pos:end="91:47">[<expr pos:start="91:46" pos:end="91:46"><name pos:start="91:46" pos:end="91:46">i</name></expr>]</index></name><operator pos:start="91:48" pos:end="91:48">.</operator><name pos:start="91:49" pos:end="91:64">dec_config_descr</name></expr></argument>,

                              <argument pos:start="93:31" pos:end="93:63"><expr pos:start="93:31" pos:end="93:63"><name pos:start="93:31" pos:end="93:42"><name pos:start="93:31" pos:end="93:39">mp4_descr</name><index pos:start="93:40" pos:end="93:42">[<expr pos:start="93:41" pos:end="93:41"><name pos:start="93:41" pos:end="93:41">i</name></expr>]</index></name><operator pos:start="93:43" pos:end="93:43">.</operator><name pos:start="93:44" pos:end="93:63">dec_config_descr_len</name></expr></argument>, <argument pos:start="93:66" pos:end="93:66"><expr pos:start="93:66" pos:end="93:66"><literal type="number" pos:start="93:66" pos:end="93:66">0</literal></expr></argument>,

                              <argument pos:start="95:31" pos:end="95:34"><expr pos:start="95:31" pos:end="95:34"><name pos:start="95:31" pos:end="95:34">NULL</name></expr></argument>, <argument pos:start="95:37" pos:end="95:40"><expr pos:start="95:37" pos:end="95:40"><name pos:start="95:37" pos:end="95:40">NULL</name></expr></argument>, <argument pos:start="95:43" pos:end="95:46"><expr pos:start="95:43" pos:end="95:46"><name pos:start="95:43" pos:end="95:46">NULL</name></expr></argument>, <argument pos:start="95:49" pos:end="95:52"><expr pos:start="95:49" pos:end="95:52"><name pos:start="95:49" pos:end="95:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:53"><expr pos:start="97:13" pos:end="97:52"><call pos:start="97:13" pos:end="97:52"><name pos:start="97:13" pos:end="97:40">ff_mp4_read_dec_config_descr</name><argument_list pos:start="97:41" pos:end="97:52">(<argument pos:start="97:42" pos:end="97:42"><expr pos:start="97:42" pos:end="97:42"><name pos:start="97:42" pos:end="97:42">s</name></expr></argument>, <argument pos:start="97:45" pos:end="97:46"><expr pos:start="97:45" pos:end="97:46"><name pos:start="97:45" pos:end="97:46">st</name></expr></argument>, <argument pos:start="97:49" pos:end="97:51"><expr pos:start="97:49" pos:end="97:51"><operator pos:start="97:49" pos:end="97:49">&amp;</operator><name pos:start="97:50" pos:end="97:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="103:37"><if pos:start="99:13" pos:end="103:37">if <condition pos:start="99:16" pos:end="101:46">(<expr pos:start="99:17" pos:end="101:45"><name pos:start="99:17" pos:end="99:35"><name pos:start="99:17" pos:end="99:18">st</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:25">codec</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:35">codec_id</name></name> <operator pos:start="99:37" pos:end="99:38">==</operator> <name pos:start="99:40" pos:end="99:54">AV_CODEC_ID_AAC</name> <operator pos:start="99:56" pos:end="99:57">&amp;&amp;</operator>

                <name pos:start="101:17" pos:end="101:41"><name pos:start="101:17" pos:end="101:18">st</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:25">codec</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:41">extradata_size</name></name> <operator pos:start="101:43" pos:end="101:43">&gt;</operator> <literal type="number" pos:start="101:45" pos:end="101:45">0</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:37"><block_content pos:start="103:17" pos:end="103:37">

                <expr_stmt pos:start="103:17" pos:end="103:37"><expr pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:18">st</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:32">need_parsing</name></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <literal type="number" pos:start="103:36" pos:end="103:36">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="105:13" pos:end="109:37"><if pos:start="105:13" pos:end="109:37">if <condition pos:start="105:16" pos:end="107:46">(<expr pos:start="105:17" pos:end="107:45"><name pos:start="105:17" pos:end="105:35"><name pos:start="105:17" pos:end="105:18">st</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:25">codec</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:35">codec_id</name></name> <operator pos:start="105:37" pos:end="105:38">==</operator> <name pos:start="105:40" pos:end="105:55">AV_CODEC_ID_H264</name> <operator pos:start="105:57" pos:end="105:58">&amp;&amp;</operator>

                <name pos:start="107:17" pos:end="107:41"><name pos:start="107:17" pos:end="107:18">st</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:25">codec</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:41">extradata_size</name></name> <operator pos:start="107:43" pos:end="107:43">&gt;</operator> <literal type="number" pos:start="107:45" pos:end="107:45">0</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:37"><block_content pos:start="109:17" pos:end="109:37">

                <expr_stmt pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:18">st</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:32">need_parsing</name></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <literal type="number" pos:start="109:36" pos:end="109:36">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="113:13" pos:end="127:62"><if pos:start="113:13" pos:end="117:13">if <condition pos:start="113:16" pos:end="113:56">(<expr pos:start="113:17" pos:end="113:55"><name pos:start="113:17" pos:end="113:35"><name pos:start="113:17" pos:end="113:18">st</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:25">codec</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:35">codec_id</name></name> <operator pos:start="113:37" pos:end="113:38">&lt;=</operator> <name pos:start="113:40" pos:end="113:55">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="113:58" pos:end="117:13">{<block_content>

                <comment type="line" pos:start="115:17" pos:end="115:29">// do nothing</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="117:15" pos:end="119:59">else if <condition pos:start="117:23" pos:end="117:69">(<expr pos:start="117:24" pos:end="117:68"><name pos:start="117:24" pos:end="117:42"><name pos:start="117:24" pos:end="117:25">st</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:32">codec</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:42">codec_id</name></name> <operator pos:start="117:44" pos:end="117:44">&lt;</operator> <name pos:start="117:46" pos:end="117:68">AV_CODEC_ID_FIRST_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:59"><block_content pos:start="119:17" pos:end="119:59">

                <expr_stmt pos:start="119:17" pos:end="119:59"><expr pos:start="119:17" pos:end="119:58"><name pos:start="119:17" pos:end="119:37"><name pos:start="119:17" pos:end="119:18">st</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:25">codec</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:37">codec_type</name></name> <operator pos:start="119:39" pos:end="119:39">=</operator> <name pos:start="119:41" pos:end="119:58">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="121:13" pos:end="123:59">else if <condition pos:start="121:21" pos:end="121:70">(<expr pos:start="121:22" pos:end="121:69"><name pos:start="121:22" pos:end="121:40"><name pos:start="121:22" pos:end="121:23">st</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:30">codec</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:40">codec_id</name></name> <operator pos:start="121:42" pos:end="121:42">&lt;</operator> <name pos:start="121:44" pos:end="121:69">AV_CODEC_ID_FIRST_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:59"><block_content pos:start="123:17" pos:end="123:59">

                <expr_stmt pos:start="123:17" pos:end="123:59"><expr pos:start="123:17" pos:end="123:58"><name pos:start="123:17" pos:end="123:37"><name pos:start="123:17" pos:end="123:18">st</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:25">codec</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:37">codec_type</name></name> <operator pos:start="123:39" pos:end="123:39">=</operator> <name pos:start="123:41" pos:end="123:58">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="125:13" pos:end="127:62">else if <condition pos:start="125:21" pos:end="125:69">(<expr pos:start="125:22" pos:end="125:68"><name pos:start="125:22" pos:end="125:40"><name pos:start="125:22" pos:end="125:23">st</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:30">codec</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:40">codec_id</name></name> <operator pos:start="125:42" pos:end="125:42">&lt;</operator> <name pos:start="125:44" pos:end="125:68">AV_CODEC_ID_FIRST_UNKNOWN</name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:62"><block_content pos:start="127:17" pos:end="127:62">

                <expr_stmt pos:start="127:17" pos:end="127:62"><expr pos:start="127:17" pos:end="127:61"><name pos:start="127:17" pos:end="127:37"><name pos:start="127:17" pos:end="127:18">st</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:25">codec</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:37">codec_type</name></name> <operator pos:start="127:39" pos:end="127:39">=</operator> <name pos:start="127:41" pos:end="127:61">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="133:5" pos:end="135:47">for <control pos:start="133:9" pos:end="133:41">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">i</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:36"><expr pos:start="133:17" pos:end="133:35"><name pos:start="133:17" pos:end="133:17">i</name> <operator pos:start="133:19" pos:end="133:19">&lt;</operator> <name pos:start="133:21" pos:end="133:35">mp4_descr_count</name></expr>;</condition> <incr pos:start="133:38" pos:end="133:40"><expr pos:start="133:38" pos:end="133:40"><name pos:start="133:38" pos:end="133:38">i</name><operator pos:start="133:39" pos:end="133:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="135:9" pos:end="135:47"><block_content pos:start="135:9" pos:end="135:47">

        <expr_stmt pos:start="135:9" pos:end="135:47"><expr pos:start="135:9" pos:end="135:46"><call pos:start="135:9" pos:end="135:46"><name pos:start="135:9" pos:end="135:15">av_free</name><argument_list pos:start="135:16" pos:end="135:46">(<argument pos:start="135:17" pos:end="135:45"><expr pos:start="135:17" pos:end="135:45"><name pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:25">mp4_descr</name><index pos:start="135:26" pos:end="135:28">[<expr pos:start="135:27" pos:end="135:27"><name pos:start="135:27" pos:end="135:27">i</name></expr>]</index></name><operator pos:start="135:29" pos:end="135:29">.</operator><name pos:start="135:30" pos:end="135:45">dec_config_descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
