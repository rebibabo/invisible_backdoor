<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2893.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:31">iommu_mem_readw</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:15">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">IOMMUState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:28">saddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:9">saddr</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:17">addr</name> <operator pos:start="13:19" pos:end="13:19">-</operator> <name pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">addr</name></name><operator pos:start="13:28" pos:end="13:28">)</operator> <operator pos:start="13:30" pos:end="13:31">&gt;&gt;</operator> <literal type="number" pos:start="13:33" pos:end="13:33">2</literal></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="33:5">switch <condition pos:start="15:12" pos:end="15:18">(<expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:17">saddr</name></expr>)</condition> <block pos:start="15:20" pos:end="33:5">{<block_content pos:start="17:5" pos:end="31:14">

    <default pos:start="17:5" pos:end="17:12">default:</default>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:21">regs</name><index pos:start="19:22" pos:end="19:28">[<expr pos:start="19:23" pos:end="19:27"><name pos:start="19:23" pos:end="19:27">saddr</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:20">case <expr pos:start="23:10" pos:end="23:19"><name pos:start="23:10" pos:end="23:19">IOMMU_AFAR</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:20">case <expr pos:start="25:10" pos:end="25:19"><name pos:start="25:10" pos:end="25:19">IOMMU_AFSR</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:28"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:21">regs</name><index pos:start="27:22" pos:end="27:28">[<expr pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:27">saddr</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><call pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:22">qemu_irq_lower</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:29">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><call pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:11">DPRINTF</name><argument_list pos:start="35:12" pos:end="35:51">(<argument pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:33"><literal type="string" pos:start="35:13" pos:end="35:33">"read reg[%d] = %x\n"</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:45"><expr pos:start="35:36" pos:end="35:45"><operator pos:start="35:36" pos:end="35:36">(</operator><name pos:start="35:37" pos:end="35:39">int</name><operator pos:start="35:40" pos:end="35:40">)</operator><name pos:start="35:41" pos:end="35:45">saddr</name></expr></argument>, <argument pos:start="35:48" pos:end="35:50"><expr pos:start="35:48" pos:end="35:50"><name pos:start="35:48" pos:end="35:50">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
