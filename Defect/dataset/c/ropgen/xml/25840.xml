<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25840.c" pos:tabs="8"><function pos:start="1:1" pos:end="307:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">pmt_cb</name><parameter_list pos:start="1:19" pos:end="1:81">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:39"><name pos:start="1:20" pos:end="1:31">MpegTSFilter</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">filter</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:63">section</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:80"><decl pos:start="1:66" pos:end="1:80"><type pos:start="1:66" pos:end="1:80"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:80">section_len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="307:1">{<block_content pos:start="5:5" pos:end="305:36">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MpegTSContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ts</name> <init pos:start="5:23" pos:end="5:55">= <expr pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:30">filter</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:33">u</name><operator pos:start="5:34" pos:end="5:34">.</operator><name pos:start="5:35" pos:end="5:48">section_filter</name><operator pos:start="5:49" pos:end="5:49">.</operator><name pos:start="5:50" pos:end="5:55">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">SectionHeader</name></type> <name pos:start="7:19" pos:end="7:20">h1</name></decl>, <decl pos:start="7:23" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">h</name> <init pos:start="7:26" pos:end="7:30">= <expr pos:start="7:28" pos:end="7:30"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:30">h1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PESContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">pes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">p</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">p_end</name></decl>, <decl pos:start="13:31" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:44">desc_list_end</name></decl>, <decl pos:start="13:47" pos:end="13:55"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:47" pos:end="13:47">*</modifier></type><name pos:start="13:48" pos:end="13:55">desc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:27">program_info_length</name></decl>, <decl pos:start="15:30" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:30" pos:end="15:36">pcr_pid</name></decl>, <decl pos:start="15:39" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:39" pos:end="15:41">pid</name></decl>, <decl pos:start="15:44" pos:end="15:54"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:44" pos:end="15:54">stream_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:21">desc_list_len</name></decl>, <decl pos:start="17:24" pos:end="17:31"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:31">desc_len</name></decl>, <decl pos:start="17:34" pos:end="17:41"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:34" pos:end="17:41">desc_tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">comp_page</name> <init pos:start="19:19" pos:end="19:21">= <expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr></init></decl>, <decl pos:start="19:24" pos:end="19:35"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:31">anc_page</name> <init pos:start="19:33" pos:end="19:35">= <expr pos:start="19:35" pos:end="19:35"><literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="19:38" pos:end="19:70">/* initialize to kill warnings */</comment>

    <decl_stmt pos:start="21:5" pos:end="26:0"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">char</name></type> <name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:17">language</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>]</index></name> <init pos:start="21:22" pos:end="21:26">= <expr pos:start="21:24" pos:end="21:26"><block pos:start="21:24" pos:end="21:26">{<expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>}</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="21:29" pos:end="21:61">/* initialize to kill warnings */</comment>



<cpp:ifdef pos:start="25:1" pos:end="25:15">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:15">DEBUG_SI</name></cpp:ifdef>

    <expr_stmt pos:start="27:5" pos:end="27:67"><expr pos:start="27:5" pos:end="27:66"><call pos:start="27:5" pos:end="27:66"><name pos:start="27:5" pos:end="27:10">av_log</name><argument_list pos:start="27:11" pos:end="27:66">(<argument pos:start="27:12" pos:end="27:21"><expr pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:13">ts</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">stream</name></name></expr></argument>, <argument pos:start="27:24" pos:end="27:35"><expr pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:35">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="27:38" pos:end="27:52"><expr pos:start="27:38" pos:end="27:52"><literal type="string" pos:start="27:38" pos:end="27:52">"PMT: len %i\n"</literal></expr></argument>, <argument pos:start="27:55" pos:end="27:65"><expr pos:start="27:55" pos:end="27:65"><name pos:start="27:55" pos:end="27:65">section_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:78"><call pos:start="29:5" pos:end="29:78"><name pos:start="29:5" pos:end="29:19">av_hex_dump_log</name><argument_list pos:start="29:20" pos:end="29:78">(<argument pos:start="29:21" pos:end="29:30"><expr pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:22">ts</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:30">stream</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:44"><expr pos:start="29:33" pos:end="29:44"><name pos:start="29:33" pos:end="29:44">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="29:47" pos:end="29:64"><expr pos:start="29:47" pos:end="29:64"><operator pos:start="29:47" pos:end="29:47">(</operator><name pos:start="29:48" pos:end="29:54">uint8_t</name> <operator pos:start="29:56" pos:end="29:56">*</operator><operator pos:start="29:57" pos:end="29:57">)</operator><name pos:start="29:58" pos:end="29:64">section</name></expr></argument>, <argument pos:start="29:67" pos:end="29:77"><expr pos:start="29:67" pos:end="29:77"><name pos:start="29:67" pos:end="29:77">section_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:9">p_end</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:19">section</name> <operator pos:start="33:21" pos:end="33:21">+</operator> <name pos:start="33:23" pos:end="33:33">section_len</name> <operator pos:start="33:35" pos:end="33:35">-</operator> <literal type="number" pos:start="33:37" pos:end="33:37">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:5">p</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <name pos:start="35:9" pos:end="35:15">section</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="42:0"><if pos:start="37:5" pos:end="42:0">if <condition pos:start="37:8" pos:end="37:47">(<expr pos:start="37:9" pos:end="37:46"><call pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:28">parse_section_header</name><argument_list pos:start="37:29" pos:end="37:42">(<argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">h</name></expr></argument>, <argument pos:start="37:33" pos:end="37:34"><expr pos:start="37:33" pos:end="37:34"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:34">p</name></expr></argument>, <argument pos:start="37:37" pos:end="37:41"><expr pos:start="37:37" pos:end="37:41"><name pos:start="37:37" pos:end="37:41">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="37:44" pos:end="37:44">&lt;</operator> <literal type="number" pos:start="37:46" pos:end="37:46">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="42:0"><block_content pos:start="39:9" pos:end="42:0">

        <return pos:start="39:9" pos:end="42:0">return;</return></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="41:1" pos:end="41:15">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:15">DEBUG_SI</name></cpp:ifdef>

    <expr_stmt pos:start="43:5" pos:end="48:0"><expr pos:start="43:5" pos:end="45:46"><call pos:start="43:5" pos:end="45:46"><name pos:start="43:5" pos:end="43:10">av_log</name><argument_list pos:start="43:11" pos:end="45:46">(<argument pos:start="43:12" pos:end="43:21"><expr pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:13">ts</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:21">stream</name></name></expr></argument>, <argument pos:start="43:24" pos:end="43:35"><expr pos:start="43:24" pos:end="43:35"><name pos:start="43:24" pos:end="43:35">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="43:38" pos:end="43:63"><expr pos:start="43:38" pos:end="43:63"><literal type="string" pos:start="43:38" pos:end="43:63">"sid=0x%x sec_num=%d/%d\n"</literal></expr></argument>,

           <argument pos:start="45:12" pos:end="45:16"><expr pos:start="45:12" pos:end="45:16"><name pos:start="45:12" pos:end="45:16"><name pos:start="45:12" pos:end="45:12">h</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:16">id</name></name></expr></argument>, <argument pos:start="45:19" pos:end="45:28"><expr pos:start="45:19" pos:end="45:28"><name pos:start="45:19" pos:end="45:28"><name pos:start="45:19" pos:end="45:19">h</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:28">sec_num</name></name></expr></argument>, <argument pos:start="45:31" pos:end="45:45"><expr pos:start="45:31" pos:end="45:45"><name pos:start="45:31" pos:end="45:45"><name pos:start="45:31" pos:end="45:31">h</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:45">last_sec_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="49:5" pos:end="51:15"><if pos:start="49:5" pos:end="51:15">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">h</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:14">tid</name></name> <operator pos:start="49:16" pos:end="49:17">!=</operator> <name pos:start="49:19" pos:end="49:25">PMT_TID</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:15"><block_content pos:start="51:9" pos:end="51:15">

        <return pos:start="51:9" pos:end="51:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><call pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:17">clear_program</name><argument_list pos:start="55:18" pos:end="55:28">(<argument pos:start="55:19" pos:end="55:20"><expr pos:start="55:19" pos:end="55:20"><name pos:start="55:19" pos:end="55:20">ts</name></expr></argument>, <argument pos:start="55:23" pos:end="55:27"><expr pos:start="55:23" pos:end="55:27"><name pos:start="55:23" pos:end="55:27"><name pos:start="55:23" pos:end="55:23">h</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:27">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:11">pcr_pid</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:30"><name pos:start="57:15" pos:end="57:19">get16</name><argument_list pos:start="57:20" pos:end="57:30">(<argument pos:start="57:21" pos:end="57:22"><expr pos:start="57:21" pos:end="57:22"><operator pos:start="57:21" pos:end="57:21">&amp;</operator><name pos:start="57:22" pos:end="57:22">p</name></expr></argument>, <argument pos:start="57:25" pos:end="57:29"><expr pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:29">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="57:32" pos:end="57:32">&amp;</operator> <literal type="number" pos:start="57:34" pos:end="57:39">0x1fff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:15"><if pos:start="59:5" pos:end="61:15">if <condition pos:start="59:8" pos:end="59:20">(<expr pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:15">pcr_pid</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:15"><block_content pos:start="61:9" pos:end="61:15">

        <return pos:start="61:9" pos:end="61:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="66:0"><expr pos:start="63:5" pos:end="63:38"><call pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:18">add_pid_to_pmt</name><argument_list pos:start="63:19" pos:end="63:38">(<argument pos:start="63:20" pos:end="63:21"><expr pos:start="63:20" pos:end="63:21"><name pos:start="63:20" pos:end="63:21">ts</name></expr></argument>, <argument pos:start="63:24" pos:end="63:28"><expr pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:24">h</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:28">id</name></name></expr></argument>, <argument pos:start="63:31" pos:end="63:37"><expr pos:start="63:31" pos:end="63:37"><name pos:start="63:31" pos:end="63:37">pcr_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="65:1" pos:end="65:15">#<cpp:directive pos:start="65:2" pos:end="65:6">ifdef</cpp:directive> <name pos:start="65:8" pos:end="65:15">DEBUG_SI</name></cpp:ifdef>

    <expr_stmt pos:start="67:5" pos:end="70:0"><expr pos:start="67:5" pos:end="67:63"><call pos:start="67:5" pos:end="67:63"><name pos:start="67:5" pos:end="67:10">av_log</name><argument_list pos:start="67:11" pos:end="67:63">(<argument pos:start="67:12" pos:end="67:21"><expr pos:start="67:12" pos:end="67:21"><name pos:start="67:12" pos:end="67:21"><name pos:start="67:12" pos:end="67:13">ts</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:21">stream</name></name></expr></argument>, <argument pos:start="67:24" pos:end="67:35"><expr pos:start="67:24" pos:end="67:35"><name pos:start="67:24" pos:end="67:35">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:38" pos:end="67:53"><expr pos:start="67:38" pos:end="67:53"><literal type="string" pos:start="67:38" pos:end="67:53">"pcr_pid=0x%x\n"</literal></expr></argument>, <argument pos:start="67:56" pos:end="67:62"><expr pos:start="67:56" pos:end="67:62"><name pos:start="67:56" pos:end="67:62">pcr_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="71:5" pos:end="71:51"><expr pos:start="71:5" pos:end="71:50"><name pos:start="71:5" pos:end="71:23">program_info_length</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:42"><name pos:start="71:27" pos:end="71:31">get16</name><argument_list pos:start="71:32" pos:end="71:42">(<argument pos:start="71:33" pos:end="71:34"><expr pos:start="71:33" pos:end="71:34"><operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:34">p</name></expr></argument>, <argument pos:start="71:37" pos:end="71:41"><expr pos:start="71:37" pos:end="71:41"><name pos:start="71:37" pos:end="71:41">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="71:44" pos:end="71:44">&amp;</operator> <literal type="number" pos:start="71:46" pos:end="71:50">0xfff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:15"><if pos:start="73:5" pos:end="75:15">if <condition pos:start="73:8" pos:end="73:32">(<expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:27">program_info_length</name> <operator pos:start="73:29" pos:end="73:29">&lt;</operator> <literal type="number" pos:start="73:31" pos:end="73:31">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:15"><block_content pos:start="75:9" pos:end="75:15">

        <return pos:start="75:9" pos:end="75:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:5">p</name> <operator pos:start="77:7" pos:end="77:8">+=</operator> <name pos:start="77:10" pos:end="77:28">program_info_length</name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:15"><if pos:start="79:5" pos:end="81:15">if <condition pos:start="79:8" pos:end="79:19">(<expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:9">p</name> <operator pos:start="79:11" pos:end="79:12">&gt;=</operator> <name pos:start="79:14" pos:end="79:18">p_end</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:15"><block_content pos:start="81:9" pos:end="81:15">

        <return pos:start="81:9" pos:end="81:15">return;</return></block_content></block></if></if_stmt>

    <for pos:start="83:5" pos:end="299:5">for<control pos:start="83:8" pos:end="83:11">(<init pos:start="83:9" pos:end="83:9">;</init><condition pos:start="83:10" pos:end="83:10">;</condition><incr/>)</control> <block pos:start="83:13" pos:end="299:5">{<block_content pos:start="85:9" pos:end="297:9">

        <expr_stmt pos:start="85:9" pos:end="85:24"><expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:16">language</name><index pos:start="85:17" pos:end="85:19">[<expr pos:start="85:18" pos:end="85:18"><literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>]</index></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:15"><expr pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:10">st</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:19">stream_type</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="89:37"><name pos:start="89:23" pos:end="89:26">get8</name><argument_list pos:start="89:27" pos:end="89:37">(<argument pos:start="89:28" pos:end="89:29"><expr pos:start="89:28" pos:end="89:29"><operator pos:start="89:28" pos:end="89:28">&amp;</operator><name pos:start="89:29" pos:end="89:29">p</name></expr></argument>, <argument pos:start="89:32" pos:end="89:36"><expr pos:start="89:32" pos:end="89:36"><name pos:start="89:32" pos:end="89:36">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:18"><if pos:start="91:9" pos:end="93:18">if <condition pos:start="91:12" pos:end="91:28">(<expr pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:23">stream_type</name> <operator pos:start="91:25" pos:end="91:25">&lt;</operator> <literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:18"><block_content pos:start="93:13" pos:end="93:18">

            <break pos:start="93:13" pos:end="93:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:40"><expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:11">pid</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:30"><name pos:start="95:15" pos:end="95:19">get16</name><argument_list pos:start="95:20" pos:end="95:30">(<argument pos:start="95:21" pos:end="95:22"><expr pos:start="95:21" pos:end="95:22"><operator pos:start="95:21" pos:end="95:21">&amp;</operator><name pos:start="95:22" pos:end="95:22">p</name></expr></argument>, <argument pos:start="95:25" pos:end="95:29"><expr pos:start="95:25" pos:end="95:29"><name pos:start="95:25" pos:end="95:29">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="95:32" pos:end="95:32">&amp;</operator> <literal type="number" pos:start="95:34" pos:end="95:39">0x1fff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:18"><if pos:start="97:9" pos:end="99:18">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">pid</name> <operator pos:start="97:17" pos:end="97:17">&lt;</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:18"><block_content pos:start="99:13" pos:end="99:18">

            <break pos:start="99:13" pos:end="99:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:49"><expr pos:start="101:9" pos:end="101:48"><name pos:start="101:9" pos:end="101:21">desc_list_len</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <call pos:start="101:25" pos:end="101:40"><name pos:start="101:25" pos:end="101:29">get16</name><argument_list pos:start="101:30" pos:end="101:40">(<argument pos:start="101:31" pos:end="101:32"><expr pos:start="101:31" pos:end="101:32"><operator pos:start="101:31" pos:end="101:31">&amp;</operator><name pos:start="101:32" pos:end="101:32">p</name></expr></argument>, <argument pos:start="101:35" pos:end="101:39"><expr pos:start="101:35" pos:end="101:39"><name pos:start="101:35" pos:end="101:39">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="101:42" pos:end="101:42">&amp;</operator> <literal type="number" pos:start="101:44" pos:end="101:48">0xfff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:18"><if pos:start="103:9" pos:end="105:18">if <condition pos:start="103:12" pos:end="103:30">(<expr pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:25">desc_list_len</name> <operator pos:start="103:27" pos:end="103:27">&lt;</operator> <literal type="number" pos:start="103:29" pos:end="103:29">0</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:18"><block_content pos:start="105:13" pos:end="105:18">

            <break pos:start="105:13" pos:end="105:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:21">desc_list_end</name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:25">p</name> <operator pos:start="107:27" pos:end="107:27">+</operator> <name pos:start="107:29" pos:end="107:41">desc_list_len</name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="111:18"><if pos:start="109:9" pos:end="111:18">if <condition pos:start="109:12" pos:end="109:34">(<expr pos:start="109:13" pos:end="109:33"><name pos:start="109:13" pos:end="109:25">desc_list_end</name> <operator pos:start="109:27" pos:end="109:27">&gt;</operator> <name pos:start="109:29" pos:end="109:33">p_end</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:18"><block_content pos:start="111:13" pos:end="111:18">

            <break pos:start="111:13" pos:end="111:18">break;</break></block_content></block></if></if_stmt>

        <for pos:start="113:9" pos:end="203:9">for<control pos:start="113:12" pos:end="113:15">(<init pos:start="113:13" pos:end="113:13">;</init><condition pos:start="113:14" pos:end="113:14">;</condition><incr/>)</control> <block pos:start="113:17" pos:end="203:9">{<block_content pos:start="115:13" pos:end="201:25">

            <expr_stmt pos:start="115:13" pos:end="115:47"><expr pos:start="115:13" pos:end="115:46"><name pos:start="115:13" pos:end="115:20">desc_tag</name> <operator pos:start="115:22" pos:end="115:22">=</operator> <call pos:start="115:24" pos:end="115:46"><name pos:start="115:24" pos:end="115:27">get8</name><argument_list pos:start="115:28" pos:end="115:46">(<argument pos:start="115:29" pos:end="115:30"><expr pos:start="115:29" pos:end="115:30"><operator pos:start="115:29" pos:end="115:29">&amp;</operator><name pos:start="115:30" pos:end="115:30">p</name></expr></argument>, <argument pos:start="115:33" pos:end="115:45"><expr pos:start="115:33" pos:end="115:45"><name pos:start="115:33" pos:end="115:45">desc_list_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="119:22"><if pos:start="117:13" pos:end="119:22">if <condition pos:start="117:16" pos:end="117:29">(<expr pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:24">desc_tag</name> <operator pos:start="117:26" pos:end="117:26">&lt;</operator> <literal type="number" pos:start="117:28" pos:end="117:28">0</literal></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:22"><block_content pos:start="119:17" pos:end="119:22">

                <break pos:start="119:17" pos:end="119:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="121:13" pos:end="137:13"><if pos:start="121:13" pos:end="137:13">if <condition pos:start="121:16" pos:end="121:56">(<expr pos:start="121:17" pos:end="121:55"><name pos:start="121:17" pos:end="121:27">stream_type</name> <operator pos:start="121:29" pos:end="121:30">==</operator> <name pos:start="121:32" pos:end="121:55">STREAM_TYPE_PRIVATE_DATA</name></expr>)</condition> <block pos:start="121:58" pos:end="137:13">{<block_content pos:start="123:17" pos:end="135:17">

                <if_stmt pos:start="123:17" pos:end="135:17"><if pos:start="123:17" pos:end="129:17">if<condition pos:start="123:19" pos:end="123:60">(<expr pos:start="123:20" pos:end="123:59"><operator pos:start="123:20" pos:end="123:20">(</operator><name pos:start="123:21" pos:end="123:28">desc_tag</name> <operator pos:start="123:30" pos:end="123:31">==</operator> <literal type="number" pos:start="123:33" pos:end="123:36">0x6A</literal><operator pos:start="123:37" pos:end="123:37">)</operator> <operator pos:start="123:39" pos:end="123:40">||</operator> <operator pos:start="123:42" pos:end="123:42">(</operator><name pos:start="123:43" pos:end="123:50">desc_tag</name> <operator pos:start="123:52" pos:end="123:53">==</operator> <literal type="number" pos:start="123:55" pos:end="123:58">0x7A</literal><operator pos:start="123:59" pos:end="123:59">)</operator></expr>)</condition> <block pos:start="123:62" pos:end="129:17">{<block_content pos:start="127:21" pos:end="127:56">

                    <comment type="block" pos:start="125:21" pos:end="125:45">/*assume DVB AC-3 Audio*/</comment>

                    <expr_stmt pos:start="127:21" pos:end="127:56"><expr pos:start="127:21" pos:end="127:55"><name pos:start="127:21" pos:end="127:31">stream_type</name> <operator pos:start="127:33" pos:end="127:33">=</operator> <name pos:start="127:35" pos:end="127:55">STREAM_TYPE_AUDIO_AC3</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="129:19" pos:end="135:17">else if<condition pos:start="129:26" pos:end="129:43">(<expr pos:start="129:27" pos:end="129:42"><name pos:start="129:27" pos:end="129:34">desc_tag</name> <operator pos:start="129:36" pos:end="129:37">==</operator> <literal type="number" pos:start="129:39" pos:end="129:42">0x7B</literal></expr>)</condition> <block pos:start="129:45" pos:end="135:17">{<block_content pos:start="133:21" pos:end="133:56">

                    <comment type="block" pos:start="131:21" pos:end="131:39">/* DVB DTS audio */</comment>

                    <expr_stmt pos:start="133:21" pos:end="133:56"><expr pos:start="133:21" pos:end="133:55"><name pos:start="133:21" pos:end="133:31">stream_type</name> <operator pos:start="133:33" pos:end="133:33">=</operator> <name pos:start="133:35" pos:end="133:55">STREAM_TYPE_AUDIO_DTS</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:47"><expr pos:start="139:13" pos:end="139:46"><name pos:start="139:13" pos:end="139:20">desc_len</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <call pos:start="139:24" pos:end="139:46"><name pos:start="139:24" pos:end="139:27">get8</name><argument_list pos:start="139:28" pos:end="139:46">(<argument pos:start="139:29" pos:end="139:30"><expr pos:start="139:29" pos:end="139:30"><operator pos:start="139:29" pos:end="139:29">&amp;</operator><name pos:start="139:30" pos:end="139:30">p</name></expr></argument>, <argument pos:start="139:33" pos:end="139:45"><expr pos:start="139:33" pos:end="139:45"><name pos:start="139:33" pos:end="139:45">desc_list_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:20">desc_end</name> <operator pos:start="141:22" pos:end="141:22">=</operator> <name pos:start="141:24" pos:end="141:24">p</name> <operator pos:start="141:26" pos:end="141:26">+</operator> <name pos:start="141:28" pos:end="141:35">desc_len</name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="148:0"><if pos:start="143:13" pos:end="148:0">if <condition pos:start="143:16" pos:end="143:41">(<expr pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:24">desc_end</name> <operator pos:start="143:26" pos:end="143:26">&gt;</operator> <name pos:start="143:28" pos:end="143:40">desc_list_end</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="148:0"><block_content pos:start="145:17" pos:end="148:0">

                <break pos:start="145:17" pos:end="148:0">break;</break></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="147:1" pos:end="147:15">#<cpp:directive pos:start="147:2" pos:end="147:6">ifdef</cpp:directive> <name pos:start="147:8" pos:end="147:15">DEBUG_SI</name></cpp:ifdef>

            <expr_stmt pos:start="149:13" pos:end="154:0"><expr pos:start="149:13" pos:end="151:38"><call pos:start="149:13" pos:end="151:38"><name pos:start="149:13" pos:end="149:18">av_log</name><argument_list pos:start="149:19" pos:end="151:38">(<argument pos:start="149:20" pos:end="149:29"><expr pos:start="149:20" pos:end="149:29"><name pos:start="149:20" pos:end="149:29"><name pos:start="149:20" pos:end="149:21">ts</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:29">stream</name></name></expr></argument>, <argument pos:start="149:32" pos:end="149:43"><expr pos:start="149:32" pos:end="149:43"><name pos:start="149:32" pos:end="149:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="149:46" pos:end="149:67"><expr pos:start="149:46" pos:end="149:67"><literal type="string" pos:start="149:46" pos:end="149:67">"tag: 0x%02x len=%d\n"</literal></expr></argument>,

                   <argument pos:start="151:20" pos:end="151:27"><expr pos:start="151:20" pos:end="151:27"><name pos:start="151:20" pos:end="151:27">desc_tag</name></expr></argument>, <argument pos:start="151:30" pos:end="151:37"><expr pos:start="151:30" pos:end="151:37"><name pos:start="151:30" pos:end="151:37">desc_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

            <switch pos:start="155:13" pos:end="199:13">switch<condition pos:start="155:19" pos:end="155:28">(<expr pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:27">desc_tag</name></expr>)</condition> <block pos:start="155:30" pos:end="199:13">{<block_content pos:start="157:13" pos:end="197:22">

            <case pos:start="157:13" pos:end="157:33">case <expr pos:start="157:18" pos:end="157:32"><name pos:start="157:18" pos:end="157:32">DVB_SUBT_DESCID</name></expr>:</case>

                <if_stmt pos:start="159:17" pos:end="161:59"><if pos:start="159:17" pos:end="161:59">if <condition pos:start="159:20" pos:end="159:60">(<expr pos:start="159:21" pos:end="159:59"><name pos:start="159:21" pos:end="159:31">stream_type</name> <operator pos:start="159:33" pos:end="159:34">==</operator> <name pos:start="159:36" pos:end="159:59">STREAM_TYPE_PRIVATE_DATA</name></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:59"><block_content pos:start="161:21" pos:end="161:59">

                    <expr_stmt pos:start="161:21" pos:end="161:59"><expr pos:start="161:21" pos:end="161:58"><name pos:start="161:21" pos:end="161:31">stream_type</name> <operator pos:start="161:33" pos:end="161:33">=</operator> <name pos:start="161:35" pos:end="161:58">STREAM_TYPE_SUBTITLE_DVB</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="165:17" pos:end="165:49"><expr pos:start="165:17" pos:end="165:48"><name pos:start="165:17" pos:end="165:27"><name pos:start="165:17" pos:end="165:24">language</name><index pos:start="165:25" pos:end="165:27">[<expr pos:start="165:26" pos:end="165:26"><literal type="number" pos:start="165:26" pos:end="165:26">0</literal></expr>]</index></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <call pos:start="165:31" pos:end="165:48"><name pos:start="165:31" pos:end="165:34">get8</name><argument_list pos:start="165:35" pos:end="165:48">(<argument pos:start="165:36" pos:end="165:37"><expr pos:start="165:36" pos:end="165:37"><operator pos:start="165:36" pos:end="165:36">&amp;</operator><name pos:start="165:37" pos:end="165:37">p</name></expr></argument>, <argument pos:start="165:40" pos:end="165:47"><expr pos:start="165:40" pos:end="165:47"><name pos:start="165:40" pos:end="165:47">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:49"><expr pos:start="167:17" pos:end="167:48"><name pos:start="167:17" pos:end="167:27"><name pos:start="167:17" pos:end="167:24">language</name><index pos:start="167:25" pos:end="167:27">[<expr pos:start="167:26" pos:end="167:26"><literal type="number" pos:start="167:26" pos:end="167:26">1</literal></expr>]</index></name> <operator pos:start="167:29" pos:end="167:29">=</operator> <call pos:start="167:31" pos:end="167:48"><name pos:start="167:31" pos:end="167:34">get8</name><argument_list pos:start="167:35" pos:end="167:48">(<argument pos:start="167:36" pos:end="167:37"><expr pos:start="167:36" pos:end="167:37"><operator pos:start="167:36" pos:end="167:36">&amp;</operator><name pos:start="167:37" pos:end="167:37">p</name></expr></argument>, <argument pos:start="167:40" pos:end="167:47"><expr pos:start="167:40" pos:end="167:47"><name pos:start="167:40" pos:end="167:47">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:49"><expr pos:start="169:17" pos:end="169:48"><name pos:start="169:17" pos:end="169:27"><name pos:start="169:17" pos:end="169:24">language</name><index pos:start="169:25" pos:end="169:27">[<expr pos:start="169:26" pos:end="169:26"><literal type="number" pos:start="169:26" pos:end="169:26">2</literal></expr>]</index></name> <operator pos:start="169:29" pos:end="169:29">=</operator> <call pos:start="169:31" pos:end="169:48"><name pos:start="169:31" pos:end="169:34">get8</name><argument_list pos:start="169:35" pos:end="169:48">(<argument pos:start="169:36" pos:end="169:37"><expr pos:start="169:36" pos:end="169:37"><operator pos:start="169:36" pos:end="169:36">&amp;</operator><name pos:start="169:37" pos:end="169:37">p</name></expr></argument>, <argument pos:start="169:40" pos:end="169:47"><expr pos:start="169:40" pos:end="169:47"><name pos:start="169:40" pos:end="169:47">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:32"><expr pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:27"><name pos:start="171:17" pos:end="171:24">language</name><index pos:start="171:25" pos:end="171:27">[<expr pos:start="171:26" pos:end="171:26"><literal type="number" pos:start="171:26" pos:end="171:26">3</literal></expr>]</index></name> <operator pos:start="171:29" pos:end="171:29">=</operator> <literal type="number" pos:start="171:31" pos:end="171:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:35"><expr pos:start="173:17" pos:end="173:34"><call pos:start="173:17" pos:end="173:34"><name pos:start="173:17" pos:end="173:20">get8</name><argument_list pos:start="173:21" pos:end="173:34">(<argument pos:start="173:22" pos:end="173:23"><expr pos:start="173:22" pos:end="173:23"><operator pos:start="173:22" pos:end="173:22">&amp;</operator><name pos:start="173:23" pos:end="173:23">p</name></expr></argument>, <argument pos:start="173:26" pos:end="173:33"><expr pos:start="173:26" pos:end="173:33"><name pos:start="173:26" pos:end="173:33">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:48"><expr pos:start="175:17" pos:end="175:47"><name pos:start="175:17" pos:end="175:25">comp_page</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <call pos:start="175:29" pos:end="175:47"><name pos:start="175:29" pos:end="175:33">get16</name><argument_list pos:start="175:34" pos:end="175:47">(<argument pos:start="175:35" pos:end="175:36"><expr pos:start="175:35" pos:end="175:36"><operator pos:start="175:35" pos:end="175:35">&amp;</operator><name pos:start="175:36" pos:end="175:36">p</name></expr></argument>, <argument pos:start="175:39" pos:end="175:46"><expr pos:start="175:39" pos:end="175:46"><name pos:start="175:39" pos:end="175:46">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:47"><expr pos:start="177:17" pos:end="177:46"><name pos:start="177:17" pos:end="177:24">anc_page</name> <operator pos:start="177:26" pos:end="177:26">=</operator> <call pos:start="177:28" pos:end="177:46"><name pos:start="177:28" pos:end="177:32">get16</name><argument_list pos:start="177:33" pos:end="177:46">(<argument pos:start="177:34" pos:end="177:35"><expr pos:start="177:34" pos:end="177:35"><operator pos:start="177:34" pos:end="177:34">&amp;</operator><name pos:start="177:35" pos:end="177:35">p</name></expr></argument>, <argument pos:start="177:38" pos:end="177:45"><expr pos:start="177:38" pos:end="177:45"><name pos:start="177:38" pos:end="177:45">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <break pos:start="181:17" pos:end="181:22">break;</break>

            <case pos:start="183:13" pos:end="183:22">case <expr pos:start="183:18" pos:end="183:21"><literal type="number" pos:start="183:18" pos:end="183:21">0x0a</literal></expr>:</case> <comment type="block" pos:start="183:24" pos:end="183:56">/* ISO 639 language descriptor */</comment>

                <expr_stmt pos:start="185:17" pos:end="185:49"><expr pos:start="185:17" pos:end="185:48"><name pos:start="185:17" pos:end="185:27"><name pos:start="185:17" pos:end="185:24">language</name><index pos:start="185:25" pos:end="185:27">[<expr pos:start="185:26" pos:end="185:26"><literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr>]</index></name> <operator pos:start="185:29" pos:end="185:29">=</operator> <call pos:start="185:31" pos:end="185:48"><name pos:start="185:31" pos:end="185:34">get8</name><argument_list pos:start="185:35" pos:end="185:48">(<argument pos:start="185:36" pos:end="185:37"><expr pos:start="185:36" pos:end="185:37"><operator pos:start="185:36" pos:end="185:36">&amp;</operator><name pos:start="185:37" pos:end="185:37">p</name></expr></argument>, <argument pos:start="185:40" pos:end="185:47"><expr pos:start="185:40" pos:end="185:47"><name pos:start="185:40" pos:end="185:47">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:49"><expr pos:start="187:17" pos:end="187:48"><name pos:start="187:17" pos:end="187:27"><name pos:start="187:17" pos:end="187:24">language</name><index pos:start="187:25" pos:end="187:27">[<expr pos:start="187:26" pos:end="187:26"><literal type="number" pos:start="187:26" pos:end="187:26">1</literal></expr>]</index></name> <operator pos:start="187:29" pos:end="187:29">=</operator> <call pos:start="187:31" pos:end="187:48"><name pos:start="187:31" pos:end="187:34">get8</name><argument_list pos:start="187:35" pos:end="187:48">(<argument pos:start="187:36" pos:end="187:37"><expr pos:start="187:36" pos:end="187:37"><operator pos:start="187:36" pos:end="187:36">&amp;</operator><name pos:start="187:37" pos:end="187:37">p</name></expr></argument>, <argument pos:start="187:40" pos:end="187:47"><expr pos:start="187:40" pos:end="187:47"><name pos:start="187:40" pos:end="187:47">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:49"><expr pos:start="189:17" pos:end="189:48"><name pos:start="189:17" pos:end="189:27"><name pos:start="189:17" pos:end="189:24">language</name><index pos:start="189:25" pos:end="189:27">[<expr pos:start="189:26" pos:end="189:26"><literal type="number" pos:start="189:26" pos:end="189:26">2</literal></expr>]</index></name> <operator pos:start="189:29" pos:end="189:29">=</operator> <call pos:start="189:31" pos:end="189:48"><name pos:start="189:31" pos:end="189:34">get8</name><argument_list pos:start="189:35" pos:end="189:48">(<argument pos:start="189:36" pos:end="189:37"><expr pos:start="189:36" pos:end="189:37"><operator pos:start="189:36" pos:end="189:36">&amp;</operator><name pos:start="189:37" pos:end="189:37">p</name></expr></argument>, <argument pos:start="189:40" pos:end="189:47"><expr pos:start="189:40" pos:end="189:47"><name pos:start="189:40" pos:end="189:47">desc_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:32"><expr pos:start="191:17" pos:end="191:31"><name pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:24">language</name><index pos:start="191:25" pos:end="191:27">[<expr pos:start="191:26" pos:end="191:26"><literal type="number" pos:start="191:26" pos:end="191:26">3</literal></expr>]</index></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <literal type="number" pos:start="191:31" pos:end="191:31">0</literal></expr>;</expr_stmt>

                <break pos:start="193:17" pos:end="193:22">break;</break>

            <default pos:start="195:13" pos:end="195:20">default:</default>

                <break pos:start="197:17" pos:end="197:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="201:13" pos:end="201:25"><expr pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:13">p</name> <operator pos:start="201:15" pos:end="201:15">=</operator> <name pos:start="201:17" pos:end="201:24">desc_end</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="205:9" pos:end="210:0"><expr pos:start="205:9" pos:end="205:25"><name pos:start="205:9" pos:end="205:9">p</name> <operator pos:start="205:11" pos:end="205:11">=</operator> <name pos:start="205:13" pos:end="205:25">desc_list_end</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="209:1" pos:end="209:15">#<cpp:directive pos:start="209:2" pos:end="209:6">ifdef</cpp:directive> <name pos:start="209:8" pos:end="209:15">DEBUG_SI</name></cpp:ifdef>

        <expr_stmt pos:start="211:9" pos:end="216:0"><expr pos:start="211:9" pos:end="213:32"><call pos:start="211:9" pos:end="213:32"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="213:32">(<argument pos:start="211:16" pos:end="211:25"><expr pos:start="211:16" pos:end="211:25"><name pos:start="211:16" pos:end="211:25"><name pos:start="211:16" pos:end="211:17">ts</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:25">stream</name></name></expr></argument>, <argument pos:start="211:28" pos:end="211:39"><expr pos:start="211:28" pos:end="211:39"><name pos:start="211:28" pos:end="211:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="211:42" pos:end="211:68"><expr pos:start="211:42" pos:end="211:68"><literal type="string" pos:start="211:42" pos:end="211:68">"stream_type=%d pid=0x%x\n"</literal></expr></argument>,

               <argument pos:start="213:16" pos:end="213:26"><expr pos:start="213:16" pos:end="213:26"><name pos:start="213:16" pos:end="213:26">stream_type</name></expr></argument>, <argument pos:start="213:29" pos:end="213:31"><expr pos:start="213:29" pos:end="213:31"><name pos:start="213:29" pos:end="213:31">pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="215:1" pos:end="215:6">#<cpp:directive pos:start="215:2" pos:end="215:6">endif</cpp:directive></cpp:endif>



        <comment type="block" pos:start="219:9" pos:end="219:38">/* now create ffmpeg stream */</comment>

        <switch pos:start="221:9" pos:end="277:9">switch<condition pos:start="221:15" pos:end="221:27">(<expr pos:start="221:16" pos:end="221:26"><name pos:start="221:16" pos:end="221:26">stream_type</name></expr>)</condition> <block pos:start="221:29" pos:end="277:9">{<block_content pos:start="223:9" pos:end="275:18">

        <case pos:start="223:9" pos:end="223:37">case <expr pos:start="223:14" pos:end="223:36"><name pos:start="223:14" pos:end="223:36">STREAM_TYPE_AUDIO_MPEG1</name></expr>:</case>

        <case pos:start="225:9" pos:end="225:37">case <expr pos:start="225:14" pos:end="225:36"><name pos:start="225:14" pos:end="225:36">STREAM_TYPE_AUDIO_MPEG2</name></expr>:</case>

        <case pos:start="227:9" pos:end="227:37">case <expr pos:start="227:14" pos:end="227:36"><name pos:start="227:14" pos:end="227:36">STREAM_TYPE_VIDEO_MPEG1</name></expr>:</case>

        <case pos:start="229:9" pos:end="229:37">case <expr pos:start="229:14" pos:end="229:36"><name pos:start="229:14" pos:end="229:36">STREAM_TYPE_VIDEO_MPEG2</name></expr>:</case>

        <case pos:start="231:9" pos:end="231:37">case <expr pos:start="231:14" pos:end="231:36"><name pos:start="231:14" pos:end="231:36">STREAM_TYPE_VIDEO_MPEG4</name></expr>:</case>

        <case pos:start="233:9" pos:end="233:36">case <expr pos:start="233:14" pos:end="233:35"><name pos:start="233:14" pos:end="233:35">STREAM_TYPE_VIDEO_H264</name></expr>:</case>

        <case pos:start="235:9" pos:end="235:35">case <expr pos:start="235:14" pos:end="235:34"><name pos:start="235:14" pos:end="235:34">STREAM_TYPE_VIDEO_VC1</name></expr>:</case>

        <case pos:start="237:9" pos:end="237:35">case <expr pos:start="237:14" pos:end="237:34"><name pos:start="237:14" pos:end="237:34">STREAM_TYPE_AUDIO_AAC</name></expr>:</case>

        <case pos:start="239:9" pos:end="239:35">case <expr pos:start="239:14" pos:end="239:34"><name pos:start="239:14" pos:end="239:34">STREAM_TYPE_AUDIO_AC3</name></expr>:</case>

        <case pos:start="241:9" pos:end="241:35">case <expr pos:start="241:14" pos:end="241:34"><name pos:start="241:14" pos:end="241:34">STREAM_TYPE_AUDIO_DTS</name></expr>:</case>

        <case pos:start="243:9" pos:end="243:38">case <expr pos:start="243:14" pos:end="243:37"><name pos:start="243:14" pos:end="243:37">STREAM_TYPE_SUBTITLE_DVB</name></expr>:</case>

            <if_stmt pos:start="245:13" pos:end="261:13"><if pos:start="245:13" pos:end="253:13">if<condition pos:start="245:15" pos:end="245:29">(<expr pos:start="245:16" pos:end="245:28"><name pos:start="245:16" pos:end="245:28"><name pos:start="245:16" pos:end="245:17">ts</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:23">pids</name><index pos:start="245:24" pos:end="245:28">[<expr pos:start="245:25" pos:end="245:27"><name pos:start="245:25" pos:end="245:27">pid</name></expr>]</index></name></expr>)</condition><block pos:start="245:30" pos:end="253:13">{<block_content pos:start="247:17" pos:end="251:28">

                <expr_stmt pos:start="247:17" pos:end="247:58"><expr pos:start="247:17" pos:end="247:57"><call pos:start="247:17" pos:end="247:57"><name pos:start="247:17" pos:end="247:22">assert</name><argument_list pos:start="247:23" pos:end="247:57">(<argument pos:start="247:24" pos:end="247:56"><expr pos:start="247:24" pos:end="247:56"><name pos:start="247:24" pos:end="247:36"><name pos:start="247:24" pos:end="247:25">ts</name><operator pos:start="247:26" pos:end="247:27">-&gt;</operator><name pos:start="247:28" pos:end="247:31">pids</name><index pos:start="247:32" pos:end="247:36">[<expr pos:start="247:33" pos:end="247:35"><name pos:start="247:33" pos:end="247:35">pid</name></expr>]</index></name><operator pos:start="247:37" pos:end="247:38">-&gt;</operator><name pos:start="247:39" pos:end="247:42">type</name> <operator pos:start="247:44" pos:end="247:45">==</operator> <name pos:start="247:47" pos:end="247:56">MPEGTS_PES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:56"><expr pos:start="249:17" pos:end="249:55"><name pos:start="249:17" pos:end="249:19">pes</name><operator pos:start="249:20" pos:end="249:20">=</operator> <name pos:start="249:22" pos:end="249:34"><name pos:start="249:22" pos:end="249:23">ts</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:29">pids</name><index pos:start="249:30" pos:end="249:34">[<expr pos:start="249:31" pos:end="249:33"><name pos:start="249:31" pos:end="249:33">pid</name></expr>]</index></name><operator pos:start="249:35" pos:end="249:36">-&gt;</operator><name pos:start="249:37" pos:end="249:55"><name pos:start="249:37" pos:end="249:37">u</name><operator pos:start="249:38" pos:end="249:38">.</operator><name pos:start="249:39" pos:end="249:48">pes_filter</name><operator pos:start="249:49" pos:end="249:49">.</operator><name pos:start="249:50" pos:end="249:55">opaque</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:28"><expr pos:start="251:17" pos:end="251:27"><name pos:start="251:17" pos:end="251:18">st</name><operator pos:start="251:19" pos:end="251:19">=</operator> <name pos:start="251:21" pos:end="251:27"><name pos:start="251:21" pos:end="251:23">pes</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:27">st</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="253:14" pos:end="261:13">else<block pos:start="253:18" pos:end="261:13">{<block_content pos:start="255:17" pos:end="259:51">

                <expr_stmt pos:start="255:17" pos:end="255:68"><expr pos:start="255:17" pos:end="255:67"><name pos:start="255:17" pos:end="255:19">pes</name> <operator pos:start="255:21" pos:end="255:21">=</operator> <call pos:start="255:23" pos:end="255:67"><name pos:start="255:23" pos:end="255:36">add_pes_stream</name><argument_list pos:start="255:37" pos:end="255:67">(<argument pos:start="255:38" pos:end="255:39"><expr pos:start="255:38" pos:end="255:39"><name pos:start="255:38" pos:end="255:39">ts</name></expr></argument>, <argument pos:start="255:42" pos:end="255:44"><expr pos:start="255:42" pos:end="255:44"><name pos:start="255:42" pos:end="255:44">pid</name></expr></argument>, <argument pos:start="255:47" pos:end="255:53"><expr pos:start="255:47" pos:end="255:53"><name pos:start="255:47" pos:end="255:53">pcr_pid</name></expr></argument>, <argument pos:start="255:56" pos:end="255:66"><expr pos:start="255:56" pos:end="255:66"><name pos:start="255:56" pos:end="255:66">stream_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="257:17" pos:end="259:51"><if pos:start="257:17" pos:end="259:51">if <condition pos:start="257:20" pos:end="257:24">(<expr pos:start="257:21" pos:end="257:23"><name pos:start="257:21" pos:end="257:23">pes</name></expr>)</condition><block type="pseudo" pos:start="259:21" pos:end="259:51"><block_content pos:start="259:21" pos:end="259:51">

                    <expr_stmt pos:start="259:21" pos:end="259:51"><expr pos:start="259:21" pos:end="259:50"><name pos:start="259:21" pos:end="259:22">st</name> <operator pos:start="259:24" pos:end="259:24">=</operator> <call pos:start="259:26" pos:end="259:50"><name pos:start="259:26" pos:end="259:42">new_pes_av_stream</name><argument_list pos:start="259:43" pos:end="259:50">(<argument pos:start="259:44" pos:end="259:46"><expr pos:start="259:44" pos:end="259:46"><name pos:start="259:44" pos:end="259:46">pes</name></expr></argument>, <argument pos:start="259:49" pos:end="259:49"><expr pos:start="259:49" pos:end="259:49"><literal type="number" pos:start="259:49" pos:end="259:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:43"><expr pos:start="263:13" pos:end="263:42"><call pos:start="263:13" pos:end="263:42"><name pos:start="263:13" pos:end="263:26">add_pid_to_pmt</name><argument_list pos:start="263:27" pos:end="263:42">(<argument pos:start="263:28" pos:end="263:29"><expr pos:start="263:28" pos:end="263:29"><name pos:start="263:28" pos:end="263:29">ts</name></expr></argument>, <argument pos:start="263:32" pos:end="263:36"><expr pos:start="263:32" pos:end="263:36"><name pos:start="263:32" pos:end="263:36"><name pos:start="263:32" pos:end="263:32">h</name><operator pos:start="263:33" pos:end="263:34">-&gt;</operator><name pos:start="263:35" pos:end="263:36">id</name></name></expr></argument>, <argument pos:start="263:39" pos:end="263:41"><expr pos:start="263:39" pos:end="263:41"><name pos:start="263:39" pos:end="263:41">pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="265:13" pos:end="267:74"><if pos:start="265:13" pos:end="267:74">if<condition pos:start="265:15" pos:end="265:18">(<expr pos:start="265:16" pos:end="265:17"><name pos:start="265:16" pos:end="265:17">st</name></expr>)</condition><block type="pseudo" pos:start="267:17" pos:end="267:74"><block_content pos:start="267:17" pos:end="267:74">

                <expr_stmt pos:start="267:17" pos:end="267:74"><expr pos:start="267:17" pos:end="267:73"><call pos:start="267:17" pos:end="267:73"><name pos:start="267:17" pos:end="267:43">av_program_add_stream_index</name><argument_list pos:start="267:44" pos:end="267:73">(<argument pos:start="267:45" pos:end="267:54"><expr pos:start="267:45" pos:end="267:54"><name pos:start="267:45" pos:end="267:54"><name pos:start="267:45" pos:end="267:46">ts</name><operator pos:start="267:47" pos:end="267:48">-&gt;</operator><name pos:start="267:49" pos:end="267:54">stream</name></name></expr></argument>, <argument pos:start="267:57" pos:end="267:61"><expr pos:start="267:57" pos:end="267:61"><name pos:start="267:57" pos:end="267:61"><name pos:start="267:57" pos:end="267:57">h</name><operator pos:start="267:58" pos:end="267:59">-&gt;</operator><name pos:start="267:60" pos:end="267:61">id</name></name></expr></argument>, <argument pos:start="267:64" pos:end="267:72"><expr pos:start="267:64" pos:end="267:72"><name pos:start="267:64" pos:end="267:72"><name pos:start="267:64" pos:end="267:65">st</name><operator pos:start="267:66" pos:end="267:67">-&gt;</operator><name pos:start="267:68" pos:end="267:72">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="269:13" pos:end="269:18">break;</break>

        <default pos:start="271:9" pos:end="271:16">default:</default>

            <comment type="block" pos:start="273:13" pos:end="273:45">/* we ignore the other streams */</comment>

            <break pos:start="275:13" pos:end="275:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="281:9" pos:end="297:9"><if pos:start="281:9" pos:end="297:9">if <condition pos:start="281:12" pos:end="281:15">(<expr pos:start="281:13" pos:end="281:14"><name pos:start="281:13" pos:end="281:14">st</name></expr>)</condition> <block pos:start="281:17" pos:end="297:9">{<block_content pos:start="283:13" pos:end="295:13">

            <if_stmt pos:start="283:13" pos:end="287:13"><if pos:start="283:13" pos:end="287:13">if <condition pos:start="283:16" pos:end="283:33">(<expr pos:start="283:17" pos:end="283:32"><name pos:start="283:17" pos:end="283:27"><name pos:start="283:17" pos:end="283:24">language</name><index pos:start="283:25" pos:end="283:27">[<expr pos:start="283:26" pos:end="283:26"><literal type="number" pos:start="283:26" pos:end="283:26">0</literal></expr>]</index></name> <operator pos:start="283:29" pos:end="283:30">!=</operator> <literal type="number" pos:start="283:32" pos:end="283:32">0</literal></expr>)</condition> <block pos:start="283:35" pos:end="287:13">{<block_content pos:start="285:17" pos:end="285:50">

                <expr_stmt pos:start="285:17" pos:end="285:50"><expr pos:start="285:17" pos:end="285:49"><call pos:start="285:17" pos:end="285:49"><name pos:start="285:17" pos:end="285:22">memcpy</name><argument_list pos:start="285:23" pos:end="285:49">(<argument pos:start="285:24" pos:end="285:35"><expr pos:start="285:24" pos:end="285:35"><name pos:start="285:24" pos:end="285:35"><name pos:start="285:24" pos:end="285:25">st</name><operator pos:start="285:26" pos:end="285:27">-&gt;</operator><name pos:start="285:28" pos:end="285:35">language</name></name></expr></argument>, <argument pos:start="285:38" pos:end="285:45"><expr pos:start="285:38" pos:end="285:45"><name pos:start="285:38" pos:end="285:45">language</name></expr></argument>, <argument pos:start="285:48" pos:end="285:48"><expr pos:start="285:48" pos:end="285:48"><literal type="number" pos:start="285:48" pos:end="285:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="291:13" pos:end="295:13"><if pos:start="291:13" pos:end="295:13">if <condition pos:start="291:16" pos:end="291:56">(<expr pos:start="291:17" pos:end="291:55"><name pos:start="291:17" pos:end="291:27">stream_type</name> <operator pos:start="291:29" pos:end="291:30">==</operator> <name pos:start="291:32" pos:end="291:55">STREAM_TYPE_SUBTITLE_DVB</name></expr>)</condition> <block pos:start="291:58" pos:end="295:13">{<block_content pos:start="293:17" pos:end="293:65">

                <expr_stmt pos:start="293:17" pos:end="293:65"><expr pos:start="293:17" pos:end="293:64"><name pos:start="293:17" pos:end="293:33"><name pos:start="293:17" pos:end="293:18">st</name><operator pos:start="293:19" pos:end="293:20">-&gt;</operator><name pos:start="293:21" pos:end="293:25">codec</name><operator pos:start="293:26" pos:end="293:27">-&gt;</operator><name pos:start="293:28" pos:end="293:33">sub_id</name></name> <operator pos:start="293:35" pos:end="293:35">=</operator> <operator pos:start="293:37" pos:end="293:37">(</operator><name pos:start="293:38" pos:end="293:45">anc_page</name> <operator pos:start="293:47" pos:end="293:48">&lt;&lt;</operator> <literal type="number" pos:start="293:50" pos:end="293:51">16</literal><operator pos:start="293:52" pos:end="293:52">)</operator> <operator pos:start="293:54" pos:end="293:54">|</operator> <name pos:start="293:56" pos:end="293:64">comp_page</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="301:5" pos:end="301:34">/* all parameters are there */</comment>

    <expr_stmt pos:start="303:5" pos:end="303:21"><expr pos:start="303:5" pos:end="303:20"><name pos:start="303:5" pos:end="303:18"><name pos:start="303:5" pos:end="303:6">ts</name><operator pos:start="303:7" pos:end="303:8">-&gt;</operator><name pos:start="303:9" pos:end="303:18">stop_parse</name></name><operator pos:start="303:19" pos:end="303:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:36"><expr pos:start="305:5" pos:end="305:35"><call pos:start="305:5" pos:end="305:35"><name pos:start="305:5" pos:end="305:23">mpegts_close_filter</name><argument_list pos:start="305:24" pos:end="305:35">(<argument pos:start="305:25" pos:end="305:26"><expr pos:start="305:25" pos:end="305:26"><name pos:start="305:25" pos:end="305:26">ts</name></expr></argument>, <argument pos:start="305:29" pos:end="305:34"><expr pos:start="305:29" pos:end="305:34"><name pos:start="305:29" pos:end="305:34">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
