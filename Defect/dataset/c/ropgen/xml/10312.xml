<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10312.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">pcie_port_init_reg</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">PCIDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:43">

    <comment type="block" pos:start="5:5" pos:end="7:70">/* Unlike pci bridge,

       66MHz and fast back to back don't apply to pci express port. */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:44"><expr pos:start="9:5" pos:end="9:43"><call pos:start="9:5" pos:end="9:43"><name pos:start="9:5" pos:end="9:16">pci_set_word</name><argument_list pos:start="9:17" pos:end="9:43">(<argument pos:start="9:18" pos:end="9:39"><expr pos:start="9:18" pos:end="9:39"><name pos:start="9:18" pos:end="9:26"><name pos:start="9:18" pos:end="9:18">d</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:26">config</name></name> <operator pos:start="9:28" pos:end="9:28">+</operator> <name pos:start="9:30" pos:end="9:39">PCI_STATUS</name></expr></argument>, <argument pos:start="9:42" pos:end="9:42"><expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="18:0"><expr pos:start="11:5" pos:end="11:47"><call pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:16">pci_set_word</name><argument_list pos:start="11:17" pos:end="11:47">(<argument pos:start="11:18" pos:end="11:43"><expr pos:start="11:18" pos:end="11:43"><name pos:start="11:18" pos:end="11:26"><name pos:start="11:18" pos:end="11:18">d</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:26">config</name></name> <operator pos:start="11:28" pos:end="11:28">+</operator> <name pos:start="11:30" pos:end="11:43">PCI_SEC_STATUS</name></expr></argument>, <argument pos:start="11:46" pos:end="11:46"><expr pos:start="11:46" pos:end="11:46"><literal type="number" pos:start="11:46" pos:end="11:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:71">/* Unlike conventional pci bridge, some bits are hardwired to 0. */</comment>

<cpp:define pos:start="17:1" pos:end="17:44">#<cpp:directive pos:start="17:2" pos:end="17:7">define</cpp:directive>  <cpp:macro pos:start="17:10" pos:end="17:33"><name pos:start="17:10" pos:end="17:33">PCI_BRIDGE_CTL_VGA_16BIT</name></cpp:macro>       <cpp:value pos:start="17:41" pos:end="17:44">0x10</cpp:value></cpp:define>    <comment type="block" pos:start="17:49" pos:end="17:71">/* VGA 16-bit decode */</comment>

    <expr_stmt pos:start="19:5" pos:end="31:43"><expr pos:start="19:5" pos:end="31:42"><call pos:start="19:5" pos:end="31:42"><name pos:start="19:5" pos:end="19:16">pci_set_word</name><argument_list pos:start="19:17" pos:end="31:42">(<argument pos:start="19:18" pos:end="19:46"><expr pos:start="19:18" pos:end="19:46"><name pos:start="19:18" pos:end="19:25"><name pos:start="19:18" pos:end="19:18">d</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:25">wmask</name></name> <operator pos:start="19:27" pos:end="19:27">+</operator> <name pos:start="19:29" pos:end="19:46">PCI_BRIDGE_CONTROL</name></expr></argument>,

                 <argument pos:start="21:18" pos:end="31:41"><expr pos:start="21:18" pos:end="31:41"><name pos:start="21:18" pos:end="21:38">PCI_BRIDGE_CTL_PARITY</name> <operator pos:start="21:40" pos:end="21:40">|</operator>

                 <name pos:start="23:18" pos:end="23:35">PCI_BRIDGE_CTL_ISA</name> <operator pos:start="23:37" pos:end="23:37">|</operator>

                 <name pos:start="25:18" pos:end="25:35">PCI_BRIDGE_CTL_VGA</name> <operator pos:start="25:37" pos:end="25:37">|</operator>

                 <name pos:start="27:18" pos:end="27:41">PCI_BRIDGE_CTL_VGA_16BIT</name> <operator pos:start="27:43" pos:end="27:43">|</operator> <comment type="block" pos:start="27:45" pos:end="27:79">/* Req, but no alias support yet */</comment>

                 <name pos:start="29:18" pos:end="29:36">PCI_BRIDGE_CTL_SERR</name> <operator pos:start="29:38" pos:end="29:38">|</operator>

                 <name pos:start="31:18" pos:end="31:41">PCI_BRIDGE_CTL_BUS_RESET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
