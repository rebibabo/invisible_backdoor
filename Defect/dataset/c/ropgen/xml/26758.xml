<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26758.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:48">mpeg_decode_picture_coding_extension</name><parameter_list pos:start="1:49" pos:end="1:66">(<parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:61">Mpeg1Context</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:70">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name><init pos:start="5:22" pos:end="5:40">= <expr pos:start="5:24" pos:end="5:40"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:26">s1</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:40">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:15">full_pel</name><index pos:start="9:16" pos:end="9:18">[<expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr>]</index></name> <operator pos:start="9:20" pos:end="9:20">=</operator> <name pos:start="9:22" pos:end="9:35"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:32">full_pel</name><index pos:start="9:33" pos:end="9:35">[<expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">1</literal></expr>]</index></name> <operator pos:start="9:37" pos:end="9:37">=</operator> <literal type="number" pos:start="9:39" pos:end="9:39">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:47"><expr pos:start="11:5" pos:end="11:46"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:18">mpeg_f_code</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>]</index><index pos:start="11:22" pos:end="11:24">[<expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr>]</index></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <call pos:start="11:28" pos:end="11:46"><name pos:start="11:28" pos:end="11:35">get_bits</name><argument_list pos:start="11:36" pos:end="11:46">(<argument pos:start="11:37" pos:end="11:42"><expr pos:start="11:37" pos:end="11:42"><operator pos:start="11:37" pos:end="11:37">&amp;</operator><name pos:start="11:38" pos:end="11:42"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:42">gb</name></name></expr></argument>, <argument pos:start="11:45" pos:end="11:45"><expr pos:start="11:45" pos:end="11:45"><literal type="number" pos:start="11:45" pos:end="11:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:18">mpeg_f_code</name><index pos:start="13:19" pos:end="13:21">[<expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr>]</index><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr>]</index></name> <operator pos:start="13:26" pos:end="13:26">=</operator> <call pos:start="13:28" pos:end="13:46"><name pos:start="13:28" pos:end="13:35">get_bits</name><argument_list pos:start="13:36" pos:end="13:46">(<argument pos:start="13:37" pos:end="13:42"><expr pos:start="13:37" pos:end="13:42"><operator pos:start="13:37" pos:end="13:37">&amp;</operator><name pos:start="13:38" pos:end="13:42"><name pos:start="13:38" pos:end="13:38">s</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:42">gb</name></name></expr></argument>, <argument pos:start="13:45" pos:end="13:45"><expr pos:start="13:45" pos:end="13:45"><literal type="number" pos:start="13:45" pos:end="13:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:18">mpeg_f_code</name><index pos:start="15:19" pos:end="15:21">[<expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr>]</index><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>]</index></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <call pos:start="15:28" pos:end="15:46"><name pos:start="15:28" pos:end="15:35">get_bits</name><argument_list pos:start="15:36" pos:end="15:46">(<argument pos:start="15:37" pos:end="15:42"><expr pos:start="15:37" pos:end="15:42"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:42"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:42">gb</name></name></expr></argument>, <argument pos:start="15:45" pos:end="15:45"><expr pos:start="15:45" pos:end="15:45"><literal type="number" pos:start="15:45" pos:end="15:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">mpeg_f_code</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">1</literal></expr>]</index><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>]</index></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <call pos:start="17:28" pos:end="17:46"><name pos:start="17:28" pos:end="17:35">get_bits</name><argument_list pos:start="17:36" pos:end="17:46">(<argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:42"><name pos:start="17:38" pos:end="17:38">s</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:42">gb</name></name></expr></argument>, <argument pos:start="17:45" pos:end="17:45"><expr pos:start="17:45" pos:end="17:45"><literal type="number" pos:start="17:45" pos:end="17:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="41:5"><if pos:start="19:5" pos:end="41:5">if<condition pos:start="19:7" pos:end="19:51">(<expr pos:start="19:8" pos:end="19:50"><operator pos:start="19:8" pos:end="19:8">!</operator><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">pict_type</name></name> <operator pos:start="19:22" pos:end="19:23">&amp;&amp;</operator> <name pos:start="19:25" pos:end="19:50"><name pos:start="19:25" pos:end="19:26">s1</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:50">mpeg_enc_ctx_allocated</name></name></expr>)</condition><block pos:start="19:52" pos:end="41:5">{<block_content pos:start="21:9" pos:end="39:64">

        <expr_stmt pos:start="21:9" pos:end="21:96"><expr pos:start="21:9" pos:end="21:95"><call pos:start="21:9" pos:end="21:95"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:95">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">avctx</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:40" pos:end="21:94"><expr pos:start="21:40" pos:end="21:94"><literal type="string" pos:start="21:40" pos:end="21:94">"Missing picture start code, guessing missing values\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="35:36"><if pos:start="23:9" pos:end="33:9">if<condition pos:start="23:11" pos:end="23:66">(<expr pos:start="23:12" pos:end="23:65"><name pos:start="23:12" pos:end="23:31"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:25">mpeg_f_code</name><index pos:start="23:26" pos:end="23:28">[<expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">1</literal></expr>]</index><index pos:start="23:29" pos:end="23:31">[<expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr>]</index></name> <operator pos:start="23:33" pos:end="23:34">==</operator> <literal type="number" pos:start="23:36" pos:end="23:37">15</literal> <operator pos:start="23:39" pos:end="23:40">&amp;&amp;</operator> <name pos:start="23:42" pos:end="23:61"><name pos:start="23:42" pos:end="23:42">s</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:55">mpeg_f_code</name><index pos:start="23:56" pos:end="23:58">[<expr pos:start="23:57" pos:end="23:57"><literal type="number" pos:start="23:57" pos:end="23:57">1</literal></expr>]</index><index pos:start="23:59" pos:end="23:61">[<expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">1</literal></expr>]</index></name><operator pos:start="23:62" pos:end="23:63">==</operator><literal type="number" pos:start="23:64" pos:end="23:65">15</literal></expr>)</condition><block pos:start="23:67" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:40">

            <if_stmt pos:start="25:13" pos:end="31:40"><if pos:start="25:13" pos:end="27:40">if<condition pos:start="25:15" pos:end="25:72">(<expr pos:start="25:16" pos:end="25:71"><name pos:start="25:16" pos:end="25:35"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:29">mpeg_f_code</name><index pos:start="25:30" pos:end="25:32">[<expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr>]</index><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr>]</index></name> <operator pos:start="25:37" pos:end="25:38">==</operator> <literal type="number" pos:start="25:40" pos:end="25:41">15</literal> <operator pos:start="25:43" pos:end="25:44">&amp;&amp;</operator> <name pos:start="25:46" pos:end="25:65"><name pos:start="25:46" pos:end="25:46">s</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:59">mpeg_f_code</name><index pos:start="25:60" pos:end="25:62">[<expr pos:start="25:61" pos:end="25:61"><literal type="number" pos:start="25:61" pos:end="25:61">0</literal></expr>]</index><index pos:start="25:63" pos:end="25:65">[<expr pos:start="25:64" pos:end="25:64"><literal type="number" pos:start="25:64" pos:end="25:64">1</literal></expr>]</index></name> <operator pos:start="25:67" pos:end="25:68">==</operator> <literal type="number" pos:start="25:70" pos:end="25:71">15</literal></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:40"><block_content pos:start="27:17" pos:end="27:40">

                <expr_stmt pos:start="27:17" pos:end="27:40"><expr pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:28">pict_type</name></name><operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:39">FF_I_TYPE</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="29:13" pos:end="31:40">else<block type="pseudo" pos:start="31:17" pos:end="31:40"><block_content pos:start="31:17" pos:end="31:40">

                <expr_stmt pos:start="31:17" pos:end="31:40"><expr pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:28">pict_type</name></name><operator pos:start="31:29" pos:end="31:29">=</operator> <name pos:start="31:31" pos:end="31:39">FF_P_TYPE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if><else pos:start="33:10" pos:end="35:36">else<block type="pseudo" pos:start="35:13" pos:end="35:36"><block_content pos:start="35:13" pos:end="35:36">

            <expr_stmt pos:start="35:13" pos:end="35:36"><expr pos:start="35:13" pos:end="35:35"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:24">pict_type</name></name><operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:35">FF_B_TYPE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:26">current_picture</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:36">pict_type</name></name><operator pos:start="37:37" pos:end="37:37">=</operator> <name pos:start="37:39" pos:end="37:50"><name pos:start="37:39" pos:end="37:39">s</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:50">pict_type</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:26">current_picture</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:36">key_frame</name></name><operator pos:start="39:37" pos:end="39:37">=</operator> <name pos:start="39:39" pos:end="39:50"><name pos:start="39:39" pos:end="39:39">s</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:50">pict_type</name></name> <operator pos:start="39:52" pos:end="39:53">==</operator> <name pos:start="39:55" pos:end="39:63">FF_I_TYPE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:25">intra_dc_precision</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:47"><name pos:start="43:29" pos:end="43:36">get_bits</name><argument_list pos:start="43:37" pos:end="43:47">(<argument pos:start="43:38" pos:end="43:43"><expr pos:start="43:38" pos:end="43:43"><operator pos:start="43:38" pos:end="43:38">&amp;</operator><name pos:start="43:39" pos:end="43:43"><name pos:start="43:39" pos:end="43:39">s</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:43">gb</name></name></expr></argument>, <argument pos:start="43:46" pos:end="43:46"><expr pos:start="43:46" pos:end="43:46"><literal type="number" pos:start="43:46" pos:end="43:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:24">picture_structure</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <call pos:start="45:28" pos:end="45:46"><name pos:start="45:28" pos:end="45:35">get_bits</name><argument_list pos:start="45:36" pos:end="45:46">(<argument pos:start="45:37" pos:end="45:42"><expr pos:start="45:37" pos:end="45:42"><operator pos:start="45:37" pos:end="45:37">&amp;</operator><name pos:start="45:38" pos:end="45:42"><name pos:start="45:38" pos:end="45:38">s</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:42">gb</name></name></expr></argument>, <argument pos:start="45:45" pos:end="45:45"><expr pos:start="45:45" pos:end="45:45"><literal type="number" pos:start="45:45" pos:end="45:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:22">top_field_first</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:42"><name pos:start="47:26" pos:end="47:34">get_bits1</name><argument_list pos:start="47:35" pos:end="47:42">(<argument pos:start="47:36" pos:end="47:41"><expr pos:start="47:36" pos:end="47:41"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:41"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:27">frame_pred_frame_dct</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <call pos:start="49:31" pos:end="49:47"><name pos:start="49:31" pos:end="49:39">get_bits1</name><argument_list pos:start="49:40" pos:end="49:47">(<argument pos:start="49:41" pos:end="49:46"><expr pos:start="49:41" pos:end="49:46"><operator pos:start="49:41" pos:end="49:41">&amp;</operator><name pos:start="49:42" pos:end="49:46"><name pos:start="49:42" pos:end="49:42">s</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:54"><expr pos:start="51:5" pos:end="51:53"><name pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:33">concealment_motion_vectors</name></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <call pos:start="51:37" pos:end="51:53"><name pos:start="51:37" pos:end="51:45">get_bits1</name><argument_list pos:start="51:46" pos:end="51:53">(<argument pos:start="51:47" pos:end="51:52"><expr pos:start="51:47" pos:end="51:52"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:52"><name pos:start="51:48" pos:end="51:48">s</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:19">q_scale_type</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:39"><name pos:start="53:23" pos:end="53:31">get_bits1</name><argument_list pos:start="53:32" pos:end="53:39">(<argument pos:start="53:33" pos:end="53:38"><expr pos:start="53:33" pos:end="53:38"><operator pos:start="53:33" pos:end="53:33">&amp;</operator><name pos:start="53:34" pos:end="53:38"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:23">intra_vlc_format</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:43"><name pos:start="55:27" pos:end="55:35">get_bits1</name><argument_list pos:start="55:36" pos:end="55:43">(<argument pos:start="55:37" pos:end="55:42"><expr pos:start="55:37" pos:end="55:42"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:42"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:42"><expr pos:start="57:5" pos:end="57:41"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:21">alternate_scan</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <call pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:33">get_bits1</name><argument_list pos:start="57:34" pos:end="57:41">(<argument pos:start="57:35" pos:end="57:40"><expr pos:start="57:35" pos:end="57:40"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:40"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:40">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:46"><expr pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:25">repeat_first_field</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:45"><name pos:start="59:29" pos:end="59:37">get_bits1</name><argument_list pos:start="59:38" pos:end="59:45">(<argument pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><operator pos:start="59:39" pos:end="59:39">&amp;</operator><name pos:start="59:40" pos:end="59:44"><name pos:start="59:40" pos:end="59:40">s</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:22">chroma_420_type</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:42"><name pos:start="61:26" pos:end="61:34">get_bits1</name><argument_list pos:start="61:35" pos:end="61:42">(<argument pos:start="61:36" pos:end="61:41"><expr pos:start="61:36" pos:end="61:41"><operator pos:start="61:36" pos:end="61:36">&amp;</operator><name pos:start="61:37" pos:end="61:41"><name pos:start="61:37" pos:end="61:37">s</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:24">progressive_frame</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <call pos:start="63:28" pos:end="63:44"><name pos:start="63:28" pos:end="63:36">get_bits1</name><argument_list pos:start="63:37" pos:end="63:44">(<argument pos:start="63:38" pos:end="63:43"><expr pos:start="63:38" pos:end="63:43"><operator pos:start="63:38" pos:end="63:38">&amp;</operator><name pos:start="63:39" pos:end="63:43"><name pos:start="63:39" pos:end="63:39">s</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if<condition pos:start="67:7" pos:end="67:56">(<expr pos:start="67:8" pos:end="67:55"><name pos:start="67:8" pos:end="67:30"><name pos:start="67:8" pos:end="67:8">s</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:30">progressive_sequence</name></name> <operator pos:start="67:32" pos:end="67:33">&amp;&amp;</operator> <operator pos:start="67:35" pos:end="67:35">!</operator><name pos:start="67:36" pos:end="67:55"><name pos:start="67:36" pos:end="67:36">s</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:55">progressive_frame</name></name></expr>)</condition><block pos:start="67:57" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:95">

        <expr_stmt pos:start="69:9" pos:end="69:32"><expr pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:28">progressive_frame</name></name><operator pos:start="69:29" pos:end="69:29">=</operator> <literal type="number" pos:start="69:31" pos:end="69:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:95"><expr pos:start="71:9" pos:end="71:94"><call pos:start="71:9" pos:end="71:94"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:94">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:40" pos:end="71:93"><expr pos:start="71:40" pos:end="71:93"><literal type="string" pos:start="71:40" pos:end="71:93">"interlaced frame in progressive sequence, ignoring\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if<condition pos:start="77:7" pos:end="77:93">(<expr pos:start="77:8" pos:end="77:92"><name pos:start="77:8" pos:end="77:27"><name pos:start="77:8" pos:end="77:8">s</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:27">picture_structure</name></name><operator pos:start="77:28" pos:end="77:29">==</operator><literal type="number" pos:start="77:30" pos:end="77:30">0</literal> <operator pos:start="77:32" pos:end="77:33">||</operator> <operator pos:start="77:35" pos:end="77:35">(</operator><name pos:start="77:36" pos:end="77:55"><name pos:start="77:36" pos:end="77:36">s</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:55">progressive_frame</name></name> <operator pos:start="77:57" pos:end="77:58">&amp;&amp;</operator> <name pos:start="77:60" pos:end="77:79"><name pos:start="77:60" pos:end="77:60">s</name><operator pos:start="77:61" pos:end="77:62">-&gt;</operator><name pos:start="77:63" pos:end="77:79">picture_structure</name></name><operator pos:start="77:80" pos:end="77:81">!=</operator><name pos:start="77:82" pos:end="77:91">PICT_FRAME</name><operator pos:start="77:92" pos:end="77:92">)</operator></expr>)</condition><block pos:start="77:94" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:41">

        <expr_stmt pos:start="79:9" pos:end="79:105"><expr pos:start="79:9" pos:end="79:104"><call pos:start="79:9" pos:end="79:104"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:104">(<argument pos:start="79:16" pos:end="79:23"><expr pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:23">avctx</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:37"><expr pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:40" pos:end="79:81"><expr pos:start="79:40" pos:end="79:81"><literal type="string" pos:start="79:40" pos:end="79:81">"picture_structure %d invalid, ignoring\n"</literal></expr></argument>, <argument pos:start="79:84" pos:end="79:103"><expr pos:start="79:84" pos:end="79:103"><name pos:start="79:84" pos:end="79:103"><name pos:start="79:84" pos:end="79:84">s</name><operator pos:start="79:85" pos:end="79:86">-&gt;</operator><name pos:start="79:87" pos:end="79:103">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:28">picture_structure</name></name><operator pos:start="81:29" pos:end="81:29">=</operator> <name pos:start="81:31" pos:end="81:40">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if<condition pos:start="87:7" pos:end="87:56">(<expr pos:start="87:8" pos:end="87:55"><name pos:start="87:8" pos:end="87:27"><name pos:start="87:8" pos:end="87:8">s</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:27">progressive_frame</name></name> <operator pos:start="87:29" pos:end="87:30">&amp;&amp;</operator> <operator pos:start="87:32" pos:end="87:32">!</operator><name pos:start="87:33" pos:end="87:55"><name pos:start="87:33" pos:end="87:33">s</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:55">frame_pred_frame_dct</name></name></expr>)</condition><block pos:start="87:57" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:35">

        <expr_stmt pos:start="89:9" pos:end="89:73"><expr pos:start="89:9" pos:end="89:72"><call pos:start="89:9" pos:end="89:72"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:72">(<argument pos:start="89:16" pos:end="89:23"><expr pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:23">avctx</name></name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:40" pos:end="89:71"><expr pos:start="89:40" pos:end="89:71"><literal type="string" pos:start="89:40" pos:end="89:71">"invalid frame_pred_frame_dct\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:31">frame_pred_frame_dct</name></name><operator pos:start="91:32" pos:end="91:32">=</operator> <literal type="number" pos:start="91:34" pos:end="91:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="111:5"><if pos:start="97:5" pos:end="103:5">if<condition pos:start="97:7" pos:end="97:42">(<expr pos:start="97:8" pos:end="97:41"><name pos:start="97:8" pos:end="97:27"><name pos:start="97:8" pos:end="97:8">s</name><operator pos:start="97:9" pos:end="97:10">-&gt;</operator><name pos:start="97:11" pos:end="97:27">picture_structure</name></name> <operator pos:start="97:29" pos:end="97:30">==</operator> <name pos:start="97:32" pos:end="97:41">PICT_FRAME</name></expr>)</condition><block pos:start="97:43" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:39">

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:22">first_field</name></name><operator pos:start="99:23" pos:end="99:23">=</operator><literal type="number" pos:start="99:24" pos:end="99:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:21">v_edge_pos</name></name><operator pos:start="101:22" pos:end="101:22">=</operator> <literal type="number" pos:start="101:24" pos:end="101:25">16</literal><operator pos:start="101:26" pos:end="101:26">*</operator><name pos:start="101:27" pos:end="101:38"><name pos:start="101:27" pos:end="101:27">s</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:38">mb_height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="103:6" pos:end="111:5">else<block pos:start="103:10" pos:end="111:5">{<block_content pos:start="105:9" pos:end="109:62">

        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:22">first_field</name></name> <operator pos:start="105:24" pos:end="105:25">^=</operator> <literal type="number" pos:start="105:27" pos:end="105:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:39"><expr pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:21">v_edge_pos</name></name><operator pos:start="107:22" pos:end="107:22">=</operator>  <literal type="number" pos:start="107:25" pos:end="107:25">8</literal><operator pos:start="107:26" pos:end="107:26">*</operator><name pos:start="107:27" pos:end="107:38"><name pos:start="107:27" pos:end="107:27">s</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:38">mb_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:62"><expr pos:start="109:9" pos:end="109:61"><call pos:start="109:9" pos:end="109:61"><name pos:start="109:9" pos:end="109:14">memset</name><argument_list pos:start="109:15" pos:end="109:61">(<argument pos:start="109:16" pos:end="109:30"><expr pos:start="109:16" pos:end="109:30"><name pos:start="109:16" pos:end="109:30"><name pos:start="109:16" pos:end="109:16">s</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:30">mbskip_table</name></name></expr></argument>, <argument pos:start="109:33" pos:end="109:33"><expr pos:start="109:33" pos:end="109:33"><literal type="number" pos:start="109:33" pos:end="109:33">0</literal></expr></argument>, <argument pos:start="109:36" pos:end="109:60"><expr pos:start="109:36" pos:end="109:60"><name pos:start="109:36" pos:end="109:47"><name pos:start="109:36" pos:end="109:36">s</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:47">mb_stride</name></name><operator pos:start="109:48" pos:end="109:48">*</operator><name pos:start="109:49" pos:end="109:60"><name pos:start="109:49" pos:end="109:49">s</name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:60">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="115:5" pos:end="127:5"><if pos:start="115:5" pos:end="121:5">if<condition pos:start="115:7" pos:end="115:25">(<expr pos:start="115:8" pos:end="115:24"><name pos:start="115:8" pos:end="115:24"><name pos:start="115:8" pos:end="115:8">s</name><operator pos:start="115:9" pos:end="115:10">-&gt;</operator><name pos:start="115:11" pos:end="115:24">alternate_scan</name></name></expr>)</condition><block pos:start="115:26" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:102">

        <expr_stmt pos:start="117:9" pos:end="117:102"><expr pos:start="117:9" pos:end="117:101"><call pos:start="117:9" pos:end="117:101"><name pos:start="117:9" pos:end="117:25">ff_init_scantable</name><argument_list pos:start="117:26" pos:end="117:101">(<argument pos:start="117:27" pos:end="117:49"><expr pos:start="117:27" pos:end="117:49"><name pos:start="117:27" pos:end="117:49"><name pos:start="117:27" pos:end="117:27">s</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:32">dsp</name><operator pos:start="117:33" pos:end="117:33">.</operator><name pos:start="117:34" pos:end="117:49">idct_permutation</name></name></expr></argument>, <argument pos:start="117:52" pos:end="117:70"><expr pos:start="117:52" pos:end="117:70"><operator pos:start="117:52" pos:end="117:52">&amp;</operator><name pos:start="117:53" pos:end="117:70"><name pos:start="117:53" pos:end="117:53">s</name><operator pos:start="117:54" pos:end="117:55">-&gt;</operator><name pos:start="117:56" pos:end="117:70">inter_scantable</name></name></expr></argument>  , <argument pos:start="117:75" pos:end="117:100"><expr pos:start="117:75" pos:end="117:100"><name pos:start="117:75" pos:end="117:100">ff_alternate_vertical_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:102"><expr pos:start="119:9" pos:end="119:101"><call pos:start="119:9" pos:end="119:101"><name pos:start="119:9" pos:end="119:25">ff_init_scantable</name><argument_list pos:start="119:26" pos:end="119:101">(<argument pos:start="119:27" pos:end="119:49"><expr pos:start="119:27" pos:end="119:49"><name pos:start="119:27" pos:end="119:49"><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:32">dsp</name><operator pos:start="119:33" pos:end="119:33">.</operator><name pos:start="119:34" pos:end="119:49">idct_permutation</name></name></expr></argument>, <argument pos:start="119:52" pos:end="119:70"><expr pos:start="119:52" pos:end="119:70"><operator pos:start="119:52" pos:end="119:52">&amp;</operator><name pos:start="119:53" pos:end="119:70"><name pos:start="119:53" pos:end="119:53">s</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:70">intra_scantable</name></name></expr></argument>  , <argument pos:start="119:75" pos:end="119:100"><expr pos:start="119:75" pos:end="119:100"><name pos:start="119:75" pos:end="119:100">ff_alternate_vertical_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="121:6" pos:end="127:5">else<block pos:start="121:10" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:92">

        <expr_stmt pos:start="123:9" pos:end="123:92"><expr pos:start="123:9" pos:end="123:91"><call pos:start="123:9" pos:end="123:91"><name pos:start="123:9" pos:end="123:25">ff_init_scantable</name><argument_list pos:start="123:26" pos:end="123:91">(<argument pos:start="123:27" pos:end="123:49"><expr pos:start="123:27" pos:end="123:49"><name pos:start="123:27" pos:end="123:49"><name pos:start="123:27" pos:end="123:27">s</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:32">dsp</name><operator pos:start="123:33" pos:end="123:33">.</operator><name pos:start="123:34" pos:end="123:49">idct_permutation</name></name></expr></argument>, <argument pos:start="123:52" pos:end="123:70"><expr pos:start="123:52" pos:end="123:70"><operator pos:start="123:52" pos:end="123:52">&amp;</operator><name pos:start="123:53" pos:end="123:70"><name pos:start="123:53" pos:end="123:53">s</name><operator pos:start="123:54" pos:end="123:55">-&gt;</operator><name pos:start="123:56" pos:end="123:70">inter_scantable</name></name></expr></argument>  , <argument pos:start="123:75" pos:end="123:90"><expr pos:start="123:75" pos:end="123:90"><name pos:start="123:75" pos:end="123:90">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:92"><expr pos:start="125:9" pos:end="125:91"><call pos:start="125:9" pos:end="125:91"><name pos:start="125:9" pos:end="125:25">ff_init_scantable</name><argument_list pos:start="125:26" pos:end="125:91">(<argument pos:start="125:27" pos:end="125:49"><expr pos:start="125:27" pos:end="125:49"><name pos:start="125:27" pos:end="125:49"><name pos:start="125:27" pos:end="125:27">s</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:32">dsp</name><operator pos:start="125:33" pos:end="125:33">.</operator><name pos:start="125:34" pos:end="125:49">idct_permutation</name></name></expr></argument>, <argument pos:start="125:52" pos:end="125:70"><expr pos:start="125:52" pos:end="125:70"><operator pos:start="125:52" pos:end="125:52">&amp;</operator><name pos:start="125:53" pos:end="125:70"><name pos:start="125:53" pos:end="125:53">s</name><operator pos:start="125:54" pos:end="125:55">-&gt;</operator><name pos:start="125:56" pos:end="125:70">intra_scantable</name></name></expr></argument>  , <argument pos:start="125:75" pos:end="125:90"><expr pos:start="125:75" pos:end="125:90"><name pos:start="125:75" pos:end="125:90">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:38">/* composite display not parsed */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:72"><expr pos:start="133:5" pos:end="133:71"><call pos:start="133:5" pos:end="133:71"><name pos:start="133:5" pos:end="133:11">dprintf</name><argument_list pos:start="133:12" pos:end="133:71">(<argument pos:start="133:13" pos:end="133:20"><expr pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:20">avctx</name></name></expr></argument>, <argument pos:start="133:23" pos:end="133:47"><expr pos:start="133:23" pos:end="133:47"><literal type="string" pos:start="133:23" pos:end="133:47">"intra_dc_precision=%d\n"</literal></expr></argument>, <argument pos:start="133:50" pos:end="133:70"><expr pos:start="133:50" pos:end="133:70"><name pos:start="133:50" pos:end="133:70"><name pos:start="133:50" pos:end="133:50">s</name><operator pos:start="133:51" pos:end="133:52">-&gt;</operator><name pos:start="133:53" pos:end="133:70">intra_dc_precision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:70"><expr pos:start="135:5" pos:end="135:69"><call pos:start="135:5" pos:end="135:69"><name pos:start="135:5" pos:end="135:11">dprintf</name><argument_list pos:start="135:12" pos:end="135:69">(<argument pos:start="135:13" pos:end="135:20"><expr pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">avctx</name></name></expr></argument>, <argument pos:start="135:23" pos:end="135:46"><expr pos:start="135:23" pos:end="135:46"><literal type="string" pos:start="135:23" pos:end="135:46">"picture_structure=%d\n"</literal></expr></argument>, <argument pos:start="135:49" pos:end="135:68"><expr pos:start="135:49" pos:end="135:68"><name pos:start="135:49" pos:end="135:68"><name pos:start="135:49" pos:end="135:49">s</name><operator pos:start="135:50" pos:end="135:51">-&gt;</operator><name pos:start="135:52" pos:end="135:68">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:66"><expr pos:start="137:5" pos:end="137:65"><call pos:start="137:5" pos:end="137:65"><name pos:start="137:5" pos:end="137:11">dprintf</name><argument_list pos:start="137:12" pos:end="137:65">(<argument pos:start="137:13" pos:end="137:20"><expr pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:20">avctx</name></name></expr></argument>, <argument pos:start="137:23" pos:end="137:44"><expr pos:start="137:23" pos:end="137:44"><literal type="string" pos:start="137:23" pos:end="137:44">"top field first=%d\n"</literal></expr></argument>, <argument pos:start="137:47" pos:end="137:64"><expr pos:start="137:47" pos:end="137:64"><name pos:start="137:47" pos:end="137:64"><name pos:start="137:47" pos:end="137:47">s</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:64">top_field_first</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:72"><expr pos:start="139:5" pos:end="139:71"><call pos:start="139:5" pos:end="139:71"><name pos:start="139:5" pos:end="139:11">dprintf</name><argument_list pos:start="139:12" pos:end="139:71">(<argument pos:start="139:13" pos:end="139:20"><expr pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">avctx</name></name></expr></argument>, <argument pos:start="139:23" pos:end="139:47"><expr pos:start="139:23" pos:end="139:47"><literal type="string" pos:start="139:23" pos:end="139:47">"repeat first field=%d\n"</literal></expr></argument>, <argument pos:start="139:50" pos:end="139:70"><expr pos:start="139:50" pos:end="139:70"><name pos:start="139:50" pos:end="139:70"><name pos:start="139:50" pos:end="139:50">s</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:70">repeat_first_field</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:69"><expr pos:start="141:5" pos:end="141:68"><call pos:start="141:5" pos:end="141:68"><name pos:start="141:5" pos:end="141:11">dprintf</name><argument_list pos:start="141:12" pos:end="141:68">(<argument pos:start="141:13" pos:end="141:20"><expr pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:20">avctx</name></name></expr></argument>, <argument pos:start="141:23" pos:end="141:36"><expr pos:start="141:23" pos:end="141:36"><literal type="string" pos:start="141:23" pos:end="141:36">"conceal=%d\n"</literal></expr></argument>, <argument pos:start="141:39" pos:end="141:67"><expr pos:start="141:39" pos:end="141:67"><name pos:start="141:39" pos:end="141:67"><name pos:start="141:39" pos:end="141:39">s</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:67">concealment_motion_vectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:68"><expr pos:start="143:5" pos:end="143:67"><call pos:start="143:5" pos:end="143:67"><name pos:start="143:5" pos:end="143:11">dprintf</name><argument_list pos:start="143:12" pos:end="143:67">(<argument pos:start="143:13" pos:end="143:20"><expr pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">avctx</name></name></expr></argument>, <argument pos:start="143:23" pos:end="143:45"><expr pos:start="143:23" pos:end="143:45"><literal type="string" pos:start="143:23" pos:end="143:45">"intra_vlc_format=%d\n"</literal></expr></argument>, <argument pos:start="143:48" pos:end="143:66"><expr pos:start="143:48" pos:end="143:66"><name pos:start="143:48" pos:end="143:66"><name pos:start="143:48" pos:end="143:48">s</name><operator pos:start="143:49" pos:end="143:50">-&gt;</operator><name pos:start="143:51" pos:end="143:66">intra_vlc_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:64"><expr pos:start="145:5" pos:end="145:63"><call pos:start="145:5" pos:end="145:63"><name pos:start="145:5" pos:end="145:11">dprintf</name><argument_list pos:start="145:12" pos:end="145:63">(<argument pos:start="145:13" pos:end="145:20"><expr pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">avctx</name></name></expr></argument>, <argument pos:start="145:23" pos:end="145:43"><expr pos:start="145:23" pos:end="145:43"><literal type="string" pos:start="145:23" pos:end="145:43">"alternate_scan=%d\n"</literal></expr></argument>, <argument pos:start="145:46" pos:end="145:62"><expr pos:start="145:46" pos:end="145:62"><name pos:start="145:46" pos:end="145:62"><name pos:start="145:46" pos:end="145:46">s</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:62">alternate_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:76"><expr pos:start="147:5" pos:end="147:75"><call pos:start="147:5" pos:end="147:75"><name pos:start="147:5" pos:end="147:11">dprintf</name><argument_list pos:start="147:12" pos:end="147:75">(<argument pos:start="147:13" pos:end="147:20"><expr pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:20">avctx</name></name></expr></argument>, <argument pos:start="147:23" pos:end="147:49"><expr pos:start="147:23" pos:end="147:49"><literal type="string" pos:start="147:23" pos:end="147:49">"frame_pred_frame_dct=%d\n"</literal></expr></argument>, <argument pos:start="147:52" pos:end="147:74"><expr pos:start="147:52" pos:end="147:74"><name pos:start="147:52" pos:end="147:74"><name pos:start="147:52" pos:end="147:52">s</name><operator pos:start="147:53" pos:end="147:54">-&gt;</operator><name pos:start="147:55" pos:end="147:74">frame_pred_frame_dct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:70"><expr pos:start="149:5" pos:end="149:69"><call pos:start="149:5" pos:end="149:69"><name pos:start="149:5" pos:end="149:11">dprintf</name><argument_list pos:start="149:12" pos:end="149:69">(<argument pos:start="149:13" pos:end="149:20"><expr pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:20">avctx</name></name></expr></argument>, <argument pos:start="149:23" pos:end="149:46"><expr pos:start="149:23" pos:end="149:46"><literal type="string" pos:start="149:23" pos:end="149:46">"progressive_frame=%d\n"</literal></expr></argument>, <argument pos:start="149:49" pos:end="149:68"><expr pos:start="149:49" pos:end="149:68"><name pos:start="149:49" pos:end="149:68"><name pos:start="149:49" pos:end="149:49">s</name><operator pos:start="149:50" pos:end="149:51">-&gt;</operator><name pos:start="149:52" pos:end="149:68">progressive_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
