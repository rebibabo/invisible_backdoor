<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4944.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">eth_send</name><parameter_list pos:start="1:21" pos:end="1:61">(<parameter pos:start="1:22" pos:end="1:43"><decl pos:start="1:22" pos:end="1:43"><type pos:start="1:22" pos:end="1:43"><name pos:start="1:22" pos:end="1:40">mv88w8618_eth_state</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:60">queue_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:52">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:22">desc_addr</name> <init pos:start="5:24" pos:end="5:49">= <expr pos:start="5:26" pos:end="5:49"><name pos:start="5:26" pos:end="5:49"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:36">tx_queue</name><index pos:start="5:37" pos:end="5:49">[<expr pos:start="5:38" pos:end="5:48"><name pos:start="5:38" pos:end="5:48">queue_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21">mv88w8618_tx_desc</name></type> <name pos:start="7:23" pos:end="7:26">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:21">[<expr pos:start="9:17" pos:end="9:20"><literal type="number" pos:start="9:17" pos:end="9:20">2048</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>;</decl_stmt>





    <do pos:start="17:5" pos:end="43:52">do <block pos:start="17:8" pos:end="43:5">{<block_content pos:start="19:9" pos:end="41:30">

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:23">eth_tx_desc_get</name><argument_list pos:start="19:24" pos:end="19:41">(<argument pos:start="19:25" pos:end="19:33"><expr pos:start="19:25" pos:end="19:33"><name pos:start="19:25" pos:end="19:33">desc_addr</name></expr></argument>, <argument pos:start="19:36" pos:end="19:40"><expr pos:start="19:36" pos:end="19:40"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:40">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="39:9"><if pos:start="21:9" pos:end="39:9">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:16">desc</name><operator pos:start="21:17" pos:end="21:17">.</operator><name pos:start="21:18" pos:end="21:24">cmdstat</name></name> <operator pos:start="21:26" pos:end="21:26">&amp;</operator> <name pos:start="21:28" pos:end="21:40">MP_ETH_TX_OWN</name></expr>)</condition> <block pos:start="21:43" pos:end="39:9">{<block_content pos:start="23:13" pos:end="37:46">

            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:15">len</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:28"><name pos:start="23:19" pos:end="23:22">desc</name><operator pos:start="23:23" pos:end="23:23">.</operator><name pos:start="23:24" pos:end="23:28">bytes</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="31:13"><if pos:start="25:13" pos:end="31:13">if <condition pos:start="25:16" pos:end="25:27">(<expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:19">len</name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <literal type="number" pos:start="25:23" pos:end="25:26">2048</literal></expr>)</condition> <block pos:start="25:29" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:50">

                <expr_stmt pos:start="27:17" pos:end="27:64"><expr pos:start="27:17" pos:end="27:63"><call pos:start="27:17" pos:end="27:63"><name pos:start="27:17" pos:end="27:40">cpu_physical_memory_read</name><argument_list pos:start="27:41" pos:end="27:63">(<argument pos:start="27:42" pos:end="27:52"><expr pos:start="27:42" pos:end="27:52"><name pos:start="27:42" pos:end="27:52"><name pos:start="27:42" pos:end="27:45">desc</name><operator pos:start="27:46" pos:end="27:46">.</operator><name pos:start="27:47" pos:end="27:52">buffer</name></name></expr></argument>, <argument pos:start="27:55" pos:end="27:57"><expr pos:start="27:55" pos:end="27:57"><name pos:start="27:55" pos:end="27:57">buf</name></expr></argument>, <argument pos:start="27:60" pos:end="27:62"><expr pos:start="27:60" pos:end="27:62"><name pos:start="27:60" pos:end="27:62">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:50"><expr pos:start="29:17" pos:end="29:49"><call pos:start="29:17" pos:end="29:49"><name pos:start="29:17" pos:end="29:32">qemu_send_packet</name><argument_list pos:start="29:33" pos:end="29:49">(<argument pos:start="29:34" pos:end="29:38"><expr pos:start="29:34" pos:end="29:38"><name pos:start="29:34" pos:end="29:38"><name pos:start="29:34" pos:end="29:34">s</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:38">vc</name></name></expr></argument>, <argument pos:start="29:41" pos:end="29:43"><expr pos:start="29:41" pos:end="29:43"><name pos:start="29:41" pos:end="29:43">buf</name></expr></argument>, <argument pos:start="29:46" pos:end="29:48"><expr pos:start="29:46" pos:end="29:48"><name pos:start="29:46" pos:end="29:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:16">desc</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:24">cmdstat</name></name> <operator pos:start="33:26" pos:end="33:27">&amp;=</operator> <operator pos:start="33:29" pos:end="33:29">~</operator><name pos:start="33:30" pos:end="33:42">MP_ETH_TX_OWN</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:63"><expr pos:start="35:13" pos:end="35:62"><name pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:18">icr</name></name> <operator pos:start="35:20" pos:end="35:21">|=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">1</literal> <operator pos:start="35:25" pos:end="35:26">&lt;&lt;</operator> <operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:47">MP_ETH_IRQ_TXLO_BIT</name> <operator pos:start="35:49" pos:end="35:49">-</operator> <name pos:start="35:51" pos:end="35:61">queue_index</name><operator pos:start="35:62" pos:end="35:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:46"><expr pos:start="37:13" pos:end="37:45"><call pos:start="37:13" pos:end="37:45"><name pos:start="37:13" pos:end="37:27">eth_tx_desc_put</name><argument_list pos:start="37:28" pos:end="37:45">(<argument pos:start="37:29" pos:end="37:37"><expr pos:start="37:29" pos:end="37:37"><name pos:start="37:29" pos:end="37:37">desc_addr</name></expr></argument>, <argument pos:start="37:40" pos:end="37:44"><expr pos:start="37:40" pos:end="37:44"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:44">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:17">desc_addr</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:24">desc</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:29">next</name></name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="43:13" pos:end="43:51">(<expr pos:start="43:14" pos:end="43:50"><name pos:start="43:14" pos:end="43:22">desc_addr</name> <operator pos:start="43:24" pos:end="43:25">!=</operator> <name pos:start="43:27" pos:end="43:50"><name pos:start="43:27" pos:end="43:27">s</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:37">tx_queue</name><index pos:start="43:38" pos:end="43:50">[<expr pos:start="43:39" pos:end="43:49"><name pos:start="43:39" pos:end="43:49">queue_index</name></expr>]</index></name></expr>)</condition>;</do>

</block_content>}</block></function>
</unit>
