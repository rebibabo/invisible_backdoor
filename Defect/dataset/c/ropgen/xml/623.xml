<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/623.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:32"><name pos:start="1:1" pos:end="1:14">tcp_sockclosed</name><argument_list pos:start="1:15" pos:end="1:32">(<argument pos:start="1:16" pos:end="1:31">struct tcpcb *tp</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="7:9" pos:end="51:31">



	<expr_stmt pos:start="7:9" pos:end="7:37"><expr pos:start="7:9" pos:end="7:36"><call pos:start="7:9" pos:end="7:36"><name pos:start="7:9" pos:end="7:18">DEBUG_CALL</name><argument_list pos:start="7:19" pos:end="7:36">(<argument pos:start="7:20" pos:end="7:35"><expr pos:start="7:20" pos:end="7:35"><literal type="string" pos:start="7:20" pos:end="7:35">"tcp_sockclosed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="9:9" pos:end="9:33"><expr pos:start="9:9" pos:end="9:32"><call pos:start="9:9" pos:end="9:32"><name pos:start="9:9" pos:end="9:17">DEBUG_ARG</name><argument_list pos:start="9:18" pos:end="9:32">(<argument pos:start="9:19" pos:end="9:27"><expr pos:start="9:19" pos:end="9:27"><literal type="string" pos:start="9:19" pos:end="9:27">"tp = %p"</literal></expr></argument>, <argument pos:start="9:30" pos:end="9:31"><expr pos:start="9:30" pos:end="9:31"><name pos:start="9:30" pos:end="9:31">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<switch pos:start="13:9" pos:end="47:9">switch <condition pos:start="13:16" pos:end="13:28">(<expr pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:18">tp</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:27">t_state</name></name></expr>)</condition> <block pos:start="13:30" pos:end="47:9">{<block_content pos:start="17:9" pos:end="45:22">



	<case pos:start="17:9" pos:end="17:25">case <expr pos:start="17:14" pos:end="17:24"><name pos:start="17:14" pos:end="17:24">TCPS_CLOSED</name></expr>:</case>

	<case pos:start="19:9" pos:end="19:25">case <expr pos:start="19:14" pos:end="19:24"><name pos:start="19:14" pos:end="19:24">TCPS_LISTEN</name></expr>:</case>

	<case pos:start="21:9" pos:end="21:27">case <expr pos:start="21:14" pos:end="21:26"><name pos:start="21:14" pos:end="21:26">TCPS_SYN_SENT</name></expr>:</case>

		<expr_stmt pos:start="23:17" pos:end="23:42"><expr pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:18">tp</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:27">t_state</name></name> <operator pos:start="23:29" pos:end="23:29">=</operator> <name pos:start="23:31" pos:end="23:41">TCPS_CLOSED</name></expr>;</expr_stmt>

		<expr_stmt pos:start="25:17" pos:end="25:35"><expr pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:18">tp</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:34"><name pos:start="25:22" pos:end="25:30">tcp_close</name><argument_list pos:start="25:31" pos:end="25:34">(<argument pos:start="25:32" pos:end="25:33"><expr pos:start="25:32" pos:end="25:33"><name pos:start="25:32" pos:end="25:33">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="27:17" pos:end="27:22">break;</break>



	<case pos:start="31:9" pos:end="31:31">case <expr pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:30">TCPS_SYN_RECEIVED</name></expr>:</case>

	<case pos:start="33:9" pos:end="33:30">case <expr pos:start="33:14" pos:end="33:29"><name pos:start="33:14" pos:end="33:29">TCPS_ESTABLISHED</name></expr>:</case>

		<expr_stmt pos:start="35:17" pos:end="35:46"><expr pos:start="35:17" pos:end="35:45"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:18">tp</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:27">t_state</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:45">TCPS_FIN_WAIT_1</name></expr>;</expr_stmt>

		<break pos:start="37:17" pos:end="37:22">break;</break>



	<case pos:start="41:9" pos:end="41:29">case <expr pos:start="41:14" pos:end="41:28"><name pos:start="41:14" pos:end="41:28">TCPS_CLOSE_WAIT</name></expr>:</case>

		<expr_stmt pos:start="43:17" pos:end="43:44"><expr pos:start="43:17" pos:end="43:43"><name pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:18">tp</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:27">t_state</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:43">TCPS_LAST_ACK</name></expr>;</expr_stmt>

		<break pos:start="45:17" pos:end="45:22">break;</break>

	</block_content>}</block></switch>

	<if_stmt pos:start="49:9" pos:end="51:31"><if pos:start="49:9" pos:end="51:31">if <condition pos:start="49:12" pos:end="49:15">(<expr pos:start="49:13" pos:end="49:14"><name pos:start="49:13" pos:end="49:14">tp</name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:31"><block_content pos:start="51:17" pos:end="51:31">

		<expr_stmt pos:start="51:17" pos:end="51:31"><expr pos:start="51:17" pos:end="51:30"><call pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:26">tcp_output</name><argument_list pos:start="51:27" pos:end="51:30">(<argument pos:start="51:28" pos:end="51:29"><expr pos:start="51:28" pos:end="51:29"><name pos:start="51:28" pos:end="51:29">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block>
</unit>
