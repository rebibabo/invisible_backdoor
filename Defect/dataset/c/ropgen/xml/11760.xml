<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11760.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:30"><name pos:start="1:1" pos:end="1:15">mst_fpga_writeb</name><argument_list pos:start="1:16" pos:end="3:30">(<argument pos:start="1:17" pos:end="1:28">void *opaque</argument>, <argument pos:start="1:31" pos:end="1:53">target_phys_addr_t addr</argument>, <argument pos:start="1:56" pos:end="1:69">uint64_t value</argument>,

		<argument pos:start="3:17" pos:end="3:29">unsigned size</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:9" pos:end="99:9">

	<decl_stmt pos:start="7:9" pos:end="7:52"><decl pos:start="7:9" pos:end="7:51"><type pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:21">mst_irq_state</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:51">= <expr pos:start="7:28" pos:end="7:51"><operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:41">mst_irq_state</name> <operator pos:start="7:43" pos:end="7:43">*</operator><operator pos:start="7:44" pos:end="7:44">)</operator> <name pos:start="7:46" pos:end="7:51">opaque</name></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="9:9" pos:end="9:28"><expr pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:13">value</name> <operator pos:start="9:15" pos:end="9:16">&amp;=</operator> <literal type="number" pos:start="9:18" pos:end="9:27">0xffffffff</literal></expr>;</expr_stmt>



	<switch pos:start="13:9" pos:end="99:9">switch <condition pos:start="13:16" pos:end="13:21">(<expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:20">addr</name></expr>)</condition> <block pos:start="13:23" pos:end="99:9">{<block_content pos:start="15:9" pos:end="97:56">

	<case pos:start="15:9" pos:end="15:25">case <expr pos:start="15:14" pos:end="15:24"><name pos:start="15:14" pos:end="15:24">MST_LEDDAT1</name></expr>:</case>

		<expr_stmt pos:start="17:17" pos:end="17:35"><expr pos:start="17:17" pos:end="17:34"><name pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:26">leddat1</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:34">value</name></expr>;</expr_stmt>

		<break pos:start="19:17" pos:end="19:22">break;</break>

	<case pos:start="21:9" pos:end="21:25">case <expr pos:start="21:14" pos:end="21:24"><name pos:start="21:14" pos:end="21:24">MST_LEDDAT2</name></expr>:</case>

		<expr_stmt pos:start="23:17" pos:end="23:35"><expr pos:start="23:17" pos:end="23:34"><name pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:26">leddat2</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <name pos:start="23:30" pos:end="23:34">value</name></expr>;</expr_stmt>

		<break pos:start="25:17" pos:end="25:22">break;</break>

	<case pos:start="27:9" pos:end="27:25">case <expr pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:24">MST_LEDCTRL</name></expr>:</case>

		<expr_stmt pos:start="29:17" pos:end="29:35"><expr pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:26">ledctrl</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:34">value</name></expr>;</expr_stmt>

		<break pos:start="31:17" pos:end="31:22">break;</break>

	<case pos:start="33:9" pos:end="33:23">case <expr pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:22">MST_GPSWR</name></expr>:</case>

		<expr_stmt pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">gpswr</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:32">value</name></expr>;</expr_stmt>

		<break pos:start="37:17" pos:end="37:22">break;</break>

	<case pos:start="39:9" pos:end="39:24">case <expr pos:start="39:14" pos:end="39:23"><name pos:start="39:14" pos:end="39:23">MST_MSCWR1</name></expr>:</case>

		<expr_stmt pos:start="41:17" pos:end="41:34"><expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">mscwr1</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <name pos:start="41:29" pos:end="41:33">value</name></expr>;</expr_stmt>

		<break pos:start="43:17" pos:end="43:22">break;</break>

	<case pos:start="45:9" pos:end="45:24">case <expr pos:start="45:14" pos:end="45:23"><name pos:start="45:14" pos:end="45:23">MST_MSCWR2</name></expr>:</case>

		<expr_stmt pos:start="47:17" pos:end="47:34"><expr pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:25">mscwr2</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:33">value</name></expr>;</expr_stmt>

		<break pos:start="49:17" pos:end="49:22">break;</break>

	<case pos:start="51:9" pos:end="51:24">case <expr pos:start="51:14" pos:end="51:23"><name pos:start="51:14" pos:end="51:23">MST_MSCWR3</name></expr>:</case>

		<expr_stmt pos:start="53:17" pos:end="53:34"><expr pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:25">mscwr3</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:33">value</name></expr>;</expr_stmt>

		<break pos:start="55:17" pos:end="55:22">break;</break>

	<case pos:start="57:9" pos:end="57:23">case <expr pos:start="57:14" pos:end="57:22"><name pos:start="57:14" pos:end="57:22">MST_MSCRD</name></expr>:</case>

		<expr_stmt pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">mscrd</name></name> <operator pos:start="59:26" pos:end="59:26">=</operator>  <name pos:start="59:29" pos:end="59:33">value</name></expr>;</expr_stmt>

		<break pos:start="61:17" pos:end="61:22">break;</break>

	<case pos:start="63:9" pos:end="63:27">case <expr pos:start="63:14" pos:end="63:26"><name pos:start="63:14" pos:end="63:26">MST_INTMSKENA</name></expr>:</case>	<comment type="block" pos:start="63:33" pos:end="63:52">/* Mask interrupt */</comment>

		<expr_stmt pos:start="65:17" pos:end="65:49"><expr pos:start="65:17" pos:end="65:48"><name pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:28">intmskena</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <operator pos:start="65:32" pos:end="65:32">(</operator><name pos:start="65:33" pos:end="65:37">value</name> <operator pos:start="65:39" pos:end="65:39">&amp;</operator> <literal type="number" pos:start="65:41" pos:end="65:47">0xFEEFF</literal><operator pos:start="65:48" pos:end="65:48">)</operator></expr>;</expr_stmt>

		<expr_stmt pos:start="67:17" pos:end="67:69"><expr pos:start="67:17" pos:end="67:68"><call pos:start="67:17" pos:end="67:68"><name pos:start="67:17" pos:end="67:28">qemu_set_irq</name><argument_list pos:start="67:29" pos:end="67:68">(<argument pos:start="67:30" pos:end="67:38"><expr pos:start="67:30" pos:end="67:38"><name pos:start="67:30" pos:end="67:38"><name pos:start="67:30" pos:end="67:30">s</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:38">parent</name></name></expr></argument>, <argument pos:start="67:41" pos:end="67:67"><expr pos:start="67:41" pos:end="67:67"><name pos:start="67:41" pos:end="67:52"><name pos:start="67:41" pos:end="67:41">s</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:52">intsetclr</name></name> <operator pos:start="67:54" pos:end="67:54">&amp;</operator> <name pos:start="67:56" pos:end="67:67"><name pos:start="67:56" pos:end="67:56">s</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:67">intmskena</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="69:17" pos:end="69:22">break;</break>

	<case pos:start="71:9" pos:end="71:27">case <expr pos:start="71:14" pos:end="71:26"><name pos:start="71:14" pos:end="71:26">MST_INTSETCLR</name></expr>:</case>	<comment type="block" pos:start="71:33" pos:end="71:60">/* clear or set interrupt */</comment>

		<expr_stmt pos:start="73:17" pos:end="73:49"><expr pos:start="73:17" pos:end="73:48"><name pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:28">intsetclr</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <operator pos:start="73:32" pos:end="73:32">(</operator><name pos:start="73:33" pos:end="73:37">value</name> <operator pos:start="73:39" pos:end="73:39">&amp;</operator> <literal type="number" pos:start="73:41" pos:end="73:47">0xFEEFF</literal><operator pos:start="73:48" pos:end="73:48">)</operator></expr>;</expr_stmt>

		<expr_stmt pos:start="75:17" pos:end="75:69"><expr pos:start="75:17" pos:end="75:68"><call pos:start="75:17" pos:end="75:68"><name pos:start="75:17" pos:end="75:28">qemu_set_irq</name><argument_list pos:start="75:29" pos:end="75:68">(<argument pos:start="75:30" pos:end="75:38"><expr pos:start="75:30" pos:end="75:38"><name pos:start="75:30" pos:end="75:38"><name pos:start="75:30" pos:end="75:30">s</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:38">parent</name></name></expr></argument>, <argument pos:start="75:41" pos:end="75:67"><expr pos:start="75:41" pos:end="75:67"><name pos:start="75:41" pos:end="75:52"><name pos:start="75:41" pos:end="75:41">s</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:52">intsetclr</name></name> <operator pos:start="75:54" pos:end="75:54">&amp;</operator> <name pos:start="75:56" pos:end="75:67"><name pos:start="75:56" pos:end="75:56">s</name><operator pos:start="75:57" pos:end="75:58">-&gt;</operator><name pos:start="75:59" pos:end="75:67">intmskena</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="77:17" pos:end="77:22">break;</break>

		<comment type="block" pos:start="79:17" pos:end="79:74">/* For PCMCIAx allow the to change only power and reset */</comment>

	<case pos:start="81:9" pos:end="81:25">case <expr pos:start="81:14" pos:end="81:24"><name pos:start="81:14" pos:end="81:24">MST_PCMCIA0</name></expr>:</case>

		<expr_stmt pos:start="83:17" pos:end="83:67"><expr pos:start="83:17" pos:end="83:66"><name pos:start="83:17" pos:end="83:26"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:26">pcmcia0</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <operator pos:start="83:30" pos:end="83:30">(</operator><name pos:start="83:31" pos:end="83:35">value</name> <operator pos:start="83:37" pos:end="83:37">&amp;</operator> <literal type="number" pos:start="83:39" pos:end="83:42">0x1f</literal><operator pos:start="83:43" pos:end="83:43">)</operator> <operator pos:start="83:45" pos:end="83:45">|</operator> <operator pos:start="83:47" pos:end="83:47">(</operator><name pos:start="83:48" pos:end="83:57"><name pos:start="83:48" pos:end="83:48">s</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:57">pcmcia0</name></name> <operator pos:start="83:59" pos:end="83:59">&amp;</operator> <operator pos:start="83:61" pos:end="83:61">~</operator><literal type="number" pos:start="83:62" pos:end="83:65">0x1f</literal><operator pos:start="83:66" pos:end="83:66">)</operator></expr>;</expr_stmt>

		<break pos:start="85:17" pos:end="85:22">break;</break>

	<case pos:start="87:9" pos:end="87:25">case <expr pos:start="87:14" pos:end="87:24"><name pos:start="87:14" pos:end="87:24">MST_PCMCIA1</name></expr>:</case>

		<expr_stmt pos:start="89:17" pos:end="89:67"><expr pos:start="89:17" pos:end="89:66"><name pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:26">pcmcia1</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <operator pos:start="89:30" pos:end="89:30">(</operator><name pos:start="89:31" pos:end="89:35">value</name> <operator pos:start="89:37" pos:end="89:37">&amp;</operator> <literal type="number" pos:start="89:39" pos:end="89:42">0x1f</literal><operator pos:start="89:43" pos:end="89:43">)</operator> <operator pos:start="89:45" pos:end="89:45">|</operator> <operator pos:start="89:47" pos:end="89:47">(</operator><name pos:start="89:48" pos:end="89:57"><name pos:start="89:48" pos:end="89:48">s</name><operator pos:start="89:49" pos:end="89:50">-&gt;</operator><name pos:start="89:51" pos:end="89:57">pcmcia1</name></name> <operator pos:start="89:59" pos:end="89:59">&amp;</operator> <operator pos:start="89:61" pos:end="89:61">~</operator><literal type="number" pos:start="89:62" pos:end="89:65">0x1f</literal><operator pos:start="89:66" pos:end="89:66">)</operator></expr>;</expr_stmt>

		<break pos:start="91:17" pos:end="91:22">break;</break>

	<default pos:start="93:9" pos:end="93:16">default:</default>

		<expr_stmt pos:start="95:17" pos:end="97:56"><expr pos:start="95:17" pos:end="97:55"><call pos:start="95:17" pos:end="97:55"><name pos:start="95:17" pos:end="95:22">printf</name><argument_list pos:start="95:23" pos:end="97:55">(<argument pos:start="95:24" pos:end="97:48"><expr pos:start="95:24" pos:end="97:48"><literal type="string" pos:start="95:24" pos:end="95:74">"Mainstone - mst_fpga_writeb: Bad register offset "</literal>

			<literal type="string" pos:start="97:25" pos:end="97:28">"0x"</literal> <name pos:start="97:30" pos:end="97:43">TARGET_FMT_plx</name> <literal type="string" pos:start="97:45" pos:end="97:48">"\n"</literal></expr></argument>, <argument pos:start="97:51" pos:end="97:54"><expr pos:start="97:51" pos:end="97:54"><name pos:start="97:51" pos:end="97:54">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></switch>

</block_content>}</block>
</unit>
