<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26178.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">dxa_read_header</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><name pos:start="1:48" pos:end="1:65">AVFormatParameters</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">DXAContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ast</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:15">fps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">w</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">num</name></decl>, <decl pos:start="17:14" pos:end="17:16"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:16">den</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">flags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:7">tag</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:23"><name pos:start="23:11" pos:end="23:19">avio_rl32</name><argument_list pos:start="23:20" pos:end="23:23">(<argument pos:start="23:21" pos:end="23:22"><expr pos:start="23:21" pos:end="23:22"><name pos:start="23:21" pos:end="23:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:41">(<expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:11">tag</name> <operator pos:start="25:13" pos:end="25:14">!=</operator> <call pos:start="25:16" pos:end="25:40"><name pos:start="25:16" pos:end="25:20">MKTAG</name><argument_list pos:start="25:21" pos:end="25:40">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><literal type="char" pos:start="25:22" pos:end="25:24">'D'</literal></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><literal type="char" pos:start="25:27" pos:end="25:29">'E'</literal></expr></argument>, <argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><literal type="char" pos:start="25:32" pos:end="25:34">'X'</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><literal type="char" pos:start="25:37" pos:end="25:39">'A'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:9">flags</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:19">avio_r8</name><argument_list pos:start="29:20" pos:end="29:23">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><name pos:start="29:21" pos:end="29:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">frames</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:25">avio_rb16</name><argument_list pos:start="31:26" pos:end="31:29">(<argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><name pos:start="31:27" pos:end="31:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if<condition pos:start="33:7" pos:end="33:18">(<expr pos:start="33:8" pos:end="33:17"><operator pos:start="33:8" pos:end="33:8">!</operator><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:9">c</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">frames</name></name></expr>)</condition><block pos:start="33:19" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:65"><expr pos:start="35:9" pos:end="35:64"><call pos:start="35:9" pos:end="35:64"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:64">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>, <argument pos:start="35:19" pos:end="35:30"><expr pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:33" pos:end="35:63"><expr pos:start="35:33" pos:end="35:63"><literal type="string" pos:start="35:33" pos:end="35:63">"File contains no frames ???\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:7">fps</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:23"><name pos:start="43:11" pos:end="43:19">avio_rb32</name><argument_list pos:start="43:20" pos:end="43:23">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="63:5"><if pos:start="45:5" pos:end="51:5">if<condition pos:start="45:7" pos:end="45:15">(<expr pos:start="45:8" pos:end="45:14"><name pos:start="45:8" pos:end="45:10">fps</name> <operator pos:start="45:12" pos:end="45:12">&gt;</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>)</condition><block pos:start="45:16" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">den</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <literal type="number" pos:start="47:15" pos:end="47:18">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:11">num</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:17">fps</name></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="51:6" pos:end="57:5">else if <condition pos:start="51:14" pos:end="51:22">(<expr pos:start="51:15" pos:end="51:21"><name pos:start="51:15" pos:end="51:17">fps</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr>)</condition><block pos:start="51:23" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:19">

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:11">den</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <literal type="number" pos:start="53:15" pos:end="53:20">100000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">num</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">-</operator><name pos:start="55:16" pos:end="55:18">fps</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="57:6" pos:end="63:5">else<block pos:start="57:10" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:16">

        <expr_stmt pos:start="59:9" pos:end="59:17"><expr pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:11">den</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <literal type="number" pos:start="59:15" pos:end="59:16">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">num</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <literal type="number" pos:start="61:15" pos:end="61:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:5">w</name> <operator pos:start="65:7" pos:end="65:7">=</operator> <call pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:17">avio_rb16</name><argument_list pos:start="65:18" pos:end="65:21">(<argument pos:start="65:19" pos:end="65:20"><expr pos:start="65:19" pos:end="65:20"><name pos:start="65:19" pos:end="65:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:22"><expr pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:5">h</name> <operator pos:start="67:7" pos:end="67:7">=</operator> <call pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:17">avio_rb16</name><argument_list pos:start="67:18" pos:end="67:21">(<argument pos:start="67:19" pos:end="67:20"><expr pos:start="67:19" pos:end="67:20"><name pos:start="67:19" pos:end="67:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:5">c</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:16">has_sound</name></name> <operator pos:start="69:18" pos:end="69:18">=</operator> <literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:29"><expr pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:6">st</name> <operator pos:start="73:8" pos:end="73:8">=</operator> <call pos:start="73:10" pos:end="73:28"><name pos:start="73:10" pos:end="73:22">av_new_stream</name><argument_list pos:start="73:23" pos:end="73:28">(<argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">s</name></expr></argument>, <argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><literal type="number" pos:start="73:27" pos:end="73:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:12">(<expr pos:start="75:9" pos:end="75:11"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:11">st</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="81:5" pos:end="81:28">// Parse WAV data header</comment>

    <if_stmt pos:start="83:5" pos:end="133:5"><if pos:start="83:5" pos:end="133:5">if<condition pos:start="83:7" pos:end="83:50">(<expr pos:start="83:8" pos:end="83:49"><call pos:start="83:8" pos:end="83:20"><name pos:start="83:8" pos:end="83:16">avio_rl32</name><argument_list pos:start="83:17" pos:end="83:20">(<argument pos:start="83:18" pos:end="83:19"><expr pos:start="83:18" pos:end="83:19"><name pos:start="83:18" pos:end="83:19">pb</name></expr></argument>)</argument_list></call> <operator pos:start="83:22" pos:end="83:23">==</operator> <call pos:start="83:25" pos:end="83:49"><name pos:start="83:25" pos:end="83:29">MKTAG</name><argument_list pos:start="83:30" pos:end="83:49">(<argument pos:start="83:31" pos:end="83:33"><expr pos:start="83:31" pos:end="83:33"><literal type="char" pos:start="83:31" pos:end="83:33">'W'</literal></expr></argument>, <argument pos:start="83:36" pos:end="83:38"><expr pos:start="83:36" pos:end="83:38"><literal type="char" pos:start="83:36" pos:end="83:38">'A'</literal></expr></argument>, <argument pos:start="83:41" pos:end="83:43"><expr pos:start="83:41" pos:end="83:43"><literal type="char" pos:start="83:41" pos:end="83:43">'V'</literal></expr></argument>, <argument pos:start="83:46" pos:end="83:48"><expr pos:start="83:46" pos:end="83:48"><literal type="char" pos:start="83:46" pos:end="83:48">'E'</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="83:51" pos:end="133:5">{<block_content pos:start="85:9" pos:end="131:43">

        <decl_stmt pos:start="85:9" pos:end="85:29"><decl pos:start="85:9" pos:end="85:21"><type pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:16">uint32_t</name></type> <name pos:start="85:18" pos:end="85:21">size</name></decl>, <decl pos:start="85:24" pos:end="85:28"><type ref="prev" pos:start="85:9" pos:end="85:16"/><name pos:start="85:24" pos:end="85:28">fsize</name></decl>;</decl_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:25"><expr pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:9">c</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:20">has_sound</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <literal type="number" pos:start="87:24" pos:end="87:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:12">size</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:28"><name pos:start="89:16" pos:end="89:24">avio_rb32</name><argument_list pos:start="89:25" pos:end="89:28">(<argument pos:start="89:26" pos:end="89:27"><expr pos:start="89:26" pos:end="89:27"><name pos:start="89:26" pos:end="89:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:9">c</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:17">vidpos</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:33"><name pos:start="91:21" pos:end="91:29">avio_tell</name><argument_list pos:start="91:30" pos:end="91:33">(<argument pos:start="91:31" pos:end="91:32"><expr pos:start="91:31" pos:end="91:32"><name pos:start="91:31" pos:end="91:32">pb</name></expr></argument>)</argument_list></call> <operator pos:start="91:35" pos:end="91:35">+</operator> <name pos:start="91:37" pos:end="91:40">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:26"><expr pos:start="93:9" pos:end="93:25"><call pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:17">avio_skip</name><argument_list pos:start="93:18" pos:end="93:25">(<argument pos:start="93:19" pos:end="93:20"><expr pos:start="93:19" pos:end="93:20"><name pos:start="93:19" pos:end="93:20">pb</name></expr></argument>, <argument pos:start="93:23" pos:end="93:24"><expr pos:start="93:23" pos:end="93:24"><literal type="number" pos:start="93:23" pos:end="93:24">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:30"><expr pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:13">fsize</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <call pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:25">avio_rl32</name><argument_list pos:start="95:26" pos:end="95:29">(<argument pos:start="95:27" pos:end="95:28"><expr pos:start="95:27" pos:end="95:28"><name pos:start="95:27" pos:end="95:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:11">ast</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:33"><name pos:start="99:15" pos:end="99:27">av_new_stream</name><argument_list pos:start="99:28" pos:end="99:33">(<argument pos:start="99:29" pos:end="99:29"><expr pos:start="99:29" pos:end="99:29"><name pos:start="99:29" pos:end="99:29">s</name></expr></argument>, <argument pos:start="99:32" pos:end="99:32"><expr pos:start="99:32" pos:end="99:32"><literal type="number" pos:start="99:32" pos:end="99:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="103:22"><if pos:start="101:9" pos:end="103:22">if <condition pos:start="101:12" pos:end="101:17">(<expr pos:start="101:13" pos:end="101:16"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:16">ast</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:22"><block_content pos:start="103:13" pos:end="103:22">

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><call pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:25">ff_get_wav_header</name><argument_list pos:start="105:26" pos:end="105:48">(<argument pos:start="105:27" pos:end="105:28"><expr pos:start="105:27" pos:end="105:28"><name pos:start="105:27" pos:end="105:28">pb</name></expr></argument>, <argument pos:start="105:31" pos:end="105:40"><expr pos:start="105:31" pos:end="105:40"><name pos:start="105:31" pos:end="105:40"><name pos:start="105:31" pos:end="105:33">ast</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:40">codec</name></name></expr></argument>, <argument pos:start="105:43" pos:end="105:47"><expr pos:start="105:43" pos:end="105:47"><name pos:start="105:43" pos:end="105:47">fsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="107:9" pos:end="107:28">// find 'data' chunk</comment>

        <while pos:start="109:9" pos:end="119:9">while<condition pos:start="109:14" pos:end="109:60">(<expr pos:start="109:15" pos:end="109:59"><call pos:start="109:15" pos:end="109:27"><name pos:start="109:15" pos:end="109:23">avio_tell</name><argument_list pos:start="109:24" pos:end="109:27">(<argument pos:start="109:25" pos:end="109:26"><expr pos:start="109:25" pos:end="109:26"><name pos:start="109:25" pos:end="109:26">pb</name></expr></argument>)</argument_list></call> <operator pos:start="109:29" pos:end="109:29">&lt;</operator> <name pos:start="109:31" pos:end="109:39"><name pos:start="109:31" pos:end="109:31">c</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:39">vidpos</name></name> <operator pos:start="109:41" pos:end="109:42">&amp;&amp;</operator> <operator pos:start="109:44" pos:end="109:44">!</operator><name pos:start="109:45" pos:end="109:59"><name pos:start="109:45" pos:end="109:46">pb</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:59">eof_reached</name></name></expr>)</condition><block pos:start="109:61" pos:end="119:9">{<block_content pos:start="111:13" pos:end="117:33">

            <expr_stmt pos:start="111:13" pos:end="111:32"><expr pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:15">tag</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="111:31"><name pos:start="111:19" pos:end="111:27">avio_rl32</name><argument_list pos:start="111:28" pos:end="111:31">(<argument pos:start="111:29" pos:end="111:30"><expr pos:start="111:29" pos:end="111:30"><name pos:start="111:29" pos:end="111:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:34"><expr pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:17">fsize</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <call pos:start="113:21" pos:end="113:33"><name pos:start="113:21" pos:end="113:29">avio_rl32</name><argument_list pos:start="113:30" pos:end="113:33">(<argument pos:start="113:31" pos:end="113:32"><expr pos:start="113:31" pos:end="113:32"><name pos:start="113:31" pos:end="113:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="115:55"><if pos:start="115:13" pos:end="115:55">if<condition pos:start="115:15" pos:end="115:48">(<expr pos:start="115:16" pos:end="115:47"><name pos:start="115:16" pos:end="115:18">tag</name> <operator pos:start="115:20" pos:end="115:21">==</operator> <call pos:start="115:23" pos:end="115:47"><name pos:start="115:23" pos:end="115:27">MKTAG</name><argument_list pos:start="115:28" pos:end="115:47">(<argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><literal type="char" pos:start="115:29" pos:end="115:31">'d'</literal></expr></argument>, <argument pos:start="115:34" pos:end="115:36"><expr pos:start="115:34" pos:end="115:36"><literal type="char" pos:start="115:34" pos:end="115:36">'a'</literal></expr></argument>, <argument pos:start="115:39" pos:end="115:41"><expr pos:start="115:39" pos:end="115:41"><literal type="char" pos:start="115:39" pos:end="115:41">'t'</literal></expr></argument>, <argument pos:start="115:44" pos:end="115:46"><expr pos:start="115:44" pos:end="115:46"><literal type="char" pos:start="115:44" pos:end="115:46">'a'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:50" pos:end="115:55"><block_content pos:start="115:50" pos:end="115:55"> <break pos:start="115:50" pos:end="115:55">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:33"><expr pos:start="117:13" pos:end="117:32"><call pos:start="117:13" pos:end="117:32"><name pos:start="117:13" pos:end="117:21">avio_skip</name><argument_list pos:start="117:22" pos:end="117:32">(<argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">pb</name></expr></argument>, <argument pos:start="117:27" pos:end="117:31"><expr pos:start="117:27" pos:end="117:31"><name pos:start="117:27" pos:end="117:31">fsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="121:9" pos:end="121:53"><expr pos:start="121:9" pos:end="121:52"><name pos:start="121:9" pos:end="121:14"><name pos:start="121:9" pos:end="121:9">c</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:14">bpc</name></name> <operator pos:start="121:16" pos:end="121:16">=</operator> <operator pos:start="121:18" pos:end="121:18">(</operator><name pos:start="121:19" pos:end="121:23">fsize</name> <operator pos:start="121:25" pos:end="121:25">+</operator> <name pos:start="121:27" pos:end="121:35"><name pos:start="121:27" pos:end="121:27">c</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:35">frames</name></name> <operator pos:start="121:37" pos:end="121:37">-</operator> <literal type="number" pos:start="121:39" pos:end="121:39">1</literal><operator pos:start="121:40" pos:end="121:40">)</operator> <operator pos:start="121:42" pos:end="121:42">/</operator> <name pos:start="121:44" pos:end="121:52"><name pos:start="121:44" pos:end="121:44">c</name><operator pos:start="121:45" pos:end="121:46">-&gt;</operator><name pos:start="121:47" pos:end="121:52">frames</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="125:114"><if pos:start="123:9" pos:end="125:114">if<condition pos:start="123:11" pos:end="123:35">(<expr pos:start="123:12" pos:end="123:34"><name pos:start="123:12" pos:end="123:34"><name pos:start="123:12" pos:end="123:14">ast</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:21">codec</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:34">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:114"><block_content pos:start="125:13" pos:end="125:114">

            <expr_stmt pos:start="125:13" pos:end="125:114"><expr pos:start="125:13" pos:end="125:113"><name pos:start="125:13" pos:end="125:18"><name pos:start="125:13" pos:end="125:13">c</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:18">bpc</name></name> <operator pos:start="125:20" pos:end="125:20">=</operator> <operator pos:start="125:22" pos:end="125:22">(</operator><operator pos:start="125:23" pos:end="125:23">(</operator><name pos:start="125:24" pos:end="125:29"><name pos:start="125:24" pos:end="125:24">c</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:29">bpc</name></name> <operator pos:start="125:31" pos:end="125:31">+</operator> <name pos:start="125:33" pos:end="125:55"><name pos:start="125:33" pos:end="125:35">ast</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:42">codec</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:55">block_align</name></name> <operator pos:start="125:57" pos:end="125:57">-</operator> <literal type="number" pos:start="125:59" pos:end="125:59">1</literal><operator pos:start="125:60" pos:end="125:60">)</operator> <operator pos:start="125:62" pos:end="125:62">/</operator> <name pos:start="125:64" pos:end="125:86"><name pos:start="125:64" pos:end="125:66">ast</name><operator pos:start="125:67" pos:end="125:68">-&gt;</operator><name pos:start="125:69" pos:end="125:73">codec</name><operator pos:start="125:74" pos:end="125:75">-&gt;</operator><name pos:start="125:76" pos:end="125:86">block_align</name></name><operator pos:start="125:87" pos:end="125:87">)</operator> <operator pos:start="125:89" pos:end="125:89">*</operator> <name pos:start="125:91" pos:end="125:113"><name pos:start="125:91" pos:end="125:93">ast</name><operator pos:start="125:94" pos:end="125:95">-&gt;</operator><name pos:start="125:96" pos:end="125:100">codec</name><operator pos:start="125:101" pos:end="125:102">-&gt;</operator><name pos:start="125:103" pos:end="125:113">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:9">c</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:21">bytes_left</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:29">fsize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:34"><expr pos:start="129:9" pos:end="129:33"><name pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:9">c</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:17">wavpos</name></name> <operator pos:start="129:19" pos:end="129:19">=</operator> <call pos:start="129:21" pos:end="129:33"><name pos:start="129:21" pos:end="129:29">avio_tell</name><argument_list pos:start="129:30" pos:end="129:33">(<argument pos:start="129:31" pos:end="129:32"><expr pos:start="129:31" pos:end="129:32"><name pos:start="129:31" pos:end="129:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:43"><expr pos:start="131:9" pos:end="131:42"><call pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:17">avio_seek</name><argument_list pos:start="131:18" pos:end="131:42">(<argument pos:start="131:19" pos:end="131:20"><expr pos:start="131:19" pos:end="131:20"><name pos:start="131:19" pos:end="131:20">pb</name></expr></argument>, <argument pos:start="131:23" pos:end="131:31"><expr pos:start="131:23" pos:end="131:31"><name pos:start="131:23" pos:end="131:31"><name pos:start="131:23" pos:end="131:23">c</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:31">vidpos</name></name></expr></argument>, <argument pos:start="131:34" pos:end="131:41"><expr pos:start="131:34" pos:end="131:41"><name pos:start="131:34" pos:end="131:41">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:48">/* now we are ready: build format streams */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:47"><expr pos:start="139:5" pos:end="139:46"><name pos:start="139:5" pos:end="139:25"><name pos:start="139:5" pos:end="139:6">st</name><operator pos:start="139:7" pos:end="139:8">-&gt;</operator><name pos:start="139:9" pos:end="139:13">codec</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:25">codec_type</name></name> <operator pos:start="139:27" pos:end="139:27">=</operator> <name pos:start="139:29" pos:end="139:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:41"><expr pos:start="141:5" pos:end="141:40"><name pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:6">st</name><operator pos:start="141:7" pos:end="141:8">-&gt;</operator><name pos:start="141:9" pos:end="141:13">codec</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:23">codec_id</name></name>   <operator pos:start="141:27" pos:end="141:27">=</operator> <name pos:start="141:29" pos:end="141:40">CODEC_ID_DXA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:30"><expr pos:start="143:5" pos:end="143:29"><name pos:start="143:5" pos:end="143:20"><name pos:start="143:5" pos:end="143:6">st</name><operator pos:start="143:7" pos:end="143:8">-&gt;</operator><name pos:start="143:9" pos:end="143:13">codec</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">width</name></name>      <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:29">w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:30"><expr pos:start="145:5" pos:end="145:29"><name pos:start="145:5" pos:end="145:21"><name pos:start="145:5" pos:end="145:6">st</name><operator pos:start="145:7" pos:end="145:8">-&gt;</operator><name pos:start="145:9" pos:end="145:13">codec</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:21">height</name></name>     <operator pos:start="145:27" pos:end="145:27">=</operator> <name pos:start="145:29" pos:end="145:29">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:49"><expr pos:start="147:5" pos:end="147:48"><call pos:start="147:5" pos:end="147:48"><name pos:start="147:5" pos:end="147:13">av_reduce</name><argument_list pos:start="147:14" pos:end="147:48">(<argument pos:start="147:15" pos:end="147:18"><expr pos:start="147:15" pos:end="147:18"><operator pos:start="147:15" pos:end="147:15">&amp;</operator><name pos:start="147:16" pos:end="147:18">den</name></expr></argument>, <argument pos:start="147:21" pos:end="147:24"><expr pos:start="147:21" pos:end="147:24"><operator pos:start="147:21" pos:end="147:21">&amp;</operator><name pos:start="147:22" pos:end="147:24">num</name></expr></argument>, <argument pos:start="147:27" pos:end="147:29"><expr pos:start="147:27" pos:end="147:29"><name pos:start="147:27" pos:end="147:29">den</name></expr></argument>, <argument pos:start="147:32" pos:end="147:34"><expr pos:start="147:32" pos:end="147:34"><name pos:start="147:32" pos:end="147:34">num</name></expr></argument>, <argument pos:start="147:37" pos:end="147:47"><expr pos:start="147:37" pos:end="147:47"><operator pos:start="147:37" pos:end="147:37">(</operator><literal type="number" pos:start="147:38" pos:end="147:40">1UL</literal><operator pos:start="147:41" pos:end="147:42">&lt;&lt;</operator><literal type="number" pos:start="147:43" pos:end="147:44">31</literal><operator pos:start="147:45" pos:end="147:45">)</operator><operator pos:start="147:46" pos:end="147:46">-</operator><literal type="number" pos:start="147:47" pos:end="147:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:38"><expr pos:start="149:5" pos:end="149:37"><call pos:start="149:5" pos:end="149:37"><name pos:start="149:5" pos:end="149:19">av_set_pts_info</name><argument_list pos:start="149:20" pos:end="149:37">(<argument pos:start="149:21" pos:end="149:22"><expr pos:start="149:21" pos:end="149:22"><name pos:start="149:21" pos:end="149:22">st</name></expr></argument>, <argument pos:start="149:25" pos:end="149:26"><expr pos:start="149:25" pos:end="149:26"><literal type="number" pos:start="149:25" pos:end="149:26">33</literal></expr></argument>, <argument pos:start="149:29" pos:end="149:31"><expr pos:start="149:29" pos:end="149:31"><name pos:start="149:29" pos:end="149:31">num</name></expr></argument>, <argument pos:start="149:34" pos:end="149:36"><expr pos:start="149:34" pos:end="149:36"><name pos:start="149:34" pos:end="149:36">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="151:5" pos:end="157:7">/* flags &amp; 0x80 means that image is interlaced,

     * flags &amp; 0x40 means that image has double height

     * either way set true height

     */</comment>

    <if_stmt pos:start="159:5" pos:end="163:5"><if pos:start="159:5" pos:end="163:5">if<condition pos:start="159:7" pos:end="159:20">(<expr pos:start="159:8" pos:end="159:19"><name pos:start="159:8" pos:end="159:12">flags</name> <operator pos:start="159:14" pos:end="159:14">&amp;</operator> <literal type="number" pos:start="159:16" pos:end="159:19">0xC0</literal></expr>)</condition><block pos:start="159:21" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:32">

        <expr_stmt pos:start="161:9" pos:end="161:32"><expr pos:start="161:9" pos:end="161:31"><name pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:10">st</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:17">codec</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:25">height</name></name> <operator pos:start="161:27" pos:end="161:29">&gt;&gt;=</operator> <literal type="number" pos:start="161:31" pos:end="161:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:31"><expr pos:start="165:5" pos:end="165:30"><name pos:start="165:5" pos:end="165:14"><name pos:start="165:5" pos:end="165:5">c</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:14">readvid</name></name> <operator pos:start="165:16" pos:end="165:16">=</operator> <operator pos:start="165:18" pos:end="165:18">!</operator><name pos:start="165:19" pos:end="165:30"><name pos:start="165:19" pos:end="165:19">c</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:30">has_sound</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:31"><expr pos:start="167:5" pos:end="167:30"><name pos:start="167:5" pos:end="167:13"><name pos:start="167:5" pos:end="167:5">c</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:13">vidpos</name></name>  <operator pos:start="167:16" pos:end="167:16">=</operator> <call pos:start="167:18" pos:end="167:30"><name pos:start="167:18" pos:end="167:26">avio_tell</name><argument_list pos:start="167:27" pos:end="167:30">(<argument pos:start="167:28" pos:end="167:29"><expr pos:start="167:28" pos:end="167:29"><name pos:start="167:28" pos:end="167:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:22"><expr pos:start="169:5" pos:end="169:21"><name pos:start="169:5" pos:end="169:17"><name pos:start="169:5" pos:end="169:5">s</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:17">start_time</name></name> <operator pos:start="169:19" pos:end="169:19">=</operator> <literal type="number" pos:start="169:21" pos:end="169:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:64"><expr pos:start="171:5" pos:end="171:63"><name pos:start="171:5" pos:end="171:15"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:15">duration</name></name> <operator pos:start="171:17" pos:end="171:17">=</operator> <operator pos:start="171:19" pos:end="171:19">(</operator><name pos:start="171:20" pos:end="171:26">int64_t</name><operator pos:start="171:27" pos:end="171:27">)</operator><name pos:start="171:28" pos:end="171:36"><name pos:start="171:28" pos:end="171:28">c</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:36">frames</name></name> <operator pos:start="171:38" pos:end="171:38">*</operator> <name pos:start="171:40" pos:end="171:51">AV_TIME_BASE</name> <operator pos:start="171:53" pos:end="171:53">*</operator> <name pos:start="171:55" pos:end="171:57">num</name> <operator pos:start="171:59" pos:end="171:59">/</operator> <name pos:start="171:61" pos:end="171:63">den</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:55"><expr pos:start="173:5" pos:end="173:54"><call pos:start="173:5" pos:end="173:54"><name pos:start="173:5" pos:end="173:10">av_log</name><argument_list pos:start="173:11" pos:end="173:54">(<argument pos:start="173:12" pos:end="173:12"><expr pos:start="173:12" pos:end="173:12"><name pos:start="173:12" pos:end="173:12">s</name></expr></argument>, <argument pos:start="173:15" pos:end="173:26"><expr pos:start="173:15" pos:end="173:26"><name pos:start="173:15" pos:end="173:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="173:29" pos:end="173:43"><expr pos:start="173:29" pos:end="173:43"><literal type="string" pos:start="173:29" pos:end="173:43">"%d frame(s)\n"</literal></expr></argument>,<argument pos:start="173:45" pos:end="173:53"><expr pos:start="173:45" pos:end="173:53"><name pos:start="173:45" pos:end="173:53"><name pos:start="173:45" pos:end="173:45">c</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:53">frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
