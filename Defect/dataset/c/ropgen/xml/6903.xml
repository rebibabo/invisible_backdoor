<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6903.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">usb_linux_update_endp_table</name><parameter_list pos:start="1:39" pos:end="1:56">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:52">USBHostDevice</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:24">descriptors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:17">devep</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:20" pos:end="7:23">type</name></decl>, <decl pos:start="7:26" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:26" pos:end="7:38">configuration</name></decl>, <decl pos:start="7:41" pos:end="7:53"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:41" pos:end="7:53">alt_interface</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:27">usb_ctrltransfer</name></name></type> <name pos:start="9:29" pos:end="9:30">ct</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">interface</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:22">ret</name></decl>, <decl pos:start="11:25" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:30">length</name></decl>, <decl pos:start="11:33" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:33" pos:end="11:33">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:6">ct</name><operator pos:start="15:7" pos:end="15:7">.</operator><name pos:start="15:8" pos:end="15:19">bRequestType</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:32">USB_DIR_IN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:6">ct</name><operator pos:start="17:7" pos:end="17:7">.</operator><name pos:start="17:8" pos:end="17:15">bRequest</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:43">USB_REQ_GET_CONFIGURATION</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:6">ct</name><operator pos:start="19:7" pos:end="19:7">.</operator><name pos:start="19:8" pos:end="19:13">wValue</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:6">ct</name><operator pos:start="21:7" pos:end="21:7">.</operator><name pos:start="21:8" pos:end="21:13">wIndex</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:6">ct</name><operator pos:start="23:7" pos:end="23:7">.</operator><name pos:start="23:8" pos:end="23:14">wLength</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:6">ct</name><operator pos:start="25:7" pos:end="25:7">.</operator><name pos:start="25:8" pos:end="25:11">data</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">&amp;</operator><name pos:start="25:16" pos:end="25:28">configuration</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:6">ct</name><operator pos:start="27:7" pos:end="27:7">.</operator><name pos:start="27:8" pos:end="27:14">timeout</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:19">50</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:45"><name pos:start="31:11" pos:end="31:15">ioctl</name><argument_list pos:start="31:16" pos:end="31:45">(<argument pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">fd</name></name></expr></argument>, <argument pos:start="31:24" pos:end="31:39"><expr pos:start="31:24" pos:end="31:39"><name pos:start="31:24" pos:end="31:39">USBDEVFS_CONTROL</name></expr></argument>, <argument pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:44">ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><call pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:14">perror</name><argument_list pos:start="35:15" pos:end="35:45">(<argument pos:start="35:16" pos:end="35:44"><expr pos:start="35:16" pos:end="35:44"><literal type="string" pos:start="35:16" pos:end="35:44">"usb_linux_update_endp_table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:26">/* in address state */</comment>

    <if_stmt pos:start="45:5" pos:end="47:17"><if pos:start="45:5" pos:end="47:17">if <condition pos:start="45:8" pos:end="45:27">(<expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:21">configuration</name> <operator pos:start="45:23" pos:end="45:24">==</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:17"><block_content pos:start="47:9" pos:end="47:17">

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="53:33">/* get the desired configuration, interface, and endpoint descriptors

     * from device description */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:15">descriptors</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <operator pos:start="55:19" pos:end="55:19">&amp;</operator><name pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:27">descr</name><index pos:start="55:28" pos:end="55:31">[<expr pos:start="55:29" pos:end="55:30"><literal type="number" pos:start="55:29" pos:end="55:30">18</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:10">length</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:25"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:25">descr_len</name></name> <operator pos:start="57:27" pos:end="57:27">-</operator> <literal type="number" pos:start="57:29" pos:end="57:30">18</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:10"><expr pos:start="59:5" pos:end="59:9"><name pos:start="59:5" pos:end="59:5">i</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <literal type="number" pos:start="59:9" pos:end="59:9">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="65:44">(<expr pos:start="63:9" pos:end="65:43"><name pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:19">descriptors</name><index pos:start="63:20" pos:end="63:26">[<expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">+</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>]</index></name> <operator pos:start="63:28" pos:end="63:29">!=</operator> <name pos:start="63:31" pos:end="63:43">USB_DT_CONFIG</name> <operator pos:start="63:45" pos:end="63:46">||</operator>

        <name pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:19">descriptors</name><index pos:start="65:20" pos:end="65:26">[<expr pos:start="65:21" pos:end="65:25"><name pos:start="65:21" pos:end="65:21">i</name> <operator pos:start="65:23" pos:end="65:23">+</operator> <literal type="number" pos:start="65:25" pos:end="65:25">5</literal></expr>]</index></name> <operator pos:start="65:28" pos:end="65:29">!=</operator> <name pos:start="65:31" pos:end="65:43">configuration</name></expr>)</condition> <block pos:start="65:46" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:17">

        <expr_stmt pos:start="67:9" pos:end="67:61"><expr pos:start="67:9" pos:end="67:60"><call pos:start="67:9" pos:end="67:60"><name pos:start="67:9" pos:end="67:15">DPRINTF</name><argument_list pos:start="67:16" pos:end="67:60">(<argument pos:start="67:17" pos:end="67:59"><expr pos:start="67:17" pos:end="67:59"><literal type="string" pos:start="67:17" pos:end="67:59">"invalid descriptor data - configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:24"><expr pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:5">i</name> <operator pos:start="73:7" pos:end="73:8">+=</operator> <name pos:start="73:10" pos:end="73:23"><name pos:start="73:10" pos:end="73:20">descriptors</name><index pos:start="73:21" pos:end="73:23">[<expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">i</name></expr>]</index></name></expr>;</expr_stmt>



    <while pos:start="77:5" pos:end="201:5">while <condition pos:start="77:11" pos:end="77:22">(<expr pos:start="77:12" pos:end="77:21"><name pos:start="77:12" pos:end="77:12">i</name> <operator pos:start="77:14" pos:end="77:14">&lt;</operator> <name pos:start="77:16" pos:end="77:21">length</name></expr>)</condition> <block pos:start="77:24" pos:end="201:5">{<block_content pos:start="79:9" pos:end="199:9">

        <if_stmt pos:start="79:9" pos:end="89:9"><if pos:start="79:9" pos:end="89:9">if <condition pos:start="79:12" pos:end="83:38">(<expr pos:start="79:13" pos:end="83:37"><name pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:23">descriptors</name><index pos:start="79:24" pos:end="79:30">[<expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:25">i</name> <operator pos:start="79:27" pos:end="79:27">+</operator> <literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr>]</index></name> <operator pos:start="79:32" pos:end="79:33">!=</operator> <name pos:start="79:35" pos:end="79:50">USB_DT_INTERFACE</name> <operator pos:start="79:52" pos:end="79:53">||</operator>

            <operator pos:start="81:13" pos:end="81:13">(</operator><name pos:start="81:14" pos:end="81:31"><name pos:start="81:14" pos:end="81:24">descriptors</name><index pos:start="81:25" pos:end="81:31">[<expr pos:start="81:26" pos:end="81:30"><name pos:start="81:26" pos:end="81:26">i</name> <operator pos:start="81:28" pos:end="81:28">+</operator> <literal type="number" pos:start="81:30" pos:end="81:30">1</literal></expr>]</index></name> <operator pos:start="81:33" pos:end="81:34">==</operator> <name pos:start="81:36" pos:end="81:51">USB_DT_INTERFACE</name> <operator pos:start="81:53" pos:end="81:54">&amp;&amp;</operator>

             <name pos:start="83:14" pos:end="83:31"><name pos:start="83:14" pos:end="83:24">descriptors</name><index pos:start="83:25" pos:end="83:31">[<expr pos:start="83:26" pos:end="83:30"><name pos:start="83:26" pos:end="83:26">i</name> <operator pos:start="83:28" pos:end="83:28">+</operator> <literal type="number" pos:start="83:30" pos:end="83:30">4</literal></expr>]</index></name> <operator pos:start="83:33" pos:end="83:34">==</operator> <literal type="number" pos:start="83:36" pos:end="83:36">0</literal><operator pos:start="83:37" pos:end="83:37">)</operator></expr>)</condition> <block pos:start="83:40" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:21">

            <expr_stmt pos:start="85:13" pos:end="85:32"><expr pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:13">i</name> <operator pos:start="85:15" pos:end="85:16">+=</operator> <name pos:start="85:18" pos:end="85:31"><name pos:start="85:18" pos:end="85:28">descriptors</name><index pos:start="85:29" pos:end="85:31">[<expr pos:start="85:30" pos:end="85:30"><name pos:start="85:30" pos:end="85:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <continue pos:start="87:13" pos:end="87:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:17">interface</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:38"><name pos:start="93:21" pos:end="93:31">descriptors</name><index pos:start="93:32" pos:end="93:38">[<expr pos:start="93:33" pos:end="93:37"><name pos:start="93:33" pos:end="93:33">i</name> <operator pos:start="93:35" pos:end="93:35">+</operator> <literal type="number" pos:start="93:37" pos:end="93:37">2</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:59"><expr pos:start="97:9" pos:end="97:58"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:10">ct</name><operator pos:start="97:11" pos:end="97:11">.</operator><name pos:start="97:12" pos:end="97:23">bRequestType</name></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:36">USB_DIR_IN</name> <operator pos:start="97:38" pos:end="97:38">|</operator> <name pos:start="97:40" pos:end="97:58">USB_RECIP_INTERFACE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:44"><expr pos:start="99:9" pos:end="99:43"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:10">ct</name><operator pos:start="99:11" pos:end="99:11">.</operator><name pos:start="99:12" pos:end="99:19">bRequest</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:43">USB_REQ_GET_INTERFACE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:22"><expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:10">ct</name><operator pos:start="101:11" pos:end="101:11">.</operator><name pos:start="101:12" pos:end="101:17">wValue</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:30"><expr pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:10">ct</name><operator pos:start="103:11" pos:end="103:11">.</operator><name pos:start="103:12" pos:end="103:17">wIndex</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:29">interface</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:23"><expr pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:10">ct</name><operator pos:start="105:11" pos:end="105:11">.</operator><name pos:start="105:12" pos:end="105:18">wLength</name></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:10">ct</name><operator pos:start="107:11" pos:end="107:11">.</operator><name pos:start="107:12" pos:end="107:15">data</name></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <operator pos:start="107:19" pos:end="107:19">&amp;</operator><name pos:start="107:20" pos:end="107:32">alt_interface</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:24"><expr pos:start="109:9" pos:end="109:23"><name pos:start="109:9" pos:end="109:18"><name pos:start="109:9" pos:end="109:10">ct</name><operator pos:start="109:11" pos:end="109:11">.</operator><name pos:start="109:12" pos:end="109:18">timeout</name></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <literal type="number" pos:start="109:22" pos:end="109:23">50</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:50"><expr pos:start="113:9" pos:end="113:49"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:49"><name pos:start="113:15" pos:end="113:19">ioctl</name><argument_list pos:start="113:20" pos:end="113:49">(<argument pos:start="113:21" pos:end="113:25"><expr pos:start="113:21" pos:end="113:25"><name pos:start="113:21" pos:end="113:25"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:25">fd</name></name></expr></argument>, <argument pos:start="113:28" pos:end="113:43"><expr pos:start="113:28" pos:end="113:43"><name pos:start="113:28" pos:end="113:43">USBDEVFS_CONTROL</name></expr></argument>, <argument pos:start="113:46" pos:end="113:48"><expr pos:start="113:46" pos:end="113:48"><operator pos:start="113:46" pos:end="113:46">&amp;</operator><name pos:start="113:47" pos:end="113:48">ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:20">(<expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">ret</name> <operator pos:start="115:17" pos:end="115:17">&lt;</operator> <literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>)</condition> <block pos:start="115:22" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:38">

            <expr_stmt pos:start="117:13" pos:end="117:38"><expr pos:start="117:13" pos:end="117:37"><name pos:start="117:13" pos:end="117:25">alt_interface</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:37">interface</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="123:9" pos:end="125:31">/* the current interface descriptor is the active interface

         * and has endpoints */</comment>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:48">(<expr pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:23">descriptors</name><index pos:start="127:24" pos:end="127:30">[<expr pos:start="127:25" pos:end="127:29"><name pos:start="127:25" pos:end="127:25">i</name> <operator pos:start="127:27" pos:end="127:27">+</operator> <literal type="number" pos:start="127:29" pos:end="127:29">3</literal></expr>]</index></name> <operator pos:start="127:32" pos:end="127:33">!=</operator> <name pos:start="127:35" pos:end="127:47">alt_interface</name></expr>)</condition> <block pos:start="127:50" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:21">

            <expr_stmt pos:start="129:13" pos:end="129:32"><expr pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:13">i</name> <operator pos:start="129:15" pos:end="129:16">+=</operator> <name pos:start="129:18" pos:end="129:31"><name pos:start="129:18" pos:end="129:28">descriptors</name><index pos:start="129:29" pos:end="129:31">[<expr pos:start="129:30" pos:end="129:30"><name pos:start="129:30" pos:end="129:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <continue pos:start="131:13" pos:end="131:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="137:9" pos:end="137:38">/* advance to the endpoints */</comment>

        <while pos:start="139:9" pos:end="141:32">while <condition pos:start="139:15" pos:end="139:66">(<expr pos:start="139:16" pos:end="139:65"><name pos:start="139:16" pos:end="139:16">i</name> <operator pos:start="139:18" pos:end="139:18">&lt;</operator> <name pos:start="139:20" pos:end="139:25">length</name> <operator pos:start="139:27" pos:end="139:28">&amp;&amp;</operator> <name pos:start="139:30" pos:end="139:46"><name pos:start="139:30" pos:end="139:40">descriptors</name><index pos:start="139:41" pos:end="139:46">[<expr pos:start="139:42" pos:end="139:45"><name pos:start="139:42" pos:end="139:42">i</name> <operator pos:start="139:44" pos:end="139:44">+</operator><literal type="number" pos:start="139:45" pos:end="139:45">1</literal></expr>]</index></name> <operator pos:start="139:48" pos:end="139:49">!=</operator> <name pos:start="139:51" pos:end="139:65">USB_DT_ENDPOINT</name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:32"><block_content pos:start="141:13" pos:end="141:32">

            <expr_stmt pos:start="141:13" pos:end="141:32"><expr pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:13">i</name> <operator pos:start="141:15" pos:end="141:16">+=</operator> <name pos:start="141:18" pos:end="141:31"><name pos:start="141:18" pos:end="141:28">descriptors</name><index pos:start="141:29" pos:end="141:31">[<expr pos:start="141:30" pos:end="141:30"><name pos:start="141:30" pos:end="141:30">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></while>



        <if_stmt pos:start="145:9" pos:end="147:18"><if pos:start="145:9" pos:end="147:18">if <condition pos:start="145:12" pos:end="145:24">(<expr pos:start="145:13" pos:end="145:23"><name pos:start="145:13" pos:end="145:13">i</name> <operator pos:start="145:15" pos:end="145:16">&gt;=</operator> <name pos:start="145:18" pos:end="145:23">length</name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:18"><block_content pos:start="147:13" pos:end="147:18">

            <break pos:start="147:13" pos:end="147:18">break;</break></block_content></block></if></if_stmt>



        <while pos:start="151:9" pos:end="199:9">while <condition pos:start="151:15" pos:end="151:26">(<expr pos:start="151:16" pos:end="151:25"><name pos:start="151:16" pos:end="151:16">i</name> <operator pos:start="151:18" pos:end="151:18">&lt;</operator> <name pos:start="151:20" pos:end="151:25">length</name></expr>)</condition> <block pos:start="151:28" pos:end="199:9">{<block_content pos:start="153:13" pos:end="197:32">

            <if_stmt pos:start="153:13" pos:end="155:22"><if pos:start="153:13" pos:end="155:22">if <condition pos:start="153:16" pos:end="153:54">(<expr pos:start="153:17" pos:end="153:53"><name pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:27">descriptors</name><index pos:start="153:28" pos:end="153:34">[<expr pos:start="153:29" pos:end="153:33"><name pos:start="153:29" pos:end="153:29">i</name> <operator pos:start="153:31" pos:end="153:31">+</operator> <literal type="number" pos:start="153:33" pos:end="153:33">1</literal></expr>]</index></name> <operator pos:start="153:36" pos:end="153:37">!=</operator> <name pos:start="153:39" pos:end="153:53">USB_DT_ENDPOINT</name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:22"><block_content pos:start="155:17" pos:end="155:22">

                <break pos:start="155:17" pos:end="155:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:39"><expr pos:start="159:13" pos:end="159:38"><name pos:start="159:13" pos:end="159:17">devep</name> <operator pos:start="159:19" pos:end="159:19">=</operator> <name pos:start="159:21" pos:end="159:38"><name pos:start="159:21" pos:end="159:31">descriptors</name><index pos:start="159:32" pos:end="159:38">[<expr pos:start="159:33" pos:end="159:37"><name pos:start="159:33" pos:end="159:33">i</name> <operator pos:start="159:35" pos:end="159:35">+</operator> <literal type="number" pos:start="159:37" pos:end="159:37">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <switch pos:start="161:13" pos:end="189:13">switch <condition pos:start="161:20" pos:end="161:45">(<expr pos:start="161:21" pos:end="161:44"><name pos:start="161:21" pos:end="161:38"><name pos:start="161:21" pos:end="161:31">descriptors</name><index pos:start="161:32" pos:end="161:38">[<expr pos:start="161:33" pos:end="161:37"><name pos:start="161:33" pos:end="161:33">i</name> <operator pos:start="161:35" pos:end="161:35">+</operator> <literal type="number" pos:start="161:37" pos:end="161:37">3</literal></expr>]</index></name> <operator pos:start="161:40" pos:end="161:40">&amp;</operator> <literal type="number" pos:start="161:42" pos:end="161:44">0x3</literal></expr>)</condition> <block pos:start="161:47" pos:end="189:13">{<block_content pos:start="163:13" pos:end="184:22">

            <case pos:start="163:13" pos:end="163:22">case <expr pos:start="163:18" pos:end="163:21"><literal type="number" pos:start="163:18" pos:end="163:21">0x00</literal></expr>:</case>

                <expr_stmt pos:start="165:17" pos:end="165:49"><expr pos:start="165:17" pos:end="165:48"><name pos:start="165:17" pos:end="165:20">type</name> <operator pos:start="165:22" pos:end="165:22">=</operator> <name pos:start="165:24" pos:end="165:48">USBDEVFS_URB_TYPE_CONTROL</name></expr>;</expr_stmt>

                <break pos:start="167:17" pos:end="167:22">break;</break>

            <case pos:start="169:13" pos:end="169:22">case <expr pos:start="169:18" pos:end="169:21"><literal type="number" pos:start="169:18" pos:end="169:21">0x01</literal></expr>:</case>

                <expr_stmt pos:start="171:17" pos:end="171:45"><expr pos:start="171:17" pos:end="171:44"><name pos:start="171:17" pos:end="171:20">type</name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:44">USBDEVFS_URB_TYPE_ISO</name></expr>;</expr_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break>

            <case pos:start="175:13" pos:end="175:22">case <expr pos:start="175:18" pos:end="175:21"><literal type="number" pos:start="175:18" pos:end="175:21">0x02</literal></expr>:</case>


                <break pos:start="178:17" pos:end="178:22">break;</break>

            <case pos:start="180:13" pos:end="180:22">case <expr pos:start="180:18" pos:end="180:21"><literal type="number" pos:start="180:18" pos:end="180:21">0x03</literal></expr>:</case>

                <expr_stmt pos:start="182:17" pos:end="182:51"><expr pos:start="182:17" pos:end="182:50"><name pos:start="182:17" pos:end="182:20">type</name> <operator pos:start="182:22" pos:end="182:22">=</operator> <name pos:start="182:24" pos:end="182:50">USBDEVFS_URB_TYPE_INTERRUPT</name></expr>;</expr_stmt>

                <break pos:start="184:17" pos:end="184:22">break;</break>




            </block_content>}</block></switch>

            <expr_stmt pos:start="191:13" pos:end="191:57"><expr pos:start="191:13" pos:end="191:56"><name pos:start="191:13" pos:end="191:44"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:25">endp_table</name><index pos:start="191:26" pos:end="191:44">[<expr pos:start="191:27" pos:end="191:43"><operator pos:start="191:27" pos:end="191:27">(</operator><name pos:start="191:28" pos:end="191:32">devep</name> <operator pos:start="191:34" pos:end="191:34">&amp;</operator> <literal type="number" pos:start="191:36" pos:end="191:38">0xf</literal><operator pos:start="191:39" pos:end="191:39">)</operator> <operator pos:start="191:41" pos:end="191:41">-</operator> <literal type="number" pos:start="191:43" pos:end="191:43">1</literal></expr>]</index></name><operator pos:start="191:45" pos:end="191:45">.</operator><name pos:start="191:46" pos:end="191:49">type</name> <operator pos:start="191:51" pos:end="191:51">=</operator> <name pos:start="191:53" pos:end="191:56">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:56"><expr pos:start="193:13" pos:end="193:55"><name pos:start="193:13" pos:end="193:44"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:25">endp_table</name><index pos:start="193:26" pos:end="193:44">[<expr pos:start="193:27" pos:end="193:43"><operator pos:start="193:27" pos:end="193:27">(</operator><name pos:start="193:28" pos:end="193:32">devep</name> <operator pos:start="193:34" pos:end="193:34">&amp;</operator> <literal type="number" pos:start="193:36" pos:end="193:38">0xf</literal><operator pos:start="193:39" pos:end="193:39">)</operator> <operator pos:start="193:41" pos:end="193:41">-</operator> <literal type="number" pos:start="193:43" pos:end="193:43">1</literal></expr>]</index></name><operator pos:start="193:45" pos:end="193:45">.</operator><name pos:start="193:46" pos:end="193:51">halted</name> <operator pos:start="193:53" pos:end="193:53">=</operator> <literal type="number" pos:start="193:55" pos:end="193:55">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:32"><expr pos:start="197:13" pos:end="197:31"><name pos:start="197:13" pos:end="197:13">i</name> <operator pos:start="197:15" pos:end="197:16">+=</operator> <name pos:start="197:18" pos:end="197:31"><name pos:start="197:18" pos:end="197:28">descriptors</name><index pos:start="197:29" pos:end="197:31">[<expr pos:start="197:30" pos:end="197:30"><name pos:start="197:30" pos:end="197:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>

    <return pos:start="203:5" pos:end="203:13">return <expr pos:start="203:12" pos:end="203:12"><literal type="number" pos:start="203:12" pos:end="203:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
