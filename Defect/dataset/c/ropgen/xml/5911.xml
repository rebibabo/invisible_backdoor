<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5911.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_dref</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:69">MOV_atom_t</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">entries</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><call pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">get_be32</name><argument_list pos:start="13:13" pos:end="13:16">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="13:19" pos:end="13:36">// version + flags</comment>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:11">entries</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:26"><name pos:start="15:15" pos:end="15:22">get_be32</name><argument_list pos:start="15:23" pos:end="15:26">(<argument pos:start="15:24" pos:end="15:25"><expr pos:start="15:24" pos:end="15:25"><name pos:start="15:24" pos:end="15:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:49">(<expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:15">entries</name> <operator pos:start="17:17" pos:end="17:18">&gt;=</operator> <name pos:start="17:20" pos:end="17:27">UINT_MAX</name> <operator pos:start="17:29" pos:end="17:29">/</operator> <sizeof pos:start="17:31" pos:end="17:48">sizeof<argument_list pos:start="17:37" pos:end="17:48">(<argument pos:start="17:38" pos:end="17:47"><expr pos:start="17:38" pos:end="17:47"><operator pos:start="17:38" pos:end="17:38">*</operator><name pos:start="17:39" pos:end="17:47"><name pos:start="17:39" pos:end="17:40">sc</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:47">drefs</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:6">sc</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:19">drefs_count</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:29">entries</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:6">sc</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:13">drefs</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:56"><name pos:start="23:17" pos:end="23:26">av_mallocz</name><argument_list pos:start="23:27" pos:end="23:56">(<argument pos:start="23:28" pos:end="23:55"><expr pos:start="23:28" pos:end="23:55"><name pos:start="23:28" pos:end="23:34">entries</name> <operator pos:start="23:36" pos:end="23:36">*</operator> <sizeof pos:start="23:38" pos:end="23:55">sizeof<argument_list pos:start="23:44" pos:end="23:55">(<argument pos:start="23:45" pos:end="23:54"><expr pos:start="23:45" pos:end="23:54"><operator pos:start="23:45" pos:end="23:45">*</operator><name pos:start="23:46" pos:end="23:54"><name pos:start="23:46" pos:end="23:47">sc</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:54">drefs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="123:5">for <control pos:start="27:9" pos:end="27:41">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:36"><expr pos:start="27:17" pos:end="27:35"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:35"><name pos:start="27:21" pos:end="27:22">sc</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:35">drefs_count</name></name></expr>;</condition> <incr pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:38">i</name><operator pos:start="27:39" pos:end="27:40">++</operator></expr></incr>)</control> <block pos:start="27:43" pos:end="123:5">{<block_content pos:start="29:9" pos:end="121:38">

        <decl_stmt pos:start="29:9" pos:end="29:41"><decl pos:start="29:9" pos:end="29:40"><type pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:18">MOV_dref_t</name> <modifier pos:start="29:20" pos:end="29:20">*</modifier></type><name pos:start="29:21" pos:end="29:24">dref</name> <init pos:start="29:26" pos:end="29:40">= <expr pos:start="29:28" pos:end="29:40"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:30">sc</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:37">drefs</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:37"><decl pos:start="31:9" pos:end="31:36"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">uint32_t</name></type> <name pos:start="31:18" pos:end="31:21">size</name> <init pos:start="31:23" pos:end="31:36">= <expr pos:start="31:25" pos:end="31:36"><call pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:32">get_be32</name><argument_list pos:start="31:33" pos:end="31:36">(<argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><name pos:start="31:34" pos:end="31:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:49"><decl pos:start="33:9" pos:end="33:48"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">offset_t</name></type> <name pos:start="33:18" pos:end="33:21">next</name> <init pos:start="33:23" pos:end="33:48">= <expr pos:start="33:25" pos:end="33:48"><call pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:33">url_ftell</name><argument_list pos:start="33:34" pos:end="33:37">(<argument pos:start="33:35" pos:end="33:36"><expr pos:start="33:35" pos:end="33:36"><name pos:start="33:35" pos:end="33:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="33:39" pos:end="33:39">+</operator> <name pos:start="33:41" pos:end="33:44">size</name> <operator pos:start="33:46" pos:end="33:46">-</operator> <literal type="number" pos:start="33:48" pos:end="33:48">4</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:12">dref</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:18">type</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:29">get_le32</name><argument_list pos:start="37:30" pos:end="37:33">(<argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><name pos:start="37:31" pos:end="37:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:16">get_be32</name><argument_list pos:start="39:17" pos:end="39:20">(<argument pos:start="39:18" pos:end="39:19"><expr pos:start="39:18" pos:end="39:19"><name pos:start="39:18" pos:end="39:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="39:23" pos:end="39:40">// version + flags</comment>

        <expr_stmt pos:start="41:9" pos:end="41:72"><expr pos:start="41:9" pos:end="41:71"><call pos:start="41:9" pos:end="41:71"><name pos:start="41:9" pos:end="41:15">dprintf</name><argument_list pos:start="41:16" pos:end="41:71">(<argument pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:21">fc</name></name></expr></argument>, <argument pos:start="41:24" pos:end="41:44"><expr pos:start="41:24" pos:end="41:44"><literal type="string" pos:start="41:24" pos:end="41:44">"type %.4s size %d\n"</literal></expr></argument>, <argument pos:start="41:47" pos:end="41:64"><expr pos:start="41:47" pos:end="41:64"><operator pos:start="41:47" pos:end="41:47">(</operator><name pos:start="41:48" pos:end="41:51">char</name><operator pos:start="41:52" pos:end="41:52">*</operator><operator pos:start="41:53" pos:end="41:53">)</operator><operator pos:start="41:54" pos:end="41:54">&amp;</operator><name pos:start="41:55" pos:end="41:64"><name pos:start="41:55" pos:end="41:58">dref</name><operator pos:start="41:59" pos:end="41:60">-&gt;</operator><name pos:start="41:61" pos:end="41:64">type</name></name></expr></argument>, <argument pos:start="41:67" pos:end="41:70"><expr pos:start="41:67" pos:end="41:70"><name pos:start="41:67" pos:end="41:70">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="119:9"><if pos:start="45:9" pos:end="119:9">if <condition pos:start="45:12" pos:end="45:63">(<expr pos:start="45:13" pos:end="45:62"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:16">dref</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:22">type</name></name> <operator pos:start="45:24" pos:end="45:25">==</operator> <call pos:start="45:27" pos:end="45:48"><name pos:start="45:27" pos:end="45:31">MKTAG</name><argument_list pos:start="45:32" pos:end="45:48">(<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><literal type="char" pos:start="45:33" pos:end="45:35">'a'</literal></expr></argument>,<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><literal type="char" pos:start="45:37" pos:end="45:39">'l'</literal></expr></argument>,<argument pos:start="45:41" pos:end="45:43"><expr pos:start="45:41" pos:end="45:43"><literal type="char" pos:start="45:41" pos:end="45:43">'i'</literal></expr></argument>,<argument pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><literal type="char" pos:start="45:45" pos:end="45:47">'s'</literal></expr></argument>)</argument_list></call> <operator pos:start="45:50" pos:end="45:51">&amp;&amp;</operator> <name pos:start="45:53" pos:end="45:56">size</name> <operator pos:start="45:58" pos:end="45:58">&gt;</operator> <literal type="number" pos:start="45:60" pos:end="45:62">150</literal></expr>)</condition> <block pos:start="45:65" pos:end="119:9">{<block_content pos:start="49:13" pos:end="117:13">

            <comment type="block" pos:start="47:13" pos:end="47:40">/* macintosh alias record */</comment>

            <decl_stmt pos:start="49:13" pos:end="49:37"><decl pos:start="49:13" pos:end="49:31"><type pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">uint16_t</name></type> <name pos:start="49:22" pos:end="49:31">volume_len</name></decl>, <decl pos:start="49:34" pos:end="49:36"><type ref="prev" pos:start="49:13" pos:end="49:20"/><name pos:start="49:34" pos:end="49:36">len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:28"><decl pos:start="51:13" pos:end="51:27"><type pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">char</name></type> <name pos:start="51:18" pos:end="51:27"><name pos:start="51:18" pos:end="51:23">volume</name><index pos:start="51:24" pos:end="51:27">[<expr pos:start="51:25" pos:end="51:26"><literal type="number" pos:start="51:25" pos:end="51:26">28</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:25"><decl pos:start="53:13" pos:end="53:24"><type pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:19">int16_t</name></type> <name pos:start="53:21" pos:end="53:24">type</name></decl>;</decl_stmt>



            <expr_stmt pos:start="57:13" pos:end="57:30"><expr pos:start="57:13" pos:end="57:29"><call pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:21">url_fskip</name><argument_list pos:start="57:22" pos:end="57:29">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">pb</name></expr></argument>, <argument pos:start="57:27" pos:end="57:28"><expr pos:start="57:27" pos:end="57:28"><literal type="number" pos:start="57:27" pos:end="57:28">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:22">volume_len</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:33">get_byte</name><argument_list pos:start="61:34" pos:end="61:37">(<argument pos:start="61:35" pos:end="61:36"><expr pos:start="61:35" pos:end="61:36"><name pos:start="61:35" pos:end="61:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:47"><expr pos:start="63:13" pos:end="63:46"><name pos:start="63:13" pos:end="63:22">volume_len</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:46"><name pos:start="63:26" pos:end="63:30">FFMIN</name><argument_list pos:start="63:31" pos:end="63:46">(<argument pos:start="63:32" pos:end="63:41"><expr pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:41">volume_len</name></expr></argument>, <argument pos:start="63:44" pos:end="63:45"><expr pos:start="63:44" pos:end="63:45"><literal type="number" pos:start="63:44" pos:end="63:45">27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:39"><expr pos:start="65:13" pos:end="65:38"><call pos:start="65:13" pos:end="65:38"><name pos:start="65:13" pos:end="65:22">get_buffer</name><argument_list pos:start="65:23" pos:end="65:38">(<argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><name pos:start="65:24" pos:end="65:25">pb</name></expr></argument>, <argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">volume</name></expr></argument>, <argument pos:start="65:36" pos:end="65:37"><expr pos:start="65:36" pos:end="65:37"><literal type="number" pos:start="65:36" pos:end="65:37">27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:18">volume</name><index pos:start="67:19" pos:end="67:30">[<expr pos:start="67:20" pos:end="67:29"><name pos:start="67:20" pos:end="67:29">volume_len</name></expr>]</index></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:83"><expr pos:start="69:13" pos:end="69:82"><call pos:start="69:13" pos:end="69:82"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="69:82">(<argument pos:start="69:20" pos:end="69:24"><expr pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:20">c</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:24">fc</name></name></expr></argument>, <argument pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="69:41" pos:end="69:61"><expr pos:start="69:41" pos:end="69:61"><literal type="string" pos:start="69:41" pos:end="69:61">"volume %s, len %d\n"</literal></expr></argument>, <argument pos:start="69:64" pos:end="69:69"><expr pos:start="69:64" pos:end="69:69"><name pos:start="69:64" pos:end="69:69">volume</name></expr></argument>, <argument pos:start="69:72" pos:end="69:81"><expr pos:start="69:72" pos:end="69:81"><name pos:start="69:72" pos:end="69:81">volume_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:31"><expr pos:start="73:13" pos:end="73:30"><call pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:21">url_fskip</name><argument_list pos:start="73:22" pos:end="73:30">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">pb</name></expr></argument>, <argument pos:start="73:27" pos:end="73:29"><expr pos:start="73:27" pos:end="73:29"><literal type="number" pos:start="73:27" pos:end="73:29">112</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="77:13" pos:end="117:13">for <control pos:start="77:17" pos:end="77:64">(<init pos:start="77:18" pos:end="77:26"><expr pos:start="77:18" pos:end="77:25"><name pos:start="77:18" pos:end="77:21">type</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr>;</init> <condition pos:start="77:28" pos:end="77:62"><expr pos:start="77:28" pos:end="77:61"><name pos:start="77:28" pos:end="77:31">type</name> <operator pos:start="77:33" pos:end="77:34">!=</operator> <operator pos:start="77:36" pos:end="77:36">-</operator><literal type="number" pos:start="77:37" pos:end="77:37">1</literal> <operator pos:start="77:39" pos:end="77:40">&amp;&amp;</operator> <call pos:start="77:42" pos:end="77:54"><name pos:start="77:42" pos:end="77:50">url_ftell</name><argument_list pos:start="77:51" pos:end="77:54">(<argument pos:start="77:52" pos:end="77:53"><expr pos:start="77:52" pos:end="77:53"><name pos:start="77:52" pos:end="77:53">pb</name></expr></argument>)</argument_list></call> <operator pos:start="77:56" pos:end="77:56">&lt;</operator> <name pos:start="77:58" pos:end="77:61">next</name></expr>;</condition> <incr/>)</control> <block pos:start="77:66" pos:end="117:13">{<block_content pos:start="79:17" pos:end="115:39">

                <expr_stmt pos:start="79:17" pos:end="79:36"><expr pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:20">type</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:35"><name pos:start="79:24" pos:end="79:31">get_be16</name><argument_list pos:start="79:32" pos:end="79:35">(<argument pos:start="79:33" pos:end="79:34"><expr pos:start="79:33" pos:end="79:34"><name pos:start="79:33" pos:end="79:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:35"><expr pos:start="81:17" pos:end="81:34"><name pos:start="81:17" pos:end="81:19">len</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:30">get_be16</name><argument_list pos:start="81:31" pos:end="81:34">(<argument pos:start="81:32" pos:end="81:33"><expr pos:start="81:32" pos:end="81:33"><name pos:start="81:32" pos:end="81:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:76"><expr pos:start="83:17" pos:end="83:75"><call pos:start="83:17" pos:end="83:75"><name pos:start="83:17" pos:end="83:22">av_log</name><argument_list pos:start="83:23" pos:end="83:75">(<argument pos:start="83:24" pos:end="83:28"><expr pos:start="83:24" pos:end="83:28"><name pos:start="83:24" pos:end="83:28"><name pos:start="83:24" pos:end="83:24">c</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:28">fc</name></name></expr></argument>, <argument pos:start="83:31" pos:end="83:42"><expr pos:start="83:31" pos:end="83:42"><name pos:start="83:31" pos:end="83:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="83:45" pos:end="83:63"><expr pos:start="83:45" pos:end="83:63"><literal type="string" pos:start="83:45" pos:end="83:63">"type %d, len %d\n"</literal></expr></argument>, <argument pos:start="83:66" pos:end="83:69"><expr pos:start="83:66" pos:end="83:69"><name pos:start="83:66" pos:end="83:69">type</name></expr></argument>, <argument pos:start="83:72" pos:end="83:74"><expr pos:start="83:72" pos:end="83:74"><name pos:start="83:72" pos:end="83:74">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="85:17" pos:end="87:29"><if pos:start="85:17" pos:end="87:29">if <condition pos:start="85:20" pos:end="85:26">(<expr pos:start="85:21" pos:end="85:25"><name pos:start="85:21" pos:end="85:23">len</name><operator pos:start="85:24" pos:end="85:24">&amp;</operator><literal type="number" pos:start="85:25" pos:end="85:25">1</literal></expr>)</condition><block type="pseudo" pos:start="87:21" pos:end="87:29"><block_content pos:start="87:21" pos:end="87:29">

                    <expr_stmt pos:start="87:21" pos:end="87:29"><expr pos:start="87:21" pos:end="87:28"><name pos:start="87:21" pos:end="87:23">len</name> <operator pos:start="87:25" pos:end="87:26">+=</operator> <literal type="number" pos:start="87:28" pos:end="87:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="89:17" pos:end="115:39"><if pos:start="89:17" pos:end="113:17">if <condition pos:start="89:20" pos:end="89:30">(<expr pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:24">type</name> <operator pos:start="89:26" pos:end="89:27">==</operator> <literal type="number" pos:start="89:29" pos:end="89:29">2</literal></expr>)</condition> <block pos:start="89:32" pos:end="113:17">{<block_content pos:start="91:21" pos:end="111:73"> <comment type="line" pos:start="89:34" pos:end="89:49">// absolute path</comment>

                    <expr_stmt pos:start="91:21" pos:end="91:51"><expr pos:start="91:21" pos:end="91:50"><name pos:start="91:21" pos:end="91:30"><name pos:start="91:21" pos:end="91:24">dref</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:30">path</name></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <call pos:start="91:34" pos:end="91:50"><name pos:start="91:34" pos:end="91:43">av_mallocz</name><argument_list pos:start="91:44" pos:end="91:50">(<argument pos:start="91:45" pos:end="91:49"><expr pos:start="91:45" pos:end="91:49"><name pos:start="91:45" pos:end="91:47">len</name><operator pos:start="91:48" pos:end="91:48">+</operator><literal type="number" pos:start="91:49" pos:end="91:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:52"><expr pos:start="93:21" pos:end="93:51"><call pos:start="93:21" pos:end="93:51"><name pos:start="93:21" pos:end="93:30">get_buffer</name><argument_list pos:start="93:31" pos:end="93:51">(<argument pos:start="93:32" pos:end="93:33"><expr pos:start="93:32" pos:end="93:33"><name pos:start="93:32" pos:end="93:33">pb</name></expr></argument>, <argument pos:start="93:36" pos:end="93:45"><expr pos:start="93:36" pos:end="93:45"><name pos:start="93:36" pos:end="93:45"><name pos:start="93:36" pos:end="93:39">dref</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:45">path</name></name></expr></argument>, <argument pos:start="93:48" pos:end="93:50"><expr pos:start="93:48" pos:end="93:50"><name pos:start="93:48" pos:end="93:50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="95:21" pos:end="103:21"><if pos:start="95:21" pos:end="103:21">if <condition pos:start="95:24" pos:end="95:65">(<expr pos:start="95:25" pos:end="95:64"><operator pos:start="95:25" pos:end="95:25">!</operator><call pos:start="95:26" pos:end="95:64"><name pos:start="95:26" pos:end="95:32">strncmp</name><argument_list pos:start="95:33" pos:end="95:64">(<argument pos:start="95:34" pos:end="95:43"><expr pos:start="95:34" pos:end="95:43"><name pos:start="95:34" pos:end="95:43"><name pos:start="95:34" pos:end="95:37">dref</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:43">path</name></name></expr></argument>, <argument pos:start="95:46" pos:end="95:51"><expr pos:start="95:46" pos:end="95:51"><name pos:start="95:46" pos:end="95:51">volume</name></expr></argument>, <argument pos:start="95:54" pos:end="95:63"><expr pos:start="95:54" pos:end="95:63"><name pos:start="95:54" pos:end="95:63">volume_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:67" pos:end="103:21">{<block_content pos:start="97:25" pos:end="101:44">

                        <expr_stmt pos:start="97:25" pos:end="97:42"><expr pos:start="97:25" pos:end="97:41"><name pos:start="97:25" pos:end="97:27">len</name> <operator pos:start="97:29" pos:end="97:30">-=</operator> <name pos:start="97:32" pos:end="97:41">volume_len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:72"><expr pos:start="99:25" pos:end="99:71"><call pos:start="99:25" pos:end="99:71"><name pos:start="99:25" pos:end="99:31">memmove</name><argument_list pos:start="99:32" pos:end="99:71">(<argument pos:start="99:33" pos:end="99:42"><expr pos:start="99:33" pos:end="99:42"><name pos:start="99:33" pos:end="99:42"><name pos:start="99:33" pos:end="99:36">dref</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:42">path</name></name></expr></argument>, <argument pos:start="99:45" pos:end="99:65"><expr pos:start="99:45" pos:end="99:65"><name pos:start="99:45" pos:end="99:54"><name pos:start="99:45" pos:end="99:48">dref</name><operator pos:start="99:49" pos:end="99:50">-&gt;</operator><name pos:start="99:51" pos:end="99:54">path</name></name><operator pos:start="99:55" pos:end="99:55">+</operator><name pos:start="99:56" pos:end="99:65">volume_len</name></expr></argument>, <argument pos:start="99:68" pos:end="99:70"><expr pos:start="99:68" pos:end="99:70"><name pos:start="99:68" pos:end="99:70">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:44"><expr pos:start="101:25" pos:end="101:43"><name pos:start="101:25" pos:end="101:39"><name pos:start="101:25" pos:end="101:28">dref</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:34">path</name><index pos:start="101:35" pos:end="101:39">[<expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:38">len</name></expr>]</index></name> <operator pos:start="101:41" pos:end="101:41">=</operator> <literal type="number" pos:start="101:43" pos:end="101:43">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <for pos:start="105:21" pos:end="109:48">for <control pos:start="105:25" pos:end="105:45">(<init pos:start="105:26" pos:end="105:31"><expr pos:start="105:26" pos:end="105:30"><name pos:start="105:26" pos:end="105:26">j</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>;</init> <condition pos:start="105:33" pos:end="105:40"><expr pos:start="105:33" pos:end="105:39"><name pos:start="105:33" pos:end="105:33">j</name> <operator pos:start="105:35" pos:end="105:35">&lt;</operator> <name pos:start="105:37" pos:end="105:39">len</name></expr>;</condition> <incr pos:start="105:42" pos:end="105:44"><expr pos:start="105:42" pos:end="105:44"><name pos:start="105:42" pos:end="105:42">j</name><operator pos:start="105:43" pos:end="105:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:25" pos:end="109:48"><block_content pos:start="107:25" pos:end="109:48">

                        <if_stmt pos:start="107:25" pos:end="109:48"><if pos:start="107:25" pos:end="109:48">if <condition pos:start="107:28" pos:end="107:49">(<expr pos:start="107:29" pos:end="107:48"><name pos:start="107:29" pos:end="107:41"><name pos:start="107:29" pos:end="107:32">dref</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:38">path</name><index pos:start="107:39" pos:end="107:41">[<expr pos:start="107:40" pos:end="107:40"><name pos:start="107:40" pos:end="107:40">j</name></expr>]</index></name> <operator pos:start="107:43" pos:end="107:44">==</operator> <literal type="char" pos:start="107:46" pos:end="107:48">':'</literal></expr>)</condition><block type="pseudo" pos:start="109:29" pos:end="109:48"><block_content pos:start="109:29" pos:end="109:48">

                            <expr_stmt pos:start="109:29" pos:end="109:48"><expr pos:start="109:29" pos:end="109:47"><name pos:start="109:29" pos:end="109:41"><name pos:start="109:29" pos:end="109:32">dref</name><operator pos:start="109:33" pos:end="109:34">-&gt;</operator><name pos:start="109:35" pos:end="109:38">path</name><index pos:start="109:39" pos:end="109:41">[<expr pos:start="109:40" pos:end="109:40"><name pos:start="109:40" pos:end="109:40">j</name></expr>]</index></name> <operator pos:start="109:43" pos:end="109:43">=</operator> <literal type="char" pos:start="109:45" pos:end="109:47">'/'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                    <expr_stmt pos:start="111:21" pos:end="111:73"><expr pos:start="111:21" pos:end="111:72"><call pos:start="111:21" pos:end="111:72"><name pos:start="111:21" pos:end="111:26">av_log</name><argument_list pos:start="111:27" pos:end="111:72">(<argument pos:start="111:28" pos:end="111:32"><expr pos:start="111:28" pos:end="111:32"><name pos:start="111:28" pos:end="111:32"><name pos:start="111:28" pos:end="111:28">c</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:32">fc</name></name></expr></argument>, <argument pos:start="111:35" pos:end="111:46"><expr pos:start="111:35" pos:end="111:46"><name pos:start="111:35" pos:end="111:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="111:49" pos:end="111:59"><expr pos:start="111:49" pos:end="111:59"><literal type="string" pos:start="111:49" pos:end="111:59">"path %s\n"</literal></expr></argument>, <argument pos:start="111:62" pos:end="111:71"><expr pos:start="111:62" pos:end="111:71"><name pos:start="111:62" pos:end="111:71"><name pos:start="111:62" pos:end="111:65">dref</name><operator pos:start="111:66" pos:end="111:67">-&gt;</operator><name pos:start="111:68" pos:end="111:71">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="113:19" pos:end="115:39">else<block type="pseudo" pos:start="115:21" pos:end="115:39"><block_content pos:start="115:21" pos:end="115:39">

                    <expr_stmt pos:start="115:21" pos:end="115:39"><expr pos:start="115:21" pos:end="115:38"><call pos:start="115:21" pos:end="115:38"><name pos:start="115:21" pos:end="115:29">url_fskip</name><argument_list pos:start="115:30" pos:end="115:38">(<argument pos:start="115:31" pos:end="115:32"><expr pos:start="115:31" pos:end="115:32"><name pos:start="115:31" pos:end="115:32">pb</name></expr></argument>, <argument pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><name pos:start="115:35" pos:end="115:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:38"><expr pos:start="121:9" pos:end="121:37"><call pos:start="121:9" pos:end="121:37"><name pos:start="121:9" pos:end="121:17">url_fseek</name><argument_list pos:start="121:18" pos:end="121:37">(<argument pos:start="121:19" pos:end="121:20"><expr pos:start="121:19" pos:end="121:20"><name pos:start="121:19" pos:end="121:20">pb</name></expr></argument>, <argument pos:start="121:23" pos:end="121:26"><expr pos:start="121:23" pos:end="121:26"><name pos:start="121:23" pos:end="121:26">next</name></expr></argument>, <argument pos:start="121:29" pos:end="121:36"><expr pos:start="121:29" pos:end="121:36"><name pos:start="121:29" pos:end="121:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
