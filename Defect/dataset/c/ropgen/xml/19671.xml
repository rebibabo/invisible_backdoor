<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19671.c" pos:tabs="8"><function pos:start="1:1" pos:end="285:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">new_video_stream</name><parameter_list pos:start="1:29" pos:end="1:49">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">oc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="285:1">{<block_content pos:start="5:5" pos:end="283:33">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:29">video_enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:8">enum</name> <name pos:start="9:10" pos:end="9:16">CodecID</name></name></type> <name pos:start="9:18" pos:end="9:25">codec_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVCodec</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:18">codec</name><init pos:start="11:19" pos:end="11:24">= <expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:96"><expr pos:start="15:5" pos:end="15:95"><name pos:start="15:5" pos:end="15:6">st</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:95"><name pos:start="15:10" pos:end="15:22">av_new_stream</name><argument_list pos:start="15:23" pos:end="15:95">(<argument pos:start="15:24" pos:end="15:25"><expr pos:start="15:24" pos:end="15:25"><name pos:start="15:24" pos:end="15:25">oc</name></expr></argument>, <argument pos:start="15:28" pos:end="15:94"><expr pos:start="15:28" pos:end="15:94"><ternary pos:start="15:28" pos:end="15:94"><condition pos:start="15:28" pos:end="15:61"><expr pos:start="15:28" pos:end="15:59"><name pos:start="15:28" pos:end="15:41"><name pos:start="15:28" pos:end="15:29">oc</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:41">nb_streams</name></name> <operator pos:start="15:43" pos:end="15:43">&lt;</operator> <name pos:start="15:45" pos:end="15:59">nb_streamid_map</name></expr> ?</condition><then pos:start="15:63" pos:end="15:90"> <expr pos:start="15:63" pos:end="15:90"><name pos:start="15:63" pos:end="15:90"><name pos:start="15:63" pos:end="15:74">streamid_map</name><index pos:start="15:75" pos:end="15:90">[<expr pos:start="15:76" pos:end="15:89"><name pos:start="15:76" pos:end="15:89"><name pos:start="15:76" pos:end="15:77">oc</name><operator pos:start="15:78" pos:end="15:79">-&gt;</operator><name pos:start="15:80" pos:end="15:89">nb_streams</name></name></expr>]</index></name></expr> </then><else pos:start="15:92" pos:end="15:94">: <expr pos:start="15:94" pos:end="15:94"><literal type="number" pos:start="15:94" pos:end="15:94">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:11">st</name></expr>)</condition> <block pos:start="17:14" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:23">

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><call pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="19:51">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>, <argument pos:start="19:25" pos:end="19:50"><expr pos:start="19:25" pos:end="19:50"><literal type="string" pos:start="19:25" pos:end="19:50">"Could not alloc stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><call pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:19">ffmpeg_exit</name><argument_list pos:start="21:20" pos:end="21:22">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:111"><expr pos:start="27:5" pos:end="27:110"><name pos:start="27:5" pos:end="27:17">output_codecs</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:110"><name pos:start="27:21" pos:end="27:30">grow_array</name><argument_list pos:start="27:31" pos:end="27:110">(<argument pos:start="27:32" pos:end="27:44"><expr pos:start="27:32" pos:end="27:44"><name pos:start="27:32" pos:end="27:44">output_codecs</name></expr></argument>, <argument pos:start="27:47" pos:end="27:68"><expr pos:start="27:47" pos:end="27:68"><sizeof pos:start="27:47" pos:end="27:68">sizeof<argument_list pos:start="27:53" pos:end="27:68">(<argument pos:start="27:54" pos:end="27:67"><expr pos:start="27:54" pos:end="27:67"><operator pos:start="27:54" pos:end="27:54">*</operator><name pos:start="27:55" pos:end="27:67">output_codecs</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:71" pos:end="27:87"><expr pos:start="27:71" pos:end="27:87"><operator pos:start="27:71" pos:end="27:71">&amp;</operator><name pos:start="27:72" pos:end="27:87">nb_output_codecs</name></expr></argument>, <argument pos:start="27:90" pos:end="27:109"><expr pos:start="27:90" pos:end="27:109"><name pos:start="27:90" pos:end="27:105">nb_output_codecs</name> <operator pos:start="27:107" pos:end="27:107">+</operator> <literal type="number" pos:start="27:109" pos:end="27:109">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="49:5"><if pos:start="29:5" pos:end="49:5">if<condition pos:start="29:7" pos:end="29:26">(<expr pos:start="29:8" pos:end="29:25"><operator pos:start="29:8" pos:end="29:8">!</operator><name pos:start="29:9" pos:end="29:25">video_stream_copy</name></expr>)</condition><block pos:start="29:27" pos:end="49:5">{<block_content pos:start="31:9" pos:end="47:9">

        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:29">(<expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:28">video_codec_name</name></expr>)</condition> <block pos:start="31:31" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:54">

            <expr_stmt pos:start="33:13" pos:end="35:98"><expr pos:start="33:13" pos:end="35:97"><name pos:start="33:13" pos:end="33:20">codec_id</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="35:97"><name pos:start="33:24" pos:end="33:40">find_codec_or_die</name><argument_list pos:start="33:41" pos:end="35:97">(<argument pos:start="33:42" pos:end="33:57"><expr pos:start="33:42" pos:end="33:57"><name pos:start="33:42" pos:end="33:57">video_codec_name</name></expr></argument>, <argument pos:start="33:60" pos:end="33:77"><expr pos:start="33:60" pos:end="33:77"><name pos:start="33:60" pos:end="33:77">AVMEDIA_TYPE_VIDEO</name></expr></argument>, <argument pos:start="33:80" pos:end="33:80"><expr pos:start="33:80" pos:end="33:80"><literal type="number" pos:start="33:80" pos:end="33:80">1</literal></expr></argument>,

                                         <argument pos:start="35:42" pos:end="35:96"><expr pos:start="35:42" pos:end="35:96"><name pos:start="35:42" pos:end="35:73"><name pos:start="35:42" pos:end="35:53">avcodec_opts</name><index pos:start="35:54" pos:end="35:73">[<expr pos:start="35:55" pos:end="35:72"><name pos:start="35:55" pos:end="35:72">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="35:74" pos:end="35:75">-&gt;</operator><name pos:start="35:76" pos:end="35:96">strict_std_compliance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:67"><expr pos:start="37:13" pos:end="37:66"><name pos:start="37:13" pos:end="37:17">codec</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:66"><name pos:start="37:21" pos:end="37:48">avcodec_find_encoder_by_name</name><argument_list pos:start="37:49" pos:end="37:66">(<argument pos:start="37:50" pos:end="37:65"><expr pos:start="37:50" pos:end="37:65"><name pos:start="37:50" pos:end="37:65">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:54"><expr pos:start="39:13" pos:end="39:53"><name pos:start="39:13" pos:end="39:45"><name pos:start="39:13" pos:end="39:25">output_codecs</name><index pos:start="39:26" pos:end="39:45">[<expr pos:start="39:27" pos:end="39:44"><name pos:start="39:27" pos:end="39:42">nb_output_codecs</name><operator pos:start="39:43" pos:end="39:43">-</operator><literal type="number" pos:start="39:44" pos:end="39:44">1</literal></expr>]</index></name> <operator pos:start="39:47" pos:end="39:47">=</operator> <name pos:start="39:49" pos:end="39:53">codec</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="47:9">else <block pos:start="41:16" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:51">

            <expr_stmt pos:start="43:13" pos:end="43:97"><expr pos:start="43:13" pos:end="43:96"><name pos:start="43:13" pos:end="43:20">codec_id</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:96"><name pos:start="43:24" pos:end="43:37">av_guess_codec</name><argument_list pos:start="43:38" pos:end="43:96">(<argument pos:start="43:39" pos:end="43:49"><expr pos:start="43:39" pos:end="43:49"><name pos:start="43:39" pos:end="43:49"><name pos:start="43:39" pos:end="43:40">oc</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:49">oformat</name></name></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><name pos:start="43:52" pos:end="43:55">NULL</name></expr></argument>, <argument pos:start="43:58" pos:end="43:69"><expr pos:start="43:58" pos:end="43:69"><name pos:start="43:58" pos:end="43:69"><name pos:start="43:58" pos:end="43:59">oc</name><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:69">filename</name></name></expr></argument>, <argument pos:start="43:72" pos:end="43:75"><expr pos:start="43:72" pos:end="43:75"><name pos:start="43:72" pos:end="43:75">NULL</name></expr></argument>, <argument pos:start="43:78" pos:end="43:95"><expr pos:start="43:78" pos:end="43:95"><name pos:start="43:78" pos:end="43:95">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:17">codec</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:50"><name pos:start="45:21" pos:end="45:40">avcodec_find_encoder</name><argument_list pos:start="45:41" pos:end="45:50">(<argument pos:start="45:42" pos:end="45:49"><expr pos:start="45:42" pos:end="45:49"><name pos:start="45:42" pos:end="45:49">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:52"><expr pos:start="53:5" pos:end="53:51"><call pos:start="53:5" pos:end="53:51"><name pos:start="53:5" pos:end="53:33">avcodec_get_context_defaults3</name><argument_list pos:start="53:34" pos:end="53:51">(<argument pos:start="53:35" pos:end="53:43"><expr pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:36">st</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:43">codec</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:50"><expr pos:start="53:46" pos:end="53:50"><name pos:start="53:46" pos:end="53:50">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="61:75"><expr pos:start="55:5" pos:end="61:74"><name pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:21">bitstream_filters</name><index pos:start="55:22" pos:end="55:38">[<expr pos:start="55:23" pos:end="55:37"><name pos:start="55:23" pos:end="55:37">nb_output_files</name></expr>]</index></name> <operator pos:start="55:40" pos:end="55:40">=</operator>

        <call pos:start="57:9" pos:end="61:74"><name pos:start="57:9" pos:end="57:18">grow_array</name><argument_list pos:start="57:19" pos:end="61:74">(<argument pos:start="57:20" pos:end="57:53"><expr pos:start="57:20" pos:end="57:53"><name pos:start="57:20" pos:end="57:53"><name pos:start="57:20" pos:end="57:36">bitstream_filters</name><index pos:start="57:37" pos:end="57:53">[<expr pos:start="57:38" pos:end="57:52"><name pos:start="57:38" pos:end="57:52">nb_output_files</name></expr>]</index></name></expr></argument>,

                   <argument pos:start="59:20" pos:end="59:62"><expr pos:start="59:20" pos:end="59:62"><sizeof pos:start="59:20" pos:end="59:62">sizeof<argument_list pos:start="59:26" pos:end="59:62">(<argument pos:start="59:27" pos:end="59:61"><expr pos:start="59:27" pos:end="59:61"><operator pos:start="59:27" pos:end="59:27">*</operator><name pos:start="59:28" pos:end="59:61"><name pos:start="59:28" pos:end="59:44">bitstream_filters</name><index pos:start="59:45" pos:end="59:61">[<expr pos:start="59:46" pos:end="59:60"><name pos:start="59:46" pos:end="59:60">nb_output_files</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                   <argument pos:start="61:20" pos:end="61:57"><expr pos:start="61:20" pos:end="61:57"><operator pos:start="61:20" pos:end="61:20">&amp;</operator><name pos:start="61:21" pos:end="61:57"><name pos:start="61:21" pos:end="61:40">nb_bitstream_filters</name><index pos:start="61:41" pos:end="61:57">[<expr pos:start="61:42" pos:end="61:56"><name pos:start="61:42" pos:end="61:56">nb_output_files</name></expr>]</index></name></expr></argument>, <argument pos:start="61:60" pos:end="61:73"><expr pos:start="61:60" pos:end="61:73"><name pos:start="61:60" pos:end="61:73"><name pos:start="61:60" pos:end="61:61">oc</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:73">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:84"><expr pos:start="63:5" pos:end="63:83"><name pos:start="63:5" pos:end="63:58"><name pos:start="63:5" pos:end="63:21">bitstream_filters</name><index pos:start="63:22" pos:end="63:38">[<expr pos:start="63:23" pos:end="63:37"><name pos:start="63:23" pos:end="63:37">nb_output_files</name></expr>]</index><index pos:start="63:39" pos:end="63:58">[<expr pos:start="63:40" pos:end="63:57"><name pos:start="63:40" pos:end="63:53"><name pos:start="63:40" pos:end="63:41">oc</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:53">nb_streams</name></name> <operator pos:start="63:55" pos:end="63:55">-</operator> <literal type="number" pos:start="63:57" pos:end="63:57">1</literal></expr>]</index></name><operator pos:start="63:59" pos:end="63:59">=</operator> <name pos:start="63:61" pos:end="63:83">video_bitstream_filters</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:27">video_bitstream_filters</name><operator pos:start="65:28" pos:end="65:28">=</operator> <name pos:start="65:30" pos:end="65:33">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><call pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:23">avcodec_thread_init</name><argument_list pos:start="69:24" pos:end="69:48">(<argument pos:start="69:25" pos:end="69:33"><expr pos:start="69:25" pos:end="69:33"><name pos:start="69:25" pos:end="69:33"><name pos:start="69:25" pos:end="69:26">st</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:33">codec</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:47"><expr pos:start="69:36" pos:end="69:47"><name pos:start="69:36" pos:end="69:47">thread_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:26"><expr pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:13">video_enc</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:18">st</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:25">codec</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="79:46"><if pos:start="77:5" pos:end="79:46">if<condition pos:start="77:7" pos:end="77:23">(<expr pos:start="77:8" pos:end="77:22"><name pos:start="77:8" pos:end="77:22">video_codec_tag</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:46"><block_content pos:start="79:9" pos:end="79:46">

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:17">video_enc</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:28">codec_tag</name></name><operator pos:start="79:29" pos:end="79:29">=</operator> <name pos:start="79:31" pos:end="79:45">video_codec_tag</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if<condition pos:start="83:7" pos:end="85:80">(   <expr pos:start="83:11" pos:end="85:79"><operator pos:start="83:11" pos:end="83:11">(</operator><name pos:start="83:12" pos:end="83:30">video_global_header</name><operator pos:start="83:31" pos:end="83:31">&amp;</operator><literal type="number" pos:start="83:32" pos:end="83:32">1</literal><operator pos:start="83:33" pos:end="83:33">)</operator>

       <operator pos:start="85:8" pos:end="85:9">||</operator> <operator pos:start="85:11" pos:end="85:11">(</operator><name pos:start="85:12" pos:end="85:30">video_global_header</name><operator pos:start="85:31" pos:end="85:32">==</operator><literal type="number" pos:start="85:33" pos:end="85:33">0</literal> <operator pos:start="85:35" pos:end="85:36">&amp;&amp;</operator> <operator pos:start="85:38" pos:end="85:38">(</operator><name pos:start="85:39" pos:end="85:56"><name pos:start="85:39" pos:end="85:40">oc</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:49">oformat</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:56">flags</name></name> <operator pos:start="85:58" pos:end="85:58">&amp;</operator> <name pos:start="85:60" pos:end="85:77">AVFMT_GLOBALHEADER</name><operator pos:start="85:78" pos:end="85:78">)</operator><operator pos:start="85:79" pos:end="85:79">)</operator></expr>)</condition><block pos:start="85:81" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:75">

        <expr_stmt pos:start="87:9" pos:end="87:53"><expr pos:start="87:9" pos:end="87:52"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:17">video_enc</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:24">flags</name></name> <operator pos:start="87:26" pos:end="87:27">|=</operator> <name pos:start="87:29" pos:end="87:52">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:75"><expr pos:start="89:9" pos:end="89:74"><name pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:20">avcodec_opts</name><index pos:start="89:21" pos:end="89:40">[<expr pos:start="89:22" pos:end="89:39"><name pos:start="89:22" pos:end="89:39">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:47">flags</name><operator pos:start="89:48" pos:end="89:49">|=</operator> <name pos:start="89:51" pos:end="89:74">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if<condition pos:start="93:7" pos:end="93:29">(<expr pos:start="93:8" pos:end="93:28"><name pos:start="93:8" pos:end="93:26">video_global_header</name><operator pos:start="93:27" pos:end="93:27">&amp;</operator><literal type="number" pos:start="93:28" pos:end="93:28">2</literal></expr>)</condition><block pos:start="93:30" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:76">

        <expr_stmt pos:start="95:9" pos:end="95:54"><expr pos:start="95:9" pos:end="95:53"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:17">video_enc</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:25">flags2</name></name> <operator pos:start="95:27" pos:end="95:28">|=</operator> <name pos:start="95:30" pos:end="95:53">CODEC_FLAG2_LOCAL_HEADER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:76"><expr pos:start="97:9" pos:end="97:75"><name pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:20">avcodec_opts</name><index pos:start="97:21" pos:end="97:40">[<expr pos:start="97:22" pos:end="97:39"><name pos:start="97:22" pos:end="97:39">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:48">flags2</name><operator pos:start="97:49" pos:end="97:50">|=</operator> <name pos:start="97:52" pos:end="97:75">CODEC_FLAG2_LOCAL_HEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="263:5"><if pos:start="103:5" pos:end="113:5">if <condition pos:start="103:8" pos:end="103:26">(<expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:25">video_stream_copy</name></expr>)</condition> <block pos:start="103:28" pos:end="113:5">{<block_content pos:start="105:9" pos:end="111:91">

        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:10">st</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:23">stream_copy</name></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <literal type="number" pos:start="105:27" pos:end="105:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:51"><expr pos:start="107:9" pos:end="107:50"><name pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:17">video_enc</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:29">codec_type</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="111:91"><expr pos:start="109:9" pos:end="111:90"><name pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:17">video_enc</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:38">sample_aspect_ratio</name></name> <operator pos:start="109:40" pos:end="109:40">=</operator>

        <name pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:10">st</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:31">sample_aspect_ratio</name></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <call pos:start="111:35" pos:end="111:90"><name pos:start="111:35" pos:end="111:40">av_d2q</name><argument_list pos:start="111:41" pos:end="111:90">(<argument pos:start="111:42" pos:end="111:84"><expr pos:start="111:42" pos:end="111:84"><name pos:start="111:42" pos:end="111:59">frame_aspect_ratio</name><operator pos:start="111:60" pos:end="111:60">*</operator><name pos:start="111:61" pos:end="111:72">frame_height</name><operator pos:start="111:73" pos:end="111:73">/</operator><name pos:start="111:74" pos:end="111:84">frame_width</name></expr></argument>, <argument pos:start="111:87" pos:end="111:89"><expr pos:start="111:87" pos:end="111:89"><literal type="number" pos:start="111:87" pos:end="111:89">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="263:5">else <block pos:start="113:12" pos:end="263:5">{<block_content pos:start="115:9" pos:end="261:9">

        <decl_stmt pos:start="115:9" pos:end="115:22"><decl pos:start="115:9" pos:end="115:21"><type pos:start="115:9" pos:end="115:20"><specifier pos:start="115:9" pos:end="115:13">const</specifier> <name pos:start="115:15" pos:end="115:18">char</name> <modifier pos:start="115:20" pos:end="115:20">*</modifier></type><name pos:start="115:21" pos:end="115:21">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="117:9" pos:end="117:14"><decl pos:start="117:9" pos:end="117:13"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="119:9" pos:end="119:73"><decl pos:start="119:9" pos:end="119:72"><type pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:18">AVRational</name></type> <name pos:start="119:20" pos:end="119:22">fps</name><init pos:start="119:23" pos:end="119:72">= <expr pos:start="119:25" pos:end="119:72"><ternary pos:start="119:25" pos:end="119:72"><condition pos:start="119:25" pos:end="119:40"><expr pos:start="119:25" pos:end="119:38"><name pos:start="119:25" pos:end="119:38"><name pos:start="119:25" pos:end="119:34">frame_rate</name><operator pos:start="119:35" pos:end="119:35">.</operator><name pos:start="119:36" pos:end="119:38">num</name></name></expr> ?</condition><then pos:start="119:42" pos:end="119:51"> <expr pos:start="119:42" pos:end="119:51"><name pos:start="119:42" pos:end="119:51">frame_rate</name></expr> </then><else pos:start="119:53" pos:end="119:72">: <expr pos:start="119:55" pos:end="119:72"><operator pos:start="119:55" pos:end="119:55">(</operator><name pos:start="119:56" pos:end="119:65">AVRational</name><operator pos:start="119:66" pos:end="119:66">)</operator><block pos:start="119:67" pos:end="119:72">{<expr pos:start="119:68" pos:end="119:69"><literal type="number" pos:start="119:68" pos:end="119:69">25</literal></expr>,<expr pos:start="119:71" pos:end="119:71"><literal type="number" pos:start="119:71" pos:end="119:71">1</literal></expr>}</block></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:17">video_enc</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:27">codec_id</name></name> <operator pos:start="123:29" pos:end="123:29">=</operator> <name pos:start="123:31" pos:end="123:38">codec_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:131"><expr pos:start="125:9" pos:end="125:130"><call pos:start="125:9" pos:end="125:130"><name pos:start="125:9" pos:end="125:24">set_context_opts</name><argument_list pos:start="125:25" pos:end="125:130">(<argument pos:start="125:26" pos:end="125:34"><expr pos:start="125:26" pos:end="125:34"><name pos:start="125:26" pos:end="125:34">video_enc</name></expr></argument>, <argument pos:start="125:37" pos:end="125:68"><expr pos:start="125:37" pos:end="125:68"><name pos:start="125:37" pos:end="125:68"><name pos:start="125:37" pos:end="125:48">avcodec_opts</name><index pos:start="125:49" pos:end="125:68">[<expr pos:start="125:50" pos:end="125:67"><name pos:start="125:50" pos:end="125:67">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></argument>, <argument pos:start="125:71" pos:end="125:122"><expr pos:start="125:71" pos:end="125:122"><name pos:start="125:71" pos:end="125:93">AV_OPT_FLAG_VIDEO_PARAM</name> <operator pos:start="125:95" pos:end="125:95">|</operator> <name pos:start="125:97" pos:end="125:122">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>, <argument pos:start="125:125" pos:end="125:129"><expr pos:start="125:125" pos:end="125:129"><name pos:start="125:125" pos:end="125:129">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="129:9" pos:end="131:103"><if pos:start="129:9" pos:end="131:103">if <condition pos:start="129:12" pos:end="129:63">(<expr pos:start="129:13" pos:end="129:62"><name pos:start="129:13" pos:end="129:17">codec</name> <operator pos:start="129:19" pos:end="129:20">&amp;&amp;</operator> <name pos:start="129:22" pos:end="129:48"><name pos:start="129:22" pos:end="129:26">codec</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:48">supported_framerates</name></name> <operator pos:start="129:50" pos:end="129:51">&amp;&amp;</operator> <operator pos:start="129:53" pos:end="129:53">!</operator><name pos:start="129:54" pos:end="129:62">force_fps</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:103"><block_content pos:start="131:13" pos:end="131:103">

            <expr_stmt pos:start="131:13" pos:end="131:103"><expr pos:start="131:13" pos:end="131:102"><name pos:start="131:13" pos:end="131:15">fps</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <name pos:start="131:19" pos:end="131:102"><name pos:start="131:19" pos:end="131:23">codec</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:45">supported_framerates</name><index pos:start="131:46" pos:end="131:102">[<expr pos:start="131:47" pos:end="131:101"><call pos:start="131:47" pos:end="131:101"><name pos:start="131:47" pos:end="131:67">av_find_nearest_q_idx</name><argument_list pos:start="131:68" pos:end="131:101">(<argument pos:start="131:69" pos:end="131:71"><expr pos:start="131:69" pos:end="131:71"><name pos:start="131:69" pos:end="131:71">fps</name></expr></argument>, <argument pos:start="131:74" pos:end="131:100"><expr pos:start="131:74" pos:end="131:100"><name pos:start="131:74" pos:end="131:100"><name pos:start="131:74" pos:end="131:78">codec</name><operator pos:start="131:79" pos:end="131:80">-&gt;</operator><name pos:start="131:81" pos:end="131:100">supported_framerates</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:43"><expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:32"><name pos:start="133:9" pos:end="133:17">video_enc</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:28">time_base</name><operator pos:start="133:29" pos:end="133:29">.</operator><name pos:start="133:30" pos:end="133:32">den</name></name> <operator pos:start="133:34" pos:end="133:34">=</operator> <name pos:start="133:36" pos:end="133:42"><name pos:start="133:36" pos:end="133:38">fps</name><operator pos:start="133:39" pos:end="133:39">.</operator><name pos:start="133:40" pos:end="133:42">num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:43"><expr pos:start="135:9" pos:end="135:42"><name pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:17">video_enc</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:28">time_base</name><operator pos:start="135:29" pos:end="135:29">.</operator><name pos:start="135:30" pos:end="135:32">num</name></name> <operator pos:start="135:34" pos:end="135:34">=</operator> <name pos:start="135:36" pos:end="135:42"><name pos:start="135:36" pos:end="135:38">fps</name><operator pos:start="135:39" pos:end="135:39">.</operator><name pos:start="135:40" pos:end="135:42">den</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:39"><expr pos:start="139:9" pos:end="139:38"><name pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:17">video_enc</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:24">width</name></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:38">frame_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:41"><expr pos:start="141:9" pos:end="141:40"><name pos:start="141:9" pos:end="141:25"><name pos:start="141:9" pos:end="141:17">video_enc</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:25">height</name></name> <operator pos:start="141:27" pos:end="141:27">=</operator> <name pos:start="141:29" pos:end="141:40">frame_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:108"><expr pos:start="143:9" pos:end="143:107"><name pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:17">video_enc</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:38">sample_aspect_ratio</name></name> <operator pos:start="143:40" pos:end="143:40">=</operator> <call pos:start="143:42" pos:end="143:107"><name pos:start="143:42" pos:end="143:47">av_d2q</name><argument_list pos:start="143:48" pos:end="143:107">(<argument pos:start="143:49" pos:end="143:101"><expr pos:start="143:49" pos:end="143:101"><name pos:start="143:49" pos:end="143:66">frame_aspect_ratio</name><operator pos:start="143:67" pos:end="143:67">*</operator><name pos:start="143:68" pos:end="143:84"><name pos:start="143:68" pos:end="143:76">video_enc</name><operator pos:start="143:77" pos:end="143:78">-&gt;</operator><name pos:start="143:79" pos:end="143:84">height</name></name><operator pos:start="143:85" pos:end="143:85">/</operator><name pos:start="143:86" pos:end="143:101"><name pos:start="143:86" pos:end="143:94">video_enc</name><operator pos:start="143:95" pos:end="143:96">-&gt;</operator><name pos:start="143:97" pos:end="143:101">width</name></name></expr></argument>, <argument pos:start="143:104" pos:end="143:106"><expr pos:start="143:104" pos:end="143:106"><literal type="number" pos:start="143:104" pos:end="143:106">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:43"><expr pos:start="145:9" pos:end="145:42"><name pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:17">video_enc</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:26">pix_fmt</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <name pos:start="145:30" pos:end="145:42">frame_pix_fmt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:65"><expr pos:start="147:9" pos:end="147:64"><name pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:10">st</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:31">sample_aspect_ratio</name></name> <operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:64"><name pos:start="147:35" pos:end="147:43">video_enc</name><operator pos:start="147:44" pos:end="147:45">-&gt;</operator><name pos:start="147:46" pos:end="147:64">sample_aspect_ratio</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:36"><expr pos:start="151:9" pos:end="151:35"><call pos:start="151:9" pos:end="151:35"><name pos:start="151:9" pos:end="151:24">choose_pixel_fmt</name><argument_list pos:start="151:25" pos:end="151:35">(<argument pos:start="151:26" pos:end="151:27"><expr pos:start="151:26" pos:end="151:27"><name pos:start="151:26" pos:end="151:27">st</name></expr></argument>, <argument pos:start="151:30" pos:end="151:34"><expr pos:start="151:30" pos:end="151:34"><name pos:start="151:30" pos:end="151:34">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="157:36"><if pos:start="155:9" pos:end="157:36">if <condition pos:start="155:12" pos:end="155:23">(<expr pos:start="155:13" pos:end="155:22"><name pos:start="155:13" pos:end="155:22">intra_only</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:36"><block_content pos:start="157:13" pos:end="157:36">

            <expr_stmt pos:start="157:13" pos:end="157:36"><expr pos:start="157:13" pos:end="157:35"><name pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:21">video_enc</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:31">gop_size</name></name> <operator pos:start="157:33" pos:end="157:33">=</operator> <literal type="number" pos:start="157:35" pos:end="157:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="167:9"><if pos:start="159:9" pos:end="167:9">if <condition pos:start="159:12" pos:end="159:41">(<expr pos:start="159:13" pos:end="159:40"><name pos:start="159:13" pos:end="159:24">video_qscale</name> <operator pos:start="159:26" pos:end="159:27">||</operator> <name pos:start="159:29" pos:end="159:40">same_quality</name></expr>)</condition> <block pos:start="159:43" pos:end="167:9">{<block_content pos:start="161:13" pos:end="165:58">

            <expr_stmt pos:start="161:13" pos:end="161:50"><expr pos:start="161:13" pos:end="161:49"><name pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:21">video_enc</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:28">flags</name></name> <operator pos:start="161:30" pos:end="161:31">|=</operator> <name pos:start="161:33" pos:end="161:49">CODEC_FLAG_QSCALE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="165:58"><expr pos:start="163:13" pos:end="165:57"><name pos:start="163:13" pos:end="163:37"><name pos:start="163:13" pos:end="163:21">video_enc</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:37">global_quality</name></name><operator pos:start="163:38" pos:end="163:38">=</operator>

                <name pos:start="165:17" pos:end="165:27"><name pos:start="165:17" pos:end="165:18">st</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:27">quality</name></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <name pos:start="165:31" pos:end="165:42">FF_QP2LAMBDA</name> <operator pos:start="165:44" pos:end="165:44">*</operator> <name pos:start="165:46" pos:end="165:57">video_qscale</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="171:9" pos:end="173:51"><if pos:start="171:9" pos:end="173:51">if<condition pos:start="171:11" pos:end="171:24">(<expr pos:start="171:12" pos:end="171:23"><name pos:start="171:12" pos:end="171:23">intra_matrix</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:51"><block_content pos:start="173:13" pos:end="173:51">

            <expr_stmt pos:start="173:13" pos:end="173:51"><expr pos:start="173:13" pos:end="173:50"><name pos:start="173:13" pos:end="173:35"><name pos:start="173:13" pos:end="173:21">video_enc</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:35">intra_matrix</name></name> <operator pos:start="173:37" pos:end="173:37">=</operator> <name pos:start="173:39" pos:end="173:50">intra_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="175:9" pos:end="177:51"><if pos:start="175:9" pos:end="177:51">if<condition pos:start="175:11" pos:end="175:24">(<expr pos:start="175:12" pos:end="175:23"><name pos:start="175:12" pos:end="175:23">inter_matrix</name></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:51"><block_content pos:start="177:13" pos:end="177:51">

            <expr_stmt pos:start="177:13" pos:end="177:51"><expr pos:start="177:13" pos:end="177:50"><name pos:start="177:13" pos:end="177:35"><name pos:start="177:13" pos:end="177:21">video_enc</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:35">inter_matrix</name></name> <operator pos:start="177:37" pos:end="177:37">=</operator> <name pos:start="177:39" pos:end="177:50">inter_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:36"><expr pos:start="181:9" pos:end="181:35"><name pos:start="181:9" pos:end="181:9">p</name><operator pos:start="181:10" pos:end="181:10">=</operator> <name pos:start="181:12" pos:end="181:35">video_rc_override_string</name></expr>;</expr_stmt>

        <for pos:start="183:9" pos:end="227:9">for<control pos:start="183:12" pos:end="183:24">(<init pos:start="183:13" pos:end="183:16"><expr pos:start="183:13" pos:end="183:15"><name pos:start="183:13" pos:end="183:13">i</name><operator pos:start="183:14" pos:end="183:14">=</operator><literal type="number" pos:start="183:15" pos:end="183:15">0</literal></expr>;</init> <condition pos:start="183:18" pos:end="183:19"><expr pos:start="183:18" pos:end="183:18"><name pos:start="183:18" pos:end="183:18">p</name></expr>;</condition> <incr pos:start="183:21" pos:end="183:23"><expr pos:start="183:21" pos:end="183:23"><name pos:start="183:21" pos:end="183:21">i</name><operator pos:start="183:22" pos:end="183:23">++</operator></expr></incr>)</control><block pos:start="183:25" pos:end="227:9">{<block_content pos:start="185:13" pos:end="225:22">

            <decl_stmt pos:start="185:13" pos:end="185:30"><decl pos:start="185:13" pos:end="185:21"><type pos:start="185:13" pos:end="185:15"><name pos:start="185:13" pos:end="185:15">int</name></type> <name pos:start="185:17" pos:end="185:21">start</name></decl>, <decl pos:start="185:24" pos:end="185:26"><type ref="prev" pos:start="185:13" pos:end="185:15"/><name pos:start="185:24" pos:end="185:26">end</name></decl>, <decl pos:start="185:29" pos:end="185:29"><type ref="prev" pos:start="185:13" pos:end="185:15"/><name pos:start="185:29" pos:end="185:29">q</name></decl>;</decl_stmt>

            <decl_stmt pos:start="187:13" pos:end="187:58"><decl pos:start="187:13" pos:end="187:57"><type pos:start="187:13" pos:end="187:15"><name pos:start="187:13" pos:end="187:15">int</name></type> <name pos:start="187:17" pos:end="187:17">e</name><init pos:start="187:18" pos:end="187:57">=<expr pos:start="187:19" pos:end="187:57"><call pos:start="187:19" pos:end="187:57"><name pos:start="187:19" pos:end="187:24">sscanf</name><argument_list pos:start="187:25" pos:end="187:57">(<argument pos:start="187:26" pos:end="187:26"><expr pos:start="187:26" pos:end="187:26"><name pos:start="187:26" pos:end="187:26">p</name></expr></argument>, <argument pos:start="187:29" pos:end="187:38"><expr pos:start="187:29" pos:end="187:38"><literal type="string" pos:start="187:29" pos:end="187:38">"%d,%d,%d"</literal></expr></argument>, <argument pos:start="187:41" pos:end="187:46"><expr pos:start="187:41" pos:end="187:46"><operator pos:start="187:41" pos:end="187:41">&amp;</operator><name pos:start="187:42" pos:end="187:46">start</name></expr></argument>, <argument pos:start="187:49" pos:end="187:52"><expr pos:start="187:49" pos:end="187:52"><operator pos:start="187:49" pos:end="187:49">&amp;</operator><name pos:start="187:50" pos:end="187:52">end</name></expr></argument>, <argument pos:start="187:55" pos:end="187:56"><expr pos:start="187:55" pos:end="187:56"><operator pos:start="187:55" pos:end="187:55">&amp;</operator><name pos:start="187:56" pos:end="187:56">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="189:13" pos:end="195:13"><if pos:start="189:13" pos:end="195:13">if<condition pos:start="189:15" pos:end="189:20">(<expr pos:start="189:16" pos:end="189:19"><name pos:start="189:16" pos:end="189:16">e</name><operator pos:start="189:17" pos:end="189:18">!=</operator><literal type="number" pos:start="189:19" pos:end="189:19">3</literal></expr>)</condition><block pos:start="189:21" pos:end="195:13">{<block_content pos:start="191:17" pos:end="193:31">

                <expr_stmt pos:start="191:17" pos:end="191:63"><expr pos:start="191:17" pos:end="191:62"><call pos:start="191:17" pos:end="191:62"><name pos:start="191:17" pos:end="191:23">fprintf</name><argument_list pos:start="191:24" pos:end="191:62">(<argument pos:start="191:25" pos:end="191:30"><expr pos:start="191:25" pos:end="191:30"><name pos:start="191:25" pos:end="191:30">stderr</name></expr></argument>, <argument pos:start="191:33" pos:end="191:61"><expr pos:start="191:33" pos:end="191:61"><literal type="string" pos:start="191:33" pos:end="191:61">"error parsing rc_override\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:31"><expr pos:start="193:17" pos:end="193:30"><call pos:start="193:17" pos:end="193:30"><name pos:start="193:17" pos:end="193:27">ffmpeg_exit</name><argument_list pos:start="193:28" pos:end="193:30">(<argument pos:start="193:29" pos:end="193:29"><expr pos:start="193:29" pos:end="193:29"><literal type="number" pos:start="193:29" pos:end="193:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="201:53"><expr pos:start="197:13" pos:end="201:52"><name pos:start="197:13" pos:end="197:34"><name pos:start="197:13" pos:end="197:21">video_enc</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:34">rc_override</name></name><operator pos:start="197:35" pos:end="197:35">=</operator>

                <call pos:start="199:17" pos:end="201:52"><name pos:start="199:17" pos:end="199:26">av_realloc</name><argument_list pos:start="199:27" pos:end="201:52">(<argument pos:start="199:28" pos:end="199:49"><expr pos:start="199:28" pos:end="199:49"><name pos:start="199:28" pos:end="199:49"><name pos:start="199:28" pos:end="199:36">video_enc</name><operator pos:start="199:37" pos:end="199:38">-&gt;</operator><name pos:start="199:39" pos:end="199:49">rc_override</name></name></expr></argument>,

                           <argument pos:start="201:28" pos:end="201:51"><expr pos:start="201:28" pos:end="201:51"><sizeof pos:start="201:28" pos:end="201:45">sizeof<argument_list pos:start="201:34" pos:end="201:45">(<argument pos:start="201:35" pos:end="201:44"><expr pos:start="201:35" pos:end="201:44"><name pos:start="201:35" pos:end="201:44">RcOverride</name></expr></argument>)</argument_list></sizeof><operator pos:start="201:46" pos:end="201:46">*</operator><operator pos:start="201:47" pos:end="201:47">(</operator><name pos:start="201:48" pos:end="201:48">i</name><operator pos:start="201:49" pos:end="201:49">+</operator><literal type="number" pos:start="201:50" pos:end="201:50">1</literal><operator pos:start="201:51" pos:end="201:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:57"><expr pos:start="203:13" pos:end="203:56"><name pos:start="203:13" pos:end="203:37"><name pos:start="203:13" pos:end="203:21">video_enc</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:34">rc_override</name><index pos:start="203:35" pos:end="203:37">[<expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">i</name></expr>]</index></name><operator pos:start="203:38" pos:end="203:38">.</operator><name pos:start="203:39" pos:end="203:49">start_frame</name><operator pos:start="203:50" pos:end="203:50">=</operator> <name pos:start="203:52" pos:end="203:56">start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:55"><expr pos:start="205:13" pos:end="205:54"><name pos:start="205:13" pos:end="205:37"><name pos:start="205:13" pos:end="205:21">video_enc</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:34">rc_override</name><index pos:start="205:35" pos:end="205:37">[<expr pos:start="205:36" pos:end="205:36"><name pos:start="205:36" pos:end="205:36">i</name></expr>]</index></name><operator pos:start="205:38" pos:end="205:38">.</operator><name pos:start="205:39" pos:end="205:47">end_frame</name>  <operator pos:start="205:50" pos:end="205:50">=</operator> <name pos:start="205:52" pos:end="205:54">end</name></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="221:13"><if pos:start="207:13" pos:end="213:13">if<condition pos:start="207:15" pos:end="207:19">(<expr pos:start="207:16" pos:end="207:18"><name pos:start="207:16" pos:end="207:16">q</name><operator pos:start="207:17" pos:end="207:17">&gt;</operator><literal type="number" pos:start="207:18" pos:end="207:18">0</literal></expr>)</condition><block pos:start="207:20" pos:end="213:13">{<block_content pos:start="209:17" pos:end="211:62">

                <expr_stmt pos:start="209:17" pos:end="209:52"><expr pos:start="209:17" pos:end="209:51"><name pos:start="209:17" pos:end="209:41"><name pos:start="209:17" pos:end="209:25">video_enc</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:38">rc_override</name><index pos:start="209:39" pos:end="209:41">[<expr pos:start="209:40" pos:end="209:40"><name pos:start="209:40" pos:end="209:40">i</name></expr>]</index></name><operator pos:start="209:42" pos:end="209:42">.</operator><name pos:start="209:43" pos:end="209:48">qscale</name><operator pos:start="209:49" pos:end="209:49">=</operator> <name pos:start="209:51" pos:end="209:51">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:62"><expr pos:start="211:17" pos:end="211:61"><name pos:start="211:17" pos:end="211:41"><name pos:start="211:17" pos:end="211:25">video_enc</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:38">rc_override</name><index pos:start="211:39" pos:end="211:41">[<expr pos:start="211:40" pos:end="211:40"><name pos:start="211:40" pos:end="211:40">i</name></expr>]</index></name><operator pos:start="211:42" pos:end="211:42">.</operator><name pos:start="211:43" pos:end="211:56">quality_factor</name><operator pos:start="211:57" pos:end="211:57">=</operator> <literal type="number" pos:start="211:59" pos:end="211:61">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="215:13" pos:end="221:13">else<block pos:start="215:17" pos:end="221:13">{<block_content pos:start="217:17" pos:end="219:67">

                <expr_stmt pos:start="217:17" pos:end="217:52"><expr pos:start="217:17" pos:end="217:51"><name pos:start="217:17" pos:end="217:41"><name pos:start="217:17" pos:end="217:25">video_enc</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:38">rc_override</name><index pos:start="217:39" pos:end="217:41">[<expr pos:start="217:40" pos:end="217:40"><name pos:start="217:40" pos:end="217:40">i</name></expr>]</index></name><operator pos:start="217:42" pos:end="217:42">.</operator><name pos:start="217:43" pos:end="217:48">qscale</name><operator pos:start="217:49" pos:end="217:49">=</operator> <literal type="number" pos:start="217:51" pos:end="217:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:67"><expr pos:start="219:17" pos:end="219:66"><name pos:start="219:17" pos:end="219:41"><name pos:start="219:17" pos:end="219:25">video_enc</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:38">rc_override</name><index pos:start="219:39" pos:end="219:41">[<expr pos:start="219:40" pos:end="219:40"><name pos:start="219:40" pos:end="219:40">i</name></expr>]</index></name><operator pos:start="219:42" pos:end="219:42">.</operator><name pos:start="219:43" pos:end="219:56">quality_factor</name><operator pos:start="219:57" pos:end="219:57">=</operator> <operator pos:start="219:59" pos:end="219:59">-</operator><name pos:start="219:60" pos:end="219:60">q</name><operator pos:start="219:61" pos:end="219:61">/</operator><literal type="number" pos:start="219:62" pos:end="219:66">100.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:30"><expr pos:start="223:13" pos:end="223:29"><name pos:start="223:13" pos:end="223:13">p</name><operator pos:start="223:14" pos:end="223:14">=</operator> <call pos:start="223:16" pos:end="223:29"><name pos:start="223:16" pos:end="223:21">strchr</name><argument_list pos:start="223:22" pos:end="223:29">(<argument pos:start="223:23" pos:end="223:23"><expr pos:start="223:23" pos:end="223:23"><name pos:start="223:23" pos:end="223:23">p</name></expr></argument>, <argument pos:start="223:26" pos:end="223:28"><expr pos:start="223:26" pos:end="223:28"><literal type="char" pos:start="223:26" pos:end="223:28">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="225:13" pos:end="225:22"><if pos:start="225:13" pos:end="225:22">if<condition pos:start="225:15" pos:end="225:17">(<expr pos:start="225:16" pos:end="225:16"><name pos:start="225:16" pos:end="225:16">p</name></expr>)</condition><block type="pseudo" pos:start="225:19" pos:end="225:22"><block_content pos:start="225:19" pos:end="225:22"> <expr_stmt pos:start="225:19" pos:end="225:22"><expr pos:start="225:19" pos:end="225:21"><name pos:start="225:19" pos:end="225:19">p</name><operator pos:start="225:20" pos:end="225:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="229:9" pos:end="229:39"><expr pos:start="229:9" pos:end="229:38"><name pos:start="229:9" pos:end="229:36"><name pos:start="229:9" pos:end="229:17">video_enc</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:36">rc_override_count</name></name><operator pos:start="229:37" pos:end="229:37">=</operator><name pos:start="229:38" pos:end="229:38">i</name></expr>;</expr_stmt>

        <if_stmt pos:start="231:9" pos:end="233:83"><if pos:start="231:9" pos:end="233:83">if <condition pos:start="231:12" pos:end="231:52">(<expr pos:start="231:13" pos:end="231:51"><operator pos:start="231:13" pos:end="231:13">!</operator><name pos:start="231:14" pos:end="231:51"><name pos:start="231:14" pos:end="231:22">video_enc</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:51">rc_initial_buffer_occupancy</name></name></expr>)</condition><block type="pseudo" pos:start="233:13" pos:end="233:83"><block_content pos:start="233:13" pos:end="233:83">

            <expr_stmt pos:start="233:13" pos:end="233:83"><expr pos:start="233:13" pos:end="233:82"><name pos:start="233:13" pos:end="233:50"><name pos:start="233:13" pos:end="233:21">video_enc</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:50">rc_initial_buffer_occupancy</name></name> <operator pos:start="233:52" pos:end="233:52">=</operator> <name pos:start="233:54" pos:end="233:78"><name pos:start="233:54" pos:end="233:62">video_enc</name><operator pos:start="233:63" pos:end="233:64">-&gt;</operator><name pos:start="233:65" pos:end="233:78">rc_buffer_size</name></name><operator pos:start="233:79" pos:end="233:79">*</operator><literal type="number" pos:start="233:80" pos:end="233:80">3</literal><operator pos:start="233:81" pos:end="233:81">/</operator><literal type="number" pos:start="233:82" pos:end="233:82">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:46"><expr pos:start="235:9" pos:end="235:45"><name pos:start="235:9" pos:end="235:31"><name pos:start="235:9" pos:end="235:17">video_enc</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:31">me_threshold</name></name><operator pos:start="235:32" pos:end="235:32">=</operator> <name pos:start="235:34" pos:end="235:45">me_threshold</name></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:62"><expr pos:start="237:9" pos:end="237:61"><name pos:start="237:9" pos:end="237:37"><name pos:start="237:9" pos:end="237:17">video_enc</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:37">intra_dc_precision</name></name><operator pos:start="237:38" pos:end="237:38">=</operator> <name pos:start="237:40" pos:end="237:57">intra_dc_precision</name> <operator pos:start="237:59" pos:end="237:59">-</operator> <literal type="number" pos:start="237:61" pos:end="237:61">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="241:9" pos:end="243:47"><if pos:start="241:9" pos:end="243:47">if <condition pos:start="241:12" pos:end="241:20">(<expr pos:start="241:13" pos:end="241:19"><name pos:start="241:13" pos:end="241:19">do_psnr</name></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:47"><block_content pos:start="243:13" pos:end="243:47">

            <expr_stmt pos:start="243:13" pos:end="243:47"><expr pos:start="243:13" pos:end="243:46"><name pos:start="243:13" pos:end="243:28"><name pos:start="243:13" pos:end="243:21">video_enc</name><operator pos:start="243:22" pos:end="243:23">-&gt;</operator><name pos:start="243:24" pos:end="243:28">flags</name></name><operator pos:start="243:29" pos:end="243:30">|=</operator> <name pos:start="243:32" pos:end="243:46">CODEC_FLAG_PSNR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="247:9" pos:end="247:27">/* two pass mode */</comment>

        <if_stmt pos:start="249:9" pos:end="261:9"><if pos:start="249:9" pos:end="261:9">if <condition pos:start="249:12" pos:end="249:20">(<expr pos:start="249:13" pos:end="249:19"><name pos:start="249:13" pos:end="249:19">do_pass</name></expr>)</condition> <block pos:start="249:22" pos:end="261:9">{<block_content pos:start="251:13" pos:end="259:13">

            <if_stmt pos:start="251:13" pos:end="259:13"><if pos:start="251:13" pos:end="255:13">if <condition pos:start="251:16" pos:end="251:29">(<expr pos:start="251:17" pos:end="251:28"><name pos:start="251:17" pos:end="251:23">do_pass</name> <operator pos:start="251:25" pos:end="251:26">==</operator> <literal type="number" pos:start="251:28" pos:end="251:28">1</literal></expr>)</condition> <block pos:start="251:31" pos:end="255:13">{<block_content pos:start="253:17" pos:end="253:53">

                <expr_stmt pos:start="253:17" pos:end="253:53"><expr pos:start="253:17" pos:end="253:52"><name pos:start="253:17" pos:end="253:32"><name pos:start="253:17" pos:end="253:25">video_enc</name><operator pos:start="253:26" pos:end="253:27">-&gt;</operator><name pos:start="253:28" pos:end="253:32">flags</name></name> <operator pos:start="253:34" pos:end="253:35">|=</operator> <name pos:start="253:37" pos:end="253:52">CODEC_FLAG_PASS1</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="255:15" pos:end="259:13">else <block pos:start="255:20" pos:end="259:13">{<block_content pos:start="257:17" pos:end="257:53">

                <expr_stmt pos:start="257:17" pos:end="257:53"><expr pos:start="257:17" pos:end="257:52"><name pos:start="257:17" pos:end="257:32"><name pos:start="257:17" pos:end="257:25">video_enc</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:32">flags</name></name> <operator pos:start="257:34" pos:end="257:35">|=</operator> <name pos:start="257:37" pos:end="257:52">CODEC_FLAG_PASS2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="265:5" pos:end="271:5"><if pos:start="265:5" pos:end="271:5">if <condition pos:start="265:8" pos:end="265:23">(<expr pos:start="265:9" pos:end="265:22"><name pos:start="265:9" pos:end="265:22">video_language</name></expr>)</condition> <block pos:start="265:25" pos:end="271:5">{<block_content pos:start="267:9" pos:end="269:34">

        <expr_stmt pos:start="267:9" pos:end="267:71"><expr pos:start="267:9" pos:end="267:70"><call pos:start="267:9" pos:end="267:70"><name pos:start="267:9" pos:end="267:24">av_metadata_set2</name><argument_list pos:start="267:25" pos:end="267:70">(<argument pos:start="267:26" pos:end="267:38"><expr pos:start="267:26" pos:end="267:38"><operator pos:start="267:26" pos:end="267:26">&amp;</operator><name pos:start="267:27" pos:end="267:38"><name pos:start="267:27" pos:end="267:28">st</name><operator pos:start="267:29" pos:end="267:30">-&gt;</operator><name pos:start="267:31" pos:end="267:38">metadata</name></name></expr></argument>, <argument pos:start="267:41" pos:end="267:50"><expr pos:start="267:41" pos:end="267:50"><literal type="string" pos:start="267:41" pos:end="267:50">"language"</literal></expr></argument>, <argument pos:start="267:53" pos:end="267:66"><expr pos:start="267:53" pos:end="267:66"><name pos:start="267:53" pos:end="267:66">video_language</name></expr></argument>, <argument pos:start="267:69" pos:end="267:69"><expr pos:start="267:69" pos:end="267:69"><literal type="number" pos:start="267:69" pos:end="267:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:34"><expr pos:start="269:9" pos:end="269:33"><call pos:start="269:9" pos:end="269:33"><name pos:start="269:9" pos:end="269:16">av_freep</name><argument_list pos:start="269:17" pos:end="269:33">(<argument pos:start="269:18" pos:end="269:32"><expr pos:start="269:18" pos:end="269:32"><operator pos:start="269:18" pos:end="269:18">&amp;</operator><name pos:start="269:19" pos:end="269:32">video_language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="275:5" pos:end="275:35">/* reset some key parameters */</comment>

    <expr_stmt pos:start="277:5" pos:end="277:22"><expr pos:start="277:5" pos:end="277:21"><name pos:start="277:5" pos:end="277:17">video_disable</name> <operator pos:start="277:19" pos:end="277:19">=</operator> <literal type="number" pos:start="277:21" pos:end="277:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:32"><expr pos:start="279:5" pos:end="279:31"><call pos:start="279:5" pos:end="279:31"><name pos:start="279:5" pos:end="279:12">av_freep</name><argument_list pos:start="279:13" pos:end="279:31">(<argument pos:start="279:14" pos:end="279:30"><expr pos:start="279:14" pos:end="279:30"><operator pos:start="279:14" pos:end="279:14">&amp;</operator><name pos:start="279:15" pos:end="279:30">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:26"><expr pos:start="281:5" pos:end="281:25"><name pos:start="281:5" pos:end="281:21">video_stream_copy</name> <operator pos:start="281:23" pos:end="281:23">=</operator> <literal type="number" pos:start="281:25" pos:end="281:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:33"><expr pos:start="283:5" pos:end="283:32"><name pos:start="283:5" pos:end="283:17">frame_pix_fmt</name> <operator pos:start="283:19" pos:end="283:19">=</operator> <name pos:start="283:21" pos:end="283:32">PIX_FMT_NONE</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
