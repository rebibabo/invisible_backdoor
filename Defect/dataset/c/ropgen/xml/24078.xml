<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24078.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">qcow2_invalidate_cache</name><parameter_list pos:start="1:35" pos:end="1:56">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="30:1">{<block_content pos:start="3:5" pos:end="29:5">
    <decl_stmt pos:start="3:5" pos:end="3:34"><decl pos:start="3:5" pos:end="3:33"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">BDRVQcowState</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:20">s</name> <init pos:start="3:22" pos:end="3:33">= <expr pos:start="3:24" pos:end="3:33"><name pos:start="3:24" pos:end="3:33"><name pos:start="3:24" pos:end="3:25">bs</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:33">opaque</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:24"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:13">flags</name> <init pos:start="4:15" pos:end="4:24">= <expr pos:start="4:17" pos:end="4:24"><name pos:start="4:17" pos:end="4:24"><name pos:start="4:17" pos:end="4:17">s</name><operator pos:start="4:18" pos:end="4:19">-&gt;</operator><name pos:start="4:20" pos:end="4:24">flags</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">AES_KEY</name></type> <name pos:start="5:13" pos:end="5:27">aes_encrypt_key</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:28"><decl pos:start="6:5" pos:end="6:27"><type pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:11">AES_KEY</name></type> <name pos:start="6:13" pos:end="6:27">aes_decrypt_key</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:25">crypt_method</name> <init pos:start="7:27" pos:end="7:29">= <expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:18"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:9">QDict</name> <modifier pos:start="8:11" pos:end="8:11">*</modifier></type><name pos:start="8:12" pos:end="8:18">options</name></decl>;</decl_stmt>
    <comment type="block" pos:start="9:5" pos:end="12:7">/*
     * Backing files are read-only which makes all of their metadata immutable,
     * that means we don't have to worry about reopening them here.
     */</comment>
    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:23">crypt_method</name></name></expr>)</condition> <block pos:start="13:26" pos:end="17:5">{<block_content pos:start="14:9" pos:end="16:79">
        <expr_stmt pos:start="14:9" pos:end="14:39"><expr pos:start="14:9" pos:end="14:38"><name pos:start="14:9" pos:end="14:20">crypt_method</name> <operator pos:start="14:22" pos:end="14:22">=</operator> <name pos:start="14:24" pos:end="14:38"><name pos:start="14:24" pos:end="14:24">s</name><operator pos:start="14:25" pos:end="14:26">-&gt;</operator><name pos:start="14:27" pos:end="14:38">crypt_method</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:79"><expr pos:start="15:9" pos:end="15:78"><call pos:start="15:9" pos:end="15:78"><name pos:start="15:9" pos:end="15:14">memcpy</name><argument_list pos:start="15:15" pos:end="15:78">(<argument pos:start="15:16" pos:end="15:31"><expr pos:start="15:16" pos:end="15:31"><operator pos:start="15:16" pos:end="15:16">&amp;</operator><name pos:start="15:17" pos:end="15:31">aes_encrypt_key</name></expr></argument>, <argument pos:start="15:34" pos:end="15:52"><expr pos:start="15:34" pos:end="15:52"><operator pos:start="15:34" pos:end="15:34">&amp;</operator><name pos:start="15:35" pos:end="15:52"><name pos:start="15:35" pos:end="15:35">s</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:52">aes_encrypt_key</name></name></expr></argument>, <argument pos:start="15:55" pos:end="15:77"><expr pos:start="15:55" pos:end="15:77"><sizeof pos:start="15:55" pos:end="15:77">sizeof<argument_list pos:start="15:61" pos:end="15:77">(<argument pos:start="15:62" pos:end="15:76"><expr pos:start="15:62" pos:end="15:76"><name pos:start="15:62" pos:end="15:76">aes_encrypt_key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:79"><expr pos:start="16:9" pos:end="16:78"><call pos:start="16:9" pos:end="16:78"><name pos:start="16:9" pos:end="16:14">memcpy</name><argument_list pos:start="16:15" pos:end="16:78">(<argument pos:start="16:16" pos:end="16:31"><expr pos:start="16:16" pos:end="16:31"><operator pos:start="16:16" pos:end="16:16">&amp;</operator><name pos:start="16:17" pos:end="16:31">aes_decrypt_key</name></expr></argument>, <argument pos:start="16:34" pos:end="16:52"><expr pos:start="16:34" pos:end="16:52"><operator pos:start="16:34" pos:end="16:34">&amp;</operator><name pos:start="16:35" pos:end="16:52"><name pos:start="16:35" pos:end="16:35">s</name><operator pos:start="16:36" pos:end="16:37">-&gt;</operator><name pos:start="16:38" pos:end="16:52">aes_decrypt_key</name></name></expr></argument>, <argument pos:start="16:55" pos:end="16:77"><expr pos:start="16:55" pos:end="16:77"><sizeof pos:start="16:55" pos:end="16:77">sizeof<argument_list pos:start="16:61" pos:end="16:77">(<argument pos:start="16:62" pos:end="16:76"><expr pos:start="16:62" pos:end="16:76"><name pos:start="16:62" pos:end="16:76">aes_decrypt_key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:20"><expr pos:start="18:5" pos:end="18:19"><call pos:start="18:5" pos:end="18:19"><name pos:start="18:5" pos:end="18:15">qcow2_close</name><argument_list pos:start="18:16" pos:end="18:19">(<argument pos:start="18:17" pos:end="18:18"><expr pos:start="18:17" pos:end="18:18"><name pos:start="18:17" pos:end="18:18">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:11">options</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:25"><name pos:start="19:15" pos:end="19:23">qdict_new</name><argument_list pos:start="19:24" pos:end="19:25">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="21:53"><expr pos:start="20:5" pos:end="21:52"><call pos:start="20:5" pos:end="21:52"><name pos:start="20:5" pos:end="20:13">qdict_put</name><argument_list pos:start="20:14" pos:end="21:52">(<argument pos:start="20:15" pos:end="20:21"><expr pos:start="20:15" pos:end="20:21"><name pos:start="20:15" pos:end="20:21">options</name></expr></argument>, <argument pos:start="20:24" pos:end="20:47"><expr pos:start="20:24" pos:end="20:47"><name pos:start="20:24" pos:end="20:47">QCOW2_OPT_LAZY_REFCOUNTS</name></expr></argument>,
              <argument pos:start="21:15" pos:end="21:51"><expr pos:start="21:15" pos:end="21:51"><call pos:start="21:15" pos:end="21:51"><name pos:start="21:15" pos:end="21:28">qbool_from_int</name><argument_list pos:start="21:29" pos:end="21:51">(<argument pos:start="21:30" pos:end="21:50"><expr pos:start="21:30" pos:end="21:50"><name pos:start="21:30" pos:end="21:50"><name pos:start="21:30" pos:end="21:30">s</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:50">use_lazy_refcounts</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:40"><expr pos:start="22:5" pos:end="22:39"><call pos:start="22:5" pos:end="22:39"><name pos:start="22:5" pos:end="22:10">memset</name><argument_list pos:start="22:11" pos:end="22:39">(<argument pos:start="22:12" pos:end="22:12"><expr pos:start="22:12" pos:end="22:12"><name pos:start="22:12" pos:end="22:12">s</name></expr></argument>, <argument pos:start="22:15" pos:end="22:15"><expr pos:start="22:15" pos:end="22:15"><literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr></argument>, <argument pos:start="22:18" pos:end="22:38"><expr pos:start="22:18" pos:end="22:38"><sizeof pos:start="22:18" pos:end="22:38">sizeof<argument_list pos:start="22:24" pos:end="22:38">(<argument pos:start="22:25" pos:end="22:37"><expr pos:start="22:25" pos:end="22:37"><name pos:start="22:25" pos:end="22:37">BDRVQcowState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><call pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:14">qcow2_open</name><argument_list pos:start="23:15" pos:end="23:40">(<argument pos:start="23:16" pos:end="23:17"><expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">bs</name></expr></argument>, <argument pos:start="23:20" pos:end="23:26"><expr pos:start="23:20" pos:end="23:26"><name pos:start="23:20" pos:end="23:26">options</name></expr></argument>, <argument pos:start="23:29" pos:end="23:33"><expr pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:33">flags</name></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:21"><expr pos:start="24:5" pos:end="24:20"><call pos:start="24:5" pos:end="24:20"><name pos:start="24:5" pos:end="24:11">QDECREF</name><argument_list pos:start="24:12" pos:end="24:20">(<argument pos:start="24:13" pos:end="24:19"><expr pos:start="24:13" pos:end="24:19"><name pos:start="24:13" pos:end="24:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:20">crypt_method</name></expr>)</condition> <block pos:start="25:23" pos:end="29:5">{<block_content pos:start="26:9" pos:end="28:79">
        <expr_stmt pos:start="26:9" pos:end="26:39"><expr pos:start="26:9" pos:end="26:38"><name pos:start="26:9" pos:end="26:23"><name pos:start="26:9" pos:end="26:9">s</name><operator pos:start="26:10" pos:end="26:11">-&gt;</operator><name pos:start="26:12" pos:end="26:23">crypt_method</name></name> <operator pos:start="26:25" pos:end="26:25">=</operator> <name pos:start="26:27" pos:end="26:38">crypt_method</name></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:79"><expr pos:start="27:9" pos:end="27:78"><call pos:start="27:9" pos:end="27:78"><name pos:start="27:9" pos:end="27:14">memcpy</name><argument_list pos:start="27:15" pos:end="27:78">(<argument pos:start="27:16" pos:end="27:34"><expr pos:start="27:16" pos:end="27:34"><operator pos:start="27:16" pos:end="27:16">&amp;</operator><name pos:start="27:17" pos:end="27:34"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:34">aes_encrypt_key</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:52"><expr pos:start="27:37" pos:end="27:52"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:52">aes_encrypt_key</name></expr></argument>, <argument pos:start="27:55" pos:end="27:77"><expr pos:start="27:55" pos:end="27:77"><sizeof pos:start="27:55" pos:end="27:77">sizeof<argument_list pos:start="27:61" pos:end="27:77">(<argument pos:start="27:62" pos:end="27:76"><expr pos:start="27:62" pos:end="27:76"><name pos:start="27:62" pos:end="27:76">aes_encrypt_key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:79"><expr pos:start="28:9" pos:end="28:78"><call pos:start="28:9" pos:end="28:78"><name pos:start="28:9" pos:end="28:14">memcpy</name><argument_list pos:start="28:15" pos:end="28:78">(<argument pos:start="28:16" pos:end="28:34"><expr pos:start="28:16" pos:end="28:34"><operator pos:start="28:16" pos:end="28:16">&amp;</operator><name pos:start="28:17" pos:end="28:34"><name pos:start="28:17" pos:end="28:17">s</name><operator pos:start="28:18" pos:end="28:19">-&gt;</operator><name pos:start="28:20" pos:end="28:34">aes_decrypt_key</name></name></expr></argument>, <argument pos:start="28:37" pos:end="28:52"><expr pos:start="28:37" pos:end="28:52"><operator pos:start="28:37" pos:end="28:37">&amp;</operator><name pos:start="28:38" pos:end="28:52">aes_decrypt_key</name></expr></argument>, <argument pos:start="28:55" pos:end="28:77"><expr pos:start="28:55" pos:end="28:77"><sizeof pos:start="28:55" pos:end="28:77">sizeof<argument_list pos:start="28:61" pos:end="28:77">(<argument pos:start="28:62" pos:end="28:76"><expr pos:start="28:62" pos:end="28:76"><name pos:start="28:62" pos:end="28:76">aes_decrypt_key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function></unit>
