<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4596.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">teletext_decode_frame</name><parameter_list pos:start="1:33" pos:end="1:98">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">data</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:71">int</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:82">data_size</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:97"><decl pos:start="1:85" pos:end="1:97"><type pos:start="1:85" pos:end="1:97"><name pos:start="1:85" pos:end="1:92">AVPacket</name> <modifier pos:start="1:94" pos:end="1:94">*</modifier></type><name pos:start="1:95" pos:end="1:97">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:15">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">TeletextContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:14">AVSubtitle</name>      <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">sub</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:21"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name>   <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">buf</name> <init pos:start="9:26" pos:end="9:36">= <expr pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:30">pkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type>             <name pos:start="11:21" pos:end="11:24">left</name> <init pos:start="11:26" pos:end="11:36">= <expr pos:start="11:28" pos:end="11:36"><name pos:start="11:28" pos:end="11:36"><name pos:start="11:28" pos:end="11:30">pkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:121"><decl pos:start="13:5" pos:end="13:120"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type>         <name pos:start="13:21" pos:end="13:33"><name pos:start="13:21" pos:end="13:29">pesheader</name><index pos:start="13:30" pos:end="13:33">[<expr pos:start="13:31" pos:end="13:32"><literal type="number" pos:start="13:31" pos:end="13:32">45</literal></expr>]</index></name> <init pos:start="13:35" pos:end="13:120">= <expr pos:start="13:37" pos:end="13:120"><block pos:start="13:37" pos:end="13:120">{<expr pos:start="13:38" pos:end="13:41"><literal type="number" pos:start="13:38" pos:end="13:41">0x00</literal></expr>, <expr pos:start="13:44" pos:end="13:47"><literal type="number" pos:start="13:44" pos:end="13:47">0x00</literal></expr>, <expr pos:start="13:50" pos:end="13:53"><literal type="number" pos:start="13:50" pos:end="13:53">0x01</literal></expr>, <expr pos:start="13:56" pos:end="13:59"><literal type="number" pos:start="13:56" pos:end="13:59">0xbd</literal></expr>, <expr pos:start="13:62" pos:end="13:65"><literal type="number" pos:start="13:62" pos:end="13:65">0x00</literal></expr>, <expr pos:start="13:68" pos:end="13:71"><literal type="number" pos:start="13:68" pos:end="13:71">0x00</literal></expr>, <expr pos:start="13:74" pos:end="13:77"><literal type="number" pos:start="13:74" pos:end="13:77">0x85</literal></expr>, <expr pos:start="13:80" pos:end="13:83"><literal type="number" pos:start="13:80" pos:end="13:83">0x80</literal></expr>, <expr pos:start="13:86" pos:end="13:89"><literal type="number" pos:start="13:86" pos:end="13:89">0x24</literal></expr>, <expr pos:start="13:92" pos:end="13:95"><literal type="number" pos:start="13:92" pos:end="13:95">0x21</literal></expr>, <expr pos:start="13:98" pos:end="13:101"><literal type="number" pos:start="13:98" pos:end="13:101">0x00</literal></expr>, <expr pos:start="13:104" pos:end="13:107"><literal type="number" pos:start="13:104" pos:end="13:107">0x01</literal></expr>, <expr pos:start="13:110" pos:end="13:113"><literal type="number" pos:start="13:110" pos:end="13:113">0x00</literal></expr>, <expr pos:start="13:116" pos:end="13:119"><literal type="number" pos:start="13:116" pos:end="13:119">0x01</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:54"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type>             <name pos:start="15:21" pos:end="15:34">pesheader_size</name> <init pos:start="15:36" pos:end="15:54">= <expr pos:start="15:38" pos:end="15:54"><sizeof pos:start="15:38" pos:end="15:54">sizeof<argument_list pos:start="15:44" pos:end="15:54">(<argument pos:start="15:45" pos:end="15:53"><expr pos:start="15:45" pos:end="15:53"><name pos:start="15:45" pos:end="15:53">pesheader</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:47"><decl pos:start="17:5" pos:end="17:46"><type pos:start="17:5" pos:end="17:21"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name>   <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:34">pesheader_buf</name> <init pos:start="17:36" pos:end="17:46">= <expr pos:start="17:38" pos:end="17:46"><name pos:start="17:38" pos:end="17:46">pesheader</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type>             <name pos:start="19:21" pos:end="19:23">ret</name> <init pos:start="19:25" pos:end="19:27">= <expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:12">ctx</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:17">vbi</name></name></expr>)</condition> <block pos:start="23:20" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:9">

        <if_stmt pos:start="25:9" pos:end="27:35"><if pos:start="25:9" pos:end="27:35">if <condition pos:start="25:12" pos:end="25:44">(<expr pos:start="25:13" pos:end="25:43"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:22"><name pos:start="25:15" pos:end="25:17">ctx</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:22">vbi</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:40">vbi_decoder_new</name><argument_list pos:start="25:41" pos:end="25:42">()</argument_list></call><operator pos:start="25:43" pos:end="25:43">)</operator></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:35"><block_content pos:start="27:13" pos:end="27:35">

            <return pos:start="27:13" pos:end="27:35">return <expr pos:start="27:20" pos:end="27:34"><call pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:26">AVERROR</name><argument_list pos:start="27:27" pos:end="27:34">(<argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><name pos:start="27:28" pos:end="27:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:79">(<expr pos:start="29:13" pos:end="29:78"><operator pos:start="29:13" pos:end="29:13">!</operator><call pos:start="29:14" pos:end="29:78"><name pos:start="29:14" pos:end="29:34">vbi_event_handler_add</name><argument_list pos:start="29:35" pos:end="29:78">(<argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:38">ctx</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:43">vbi</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:63"><expr pos:start="29:46" pos:end="29:63"><name pos:start="29:46" pos:end="29:63">VBI_EVENT_TTX_PAGE</name></expr></argument>, <argument pos:start="29:66" pos:end="29:72"><expr pos:start="29:66" pos:end="29:72"><name pos:start="29:66" pos:end="29:72">handler</name></expr></argument>, <argument pos:start="29:75" pos:end="29:77"><expr pos:start="29:75" pos:end="29:77"><name pos:start="29:75" pos:end="29:77">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:81" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:35">

            <expr_stmt pos:start="31:13" pos:end="31:41"><expr pos:start="31:13" pos:end="31:40"><call pos:start="31:13" pos:end="31:40"><name pos:start="31:13" pos:end="31:30">vbi_decoder_delete</name><argument_list pos:start="31:31" pos:end="31:40">(<argument pos:start="31:32" pos:end="31:39"><expr pos:start="31:32" pos:end="31:39"><name pos:start="31:32" pos:end="31:39"><name pos:start="31:32" pos:end="31:34">ctx</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:39">vbi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:15">ctx</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:20">vbi</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:27">NULL</name></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:31"><if pos:start="41:5" pos:end="43:31">if <condition pos:start="41:8" pos:end="41:85">(<expr pos:start="41:9" pos:end="41:84"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:16"><name pos:start="41:10" pos:end="41:12">ctx</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:16">dx</name></name> <operator pos:start="41:18" pos:end="41:19">&amp;&amp;</operator> <operator pos:start="41:21" pos:end="41:21">(</operator><operator pos:start="41:22" pos:end="41:22">!</operator><operator pos:start="41:23" pos:end="41:23">(</operator><name pos:start="41:24" pos:end="41:30"><name pos:start="41:24" pos:end="41:26">ctx</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:30">dx</name></name> <operator pos:start="41:32" pos:end="41:32">=</operator> <call pos:start="41:34" pos:end="41:82"><name pos:start="41:34" pos:end="41:54">vbi_dvb_pes_demux_new</name> <argument_list pos:start="41:56" pos:end="41:82">(<comment type="block" pos:start="41:57" pos:end="41:70">/* callback */</comment> <argument pos:start="41:72" pos:end="41:75"><expr pos:start="41:72" pos:end="41:75"><name pos:start="41:72" pos:end="41:75">NULL</name></expr></argument>, <argument pos:start="41:78" pos:end="41:81"><expr pos:start="41:78" pos:end="41:81"><name pos:start="41:78" pos:end="41:81">NULL</name></expr></argument>)</argument_list></call><operator pos:start="41:83" pos:end="41:83">)</operator><operator pos:start="41:84" pos:end="41:84">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:31"><block_content pos:start="43:9" pos:end="43:31">

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="49:79"><if pos:start="47:5" pos:end="49:79">if <condition pos:start="47:8" pos:end="47:62">(<expr pos:start="47:9" pos:end="47:61"><name pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:13">avctx</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:27">pkt_timebase</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:31">den</name></name> <operator pos:start="47:33" pos:end="47:34">&amp;&amp;</operator> <name pos:start="47:36" pos:end="47:43"><name pos:start="47:36" pos:end="47:38">pkt</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:43">pts</name></name> <operator pos:start="47:45" pos:end="47:46">!=</operator> <name pos:start="47:48" pos:end="47:61">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:79"><block_content pos:start="49:9" pos:end="49:79">

        <expr_stmt pos:start="49:9" pos:end="49:79"><expr pos:start="49:9" pos:end="49:78"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:11">ctx</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:16">pts</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:78"><name pos:start="49:20" pos:end="49:31">av_rescale_q</name><argument_list pos:start="49:32" pos:end="49:78">(<argument pos:start="49:33" pos:end="49:40"><expr pos:start="49:33" pos:end="49:40"><name pos:start="49:33" pos:end="49:40"><name pos:start="49:33" pos:end="49:35">pkt</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:40">pts</name></name></expr></argument>, <argument pos:start="49:43" pos:end="49:61"><expr pos:start="49:43" pos:end="49:61"><name pos:start="49:43" pos:end="49:61"><name pos:start="49:43" pos:end="49:47">avctx</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:61">pkt_timebase</name></name></expr></argument>, <argument pos:start="49:64" pos:end="49:77"><expr pos:start="49:64" pos:end="49:77"><name pos:start="49:64" pos:end="49:77">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="119:5"><if pos:start="53:5" pos:end="119:5">if <condition pos:start="53:8" pos:end="53:13">(<expr pos:start="53:9" pos:end="53:12"><name pos:start="53:9" pos:end="53:12">left</name></expr>)</condition> <block pos:start="53:15" pos:end="119:5">{<block_content pos:start="57:9" pos:end="117:31">

        <comment type="line" pos:start="55:9" pos:end="55:97">// We allow unreasonably big packets, even if the standard only allows a max size of 1472</comment>

        <if_stmt pos:start="57:9" pos:end="59:39"><if pos:start="57:9" pos:end="59:39">if <condition pos:start="57:12" pos:end="57:115">(<expr pos:start="57:13" pos:end="57:114"><operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:27">pesheader_size</name> <operator pos:start="57:29" pos:end="57:29">+</operator> <name pos:start="57:31" pos:end="57:34">left</name><operator pos:start="57:35" pos:end="57:35">)</operator> <operator pos:start="57:37" pos:end="57:37">&lt;</operator> <literal type="number" pos:start="57:39" pos:end="57:41">184</literal> <operator pos:start="57:43" pos:end="57:44">||</operator> <operator pos:start="57:46" pos:end="57:46">(</operator><name pos:start="57:47" pos:end="57:60">pesheader_size</name> <operator pos:start="57:62" pos:end="57:62">+</operator> <name pos:start="57:64" pos:end="57:67">left</name><operator pos:start="57:68" pos:end="57:68">)</operator> <operator pos:start="57:70" pos:end="57:70">&gt;</operator> <literal type="number" pos:start="57:72" pos:end="57:76">65504</literal> <operator pos:start="57:78" pos:end="57:79">||</operator> <operator pos:start="57:81" pos:end="57:81">(</operator><name pos:start="57:82" pos:end="57:95">pesheader_size</name> <operator pos:start="57:97" pos:end="57:97">+</operator> <name pos:start="57:99" pos:end="57:102">left</name><operator pos:start="57:103" pos:end="57:103">)</operator> <operator pos:start="57:105" pos:end="57:105">%</operator> <literal type="number" pos:start="57:107" pos:end="57:109">184</literal> <operator pos:start="57:111" pos:end="57:112">!=</operator> <literal type="number" pos:start="57:114" pos:end="57:114">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:39"><block_content pos:start="59:13" pos:end="59:39">

            <return pos:start="59:13" pos:end="59:39">return <expr pos:start="59:20" pos:end="59:38"><name pos:start="59:20" pos:end="59:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:58"><expr pos:start="63:9" pos:end="63:57"><call pos:start="63:9" pos:end="63:57"><name pos:start="63:9" pos:end="63:14">memset</name><argument_list pos:start="63:15" pos:end="63:57">(<argument pos:start="63:16" pos:end="63:29"><expr pos:start="63:16" pos:end="63:29"><name pos:start="63:16" pos:end="63:24">pesheader</name> <operator pos:start="63:26" pos:end="63:26">+</operator> <literal type="number" pos:start="63:28" pos:end="63:29">14</literal></expr></argument>, <argument pos:start="63:32" pos:end="63:35"><expr pos:start="63:32" pos:end="63:35"><literal type="number" pos:start="63:32" pos:end="63:35">0xff</literal></expr></argument>, <argument pos:start="63:38" pos:end="63:56"><expr pos:start="63:38" pos:end="63:56"><name pos:start="63:38" pos:end="63:51">pesheader_size</name> <operator pos:start="63:53" pos:end="63:53">-</operator> <literal type="number" pos:start="63:55" pos:end="63:56">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:58"><expr pos:start="65:9" pos:end="65:57"><call pos:start="65:9" pos:end="65:57"><name pos:start="65:9" pos:end="65:15">AV_WB16</name><argument_list pos:start="65:16" pos:end="65:57">(<argument pos:start="65:17" pos:end="65:29"><expr pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:25">pesheader</name> <operator pos:start="65:27" pos:end="65:27">+</operator> <literal type="number" pos:start="65:29" pos:end="65:29">4</literal></expr></argument>, <argument pos:start="65:32" pos:end="65:56"><expr pos:start="65:32" pos:end="65:56"><name pos:start="65:32" pos:end="65:35">left</name> <operator pos:start="65:37" pos:end="65:37">+</operator> <name pos:start="65:39" pos:end="65:52">pesheader_size</name> <operator pos:start="65:54" pos:end="65:54">-</operator> <literal type="number" pos:start="65:56" pos:end="65:56">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="69:9" pos:end="73:77">/* PTS is deliberately left as 0 in the PES header, otherwise libzvbi uses

         * it to detect dropped frames. Unforunatey the guessed packet PTS values

         * (see mpegts demuxer) are not accurate enough to pass that test. */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:91"><expr pos:start="75:9" pos:end="75:90"><call pos:start="75:9" pos:end="75:90"><name pos:start="75:9" pos:end="75:25">vbi_dvb_demux_cor</name><argument_list pos:start="75:26" pos:end="75:90">(<argument pos:start="75:27" pos:end="75:33"><expr pos:start="75:27" pos:end="75:33"><name pos:start="75:27" pos:end="75:33"><name pos:start="75:27" pos:end="75:29">ctx</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:33">dx</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:46"><expr pos:start="75:36" pos:end="75:46"><name pos:start="75:36" pos:end="75:46"><name pos:start="75:36" pos:end="75:38">ctx</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:46">sliced</name></name></expr></argument>, <argument pos:start="75:49" pos:end="75:50"><expr pos:start="75:49" pos:end="75:50"><literal type="number" pos:start="75:49" pos:end="75:50">64</literal></expr></argument>, <argument pos:start="75:53" pos:end="75:56"><expr pos:start="75:53" pos:end="75:56"><name pos:start="75:53" pos:end="75:56">NULL</name></expr></argument>, <argument pos:start="75:59" pos:end="75:72"><expr pos:start="75:59" pos:end="75:72"><operator pos:start="75:59" pos:end="75:59">&amp;</operator><name pos:start="75:60" pos:end="75:72">pesheader_buf</name></expr></argument>, <argument pos:start="75:75" pos:end="75:89"><expr pos:start="75:75" pos:end="75:89"><operator pos:start="75:75" pos:end="75:75">&amp;</operator><name pos:start="75:76" pos:end="75:89">pesheader_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:11">ctx</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:24">handler_ret</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:30">pkt</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:36">size</name></name></expr>;</expr_stmt>



        <while pos:start="83:9" pos:end="113:9">while <condition pos:start="83:15" pos:end="83:24">(<expr pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:19">left</name> <operator pos:start="83:21" pos:end="83:21">&gt;</operator> <literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr>)</condition> <block pos:start="83:26" pos:end="113:9">{<block_content pos:start="85:13" pos:end="111:13">

            <decl_stmt pos:start="85:13" pos:end="85:28"><decl pos:start="85:13" pos:end="85:27"><type pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:19">int64_t</name></type> <name pos:start="85:21" pos:end="85:23">pts</name> <init pos:start="85:25" pos:end="85:27">= <expr pos:start="85:27" pos:end="85:27"><literal type="number" pos:start="85:27" pos:end="85:27">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="87:13" pos:end="87:96"><decl pos:start="87:13" pos:end="87:95"><type pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:20">unsigned</name> <name pos:start="87:22" pos:end="87:24">int</name></type> <name pos:start="87:26" pos:end="87:30">lines</name> <init pos:start="87:32" pos:end="87:95">= <expr pos:start="87:34" pos:end="87:95"><call pos:start="87:34" pos:end="87:95"><name pos:start="87:34" pos:end="87:50">vbi_dvb_demux_cor</name><argument_list pos:start="87:51" pos:end="87:95">(<argument pos:start="87:52" pos:end="87:58"><expr pos:start="87:52" pos:end="87:58"><name pos:start="87:52" pos:end="87:58"><name pos:start="87:52" pos:end="87:54">ctx</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:58">dx</name></name></expr></argument>, <argument pos:start="87:61" pos:end="87:71"><expr pos:start="87:61" pos:end="87:71"><name pos:start="87:61" pos:end="87:71"><name pos:start="87:61" pos:end="87:63">ctx</name><operator pos:start="87:64" pos:end="87:65">-&gt;</operator><name pos:start="87:66" pos:end="87:71">sliced</name></name></expr></argument>, <argument pos:start="87:74" pos:end="87:75"><expr pos:start="87:74" pos:end="87:75"><literal type="number" pos:start="87:74" pos:end="87:75">64</literal></expr></argument>, <argument pos:start="87:78" pos:end="87:81"><expr pos:start="87:78" pos:end="87:81"><operator pos:start="87:78" pos:end="87:78">&amp;</operator><name pos:start="87:79" pos:end="87:81">pts</name></expr></argument>, <argument pos:start="87:84" pos:end="87:87"><expr pos:start="87:84" pos:end="87:87"><operator pos:start="87:84" pos:end="87:84">&amp;</operator><name pos:start="87:85" pos:end="87:87">buf</name></expr></argument>, <argument pos:start="87:90" pos:end="87:94"><expr pos:start="87:90" pos:end="87:94"><operator pos:start="87:90" pos:end="87:90">&amp;</operator><name pos:start="87:91" pos:end="87:94">left</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="89:13" pos:end="91:96"><expr pos:start="89:13" pos:end="91:95"><call pos:start="89:13" pos:end="91:95"><name pos:start="89:13" pos:end="89:19">av_dlog</name><argument_list pos:start="89:20" pos:end="91:95">(<argument pos:start="89:21" pos:end="89:25"><expr pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:25">avctx</name></expr></argument>, <argument pos:start="89:28" pos:end="89:84"><expr pos:start="89:28" pos:end="89:84"><literal type="string" pos:start="89:28" pos:end="89:84">"ctx=%p buf_size=%d left=%u lines=%u pts=%f pkt_pts=%f\n"</literal></expr></argument>,

                    <argument pos:start="91:21" pos:end="91:23"><expr pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">ctx</name></expr></argument>, <argument pos:start="91:26" pos:end="91:34"><expr pos:start="91:26" pos:end="91:34"><name pos:start="91:26" pos:end="91:34"><name pos:start="91:26" pos:end="91:28">pkt</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:34">size</name></name></expr></argument>, <argument pos:start="91:37" pos:end="91:40"><expr pos:start="91:37" pos:end="91:40"><name pos:start="91:37" pos:end="91:40">left</name></expr></argument>, <argument pos:start="91:43" pos:end="91:47"><expr pos:start="91:43" pos:end="91:47"><name pos:start="91:43" pos:end="91:47">lines</name></expr></argument>, <argument pos:start="91:50" pos:end="91:68"><expr pos:start="91:50" pos:end="91:68"><operator pos:start="91:50" pos:end="91:50">(</operator><name pos:start="91:51" pos:end="91:56">double</name><operator pos:start="91:57" pos:end="91:57">)</operator><name pos:start="91:58" pos:end="91:60">pts</name><operator pos:start="91:61" pos:end="91:61">/</operator><literal type="number" pos:start="91:62" pos:end="91:68">90000.0</literal></expr></argument>, <argument pos:start="91:71" pos:end="91:94"><expr pos:start="91:71" pos:end="91:94"><operator pos:start="91:71" pos:end="91:71">(</operator><name pos:start="91:72" pos:end="91:77">double</name><operator pos:start="91:78" pos:end="91:78">)</operator><name pos:start="91:79" pos:end="91:86"><name pos:start="91:79" pos:end="91:81">pkt</name><operator pos:start="91:82" pos:end="91:83">-&gt;</operator><name pos:start="91:84" pos:end="91:86">pts</name></name><operator pos:start="91:87" pos:end="91:87">/</operator><literal type="number" pos:start="91:88" pos:end="91:94">90000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="111:13"><if pos:start="93:13" pos:end="111:13">if <condition pos:start="93:16" pos:end="93:26">(<expr pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:21">lines</name> <operator pos:start="93:23" pos:end="93:23">&gt;</operator> <literal type="number" pos:start="93:25" pos:end="93:25">0</literal></expr>)</condition> <block pos:start="93:28" pos:end="111:13">{<block_content pos:start="97:17" pos:end="109:46">

<cpp:ifdef pos:start="95:1" pos:end="95:13">#<cpp:directive pos:start="95:2" pos:end="95:6">ifdef</cpp:directive> <name pos:start="95:8" pos:end="95:13">DEBUGx</name></cpp:ifdef>

                <decl_stmt pos:start="97:17" pos:end="97:22"><decl pos:start="97:17" pos:end="97:21"><type pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:19">int</name></type> <name pos:start="97:21" pos:end="97:21">i</name></decl>;</decl_stmt>

                <for pos:start="99:17" pos:end="106:0">for<control pos:start="99:20" pos:end="99:38">(<init pos:start="99:21" pos:end="99:24"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:21">i</name><operator pos:start="99:22" pos:end="99:22">=</operator><literal type="number" pos:start="99:23" pos:end="99:23">0</literal></expr>;</init> <condition pos:start="99:26" pos:end="99:33"><expr pos:start="99:26" pos:end="99:32"><name pos:start="99:26" pos:end="99:26">i</name><operator pos:start="99:27" pos:end="99:27">&lt;</operator><name pos:start="99:28" pos:end="99:32">lines</name></expr>;</condition> <incr pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><operator pos:start="99:35" pos:end="99:36">++</operator><name pos:start="99:37" pos:end="99:37">i</name></expr></incr>)</control><block type="pseudo" pos:start="101:21" pos:end="106:0"><block_content pos:start="101:21" pos:end="106:0">

                    <expr_stmt pos:start="101:21" pos:end="106:0"><expr pos:start="101:21" pos:end="103:68"><call pos:start="101:21" pos:end="103:68"><name pos:start="101:21" pos:end="101:26">av_log</name><argument_list pos:start="101:27" pos:end="103:68">(<argument pos:start="101:28" pos:end="101:32"><expr pos:start="101:28" pos:end="101:32"><name pos:start="101:28" pos:end="101:32">avctx</name></expr></argument>, <argument pos:start="101:35" pos:end="101:46"><expr pos:start="101:35" pos:end="101:46"><name pos:start="101:35" pos:end="101:46">AV_LOG_DEBUG</name></expr></argument>,

                           <argument pos:start="103:28" pos:end="103:45"><expr pos:start="103:28" pos:end="103:45"><literal type="string" pos:start="103:28" pos:end="103:45">"lines=%d id=%x\n"</literal></expr></argument>, <argument pos:start="103:48" pos:end="103:48"><expr pos:start="103:48" pos:end="103:48"><name pos:start="103:48" pos:end="103:48">i</name></expr></argument>, <argument pos:start="103:51" pos:end="103:67"><expr pos:start="103:51" pos:end="103:67"><name pos:start="103:51" pos:end="103:64"><name pos:start="103:51" pos:end="103:53">ctx</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:61">sliced</name><index pos:start="103:62" pos:end="103:64">[<expr pos:start="103:63" pos:end="103:63"><name pos:start="103:63" pos:end="103:63">i</name></expr>]</index></name><operator pos:start="103:65" pos:end="103:65">.</operator><name pos:start="103:66" pos:end="103:67">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="107:17" pos:end="107:78"><expr pos:start="107:17" pos:end="107:77"><call pos:start="107:17" pos:end="107:77"><name pos:start="107:17" pos:end="107:26">vbi_decode</name><argument_list pos:start="107:27" pos:end="107:77">(<argument pos:start="107:28" pos:end="107:35"><expr pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:30">ctx</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:35">vbi</name></name></expr></argument>, <argument pos:start="107:38" pos:end="107:48"><expr pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:40">ctx</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:48">sliced</name></name></expr></argument>, <argument pos:start="107:51" pos:end="107:55"><expr pos:start="107:51" pos:end="107:55"><name pos:start="107:51" pos:end="107:55">lines</name></expr></argument>, <argument pos:start="107:58" pos:end="107:76"><expr pos:start="107:58" pos:end="107:76"><operator pos:start="107:58" pos:end="107:58">(</operator><name pos:start="107:59" pos:end="107:64">double</name><operator pos:start="107:65" pos:end="107:65">)</operator><name pos:start="107:66" pos:end="107:68">pts</name><operator pos:start="107:69" pos:end="107:69">/</operator><literal type="number" pos:start="107:70" pos:end="107:76">90000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:46"><expr pos:start="109:17" pos:end="109:45"><name pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:19">ctx</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:36">lines_processed</name></name> <operator pos:start="109:38" pos:end="109:39">+=</operator> <name pos:start="109:41" pos:end="109:45">lines</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="115:9" pos:end="115:34"><expr pos:start="115:9" pos:end="115:33"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:11">ctx</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:16">pts</name></name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <name pos:start="117:15" pos:end="117:30"><name pos:start="117:15" pos:end="117:17">ctx</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:30">handler_ret</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="125:19"><if pos:start="123:5" pos:end="125:19">if <condition pos:start="123:8" pos:end="123:16">(<expr pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">&lt;</operator> <literal type="number" pos:start="123:15" pos:end="123:15">0</literal></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:19"><block_content pos:start="125:9" pos:end="125:19">

        <return pos:start="125:9" pos:end="125:19">return <expr pos:start="125:16" pos:end="125:18"><name pos:start="125:16" pos:end="125:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="129:5" pos:end="129:35">// is there a subtitle to pass?</comment>

    <if_stmt pos:start="131:5" pos:end="191:23"><if pos:start="131:5" pos:end="189:5">if <condition pos:start="131:8" pos:end="131:22">(<expr pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:11">ctx</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:21">nb_pages</name></name></expr>)</condition> <block pos:start="131:24" pos:end="189:5">{<block_content pos:start="133:9" pos:end="187:27">

        <decl_stmt pos:start="133:9" pos:end="133:14"><decl pos:start="133:9" pos:end="133:13"><type pos:start="133:9" pos:end="133:11"><name pos:start="133:9" pos:end="133:11">int</name></type> <name pos:start="133:13" pos:end="133:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:37"><expr pos:start="135:9" pos:end="135:36"><name pos:start="135:9" pos:end="135:19"><name pos:start="135:9" pos:end="135:11">sub</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:19">format</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:36"><name pos:start="135:23" pos:end="135:25">ctx</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:36">format_id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:36"><expr pos:start="137:9" pos:end="137:35"><name pos:start="137:9" pos:end="137:31"><name pos:start="137:9" pos:end="137:11">sub</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:31">start_display_time</name></name> <operator pos:start="137:33" pos:end="137:33">=</operator> <literal type="number" pos:start="137:35" pos:end="137:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:50"><expr pos:start="139:9" pos:end="139:49"><name pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:11">sub</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:29">end_display_time</name></name> <operator pos:start="139:31" pos:end="139:31">=</operator> <name pos:start="139:33" pos:end="139:49"><name pos:start="139:33" pos:end="139:35">ctx</name><operator pos:start="139:36" pos:end="139:37">-&gt;</operator><name pos:start="139:38" pos:end="139:49">sub_duration</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:27"><expr pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:11">sub</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:22">num_rects</name></name> <operator pos:start="141:24" pos:end="141:24">=</operator> <literal type="number" pos:start="141:26" pos:end="141:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:35"><expr pos:start="143:9" pos:end="143:34"><name pos:start="143:9" pos:end="143:16"><name pos:start="143:9" pos:end="143:11">sub</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:16">pts</name></name> <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:34"><name pos:start="143:20" pos:end="143:22">ctx</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:29">pages</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:34">pts</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="147:9" pos:end="169:9"><if pos:start="147:9" pos:end="163:9">if <condition pos:start="147:12" pos:end="147:56">(<expr pos:start="147:13" pos:end="147:55"><name pos:start="147:13" pos:end="147:38"><name pos:start="147:13" pos:end="147:15">ctx</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:22">pages</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:32">sub_rect</name><operator pos:start="147:33" pos:end="147:34">-&gt;</operator><name pos:start="147:35" pos:end="147:38">type</name></name> <operator pos:start="147:40" pos:end="147:41">!=</operator> <name pos:start="147:43" pos:end="147:55">SUBTITLE_NONE</name></expr>)</condition> <block pos:start="147:58" pos:end="163:9">{<block_content pos:start="149:13" pos:end="161:13">

            <expr_stmt pos:start="149:13" pos:end="149:60"><expr pos:start="149:13" pos:end="149:59"><name pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:15">sub</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:22">rects</name></name> <operator pos:start="149:24" pos:end="149:24">=</operator> <call pos:start="149:26" pos:end="149:59"><name pos:start="149:26" pos:end="149:34">av_malloc</name><argument_list pos:start="149:35" pos:end="149:59">(<argument pos:start="149:36" pos:end="149:58"><expr pos:start="149:36" pos:end="149:58"><sizeof pos:start="149:36" pos:end="149:54">sizeof<argument_list pos:start="149:42" pos:end="149:54">(<argument pos:start="149:43" pos:end="149:53"><expr pos:start="149:43" pos:end="149:53"><operator pos:start="149:43" pos:end="149:43">*</operator><name pos:start="149:44" pos:end="149:53"><name pos:start="149:44" pos:end="149:46">sub</name><operator pos:start="149:47" pos:end="149:48">-&gt;</operator><name pos:start="149:49" pos:end="149:53">rects</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="149:56" pos:end="149:56">*</operator> <literal type="number" pos:start="149:58" pos:end="149:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="161:13"><if pos:start="151:13" pos:end="157:13">if <condition pos:start="151:16" pos:end="151:27">(<expr pos:start="151:17" pos:end="151:26"><name pos:start="151:17" pos:end="151:26"><name pos:start="151:17" pos:end="151:19">sub</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:26">rects</name></name></expr>)</condition> <block pos:start="151:29" pos:end="157:13">{<block_content pos:start="153:17" pos:end="155:53">

                <expr_stmt pos:start="153:17" pos:end="153:35"><expr pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:30"><name pos:start="153:17" pos:end="153:19">sub</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:30">num_rects</name></name> <operator pos:start="153:32" pos:end="153:32">=</operator> <literal type="number" pos:start="153:34" pos:end="153:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:53"><expr pos:start="155:17" pos:end="155:52"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:19">sub</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:26">rects</name><index pos:start="155:27" pos:end="155:29">[<expr pos:start="155:28" pos:end="155:28"><literal type="number" pos:start="155:28" pos:end="155:28">0</literal></expr>]</index></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <name pos:start="155:33" pos:end="155:52"><name pos:start="155:33" pos:end="155:35">ctx</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:42">pages</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:52">sub_rect</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="157:15" pos:end="161:13">else <block pos:start="157:20" pos:end="161:13">{<block_content pos:start="159:17" pos:end="159:38">

                <expr_stmt pos:start="159:17" pos:end="159:38"><expr pos:start="159:17" pos:end="159:37"><name pos:start="159:17" pos:end="159:19">ret</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <call pos:start="159:23" pos:end="159:37"><name pos:start="159:23" pos:end="159:29">AVERROR</name><argument_list pos:start="159:30" pos:end="159:37">(<argument pos:start="159:31" pos:end="159:36"><expr pos:start="159:31" pos:end="159:36"><name pos:start="159:31" pos:end="159:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="163:11" pos:end="169:9">else <block pos:start="163:16" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:30">

            <expr_stmt pos:start="165:13" pos:end="165:63"><expr pos:start="165:13" pos:end="165:62"><call pos:start="165:13" pos:end="165:62"><name pos:start="165:13" pos:end="165:18">av_log</name><argument_list pos:start="165:19" pos:end="165:62">(<argument pos:start="165:20" pos:end="165:24"><expr pos:start="165:20" pos:end="165:24"><name pos:start="165:20" pos:end="165:24">avctx</name></expr></argument>, <argument pos:start="165:27" pos:end="165:38"><expr pos:start="165:27" pos:end="165:38"><name pos:start="165:27" pos:end="165:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="165:41" pos:end="165:61"><expr pos:start="165:41" pos:end="165:61"><literal type="string" pos:start="165:41" pos:end="165:61">"sending empty sub\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:30"><expr pos:start="167:13" pos:end="167:29"><name pos:start="167:13" pos:end="167:22"><name pos:start="167:13" pos:end="167:15">sub</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:22">rects</name></name> <operator pos:start="167:24" pos:end="167:24">=</operator> <name pos:start="167:26" pos:end="167:29">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="171:9" pos:end="173:54"><if pos:start="171:9" pos:end="173:54">if <condition pos:start="171:12" pos:end="171:24">(<expr pos:start="171:13" pos:end="171:23"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:23"><name pos:start="171:14" pos:end="171:16">sub</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:23">rects</name></name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:54"><block_content pos:start="173:13" pos:end="173:54"> <comment type="line" pos:start="171:26" pos:end="171:46">// no rect was passed</comment>

            <expr_stmt pos:start="173:13" pos:end="173:54"><expr pos:start="173:13" pos:end="173:53"><call pos:start="173:13" pos:end="173:53"><name pos:start="173:13" pos:end="173:30">subtitle_rect_free</name><argument_list pos:start="173:31" pos:end="173:53">(<argument pos:start="173:32" pos:end="173:52"><expr pos:start="173:32" pos:end="173:52"><operator pos:start="173:32" pos:end="173:32">&amp;</operator><name pos:start="173:33" pos:end="173:52"><name pos:start="173:33" pos:end="173:35">ctx</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:42">pages</name><operator pos:start="173:43" pos:end="173:44">-&gt;</operator><name pos:start="173:45" pos:end="173:52">sub_rect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="177:9" pos:end="179:46">for <control pos:start="177:13" pos:end="177:47">(<init pos:start="177:14" pos:end="177:19"><expr pos:start="177:14" pos:end="177:18"><name pos:start="177:14" pos:end="177:14">i</name> <operator pos:start="177:16" pos:end="177:16">=</operator> <literal type="number" pos:start="177:18" pos:end="177:18">0</literal></expr>;</init> <condition pos:start="177:21" pos:end="177:42"><expr pos:start="177:21" pos:end="177:41"><name pos:start="177:21" pos:end="177:21">i</name> <operator pos:start="177:23" pos:end="177:23">&lt;</operator> <name pos:start="177:25" pos:end="177:37"><name pos:start="177:25" pos:end="177:27">ctx</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:37">nb_pages</name></name> <operator pos:start="177:39" pos:end="177:39">-</operator> <literal type="number" pos:start="177:41" pos:end="177:41">1</literal></expr>;</condition> <incr pos:start="177:44" pos:end="177:46"><expr pos:start="177:44" pos:end="177:46"><name pos:start="177:44" pos:end="177:44">i</name><operator pos:start="177:45" pos:end="177:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:13" pos:end="179:46"><block_content pos:start="179:13" pos:end="179:46">

            <expr_stmt pos:start="179:13" pos:end="179:46"><expr pos:start="179:13" pos:end="179:45"><name pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:15">ctx</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:22">pages</name><index pos:start="179:23" pos:end="179:25">[<expr pos:start="179:24" pos:end="179:24"><name pos:start="179:24" pos:end="179:24">i</name></expr>]</index></name> <operator pos:start="179:27" pos:end="179:27">=</operator> <name pos:start="179:29" pos:end="179:45"><name pos:start="179:29" pos:end="179:31">ctx</name><operator pos:start="179:32" pos:end="179:33">-&gt;</operator><name pos:start="179:34" pos:end="179:38">pages</name><index pos:start="179:39" pos:end="179:45">[<expr pos:start="179:40" pos:end="179:44"><name pos:start="179:40" pos:end="179:40">i</name> <operator pos:start="179:42" pos:end="179:42">+</operator> <literal type="number" pos:start="179:44" pos:end="179:44">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="181:9" pos:end="181:24"><expr pos:start="181:9" pos:end="181:23"><name pos:start="181:9" pos:end="181:21"><name pos:start="181:9" pos:end="181:11">ctx</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:21">nb_pages</name></name><operator pos:start="181:22" pos:end="181:23">--</operator></expr>;</expr_stmt>



        <if_stmt pos:start="185:9" pos:end="187:27"><if pos:start="185:9" pos:end="187:27">if <condition pos:start="185:12" pos:end="185:21">(<expr pos:start="185:13" pos:end="185:20"><name pos:start="185:13" pos:end="185:15">ret</name> <operator pos:start="185:17" pos:end="185:18">&gt;=</operator> <literal type="number" pos:start="185:20" pos:end="185:20">0</literal></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:27"><block_content pos:start="187:13" pos:end="187:27">

            <expr_stmt pos:start="187:13" pos:end="187:27"><expr pos:start="187:13" pos:end="187:26"><operator pos:start="187:13" pos:end="187:13">*</operator><name pos:start="187:14" pos:end="187:22">data_size</name> <operator pos:start="187:24" pos:end="187:24">=</operator> <literal type="number" pos:start="187:26" pos:end="187:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="191:23">else<block type="pseudo" pos:start="191:9" pos:end="191:23"><block_content pos:start="191:9" pos:end="191:23">

        <expr_stmt pos:start="191:9" pos:end="191:23"><expr pos:start="191:9" pos:end="191:22"><operator pos:start="191:9" pos:end="191:9">*</operator><name pos:start="191:10" pos:end="191:18">data_size</name> <operator pos:start="191:20" pos:end="191:20">=</operator> <literal type="number" pos:start="191:22" pos:end="191:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="195:5" pos:end="195:15">return <expr pos:start="195:12" pos:end="195:14"><name pos:start="195:12" pos:end="195:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
