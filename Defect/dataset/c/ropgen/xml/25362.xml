<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25362.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:35">gen_bcond</name> <parameter_list pos:start="1:37" pos:end="5:70">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:44">TCGCond</name></type> <name pos:start="3:46" pos:end="3:49">cond</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:43"><decl pos:start="5:38" pos:end="5:43"><type pos:start="5:38" pos:end="5:43"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:43">ra</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:59"><decl pos:start="5:46" pos:end="5:59"><type pos:start="5:46" pos:end="5:59"><name pos:start="5:46" pos:end="5:52">int32_t</name></type> <name pos:start="5:54" pos:end="5:59">disp16</name></decl></parameter>, <parameter pos:start="5:62" pos:end="5:69"><decl pos:start="5:62" pos:end="5:69"><type pos:start="5:62" pos:end="5:69"><name pos:start="5:62" pos:end="5:64">int</name></type> <name pos:start="5:66" pos:end="5:69">mask</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="55:1">{<block_content pos:start="9:5" pos:end="53:22">

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">l1</name></decl>, <decl pos:start="9:13" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">l2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:6">l1</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:22">gen_new_label</name><argument_list pos:start="13:23" pos:end="13:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:6">l2</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:24"><name pos:start="15:10" pos:end="15:22">gen_new_label</name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="43:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:25">(<expr pos:start="17:9" pos:end="17:24"><call pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:14">likely</name><argument_list pos:start="17:15" pos:end="17:24">(<argument pos:start="17:16" pos:end="17:23"><expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:17">ra</name> <operator pos:start="17:19" pos:end="17:20">!=</operator> <literal type="number" pos:start="17:22" pos:end="17:23">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:27" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:57">

        <if_stmt pos:start="19:9" pos:end="31:57"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">mask</name></expr>)</condition> <block pos:start="19:19" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:31">

            <decl_stmt pos:start="21:13" pos:end="21:50"><decl pos:start="21:13" pos:end="21:49"><type pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">TCGv</name></type> <name pos:start="21:18" pos:end="21:20">tmp</name> <init pos:start="21:22" pos:end="21:49">= <expr pos:start="21:24" pos:end="21:49"><call pos:start="21:24" pos:end="21:49"><name pos:start="21:24" pos:end="21:35">tcg_temp_new</name><argument_list pos:start="21:36" pos:end="21:49">(<argument pos:start="21:37" pos:end="21:48"><expr pos:start="21:37" pos:end="21:48"><name pos:start="21:37" pos:end="21:48">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:49"><expr pos:start="23:13" pos:end="23:48"><call pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:28">tcg_gen_andi_i64</name><argument_list pos:start="23:29" pos:end="23:48">(<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">tmp</name></expr></argument>, <argument pos:start="23:35" pos:end="23:44"><expr pos:start="23:35" pos:end="23:44"><name pos:start="23:35" pos:end="23:44"><name pos:start="23:35" pos:end="23:40">cpu_ir</name><index pos:start="23:41" pos:end="23:44">[<expr pos:start="23:42" pos:end="23:43"><name pos:start="23:42" pos:end="23:43">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="23:47" pos:end="23:47"><expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:50"><expr pos:start="25:13" pos:end="25:49"><call pos:start="25:13" pos:end="25:49"><name pos:start="25:13" pos:end="25:31">tcg_gen_brcondi_i64</name><argument_list pos:start="25:32" pos:end="25:49">(<argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">cond</name></expr></argument>, <argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:41">tmp</name></expr></argument>, <argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><literal type="number" pos:start="25:44" pos:end="25:44">0</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:48"><expr pos:start="25:47" pos:end="25:48"><name pos:start="25:47" pos:end="25:48">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:31"><expr pos:start="27:13" pos:end="27:30"><call pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:25">tcg_temp_free</name><argument_list pos:start="27:26" pos:end="27:30">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="31:57">else<block type="pseudo" pos:start="31:13" pos:end="31:57"><block_content pos:start="31:13" pos:end="31:57">

            <expr_stmt pos:start="31:13" pos:end="31:57"><expr pos:start="31:13" pos:end="31:56"><call pos:start="31:13" pos:end="31:56"><name pos:start="31:13" pos:end="31:31">tcg_gen_brcondi_i64</name><argument_list pos:start="31:32" pos:end="31:56">(<argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">cond</name></expr></argument>, <argument pos:start="31:39" pos:end="31:48"><expr pos:start="31:39" pos:end="31:48"><name pos:start="31:39" pos:end="31:48"><name pos:start="31:39" pos:end="31:44">cpu_ir</name><index pos:start="31:45" pos:end="31:48">[<expr pos:start="31:46" pos:end="31:47"><name pos:start="31:46" pos:end="31:47">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="31:51" pos:end="31:51"><expr pos:start="31:51" pos:end="31:51"><literal type="number" pos:start="31:51" pos:end="31:51">0</literal></expr></argument>, <argument pos:start="31:54" pos:end="31:55"><expr pos:start="31:54" pos:end="31:55"><name pos:start="31:54" pos:end="31:55">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="43:5">else <block pos:start="33:12" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:27">

        <comment type="block" pos:start="35:9" pos:end="35:62">/* Very uncommon case - Do not bother to optimize.  */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:36"><decl pos:start="37:9" pos:end="37:35"><type pos:start="37:9" pos:end="37:12"><name pos:start="37:9" pos:end="37:12">TCGv</name></type> <name pos:start="37:14" pos:end="37:16">tmp</name> <init pos:start="37:18" pos:end="37:35">= <expr pos:start="37:20" pos:end="37:35"><call pos:start="37:20" pos:end="37:35"><name pos:start="37:20" pos:end="37:32">tcg_const_i64</name><argument_list pos:start="37:33" pos:end="37:35">(<argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:46"><expr pos:start="39:9" pos:end="39:45"><call pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:27">tcg_gen_brcondi_i64</name><argument_list pos:start="39:28" pos:end="39:45">(<argument pos:start="39:29" pos:end="39:32"><expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">cond</name></expr></argument>, <argument pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><name pos:start="39:35" pos:end="39:37">tmp</name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:44"><expr pos:start="39:43" pos:end="39:44"><name pos:start="39:43" pos:end="39:44">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><call pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:21">tcg_temp_free</name><argument_list pos:start="41:22" pos:end="41:26">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><call pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:20">tcg_gen_movi_i64</name><argument_list pos:start="45:21" pos:end="45:37">(<argument pos:start="45:22" pos:end="45:27"><expr pos:start="45:22" pos:end="45:27"><name pos:start="45:22" pos:end="45:27">cpu_pc</name></expr></argument>, <argument pos:start="45:30" pos:end="45:36"><expr pos:start="45:30" pos:end="45:36"><name pos:start="45:30" pos:end="45:36"><name pos:start="45:30" pos:end="45:32">ctx</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:36">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:19"><expr pos:start="47:5" pos:end="47:18"><call pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:14">tcg_gen_br</name><argument_list pos:start="47:15" pos:end="47:18">(<argument pos:start="47:16" pos:end="47:17"><expr pos:start="47:16" pos:end="47:17"><name pos:start="47:16" pos:end="47:17">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:22"><expr pos:start="49:5" pos:end="49:21"><call pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:17">gen_set_label</name><argument_list pos:start="49:18" pos:end="49:21">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:63"><expr pos:start="51:5" pos:end="51:62"><call pos:start="51:5" pos:end="51:62"><name pos:start="51:5" pos:end="51:20">tcg_gen_movi_i64</name><argument_list pos:start="51:21" pos:end="51:62">(<argument pos:start="51:22" pos:end="51:27"><expr pos:start="51:22" pos:end="51:27"><name pos:start="51:22" pos:end="51:27">cpu_pc</name></expr></argument>, <argument pos:start="51:30" pos:end="51:61"><expr pos:start="51:30" pos:end="51:61"><name pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:32">ctx</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:36">pc</name></name> <operator pos:start="51:38" pos:end="51:38">+</operator> <operator pos:start="51:40" pos:end="51:40">(</operator><name pos:start="51:41" pos:end="51:47">int64_t</name><operator pos:start="51:48" pos:end="51:48">)</operator><operator pos:start="51:49" pos:end="51:49">(</operator><name pos:start="51:50" pos:end="51:55">disp16</name> <operator pos:start="51:57" pos:end="51:58">&lt;&lt;</operator> <literal type="number" pos:start="51:60" pos:end="51:60">2</literal><operator pos:start="51:61" pos:end="51:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:22"><expr pos:start="53:5" pos:end="53:21"><call pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:17">gen_set_label</name><argument_list pos:start="53:18" pos:end="53:21">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
