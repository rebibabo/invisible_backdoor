<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13818.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">bmdma_map</name><parameter_list pos:start="1:22" pos:end="3:59">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:31">PCIDevice</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">pci_dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:56">region_num</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:33"><decl pos:start="3:21" pos:end="3:33"><type pos:start="3:21" pos:end="3:33"><name pos:start="3:21" pos:end="3:28">pcibus_t</name></type> <name pos:start="3:30" pos:end="3:33">addr</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:43">pcibus_t</name></type> <name pos:start="3:45" pos:end="3:48">size</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:58"><decl pos:start="3:51" pos:end="3:58"><type pos:start="3:51" pos:end="3:58"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:58">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:5">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PCIIDEState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">d</name> <init pos:start="7:20" pos:end="7:57">= <expr pos:start="7:22" pos:end="7:57"><call pos:start="7:22" pos:end="7:57"><name pos:start="7:22" pos:end="7:30">DO_UPCAST</name><argument_list pos:start="7:31" pos:end="7:57">(<argument pos:start="7:32" pos:end="7:42"><expr pos:start="7:32" pos:end="7:42"><name pos:start="7:32" pos:end="7:42">PCIIDEState</name></expr></argument>, <argument pos:start="7:45" pos:end="7:47"><expr pos:start="7:45" pos:end="7:47"><name pos:start="7:45" pos:end="7:47">dev</name></expr></argument>, <argument pos:start="7:50" pos:end="7:56"><expr pos:start="7:50" pos:end="7:56"><name pos:start="7:50" pos:end="7:56">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="51:5">for<control pos:start="13:8" pos:end="13:25">(<init pos:start="13:9" pos:end="13:14"><expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:9">i</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>;</init><condition pos:start="13:15" pos:end="13:20"><expr pos:start="13:15" pos:end="13:19"><name pos:start="13:15" pos:end="13:15">i</name> <operator pos:start="13:17" pos:end="13:17">&lt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">2</literal></expr>;</condition> <incr pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:22">i</name><operator pos:start="13:23" pos:end="13:24">++</operator></expr></incr>)</control> <block pos:start="13:27" pos:end="51:5">{<block_content pos:start="15:9" pos:end="49:18">

        <decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:37"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">BMDMAState</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:22">bm</name> <init pos:start="15:24" pos:end="15:37">= <expr pos:start="15:26" pos:end="15:37"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:27">d</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:34">bmdma</name><index pos:start="15:35" pos:end="15:37">[<expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:9">d</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">bus</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:23">bmdma</name> <operator pos:start="17:25" pos:end="17:25">=</operator> <name pos:start="17:27" pos:end="17:28">bm</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">bm</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:15">bus</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:24"><name pos:start="19:19" pos:end="19:19">d</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:24">bus</name></name><operator pos:start="19:25" pos:end="19:25">+</operator><name pos:start="19:26" pos:end="19:26">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:10">bm</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:19">pci_dev</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:23">d</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:65"><expr pos:start="23:9" pos:end="23:64"><call pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:40">qemu_add_vm_change_state_handler</name><argument_list pos:start="23:41" pos:end="23:64">(<argument pos:start="23:42" pos:end="23:59"><expr pos:start="23:42" pos:end="23:59"><name pos:start="23:42" pos:end="23:59">ide_dma_restart_cb</name></expr></argument>, <argument pos:start="23:62" pos:end="23:63"><expr pos:start="23:62" pos:end="23:63"><name pos:start="23:62" pos:end="23:63">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:64"><expr pos:start="27:9" pos:end="27:63"><call pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:29">register_ioport_write</name><argument_list pos:start="27:30" pos:end="27:63">(<argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">addr</name></expr></argument>, <argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">1</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:58"><expr pos:start="27:43" pos:end="27:58"><name pos:start="27:43" pos:end="27:58">bmdma_cmd_writeb</name></expr></argument>, <argument pos:start="27:61" pos:end="27:62"><expr pos:start="27:61" pos:end="27:62"><name pos:start="27:61" pos:end="27:62">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><call pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:29">register_ioport_write</name><argument_list pos:start="31:30" pos:end="31:63">(<argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:34">addr</name> <operator pos:start="31:36" pos:end="31:36">+</operator> <literal type="number" pos:start="31:38" pos:end="31:38">1</literal></expr></argument>, <argument pos:start="31:41" pos:end="31:41"><expr pos:start="31:41" pos:end="31:41"><literal type="number" pos:start="31:41" pos:end="31:41">3</literal></expr></argument>, <argument pos:start="31:44" pos:end="31:44"><expr pos:start="31:44" pos:end="31:44"><literal type="number" pos:start="31:44" pos:end="31:44">1</literal></expr></argument>, <argument pos:start="31:47" pos:end="31:58"><expr pos:start="31:47" pos:end="31:58"><name pos:start="31:47" pos:end="31:58">bmdma_writeb</name></expr></argument>, <argument pos:start="31:61" pos:end="31:62"><expr pos:start="31:61" pos:end="31:62"><name pos:start="31:61" pos:end="31:62">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><call pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:28">register_ioport_read</name><argument_list pos:start="33:29" pos:end="33:57">(<argument pos:start="33:30" pos:end="33:33"><expr pos:start="33:30" pos:end="33:33"><name pos:start="33:30" pos:end="33:33">addr</name></expr></argument>, <argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">4</literal></expr></argument>, <argument pos:start="33:39" pos:end="33:39"><expr pos:start="33:39" pos:end="33:39"><literal type="number" pos:start="33:39" pos:end="33:39">1</literal></expr></argument>, <argument pos:start="33:42" pos:end="33:52"><expr pos:start="33:42" pos:end="33:52"><name pos:start="33:42" pos:end="33:52">bmdma_readb</name></expr></argument>, <argument pos:start="33:55" pos:end="33:56"><expr pos:start="33:55" pos:end="33:56"><name pos:start="33:55" pos:end="33:56">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><call pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:29">register_ioport_write</name><argument_list pos:start="37:30" pos:end="37:68">(<argument pos:start="37:31" pos:end="37:38"><expr pos:start="37:31" pos:end="37:38"><name pos:start="37:31" pos:end="37:34">addr</name> <operator pos:start="37:36" pos:end="37:36">+</operator> <literal type="number" pos:start="37:38" pos:end="37:38">4</literal></expr></argument>, <argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><literal type="number" pos:start="37:41" pos:end="37:41">4</literal></expr></argument>, <argument pos:start="37:44" pos:end="37:44"><expr pos:start="37:44" pos:end="37:44"><literal type="number" pos:start="37:44" pos:end="37:44">1</literal></expr></argument>, <argument pos:start="37:47" pos:end="37:63"><expr pos:start="37:47" pos:end="37:63"><name pos:start="37:47" pos:end="37:63">bmdma_addr_writeb</name></expr></argument>, <argument pos:start="37:66" pos:end="37:67"><expr pos:start="37:66" pos:end="37:67"><name pos:start="37:66" pos:end="37:67">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:67"><expr pos:start="39:9" pos:end="39:66"><call pos:start="39:9" pos:end="39:66"><name pos:start="39:9" pos:end="39:28">register_ioport_read</name><argument_list pos:start="39:29" pos:end="39:66">(<argument pos:start="39:30" pos:end="39:37"><expr pos:start="39:30" pos:end="39:37"><name pos:start="39:30" pos:end="39:33">addr</name> <operator pos:start="39:35" pos:end="39:35">+</operator> <literal type="number" pos:start="39:37" pos:end="39:37">4</literal></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">4</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:43"><expr pos:start="39:43" pos:end="39:43"><literal type="number" pos:start="39:43" pos:end="39:43">1</literal></expr></argument>, <argument pos:start="39:46" pos:end="39:61"><expr pos:start="39:46" pos:end="39:61"><name pos:start="39:46" pos:end="39:61">bmdma_addr_readb</name></expr></argument>, <argument pos:start="39:64" pos:end="39:65"><expr pos:start="39:64" pos:end="39:65"><name pos:start="39:64" pos:end="39:65">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:69"><expr pos:start="41:9" pos:end="41:68"><call pos:start="41:9" pos:end="41:68"><name pos:start="41:9" pos:end="41:29">register_ioport_write</name><argument_list pos:start="41:30" pos:end="41:68">(<argument pos:start="41:31" pos:end="41:38"><expr pos:start="41:31" pos:end="41:38"><name pos:start="41:31" pos:end="41:34">addr</name> <operator pos:start="41:36" pos:end="41:36">+</operator> <literal type="number" pos:start="41:38" pos:end="41:38">4</literal></expr></argument>, <argument pos:start="41:41" pos:end="41:41"><expr pos:start="41:41" pos:end="41:41"><literal type="number" pos:start="41:41" pos:end="41:41">4</literal></expr></argument>, <argument pos:start="41:44" pos:end="41:44"><expr pos:start="41:44" pos:end="41:44"><literal type="number" pos:start="41:44" pos:end="41:44">2</literal></expr></argument>, <argument pos:start="41:47" pos:end="41:63"><expr pos:start="41:47" pos:end="41:63"><name pos:start="41:47" pos:end="41:63">bmdma_addr_writew</name></expr></argument>, <argument pos:start="41:66" pos:end="41:67"><expr pos:start="41:66" pos:end="41:67"><name pos:start="41:66" pos:end="41:67">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><call pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:28">register_ioport_read</name><argument_list pos:start="43:29" pos:end="43:66">(<argument pos:start="43:30" pos:end="43:37"><expr pos:start="43:30" pos:end="43:37"><name pos:start="43:30" pos:end="43:33">addr</name> <operator pos:start="43:35" pos:end="43:35">+</operator> <literal type="number" pos:start="43:37" pos:end="43:37">4</literal></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">4</literal></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">2</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:61"><expr pos:start="43:46" pos:end="43:61"><name pos:start="43:46" pos:end="43:61">bmdma_addr_readw</name></expr></argument>, <argument pos:start="43:64" pos:end="43:65"><expr pos:start="43:64" pos:end="43:65"><name pos:start="43:64" pos:end="43:65">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:69"><expr pos:start="45:9" pos:end="45:68"><call pos:start="45:9" pos:end="45:68"><name pos:start="45:9" pos:end="45:29">register_ioport_write</name><argument_list pos:start="45:30" pos:end="45:68">(<argument pos:start="45:31" pos:end="45:38"><expr pos:start="45:31" pos:end="45:38"><name pos:start="45:31" pos:end="45:34">addr</name> <operator pos:start="45:36" pos:end="45:36">+</operator> <literal type="number" pos:start="45:38" pos:end="45:38">4</literal></expr></argument>, <argument pos:start="45:41" pos:end="45:41"><expr pos:start="45:41" pos:end="45:41"><literal type="number" pos:start="45:41" pos:end="45:41">4</literal></expr></argument>, <argument pos:start="45:44" pos:end="45:44"><expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">4</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:63"><expr pos:start="45:47" pos:end="45:63"><name pos:start="45:47" pos:end="45:63">bmdma_addr_writel</name></expr></argument>, <argument pos:start="45:66" pos:end="45:67"><expr pos:start="45:66" pos:end="45:67"><name pos:start="45:66" pos:end="45:67">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:67"><expr pos:start="47:9" pos:end="47:66"><call pos:start="47:9" pos:end="47:66"><name pos:start="47:9" pos:end="47:28">register_ioport_read</name><argument_list pos:start="47:29" pos:end="47:66">(<argument pos:start="47:30" pos:end="47:37"><expr pos:start="47:30" pos:end="47:37"><name pos:start="47:30" pos:end="47:33">addr</name> <operator pos:start="47:35" pos:end="47:35">+</operator> <literal type="number" pos:start="47:37" pos:end="47:37">4</literal></expr></argument>, <argument pos:start="47:40" pos:end="47:40"><expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">4</literal></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><literal type="number" pos:start="47:43" pos:end="47:43">4</literal></expr></argument>, <argument pos:start="47:46" pos:end="47:61"><expr pos:start="47:46" pos:end="47:61"><name pos:start="47:46" pos:end="47:61">bmdma_addr_readl</name></expr></argument>, <argument pos:start="47:64" pos:end="47:65"><expr pos:start="47:64" pos:end="47:65"><name pos:start="47:64" pos:end="47:65">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:12">addr</name> <operator pos:start="49:14" pos:end="49:15">+=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
