<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3684.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">vc1_extract_headers</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:55"><decl pos:start="1:33" pos:end="1:55"><type pos:start="1:33" pos:end="1:55"><name pos:start="1:33" pos:end="1:52">AVCodecParserContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:78"><decl pos:start="1:58" pos:end="1:78"><type pos:start="1:58" pos:end="1:78"><name pos:start="1:58" pos:end="1:71">AVCodecContext</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:78">avctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:18">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">VC1ParseContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">vpc</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:24">start</name></decl>, <decl pos:start="11:27" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:30">end</name></decl>, <decl pos:start="11:33" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:33" pos:end="11:33">*</modifier></type><name pos:start="11:34" pos:end="11:37">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:72"><decl pos:start="13:5" pos:end="13:71"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">buf2</name> <init pos:start="13:19" pos:end="13:71">= <expr pos:start="13:21" pos:end="13:71"><call pos:start="13:21" pos:end="13:71"><name pos:start="13:21" pos:end="13:30">av_mallocz</name><argument_list pos:start="13:31" pos:end="13:71">(<argument pos:start="13:32" pos:end="13:70"><expr pos:start="13:32" pos:end="13:70"><name pos:start="13:32" pos:end="13:39">buf_size</name> <operator pos:start="13:41" pos:end="13:41">+</operator> <name pos:start="13:43" pos:end="13:70">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">vpc</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:10">v</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:18">avctx</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:26">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">vpc</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:10">v</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:21">parse_only</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <literal type="number" pos:start="19:25" pos:end="19:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:7">vpc</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:10">v</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:32">first_pic_header_flag</name></name> <operator pos:start="21:34" pos:end="21:34">=</operator> <literal type="number" pos:start="21:36" pos:end="21:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:8">next</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:14">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">repeat_pict</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="125:5">for<control pos:start="29:8" pos:end="29:68">(<init pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:13">start</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:19">buf</name></expr><operator pos:start="29:20" pos:end="29:20">,</operator> <expr pos:start="29:22" pos:end="29:41"><name pos:start="29:22" pos:end="29:24">end</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:30">buf</name> <operator pos:start="29:32" pos:end="29:32">+</operator> <name pos:start="29:34" pos:end="29:41">buf_size</name></expr>;</init> <condition pos:start="29:44" pos:end="29:54"><expr pos:start="29:44" pos:end="29:53"><name pos:start="29:44" pos:end="29:47">next</name> <operator pos:start="29:49" pos:end="29:49">&lt;</operator> <name pos:start="29:51" pos:end="29:53">end</name></expr>;</condition> <incr pos:start="29:56" pos:end="29:67"><expr pos:start="29:56" pos:end="29:67"><name pos:start="29:56" pos:end="29:60">start</name> <operator pos:start="29:62" pos:end="29:62">=</operator> <name pos:start="29:64" pos:end="29:67">next</name></expr></incr>)</control><block pos:start="29:69" pos:end="125:5">{<block_content pos:start="31:9" pos:end="123:9">

        <decl_stmt pos:start="31:9" pos:end="31:28"><decl pos:start="31:9" pos:end="31:21"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:21">buf2_size</name></decl>, <decl pos:start="31:24" pos:end="31:27"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:24" pos:end="31:27">size</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:12">next</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:47"><name pos:start="35:16" pos:end="35:31">find_next_marker</name><argument_list pos:start="35:32" pos:end="35:47">(<argument pos:start="35:33" pos:end="35:41"><expr pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:37">start</name> <operator pos:start="35:39" pos:end="35:39">+</operator> <literal type="number" pos:start="35:41" pos:end="35:41">4</literal></expr></argument>, <argument pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:46">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:19">next</name> <operator pos:start="37:21" pos:end="37:21">-</operator> <name pos:start="37:23" pos:end="37:27">start</name> <operator pos:start="37:29" pos:end="37:29">-</operator> <literal type="number" pos:start="37:31" pos:end="37:31">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:17">buf2_size</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:62"><name pos:start="39:21" pos:end="39:39">vc1_unescape_buffer</name><argument_list pos:start="39:40" pos:end="39:62">(<argument pos:start="39:41" pos:end="39:49"><expr pos:start="39:41" pos:end="39:49"><name pos:start="39:41" pos:end="39:45">start</name> <operator pos:start="39:47" pos:end="39:47">+</operator> <literal type="number" pos:start="39:49" pos:end="39:49">4</literal></expr></argument>, <argument pos:start="39:52" pos:end="39:55"><expr pos:start="39:52" pos:end="39:55"><name pos:start="39:52" pos:end="39:55">size</name></expr></argument>, <argument pos:start="39:58" pos:end="39:61"><expr pos:start="39:58" pos:end="39:61"><name pos:start="39:58" pos:end="39:61">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:48"><expr pos:start="41:9" pos:end="41:47"><call pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:21">init_get_bits</name><argument_list pos:start="41:22" pos:end="41:47">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:25">gb</name></expr></argument>, <argument pos:start="41:28" pos:end="41:31"><expr pos:start="41:28" pos:end="41:31"><name pos:start="41:28" pos:end="41:31">buf2</name></expr></argument>, <argument pos:start="41:34" pos:end="41:46"><expr pos:start="41:34" pos:end="41:46"><name pos:start="41:34" pos:end="41:42">buf2_size</name> <operator pos:start="41:44" pos:end="41:44">*</operator> <literal type="number" pos:start="41:46" pos:end="41:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="43:31"><if pos:start="43:9" pos:end="43:31">if<condition pos:start="43:11" pos:end="43:21">(<expr pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:15">size</name> <operator pos:start="43:17" pos:end="43:18">&lt;=</operator> <literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>)</condition><block type="pseudo" pos:start="43:23" pos:end="43:31"><block_content pos:start="43:23" pos:end="43:31"> <continue pos:start="43:23" pos:end="43:31">continue;</continue></block_content></block></if></if_stmt>

        <switch pos:start="45:9" pos:end="123:9">switch<condition pos:start="45:15" pos:end="45:30">(<expr pos:start="45:16" pos:end="45:29"><call pos:start="45:16" pos:end="45:29"><name pos:start="45:16" pos:end="45:22">AV_RB32</name><argument_list pos:start="45:23" pos:end="45:29">(<argument pos:start="45:24" pos:end="45:28"><expr pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:28">start</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="45:31" pos:end="123:9">{<block_content pos:start="47:9" pos:end="121:18">

        <case pos:start="47:9" pos:end="47:29">case <expr pos:start="47:14" pos:end="47:28"><name pos:start="47:14" pos:end="47:28">VC1_CODE_SEQHDR</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:63"><expr pos:start="49:13" pos:end="49:62"><call pos:start="49:13" pos:end="49:62"><name pos:start="49:13" pos:end="49:41">ff_vc1_decode_sequence_header</name><argument_list pos:start="49:42" pos:end="49:62">(<argument pos:start="49:43" pos:end="49:47"><expr pos:start="49:43" pos:end="49:47"><name pos:start="49:43" pos:end="49:47">avctx</name></expr></argument>, <argument pos:start="49:50" pos:end="49:56"><expr pos:start="49:50" pos:end="49:56"><operator pos:start="49:50" pos:end="49:50">&amp;</operator><name pos:start="49:51" pos:end="49:56"><name pos:start="49:51" pos:end="49:53">vpc</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:56">v</name></name></expr></argument>, <argument pos:start="49:59" pos:end="49:61"><expr pos:start="49:59" pos:end="49:61"><operator pos:start="49:59" pos:end="49:59">&amp;</operator><name pos:start="49:60" pos:end="49:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:33">case <expr pos:start="53:14" pos:end="53:32"><name pos:start="53:14" pos:end="53:32">VC1_CODE_ENTRYPOINT</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:59"><expr pos:start="55:13" pos:end="55:58"><call pos:start="55:13" pos:end="55:58"><name pos:start="55:13" pos:end="55:37">ff_vc1_decode_entry_point</name><argument_list pos:start="55:38" pos:end="55:58">(<argument pos:start="55:39" pos:end="55:43"><expr pos:start="55:39" pos:end="55:43"><name pos:start="55:39" pos:end="55:43">avctx</name></expr></argument>, <argument pos:start="55:46" pos:end="55:52"><expr pos:start="55:46" pos:end="55:52"><operator pos:start="55:46" pos:end="55:46">&amp;</operator><name pos:start="55:47" pos:end="55:52"><name pos:start="55:47" pos:end="55:49">vpc</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:52">v</name></name></expr></argument>, <argument pos:start="55:55" pos:end="55:57"><expr pos:start="55:55" pos:end="55:57"><operator pos:start="55:55" pos:end="55:55">&amp;</operator><name pos:start="55:56" pos:end="55:57">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:28">case <expr pos:start="59:14" pos:end="59:27"><name pos:start="59:14" pos:end="59:27">VC1_CODE_FRAME</name></expr>:</case>

            <if_stmt pos:start="61:13" pos:end="67:60"><if pos:start="61:13" pos:end="63:60">if<condition pos:start="61:15" pos:end="61:49">(<expr pos:start="61:16" pos:end="61:48"><name pos:start="61:16" pos:end="61:29"><name pos:start="61:16" pos:end="61:18">vpc</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:21">v</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:29">profile</name></name> <operator pos:start="61:31" pos:end="61:31">&lt;</operator> <name pos:start="61:33" pos:end="61:48">PROFILE_ADVANCED</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:60"><block_content pos:start="63:17" pos:end="63:60">

                <expr_stmt pos:start="63:17" pos:end="63:60"><expr pos:start="63:17" pos:end="63:59"><call pos:start="63:17" pos:end="63:59"><name pos:start="63:17" pos:end="63:41">ff_vc1_parse_frame_header</name>    <argument_list pos:start="63:46" pos:end="63:59">(<argument pos:start="63:47" pos:end="63:53"><expr pos:start="63:47" pos:end="63:53"><operator pos:start="63:47" pos:end="63:47">&amp;</operator><name pos:start="63:48" pos:end="63:53"><name pos:start="63:48" pos:end="63:50">vpc</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:53">v</name></name></expr></argument>, <argument pos:start="63:56" pos:end="63:58"><expr pos:start="63:56" pos:end="63:58"><operator pos:start="63:56" pos:end="63:56">&amp;</operator><name pos:start="63:57" pos:end="63:58">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="65:13" pos:end="67:60">else<block type="pseudo" pos:start="67:17" pos:end="67:60"><block_content pos:start="67:17" pos:end="67:60">

                <expr_stmt pos:start="67:17" pos:end="67:60"><expr pos:start="67:17" pos:end="67:59"><call pos:start="67:17" pos:end="67:59"><name pos:start="67:17" pos:end="67:45">ff_vc1_parse_frame_header_adv</name><argument_list pos:start="67:46" pos:end="67:59">(<argument pos:start="67:47" pos:end="67:53"><expr pos:start="67:47" pos:end="67:53"><operator pos:start="67:47" pos:end="67:47">&amp;</operator><name pos:start="67:48" pos:end="67:53"><name pos:start="67:48" pos:end="67:50">vpc</name><operator pos:start="67:51" pos:end="67:52">-&gt;</operator><name pos:start="67:53" pos:end="67:53">v</name></name></expr></argument>, <argument pos:start="67:56" pos:end="67:58"><expr pos:start="67:56" pos:end="67:58"><operator pos:start="67:56" pos:end="67:56">&amp;</operator><name pos:start="67:57" pos:end="67:58">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <comment type="block" pos:start="71:13" pos:end="71:57">/* keep AV_PICTURE_TYPE_BI internal to VC1 */</comment>

            <if_stmt pos:start="73:13" pos:end="79:50"><if pos:start="73:13" pos:end="75:49">if <condition pos:start="73:16" pos:end="73:57">(<expr pos:start="73:17" pos:end="73:56"><name pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:19">vpc</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:22">v</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:25">.</operator><name pos:start="73:26" pos:end="73:34">pict_type</name></name> <operator pos:start="73:36" pos:end="73:37">==</operator> <name pos:start="73:39" pos:end="73:56">AV_PICTURE_TYPE_BI</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:49"><block_content pos:start="75:17" pos:end="75:49">

                <expr_stmt pos:start="75:17" pos:end="75:49"><expr pos:start="75:17" pos:end="75:48"><name pos:start="75:17" pos:end="75:28"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:28">pict_type</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <name pos:start="75:32" pos:end="75:48">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="77:13" pos:end="79:50">else<block type="pseudo" pos:start="79:17" pos:end="79:50"><block_content pos:start="79:17" pos:end="79:50">

                <expr_stmt pos:start="79:17" pos:end="79:50"><expr pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:28">pict_type</name></name> <operator pos:start="79:30" pos:end="79:30">=</operator> <name pos:start="79:32" pos:end="79:49"><name pos:start="79:32" pos:end="79:34">vpc</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:37">v</name><operator pos:start="79:38" pos:end="79:38">.</operator><name pos:start="79:39" pos:end="79:39">s</name><operator pos:start="79:40" pos:end="79:40">.</operator><name pos:start="79:41" pos:end="79:49">pict_type</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="83:13" pos:end="107:13"><if pos:start="83:13" pos:end="107:13">if <condition pos:start="83:16" pos:end="83:43">(<expr pos:start="83:17" pos:end="83:42"><name pos:start="83:17" pos:end="83:38"><name pos:start="83:17" pos:end="83:21">avctx</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:38">ticks_per_frame</name></name> <operator pos:start="83:40" pos:end="83:40">&gt;</operator> <literal type="number" pos:start="83:42" pos:end="83:42">1</literal></expr>)</condition><block pos:start="83:44" pos:end="107:13">{<block_content pos:start="87:17" pos:end="105:17">

                <comment type="line" pos:start="85:17" pos:end="85:41">// process pulldown flags</comment>

                <expr_stmt pos:start="87:17" pos:end="87:35"><expr pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:30">repeat_pict</name></name> <operator pos:start="87:32" pos:end="87:32">=</operator> <literal type="number" pos:start="87:34" pos:end="87:34">1</literal></expr>;</expr_stmt>

                <comment type="line" pos:start="89:17" pos:end="89:79">// Pulldown flags are only valid when 'broadcast' has been set.</comment>

                <comment type="line" pos:start="91:17" pos:end="91:47">// So ticks_per_frame will be 2</comment>

                <if_stmt pos:start="93:17" pos:end="105:17"><if pos:start="93:17" pos:end="99:17">if <condition pos:start="93:20" pos:end="93:31">(<expr pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:23">vpc</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:26">v</name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:30">rff</name></name></expr>)</condition><block pos:start="93:32" pos:end="99:17">{<block_content pos:start="97:21" pos:end="97:39">

                    <comment type="line" pos:start="95:21" pos:end="95:35">// repeat field</comment>

                    <expr_stmt pos:start="97:21" pos:end="97:39"><expr pos:start="97:21" pos:end="97:38"><name pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:34">repeat_pict</name></name> <operator pos:start="97:36" pos:end="97:36">=</operator> <literal type="number" pos:start="97:38" pos:end="97:38">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if><if type="elseif" pos:start="99:18" pos:end="105:17">else if <condition pos:start="99:26" pos:end="99:40">(<expr pos:start="99:27" pos:end="99:39"><name pos:start="99:27" pos:end="99:39"><name pos:start="99:27" pos:end="99:29">vpc</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:32">v</name><operator pos:start="99:33" pos:end="99:33">.</operator><name pos:start="99:34" pos:end="99:39">rptfrm</name></name></expr>)</condition><block pos:start="99:41" pos:end="105:17">{<block_content pos:start="103:21" pos:end="103:59">

                    <comment type="line" pos:start="101:21" pos:end="101:36">// repeat frames</comment>

                    <expr_stmt pos:start="103:21" pos:end="103:59"><expr pos:start="103:21" pos:end="103:58"><name pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:21">s</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:34">repeat_pict</name></name> <operator pos:start="103:36" pos:end="103:36">=</operator> <name pos:start="103:38" pos:end="103:50"><name pos:start="103:38" pos:end="103:40">vpc</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:43">v</name><operator pos:start="103:44" pos:end="103:44">.</operator><name pos:start="103:45" pos:end="103:50">rptfrm</name></name> <operator pos:start="103:52" pos:end="103:52">*</operator> <literal type="number" pos:start="103:54" pos:end="103:56">2</literal> <operator pos:start="103:56" pos:end="103:56">+</operator> <literal type="number" pos:start="103:58" pos:end="103:58">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="111:13" pos:end="117:54"><if pos:start="111:13" pos:end="113:72">if <condition pos:start="111:16" pos:end="111:68">(<expr pos:start="111:17" pos:end="111:67"><name pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:19">vpc</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:22">v</name><operator pos:start="111:23" pos:end="111:23">.</operator><name pos:start="111:24" pos:end="111:32">broadcast</name></name> <operator pos:start="111:34" pos:end="111:35">&amp;&amp;</operator> <name pos:start="111:37" pos:end="111:52"><name pos:start="111:37" pos:end="111:39">vpc</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:42">v</name><operator pos:start="111:43" pos:end="111:43">.</operator><name pos:start="111:44" pos:end="111:52">interlace</name></name> <operator pos:start="111:54" pos:end="111:55">&amp;&amp;</operator> <operator pos:start="111:57" pos:end="111:57">!</operator><name pos:start="111:58" pos:end="111:67"><name pos:start="111:58" pos:end="111:60">vpc</name><operator pos:start="111:61" pos:end="111:62">-&gt;</operator><name pos:start="111:63" pos:end="111:63">v</name><operator pos:start="111:64" pos:end="111:64">.</operator><name pos:start="111:65" pos:end="111:67">psf</name></name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:72"><block_content pos:start="113:17" pos:end="113:72">

                <expr_stmt pos:start="113:17" pos:end="113:72"><expr pos:start="113:17" pos:end="113:71"><name pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:30">field_order</name></name> <operator pos:start="113:32" pos:end="113:32">=</operator> <ternary pos:start="113:34" pos:end="113:71"><condition pos:start="113:34" pos:end="113:45"><expr pos:start="113:34" pos:end="113:43"><name pos:start="113:34" pos:end="113:43"><name pos:start="113:34" pos:end="113:36">vpc</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:39">v</name><operator pos:start="113:40" pos:end="113:40">.</operator><name pos:start="113:41" pos:end="113:43">tff</name></name></expr> ?</condition><then pos:start="113:47" pos:end="113:57"> <expr pos:start="113:47" pos:end="113:57"><name pos:start="113:47" pos:end="113:57">AV_FIELD_TT</name></expr> </then><else pos:start="113:59" pos:end="113:71">: <expr pos:start="113:61" pos:end="113:71"><name pos:start="113:61" pos:end="113:71">AV_FIELD_BB</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="115:13" pos:end="117:54">else<block type="pseudo" pos:start="117:17" pos:end="117:54"><block_content pos:start="117:17" pos:end="117:54">

                <expr_stmt pos:start="117:17" pos:end="117:54"><expr pos:start="117:17" pos:end="117:53"><name pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:30">field_order</name></name> <operator pos:start="117:32" pos:end="117:32">=</operator> <name pos:start="117:34" pos:end="117:53">AV_FIELD_PROGRESSIVE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <expr_stmt pos:start="129:5" pos:end="129:18"><expr pos:start="129:5" pos:end="129:17"><call pos:start="129:5" pos:end="129:17"><name pos:start="129:5" pos:end="129:11">av_free</name><argument_list pos:start="129:12" pos:end="129:17">(<argument pos:start="129:13" pos:end="129:16"><expr pos:start="129:13" pos:end="129:16"><name pos:start="129:13" pos:end="129:16">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
