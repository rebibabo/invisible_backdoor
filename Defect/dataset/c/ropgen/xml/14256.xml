<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14256.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">posix_aio_read</name><parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:31">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">PosixAioState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">len</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:41">/* read all bytes from signal pipe */</comment>

    <for pos:start="13:5" pos:end="31:5">for <control pos:start="13:9" pos:end="13:12">(<init pos:start="13:10" pos:end="13:10">;</init><condition pos:start="13:11" pos:end="13:11">;</condition><incr/>)</control> <block pos:start="13:14" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:14">

        <decl_stmt pos:start="15:9" pos:end="15:23"><decl pos:start="15:9" pos:end="15:22"><type pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">char</name></type> <name pos:start="15:14" pos:end="15:22"><name pos:start="15:14" pos:end="15:18">bytes</name><index pos:start="15:19" pos:end="15:22">[<expr pos:start="15:20" pos:end="15:21"><literal type="number" pos:start="15:20" pos:end="15:21">16</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:49"><expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:48"><name pos:start="19:15" pos:end="19:18">read</name><argument_list pos:start="19:19" pos:end="19:48">(<argument pos:start="19:20" pos:end="19:25"><expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:25">rfd</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:32"><expr pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:32">bytes</name></expr></argument>, <argument pos:start="19:35" pos:end="19:47"><expr pos:start="19:35" pos:end="19:47"><sizeof pos:start="19:35" pos:end="19:47">sizeof<argument_list pos:start="19:41" pos:end="19:47">(<argument pos:start="19:42" pos:end="19:46"><expr pos:start="19:42" pos:end="19:46"><name pos:start="19:42" pos:end="19:46">bytes</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:40">(<expr pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal> <operator pos:start="21:23" pos:end="21:24">&amp;&amp;</operator> <name pos:start="21:26" pos:end="21:30">errno</name> <operator pos:start="21:32" pos:end="21:33">==</operator> <name pos:start="21:35" pos:end="21:39">EINTR</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue></block_content></block></if></if_stmt> <comment type="block" pos:start="23:23" pos:end="23:37">/* try again */</comment>

        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:33">(<expr pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:15">len</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <sizeof pos:start="25:20" pos:end="25:32">sizeof<argument_list pos:start="25:26" pos:end="25:32">(<argument pos:start="25:27" pos:end="25:31"><expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31">bytes</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <continue pos:start="27:13" pos:end="27:21">continue;</continue></block_content></block></if></if_stmt> <comment type="block" pos:start="27:23" pos:end="27:40">/* more to read */</comment>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    </block_content>}</block></for>



    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><call pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:27">posix_aio_process_queue</name><argument_list pos:start="35:28" pos:end="35:30">(<argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
