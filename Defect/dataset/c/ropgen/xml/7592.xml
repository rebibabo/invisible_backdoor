<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7592.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">ff_mpeg4_frame_end</name><parameter_list pos:start="1:23" pos:end="1:79">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:78">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">Mpeg4DecContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name>    <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:34">= <expr pos:start="7:28" pos:end="7:34"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:31">ctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:34">m</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:44">/* divx 5.01+ bitstream reorder stuff */</comment>

    <comment type="block" pos:start="13:5" pos:end="15:74">/* Since this clobbers the input buffer and hwaccel codecs still need the

     * data during hwaccel-&gt;end_frame we should not do this any earlier */</comment>

    <if_stmt pos:start="17:5" pos:end="75:5"><if pos:start="17:5" pos:end="75:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">divx_packed</name></name></expr>)</condition> <block pos:start="17:25" pos:end="75:5">{<block_content pos:start="19:9" pos:end="73:9">

        <decl_stmt pos:start="19:9" pos:end="19:102"><decl pos:start="19:9" pos:end="19:101"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:23">current_pos</name>     <init pos:start="19:29" pos:end="19:101">= <expr pos:start="19:31" pos:end="19:101"><ternary pos:start="19:31" pos:end="19:101"><condition pos:start="19:31" pos:end="19:67"><expr pos:start="19:31" pos:end="19:65"><name pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:35">gb</name><operator pos:start="19:36" pos:end="19:36">.</operator><name pos:start="19:37" pos:end="19:42">buffer</name></name> <operator pos:start="19:44" pos:end="19:45">==</operator> <name pos:start="19:47" pos:end="19:65"><name pos:start="19:47" pos:end="19:47">s</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:65">bitstream_buffer</name></name></expr> ?</condition><then pos:start="19:69" pos:end="19:69"> <expr pos:start="19:69" pos:end="19:69"><literal type="number" pos:start="19:69" pos:end="19:69">0</literal></expr> </then><else pos:start="19:71" pos:end="19:101">: <expr pos:start="19:73" pos:end="19:101"><operator pos:start="19:73" pos:end="19:73">(</operator><call pos:start="19:74" pos:end="19:95"><name pos:start="19:74" pos:end="19:87">get_bits_count</name><argument_list pos:start="19:88" pos:end="19:95">(<argument pos:start="19:89" pos:end="19:94"><expr pos:start="19:89" pos:end="19:94"><operator pos:start="19:89" pos:end="19:89">&amp;</operator><name pos:start="19:90" pos:end="19:94"><name pos:start="19:90" pos:end="19:90">s</name><operator pos:start="19:91" pos:end="19:92">-&gt;</operator><name pos:start="19:93" pos:end="19:94">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:97" pos:end="19:98">&gt;&gt;</operator> <literal type="number" pos:start="19:100" pos:end="19:100">3</literal><operator pos:start="19:101" pos:end="19:101">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:32"><decl pos:start="21:9" pos:end="21:31"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:27">startcode_found</name> <init pos:start="21:29" pos:end="21:31">= <expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="49:9"><if pos:start="25:9" pos:end="49:9">if <condition pos:start="25:12" pos:end="25:39">(<expr pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:20">buf_size</name> <operator pos:start="25:22" pos:end="25:22">-</operator> <name pos:start="25:24" pos:end="25:34">current_pos</name> <operator pos:start="25:36" pos:end="25:36">&gt;</operator> <literal type="number" pos:start="25:38" pos:end="25:38">7</literal></expr>)</condition> <block pos:start="25:41" pos:end="49:9">{<block_content pos:start="29:13" pos:end="47:17">



            <decl_stmt pos:start="29:13" pos:end="29:18"><decl pos:start="29:13" pos:end="29:17"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:17">i</name></decl>;</decl_stmt>

            <for pos:start="31:13" pos:end="47:17">for <control pos:start="31:17" pos:end="31:56">(<init pos:start="31:18" pos:end="31:33"><expr pos:start="31:18" pos:end="31:32"><name pos:start="31:18" pos:end="31:18">i</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:32">current_pos</name></expr>;</init> <condition pos:start="31:35" pos:end="31:51"><expr pos:start="31:35" pos:end="31:50"><name pos:start="31:35" pos:end="31:35">i</name> <operator pos:start="31:37" pos:end="31:37">&lt;</operator> <name pos:start="31:39" pos:end="31:46">buf_size</name> <operator pos:start="31:48" pos:end="31:48">-</operator> <literal type="number" pos:start="31:50" pos:end="31:50">4</literal></expr>;</condition> <incr pos:start="31:53" pos:end="31:55"><expr pos:start="31:53" pos:end="31:55"><name pos:start="31:53" pos:end="31:53">i</name><operator pos:start="31:54" pos:end="31:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:17" pos:end="47:17"><block_content pos:start="35:17" pos:end="47:17">



                <if_stmt pos:start="35:17" pos:end="47:17"><if pos:start="35:17" pos:end="47:17">if <condition pos:start="35:20" pos:end="41:39">(<expr pos:start="35:21" pos:end="41:38"><name pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:23">buf</name><index pos:start="35:24" pos:end="35:26">[<expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">i</name></expr>]</index></name>     <operator pos:start="35:32" pos:end="35:33">==</operator> <literal type="number" pos:start="35:35" pos:end="35:35">0</literal> <operator pos:start="35:37" pos:end="35:38">&amp;&amp;</operator>

                    <name pos:start="37:21" pos:end="37:30"><name pos:start="37:21" pos:end="37:23">buf</name><index pos:start="37:24" pos:end="37:30">[<expr pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:25">i</name> <operator pos:start="37:27" pos:end="37:27">+</operator> <literal type="number" pos:start="37:29" pos:end="37:29">1</literal></expr>]</index></name> <operator pos:start="37:32" pos:end="37:33">==</operator> <literal type="number" pos:start="37:35" pos:end="37:35">0</literal> <operator pos:start="37:37" pos:end="37:38">&amp;&amp;</operator>

                    <name pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:23">buf</name><index pos:start="39:24" pos:end="39:30">[<expr pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:25">i</name> <operator pos:start="39:27" pos:end="39:27">+</operator> <literal type="number" pos:start="39:29" pos:end="39:29">2</literal></expr>]</index></name> <operator pos:start="39:32" pos:end="39:33">==</operator> <literal type="number" pos:start="39:35" pos:end="39:35">1</literal> <operator pos:start="39:37" pos:end="39:38">&amp;&amp;</operator>

                    <name pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:23">buf</name><index pos:start="41:24" pos:end="41:30">[<expr pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:25">i</name> <operator pos:start="41:27" pos:end="41:27">+</operator> <literal type="number" pos:start="41:29" pos:end="41:29">3</literal></expr>]</index></name> <operator pos:start="41:32" pos:end="41:33">==</operator> <literal type="number" pos:start="41:35" pos:end="41:38">0xB6</literal></expr>)</condition> <block pos:start="41:41" pos:end="47:17">{<block_content pos:start="43:21" pos:end="45:26">

                    <expr_stmt pos:start="43:21" pos:end="43:59"><expr pos:start="43:21" pos:end="43:58"><name pos:start="43:21" pos:end="43:35">startcode_found</name> <operator pos:start="43:37" pos:end="43:37">=</operator> <operator pos:start="43:39" pos:end="43:39">!</operator><operator pos:start="43:40" pos:end="43:40">(</operator><name pos:start="43:41" pos:end="43:50"><name pos:start="43:41" pos:end="43:43">buf</name><index pos:start="43:44" pos:end="43:50">[<expr pos:start="43:45" pos:end="43:49"><name pos:start="43:45" pos:end="43:45">i</name> <operator pos:start="43:47" pos:end="43:47">+</operator> <literal type="number" pos:start="43:49" pos:end="43:49">4</literal></expr>]</index></name> <operator pos:start="43:52" pos:end="43:52">&amp;</operator> <literal type="number" pos:start="43:54" pos:end="43:57">0x40</literal><operator pos:start="43:58" pos:end="43:58">)</operator></expr>;</expr_stmt>

                    <break pos:start="45:21" pos:end="45:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="53:9" pos:end="73:9"><if pos:start="53:9" pos:end="73:9">if <condition pos:start="53:12" pos:end="53:28">(<expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:27">startcode_found</name></expr>)</condition> <block pos:start="53:30" pos:end="73:9">{<block_content pos:start="55:13" pos:end="71:62">

            <expr_stmt pos:start="55:13" pos:end="61:57"><expr pos:start="55:13" pos:end="61:56"><call pos:start="55:13" pos:end="61:56"><name pos:start="55:13" pos:end="55:26">av_fast_malloc</name><argument_list pos:start="55:27" pos:end="61:56">(<argument pos:start="55:28" pos:end="55:47"><expr pos:start="55:28" pos:end="55:47"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:47"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:47">bitstream_buffer</name></name></expr></argument>,

                           <argument pos:start="57:28" pos:end="57:62"><expr pos:start="57:28" pos:end="57:62"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:62"><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:62">allocated_bitstream_buffer_size</name></name></expr></argument>,

                           <argument pos:start="59:28" pos:end="61:55"><expr pos:start="59:28" pos:end="61:55"><name pos:start="59:28" pos:end="59:35">buf_size</name> <operator pos:start="59:37" pos:end="59:37">-</operator> <name pos:start="59:39" pos:end="59:49">current_pos</name> <operator pos:start="59:51" pos:end="59:51">+</operator>

                           <name pos:start="61:28" pos:end="61:55">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:39"><if pos:start="63:13" pos:end="65:39">if <condition pos:start="63:16" pos:end="63:37">(<expr pos:start="63:17" pos:end="63:36"><operator pos:start="63:17" pos:end="63:17">!</operator><name pos:start="63:18" pos:end="63:36"><name pos:start="63:18" pos:end="63:18">s</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:36">bitstream_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:39"><block_content pos:start="65:17" pos:end="65:39">

                <return pos:start="65:17" pos:end="65:39">return <expr pos:start="65:24" pos:end="65:38"><call pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:30">AVERROR</name><argument_list pos:start="65:31" pos:end="65:38">(<argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="69:43"><expr pos:start="67:13" pos:end="69:42"><call pos:start="67:13" pos:end="69:42"><name pos:start="67:13" pos:end="67:18">memcpy</name><argument_list pos:start="67:19" pos:end="69:42">(<argument pos:start="67:20" pos:end="67:38"><expr pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:38">bitstream_buffer</name></name></expr></argument>, <argument pos:start="67:41" pos:end="67:57"><expr pos:start="67:41" pos:end="67:57"><name pos:start="67:41" pos:end="67:43">buf</name> <operator pos:start="67:45" pos:end="67:45">+</operator> <name pos:start="67:47" pos:end="67:57">current_pos</name></expr></argument>,

                   <argument pos:start="69:20" pos:end="69:41"><expr pos:start="69:20" pos:end="69:41"><name pos:start="69:20" pos:end="69:27">buf_size</name> <operator pos:start="69:29" pos:end="69:29">-</operator> <name pos:start="69:31" pos:end="69:41">current_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:62"><expr pos:start="71:13" pos:end="71:61"><name pos:start="71:13" pos:end="71:36"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:36">bitstream_buffer_size</name></name> <operator pos:start="71:38" pos:end="71:38">=</operator> <name pos:start="71:40" pos:end="71:47">buf_size</name> <operator pos:start="71:49" pos:end="71:49">-</operator> <name pos:start="71:51" pos:end="71:61">current_pos</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
