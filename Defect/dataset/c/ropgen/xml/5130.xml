<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5130.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">xan_huffman_decode</name><parameter_list pos:start="1:30" pos:end="3:68">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:38">unsigned</name> <name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">dest</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:63">dest_len</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:54"><decl pos:start="3:31" pos:end="3:54"><type pos:start="3:31" pos:end="3:54"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:44">unsigned</name> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">src</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:67"><decl pos:start="3:57" pos:end="3:67"><type pos:start="3:57" pos:end="3:67"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:67">src_len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:13">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:22">byte</name> <init pos:start="7:24" pos:end="7:31">= <expr pos:start="7:26" pos:end="7:31"><operator pos:start="7:26" pos:end="7:26">*</operator><name pos:start="7:27" pos:end="7:29">src</name><operator pos:start="7:30" pos:end="7:31">++</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:22">ival</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:29">byte</name> <operator pos:start="9:31" pos:end="9:31">+</operator> <literal type="number" pos:start="9:33" pos:end="9:36">0x16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:25"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">unsigned</name> <name pos:start="11:20" pos:end="11:23">char</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type> <name pos:start="11:27" pos:end="11:29">ptr</name> <init pos:start="11:31" pos:end="11:44">= <expr pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:35">src</name> <operator pos:start="11:37" pos:end="11:37">+</operator> <name pos:start="11:39" pos:end="11:42">byte</name><operator pos:start="11:43" pos:end="11:43">*</operator><literal type="number" pos:start="11:44" pos:end="11:44">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">ptr_len</name> <init pos:start="13:17" pos:end="13:38">= <expr pos:start="13:19" pos:end="13:38"><name pos:start="13:19" pos:end="13:25">src_len</name> <operator pos:start="13:27" pos:end="13:27">-</operator> <literal type="number" pos:start="13:29" pos:end="13:31">1</literal> <operator pos:start="13:31" pos:end="13:31">-</operator> <name pos:start="13:33" pos:end="13:36">byte</name><operator pos:start="13:37" pos:end="13:37">*</operator><literal type="number" pos:start="13:38" pos:end="13:38">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name></type> <name pos:start="15:19" pos:end="15:21">val</name> <init pos:start="15:23" pos:end="15:28">= <expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">ival</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:27">dest_end</name> <init pos:start="17:29" pos:end="17:45">= <expr pos:start="17:31" pos:end="17:45"><name pos:start="17:31" pos:end="17:34">dest</name> <operator pos:start="17:36" pos:end="17:36">+</operator> <name pos:start="17:38" pos:end="17:45">dest_len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">GetBitContext</name></type> <name pos:start="19:19" pos:end="19:20">gb</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:15">ptr_len</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><call pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:17">init_get_bits</name><argument_list pos:start="29:18" pos:end="29:40">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:21">gb</name></expr></argument>, <argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">ptr</name></expr></argument>, <argument pos:start="29:29" pos:end="29:39"><expr pos:start="29:29" pos:end="29:39"><name pos:start="29:29" pos:end="29:35">ptr_len</name> <operator pos:start="29:37" pos:end="29:37">*</operator> <literal type="number" pos:start="29:39" pos:end="29:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="33:5" pos:end="51:5">while <condition pos:start="33:11" pos:end="33:25">( <expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:15">val</name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <literal type="number" pos:start="33:20" pos:end="33:23">0x16</literal></expr> )</condition> <block pos:start="33:27" pos:end="51:5">{<block_content pos:start="35:9" pos:end="49:9">

        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:11">val</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:53"><name pos:start="35:15" pos:end="35:17">src</name><index pos:start="35:18" pos:end="35:53">[<expr pos:start="35:19" pos:end="35:52"><name pos:start="35:19" pos:end="35:21">val</name> <operator pos:start="35:23" pos:end="35:23">-</operator> <literal type="number" pos:start="35:25" pos:end="35:30">0x17</literal> <operator pos:start="35:30" pos:end="35:30">+</operator> <call pos:start="35:32" pos:end="35:45"><name pos:start="35:32" pos:end="35:40">get_bits1</name><argument_list pos:start="35:41" pos:end="35:45">(<argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="35:47" pos:end="35:47">*</operator> <name pos:start="35:49" pos:end="35:52">byte</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:25">( <expr pos:start="39:14" pos:end="39:23"><name pos:start="39:14" pos:end="39:16">val</name> <operator pos:start="39:18" pos:end="39:18">&lt;</operator> <literal type="number" pos:start="39:20" pos:end="39:23">0x16</literal></expr> )</condition> <block pos:start="39:27" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:23">

            <if_stmt pos:start="41:13" pos:end="43:25"><if pos:start="41:13" pos:end="43:25">if <condition pos:start="41:16" pos:end="41:33">(<expr pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:20">dest</name> <operator pos:start="41:22" pos:end="41:23">&gt;=</operator> <name pos:start="41:25" pos:end="41:32">dest_end</name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:25"><block_content pos:start="43:17" pos:end="43:25">

                <return pos:start="43:17" pos:end="43:25">return <expr pos:start="43:24" pos:end="43:24"><literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:26"><expr pos:start="45:13" pos:end="45:25"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:17">dest</name><operator pos:start="45:18" pos:end="45:19">++</operator> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:25">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:15">val</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:22">ival</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
