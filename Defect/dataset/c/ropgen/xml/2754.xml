<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2754.c" pos:tabs="8"><function pos:start="1:1" pos:end="419:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:34">spapr_create_fdt_skel</name><parameter_list pos:start="1:35" pos:end="13:51">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">cpu_model</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:62"><decl pos:start="3:36" pos:end="3:62"><type pos:start="3:36" pos:end="3:62"><name pos:start="3:36" pos:end="3:53">target_phys_addr_t</name></type> <name pos:start="3:55" pos:end="3:62">rma_size</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:65"><decl pos:start="5:36" pos:end="5:65"><type pos:start="5:36" pos:end="5:65"><name pos:start="5:36" pos:end="5:53">target_phys_addr_t</name></type> <name pos:start="5:55" pos:end="5:65">initrd_base</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:65"><decl pos:start="7:36" pos:end="7:65"><type pos:start="7:36" pos:end="7:65"><name pos:start="7:36" pos:end="7:53">target_phys_addr_t</name></type> <name pos:start="7:55" pos:end="7:65">initrd_size</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:58"><decl pos:start="9:36" pos:end="9:58"><type pos:start="9:36" pos:end="9:58"><specifier pos:start="9:36" pos:end="9:40">const</specifier> <name pos:start="9:42" pos:end="9:45">char</name> <modifier pos:start="9:47" pos:end="9:47">*</modifier></type><name pos:start="9:48" pos:end="9:58">boot_device</name></decl></parameter>,

                                   <parameter pos:start="11:36" pos:end="11:61"><decl pos:start="11:36" pos:end="11:61"><type pos:start="11:36" pos:end="11:61"><specifier pos:start="11:36" pos:end="11:40">const</specifier> <name pos:start="11:42" pos:end="11:45">char</name> <modifier pos:start="11:47" pos:end="11:47">*</modifier></type><name pos:start="11:48" pos:end="11:61">kernel_cmdline</name></decl></parameter>,

                                   <parameter pos:start="13:36" pos:end="13:50"><decl pos:start="13:36" pos:end="13:50"><type pos:start="13:36" pos:end="13:50"><name pos:start="13:36" pos:end="13:39">long</name></type> <name pos:start="13:41" pos:end="13:50">hash_shift</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="419:1">{<block_content pos:start="17:5" pos:end="417:15">

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">void</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:13">fdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">CPUState</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:67"><decl pos:start="21:5" pos:end="21:66"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:35"><name pos:start="21:14" pos:end="21:33">mem_reg_property_rma</name><index pos:start="21:34" pos:end="21:35">[]</index></name> <init pos:start="21:37" pos:end="21:66">= <expr pos:start="21:39" pos:end="21:66"><block pos:start="21:39" pos:end="21:66">{ <expr pos:start="21:41" pos:end="21:41"><literal type="number" pos:start="21:41" pos:end="21:41">0</literal></expr>, <macro pos:start="21:44" pos:end="21:64"><name pos:start="21:44" pos:end="21:54">cpu_to_be64</name><argument_list pos:start="21:55" pos:end="21:64">(<argument pos:start="21:56" pos:end="21:63">rma_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="25:78"><decl pos:start="23:5" pos:end="25:77"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:38"><name pos:start="23:14" pos:end="23:36">mem_reg_property_nonrma</name><index pos:start="23:37" pos:end="23:38">[]</index></name> <init pos:start="23:40" pos:end="25:77">= <expr pos:start="23:42" pos:end="25:77"><block pos:start="23:42" pos:end="25:77">{ <expr pos:start="23:44" pos:end="23:64"><call pos:start="23:44" pos:end="23:64"><name pos:start="23:44" pos:end="23:54">cpu_to_be64</name><argument_list pos:start="23:55" pos:end="23:64">(<argument pos:start="23:56" pos:end="23:63"><expr pos:start="23:56" pos:end="23:63"><name pos:start="23:56" pos:end="23:63">rma_size</name></expr></argument>)</argument_list></call></expr>,

                                           <macro pos:start="25:44" pos:end="25:75"><name pos:start="25:44" pos:end="25:54">cpu_to_be64</name><argument_list pos:start="25:55" pos:end="25:75">(<argument pos:start="25:56" pos:end="25:74">ram_size - rma_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:51"><decl pos:start="27:5" pos:end="27:50"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:23">start_prop</name> <init pos:start="27:25" pos:end="27:50">= <expr pos:start="27:27" pos:end="27:50"><call pos:start="27:27" pos:end="27:50"><name pos:start="27:27" pos:end="27:37">cpu_to_be32</name><argument_list pos:start="27:38" pos:end="27:50">(<argument pos:start="27:39" pos:end="27:49"><expr pos:start="27:39" pos:end="27:49"><name pos:start="27:39" pos:end="27:49">initrd_base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:63"><decl pos:start="29:5" pos:end="29:62"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">uint32_t</name></type> <name pos:start="29:14" pos:end="29:21">end_prop</name> <init pos:start="29:23" pos:end="29:62">= <expr pos:start="29:25" pos:end="29:62"><call pos:start="29:25" pos:end="29:62"><name pos:start="29:25" pos:end="29:35">cpu_to_be32</name><argument_list pos:start="29:36" pos:end="29:62">(<argument pos:start="29:37" pos:end="29:61"><expr pos:start="29:37" pos:end="29:61"><name pos:start="29:37" pos:end="29:47">initrd_base</name> <operator pos:start="29:49" pos:end="29:49">+</operator> <name pos:start="29:51" pos:end="29:61">initrd_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:60"><decl pos:start="31:5" pos:end="31:59"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint32_t</name></type> <name pos:start="31:14" pos:end="31:28"><name pos:start="31:14" pos:end="31:26">pft_size_prop</name><index pos:start="31:27" pos:end="31:28">[]</index></name> <init pos:start="31:30" pos:end="31:59">= <expr pos:start="31:32" pos:end="31:59"><block pos:start="31:32" pos:end="31:59">{<expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>, <macro pos:start="31:36" pos:end="31:58"><name pos:start="31:36" pos:end="31:46">cpu_to_be32</name><argument_list pos:start="31:47" pos:end="31:58">(<argument pos:start="31:48" pos:end="31:57">hash_shift</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="35:59"><decl pos:start="33:5" pos:end="35:58"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">char</name></type> <name pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:22">hypertas_prop</name><index pos:start="33:23" pos:end="33:24">[]</index></name> <init pos:start="33:26" pos:end="35:58">= <expr pos:start="33:28" pos:end="35:58"><literal type="string" pos:start="33:28" pos:end="33:79">"hcall-pft\0hcall-term\0hcall-dabr\0hcall-interrupt"</literal>

        <literal type="string" pos:start="35:9" pos:end="35:58">"\0hcall-tce\0hcall-vio\0hcall-splpar\0hcall-bulk"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:73"><decl pos:start="37:5" pos:end="37:72"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">uint32_t</name></type> <name pos:start="37:14" pos:end="37:43"><name pos:start="37:14" pos:end="37:41">interrupt_server_ranges_prop</name><index pos:start="37:42" pos:end="37:43">[]</index></name> <init pos:start="37:45" pos:end="37:72">= <expr pos:start="37:47" pos:end="37:72"><block pos:start="37:47" pos:end="37:72">{<expr pos:start="37:48" pos:end="37:48"><literal type="number" pos:start="37:48" pos:end="37:48">0</literal></expr>, <macro pos:start="37:51" pos:end="37:71"><name pos:start="37:51" pos:end="37:61">cpu_to_be32</name><argument_list pos:start="37:62" pos:end="37:71">(<argument pos:start="37:63" pos:end="37:70">smp_cpus</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:10"><decl pos:start="39:5" pos:end="39:9"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:20"><decl pos:start="41:5" pos:end="41:19"><type pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:8">char</name> <modifier pos:start="41:10" pos:end="41:10">*</modifier></type><name pos:start="41:11" pos:end="41:19">modelname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="64:0"><decl pos:start="43:5" pos:end="43:34"><type pos:start="43:5" pos:end="43:7"><name pos:start="43:5" pos:end="43:7">int</name></type> <name pos:start="43:9" pos:end="43:11">smt</name> <init pos:start="43:13" pos:end="43:34">= <expr pos:start="43:15" pos:end="43:34"><call pos:start="43:15" pos:end="43:34"><name pos:start="43:15" pos:end="43:32">kvmppc_smt_threads</name><argument_list pos:start="43:33" pos:end="43:34">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="47:1" pos:end="63:15">#<cpp:directive pos:start="47:2" pos:end="47:7">define</cpp:directive> <cpp:macro pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:12">_FDT</name><parameter_list pos:start="47:13" pos:end="47:17">(<parameter pos:start="47:14" pos:end="47:16"><type pos:start="47:14" pos:end="47:16"><name pos:start="47:14" pos:end="47:16">exp</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="49:5" pos:end="63:15">do { \

        int ret = (exp);                                           \

        if (ret &lt; 0) {                                             \

            fprintf(stderr, "qemu: error creating device tree: %s: %s\n", \

                    #exp, fdt_strerror(ret));                      \

            exit(1);                                               \

        }                                                          \

    } while (0)</cpp:value></cpp:define>



    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:7">fdt</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:33"><name pos:start="67:11" pos:end="67:19">g_malloc0</name><argument_list pos:start="67:20" pos:end="67:33">(<argument pos:start="67:21" pos:end="67:32"><expr pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:32">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:42"><expr pos:start="69:5" pos:end="69:41"><call pos:start="69:5" pos:end="69:41"><name pos:start="69:5" pos:end="69:8">_FDT</name><argument_list pos:start="69:9" pos:end="69:41">(<argument pos:start="69:10" pos:end="69:40"><expr pos:start="69:10" pos:end="69:40"><operator pos:start="69:10" pos:end="69:10">(</operator><call pos:start="69:11" pos:end="69:39"><name pos:start="69:11" pos:end="69:20">fdt_create</name><argument_list pos:start="69:21" pos:end="69:39">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><name pos:start="69:22" pos:end="69:24">fdt</name></expr></argument>, <argument pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="69:40" pos:end="69:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><call pos:start="73:5" pos:end="73:38"><name pos:start="73:5" pos:end="73:8">_FDT</name><argument_list pos:start="73:9" pos:end="73:38">(<argument pos:start="73:10" pos:end="73:37"><expr pos:start="73:10" pos:end="73:37"><operator pos:start="73:10" pos:end="73:10">(</operator><call pos:start="73:11" pos:end="73:36"><name pos:start="73:11" pos:end="73:31">fdt_finish_reservemap</name><argument_list pos:start="73:32" pos:end="73:36">(<argument pos:start="73:33" pos:end="73:35"><expr pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:35">fdt</name></expr></argument>)</argument_list></call><operator pos:start="73:37" pos:end="73:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:19">/* Root node */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:36"><expr pos:start="79:5" pos:end="79:35"><call pos:start="79:5" pos:end="79:35"><name pos:start="79:5" pos:end="79:8">_FDT</name><argument_list pos:start="79:9" pos:end="79:35">(<argument pos:start="79:10" pos:end="79:34"><expr pos:start="79:10" pos:end="79:34"><operator pos:start="79:10" pos:end="79:10">(</operator><call pos:start="79:11" pos:end="79:33"><name pos:start="79:11" pos:end="79:24">fdt_begin_node</name><argument_list pos:start="79:25" pos:end="79:33">(<argument pos:start="79:26" pos:end="79:28"><expr pos:start="79:26" pos:end="79:28"><name pos:start="79:26" pos:end="79:28">fdt</name></expr></argument>, <argument pos:start="79:31" pos:end="79:32"><expr pos:start="79:31" pos:end="79:32"><literal type="string" pos:start="79:31" pos:end="79:32">""</literal></expr></argument>)</argument_list></call><operator pos:start="79:34" pos:end="79:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:60"><expr pos:start="81:5" pos:end="81:59"><call pos:start="81:5" pos:end="81:59"><name pos:start="81:5" pos:end="81:8">_FDT</name><argument_list pos:start="81:9" pos:end="81:59">(<argument pos:start="81:10" pos:end="81:58"><expr pos:start="81:10" pos:end="81:58"><operator pos:start="81:10" pos:end="81:10">(</operator><call pos:start="81:11" pos:end="81:57"><name pos:start="81:11" pos:end="81:29">fdt_property_string</name><argument_list pos:start="81:30" pos:end="81:57">(<argument pos:start="81:31" pos:end="81:33"><expr pos:start="81:31" pos:end="81:33"><name pos:start="81:31" pos:end="81:33">fdt</name></expr></argument>, <argument pos:start="81:36" pos:end="81:48"><expr pos:start="81:36" pos:end="81:48"><literal type="string" pos:start="81:36" pos:end="81:48">"device_type"</literal></expr></argument>, <argument pos:start="81:51" pos:end="81:56"><expr pos:start="81:51" pos:end="81:56"><literal type="string" pos:start="81:51" pos:end="81:56">"chrp"</literal></expr></argument>)</argument_list></call><operator pos:start="81:58" pos:end="81:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:80"><expr pos:start="83:5" pos:end="83:79"><call pos:start="83:5" pos:end="83:79"><name pos:start="83:5" pos:end="83:8">_FDT</name><argument_list pos:start="83:9" pos:end="83:79">(<argument pos:start="83:10" pos:end="83:78"><expr pos:start="83:10" pos:end="83:78"><operator pos:start="83:10" pos:end="83:10">(</operator><call pos:start="83:11" pos:end="83:77"><name pos:start="83:11" pos:end="83:29">fdt_property_string</name><argument_list pos:start="83:30" pos:end="83:77">(<argument pos:start="83:31" pos:end="83:33"><expr pos:start="83:31" pos:end="83:33"><name pos:start="83:31" pos:end="83:33">fdt</name></expr></argument>, <argument pos:start="83:36" pos:end="83:42"><expr pos:start="83:36" pos:end="83:42"><literal type="string" pos:start="83:36" pos:end="83:42">"model"</literal></expr></argument>, <argument pos:start="83:45" pos:end="83:76"><expr pos:start="83:45" pos:end="83:76"><literal type="string" pos:start="83:45" pos:end="83:76">"IBM pSeries (emulated by qemu)"</literal></expr></argument>)</argument_list></call><operator pos:start="83:78" pos:end="83:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:58"><expr pos:start="87:5" pos:end="87:57"><call pos:start="87:5" pos:end="87:57"><name pos:start="87:5" pos:end="87:8">_FDT</name><argument_list pos:start="87:9" pos:end="87:57">(<argument pos:start="87:10" pos:end="87:56"><expr pos:start="87:10" pos:end="87:56"><operator pos:start="87:10" pos:end="87:10">(</operator><call pos:start="87:11" pos:end="87:55"><name pos:start="87:11" pos:end="87:27">fdt_property_cell</name><argument_list pos:start="87:28" pos:end="87:55">(<argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">fdt</name></expr></argument>, <argument pos:start="87:34" pos:end="87:49"><expr pos:start="87:34" pos:end="87:49"><literal type="string" pos:start="87:34" pos:end="87:49">"#address-cells"</literal></expr></argument>, <argument pos:start="87:52" pos:end="87:54"><expr pos:start="87:52" pos:end="87:54"><literal type="number" pos:start="87:52" pos:end="87:54">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="87:56" pos:end="87:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><call pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:8">_FDT</name><argument_list pos:start="89:9" pos:end="89:54">(<argument pos:start="89:10" pos:end="89:53"><expr pos:start="89:10" pos:end="89:53"><operator pos:start="89:10" pos:end="89:10">(</operator><call pos:start="89:11" pos:end="89:52"><name pos:start="89:11" pos:end="89:27">fdt_property_cell</name><argument_list pos:start="89:28" pos:end="89:52">(<argument pos:start="89:29" pos:end="89:31"><expr pos:start="89:29" pos:end="89:31"><name pos:start="89:29" pos:end="89:31">fdt</name></expr></argument>, <argument pos:start="89:34" pos:end="89:46"><expr pos:start="89:34" pos:end="89:46"><literal type="string" pos:start="89:34" pos:end="89:46">"#size-cells"</literal></expr></argument>, <argument pos:start="89:49" pos:end="89:51"><expr pos:start="89:49" pos:end="89:51"><literal type="number" pos:start="89:49" pos:end="89:51">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="89:53" pos:end="89:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:17">/* /chosen */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:42"><expr pos:start="95:5" pos:end="95:41"><call pos:start="95:5" pos:end="95:41"><name pos:start="95:5" pos:end="95:8">_FDT</name><argument_list pos:start="95:9" pos:end="95:41">(<argument pos:start="95:10" pos:end="95:40"><expr pos:start="95:10" pos:end="95:40"><operator pos:start="95:10" pos:end="95:10">(</operator><call pos:start="95:11" pos:end="95:39"><name pos:start="95:11" pos:end="95:24">fdt_begin_node</name><argument_list pos:start="95:25" pos:end="95:39">(<argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">fdt</name></expr></argument>, <argument pos:start="95:31" pos:end="95:38"><expr pos:start="95:31" pos:end="95:38"><literal type="string" pos:start="95:31" pos:end="95:38">"chosen"</literal></expr></argument>)</argument_list></call><operator pos:start="95:40" pos:end="95:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:65"><expr pos:start="99:5" pos:end="99:64"><call pos:start="99:5" pos:end="99:64"><name pos:start="99:5" pos:end="99:8">_FDT</name><argument_list pos:start="99:9" pos:end="99:64">(<argument pos:start="99:10" pos:end="99:63"><expr pos:start="99:10" pos:end="99:63"><operator pos:start="99:10" pos:end="99:10">(</operator><call pos:start="99:11" pos:end="99:62"><name pos:start="99:11" pos:end="99:29">fdt_property_string</name><argument_list pos:start="99:30" pos:end="99:62">(<argument pos:start="99:31" pos:end="99:33"><expr pos:start="99:31" pos:end="99:33"><name pos:start="99:31" pos:end="99:33">fdt</name></expr></argument>, <argument pos:start="99:36" pos:end="99:45"><expr pos:start="99:36" pos:end="99:45"><literal type="string" pos:start="99:36" pos:end="99:45">"bootargs"</literal></expr></argument>, <argument pos:start="99:48" pos:end="99:61"><expr pos:start="99:48" pos:end="99:61"><name pos:start="99:48" pos:end="99:61">kernel_cmdline</name></expr></argument>)</argument_list></call><operator pos:start="99:63" pos:end="99:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:58"><expr pos:start="101:5" pos:end="103:57"><call pos:start="101:5" pos:end="103:57"><name pos:start="101:5" pos:end="101:8">_FDT</name><argument_list pos:start="101:9" pos:end="103:57">(<argument pos:start="101:10" pos:end="103:56"><expr pos:start="101:10" pos:end="103:56"><operator pos:start="101:10" pos:end="101:10">(</operator><call pos:start="101:11" pos:end="103:55"><name pos:start="101:11" pos:end="101:22">fdt_property</name><argument_list pos:start="101:23" pos:end="103:55">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">fdt</name></expr></argument>, <argument pos:start="101:29" pos:end="101:48"><expr pos:start="101:29" pos:end="101:48"><literal type="string" pos:start="101:29" pos:end="101:48">"linux,initrd-start"</literal></expr></argument>,

                       <argument pos:start="103:24" pos:end="103:34"><expr pos:start="103:24" pos:end="103:34"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:34">start_prop</name></expr></argument>, <argument pos:start="103:37" pos:end="103:54"><expr pos:start="103:37" pos:end="103:54"><sizeof pos:start="103:37" pos:end="103:54">sizeof<argument_list pos:start="103:43" pos:end="103:54">(<argument pos:start="103:44" pos:end="103:53"><expr pos:start="103:44" pos:end="103:53"><name pos:start="103:44" pos:end="103:53">start_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="103:56" pos:end="103:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="107:54"><expr pos:start="105:5" pos:end="107:53"><call pos:start="105:5" pos:end="107:53"><name pos:start="105:5" pos:end="105:8">_FDT</name><argument_list pos:start="105:9" pos:end="107:53">(<argument pos:start="105:10" pos:end="107:52"><expr pos:start="105:10" pos:end="107:52"><operator pos:start="105:10" pos:end="105:10">(</operator><call pos:start="105:11" pos:end="107:51"><name pos:start="105:11" pos:end="105:22">fdt_property</name><argument_list pos:start="105:23" pos:end="107:51">(<argument pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">fdt</name></expr></argument>, <argument pos:start="105:29" pos:end="105:46"><expr pos:start="105:29" pos:end="105:46"><literal type="string" pos:start="105:29" pos:end="105:46">"linux,initrd-end"</literal></expr></argument>,

                       <argument pos:start="107:24" pos:end="107:32"><expr pos:start="107:24" pos:end="107:32"><operator pos:start="107:24" pos:end="107:24">&amp;</operator><name pos:start="107:25" pos:end="107:32">end_prop</name></expr></argument>, <argument pos:start="107:35" pos:end="107:50"><expr pos:start="107:35" pos:end="107:50"><sizeof pos:start="107:35" pos:end="107:50">sizeof<argument_list pos:start="107:41" pos:end="107:50">(<argument pos:start="107:42" pos:end="107:49"><expr pos:start="107:42" pos:end="107:49"><name pos:start="107:42" pos:end="107:49">end_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="107:52" pos:end="107:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:70"><expr pos:start="109:5" pos:end="109:69"><call pos:start="109:5" pos:end="109:69"><name pos:start="109:5" pos:end="109:8">_FDT</name><argument_list pos:start="109:9" pos:end="109:69">(<argument pos:start="109:10" pos:end="109:68"><expr pos:start="109:10" pos:end="109:68"><operator pos:start="109:10" pos:end="109:10">(</operator><call pos:start="109:11" pos:end="109:67"><name pos:start="109:11" pos:end="109:29">fdt_property_string</name><argument_list pos:start="109:30" pos:end="109:67">(<argument pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:33">fdt</name></expr></argument>, <argument pos:start="109:36" pos:end="109:53"><expr pos:start="109:36" pos:end="109:53"><literal type="string" pos:start="109:36" pos:end="109:53">"qemu,boot-device"</literal></expr></argument>, <argument pos:start="109:56" pos:end="109:66"><expr pos:start="109:56" pos:end="109:66"><name pos:start="109:56" pos:end="109:66">boot_device</name></expr></argument>)</argument_list></call><operator pos:start="109:68" pos:end="109:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:30"><expr pos:start="113:5" pos:end="113:29"><call pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:8">_FDT</name><argument_list pos:start="113:9" pos:end="113:29">(<argument pos:start="113:10" pos:end="113:28"><expr pos:start="113:10" pos:end="113:28"><operator pos:start="113:10" pos:end="113:10">(</operator><call pos:start="113:11" pos:end="113:27"><name pos:start="113:11" pos:end="113:22">fdt_end_node</name><argument_list pos:start="113:23" pos:end="113:27">(<argument pos:start="113:24" pos:end="113:26"><expr pos:start="113:24" pos:end="113:26"><name pos:start="113:24" pos:end="113:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="113:28" pos:end="113:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:24">/* memory node(s) */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:44"><expr pos:start="119:5" pos:end="119:43"><call pos:start="119:5" pos:end="119:43"><name pos:start="119:5" pos:end="119:8">_FDT</name><argument_list pos:start="119:9" pos:end="119:43">(<argument pos:start="119:10" pos:end="119:42"><expr pos:start="119:10" pos:end="119:42"><operator pos:start="119:10" pos:end="119:10">(</operator><call pos:start="119:11" pos:end="119:41"><name pos:start="119:11" pos:end="119:24">fdt_begin_node</name><argument_list pos:start="119:25" pos:end="119:41">(<argument pos:start="119:26" pos:end="119:28"><expr pos:start="119:26" pos:end="119:28"><name pos:start="119:26" pos:end="119:28">fdt</name></expr></argument>, <argument pos:start="119:31" pos:end="119:40"><expr pos:start="119:31" pos:end="119:40"><literal type="string" pos:start="119:31" pos:end="119:40">"memory@0"</literal></expr></argument>)</argument_list></call><operator pos:start="119:42" pos:end="119:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:62"><expr pos:start="123:5" pos:end="123:61"><call pos:start="123:5" pos:end="123:61"><name pos:start="123:5" pos:end="123:8">_FDT</name><argument_list pos:start="123:9" pos:end="123:61">(<argument pos:start="123:10" pos:end="123:60"><expr pos:start="123:10" pos:end="123:60"><operator pos:start="123:10" pos:end="123:10">(</operator><call pos:start="123:11" pos:end="123:59"><name pos:start="123:11" pos:end="123:29">fdt_property_string</name><argument_list pos:start="123:30" pos:end="123:59">(<argument pos:start="123:31" pos:end="123:33"><expr pos:start="123:31" pos:end="123:33"><name pos:start="123:31" pos:end="123:33">fdt</name></expr></argument>, <argument pos:start="123:36" pos:end="123:48"><expr pos:start="123:36" pos:end="123:48"><literal type="string" pos:start="123:36" pos:end="123:48">"device_type"</literal></expr></argument>, <argument pos:start="123:51" pos:end="123:58"><expr pos:start="123:51" pos:end="123:58"><literal type="string" pos:start="123:51" pos:end="123:58">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="123:60" pos:end="123:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="127:55"><expr pos:start="125:5" pos:end="127:54"><call pos:start="125:5" pos:end="127:54"><name pos:start="125:5" pos:end="125:8">_FDT</name><argument_list pos:start="125:9" pos:end="127:54">(<argument pos:start="125:10" pos:end="127:53"><expr pos:start="125:10" pos:end="127:53"><operator pos:start="125:10" pos:end="125:10">(</operator><call pos:start="125:11" pos:end="127:52"><name pos:start="125:11" pos:end="125:22">fdt_property</name><argument_list pos:start="125:23" pos:end="127:52">(<argument pos:start="125:24" pos:end="125:26"><expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">fdt</name></expr></argument>, <argument pos:start="125:29" pos:end="125:33"><expr pos:start="125:29" pos:end="125:33"><literal type="string" pos:start="125:29" pos:end="125:33">"reg"</literal></expr></argument>, <argument pos:start="125:36" pos:end="125:55"><expr pos:start="125:36" pos:end="125:55"><name pos:start="125:36" pos:end="125:55">mem_reg_property_rma</name></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:51"><expr pos:start="127:24" pos:end="127:51"><sizeof pos:start="127:24" pos:end="127:51">sizeof<argument_list pos:start="127:30" pos:end="127:51">(<argument pos:start="127:31" pos:end="127:50"><expr pos:start="127:31" pos:end="127:50"><name pos:start="127:31" pos:end="127:50">mem_reg_property_rma</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="127:53" pos:end="127:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:30"><expr pos:start="129:5" pos:end="129:29"><call pos:start="129:5" pos:end="129:29"><name pos:start="129:5" pos:end="129:8">_FDT</name><argument_list pos:start="129:9" pos:end="129:29">(<argument pos:start="129:10" pos:end="129:28"><expr pos:start="129:10" pos:end="129:28"><operator pos:start="129:10" pos:end="129:10">(</operator><call pos:start="129:11" pos:end="129:27"><name pos:start="129:11" pos:end="129:22">fdt_end_node</name><argument_list pos:start="129:23" pos:end="129:27">(<argument pos:start="129:24" pos:end="129:26"><expr pos:start="129:24" pos:end="129:26"><name pos:start="129:24" pos:end="129:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="129:28" pos:end="129:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="151:5"><if pos:start="133:5" pos:end="151:5">if <condition pos:start="133:8" pos:end="133:28">(<expr pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:16">ram_size</name> <operator pos:start="133:18" pos:end="133:18">&gt;</operator> <name pos:start="133:20" pos:end="133:27">rma_size</name></expr>)</condition> <block pos:start="133:30" pos:end="151:5">{<block_content pos:start="135:9" pos:end="149:34">

        <decl_stmt pos:start="135:9" pos:end="135:26"><decl pos:start="135:9" pos:end="135:25"><type pos:start="135:9" pos:end="135:12"><name pos:start="135:9" pos:end="135:12">char</name></type> <name pos:start="135:14" pos:end="135:25"><name pos:start="135:14" pos:end="135:21">mem_name</name><index pos:start="135:22" pos:end="135:25">[<expr pos:start="135:23" pos:end="135:24"><literal type="number" pos:start="135:23" pos:end="135:24">32</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:65"><expr pos:start="139:9" pos:end="139:64"><call pos:start="139:9" pos:end="139:64"><name pos:start="139:9" pos:end="139:15">sprintf</name><argument_list pos:start="139:16" pos:end="139:64">(<argument pos:start="139:17" pos:end="139:24"><expr pos:start="139:17" pos:end="139:24"><name pos:start="139:17" pos:end="139:24">mem_name</name></expr></argument>, <argument pos:start="139:27" pos:end="139:43"><expr pos:start="139:27" pos:end="139:43"><literal type="string" pos:start="139:27" pos:end="139:36">"memory@%"</literal> <name pos:start="139:38" pos:end="139:43">PRIx64</name></expr></argument>, <argument pos:start="139:46" pos:end="139:63"><expr pos:start="139:46" pos:end="139:63"><operator pos:start="139:46" pos:end="139:46">(</operator><name pos:start="139:47" pos:end="139:54">uint64_t</name><operator pos:start="139:55" pos:end="139:55">)</operator><name pos:start="139:56" pos:end="139:63">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><call pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:12">_FDT</name><argument_list pos:start="141:13" pos:end="141:45">(<argument pos:start="141:14" pos:end="141:44"><expr pos:start="141:14" pos:end="141:44"><operator pos:start="141:14" pos:end="141:14">(</operator><call pos:start="141:15" pos:end="141:43"><name pos:start="141:15" pos:end="141:28">fdt_begin_node</name><argument_list pos:start="141:29" pos:end="141:43">(<argument pos:start="141:30" pos:end="141:32"><expr pos:start="141:30" pos:end="141:32"><name pos:start="141:30" pos:end="141:32">fdt</name></expr></argument>, <argument pos:start="141:35" pos:end="141:42"><expr pos:start="141:35" pos:end="141:42"><name pos:start="141:35" pos:end="141:42">mem_name</name></expr></argument>)</argument_list></call><operator pos:start="141:44" pos:end="141:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:66"><expr pos:start="143:9" pos:end="143:65"><call pos:start="143:9" pos:end="143:65"><name pos:start="143:9" pos:end="143:12">_FDT</name><argument_list pos:start="143:13" pos:end="143:65">(<argument pos:start="143:14" pos:end="143:64"><expr pos:start="143:14" pos:end="143:64"><operator pos:start="143:14" pos:end="143:14">(</operator><call pos:start="143:15" pos:end="143:63"><name pos:start="143:15" pos:end="143:33">fdt_property_string</name><argument_list pos:start="143:34" pos:end="143:63">(<argument pos:start="143:35" pos:end="143:37"><expr pos:start="143:35" pos:end="143:37"><name pos:start="143:35" pos:end="143:37">fdt</name></expr></argument>, <argument pos:start="143:40" pos:end="143:52"><expr pos:start="143:40" pos:end="143:52"><literal type="string" pos:start="143:40" pos:end="143:52">"device_type"</literal></expr></argument>, <argument pos:start="143:55" pos:end="143:62"><expr pos:start="143:55" pos:end="143:62"><literal type="string" pos:start="143:55" pos:end="143:62">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="143:64" pos:end="143:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="147:62"><expr pos:start="145:9" pos:end="147:61"><call pos:start="145:9" pos:end="147:61"><name pos:start="145:9" pos:end="145:12">_FDT</name><argument_list pos:start="145:13" pos:end="147:61">(<argument pos:start="145:14" pos:end="147:60"><expr pos:start="145:14" pos:end="147:60"><operator pos:start="145:14" pos:end="145:14">(</operator><call pos:start="145:15" pos:end="147:59"><name pos:start="145:15" pos:end="145:26">fdt_property</name><argument_list pos:start="145:27" pos:end="147:59">(<argument pos:start="145:28" pos:end="145:30"><expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:30">fdt</name></expr></argument>, <argument pos:start="145:33" pos:end="145:37"><expr pos:start="145:33" pos:end="145:37"><literal type="string" pos:start="145:33" pos:end="145:37">"reg"</literal></expr></argument>, <argument pos:start="145:40" pos:end="145:62"><expr pos:start="145:40" pos:end="145:62"><name pos:start="145:40" pos:end="145:62">mem_reg_property_nonrma</name></expr></argument>,

                           <argument pos:start="147:28" pos:end="147:58"><expr pos:start="147:28" pos:end="147:58"><sizeof pos:start="147:28" pos:end="147:58">sizeof<argument_list pos:start="147:34" pos:end="147:58">(<argument pos:start="147:35" pos:end="147:57"><expr pos:start="147:35" pos:end="147:57"><name pos:start="147:35" pos:end="147:57">mem_reg_property_nonrma</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="147:60" pos:end="147:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:34"><expr pos:start="149:9" pos:end="149:33"><call pos:start="149:9" pos:end="149:33"><name pos:start="149:9" pos:end="149:12">_FDT</name><argument_list pos:start="149:13" pos:end="149:33">(<argument pos:start="149:14" pos:end="149:32"><expr pos:start="149:14" pos:end="149:32"><operator pos:start="149:14" pos:end="149:14">(</operator><call pos:start="149:15" pos:end="149:31"><name pos:start="149:15" pos:end="149:26">fdt_end_node</name><argument_list pos:start="149:27" pos:end="149:31">(<argument pos:start="149:28" pos:end="149:30"><expr pos:start="149:28" pos:end="149:30"><name pos:start="149:28" pos:end="149:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="149:32" pos:end="149:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="155:5" pos:end="155:14">/* cpus */</comment>

    <expr_stmt pos:start="157:5" pos:end="157:40"><expr pos:start="157:5" pos:end="157:39"><call pos:start="157:5" pos:end="157:39"><name pos:start="157:5" pos:end="157:8">_FDT</name><argument_list pos:start="157:9" pos:end="157:39">(<argument pos:start="157:10" pos:end="157:38"><expr pos:start="157:10" pos:end="157:38"><operator pos:start="157:10" pos:end="157:10">(</operator><call pos:start="157:11" pos:end="157:37"><name pos:start="157:11" pos:end="157:24">fdt_begin_node</name><argument_list pos:start="157:25" pos:end="157:37">(<argument pos:start="157:26" pos:end="157:28"><expr pos:start="157:26" pos:end="157:28"><name pos:start="157:26" pos:end="157:28">fdt</name></expr></argument>, <argument pos:start="157:31" pos:end="157:36"><expr pos:start="157:31" pos:end="157:36"><literal type="string" pos:start="157:31" pos:end="157:36">"cpus"</literal></expr></argument>)</argument_list></call><operator pos:start="157:38" pos:end="157:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:58"><expr pos:start="161:5" pos:end="161:57"><call pos:start="161:5" pos:end="161:57"><name pos:start="161:5" pos:end="161:8">_FDT</name><argument_list pos:start="161:9" pos:end="161:57">(<argument pos:start="161:10" pos:end="161:56"><expr pos:start="161:10" pos:end="161:56"><operator pos:start="161:10" pos:end="161:10">(</operator><call pos:start="161:11" pos:end="161:55"><name pos:start="161:11" pos:end="161:27">fdt_property_cell</name><argument_list pos:start="161:28" pos:end="161:55">(<argument pos:start="161:29" pos:end="161:31"><expr pos:start="161:29" pos:end="161:31"><name pos:start="161:29" pos:end="161:31">fdt</name></expr></argument>, <argument pos:start="161:34" pos:end="161:49"><expr pos:start="161:34" pos:end="161:49"><literal type="string" pos:start="161:34" pos:end="161:49">"#address-cells"</literal></expr></argument>, <argument pos:start="161:52" pos:end="161:54"><expr pos:start="161:52" pos:end="161:54"><literal type="number" pos:start="161:52" pos:end="161:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="161:56" pos:end="161:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:55"><expr pos:start="163:5" pos:end="163:54"><call pos:start="163:5" pos:end="163:54"><name pos:start="163:5" pos:end="163:8">_FDT</name><argument_list pos:start="163:9" pos:end="163:54">(<argument pos:start="163:10" pos:end="163:53"><expr pos:start="163:10" pos:end="163:53"><operator pos:start="163:10" pos:end="163:10">(</operator><call pos:start="163:11" pos:end="163:52"><name pos:start="163:11" pos:end="163:27">fdt_property_cell</name><argument_list pos:start="163:28" pos:end="163:52">(<argument pos:start="163:29" pos:end="163:31"><expr pos:start="163:29" pos:end="163:31"><name pos:start="163:29" pos:end="163:31">fdt</name></expr></argument>, <argument pos:start="163:34" pos:end="163:46"><expr pos:start="163:34" pos:end="163:46"><literal type="string" pos:start="163:34" pos:end="163:46">"#size-cells"</literal></expr></argument>, <argument pos:start="163:49" pos:end="163:51"><expr pos:start="163:49" pos:end="163:51"><literal type="number" pos:start="163:49" pos:end="163:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="163:53" pos:end="163:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:36"><expr pos:start="167:5" pos:end="167:35"><name pos:start="167:5" pos:end="167:13">modelname</name> <operator pos:start="167:15" pos:end="167:15">=</operator> <call pos:start="167:17" pos:end="167:35"><name pos:start="167:17" pos:end="167:24">g_strdup</name><argument_list pos:start="167:25" pos:end="167:35">(<argument pos:start="167:26" pos:end="167:34"><expr pos:start="167:26" pos:end="167:34"><name pos:start="167:26" pos:end="167:34">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="171:5" pos:end="175:5">for <control pos:start="171:9" pos:end="171:43">(<init pos:start="171:10" pos:end="171:15"><expr pos:start="171:10" pos:end="171:14"><name pos:start="171:10" pos:end="171:10">i</name> <operator pos:start="171:12" pos:end="171:12">=</operator> <literal type="number" pos:start="171:14" pos:end="171:14">0</literal></expr>;</init> <condition pos:start="171:17" pos:end="171:38"><expr pos:start="171:17" pos:end="171:37"><name pos:start="171:17" pos:end="171:17">i</name> <operator pos:start="171:19" pos:end="171:19">&lt;</operator> <call pos:start="171:21" pos:end="171:37"><name pos:start="171:21" pos:end="171:26">strlen</name><argument_list pos:start="171:27" pos:end="171:37">(<argument pos:start="171:28" pos:end="171:36"><expr pos:start="171:28" pos:end="171:36"><name pos:start="171:28" pos:end="171:36">modelname</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="171:40" pos:end="171:42"><expr pos:start="171:40" pos:end="171:42"><name pos:start="171:40" pos:end="171:40">i</name><operator pos:start="171:41" pos:end="171:42">++</operator></expr></incr>)</control> <block pos:start="171:45" pos:end="175:5">{<block_content pos:start="173:9" pos:end="173:45">

        <expr_stmt pos:start="173:9" pos:end="173:45"><expr pos:start="173:9" pos:end="173:44"><name pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:17">modelname</name><index pos:start="173:18" pos:end="173:20">[<expr pos:start="173:19" pos:end="173:19"><name pos:start="173:19" pos:end="173:19">i</name></expr>]</index></name> <operator pos:start="173:22" pos:end="173:22">=</operator> <call pos:start="173:24" pos:end="173:44"><name pos:start="173:24" pos:end="173:30">toupper</name><argument_list pos:start="173:31" pos:end="173:44">(<argument pos:start="173:32" pos:end="173:43"><expr pos:start="173:32" pos:end="173:43"><name pos:start="173:32" pos:end="173:43"><name pos:start="173:32" pos:end="173:40">modelname</name><index pos:start="173:41" pos:end="173:43">[<expr pos:start="173:42" pos:end="173:42"><name pos:start="173:42" pos:end="173:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="179:5" pos:end="327:5">for <control pos:start="179:9" pos:end="179:59">(<init pos:start="179:10" pos:end="179:25"><expr pos:start="179:10" pos:end="179:24"><name pos:start="179:10" pos:end="179:12">env</name> <operator pos:start="179:14" pos:end="179:14">=</operator> <name pos:start="179:16" pos:end="179:24">first_cpu</name></expr>;</init> <condition pos:start="179:27" pos:end="179:38"><expr pos:start="179:27" pos:end="179:37"><name pos:start="179:27" pos:end="179:29">env</name> <operator pos:start="179:31" pos:end="179:32">!=</operator> <name pos:start="179:34" pos:end="179:37">NULL</name></expr>;</condition> <incr pos:start="179:40" pos:end="179:58"><expr pos:start="179:40" pos:end="179:58"><name pos:start="179:40" pos:end="179:42">env</name> <operator pos:start="179:44" pos:end="179:44">=</operator> <name pos:start="179:46" pos:end="179:58"><name pos:start="179:46" pos:end="179:48">env</name><operator pos:start="179:49" pos:end="179:50">-&gt;</operator><name pos:start="179:51" pos:end="179:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="179:61" pos:end="327:5">{<block_content pos:start="181:9" pos:end="325:34">

        <decl_stmt pos:start="181:9" pos:end="181:35"><decl pos:start="181:9" pos:end="181:34"><type pos:start="181:9" pos:end="181:11"><name pos:start="181:9" pos:end="181:11">int</name></type> <name pos:start="181:13" pos:end="181:17">index</name> <init pos:start="181:19" pos:end="181:34">= <expr pos:start="181:21" pos:end="181:34"><name pos:start="181:21" pos:end="181:34"><name pos:start="181:21" pos:end="181:23">env</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:34">cpu_index</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="183:9" pos:end="183:43"><decl pos:start="183:9" pos:end="183:42"><type pos:start="183:9" pos:end="183:16"><name pos:start="183:9" pos:end="183:16">uint32_t</name></type> <name pos:start="183:18" pos:end="183:42"><name pos:start="183:18" pos:end="183:29">servers_prop</name><index pos:start="183:30" pos:end="183:42">[<expr pos:start="183:31" pos:end="183:41"><name pos:start="183:31" pos:end="183:41">smp_threads</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="185:9" pos:end="185:48"><decl pos:start="185:9" pos:end="185:47"><type pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:16">uint32_t</name></type> <name pos:start="185:18" pos:end="185:47"><name pos:start="185:18" pos:end="185:30">gservers_prop</name><index pos:start="185:31" pos:end="185:47">[<expr pos:start="185:32" pos:end="185:46"><name pos:start="185:32" pos:end="185:42">smp_threads</name> <operator pos:start="185:44" pos:end="185:44">*</operator> <literal type="number" pos:start="185:46" pos:end="185:46">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="187:9" pos:end="187:23"><decl pos:start="187:9" pos:end="187:22"><type pos:start="187:9" pos:end="187:14"><name pos:start="187:9" pos:end="187:12">char</name> <modifier pos:start="187:14" pos:end="187:14">*</modifier></type><name pos:start="187:15" pos:end="187:22">nodename</name></decl>;</decl_stmt>

        <decl_stmt pos:start="189:9" pos:end="191:51"><decl pos:start="189:9" pos:end="191:50"><type pos:start="189:9" pos:end="189:16"><name pos:start="189:9" pos:end="189:16">uint32_t</name></type> <name pos:start="189:18" pos:end="189:23"><name pos:start="189:18" pos:end="189:21">segs</name><index pos:start="189:22" pos:end="189:23">[]</index></name> <init pos:start="189:25" pos:end="191:50">= <expr pos:start="189:27" pos:end="191:50"><block pos:start="189:27" pos:end="191:50">{<expr pos:start="189:28" pos:end="189:42"><call pos:start="189:28" pos:end="189:42"><name pos:start="189:28" pos:end="189:38">cpu_to_be32</name><argument_list pos:start="189:39" pos:end="189:42">(<argument pos:start="189:40" pos:end="189:41"><expr pos:start="189:40" pos:end="189:41"><literal type="number" pos:start="189:40" pos:end="189:41">28</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="189:45" pos:end="189:59"><call pos:start="189:45" pos:end="189:59"><name pos:start="189:45" pos:end="189:55">cpu_to_be32</name><argument_list pos:start="189:56" pos:end="189:59">(<argument pos:start="189:57" pos:end="189:58"><expr pos:start="189:57" pos:end="189:58"><literal type="number" pos:start="189:57" pos:end="189:58">40</literal></expr></argument>)</argument_list></call></expr>,

                           <expr pos:start="191:28" pos:end="191:37"><literal type="number" pos:start="191:28" pos:end="191:37">0xffffffff</literal></expr>, <expr pos:start="191:40" pos:end="191:49"><literal type="number" pos:start="191:40" pos:end="191:49">0xffffffff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:78"><decl pos:start="193:9" pos:end="193:77"><type pos:start="193:9" pos:end="193:16"><name pos:start="193:9" pos:end="193:16">uint32_t</name></type> <name pos:start="193:18" pos:end="193:23">tbfreq</name> <init pos:start="193:25" pos:end="193:77">= <expr pos:start="193:27" pos:end="193:77"><ternary pos:start="193:27" pos:end="193:77"><condition pos:start="193:27" pos:end="193:41"><expr pos:start="193:27" pos:end="193:39"><call pos:start="193:27" pos:end="193:39"><name pos:start="193:27" pos:end="193:37">kvm_enabled</name><argument_list pos:start="193:38" pos:end="193:39">()</argument_list></call></expr> ?</condition><then pos:start="193:43" pos:end="193:61"> <expr pos:start="193:43" pos:end="193:61"><call pos:start="193:43" pos:end="193:61"><name pos:start="193:43" pos:end="193:59">kvmppc_get_tbfreq</name><argument_list pos:start="193:60" pos:end="193:61">()</argument_list></call></expr> </then><else pos:start="193:63" pos:end="193:77">: <expr pos:start="193:65" pos:end="193:77"><name pos:start="193:65" pos:end="193:77">TIMEBASE_FREQ</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="195:9" pos:end="195:79"><decl pos:start="195:9" pos:end="195:78"><type pos:start="195:9" pos:end="195:16"><name pos:start="195:9" pos:end="195:16">uint32_t</name></type> <name pos:start="195:18" pos:end="195:24">cpufreq</name> <init pos:start="195:26" pos:end="195:78">= <expr pos:start="195:28" pos:end="195:78"><ternary pos:start="195:28" pos:end="195:78"><condition pos:start="195:28" pos:end="195:42"><expr pos:start="195:28" pos:end="195:40"><call pos:start="195:28" pos:end="195:40"><name pos:start="195:28" pos:end="195:38">kvm_enabled</name><argument_list pos:start="195:39" pos:end="195:40">()</argument_list></call></expr> ?</condition><then pos:start="195:44" pos:end="195:65"> <expr pos:start="195:44" pos:end="195:65"><call pos:start="195:44" pos:end="195:65"><name pos:start="195:44" pos:end="195:63">kvmppc_get_clockfreq</name><argument_list pos:start="195:64" pos:end="195:65">()</argument_list></call></expr> </then><else pos:start="195:67" pos:end="195:78">: <expr pos:start="195:69" pos:end="195:78"><literal type="number" pos:start="195:69" pos:end="195:78">1000000000</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="197:9" pos:end="197:60"><decl pos:start="197:9" pos:end="197:59"><type pos:start="197:9" pos:end="197:16"><name pos:start="197:9" pos:end="197:16">uint32_t</name></type> <name pos:start="197:18" pos:end="197:20">vmx</name> <init pos:start="197:22" pos:end="197:59">= <expr pos:start="197:24" pos:end="197:59"><ternary pos:start="197:24" pos:end="197:59"><condition pos:start="197:24" pos:end="197:38"><expr pos:start="197:24" pos:end="197:36"><call pos:start="197:24" pos:end="197:36"><name pos:start="197:24" pos:end="197:34">kvm_enabled</name><argument_list pos:start="197:35" pos:end="197:36">()</argument_list></call></expr> ?</condition><then pos:start="197:40" pos:end="197:55"> <expr pos:start="197:40" pos:end="197:55"><call pos:start="197:40" pos:end="197:55"><name pos:start="197:40" pos:end="197:53">kvmppc_get_vmx</name><argument_list pos:start="197:54" pos:end="197:55">()</argument_list></call></expr> </then><else pos:start="197:57" pos:end="197:59">: <expr pos:start="197:59" pos:end="197:59"><literal type="number" pos:start="197:59" pos:end="197:59">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="199:9" pos:end="199:60"><decl pos:start="199:9" pos:end="199:59"><type pos:start="199:9" pos:end="199:16"><name pos:start="199:9" pos:end="199:16">uint32_t</name></type> <name pos:start="199:18" pos:end="199:20">dfp</name> <init pos:start="199:22" pos:end="199:59">= <expr pos:start="199:24" pos:end="199:59"><ternary pos:start="199:24" pos:end="199:59"><condition pos:start="199:24" pos:end="199:38"><expr pos:start="199:24" pos:end="199:36"><call pos:start="199:24" pos:end="199:36"><name pos:start="199:24" pos:end="199:34">kvm_enabled</name><argument_list pos:start="199:35" pos:end="199:36">()</argument_list></call></expr> ?</condition><then pos:start="199:40" pos:end="199:55"> <expr pos:start="199:40" pos:end="199:55"><call pos:start="199:40" pos:end="199:55"><name pos:start="199:40" pos:end="199:53">kvmppc_get_dfp</name><argument_list pos:start="199:54" pos:end="199:55">()</argument_list></call></expr> </then><else pos:start="199:57" pos:end="199:59">: <expr pos:start="199:59" pos:end="199:59"><literal type="number" pos:start="199:59" pos:end="199:59">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="203:9" pos:end="207:9"><if pos:start="203:9" pos:end="207:9">if <condition pos:start="203:12" pos:end="203:31">(<expr pos:start="203:13" pos:end="203:30"><operator pos:start="203:13" pos:end="203:13">(</operator><name pos:start="203:14" pos:end="203:18">index</name> <operator pos:start="203:20" pos:end="203:20">%</operator> <name pos:start="203:22" pos:end="203:24">smt</name><operator pos:start="203:25" pos:end="203:25">)</operator> <operator pos:start="203:27" pos:end="203:28">!=</operator> <literal type="number" pos:start="203:30" pos:end="203:30">0</literal></expr>)</condition> <block pos:start="203:33" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:21">

            <continue pos:start="205:13" pos:end="205:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="211:9" pos:end="217:9"><if pos:start="211:9" pos:end="217:9">if <condition pos:start="211:12" pos:end="211:63">(<expr pos:start="211:13" pos:end="211:62"><call pos:start="211:13" pos:end="211:58"><name pos:start="211:13" pos:end="211:20">asprintf</name><argument_list pos:start="211:21" pos:end="211:58">(<argument pos:start="211:22" pos:end="211:30"><expr pos:start="211:22" pos:end="211:30"><operator pos:start="211:22" pos:end="211:22">&amp;</operator><name pos:start="211:23" pos:end="211:30">nodename</name></expr></argument>, <argument pos:start="211:33" pos:end="211:39"><expr pos:start="211:33" pos:end="211:39"><literal type="string" pos:start="211:33" pos:end="211:39">"%s@%x"</literal></expr></argument>, <argument pos:start="211:42" pos:end="211:50"><expr pos:start="211:42" pos:end="211:50"><name pos:start="211:42" pos:end="211:50">modelname</name></expr></argument>, <argument pos:start="211:53" pos:end="211:57"><expr pos:start="211:53" pos:end="211:57"><name pos:start="211:53" pos:end="211:57">index</name></expr></argument>)</argument_list></call> <operator pos:start="211:60" pos:end="211:60">&lt;</operator> <literal type="number" pos:start="211:62" pos:end="211:62">0</literal></expr>)</condition> <block pos:start="211:65" pos:end="217:9">{<block_content pos:start="213:13" pos:end="215:20">

            <expr_stmt pos:start="213:13" pos:end="213:52"><expr pos:start="213:13" pos:end="213:51"><call pos:start="213:13" pos:end="213:51"><name pos:start="213:13" pos:end="213:19">fprintf</name><argument_list pos:start="213:20" pos:end="213:51">(<argument pos:start="213:21" pos:end="213:26"><expr pos:start="213:21" pos:end="213:26"><name pos:start="213:21" pos:end="213:26">stderr</name></expr></argument>, <argument pos:start="213:29" pos:end="213:50"><expr pos:start="213:29" pos:end="213:50"><literal type="string" pos:start="213:29" pos:end="213:50">"Allocation failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:20"><expr pos:start="215:13" pos:end="215:19"><call pos:start="215:13" pos:end="215:19"><name pos:start="215:13" pos:end="215:16">exit</name><argument_list pos:start="215:17" pos:end="215:19">(<argument pos:start="215:18" pos:end="215:18"><expr pos:start="215:18" pos:end="215:18"><literal type="number" pos:start="215:18" pos:end="215:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="221:9" pos:end="221:46"><expr pos:start="221:9" pos:end="221:45"><call pos:start="221:9" pos:end="221:45"><name pos:start="221:9" pos:end="221:12">_FDT</name><argument_list pos:start="221:13" pos:end="221:45">(<argument pos:start="221:14" pos:end="221:44"><expr pos:start="221:14" pos:end="221:44"><operator pos:start="221:14" pos:end="221:14">(</operator><call pos:start="221:15" pos:end="221:43"><name pos:start="221:15" pos:end="221:28">fdt_begin_node</name><argument_list pos:start="221:29" pos:end="221:43">(<argument pos:start="221:30" pos:end="221:32"><expr pos:start="221:30" pos:end="221:32"><name pos:start="221:30" pos:end="221:32">fdt</name></expr></argument>, <argument pos:start="221:35" pos:end="221:42"><expr pos:start="221:35" pos:end="221:42"><name pos:start="221:35" pos:end="221:42">nodename</name></expr></argument>)</argument_list></call><operator pos:start="221:44" pos:end="221:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:23"><expr pos:start="225:9" pos:end="225:22"><call pos:start="225:9" pos:end="225:22"><name pos:start="225:9" pos:end="225:12">free</name><argument_list pos:start="225:13" pos:end="225:22">(<argument pos:start="225:14" pos:end="225:21"><expr pos:start="225:14" pos:end="225:21"><name pos:start="225:14" pos:end="225:21">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="229:9" pos:end="229:53"><expr pos:start="229:9" pos:end="229:52"><call pos:start="229:9" pos:end="229:52"><name pos:start="229:9" pos:end="229:12">_FDT</name><argument_list pos:start="229:13" pos:end="229:52">(<argument pos:start="229:14" pos:end="229:51"><expr pos:start="229:14" pos:end="229:51"><operator pos:start="229:14" pos:end="229:14">(</operator><call pos:start="229:15" pos:end="229:50"><name pos:start="229:15" pos:end="229:31">fdt_property_cell</name><argument_list pos:start="229:32" pos:end="229:50">(<argument pos:start="229:33" pos:end="229:35"><expr pos:start="229:33" pos:end="229:35"><name pos:start="229:33" pos:end="229:35">fdt</name></expr></argument>, <argument pos:start="229:38" pos:end="229:42"><expr pos:start="229:38" pos:end="229:42"><literal type="string" pos:start="229:38" pos:end="229:42">"reg"</literal></expr></argument>, <argument pos:start="229:45" pos:end="229:49"><expr pos:start="229:45" pos:end="229:49"><name pos:start="229:45" pos:end="229:49">index</name></expr></argument>)</argument_list></call><operator pos:start="229:51" pos:end="229:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:63"><expr pos:start="231:9" pos:end="231:62"><call pos:start="231:9" pos:end="231:62"><name pos:start="231:9" pos:end="231:12">_FDT</name><argument_list pos:start="231:13" pos:end="231:62">(<argument pos:start="231:14" pos:end="231:61"><expr pos:start="231:14" pos:end="231:61"><operator pos:start="231:14" pos:end="231:14">(</operator><call pos:start="231:15" pos:end="231:60"><name pos:start="231:15" pos:end="231:33">fdt_property_string</name><argument_list pos:start="231:34" pos:end="231:60">(<argument pos:start="231:35" pos:end="231:37"><expr pos:start="231:35" pos:end="231:37"><name pos:start="231:35" pos:end="231:37">fdt</name></expr></argument>, <argument pos:start="231:40" pos:end="231:52"><expr pos:start="231:40" pos:end="231:52"><literal type="string" pos:start="231:40" pos:end="231:52">"device_type"</literal></expr></argument>, <argument pos:start="231:55" pos:end="231:59"><expr pos:start="231:55" pos:end="231:59"><literal type="string" pos:start="231:55" pos:end="231:59">"cpu"</literal></expr></argument>)</argument_list></call><operator pos:start="231:61" pos:end="231:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:73"><expr pos:start="235:9" pos:end="235:72"><call pos:start="235:9" pos:end="235:72"><name pos:start="235:9" pos:end="235:12">_FDT</name><argument_list pos:start="235:13" pos:end="235:72">(<argument pos:start="235:14" pos:end="235:71"><expr pos:start="235:14" pos:end="235:71"><operator pos:start="235:14" pos:end="235:14">(</operator><call pos:start="235:15" pos:end="235:70"><name pos:start="235:15" pos:end="235:31">fdt_property_cell</name><argument_list pos:start="235:32" pos:end="235:70">(<argument pos:start="235:33" pos:end="235:35"><expr pos:start="235:33" pos:end="235:35"><name pos:start="235:33" pos:end="235:35">fdt</name></expr></argument>, <argument pos:start="235:38" pos:end="235:50"><expr pos:start="235:38" pos:end="235:50"><literal type="string" pos:start="235:38" pos:end="235:50">"cpu-version"</literal></expr></argument>, <argument pos:start="235:53" pos:end="235:69"><expr pos:start="235:53" pos:end="235:69"><name pos:start="235:53" pos:end="235:69"><name pos:start="235:53" pos:end="235:55">env</name><operator pos:start="235:56" pos:end="235:57">-&gt;</operator><name pos:start="235:58" pos:end="235:60">spr</name><index pos:start="235:61" pos:end="235:69">[<expr pos:start="235:62" pos:end="235:68"><name pos:start="235:62" pos:end="235:68">SPR_PVR</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="235:71" pos:end="235:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="239:57"><expr pos:start="237:9" pos:end="239:56"><call pos:start="237:9" pos:end="239:56"><name pos:start="237:9" pos:end="237:12">_FDT</name><argument_list pos:start="237:13" pos:end="239:56">(<argument pos:start="237:14" pos:end="239:55"><expr pos:start="237:14" pos:end="239:55"><operator pos:start="237:14" pos:end="237:14">(</operator><call pos:start="237:15" pos:end="239:54"><name pos:start="237:15" pos:end="237:31">fdt_property_cell</name><argument_list pos:start="237:32" pos:end="239:54">(<argument pos:start="237:33" pos:end="237:35"><expr pos:start="237:33" pos:end="237:35"><name pos:start="237:33" pos:end="237:35">fdt</name></expr></argument>, <argument pos:start="237:38" pos:end="237:56"><expr pos:start="237:38" pos:end="237:56"><literal type="string" pos:start="237:38" pos:end="237:56">"dcache-block-size"</literal></expr></argument>,

                                <argument pos:start="239:33" pos:end="239:53"><expr pos:start="239:33" pos:end="239:53"><name pos:start="239:33" pos:end="239:53"><name pos:start="239:33" pos:end="239:35">env</name><operator pos:start="239:36" pos:end="239:37">-&gt;</operator><name pos:start="239:38" pos:end="239:53">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="239:55" pos:end="239:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="243:57"><expr pos:start="241:9" pos:end="243:56"><call pos:start="241:9" pos:end="243:56"><name pos:start="241:9" pos:end="241:12">_FDT</name><argument_list pos:start="241:13" pos:end="243:56">(<argument pos:start="241:14" pos:end="243:55"><expr pos:start="241:14" pos:end="243:55"><operator pos:start="241:14" pos:end="241:14">(</operator><call pos:start="241:15" pos:end="243:54"><name pos:start="241:15" pos:end="241:31">fdt_property_cell</name><argument_list pos:start="241:32" pos:end="243:54">(<argument pos:start="241:33" pos:end="241:35"><expr pos:start="241:33" pos:end="241:35"><name pos:start="241:33" pos:end="241:35">fdt</name></expr></argument>, <argument pos:start="241:38" pos:end="241:56"><expr pos:start="241:38" pos:end="241:56"><literal type="string" pos:start="241:38" pos:end="241:56">"icache-block-size"</literal></expr></argument>,

                                <argument pos:start="243:33" pos:end="243:53"><expr pos:start="243:33" pos:end="243:53"><name pos:start="243:33" pos:end="243:53"><name pos:start="243:33" pos:end="243:35">env</name><operator pos:start="243:36" pos:end="243:37">-&gt;</operator><name pos:start="243:38" pos:end="243:53">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="243:55" pos:end="243:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:69"><expr pos:start="245:9" pos:end="245:68"><call pos:start="245:9" pos:end="245:68"><name pos:start="245:9" pos:end="245:12">_FDT</name><argument_list pos:start="245:13" pos:end="245:68">(<argument pos:start="245:14" pos:end="245:67"><expr pos:start="245:14" pos:end="245:67"><operator pos:start="245:14" pos:end="245:14">(</operator><call pos:start="245:15" pos:end="245:66"><name pos:start="245:15" pos:end="245:31">fdt_property_cell</name><argument_list pos:start="245:32" pos:end="245:66">(<argument pos:start="245:33" pos:end="245:35"><expr pos:start="245:33" pos:end="245:35"><name pos:start="245:33" pos:end="245:35">fdt</name></expr></argument>, <argument pos:start="245:38" pos:end="245:57"><expr pos:start="245:38" pos:end="245:57"><literal type="string" pos:start="245:38" pos:end="245:57">"timebase-frequency"</literal></expr></argument>, <argument pos:start="245:60" pos:end="245:65"><expr pos:start="245:60" pos:end="245:65"><name pos:start="245:60" pos:end="245:65">tbfreq</name></expr></argument>)</argument_list></call><operator pos:start="245:67" pos:end="245:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:67"><expr pos:start="247:9" pos:end="247:66"><call pos:start="247:9" pos:end="247:66"><name pos:start="247:9" pos:end="247:12">_FDT</name><argument_list pos:start="247:13" pos:end="247:66">(<argument pos:start="247:14" pos:end="247:65"><expr pos:start="247:14" pos:end="247:65"><operator pos:start="247:14" pos:end="247:14">(</operator><call pos:start="247:15" pos:end="247:64"><name pos:start="247:15" pos:end="247:31">fdt_property_cell</name><argument_list pos:start="247:32" pos:end="247:64">(<argument pos:start="247:33" pos:end="247:35"><expr pos:start="247:33" pos:end="247:35"><name pos:start="247:33" pos:end="247:35">fdt</name></expr></argument>, <argument pos:start="247:38" pos:end="247:54"><expr pos:start="247:38" pos:end="247:54"><literal type="string" pos:start="247:38" pos:end="247:54">"clock-frequency"</literal></expr></argument>, <argument pos:start="247:57" pos:end="247:63"><expr pos:start="247:57" pos:end="247:63"><name pos:start="247:57" pos:end="247:63">cpufreq</name></expr></argument>)</argument_list></call><operator pos:start="247:65" pos:end="247:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:68"><expr pos:start="249:9" pos:end="249:67"><call pos:start="249:9" pos:end="249:67"><name pos:start="249:9" pos:end="249:12">_FDT</name><argument_list pos:start="249:13" pos:end="249:67">(<argument pos:start="249:14" pos:end="249:66"><expr pos:start="249:14" pos:end="249:66"><operator pos:start="249:14" pos:end="249:14">(</operator><call pos:start="249:15" pos:end="249:65"><name pos:start="249:15" pos:end="249:31">fdt_property_cell</name><argument_list pos:start="249:32" pos:end="249:65">(<argument pos:start="249:33" pos:end="249:35"><expr pos:start="249:33" pos:end="249:35"><name pos:start="249:33" pos:end="249:35">fdt</name></expr></argument>, <argument pos:start="249:38" pos:end="249:51"><expr pos:start="249:38" pos:end="249:51"><literal type="string" pos:start="249:38" pos:end="249:51">"ibm,slb-size"</literal></expr></argument>, <argument pos:start="249:54" pos:end="249:64"><expr pos:start="249:54" pos:end="249:64"><name pos:start="249:54" pos:end="249:64"><name pos:start="249:54" pos:end="249:56">env</name><operator pos:start="249:57" pos:end="249:58">-&gt;</operator><name pos:start="249:59" pos:end="249:64">slb_nr</name></name></expr></argument>)</argument_list></call><operator pos:start="249:66" pos:end="249:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="253:67"><expr pos:start="251:9" pos:end="253:66"><call pos:start="251:9" pos:end="253:66"><name pos:start="251:9" pos:end="251:12">_FDT</name><argument_list pos:start="251:13" pos:end="253:66">(<argument pos:start="251:14" pos:end="253:65"><expr pos:start="251:14" pos:end="253:65"><operator pos:start="251:14" pos:end="251:14">(</operator><call pos:start="251:15" pos:end="253:64"><name pos:start="251:15" pos:end="251:26">fdt_property</name><argument_list pos:start="251:27" pos:end="253:64">(<argument pos:start="251:28" pos:end="251:30"><expr pos:start="251:28" pos:end="251:30"><name pos:start="251:28" pos:end="251:30">fdt</name></expr></argument>, <argument pos:start="251:33" pos:end="251:46"><expr pos:start="251:33" pos:end="251:46"><literal type="string" pos:start="251:33" pos:end="251:46">"ibm,pft-size"</literal></expr></argument>,

                           <argument pos:start="253:28" pos:end="253:40"><expr pos:start="253:28" pos:end="253:40"><name pos:start="253:28" pos:end="253:40">pft_size_prop</name></expr></argument>, <argument pos:start="253:43" pos:end="253:63"><expr pos:start="253:43" pos:end="253:63"><sizeof pos:start="253:43" pos:end="253:63">sizeof<argument_list pos:start="253:49" pos:end="253:63">(<argument pos:start="253:50" pos:end="253:62"><expr pos:start="253:50" pos:end="253:62"><name pos:start="253:50" pos:end="253:62">pft_size_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="253:65" pos:end="253:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:59"><expr pos:start="255:9" pos:end="255:58"><call pos:start="255:9" pos:end="255:58"><name pos:start="255:9" pos:end="255:12">_FDT</name><argument_list pos:start="255:13" pos:end="255:58">(<argument pos:start="255:14" pos:end="255:57"><expr pos:start="255:14" pos:end="255:57"><operator pos:start="255:14" pos:end="255:14">(</operator><call pos:start="255:15" pos:end="255:56"><name pos:start="255:15" pos:end="255:33">fdt_property_string</name><argument_list pos:start="255:34" pos:end="255:56">(<argument pos:start="255:35" pos:end="255:37"><expr pos:start="255:35" pos:end="255:37"><name pos:start="255:35" pos:end="255:37">fdt</name></expr></argument>, <argument pos:start="255:40" pos:end="255:47"><expr pos:start="255:40" pos:end="255:47"><literal type="string" pos:start="255:40" pos:end="255:47">"status"</literal></expr></argument>, <argument pos:start="255:50" pos:end="255:55"><expr pos:start="255:50" pos:end="255:55"><literal type="string" pos:start="255:50" pos:end="255:55">"okay"</literal></expr></argument>)</argument_list></call><operator pos:start="255:57" pos:end="255:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:53"><expr pos:start="257:9" pos:end="257:52"><call pos:start="257:9" pos:end="257:52"><name pos:start="257:9" pos:end="257:12">_FDT</name><argument_list pos:start="257:13" pos:end="257:52">(<argument pos:start="257:14" pos:end="257:51"><expr pos:start="257:14" pos:end="257:51"><operator pos:start="257:14" pos:end="257:14">(</operator><call pos:start="257:15" pos:end="257:50"><name pos:start="257:15" pos:end="257:26">fdt_property</name><argument_list pos:start="257:27" pos:end="257:50">(<argument pos:start="257:28" pos:end="257:30"><expr pos:start="257:28" pos:end="257:30"><name pos:start="257:28" pos:end="257:30">fdt</name></expr></argument>, <argument pos:start="257:33" pos:end="257:40"><expr pos:start="257:33" pos:end="257:40"><literal type="string" pos:start="257:33" pos:end="257:40">"64-bit"</literal></expr></argument>, <argument pos:start="257:43" pos:end="257:46"><expr pos:start="257:43" pos:end="257:46"><name pos:start="257:43" pos:end="257:46">NULL</name></expr></argument>, <argument pos:start="257:49" pos:end="257:49"><expr pos:start="257:49" pos:end="257:49"><literal type="number" pos:start="257:49" pos:end="257:49">0</literal></expr></argument>)</argument_list></call><operator pos:start="257:51" pos:end="257:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="261:9" pos:end="261:61">/* Build interrupt servers and gservers properties */</comment>

        <for pos:start="263:9" pos:end="273:9">for <control pos:start="263:13" pos:end="263:41">(<init pos:start="263:14" pos:end="263:19"><expr pos:start="263:14" pos:end="263:18"><name pos:start="263:14" pos:end="263:14">i</name> <operator pos:start="263:16" pos:end="263:16">=</operator> <literal type="number" pos:start="263:18" pos:end="263:18">0</literal></expr>;</init> <condition pos:start="263:21" pos:end="263:36"><expr pos:start="263:21" pos:end="263:35"><name pos:start="263:21" pos:end="263:21">i</name> <operator pos:start="263:23" pos:end="263:23">&lt;</operator> <name pos:start="263:25" pos:end="263:35">smp_threads</name></expr>;</condition> <incr pos:start="263:38" pos:end="263:40"><expr pos:start="263:38" pos:end="263:40"><name pos:start="263:38" pos:end="263:38">i</name><operator pos:start="263:39" pos:end="263:40">++</operator></expr></incr>)</control> <block pos:start="263:43" pos:end="273:9">{<block_content pos:start="265:13" pos:end="271:39">

            <expr_stmt pos:start="265:13" pos:end="265:53"><expr pos:start="265:13" pos:end="265:52"><name pos:start="265:13" pos:end="265:27"><name pos:start="265:13" pos:end="265:24">servers_prop</name><index pos:start="265:25" pos:end="265:27">[<expr pos:start="265:26" pos:end="265:26"><name pos:start="265:26" pos:end="265:26">i</name></expr>]</index></name> <operator pos:start="265:29" pos:end="265:29">=</operator> <call pos:start="265:31" pos:end="265:52"><name pos:start="265:31" pos:end="265:41">cpu_to_be32</name><argument_list pos:start="265:42" pos:end="265:52">(<argument pos:start="265:43" pos:end="265:51"><expr pos:start="265:43" pos:end="265:51"><name pos:start="265:43" pos:end="265:47">index</name> <operator pos:start="265:49" pos:end="265:49">+</operator> <name pos:start="265:51" pos:end="265:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="267:13" pos:end="267:61">/* Hack, direct the group queues back to cpu 0 */</comment>

            <expr_stmt pos:start="269:13" pos:end="269:56"><expr pos:start="269:13" pos:end="269:55"><name pos:start="269:13" pos:end="269:30"><name pos:start="269:13" pos:end="269:25">gservers_prop</name><index pos:start="269:26" pos:end="269:30">[<expr pos:start="269:27" pos:end="269:29"><name pos:start="269:27" pos:end="269:27">i</name><operator pos:start="269:28" pos:end="269:28">*</operator><literal type="number" pos:start="269:29" pos:end="269:29">2</literal></expr>]</index></name> <operator pos:start="269:32" pos:end="269:32">=</operator> <call pos:start="269:34" pos:end="269:55"><name pos:start="269:34" pos:end="269:44">cpu_to_be32</name><argument_list pos:start="269:45" pos:end="269:55">(<argument pos:start="269:46" pos:end="269:54"><expr pos:start="269:46" pos:end="269:54"><name pos:start="269:46" pos:end="269:50">index</name> <operator pos:start="269:52" pos:end="269:52">+</operator> <name pos:start="269:54" pos:end="269:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:39"><expr pos:start="271:13" pos:end="271:38"><name pos:start="271:13" pos:end="271:34"><name pos:start="271:13" pos:end="271:25">gservers_prop</name><index pos:start="271:26" pos:end="271:34">[<expr pos:start="271:27" pos:end="271:33"><name pos:start="271:27" pos:end="271:27">i</name><operator pos:start="271:28" pos:end="271:28">*</operator><literal type="number" pos:start="271:29" pos:end="271:29">2</literal> <operator pos:start="271:31" pos:end="271:31">+</operator> <literal type="number" pos:start="271:33" pos:end="271:33">1</literal></expr>]</index></name> <operator pos:start="271:36" pos:end="271:36">=</operator> <literal type="number" pos:start="271:38" pos:end="271:38">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="275:9" pos:end="277:65"><expr pos:start="275:9" pos:end="277:64"><call pos:start="275:9" pos:end="277:64"><name pos:start="275:9" pos:end="275:12">_FDT</name><argument_list pos:start="275:13" pos:end="277:64">(<argument pos:start="275:14" pos:end="277:63"><expr pos:start="275:14" pos:end="277:63"><operator pos:start="275:14" pos:end="275:14">(</operator><call pos:start="275:15" pos:end="277:62"><name pos:start="275:15" pos:end="275:26">fdt_property</name><argument_list pos:start="275:27" pos:end="277:62">(<argument pos:start="275:28" pos:end="275:30"><expr pos:start="275:28" pos:end="275:30"><name pos:start="275:28" pos:end="275:30">fdt</name></expr></argument>, <argument pos:start="275:33" pos:end="275:60"><expr pos:start="275:33" pos:end="275:60"><literal type="string" pos:start="275:33" pos:end="275:60">"ibm,ppc-interrupt-server#s"</literal></expr></argument>,

                           <argument pos:start="277:28" pos:end="277:39"><expr pos:start="277:28" pos:end="277:39"><name pos:start="277:28" pos:end="277:39">servers_prop</name></expr></argument>, <argument pos:start="277:42" pos:end="277:61"><expr pos:start="277:42" pos:end="277:61"><sizeof pos:start="277:42" pos:end="277:61">sizeof<argument_list pos:start="277:48" pos:end="277:61">(<argument pos:start="277:49" pos:end="277:60"><expr pos:start="277:49" pos:end="277:60"><name pos:start="277:49" pos:end="277:60">servers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="277:63" pos:end="277:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="281:67"><expr pos:start="279:9" pos:end="281:66"><call pos:start="279:9" pos:end="281:66"><name pos:start="279:9" pos:end="279:12">_FDT</name><argument_list pos:start="279:13" pos:end="281:66">(<argument pos:start="279:14" pos:end="281:65"><expr pos:start="279:14" pos:end="281:65"><operator pos:start="279:14" pos:end="279:14">(</operator><call pos:start="279:15" pos:end="281:64"><name pos:start="279:15" pos:end="279:26">fdt_property</name><argument_list pos:start="279:27" pos:end="281:64">(<argument pos:start="279:28" pos:end="279:30"><expr pos:start="279:28" pos:end="279:30"><name pos:start="279:28" pos:end="279:30">fdt</name></expr></argument>, <argument pos:start="279:33" pos:end="279:61"><expr pos:start="279:33" pos:end="279:61"><literal type="string" pos:start="279:33" pos:end="279:61">"ibm,ppc-interrupt-gserver#s"</literal></expr></argument>,

                           <argument pos:start="281:28" pos:end="281:40"><expr pos:start="281:28" pos:end="281:40"><name pos:start="281:28" pos:end="281:40">gservers_prop</name></expr></argument>, <argument pos:start="281:43" pos:end="281:63"><expr pos:start="281:43" pos:end="281:63"><sizeof pos:start="281:43" pos:end="281:63">sizeof<argument_list pos:start="281:49" pos:end="281:63">(<argument pos:start="281:50" pos:end="281:62"><expr pos:start="281:50" pos:end="281:62"><name pos:start="281:50" pos:end="281:62">gservers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="281:65" pos:end="281:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="285:9" pos:end="291:9"><if pos:start="285:9" pos:end="291:9">if <condition pos:start="285:12" pos:end="285:47">(<expr pos:start="285:13" pos:end="285:46"><name pos:start="285:13" pos:end="285:26"><name pos:start="285:13" pos:end="285:15">env</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:26">mmu_model</name></name> <operator pos:start="285:28" pos:end="285:28">&amp;</operator> <name pos:start="285:30" pos:end="285:46">POWERPC_MMU_1TSEG</name></expr>)</condition> <block pos:start="285:49" pos:end="291:9">{<block_content pos:start="287:13" pos:end="289:53">

            <expr_stmt pos:start="287:13" pos:end="289:53"><expr pos:start="287:13" pos:end="289:52"><call pos:start="287:13" pos:end="289:52"><name pos:start="287:13" pos:end="287:16">_FDT</name><argument_list pos:start="287:17" pos:end="289:52">(<argument pos:start="287:18" pos:end="289:51"><expr pos:start="287:18" pos:end="289:51"><operator pos:start="287:18" pos:end="287:18">(</operator><call pos:start="287:19" pos:end="289:50"><name pos:start="287:19" pos:end="287:30">fdt_property</name><argument_list pos:start="287:31" pos:end="289:50">(<argument pos:start="287:32" pos:end="287:34"><expr pos:start="287:32" pos:end="287:34"><name pos:start="287:32" pos:end="287:34">fdt</name></expr></argument>, <argument pos:start="287:37" pos:end="287:65"><expr pos:start="287:37" pos:end="287:65"><literal type="string" pos:start="287:37" pos:end="287:65">"ibm,processor-segment-sizes"</literal></expr></argument>,

                               <argument pos:start="289:32" pos:end="289:35"><expr pos:start="289:32" pos:end="289:35"><name pos:start="289:32" pos:end="289:35">segs</name></expr></argument>, <argument pos:start="289:38" pos:end="289:49"><expr pos:start="289:38" pos:end="289:49"><sizeof pos:start="289:38" pos:end="289:49">sizeof<argument_list pos:start="289:44" pos:end="289:49">(<argument pos:start="289:45" pos:end="289:48"><expr pos:start="289:45" pos:end="289:48"><name pos:start="289:45" pos:end="289:48">segs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="289:51" pos:end="289:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="295:9" pos:end="301:48">/* Advertise VMX/VSX (vector extensions) if available

         *   0 / no property == no vector extensions

         *   1               == VMX / Altivec available

         *   2               == VSX available */</comment>

        <if_stmt pos:start="303:9" pos:end="307:9"><if pos:start="303:9" pos:end="307:9">if <condition pos:start="303:12" pos:end="303:16">(<expr pos:start="303:13" pos:end="303:15"><name pos:start="303:13" pos:end="303:15">vmx</name></expr>)</condition> <block pos:start="303:18" pos:end="307:9">{<block_content pos:start="305:13" pos:end="305:59">

            <expr_stmt pos:start="305:13" pos:end="305:59"><expr pos:start="305:13" pos:end="305:58"><call pos:start="305:13" pos:end="305:58"><name pos:start="305:13" pos:end="305:16">_FDT</name><argument_list pos:start="305:17" pos:end="305:58">(<argument pos:start="305:18" pos:end="305:57"><expr pos:start="305:18" pos:end="305:57"><operator pos:start="305:18" pos:end="305:18">(</operator><call pos:start="305:19" pos:end="305:56"><name pos:start="305:19" pos:end="305:35">fdt_property_cell</name><argument_list pos:start="305:36" pos:end="305:56">(<argument pos:start="305:37" pos:end="305:39"><expr pos:start="305:37" pos:end="305:39"><name pos:start="305:37" pos:end="305:39">fdt</name></expr></argument>, <argument pos:start="305:42" pos:end="305:50"><expr pos:start="305:42" pos:end="305:50"><literal type="string" pos:start="305:42" pos:end="305:50">"ibm,vmx"</literal></expr></argument>, <argument pos:start="305:53" pos:end="305:55"><expr pos:start="305:53" pos:end="305:55"><name pos:start="305:53" pos:end="305:55">vmx</name></expr></argument>)</argument_list></call><operator pos:start="305:57" pos:end="305:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="311:9" pos:end="315:48">/* Advertise DFP (Decimal Floating Point) if available

         *   0 / no property == no DFP

         *   1               == DFP available */</comment>

        <if_stmt pos:start="317:9" pos:end="321:9"><if pos:start="317:9" pos:end="321:9">if <condition pos:start="317:12" pos:end="317:16">(<expr pos:start="317:13" pos:end="317:15"><name pos:start="317:13" pos:end="317:15">dfp</name></expr>)</condition> <block pos:start="317:18" pos:end="321:9">{<block_content pos:start="319:13" pos:end="319:59">

            <expr_stmt pos:start="319:13" pos:end="319:59"><expr pos:start="319:13" pos:end="319:58"><call pos:start="319:13" pos:end="319:58"><name pos:start="319:13" pos:end="319:16">_FDT</name><argument_list pos:start="319:17" pos:end="319:58">(<argument pos:start="319:18" pos:end="319:57"><expr pos:start="319:18" pos:end="319:57"><operator pos:start="319:18" pos:end="319:18">(</operator><call pos:start="319:19" pos:end="319:56"><name pos:start="319:19" pos:end="319:35">fdt_property_cell</name><argument_list pos:start="319:36" pos:end="319:56">(<argument pos:start="319:37" pos:end="319:39"><expr pos:start="319:37" pos:end="319:39"><name pos:start="319:37" pos:end="319:39">fdt</name></expr></argument>, <argument pos:start="319:42" pos:end="319:50"><expr pos:start="319:42" pos:end="319:50"><literal type="string" pos:start="319:42" pos:end="319:50">"ibm,dfp"</literal></expr></argument>, <argument pos:start="319:53" pos:end="319:55"><expr pos:start="319:53" pos:end="319:55"><name pos:start="319:53" pos:end="319:55">dfp</name></expr></argument>)</argument_list></call><operator pos:start="319:57" pos:end="319:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="325:9" pos:end="325:34"><expr pos:start="325:9" pos:end="325:33"><call pos:start="325:9" pos:end="325:33"><name pos:start="325:9" pos:end="325:12">_FDT</name><argument_list pos:start="325:13" pos:end="325:33">(<argument pos:start="325:14" pos:end="325:32"><expr pos:start="325:14" pos:end="325:32"><operator pos:start="325:14" pos:end="325:14">(</operator><call pos:start="325:15" pos:end="325:31"><name pos:start="325:15" pos:end="325:26">fdt_end_node</name><argument_list pos:start="325:27" pos:end="325:31">(<argument pos:start="325:28" pos:end="325:30"><expr pos:start="325:28" pos:end="325:30"><name pos:start="325:28" pos:end="325:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="325:32" pos:end="325:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="331:5" pos:end="331:22"><expr pos:start="331:5" pos:end="331:21"><call pos:start="331:5" pos:end="331:21"><name pos:start="331:5" pos:end="331:10">g_free</name><argument_list pos:start="331:11" pos:end="331:21">(<argument pos:start="331:12" pos:end="331:20"><expr pos:start="331:12" pos:end="331:20"><name pos:start="331:12" pos:end="331:20">modelname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="335:5" pos:end="335:30"><expr pos:start="335:5" pos:end="335:29"><call pos:start="335:5" pos:end="335:29"><name pos:start="335:5" pos:end="335:8">_FDT</name><argument_list pos:start="335:9" pos:end="335:29">(<argument pos:start="335:10" pos:end="335:28"><expr pos:start="335:10" pos:end="335:28"><operator pos:start="335:10" pos:end="335:10">(</operator><call pos:start="335:11" pos:end="335:27"><name pos:start="335:11" pos:end="335:22">fdt_end_node</name><argument_list pos:start="335:23" pos:end="335:27">(<argument pos:start="335:24" pos:end="335:26"><expr pos:start="335:24" pos:end="335:26"><name pos:start="335:24" pos:end="335:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="335:28" pos:end="335:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="339:5" pos:end="339:14">/* RTAS */</comment>

    <expr_stmt pos:start="341:5" pos:end="341:40"><expr pos:start="341:5" pos:end="341:39"><call pos:start="341:5" pos:end="341:39"><name pos:start="341:5" pos:end="341:8">_FDT</name><argument_list pos:start="341:9" pos:end="341:39">(<argument pos:start="341:10" pos:end="341:38"><expr pos:start="341:10" pos:end="341:38"><operator pos:start="341:10" pos:end="341:10">(</operator><call pos:start="341:11" pos:end="341:37"><name pos:start="341:11" pos:end="341:24">fdt_begin_node</name><argument_list pos:start="341:25" pos:end="341:37">(<argument pos:start="341:26" pos:end="341:28"><expr pos:start="341:26" pos:end="341:28"><name pos:start="341:26" pos:end="341:28">fdt</name></expr></argument>, <argument pos:start="341:31" pos:end="341:36"><expr pos:start="341:31" pos:end="341:36"><literal type="string" pos:start="341:31" pos:end="341:36">"rtas"</literal></expr></argument>)</argument_list></call><operator pos:start="341:38" pos:end="341:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="345:5" pos:end="347:48"><expr pos:start="345:5" pos:end="347:47"><call pos:start="345:5" pos:end="347:47"><name pos:start="345:5" pos:end="345:8">_FDT</name><argument_list pos:start="345:9" pos:end="347:47">(<argument pos:start="345:10" pos:end="347:46"><expr pos:start="345:10" pos:end="347:46"><operator pos:start="345:10" pos:end="345:10">(</operator><call pos:start="345:11" pos:end="347:45"><name pos:start="345:11" pos:end="345:22">fdt_property</name><argument_list pos:start="345:23" pos:end="347:45">(<argument pos:start="345:24" pos:end="345:26"><expr pos:start="345:24" pos:end="345:26"><name pos:start="345:24" pos:end="345:26">fdt</name></expr></argument>, <argument pos:start="345:29" pos:end="345:52"><expr pos:start="345:29" pos:end="345:52"><literal type="string" pos:start="345:29" pos:end="345:52">"ibm,hypertas-functions"</literal></expr></argument>, <argument pos:start="345:55" pos:end="345:67"><expr pos:start="345:55" pos:end="345:67"><name pos:start="345:55" pos:end="345:67">hypertas_prop</name></expr></argument>,

                       <argument pos:start="347:24" pos:end="347:44"><expr pos:start="347:24" pos:end="347:44"><sizeof pos:start="347:24" pos:end="347:44">sizeof<argument_list pos:start="347:30" pos:end="347:44">(<argument pos:start="347:31" pos:end="347:43"><expr pos:start="347:31" pos:end="347:43"><name pos:start="347:31" pos:end="347:43">hypertas_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="347:46" pos:end="347:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="351:5" pos:end="351:30"><expr pos:start="351:5" pos:end="351:29"><call pos:start="351:5" pos:end="351:29"><name pos:start="351:5" pos:end="351:8">_FDT</name><argument_list pos:start="351:9" pos:end="351:29">(<argument pos:start="351:10" pos:end="351:28"><expr pos:start="351:10" pos:end="351:28"><operator pos:start="351:10" pos:end="351:10">(</operator><call pos:start="351:11" pos:end="351:27"><name pos:start="351:11" pos:end="351:22">fdt_end_node</name><argument_list pos:start="351:23" pos:end="351:27">(<argument pos:start="351:24" pos:end="351:26"><expr pos:start="351:24" pos:end="351:26"><name pos:start="351:24" pos:end="351:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="351:28" pos:end="351:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="355:5" pos:end="355:30">/* interrupt controller */</comment>

    <expr_stmt pos:start="357:5" pos:end="357:56"><expr pos:start="357:5" pos:end="357:55"><call pos:start="357:5" pos:end="357:55"><name pos:start="357:5" pos:end="357:8">_FDT</name><argument_list pos:start="357:9" pos:end="357:55">(<argument pos:start="357:10" pos:end="357:54"><expr pos:start="357:10" pos:end="357:54"><operator pos:start="357:10" pos:end="357:10">(</operator><call pos:start="357:11" pos:end="357:53"><name pos:start="357:11" pos:end="357:24">fdt_begin_node</name><argument_list pos:start="357:25" pos:end="357:53">(<argument pos:start="357:26" pos:end="357:28"><expr pos:start="357:26" pos:end="357:28"><name pos:start="357:26" pos:end="357:28">fdt</name></expr></argument>, <argument pos:start="357:31" pos:end="357:52"><expr pos:start="357:31" pos:end="357:52"><literal type="string" pos:start="357:31" pos:end="357:52">"interrupt-controller"</literal></expr></argument>)</argument_list></call><operator pos:start="357:54" pos:end="357:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="361:5" pos:end="363:75"><expr pos:start="361:5" pos:end="363:74"><call pos:start="361:5" pos:end="363:74"><name pos:start="361:5" pos:end="361:8">_FDT</name><argument_list pos:start="361:9" pos:end="363:74">(<argument pos:start="361:10" pos:end="363:73"><expr pos:start="361:10" pos:end="363:73"><operator pos:start="361:10" pos:end="361:10">(</operator><call pos:start="361:11" pos:end="363:72"><name pos:start="361:11" pos:end="361:29">fdt_property_string</name><argument_list pos:start="361:30" pos:end="363:72">(<argument pos:start="361:31" pos:end="361:33"><expr pos:start="361:31" pos:end="361:33"><name pos:start="361:31" pos:end="361:33">fdt</name></expr></argument>, <argument pos:start="361:36" pos:end="361:48"><expr pos:start="361:36" pos:end="361:48"><literal type="string" pos:start="361:36" pos:end="361:48">"device_type"</literal></expr></argument>,

                              <argument pos:start="363:31" pos:end="363:71"><expr pos:start="363:31" pos:end="363:71"><literal type="string" pos:start="363:31" pos:end="363:71">"PowerPC-External-Interrupt-Presentation"</literal></expr></argument>)</argument_list></call><operator pos:start="363:73" pos:end="363:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="365:67"><expr pos:start="365:5" pos:end="365:66"><call pos:start="365:5" pos:end="365:66"><name pos:start="365:5" pos:end="365:8">_FDT</name><argument_list pos:start="365:9" pos:end="365:66">(<argument pos:start="365:10" pos:end="365:65"><expr pos:start="365:10" pos:end="365:65"><operator pos:start="365:10" pos:end="365:10">(</operator><call pos:start="365:11" pos:end="365:64"><name pos:start="365:11" pos:end="365:29">fdt_property_string</name><argument_list pos:start="365:30" pos:end="365:64">(<argument pos:start="365:31" pos:end="365:33"><expr pos:start="365:31" pos:end="365:33"><name pos:start="365:31" pos:end="365:33">fdt</name></expr></argument>, <argument pos:start="365:36" pos:end="365:47"><expr pos:start="365:36" pos:end="365:47"><literal type="string" pos:start="365:36" pos:end="365:47">"compatible"</literal></expr></argument>, <argument pos:start="365:50" pos:end="365:63"><expr pos:start="365:50" pos:end="365:63"><literal type="string" pos:start="365:50" pos:end="365:63">"IBM,ppc-xicp"</literal></expr></argument>)</argument_list></call><operator pos:start="365:65" pos:end="365:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:63"><expr pos:start="367:5" pos:end="367:62"><call pos:start="367:5" pos:end="367:62"><name pos:start="367:5" pos:end="367:8">_FDT</name><argument_list pos:start="367:9" pos:end="367:62">(<argument pos:start="367:10" pos:end="367:61"><expr pos:start="367:10" pos:end="367:61"><operator pos:start="367:10" pos:end="367:10">(</operator><call pos:start="367:11" pos:end="367:60"><name pos:start="367:11" pos:end="367:22">fdt_property</name><argument_list pos:start="367:23" pos:end="367:60">(<argument pos:start="367:24" pos:end="367:26"><expr pos:start="367:24" pos:end="367:26"><name pos:start="367:24" pos:end="367:26">fdt</name></expr></argument>, <argument pos:start="367:29" pos:end="367:50"><expr pos:start="367:29" pos:end="367:50"><literal type="string" pos:start="367:29" pos:end="367:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="367:53" pos:end="367:56"><expr pos:start="367:53" pos:end="367:56"><name pos:start="367:53" pos:end="367:56">NULL</name></expr></argument>, <argument pos:start="367:59" pos:end="367:59"><expr pos:start="367:59" pos:end="367:59"><literal type="number" pos:start="367:59" pos:end="367:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="367:61" pos:end="367:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="369:5" pos:end="373:63"><expr pos:start="369:5" pos:end="373:62"><call pos:start="369:5" pos:end="373:62"><name pos:start="369:5" pos:end="369:8">_FDT</name><argument_list pos:start="369:9" pos:end="373:62">(<argument pos:start="369:10" pos:end="373:61"><expr pos:start="369:10" pos:end="373:61"><operator pos:start="369:10" pos:end="369:10">(</operator><call pos:start="369:11" pos:end="373:60"><name pos:start="369:11" pos:end="369:22">fdt_property</name><argument_list pos:start="369:23" pos:end="373:60">(<argument pos:start="369:24" pos:end="369:26"><expr pos:start="369:24" pos:end="369:26"><name pos:start="369:24" pos:end="369:26">fdt</name></expr></argument>, <argument pos:start="369:29" pos:end="369:57"><expr pos:start="369:29" pos:end="369:57"><literal type="string" pos:start="369:29" pos:end="369:57">"ibm,interrupt-server-ranges"</literal></expr></argument>,

                       <argument pos:start="371:24" pos:end="371:51"><expr pos:start="371:24" pos:end="371:51"><name pos:start="371:24" pos:end="371:51">interrupt_server_ranges_prop</name></expr></argument>,

                       <argument pos:start="373:24" pos:end="373:59"><expr pos:start="373:24" pos:end="373:59"><sizeof pos:start="373:24" pos:end="373:59">sizeof<argument_list pos:start="373:30" pos:end="373:59">(<argument pos:start="373:31" pos:end="373:58"><expr pos:start="373:31" pos:end="373:58"><name pos:start="373:31" pos:end="373:58">interrupt_server_ranges_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="373:61" pos:end="373:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="375:5" pos:end="375:58"><expr pos:start="375:5" pos:end="375:57"><call pos:start="375:5" pos:end="375:57"><name pos:start="375:5" pos:end="375:8">_FDT</name><argument_list pos:start="375:9" pos:end="375:57">(<argument pos:start="375:10" pos:end="375:56"><expr pos:start="375:10" pos:end="375:56"><operator pos:start="375:10" pos:end="375:10">(</operator><call pos:start="375:11" pos:end="375:55"><name pos:start="375:11" pos:end="375:27">fdt_property_cell</name><argument_list pos:start="375:28" pos:end="375:55">(<argument pos:start="375:29" pos:end="375:31"><expr pos:start="375:29" pos:end="375:31"><name pos:start="375:29" pos:end="375:31">fdt</name></expr></argument>, <argument pos:start="375:34" pos:end="375:51"><expr pos:start="375:34" pos:end="375:51"><literal type="string" pos:start="375:34" pos:end="375:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="375:54" pos:end="375:54"><expr pos:start="375:54" pos:end="375:54"><literal type="number" pos:start="375:54" pos:end="375:54">2</literal></expr></argument>)</argument_list></call><operator pos:start="375:56" pos:end="375:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="377:5" pos:end="377:66"><expr pos:start="377:5" pos:end="377:65"><call pos:start="377:5" pos:end="377:65"><name pos:start="377:5" pos:end="377:8">_FDT</name><argument_list pos:start="377:9" pos:end="377:65">(<argument pos:start="377:10" pos:end="377:64"><expr pos:start="377:10" pos:end="377:64"><operator pos:start="377:10" pos:end="377:10">(</operator><call pos:start="377:11" pos:end="377:63"><name pos:start="377:11" pos:end="377:27">fdt_property_cell</name><argument_list pos:start="377:28" pos:end="377:63">(<argument pos:start="377:29" pos:end="377:31"><expr pos:start="377:29" pos:end="377:31"><name pos:start="377:29" pos:end="377:31">fdt</name></expr></argument>, <argument pos:start="377:34" pos:end="377:48"><expr pos:start="377:34" pos:end="377:48"><literal type="string" pos:start="377:34" pos:end="377:48">"linux,phandle"</literal></expr></argument>, <argument pos:start="377:51" pos:end="377:62"><expr pos:start="377:51" pos:end="377:62"><name pos:start="377:51" pos:end="377:62">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="377:64" pos:end="377:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:60"><expr pos:start="379:5" pos:end="379:59"><call pos:start="379:5" pos:end="379:59"><name pos:start="379:5" pos:end="379:8">_FDT</name><argument_list pos:start="379:9" pos:end="379:59">(<argument pos:start="379:10" pos:end="379:58"><expr pos:start="379:10" pos:end="379:58"><operator pos:start="379:10" pos:end="379:10">(</operator><call pos:start="379:11" pos:end="379:57"><name pos:start="379:11" pos:end="379:27">fdt_property_cell</name><argument_list pos:start="379:28" pos:end="379:57">(<argument pos:start="379:29" pos:end="379:31"><expr pos:start="379:29" pos:end="379:31"><name pos:start="379:29" pos:end="379:31">fdt</name></expr></argument>, <argument pos:start="379:34" pos:end="379:42"><expr pos:start="379:34" pos:end="379:42"><literal type="string" pos:start="379:34" pos:end="379:42">"phandle"</literal></expr></argument>, <argument pos:start="379:45" pos:end="379:56"><expr pos:start="379:45" pos:end="379:56"><name pos:start="379:45" pos:end="379:56">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="379:58" pos:end="379:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="383:5" pos:end="383:30"><expr pos:start="383:5" pos:end="383:29"><call pos:start="383:5" pos:end="383:29"><name pos:start="383:5" pos:end="383:8">_FDT</name><argument_list pos:start="383:9" pos:end="383:29">(<argument pos:start="383:10" pos:end="383:28"><expr pos:start="383:10" pos:end="383:28"><operator pos:start="383:10" pos:end="383:10">(</operator><call pos:start="383:11" pos:end="383:27"><name pos:start="383:11" pos:end="383:22">fdt_end_node</name><argument_list pos:start="383:23" pos:end="383:27">(<argument pos:start="383:24" pos:end="383:26"><expr pos:start="383:24" pos:end="383:26"><name pos:start="383:24" pos:end="383:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="383:28" pos:end="383:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="387:5" pos:end="387:17">/* vdevice */</comment>

    <expr_stmt pos:start="389:5" pos:end="389:43"><expr pos:start="389:5" pos:end="389:42"><call pos:start="389:5" pos:end="389:42"><name pos:start="389:5" pos:end="389:8">_FDT</name><argument_list pos:start="389:9" pos:end="389:42">(<argument pos:start="389:10" pos:end="389:41"><expr pos:start="389:10" pos:end="389:41"><operator pos:start="389:10" pos:end="389:10">(</operator><call pos:start="389:11" pos:end="389:40"><name pos:start="389:11" pos:end="389:24">fdt_begin_node</name><argument_list pos:start="389:25" pos:end="389:40">(<argument pos:start="389:26" pos:end="389:28"><expr pos:start="389:26" pos:end="389:28"><name pos:start="389:26" pos:end="389:28">fdt</name></expr></argument>, <argument pos:start="389:31" pos:end="389:39"><expr pos:start="389:31" pos:end="389:39"><literal type="string" pos:start="389:31" pos:end="389:39">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="389:41" pos:end="389:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="393:5" pos:end="393:63"><expr pos:start="393:5" pos:end="393:62"><call pos:start="393:5" pos:end="393:62"><name pos:start="393:5" pos:end="393:8">_FDT</name><argument_list pos:start="393:9" pos:end="393:62">(<argument pos:start="393:10" pos:end="393:61"><expr pos:start="393:10" pos:end="393:61"><operator pos:start="393:10" pos:end="393:10">(</operator><call pos:start="393:11" pos:end="393:60"><name pos:start="393:11" pos:end="393:29">fdt_property_string</name><argument_list pos:start="393:30" pos:end="393:60">(<argument pos:start="393:31" pos:end="393:33"><expr pos:start="393:31" pos:end="393:33"><name pos:start="393:31" pos:end="393:33">fdt</name></expr></argument>, <argument pos:start="393:36" pos:end="393:48"><expr pos:start="393:36" pos:end="393:48"><literal type="string" pos:start="393:36" pos:end="393:48">"device_type"</literal></expr></argument>, <argument pos:start="393:51" pos:end="393:59"><expr pos:start="393:51" pos:end="393:59"><literal type="string" pos:start="393:51" pos:end="393:59">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="393:61" pos:end="393:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:66"><expr pos:start="395:5" pos:end="395:65"><call pos:start="395:5" pos:end="395:65"><name pos:start="395:5" pos:end="395:8">_FDT</name><argument_list pos:start="395:9" pos:end="395:65">(<argument pos:start="395:10" pos:end="395:64"><expr pos:start="395:10" pos:end="395:64"><operator pos:start="395:10" pos:end="395:10">(</operator><call pos:start="395:11" pos:end="395:63"><name pos:start="395:11" pos:end="395:29">fdt_property_string</name><argument_list pos:start="395:30" pos:end="395:63">(<argument pos:start="395:31" pos:end="395:33"><expr pos:start="395:31" pos:end="395:33"><name pos:start="395:31" pos:end="395:33">fdt</name></expr></argument>, <argument pos:start="395:36" pos:end="395:47"><expr pos:start="395:36" pos:end="395:47"><literal type="string" pos:start="395:36" pos:end="395:47">"compatible"</literal></expr></argument>, <argument pos:start="395:50" pos:end="395:62"><expr pos:start="395:50" pos:end="395:62"><literal type="string" pos:start="395:50" pos:end="395:62">"IBM,vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="395:64" pos:end="395:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:58"><expr pos:start="397:5" pos:end="397:57"><call pos:start="397:5" pos:end="397:57"><name pos:start="397:5" pos:end="397:8">_FDT</name><argument_list pos:start="397:9" pos:end="397:57">(<argument pos:start="397:10" pos:end="397:56"><expr pos:start="397:10" pos:end="397:56"><operator pos:start="397:10" pos:end="397:10">(</operator><call pos:start="397:11" pos:end="397:55"><name pos:start="397:11" pos:end="397:27">fdt_property_cell</name><argument_list pos:start="397:28" pos:end="397:55">(<argument pos:start="397:29" pos:end="397:31"><expr pos:start="397:29" pos:end="397:31"><name pos:start="397:29" pos:end="397:31">fdt</name></expr></argument>, <argument pos:start="397:34" pos:end="397:49"><expr pos:start="397:34" pos:end="397:49"><literal type="string" pos:start="397:34" pos:end="397:49">"#address-cells"</literal></expr></argument>, <argument pos:start="397:52" pos:end="397:54"><expr pos:start="397:52" pos:end="397:54"><literal type="number" pos:start="397:52" pos:end="397:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="397:56" pos:end="397:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:55"><expr pos:start="399:5" pos:end="399:54"><call pos:start="399:5" pos:end="399:54"><name pos:start="399:5" pos:end="399:8">_FDT</name><argument_list pos:start="399:9" pos:end="399:54">(<argument pos:start="399:10" pos:end="399:53"><expr pos:start="399:10" pos:end="399:53"><operator pos:start="399:10" pos:end="399:10">(</operator><call pos:start="399:11" pos:end="399:52"><name pos:start="399:11" pos:end="399:27">fdt_property_cell</name><argument_list pos:start="399:28" pos:end="399:52">(<argument pos:start="399:29" pos:end="399:31"><expr pos:start="399:29" pos:end="399:31"><name pos:start="399:29" pos:end="399:31">fdt</name></expr></argument>, <argument pos:start="399:34" pos:end="399:46"><expr pos:start="399:34" pos:end="399:46"><literal type="string" pos:start="399:34" pos:end="399:46">"#size-cells"</literal></expr></argument>, <argument pos:start="399:49" pos:end="399:51"><expr pos:start="399:49" pos:end="399:51"><literal type="number" pos:start="399:49" pos:end="399:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="399:53" pos:end="399:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:60"><expr pos:start="401:5" pos:end="401:59"><call pos:start="401:5" pos:end="401:59"><name pos:start="401:5" pos:end="401:8">_FDT</name><argument_list pos:start="401:9" pos:end="401:59">(<argument pos:start="401:10" pos:end="401:58"><expr pos:start="401:10" pos:end="401:58"><operator pos:start="401:10" pos:end="401:10">(</operator><call pos:start="401:11" pos:end="401:57"><name pos:start="401:11" pos:end="401:27">fdt_property_cell</name><argument_list pos:start="401:28" pos:end="401:57">(<argument pos:start="401:29" pos:end="401:31"><expr pos:start="401:29" pos:end="401:31"><name pos:start="401:29" pos:end="401:31">fdt</name></expr></argument>, <argument pos:start="401:34" pos:end="401:51"><expr pos:start="401:34" pos:end="401:51"><literal type="string" pos:start="401:34" pos:end="401:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="401:54" pos:end="401:56"><expr pos:start="401:54" pos:end="401:56"><literal type="number" pos:start="401:54" pos:end="401:56">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="401:58" pos:end="401:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:63"><expr pos:start="403:5" pos:end="403:62"><call pos:start="403:5" pos:end="403:62"><name pos:start="403:5" pos:end="403:8">_FDT</name><argument_list pos:start="403:9" pos:end="403:62">(<argument pos:start="403:10" pos:end="403:61"><expr pos:start="403:10" pos:end="403:61"><operator pos:start="403:10" pos:end="403:10">(</operator><call pos:start="403:11" pos:end="403:60"><name pos:start="403:11" pos:end="403:22">fdt_property</name><argument_list pos:start="403:23" pos:end="403:60">(<argument pos:start="403:24" pos:end="403:26"><expr pos:start="403:24" pos:end="403:26"><name pos:start="403:24" pos:end="403:26">fdt</name></expr></argument>, <argument pos:start="403:29" pos:end="403:50"><expr pos:start="403:29" pos:end="403:50"><literal type="string" pos:start="403:29" pos:end="403:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="403:53" pos:end="403:56"><expr pos:start="403:53" pos:end="403:56"><name pos:start="403:53" pos:end="403:56">NULL</name></expr></argument>, <argument pos:start="403:59" pos:end="403:59"><expr pos:start="403:59" pos:end="403:59"><literal type="number" pos:start="403:59" pos:end="403:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="403:61" pos:end="403:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="407:5" pos:end="407:30"><expr pos:start="407:5" pos:end="407:29"><call pos:start="407:5" pos:end="407:29"><name pos:start="407:5" pos:end="407:8">_FDT</name><argument_list pos:start="407:9" pos:end="407:29">(<argument pos:start="407:10" pos:end="407:28"><expr pos:start="407:10" pos:end="407:28"><operator pos:start="407:10" pos:end="407:10">(</operator><call pos:start="407:11" pos:end="407:27"><name pos:start="407:11" pos:end="407:22">fdt_end_node</name><argument_list pos:start="407:23" pos:end="407:27">(<argument pos:start="407:24" pos:end="407:26"><expr pos:start="407:24" pos:end="407:26"><name pos:start="407:24" pos:end="407:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="407:28" pos:end="407:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="411:5" pos:end="411:30"><expr pos:start="411:5" pos:end="411:29"><call pos:start="411:5" pos:end="411:29"><name pos:start="411:5" pos:end="411:8">_FDT</name><argument_list pos:start="411:9" pos:end="411:29">(<argument pos:start="411:10" pos:end="411:28"><expr pos:start="411:10" pos:end="411:28"><operator pos:start="411:10" pos:end="411:10">(</operator><call pos:start="411:11" pos:end="411:27"><name pos:start="411:11" pos:end="411:22">fdt_end_node</name><argument_list pos:start="411:23" pos:end="411:27">(<argument pos:start="411:24" pos:end="411:26"><expr pos:start="411:24" pos:end="411:26"><name pos:start="411:24" pos:end="411:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="411:28" pos:end="411:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="411:32" pos:end="411:52">/* close root node */</comment>

    <expr_stmt pos:start="413:5" pos:end="413:28"><expr pos:start="413:5" pos:end="413:27"><call pos:start="413:5" pos:end="413:27"><name pos:start="413:5" pos:end="413:8">_FDT</name><argument_list pos:start="413:9" pos:end="413:27">(<argument pos:start="413:10" pos:end="413:26"><expr pos:start="413:10" pos:end="413:26"><operator pos:start="413:10" pos:end="413:10">(</operator><call pos:start="413:11" pos:end="413:25"><name pos:start="413:11" pos:end="413:20">fdt_finish</name><argument_list pos:start="413:21" pos:end="413:25">(<argument pos:start="413:22" pos:end="413:24"><expr pos:start="413:22" pos:end="413:24"><name pos:start="413:22" pos:end="413:24">fdt</name></expr></argument>)</argument_list></call><operator pos:start="413:26" pos:end="413:26">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="417:5" pos:end="417:15">return <expr pos:start="417:12" pos:end="417:14"><name pos:start="417:12" pos:end="417:14">fdt</name></expr>;</return>

</block_content>}</block></function>
</unit>
