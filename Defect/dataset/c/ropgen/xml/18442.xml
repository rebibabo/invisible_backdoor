<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18442.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">encode_picture_ls</name><parameter_list pos:start="1:29" pos:end="1:97">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:60">unsigned</name> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">buf</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:84"><decl pos:start="1:73" pos:end="1:84"><type pos:start="1:73" pos:end="1:84"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:84">buf_size</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:96"><decl pos:start="1:87" pos:end="1:96"><type pos:start="1:87" pos:end="1:96"><name pos:start="1:87" pos:end="1:90">void</name> <modifier pos:start="1:92" pos:end="1:92">*</modifier></type><name pos:start="1:93" pos:end="1:96">data</name></decl></parameter>)</parameter_list><block pos:start="1:98" pos:end="271:1">{<block_content pos:start="3:5" pos:end="269:36">

    <decl_stmt pos:start="3:5" pos:end="3:47"><decl pos:start="3:5" pos:end="3:46"><type pos:start="3:5" pos:end="3:25"><name pos:start="3:5" pos:end="3:17">JpeglsContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier> <specifier pos:start="3:21" pos:end="3:25">const</specifier></type> <name pos:start="3:27" pos:end="3:27">s</name> <init pos:start="3:29" pos:end="3:46">= <expr pos:start="3:31" pos:end="3:46"><name pos:start="3:31" pos:end="3:46"><name pos:start="3:31" pos:end="3:35">avctx</name><operator pos:start="3:36" pos:end="3:37">-&gt;</operator><name pos:start="3:38" pos:end="3:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">pict</name> <init pos:start="5:19" pos:end="5:24">= <expr pos:start="5:21" pos:end="5:24"><name pos:start="5:21" pos:end="5:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier> <specifier pos:start="7:15" pos:end="7:19">const</specifier></type> <name pos:start="7:21" pos:end="7:21">p</name><init pos:start="7:22" pos:end="7:44">= <expr pos:start="7:24" pos:end="7:44"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:31">AVFrame</name><operator pos:start="7:32" pos:end="7:32">*</operator><operator pos:start="7:33" pos:end="7:33">)</operator><operator pos:start="7:34" pos:end="7:34">&amp;</operator><name pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:35">s</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:44">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">near</name> <init pos:start="9:20" pos:end="9:45">= <expr pos:start="9:22" pos:end="9:45"><name pos:start="9:22" pos:end="9:45"><name pos:start="9:22" pos:end="9:26">avctx</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:45">prediction_method</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">PutBitContext</name></type> <name pos:start="11:19" pos:end="11:20">pb</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:23" pos:end="11:25">pb2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">buf2</name></decl>, <decl pos:start="15:20" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:24">zero</name></decl>, <decl pos:start="15:27" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:27" pos:end="15:27">*</modifier></type><name pos:start="15:28" pos:end="15:30">cur</name></decl>, <decl pos:start="15:33" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:33" pos:end="15:33">*</modifier></type><name pos:start="15:34" pos:end="15:37">last</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">JLSState</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:19">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:15">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">comps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:8">buf2</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:20">av_malloc</name><argument_list pos:start="25:21" pos:end="25:30">(<argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:29">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><call pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:17">init_put_bits</name><argument_list pos:start="29:18" pos:end="29:37">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:21">pb</name></expr></argument>, <argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">buf</name></expr></argument>, <argument pos:start="29:29" pos:end="29:36"><expr pos:start="29:29" pos:end="29:36"><name pos:start="29:29" pos:end="29:36">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><call pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:17">init_put_bits</name><argument_list pos:start="31:18" pos:end="31:39">(<argument pos:start="31:19" pos:end="31:22"><expr pos:start="31:19" pos:end="31:22"><operator pos:start="31:19" pos:end="31:19">&amp;</operator><name pos:start="31:20" pos:end="31:22">pb2</name></expr></argument>, <argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><name pos:start="31:25" pos:end="31:28">buf2</name></expr></argument>, <argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:15"><expr pos:start="35:5" pos:end="35:14"><operator pos:start="35:5" pos:end="35:5">*</operator><name pos:start="35:6" pos:end="35:6">p</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <operator pos:start="35:10" pos:end="35:10">*</operator><name pos:start="35:11" pos:end="35:14">pict</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">p</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">pict_type</name></name><operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:27">FF_I_TYPE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">p</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">key_frame</name></name><operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:18"><if pos:start="43:5" pos:end="45:18">if<condition pos:start="43:7" pos:end="43:75">(<expr pos:start="43:8" pos:end="43:74"><name pos:start="43:8" pos:end="43:21"><name pos:start="43:8" pos:end="43:12">avctx</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:21">pix_fmt</name></name> <operator pos:start="43:23" pos:end="43:24">==</operator> <name pos:start="43:26" pos:end="43:38">PIX_FMT_GRAY8</name> <operator pos:start="43:40" pos:end="43:41">||</operator> <name pos:start="43:43" pos:end="43:56"><name pos:start="43:43" pos:end="43:47">avctx</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:56">pix_fmt</name></name> <operator pos:start="43:58" pos:end="43:59">==</operator> <name pos:start="43:61" pos:end="43:74">PIX_FMT_GRAY16</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <expr_stmt pos:start="45:9" pos:end="45:18"><expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:13">comps</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="47:5" pos:end="49:18">else<block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:13">comps</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:67">/* write our own JPEG header, can't use mjpeg_picture_header */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:14">put_marker</name><argument_list pos:start="55:15" pos:end="55:24">(<argument pos:start="55:16" pos:end="55:18"><expr pos:start="55:16" pos:end="55:18"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:18">pb</name></expr></argument>, <argument pos:start="55:21" pos:end="55:23"><expr pos:start="55:21" pos:end="55:23"><name pos:start="55:21" pos:end="55:23">SOI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><call pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:14">put_marker</name><argument_list pos:start="57:15" pos:end="57:26">(<argument pos:start="57:16" pos:end="57:18"><expr pos:start="57:16" pos:end="57:18"><operator pos:start="57:16" pos:end="57:16">&amp;</operator><name pos:start="57:17" pos:end="57:18">pb</name></expr></argument>, <argument pos:start="57:21" pos:end="57:25"><expr pos:start="57:21" pos:end="57:25"><name pos:start="57:21" pos:end="57:25">SOF48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:37"><expr pos:start="59:5" pos:end="59:36"><call pos:start="59:5" pos:end="59:36"><name pos:start="59:5" pos:end="59:12">put_bits</name><argument_list pos:start="59:13" pos:end="59:36">(<argument pos:start="59:14" pos:end="59:16"><expr pos:start="59:14" pos:end="59:16"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:16">pb</name></expr></argument>, <argument pos:start="59:19" pos:end="59:20"><expr pos:start="59:19" pos:end="59:20"><literal type="number" pos:start="59:19" pos:end="59:20">16</literal></expr></argument>, <argument pos:start="59:23" pos:end="59:35"><expr pos:start="59:23" pos:end="59:35"><literal type="number" pos:start="59:23" pos:end="59:25">8</literal> <operator pos:start="59:25" pos:end="59:25">+</operator> <name pos:start="59:27" pos:end="59:31">comps</name> <operator pos:start="59:33" pos:end="59:33">*</operator> <literal type="number" pos:start="59:35" pos:end="59:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="59:39" pos:end="59:74">// header size depends on components</comment>

    <expr_stmt pos:start="61:5" pos:end="61:67"><expr pos:start="61:5" pos:end="61:66"><call pos:start="61:5" pos:end="61:66"><name pos:start="61:5" pos:end="61:12">put_bits</name><argument_list pos:start="61:13" pos:end="61:66">(<argument pos:start="61:14" pos:end="61:16"><expr pos:start="61:14" pos:end="61:16"><operator pos:start="61:14" pos:end="61:14">&amp;</operator><name pos:start="61:15" pos:end="61:16">pb</name></expr></argument>,  <argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">8</literal></expr></argument>, <argument pos:start="61:23" pos:end="61:65"><expr pos:start="61:23" pos:end="61:65"><ternary pos:start="61:23" pos:end="61:65"><condition pos:start="61:23" pos:end="61:58"><expr pos:start="61:23" pos:end="61:56"><operator pos:start="61:23" pos:end="61:23">(</operator><name pos:start="61:24" pos:end="61:37"><name pos:start="61:24" pos:end="61:28">avctx</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:37">pix_fmt</name></name> <operator pos:start="61:39" pos:end="61:40">==</operator> <name pos:start="61:42" pos:end="61:55">PIX_FMT_GRAY16</name><operator pos:start="61:56" pos:end="61:56">)</operator></expr> ?</condition><then pos:start="61:60" pos:end="61:61"> <expr pos:start="61:60" pos:end="61:61"><literal type="number" pos:start="61:60" pos:end="61:61">16</literal></expr> </then><else pos:start="61:63" pos:end="61:65">: <expr pos:start="61:65" pos:end="61:65"><literal type="number" pos:start="61:65" pos:end="61:65">8</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:69" pos:end="61:74">// bpp</comment>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:12">put_bits</name><argument_list pos:start="63:13" pos:end="63:36">(<argument pos:start="63:14" pos:end="63:16"><expr pos:start="63:14" pos:end="63:16"><operator pos:start="63:14" pos:end="63:14">&amp;</operator><name pos:start="63:15" pos:end="63:16">pb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:20"><expr pos:start="63:19" pos:end="63:20"><literal type="number" pos:start="63:19" pos:end="63:20">16</literal></expr></argument>, <argument pos:start="63:23" pos:end="63:35"><expr pos:start="63:23" pos:end="63:35"><name pos:start="63:23" pos:end="63:35"><name pos:start="63:23" pos:end="63:27">avctx</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:35">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><call pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:12">put_bits</name><argument_list pos:start="65:13" pos:end="65:35">(<argument pos:start="65:14" pos:end="65:16"><expr pos:start="65:14" pos:end="65:16"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:20"><expr pos:start="65:19" pos:end="65:20"><literal type="number" pos:start="65:19" pos:end="65:20">16</literal></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:27">avctx</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:34">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:29"><expr pos:start="67:5" pos:end="67:28"><call pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:12">put_bits</name><argument_list pos:start="67:13" pos:end="67:28">(<argument pos:start="67:14" pos:end="67:16"><expr pos:start="67:14" pos:end="67:16"><operator pos:start="67:14" pos:end="67:14">&amp;</operator><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument>,  <argument pos:start="67:20" pos:end="67:20"><expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">8</literal></expr></argument>, <argument pos:start="67:23" pos:end="67:27"><expr pos:start="67:23" pos:end="67:27"><name pos:start="67:23" pos:end="67:27">comps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="line" pos:start="67:39" pos:end="67:51">// components</comment>

    <for pos:start="69:5" pos:end="77:5">for<control pos:start="69:8" pos:end="69:31">(<init pos:start="69:9" pos:end="69:14"><expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:9">i</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <literal type="number" pos:start="69:13" pos:end="69:13">1</literal></expr>;</init> <condition pos:start="69:16" pos:end="69:26"><expr pos:start="69:16" pos:end="69:25"><name pos:start="69:16" pos:end="69:16">i</name> <operator pos:start="69:18" pos:end="69:19">&lt;=</operator> <name pos:start="69:21" pos:end="69:25">comps</name></expr>;</condition> <incr pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:28">i</name><operator pos:start="69:29" pos:end="69:30">++</operator></expr></incr>)</control> <block pos:start="69:33" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:29">

        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><call pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:16">put_bits</name><argument_list pos:start="71:17" pos:end="71:28">(<argument pos:start="71:18" pos:end="71:20"><expr pos:start="71:18" pos:end="71:20"><operator pos:start="71:18" pos:end="71:18">&amp;</operator><name pos:start="71:19" pos:end="71:20">pb</name></expr></argument>,  <argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><literal type="number" pos:start="71:24" pos:end="71:24">8</literal></expr></argument>, <argument pos:start="71:27" pos:end="71:27"><expr pos:start="71:27" pos:end="71:27"><name pos:start="71:27" pos:end="71:27">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="71:34" pos:end="71:48">// component ID</comment>

        <expr_stmt pos:start="73:9" pos:end="73:32"><expr pos:start="73:9" pos:end="73:31"><call pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:16">put_bits</name><argument_list pos:start="73:17" pos:end="73:31">(<argument pos:start="73:18" pos:end="73:20"><expr pos:start="73:18" pos:end="73:20"><operator pos:start="73:18" pos:end="73:18">&amp;</operator><name pos:start="73:19" pos:end="73:20">pb</name></expr></argument>,  <argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">8</literal></expr></argument>, <argument pos:start="73:27" pos:end="73:30"><expr pos:start="73:27" pos:end="73:30"><literal type="number" pos:start="73:27" pos:end="73:30">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="73:34" pos:end="73:53">// subsampling: none</comment>

        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><call pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:16">put_bits</name><argument_list pos:start="75:17" pos:end="75:28">(<argument pos:start="75:18" pos:end="75:20"><expr pos:start="75:18" pos:end="75:20"><operator pos:start="75:18" pos:end="75:18">&amp;</operator><name pos:start="75:19" pos:end="75:20">pb</name></expr></argument>,  <argument pos:start="75:24" pos:end="75:24"><expr pos:start="75:24" pos:end="75:24"><literal type="number" pos:start="75:24" pos:end="75:24">8</literal></expr></argument>, <argument pos:start="75:27" pos:end="75:27"><expr pos:start="75:27" pos:end="75:27"><literal type="number" pos:start="75:27" pos:end="75:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="75:34" pos:end="75:60">// Tiq, used by JPEG-LS ext</comment>

    </block_content>}</block></for>



    <expr_stmt pos:start="81:5" pos:end="81:25"><expr pos:start="81:5" pos:end="81:24"><call pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:14">put_marker</name><argument_list pos:start="81:15" pos:end="81:24">(<argument pos:start="81:16" pos:end="81:18"><expr pos:start="81:16" pos:end="81:18"><operator pos:start="81:16" pos:end="81:16">&amp;</operator><name pos:start="81:17" pos:end="81:18">pb</name></expr></argument>, <argument pos:start="81:21" pos:end="81:23"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">SOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:37"><expr pos:start="83:5" pos:end="83:36"><call pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:12">put_bits</name><argument_list pos:start="83:13" pos:end="83:36">(<argument pos:start="83:14" pos:end="83:16"><expr pos:start="83:14" pos:end="83:16"><operator pos:start="83:14" pos:end="83:14">&amp;</operator><name pos:start="83:15" pos:end="83:16">pb</name></expr></argument>, <argument pos:start="83:19" pos:end="83:20"><expr pos:start="83:19" pos:end="83:20"><literal type="number" pos:start="83:19" pos:end="83:20">16</literal></expr></argument>, <argument pos:start="83:23" pos:end="83:35"><expr pos:start="83:23" pos:end="83:35"><literal type="number" pos:start="83:23" pos:end="83:25">6</literal> <operator pos:start="83:25" pos:end="83:25">+</operator> <name pos:start="83:27" pos:end="83:31">comps</name> <operator pos:start="83:33" pos:end="83:33">*</operator> <literal type="number" pos:start="83:35" pos:end="83:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><call pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:12">put_bits</name><argument_list pos:start="85:13" pos:end="85:28">(<argument pos:start="85:14" pos:end="85:16"><expr pos:start="85:14" pos:end="85:16"><operator pos:start="85:14" pos:end="85:14">&amp;</operator><name pos:start="85:15" pos:end="85:16">pb</name></expr></argument>,  <argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">8</literal></expr></argument>, <argument pos:start="85:23" pos:end="85:27"><expr pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:27">comps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="87:5" pos:end="93:5">for<control pos:start="87:8" pos:end="87:31">(<init pos:start="87:9" pos:end="87:14"><expr pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:9">i</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">1</literal></expr>;</init> <condition pos:start="87:16" pos:end="87:26"><expr pos:start="87:16" pos:end="87:25"><name pos:start="87:16" pos:end="87:16">i</name> <operator pos:start="87:18" pos:end="87:19">&lt;=</operator> <name pos:start="87:21" pos:end="87:25">comps</name></expr>;</condition> <incr pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:28">i</name><operator pos:start="87:29" pos:end="87:30">++</operator></expr></incr>)</control> <block pos:start="87:33" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:29">

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:16">put_bits</name><argument_list pos:start="89:17" pos:end="89:28">(<argument pos:start="89:18" pos:end="89:20"><expr pos:start="89:18" pos:end="89:20"><operator pos:start="89:18" pos:end="89:18">&amp;</operator><name pos:start="89:19" pos:end="89:20">pb</name></expr></argument>,  <argument pos:start="89:24" pos:end="89:24"><expr pos:start="89:24" pos:end="89:24"><literal type="number" pos:start="89:24" pos:end="89:24">8</literal></expr></argument>, <argument pos:start="89:27" pos:end="89:27"><expr pos:start="89:27" pos:end="89:27"><name pos:start="89:27" pos:end="89:27">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="89:32" pos:end="89:46">// component ID</comment>

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><call pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:16">put_bits</name><argument_list pos:start="91:17" pos:end="91:28">(<argument pos:start="91:18" pos:end="91:20"><expr pos:start="91:18" pos:end="91:20"><operator pos:start="91:18" pos:end="91:18">&amp;</operator><name pos:start="91:19" pos:end="91:20">pb</name></expr></argument>,  <argument pos:start="91:24" pos:end="91:24"><expr pos:start="91:24" pos:end="91:24"><literal type="number" pos:start="91:24" pos:end="91:24">8</literal></expr></argument>, <argument pos:start="91:27" pos:end="91:27"><expr pos:start="91:27" pos:end="91:27"><literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="91:32" pos:end="91:53">// mapping index: none</comment>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="95:28"><expr pos:start="95:5" pos:end="95:27"><call pos:start="95:5" pos:end="95:27"><name pos:start="95:5" pos:end="95:12">put_bits</name><argument_list pos:start="95:13" pos:end="95:27">(<argument pos:start="95:14" pos:end="95:16"><expr pos:start="95:14" pos:end="95:16"><operator pos:start="95:14" pos:end="95:14">&amp;</operator><name pos:start="95:15" pos:end="95:16">pb</name></expr></argument>,  <argument pos:start="95:20" pos:end="95:20"><expr pos:start="95:20" pos:end="95:20"><literal type="number" pos:start="95:20" pos:end="95:20">8</literal></expr></argument>, <argument pos:start="95:23" pos:end="95:26"><expr pos:start="95:23" pos:end="95:26"><name pos:start="95:23" pos:end="95:26">near</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:43"><expr pos:start="97:5" pos:end="97:42"><call pos:start="97:5" pos:end="97:42"><name pos:start="97:5" pos:end="97:12">put_bits</name><argument_list pos:start="97:13" pos:end="97:42">(<argument pos:start="97:14" pos:end="97:16"><expr pos:start="97:14" pos:end="97:16"><operator pos:start="97:14" pos:end="97:14">&amp;</operator><name pos:start="97:15" pos:end="97:16">pb</name></expr></argument>,  <argument pos:start="97:20" pos:end="97:20"><expr pos:start="97:20" pos:end="97:20"><literal type="number" pos:start="97:20" pos:end="97:20">8</literal></expr></argument>, <argument pos:start="97:23" pos:end="97:41"><expr pos:start="97:23" pos:end="97:41"><ternary pos:start="97:23" pos:end="97:41"><condition pos:start="97:23" pos:end="97:35"><expr pos:start="97:23" pos:end="97:33"><operator pos:start="97:23" pos:end="97:23">(</operator><name pos:start="97:24" pos:end="97:28">comps</name> <operator pos:start="97:30" pos:end="97:30">&gt;</operator> <literal type="number" pos:start="97:32" pos:end="97:32">1</literal><operator pos:start="97:33" pos:end="97:33">)</operator></expr> ?</condition><then pos:start="97:37" pos:end="97:37"> <expr pos:start="97:37" pos:end="97:37"><literal type="number" pos:start="97:37" pos:end="97:37">1</literal></expr> </then><else pos:start="97:39" pos:end="97:41">: <expr pos:start="97:41" pos:end="97:41"><literal type="number" pos:start="97:41" pos:end="97:41">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="97:45" pos:end="97:80">// interleaving: 0 - plane, 1 - line</comment>

    <expr_stmt pos:start="99:5" pos:end="99:25"><expr pos:start="99:5" pos:end="99:24"><call pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:12">put_bits</name><argument_list pos:start="99:13" pos:end="99:24">(<argument pos:start="99:14" pos:end="99:16"><expr pos:start="99:14" pos:end="99:16"><operator pos:start="99:14" pos:end="99:14">&amp;</operator><name pos:start="99:15" pos:end="99:16">pb</name></expr></argument>,  <argument pos:start="99:20" pos:end="99:20"><expr pos:start="99:20" pos:end="99:20"><literal type="number" pos:start="99:20" pos:end="99:20">8</literal></expr></argument>, <argument pos:start="99:23" pos:end="99:23"><expr pos:start="99:23" pos:end="99:23"><literal type="number" pos:start="99:23" pos:end="99:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="99:27" pos:end="99:50">// point transform: none</comment>



    <expr_stmt pos:start="103:5" pos:end="103:41"><expr pos:start="103:5" pos:end="103:40"><name pos:start="103:5" pos:end="103:9">state</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <call pos:start="103:13" pos:end="103:40"><name pos:start="103:13" pos:end="103:22">av_mallocz</name><argument_list pos:start="103:23" pos:end="103:40">(<argument pos:start="103:24" pos:end="103:39"><expr pos:start="103:24" pos:end="103:39"><sizeof pos:start="103:24" pos:end="103:39">sizeof<argument_list pos:start="103:30" pos:end="103:39">(<argument pos:start="103:31" pos:end="103:38"><expr pos:start="103:31" pos:end="103:38"><name pos:start="103:31" pos:end="103:38">JLSState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="105:5" pos:end="105:55">/* initialize JPEG-LS state from JPEG parameters */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:23"><expr pos:start="107:5" pos:end="107:22"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:9">state</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:15">near</name></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:22">near</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:61"><expr pos:start="109:5" pos:end="109:60"><name pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:9">state</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:14">bpp</name></name> <operator pos:start="109:16" pos:end="109:16">=</operator> <ternary pos:start="109:18" pos:end="109:60"><condition pos:start="109:18" pos:end="109:53"><expr pos:start="109:18" pos:end="109:51"><operator pos:start="109:18" pos:end="109:18">(</operator><name pos:start="109:19" pos:end="109:32"><name pos:start="109:19" pos:end="109:23">avctx</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:32">pix_fmt</name></name> <operator pos:start="109:34" pos:end="109:35">==</operator> <name pos:start="109:37" pos:end="109:50">PIX_FMT_GRAY16</name><operator pos:start="109:51" pos:end="109:51">)</operator></expr> ?</condition><then pos:start="109:55" pos:end="109:56"> <expr pos:start="109:55" pos:end="109:56"><literal type="number" pos:start="109:55" pos:end="109:56">16</literal></expr> </then><else pos:start="109:58" pos:end="109:60">: <expr pos:start="109:60" pos:end="109:60"><literal type="number" pos:start="109:60" pos:end="109:60">8</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:41"><expr pos:start="111:5" pos:end="111:40"><call pos:start="111:5" pos:end="111:40"><name pos:start="111:5" pos:end="111:30">reset_ls_coding_parameters</name><argument_list pos:start="111:31" pos:end="111:40">(<argument pos:start="111:32" pos:end="111:36"><expr pos:start="111:32" pos:end="111:36"><name pos:start="111:32" pos:end="111:36">state</name></expr></argument>, <argument pos:start="111:39" pos:end="111:39"><expr pos:start="111:39" pos:end="111:39"><literal type="number" pos:start="111:39" pos:end="111:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:25"><expr pos:start="113:5" pos:end="113:24"><call pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:17">ls_init_state</name><argument_list pos:start="113:18" pos:end="113:24">(<argument pos:start="113:19" pos:end="113:23"><expr pos:start="113:19" pos:end="113:23"><name pos:start="113:19" pos:end="113:23">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:29"><expr pos:start="117:5" pos:end="117:28"><call pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:16">ls_store_lse</name><argument_list pos:start="117:17" pos:end="117:28">(<argument pos:start="117:18" pos:end="117:22"><expr pos:start="117:18" pos:end="117:22"><name pos:start="117:18" pos:end="117:22">state</name></expr></argument>, <argument pos:start="117:25" pos:end="117:27"><expr pos:start="117:25" pos:end="117:27"><operator pos:start="117:25" pos:end="117:25">&amp;</operator><name pos:start="117:26" pos:end="117:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:38"><expr pos:start="121:5" pos:end="121:37"><name pos:start="121:5" pos:end="121:8">zero</name> <operator pos:start="121:10" pos:end="121:10">=</operator> <call pos:start="121:12" pos:end="121:37"><name pos:start="121:12" pos:end="121:21">av_mallocz</name><argument_list pos:start="121:22" pos:end="121:37">(<argument pos:start="121:23" pos:end="121:36"><expr pos:start="121:23" pos:end="121:36"><name pos:start="121:23" pos:end="121:36"><name pos:start="121:23" pos:end="121:23">p</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:33">linesize</name><index pos:start="121:34" pos:end="121:36">[<expr pos:start="121:35" pos:end="121:35"><literal type="number" pos:start="121:35" pos:end="121:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:16"><expr pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:8">last</name> <operator pos:start="123:10" pos:end="123:10">=</operator> <name pos:start="123:12" pos:end="123:15">zero</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:21"><expr pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:7">cur</name> <operator pos:start="125:9" pos:end="125:9">=</operator> <name pos:start="125:11" pos:end="125:20"><name pos:start="125:11" pos:end="125:11">p</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:17">data</name><index pos:start="125:18" pos:end="125:20">[<expr pos:start="125:19" pos:end="125:19"><literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="215:5"><if pos:start="127:5" pos:end="145:5">if<condition pos:start="127:7" pos:end="127:39">(<expr pos:start="127:8" pos:end="127:38"><name pos:start="127:8" pos:end="127:21"><name pos:start="127:8" pos:end="127:12">avctx</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:21">pix_fmt</name></name> <operator pos:start="127:23" pos:end="127:24">==</operator> <name pos:start="127:26" pos:end="127:38">PIX_FMT_GRAY8</name></expr>)</condition><block pos:start="127:40" pos:end="145:5">{<block_content pos:start="129:9" pos:end="143:9">

        <decl_stmt pos:start="129:9" pos:end="129:18"><decl pos:start="129:9" pos:end="129:17"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:13">t</name> <init pos:start="129:15" pos:end="129:17">= <expr pos:start="129:17" pos:end="129:17"><literal type="number" pos:start="129:17" pos:end="129:17">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="133:9" pos:end="143:9">for<control pos:start="133:12" pos:end="133:42">(<init pos:start="133:13" pos:end="133:18"><expr pos:start="133:13" pos:end="133:17"><name pos:start="133:13" pos:end="133:13">i</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <literal type="number" pos:start="133:17" pos:end="133:17">0</literal></expr>;</init> <condition pos:start="133:20" pos:end="133:37"><expr pos:start="133:20" pos:end="133:36"><name pos:start="133:20" pos:end="133:20">i</name> <operator pos:start="133:22" pos:end="133:22">&lt;</operator> <name pos:start="133:24" pos:end="133:36"><name pos:start="133:24" pos:end="133:28">avctx</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:36">height</name></name></expr>;</condition> <incr pos:start="133:39" pos:end="133:41"><expr pos:start="133:39" pos:end="133:41"><name pos:start="133:39" pos:end="133:39">i</name><operator pos:start="133:40" pos:end="133:41">++</operator></expr></incr>)</control> <block pos:start="133:44" pos:end="143:9">{<block_content pos:start="135:13" pos:end="141:34">

            <expr_stmt pos:start="135:13" pos:end="135:78"><expr pos:start="135:13" pos:end="135:77"><call pos:start="135:13" pos:end="135:77"><name pos:start="135:13" pos:end="135:26">ls_encode_line</name><argument_list pos:start="135:27" pos:end="135:77">(<argument pos:start="135:28" pos:end="135:32"><expr pos:start="135:28" pos:end="135:32"><name pos:start="135:28" pos:end="135:32">state</name></expr></argument>, <argument pos:start="135:35" pos:end="135:38"><expr pos:start="135:35" pos:end="135:38"><operator pos:start="135:35" pos:end="135:35">&amp;</operator><name pos:start="135:36" pos:end="135:38">pb2</name></expr></argument>, <argument pos:start="135:41" pos:end="135:44"><expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">last</name></expr></argument>, <argument pos:start="135:47" pos:end="135:49"><expr pos:start="135:47" pos:end="135:49"><name pos:start="135:47" pos:end="135:49">cur</name></expr></argument>, <argument pos:start="135:52" pos:end="135:52"><expr pos:start="135:52" pos:end="135:52"><name pos:start="135:52" pos:end="135:52">t</name></expr></argument>, <argument pos:start="135:55" pos:end="135:66"><expr pos:start="135:55" pos:end="135:66"><name pos:start="135:55" pos:end="135:66"><name pos:start="135:55" pos:end="135:59">avctx</name><operator pos:start="135:60" pos:end="135:61">-&gt;</operator><name pos:start="135:62" pos:end="135:66">width</name></name></expr></argument>, <argument pos:start="135:69" pos:end="135:69"><expr pos:start="135:69" pos:end="135:69"><literal type="number" pos:start="135:69" pos:end="135:69">1</literal></expr></argument>, <argument pos:start="135:72" pos:end="135:72"><expr pos:start="135:72" pos:end="135:72"><literal type="number" pos:start="135:72" pos:end="135:72">0</literal></expr></argument>,  <argument pos:start="135:76" pos:end="135:76"><expr pos:start="135:76" pos:end="135:76"><literal type="number" pos:start="135:76" pos:end="135:76">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:24"><expr pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:13">t</name> <operator pos:start="137:15" pos:end="137:15">=</operator> <name pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:20">last</name><index pos:start="137:21" pos:end="137:23">[<expr pos:start="137:22" pos:end="137:22"><literal type="number" pos:start="137:22" pos:end="137:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:23"><expr pos:start="139:13" pos:end="139:22"><name pos:start="139:13" pos:end="139:16">last</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <name pos:start="139:20" pos:end="139:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:34"><expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:15">cur</name> <operator pos:start="141:17" pos:end="141:18">+=</operator> <name pos:start="141:20" pos:end="141:33"><name pos:start="141:20" pos:end="141:20">p</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:30">linesize</name><index pos:start="141:31" pos:end="141:33">[<expr pos:start="141:32" pos:end="141:32"><literal type="number" pos:start="141:32" pos:end="141:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if><if type="elseif" pos:start="145:6" pos:end="163:5">else if<condition pos:start="145:13" pos:end="145:46">(<expr pos:start="145:14" pos:end="145:45"><name pos:start="145:14" pos:end="145:27"><name pos:start="145:14" pos:end="145:18">avctx</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:27">pix_fmt</name></name> <operator pos:start="145:29" pos:end="145:30">==</operator> <name pos:start="145:32" pos:end="145:45">PIX_FMT_GRAY16</name></expr>)</condition><block pos:start="145:47" pos:end="163:5">{<block_content pos:start="147:9" pos:end="161:9">

        <decl_stmt pos:start="147:9" pos:end="147:18"><decl pos:start="147:9" pos:end="147:17"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:13">t</name> <init pos:start="147:15" pos:end="147:17">= <expr pos:start="147:17" pos:end="147:17"><literal type="number" pos:start="147:17" pos:end="147:17">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="151:9" pos:end="161:9">for<control pos:start="151:12" pos:end="151:42">(<init pos:start="151:13" pos:end="151:18"><expr pos:start="151:13" pos:end="151:17"><name pos:start="151:13" pos:end="151:13">i</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <literal type="number" pos:start="151:17" pos:end="151:17">0</literal></expr>;</init> <condition pos:start="151:20" pos:end="151:37"><expr pos:start="151:20" pos:end="151:36"><name pos:start="151:20" pos:end="151:20">i</name> <operator pos:start="151:22" pos:end="151:22">&lt;</operator> <name pos:start="151:24" pos:end="151:36"><name pos:start="151:24" pos:end="151:28">avctx</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:36">height</name></name></expr>;</condition> <incr pos:start="151:39" pos:end="151:41"><expr pos:start="151:39" pos:end="151:41"><name pos:start="151:39" pos:end="151:39">i</name><operator pos:start="151:40" pos:end="151:41">++</operator></expr></incr>)</control> <block pos:start="151:44" pos:end="161:9">{<block_content pos:start="153:13" pos:end="159:34">

            <expr_stmt pos:start="153:13" pos:end="153:78"><expr pos:start="153:13" pos:end="153:77"><call pos:start="153:13" pos:end="153:77"><name pos:start="153:13" pos:end="153:26">ls_encode_line</name><argument_list pos:start="153:27" pos:end="153:77">(<argument pos:start="153:28" pos:end="153:32"><expr pos:start="153:28" pos:end="153:32"><name pos:start="153:28" pos:end="153:32">state</name></expr></argument>, <argument pos:start="153:35" pos:end="153:38"><expr pos:start="153:35" pos:end="153:38"><operator pos:start="153:35" pos:end="153:35">&amp;</operator><name pos:start="153:36" pos:end="153:38">pb2</name></expr></argument>, <argument pos:start="153:41" pos:end="153:44"><expr pos:start="153:41" pos:end="153:44"><name pos:start="153:41" pos:end="153:44">last</name></expr></argument>, <argument pos:start="153:47" pos:end="153:49"><expr pos:start="153:47" pos:end="153:49"><name pos:start="153:47" pos:end="153:49">cur</name></expr></argument>, <argument pos:start="153:52" pos:end="153:52"><expr pos:start="153:52" pos:end="153:52"><name pos:start="153:52" pos:end="153:52">t</name></expr></argument>, <argument pos:start="153:55" pos:end="153:66"><expr pos:start="153:55" pos:end="153:66"><name pos:start="153:55" pos:end="153:66"><name pos:start="153:55" pos:end="153:59">avctx</name><operator pos:start="153:60" pos:end="153:61">-&gt;</operator><name pos:start="153:62" pos:end="153:66">width</name></name></expr></argument>, <argument pos:start="153:69" pos:end="153:69"><expr pos:start="153:69" pos:end="153:69"><literal type="number" pos:start="153:69" pos:end="153:69">1</literal></expr></argument>, <argument pos:start="153:72" pos:end="153:72"><expr pos:start="153:72" pos:end="153:72"><literal type="number" pos:start="153:72" pos:end="153:72">0</literal></expr></argument>, <argument pos:start="153:75" pos:end="153:76"><expr pos:start="153:75" pos:end="153:76"><literal type="number" pos:start="153:75" pos:end="153:76">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:35"><expr pos:start="155:13" pos:end="155:34"><name pos:start="155:13" pos:end="155:13">t</name> <operator pos:start="155:15" pos:end="155:15">=</operator> <operator pos:start="155:17" pos:end="155:17">*</operator><operator pos:start="155:18" pos:end="155:18">(</operator><operator pos:start="155:19" pos:end="155:19">(</operator><name pos:start="155:20" pos:end="155:27">uint16_t</name><operator pos:start="155:28" pos:end="155:28">*</operator><operator pos:start="155:29" pos:end="155:29">)</operator><name pos:start="155:30" pos:end="155:33">last</name><operator pos:start="155:34" pos:end="155:34">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:23"><expr pos:start="157:13" pos:end="157:22"><name pos:start="157:13" pos:end="157:16">last</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:34"><expr pos:start="159:13" pos:end="159:33"><name pos:start="159:13" pos:end="159:15">cur</name> <operator pos:start="159:17" pos:end="159:18">+=</operator> <name pos:start="159:20" pos:end="159:33"><name pos:start="159:20" pos:end="159:20">p</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:30">linesize</name><index pos:start="159:31" pos:end="159:33">[<expr pos:start="159:32" pos:end="159:32"><literal type="number" pos:start="159:32" pos:end="159:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if><if type="elseif" pos:start="163:6" pos:end="189:5">else if<condition pos:start="163:13" pos:end="163:45">(<expr pos:start="163:14" pos:end="163:44"><name pos:start="163:14" pos:end="163:27"><name pos:start="163:14" pos:end="163:18">avctx</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:27">pix_fmt</name></name> <operator pos:start="163:29" pos:end="163:30">==</operator> <name pos:start="163:32" pos:end="163:44">PIX_FMT_RGB24</name></expr>)</condition><block pos:start="163:46" pos:end="189:5">{<block_content pos:start="165:9" pos:end="187:9">

        <decl_stmt pos:start="165:9" pos:end="165:21"><decl pos:start="165:9" pos:end="165:13"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:13">j</name></decl>, <decl pos:start="165:16" pos:end="165:20"><type ref="prev" pos:start="165:9" pos:end="165:11"/><name pos:start="165:16" pos:end="165:20">width</name></decl>;</decl_stmt>

        <decl_stmt pos:start="167:9" pos:end="167:30"><decl pos:start="167:9" pos:end="167:29"><type pos:start="167:9" pos:end="167:11"><name pos:start="167:9" pos:end="167:11">int</name></type> <name pos:start="167:13" pos:end="167:17"><name pos:start="167:13" pos:end="167:14">Rc</name><index pos:start="167:15" pos:end="167:17">[<expr pos:start="167:16" pos:end="167:16"><literal type="number" pos:start="167:16" pos:end="167:16">3</literal></expr>]</index></name> <init pos:start="167:19" pos:end="167:29">= <expr pos:start="167:21" pos:end="167:29"><block pos:start="167:21" pos:end="167:29">{<expr pos:start="167:22" pos:end="167:22"><literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>, <expr pos:start="167:25" pos:end="167:25"><literal type="number" pos:start="167:25" pos:end="167:25">0</literal></expr>, <expr pos:start="167:28" pos:end="167:28"><literal type="number" pos:start="167:28" pos:end="167:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:33"><expr pos:start="171:9" pos:end="171:32"><name pos:start="171:9" pos:end="171:13">width</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <name pos:start="171:17" pos:end="171:28"><name pos:start="171:17" pos:end="171:21">avctx</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:28">width</name></name> <operator pos:start="171:30" pos:end="171:30">*</operator> <literal type="number" pos:start="171:32" pos:end="171:32">3</literal></expr>;</expr_stmt>

        <for pos:start="173:9" pos:end="187:9">for<control pos:start="173:12" pos:end="173:42">(<init pos:start="173:13" pos:end="173:18"><expr pos:start="173:13" pos:end="173:17"><name pos:start="173:13" pos:end="173:13">i</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <literal type="number" pos:start="173:17" pos:end="173:17">0</literal></expr>;</init> <condition pos:start="173:20" pos:end="173:37"><expr pos:start="173:20" pos:end="173:36"><name pos:start="173:20" pos:end="173:20">i</name> <operator pos:start="173:22" pos:end="173:22">&lt;</operator> <name pos:start="173:24" pos:end="173:36"><name pos:start="173:24" pos:end="173:28">avctx</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:36">height</name></name></expr>;</condition> <incr pos:start="173:39" pos:end="173:41"><expr pos:start="173:39" pos:end="173:41"><name pos:start="173:39" pos:end="173:39">i</name><operator pos:start="173:40" pos:end="173:41">++</operator></expr></incr>)</control> <block pos:start="173:44" pos:end="187:9">{<block_content pos:start="175:13" pos:end="185:42">

            <for pos:start="175:13" pos:end="181:13">for<control pos:start="175:16" pos:end="175:34">(<init pos:start="175:17" pos:end="175:22"><expr pos:start="175:17" pos:end="175:21"><name pos:start="175:17" pos:end="175:17">j</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <literal type="number" pos:start="175:21" pos:end="175:21">0</literal></expr>;</init> <condition pos:start="175:24" pos:end="175:29"><expr pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:24">j</name> <operator pos:start="175:26" pos:end="175:26">&lt;</operator> <literal type="number" pos:start="175:28" pos:end="175:28">3</literal></expr>;</condition> <incr pos:start="175:31" pos:end="175:33"><expr pos:start="175:31" pos:end="175:33"><name pos:start="175:31" pos:end="175:31">j</name><operator pos:start="175:32" pos:end="175:33">++</operator></expr></incr>)</control> <block pos:start="175:36" pos:end="181:13">{<block_content pos:start="177:17" pos:end="179:32">

                <expr_stmt pos:start="177:17" pos:end="177:86"><expr pos:start="177:17" pos:end="177:85"><call pos:start="177:17" pos:end="177:85"><name pos:start="177:17" pos:end="177:30">ls_encode_line</name><argument_list pos:start="177:31" pos:end="177:85">(<argument pos:start="177:32" pos:end="177:36"><expr pos:start="177:32" pos:end="177:36"><name pos:start="177:32" pos:end="177:36">state</name></expr></argument>, <argument pos:start="177:39" pos:end="177:42"><expr pos:start="177:39" pos:end="177:42"><operator pos:start="177:39" pos:end="177:39">&amp;</operator><name pos:start="177:40" pos:end="177:42">pb2</name></expr></argument>, <argument pos:start="177:45" pos:end="177:52"><expr pos:start="177:45" pos:end="177:52"><name pos:start="177:45" pos:end="177:48">last</name> <operator pos:start="177:50" pos:end="177:50">+</operator> <name pos:start="177:52" pos:end="177:52">j</name></expr></argument>, <argument pos:start="177:55" pos:end="177:61"><expr pos:start="177:55" pos:end="177:61"><name pos:start="177:55" pos:end="177:57">cur</name> <operator pos:start="177:59" pos:end="177:59">+</operator> <name pos:start="177:61" pos:end="177:61">j</name></expr></argument>, <argument pos:start="177:64" pos:end="177:68"><expr pos:start="177:64" pos:end="177:68"><name pos:start="177:64" pos:end="177:68"><name pos:start="177:64" pos:end="177:65">Rc</name><index pos:start="177:66" pos:end="177:68">[<expr pos:start="177:67" pos:end="177:67"><name pos:start="177:67" pos:end="177:67">j</name></expr>]</index></name></expr></argument>, <argument pos:start="177:71" pos:end="177:75"><expr pos:start="177:71" pos:end="177:75"><name pos:start="177:71" pos:end="177:75">width</name></expr></argument>, <argument pos:start="177:78" pos:end="177:78"><expr pos:start="177:78" pos:end="177:78"><literal type="number" pos:start="177:78" pos:end="177:78">3</literal></expr></argument>, <argument pos:start="177:81" pos:end="177:81"><expr pos:start="177:81" pos:end="177:81"><name pos:start="177:81" pos:end="177:81">j</name></expr></argument>, <argument pos:start="177:84" pos:end="177:84"><expr pos:start="177:84" pos:end="177:84"><literal type="number" pos:start="177:84" pos:end="177:84">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:32"><expr pos:start="179:17" pos:end="179:31"><name pos:start="179:17" pos:end="179:21"><name pos:start="179:17" pos:end="179:18">Rc</name><index pos:start="179:19" pos:end="179:21">[<expr pos:start="179:20" pos:end="179:20"><name pos:start="179:20" pos:end="179:20">j</name></expr>]</index></name> <operator pos:start="179:23" pos:end="179:23">=</operator> <name pos:start="179:25" pos:end="179:31"><name pos:start="179:25" pos:end="179:28">last</name><index pos:start="179:29" pos:end="179:31">[<expr pos:start="179:30" pos:end="179:30"><name pos:start="179:30" pos:end="179:30">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="183:13" pos:end="183:23"><expr pos:start="183:13" pos:end="183:22"><name pos:start="183:13" pos:end="183:16">last</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <name pos:start="183:20" pos:end="183:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:42"><expr pos:start="185:13" pos:end="185:41"><name pos:start="185:13" pos:end="185:15">cur</name> <operator pos:start="185:17" pos:end="185:18">+=</operator> <name pos:start="185:20" pos:end="185:41"><name pos:start="185:20" pos:end="185:20">s</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:29">picture</name><operator pos:start="185:30" pos:end="185:30">.</operator><name pos:start="185:31" pos:end="185:38">linesize</name><index pos:start="185:39" pos:end="185:41">[<expr pos:start="185:40" pos:end="185:40"><literal type="number" pos:start="185:40" pos:end="185:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if><if type="elseif" pos:start="189:6" pos:end="215:5">else if<condition pos:start="189:13" pos:end="189:45">(<expr pos:start="189:14" pos:end="189:44"><name pos:start="189:14" pos:end="189:27"><name pos:start="189:14" pos:end="189:18">avctx</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:27">pix_fmt</name></name> <operator pos:start="189:29" pos:end="189:30">==</operator> <name pos:start="189:32" pos:end="189:44">PIX_FMT_BGR24</name></expr>)</condition><block pos:start="189:46" pos:end="215:5">{<block_content pos:start="191:9" pos:end="213:9">

        <decl_stmt pos:start="191:9" pos:end="191:21"><decl pos:start="191:9" pos:end="191:13"><type pos:start="191:9" pos:end="191:11"><name pos:start="191:9" pos:end="191:11">int</name></type> <name pos:start="191:13" pos:end="191:13">j</name></decl>, <decl pos:start="191:16" pos:end="191:20"><type ref="prev" pos:start="191:9" pos:end="191:11"/><name pos:start="191:16" pos:end="191:20">width</name></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:30"><decl pos:start="193:9" pos:end="193:29"><type pos:start="193:9" pos:end="193:11"><name pos:start="193:9" pos:end="193:11">int</name></type> <name pos:start="193:13" pos:end="193:17"><name pos:start="193:13" pos:end="193:14">Rc</name><index pos:start="193:15" pos:end="193:17">[<expr pos:start="193:16" pos:end="193:16"><literal type="number" pos:start="193:16" pos:end="193:16">3</literal></expr>]</index></name> <init pos:start="193:19" pos:end="193:29">= <expr pos:start="193:21" pos:end="193:29"><block pos:start="193:21" pos:end="193:29">{<expr pos:start="193:22" pos:end="193:22"><literal type="number" pos:start="193:22" pos:end="193:22">0</literal></expr>, <expr pos:start="193:25" pos:end="193:25"><literal type="number" pos:start="193:25" pos:end="193:25">0</literal></expr>, <expr pos:start="193:28" pos:end="193:28"><literal type="number" pos:start="193:28" pos:end="193:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="197:9" pos:end="197:33"><expr pos:start="197:9" pos:end="197:32"><name pos:start="197:9" pos:end="197:13">width</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <name pos:start="197:17" pos:end="197:28"><name pos:start="197:17" pos:end="197:21">avctx</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:28">width</name></name> <operator pos:start="197:30" pos:end="197:30">*</operator> <literal type="number" pos:start="197:32" pos:end="197:32">3</literal></expr>;</expr_stmt>

        <for pos:start="199:9" pos:end="213:9">for<control pos:start="199:12" pos:end="199:42">(<init pos:start="199:13" pos:end="199:18"><expr pos:start="199:13" pos:end="199:17"><name pos:start="199:13" pos:end="199:13">i</name> <operator pos:start="199:15" pos:end="199:15">=</operator> <literal type="number" pos:start="199:17" pos:end="199:17">0</literal></expr>;</init> <condition pos:start="199:20" pos:end="199:37"><expr pos:start="199:20" pos:end="199:36"><name pos:start="199:20" pos:end="199:20">i</name> <operator pos:start="199:22" pos:end="199:22">&lt;</operator> <name pos:start="199:24" pos:end="199:36"><name pos:start="199:24" pos:end="199:28">avctx</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:36">height</name></name></expr>;</condition> <incr pos:start="199:39" pos:end="199:41"><expr pos:start="199:39" pos:end="199:41"><name pos:start="199:39" pos:end="199:39">i</name><operator pos:start="199:40" pos:end="199:41">++</operator></expr></incr>)</control> <block pos:start="199:44" pos:end="213:9">{<block_content pos:start="201:13" pos:end="211:42">

            <for pos:start="201:13" pos:end="207:13">for<control pos:start="201:16" pos:end="201:35">(<init pos:start="201:17" pos:end="201:22"><expr pos:start="201:17" pos:end="201:21"><name pos:start="201:17" pos:end="201:17">j</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <literal type="number" pos:start="201:21" pos:end="201:21">2</literal></expr>;</init> <condition pos:start="201:24" pos:end="201:30"><expr pos:start="201:24" pos:end="201:29"><name pos:start="201:24" pos:end="201:24">j</name> <operator pos:start="201:26" pos:end="201:27">&gt;=</operator> <literal type="number" pos:start="201:29" pos:end="201:29">0</literal></expr>;</condition> <incr pos:start="201:32" pos:end="201:34"><expr pos:start="201:32" pos:end="201:34"><name pos:start="201:32" pos:end="201:32">j</name><operator pos:start="201:33" pos:end="201:34">--</operator></expr></incr>)</control> <block pos:start="201:37" pos:end="207:13">{<block_content pos:start="203:17" pos:end="205:32">

                <expr_stmt pos:start="203:17" pos:end="203:86"><expr pos:start="203:17" pos:end="203:85"><call pos:start="203:17" pos:end="203:85"><name pos:start="203:17" pos:end="203:30">ls_encode_line</name><argument_list pos:start="203:31" pos:end="203:85">(<argument pos:start="203:32" pos:end="203:36"><expr pos:start="203:32" pos:end="203:36"><name pos:start="203:32" pos:end="203:36">state</name></expr></argument>, <argument pos:start="203:39" pos:end="203:42"><expr pos:start="203:39" pos:end="203:42"><operator pos:start="203:39" pos:end="203:39">&amp;</operator><name pos:start="203:40" pos:end="203:42">pb2</name></expr></argument>, <argument pos:start="203:45" pos:end="203:52"><expr pos:start="203:45" pos:end="203:52"><name pos:start="203:45" pos:end="203:48">last</name> <operator pos:start="203:50" pos:end="203:50">+</operator> <name pos:start="203:52" pos:end="203:52">j</name></expr></argument>, <argument pos:start="203:55" pos:end="203:61"><expr pos:start="203:55" pos:end="203:61"><name pos:start="203:55" pos:end="203:57">cur</name> <operator pos:start="203:59" pos:end="203:59">+</operator> <name pos:start="203:61" pos:end="203:61">j</name></expr></argument>, <argument pos:start="203:64" pos:end="203:68"><expr pos:start="203:64" pos:end="203:68"><name pos:start="203:64" pos:end="203:68"><name pos:start="203:64" pos:end="203:65">Rc</name><index pos:start="203:66" pos:end="203:68">[<expr pos:start="203:67" pos:end="203:67"><name pos:start="203:67" pos:end="203:67">j</name></expr>]</index></name></expr></argument>, <argument pos:start="203:71" pos:end="203:75"><expr pos:start="203:71" pos:end="203:75"><name pos:start="203:71" pos:end="203:75">width</name></expr></argument>, <argument pos:start="203:78" pos:end="203:78"><expr pos:start="203:78" pos:end="203:78"><literal type="number" pos:start="203:78" pos:end="203:78">3</literal></expr></argument>, <argument pos:start="203:81" pos:end="203:81"><expr pos:start="203:81" pos:end="203:81"><name pos:start="203:81" pos:end="203:81">j</name></expr></argument>, <argument pos:start="203:84" pos:end="203:84"><expr pos:start="203:84" pos:end="203:84"><literal type="number" pos:start="203:84" pos:end="203:84">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:32"><expr pos:start="205:17" pos:end="205:31"><name pos:start="205:17" pos:end="205:21"><name pos:start="205:17" pos:end="205:18">Rc</name><index pos:start="205:19" pos:end="205:21">[<expr pos:start="205:20" pos:end="205:20"><name pos:start="205:20" pos:end="205:20">j</name></expr>]</index></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:31"><name pos:start="205:25" pos:end="205:28">last</name><index pos:start="205:29" pos:end="205:31">[<expr pos:start="205:30" pos:end="205:30"><name pos:start="205:30" pos:end="205:30">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="209:13" pos:end="209:23"><expr pos:start="209:13" pos:end="209:22"><name pos:start="209:13" pos:end="209:16">last</name> <operator pos:start="209:18" pos:end="209:18">=</operator> <name pos:start="209:20" pos:end="209:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:42"><expr pos:start="211:13" pos:end="211:41"><name pos:start="211:13" pos:end="211:15">cur</name> <operator pos:start="211:17" pos:end="211:18">+=</operator> <name pos:start="211:20" pos:end="211:41"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:29">picture</name><operator pos:start="211:30" pos:end="211:30">.</operator><name pos:start="211:31" pos:end="211:38">linesize</name><index pos:start="211:39" pos:end="211:41">[<expr pos:start="211:40" pos:end="211:40"><literal type="number" pos:start="211:40" pos:end="211:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:18"><expr pos:start="219:5" pos:end="219:17"><call pos:start="219:5" pos:end="219:17"><name pos:start="219:5" pos:end="219:11">av_free</name><argument_list pos:start="219:12" pos:end="219:17">(<argument pos:start="219:13" pos:end="219:16"><expr pos:start="219:13" pos:end="219:16"><name pos:start="219:13" pos:end="219:16">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:19"><expr pos:start="221:5" pos:end="221:18"><call pos:start="221:5" pos:end="221:18"><name pos:start="221:5" pos:end="221:11">av_free</name><argument_list pos:start="221:12" pos:end="221:18">(<argument pos:start="221:13" pos:end="221:17"><expr pos:start="221:13" pos:end="221:17"><name pos:start="221:13" pos:end="221:17">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:25"><expr pos:start="225:5" pos:end="225:24"><call pos:start="225:5" pos:end="225:24"><name pos:start="225:5" pos:end="225:18">flush_put_bits</name><argument_list pos:start="225:19" pos:end="225:24">(<argument pos:start="225:20" pos:end="225:23"><expr pos:start="225:20" pos:end="225:23"><operator pos:start="225:20" pos:end="225:20">&amp;</operator><name pos:start="225:21" pos:end="225:23">pb2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="227:5" pos:end="227:26">/* do escape coding */</comment>

    <expr_stmt pos:start="229:5" pos:end="229:37"><expr pos:start="229:5" pos:end="229:36"><name pos:start="229:5" pos:end="229:8">size</name> <operator pos:start="229:10" pos:end="229:10">=</operator> <call pos:start="229:12" pos:end="229:31"><name pos:start="229:12" pos:end="229:25">put_bits_count</name><argument_list pos:start="229:26" pos:end="229:31">(<argument pos:start="229:27" pos:end="229:30"><expr pos:start="229:27" pos:end="229:30"><operator pos:start="229:27" pos:end="229:27">&amp;</operator><name pos:start="229:28" pos:end="229:30">pb2</name></expr></argument>)</argument_list></call> <operator pos:start="229:33" pos:end="229:34">&gt;&gt;</operator> <literal type="number" pos:start="229:36" pos:end="229:36">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:35"><expr pos:start="231:5" pos:end="231:34"><call pos:start="231:5" pos:end="231:34"><name pos:start="231:5" pos:end="231:17">init_get_bits</name><argument_list pos:start="231:18" pos:end="231:34">(<argument pos:start="231:19" pos:end="231:21"><expr pos:start="231:19" pos:end="231:21"><operator pos:start="231:19" pos:end="231:19">&amp;</operator><name pos:start="231:20" pos:end="231:21">gb</name></expr></argument>, <argument pos:start="231:24" pos:end="231:27"><expr pos:start="231:24" pos:end="231:27"><name pos:start="231:24" pos:end="231:27">buf2</name></expr></argument>, <argument pos:start="231:30" pos:end="231:33"><expr pos:start="231:30" pos:end="231:33"><name pos:start="231:30" pos:end="231:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="233:5" pos:end="249:5">while<condition pos:start="233:10" pos:end="233:41">(<expr pos:start="233:11" pos:end="233:40"><call pos:start="233:11" pos:end="233:29"><name pos:start="233:11" pos:end="233:24">get_bits_count</name><argument_list pos:start="233:25" pos:end="233:29">(<argument pos:start="233:26" pos:end="233:28"><expr pos:start="233:26" pos:end="233:28"><operator pos:start="233:26" pos:end="233:26">&amp;</operator><name pos:start="233:27" pos:end="233:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="233:31" pos:end="233:31">&lt;</operator> <name pos:start="233:33" pos:end="233:36">size</name> <operator pos:start="233:38" pos:end="233:38">*</operator> <literal type="number" pos:start="233:40" pos:end="233:40">8</literal></expr>)</condition><block pos:start="233:42" pos:end="249:5">{<block_content pos:start="235:9" pos:end="247:9">

        <decl_stmt pos:start="235:9" pos:end="235:14"><decl pos:start="235:9" pos:end="235:13"><type pos:start="235:9" pos:end="235:11"><name pos:start="235:9" pos:end="235:11">int</name></type> <name pos:start="235:13" pos:end="235:13">v</name></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:29"><expr pos:start="237:9" pos:end="237:28"><name pos:start="237:9" pos:end="237:9">v</name> <operator pos:start="237:11" pos:end="237:11">=</operator> <call pos:start="237:13" pos:end="237:28"><name pos:start="237:13" pos:end="237:20">get_bits</name><argument_list pos:start="237:21" pos:end="237:28">(<argument pos:start="237:22" pos:end="237:24"><expr pos:start="237:22" pos:end="237:24"><operator pos:start="237:22" pos:end="237:22">&amp;</operator><name pos:start="237:23" pos:end="237:24">gb</name></expr></argument>, <argument pos:start="237:27" pos:end="237:27"><expr pos:start="237:27" pos:end="237:27"><literal type="number" pos:start="237:27" pos:end="237:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:28"><expr pos:start="239:9" pos:end="239:27"><call pos:start="239:9" pos:end="239:27"><name pos:start="239:9" pos:end="239:16">put_bits</name><argument_list pos:start="239:17" pos:end="239:27">(<argument pos:start="239:18" pos:end="239:20"><expr pos:start="239:18" pos:end="239:20"><operator pos:start="239:18" pos:end="239:18">&amp;</operator><name pos:start="239:19" pos:end="239:20">pb</name></expr></argument>, <argument pos:start="239:23" pos:end="239:23"><expr pos:start="239:23" pos:end="239:23"><literal type="number" pos:start="239:23" pos:end="239:23">8</literal></expr></argument>, <argument pos:start="239:26" pos:end="239:26"><expr pos:start="239:26" pos:end="239:26"><name pos:start="239:26" pos:end="239:26">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="247:9"><if pos:start="241:9" pos:end="247:9">if<condition pos:start="241:11" pos:end="241:21">(<expr pos:start="241:12" pos:end="241:20"><name pos:start="241:12" pos:end="241:12">v</name> <operator pos:start="241:14" pos:end="241:15">==</operator> <literal type="number" pos:start="241:17" pos:end="241:20">0xFF</literal></expr>)</condition><block pos:start="241:22" pos:end="247:9">{<block_content pos:start="243:13" pos:end="245:32">

            <expr_stmt pos:start="243:13" pos:end="243:33"><expr pos:start="243:13" pos:end="243:32"><name pos:start="243:13" pos:end="243:13">v</name> <operator pos:start="243:15" pos:end="243:15">=</operator> <call pos:start="243:17" pos:end="243:32"><name pos:start="243:17" pos:end="243:24">get_bits</name><argument_list pos:start="243:25" pos:end="243:32">(<argument pos:start="243:26" pos:end="243:28"><expr pos:start="243:26" pos:end="243:28"><operator pos:start="243:26" pos:end="243:26">&amp;</operator><name pos:start="243:27" pos:end="243:28">gb</name></expr></argument>, <argument pos:start="243:31" pos:end="243:31"><expr pos:start="243:31" pos:end="243:31"><literal type="number" pos:start="243:31" pos:end="243:31">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:32"><expr pos:start="245:13" pos:end="245:31"><call pos:start="245:13" pos:end="245:31"><name pos:start="245:13" pos:end="245:20">put_bits</name><argument_list pos:start="245:21" pos:end="245:31">(<argument pos:start="245:22" pos:end="245:24"><expr pos:start="245:22" pos:end="245:24"><operator pos:start="245:22" pos:end="245:22">&amp;</operator><name pos:start="245:23" pos:end="245:24">pb</name></expr></argument>, <argument pos:start="245:27" pos:end="245:27"><expr pos:start="245:27" pos:end="245:27"><literal type="number" pos:start="245:27" pos:end="245:27">8</literal></expr></argument>, <argument pos:start="245:30" pos:end="245:30"><expr pos:start="245:30" pos:end="245:30"><name pos:start="245:30" pos:end="245:30">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="251:5" pos:end="251:24"><expr pos:start="251:5" pos:end="251:23"><call pos:start="251:5" pos:end="251:23"><name pos:start="251:5" pos:end="251:18">align_put_bits</name><argument_list pos:start="251:19" pos:end="251:23">(<argument pos:start="251:20" pos:end="251:22"><expr pos:start="251:20" pos:end="251:22"><operator pos:start="251:20" pos:end="251:20">&amp;</operator><name pos:start="251:21" pos:end="251:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:18"><expr pos:start="253:5" pos:end="253:17"><call pos:start="253:5" pos:end="253:17"><name pos:start="253:5" pos:end="253:11">av_free</name><argument_list pos:start="253:12" pos:end="253:17">(<argument pos:start="253:13" pos:end="253:16"><expr pos:start="253:13" pos:end="253:16"><name pos:start="253:13" pos:end="253:16">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="257:5" pos:end="257:22">/* End of image */</comment>

    <expr_stmt pos:start="259:5" pos:end="259:25"><expr pos:start="259:5" pos:end="259:24"><call pos:start="259:5" pos:end="259:24"><name pos:start="259:5" pos:end="259:14">put_marker</name><argument_list pos:start="259:15" pos:end="259:24">(<argument pos:start="259:16" pos:end="259:18"><expr pos:start="259:16" pos:end="259:18"><operator pos:start="259:16" pos:end="259:16">&amp;</operator><name pos:start="259:17" pos:end="259:18">pb</name></expr></argument>, <argument pos:start="259:21" pos:end="259:23"><expr pos:start="259:21" pos:end="259:23"><name pos:start="259:21" pos:end="259:23">EOI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:24"><expr pos:start="261:5" pos:end="261:23"><call pos:start="261:5" pos:end="261:23"><name pos:start="261:5" pos:end="261:18">flush_put_bits</name><argument_list pos:start="261:19" pos:end="261:23">(<argument pos:start="261:20" pos:end="261:22"><expr pos:start="261:20" pos:end="261:22"><operator pos:start="261:20" pos:end="261:20">&amp;</operator><name pos:start="261:21" pos:end="261:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:13"><expr pos:start="265:5" pos:end="265:12"><call pos:start="265:5" pos:end="265:12"><name pos:start="265:5" pos:end="265:10">emms_c</name><argument_list pos:start="265:11" pos:end="265:12">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="269:5" pos:end="269:36">return <expr pos:start="269:12" pos:end="269:35"><call pos:start="269:12" pos:end="269:30"><name pos:start="269:12" pos:end="269:25">put_bits_count</name><argument_list pos:start="269:26" pos:end="269:30">(<argument pos:start="269:27" pos:end="269:29"><expr pos:start="269:27" pos:end="269:29"><operator pos:start="269:27" pos:end="269:27">&amp;</operator><name pos:start="269:28" pos:end="269:29">pb</name></expr></argument>)</argument_list></call> <operator pos:start="269:32" pos:end="269:33">&gt;&gt;</operator> <literal type="number" pos:start="269:35" pos:end="269:35">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
