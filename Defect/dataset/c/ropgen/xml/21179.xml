<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21179.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">xen_host_pci_get_resource</name><parameter_list pos:start="1:37" pos:end="1:57">(<parameter pos:start="1:38" pos:end="1:56"><decl pos:start="1:38" pos:end="1:56"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:53">XenHostPCIDevice</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:14">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:13">rc</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:17">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:13">path</name><index pos:start="7:14" pos:end="7:23">[<expr pos:start="7:15" pos:end="7:22"><name pos:start="7:15" pos:end="7:22">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:47"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:47">[<expr pos:start="9:14" pos:end="9:46"><name pos:start="9:14" pos:end="9:46">XEN_HOST_PCI_RESOURCE_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name> <name pos:start="11:19" pos:end="11:22">long</name></type> <name pos:start="11:24" pos:end="11:28">start</name></decl>, <decl pos:start="11:31" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:22"/><name pos:start="11:31" pos:end="11:33">end</name></decl>, <decl pos:start="11:36" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:22"/><name pos:start="11:36" pos:end="11:40">flags</name></decl>, <decl pos:start="11:43" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:22"/><name pos:start="11:43" pos:end="11:46">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:16">endptr</name></decl>, <decl pos:start="13:19" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:16">type</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:6">rc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:68"><name pos:start="19:10" pos:end="19:32">xen_host_pci_sysfs_path</name><argument_list pos:start="19:33" pos:end="19:68">(<argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">d</name></expr></argument>, <argument pos:start="19:37" pos:end="19:46"><expr pos:start="19:37" pos:end="19:46"><literal type="string" pos:start="19:37" pos:end="19:46">"resource"</literal></expr></argument>, <argument pos:start="19:49" pos:end="19:52"><expr pos:start="19:49" pos:end="19:52"><name pos:start="19:49" pos:end="19:52">path</name></expr></argument>, <argument pos:start="19:55" pos:end="19:67"><expr pos:start="19:55" pos:end="19:67"><sizeof pos:start="19:55" pos:end="19:67">sizeof <argument_list pos:start="19:62" pos:end="19:67">(<argument pos:start="19:63" pos:end="19:66"><expr pos:start="19:63" pos:end="19:66"><name pos:start="19:63" pos:end="19:66">path</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:11">(<expr pos:start="21:9" pos:end="21:10"><name pos:start="21:9" pos:end="21:10">rc</name></expr>)</condition> <block pos:start="21:13" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:6">fd</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:29"><name pos:start="27:10" pos:end="27:13">open</name><argument_list pos:start="27:14" pos:end="27:29">(<argument pos:start="27:15" pos:end="27:18"><expr pos:start="27:15" pos:end="27:18"><name pos:start="27:15" pos:end="27:18">path</name></expr></argument>, <argument pos:start="27:21" pos:end="27:28"><expr pos:start="27:21" pos:end="27:28"><name pos:start="27:21" pos:end="27:28">O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:10">fd</name> <operator pos:start="29:12" pos:end="29:13">==</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>)</condition> <block pos:start="29:19" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:22">

        <expr_stmt pos:start="31:9" pos:end="31:78"><expr pos:start="31:9" pos:end="31:77"><call pos:start="31:9" pos:end="31:77"><name pos:start="31:9" pos:end="31:24">XEN_HOST_PCI_LOG</name><argument_list pos:start="31:25" pos:end="31:77">(<argument pos:start="31:26" pos:end="31:53"><expr pos:start="31:26" pos:end="31:53"><literal type="string" pos:start="31:26" pos:end="31:53">"Error: Can't open %s: %s\n"</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:59"><expr pos:start="31:56" pos:end="31:59"><name pos:start="31:56" pos:end="31:59">path</name></expr></argument>, <argument pos:start="31:62" pos:end="31:76"><expr pos:start="31:62" pos:end="31:76"><call pos:start="31:62" pos:end="31:76"><name pos:start="31:62" pos:end="31:69">strerror</name><argument_list pos:start="31:70" pos:end="31:76">(<argument pos:start="31:71" pos:end="31:75"><expr pos:start="31:71" pos:end="31:75"><name pos:start="31:71" pos:end="31:75">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:22">return <expr pos:start="33:16" pos:end="33:21"><operator pos:start="33:16" pos:end="33:16">-</operator><name pos:start="33:17" pos:end="33:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <do pos:start="39:5" pos:end="51:21">do <block pos:start="39:8" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:9">

        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:10">rc</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:45"><name pos:start="41:14" pos:end="41:17">read</name><argument_list pos:start="41:18" pos:end="41:45">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">fd</name></expr></argument>, <argument pos:start="41:23" pos:end="41:26"><expr pos:start="41:23" pos:end="41:26"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:26">buf</name></expr></argument>, <argument pos:start="41:29" pos:end="41:44"><expr pos:start="41:29" pos:end="41:44"><sizeof pos:start="41:29" pos:end="41:40">sizeof <argument_list pos:start="41:36" pos:end="41:40">(<argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:39">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:42" pos:end="41:42">-</operator> <literal type="number" pos:start="41:44" pos:end="41:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:37">(<expr pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:14">rc</name> <operator pos:start="43:16" pos:end="43:16">&lt;</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal> <operator pos:start="43:20" pos:end="43:21">&amp;&amp;</operator> <name pos:start="43:23" pos:end="43:27">errno</name> <operator pos:start="43:29" pos:end="43:30">!=</operator> <name pos:start="43:32" pos:end="43:36">EINTR</name></expr>)</condition> <block pos:start="43:39" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:21">

            <expr_stmt pos:start="45:13" pos:end="45:24"><expr pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:14">rc</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <operator pos:start="45:18" pos:end="45:18">-</operator><name pos:start="45:19" pos:end="45:23">errno</name></expr>;</expr_stmt>

            <goto pos:start="47:13" pos:end="47:21">goto <name pos:start="47:18" pos:end="47:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="51:13" pos:end="51:20">(<expr pos:start="51:14" pos:end="51:19"><name pos:start="51:14" pos:end="51:15">rc</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition>;</do>

    <expr_stmt pos:start="53:5" pos:end="53:16"><expr pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:7">buf</name><index pos:start="53:8" pos:end="53:11">[<expr pos:start="53:9" pos:end="53:10"><name pos:start="53:9" pos:end="53:10">rc</name></expr>]</index></name> <operator pos:start="53:13" pos:end="53:13">=</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:11"><expr pos:start="55:5" pos:end="55:10"><name pos:start="55:5" pos:end="55:6">rc</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <literal type="number" pos:start="55:10" pos:end="55:10">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:12"><expr pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:5">s</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <name pos:start="59:9" pos:end="59:11">buf</name></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="159:5">for <control pos:start="61:9" pos:end="61:41">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:36"><expr pos:start="61:17" pos:end="61:35"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:35">PCI_NUM_REGIONS</name></expr>;</condition> <incr pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:38">i</name><operator pos:start="61:39" pos:end="61:40">++</operator></expr></incr>)</control> <block pos:start="61:43" pos:end="159:5">{<block_content pos:start="63:9" pos:end="157:9">

        <expr_stmt pos:start="63:9" pos:end="63:17"><expr pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:12">type</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:40"><expr pos:start="67:9" pos:end="67:39"><name pos:start="67:9" pos:end="67:13">start</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <call pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:23">strtoll</name><argument_list pos:start="67:24" pos:end="67:39">(<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">s</name></expr></argument>, <argument pos:start="67:28" pos:end="67:34"><expr pos:start="67:28" pos:end="67:34"><operator pos:start="67:28" pos:end="67:28">&amp;</operator><name pos:start="67:29" pos:end="67:34">endptr</name></expr></argument>, <argument pos:start="67:37" pos:end="67:38"><expr pos:start="67:37" pos:end="67:38"><literal type="number" pos:start="67:37" pos:end="67:38">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:42">(<expr pos:start="69:13" pos:end="69:41"><operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:19">endptr</name> <operator pos:start="69:21" pos:end="69:22">!=</operator> <literal type="char" pos:start="69:24" pos:end="69:26">' '</literal> <operator pos:start="69:28" pos:end="69:29">||</operator> <name pos:start="69:31" pos:end="69:31">s</name> <operator pos:start="69:33" pos:end="69:34">==</operator> <name pos:start="69:36" pos:end="69:41">endptr</name></expr>)</condition> <block pos:start="69:44" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:18">

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:9">s</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:18">endptr</name> <operator pos:start="75:20" pos:end="75:20">+</operator> <literal type="number" pos:start="75:22" pos:end="75:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:11">end</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:37"><name pos:start="77:15" pos:end="77:21">strtoll</name><argument_list pos:start="77:22" pos:end="77:37">(<argument pos:start="77:23" pos:end="77:23"><expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">s</name></expr></argument>, <argument pos:start="77:26" pos:end="77:32"><expr pos:start="77:26" pos:end="77:32"><operator pos:start="77:26" pos:end="77:26">&amp;</operator><name pos:start="77:27" pos:end="77:32">endptr</name></expr></argument>, <argument pos:start="77:35" pos:end="77:36"><expr pos:start="77:35" pos:end="77:36"><literal type="number" pos:start="77:35" pos:end="77:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:42">(<expr pos:start="79:13" pos:end="79:41"><operator pos:start="79:13" pos:end="79:13">*</operator><name pos:start="79:14" pos:end="79:19">endptr</name> <operator pos:start="79:21" pos:end="79:22">!=</operator> <literal type="char" pos:start="79:24" pos:end="79:26">' '</literal> <operator pos:start="79:28" pos:end="79:29">||</operator> <name pos:start="79:31" pos:end="79:31">s</name> <operator pos:start="79:33" pos:end="79:34">==</operator> <name pos:start="79:36" pos:end="79:41">endptr</name></expr>)</condition> <block pos:start="79:44" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:18">

            <break pos:start="81:13" pos:end="81:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:23"><expr pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:9">s</name> <operator pos:start="85:11" pos:end="85:11">=</operator> <name pos:start="85:13" pos:end="85:18">endptr</name> <operator pos:start="85:20" pos:end="85:20">+</operator> <literal type="number" pos:start="85:22" pos:end="85:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:13">flags</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:23">strtoll</name><argument_list pos:start="87:24" pos:end="87:39">(<argument pos:start="87:25" pos:end="87:25"><expr pos:start="87:25" pos:end="87:25"><name pos:start="87:25" pos:end="87:25">s</name></expr></argument>, <argument pos:start="87:28" pos:end="87:34"><expr pos:start="87:28" pos:end="87:34"><operator pos:start="87:28" pos:end="87:28">&amp;</operator><name pos:start="87:29" pos:end="87:34">endptr</name></expr></argument>, <argument pos:start="87:37" pos:end="87:38"><expr pos:start="87:37" pos:end="87:38"><literal type="number" pos:start="87:37" pos:end="87:38">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:43">(<expr pos:start="89:13" pos:end="89:42"><operator pos:start="89:13" pos:end="89:13">*</operator><name pos:start="89:14" pos:end="89:19">endptr</name> <operator pos:start="89:21" pos:end="89:22">!=</operator> <literal type="char" pos:start="89:24" pos:end="89:27">'\n'</literal> <operator pos:start="89:29" pos:end="89:30">||</operator> <name pos:start="89:32" pos:end="89:32">s</name> <operator pos:start="89:34" pos:end="89:35">==</operator> <name pos:start="89:37" pos:end="89:42">endptr</name></expr>)</condition> <block pos:start="89:45" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:18">

            <break pos:start="91:13" pos:end="91:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:9">s</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <name pos:start="95:13" pos:end="95:18">endptr</name> <operator pos:start="95:20" pos:end="95:20">+</operator> <literal type="number" pos:start="95:22" pos:end="95:22">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="107:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:18">(<expr pos:start="99:13" pos:end="99:17"><name pos:start="99:13" pos:end="99:17">start</name></expr>)</condition> <block pos:start="99:20" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:35">

            <expr_stmt pos:start="101:13" pos:end="101:35"><expr pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:16">size</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:22">end</name> <operator pos:start="101:24" pos:end="101:24">-</operator> <name pos:start="101:26" pos:end="101:30">start</name> <operator pos:start="101:32" pos:end="101:32">+</operator> <literal type="number" pos:start="101:34" pos:end="101:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="103:11" pos:end="107:9">else <block pos:start="103:16" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:21">

            <expr_stmt pos:start="105:13" pos:end="105:21"><expr pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:16">size</name> <operator pos:start="105:18" pos:end="105:18">=</operator> <literal type="number" pos:start="105:20" pos:end="105:20">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:34">(<expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:17">flags</name> <operator pos:start="111:19" pos:end="111:19">&amp;</operator> <name pos:start="111:21" pos:end="111:33">IORESOURCE_IO</name></expr>)</condition> <block pos:start="111:36" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:48">

            <expr_stmt pos:start="113:13" pos:end="113:48"><expr pos:start="113:13" pos:end="113:47"><name pos:start="113:13" pos:end="113:16">type</name> <operator pos:start="113:18" pos:end="113:19">|=</operator> <name pos:start="113:21" pos:end="113:47">XEN_HOST_PCI_REGION_TYPE_IO</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:35">(<expr pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:17">flags</name> <operator pos:start="117:19" pos:end="117:19">&amp;</operator> <name pos:start="117:21" pos:end="117:34">IORESOURCE_MEM</name></expr>)</condition> <block pos:start="117:37" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:49">

            <expr_stmt pos:start="119:13" pos:end="119:49"><expr pos:start="119:13" pos:end="119:48"><name pos:start="119:13" pos:end="119:16">type</name> <operator pos:start="119:18" pos:end="119:19">|=</operator> <name pos:start="119:21" pos:end="119:48">XEN_HOST_PCI_REGION_TYPE_MEM</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:40">(<expr pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:17">flags</name> <operator pos:start="123:19" pos:end="123:19">&amp;</operator> <name pos:start="123:21" pos:end="123:39">IORESOURCE_PREFETCH</name></expr>)</condition> <block pos:start="123:42" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:54">

            <expr_stmt pos:start="125:13" pos:end="125:54"><expr pos:start="125:13" pos:end="125:53"><name pos:start="125:13" pos:end="125:16">type</name> <operator pos:start="125:18" pos:end="125:19">|=</operator> <name pos:start="125:21" pos:end="125:53">XEN_HOST_PCI_REGION_TYPE_PREFETCH</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:38">(<expr pos:start="129:13" pos:end="129:37"><name pos:start="129:13" pos:end="129:17">flags</name> <operator pos:start="129:19" pos:end="129:19">&amp;</operator> <name pos:start="129:21" pos:end="129:37">IORESOURCE_MEM_64</name></expr>)</condition> <block pos:start="129:40" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:52">

            <expr_stmt pos:start="131:13" pos:end="131:52"><expr pos:start="131:13" pos:end="131:51"><name pos:start="131:13" pos:end="131:16">type</name> <operator pos:start="131:18" pos:end="131:19">|=</operator> <name pos:start="131:21" pos:end="131:51">XEN_HOST_PCI_REGION_TYPE_MEM_64</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="137:9" pos:end="157:9"><if pos:start="137:9" pos:end="147:9">if <condition pos:start="137:12" pos:end="137:29">(<expr pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:13">i</name> <operator pos:start="137:15" pos:end="137:15">&lt;</operator> <name pos:start="137:17" pos:end="137:28">PCI_ROM_SLOT</name></expr>)</condition> <block pos:start="137:31" pos:end="147:9">{<block_content pos:start="139:13" pos:end="145:65">

            <expr_stmt pos:start="139:13" pos:end="139:47"><expr pos:start="139:13" pos:end="139:46"><name pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:13">d</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:25">io_regions</name><index pos:start="139:26" pos:end="139:28">[<expr pos:start="139:27" pos:end="139:27"><name pos:start="139:27" pos:end="139:27">i</name></expr>]</index></name><operator pos:start="139:29" pos:end="139:29">.</operator><name pos:start="139:30" pos:end="139:38">base_addr</name> <operator pos:start="139:40" pos:end="139:40">=</operator> <name pos:start="139:42" pos:end="139:46">start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:41"><expr pos:start="141:13" pos:end="141:40"><name pos:start="141:13" pos:end="141:28"><name pos:start="141:13" pos:end="141:13">d</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:25">io_regions</name><index pos:start="141:26" pos:end="141:28">[<expr pos:start="141:27" pos:end="141:27"><name pos:start="141:27" pos:end="141:27">i</name></expr>]</index></name><operator pos:start="141:29" pos:end="141:29">.</operator><name pos:start="141:30" pos:end="141:33">size</name> <operator pos:start="141:35" pos:end="141:35">=</operator> <name pos:start="141:37" pos:end="141:40">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:41"><expr pos:start="143:13" pos:end="143:40"><name pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:13">d</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:25">io_regions</name><index pos:start="143:26" pos:end="143:28">[<expr pos:start="143:27" pos:end="143:27"><name pos:start="143:27" pos:end="143:27">i</name></expr>]</index></name><operator pos:start="143:29" pos:end="143:29">.</operator><name pos:start="143:30" pos:end="143:33">type</name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:40">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:65"><expr pos:start="145:13" pos:end="145:64"><name pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:13">d</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:25">io_regions</name><index pos:start="145:26" pos:end="145:28">[<expr pos:start="145:27" pos:end="145:27"><name pos:start="145:27" pos:end="145:27">i</name></expr>]</index></name><operator pos:start="145:29" pos:end="145:29">.</operator><name pos:start="145:30" pos:end="145:38">bus_flags</name> <operator pos:start="145:40" pos:end="145:40">=</operator> <name pos:start="145:42" pos:end="145:46">flags</name> <operator pos:start="145:48" pos:end="145:48">&amp;</operator> <name pos:start="145:50" pos:end="145:64">IORESOURCE_BITS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="147:11" pos:end="157:9">else <block pos:start="147:16" pos:end="157:9">{<block_content pos:start="149:13" pos:end="155:55">

            <expr_stmt pos:start="149:13" pos:end="149:37"><expr pos:start="149:13" pos:end="149:36"><name pos:start="149:13" pos:end="149:28"><name pos:start="149:13" pos:end="149:13">d</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:18">rom</name><operator pos:start="149:19" pos:end="149:19">.</operator><name pos:start="149:20" pos:end="149:28">base_addr</name></name> <operator pos:start="149:30" pos:end="149:30">=</operator> <name pos:start="149:32" pos:end="149:36">start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:31"><expr pos:start="151:13" pos:end="151:30"><name pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:13">d</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:18">rom</name><operator pos:start="151:19" pos:end="151:19">.</operator><name pos:start="151:20" pos:end="151:23">size</name></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:30">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:31"><expr pos:start="153:13" pos:end="153:30"><name pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:13">d</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:18">rom</name><operator pos:start="153:19" pos:end="153:19">.</operator><name pos:start="153:20" pos:end="153:23">type</name></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <name pos:start="153:27" pos:end="153:30">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:55"><expr pos:start="155:13" pos:end="155:54"><name pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:13">d</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:18">rom</name><operator pos:start="155:19" pos:end="155:19">.</operator><name pos:start="155:20" pos:end="155:28">bus_flags</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:36">flags</name> <operator pos:start="155:38" pos:end="155:38">&amp;</operator> <name pos:start="155:40" pos:end="155:54">IORESOURCE_BITS</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="161:5" pos:end="167:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:29">(<expr pos:start="161:9" pos:end="161:28"><name pos:start="161:9" pos:end="161:9">i</name> <operator pos:start="161:11" pos:end="161:12">!=</operator> <name pos:start="161:14" pos:end="161:28">PCI_NUM_REGIONS</name></expr>)</condition> <block pos:start="161:31" pos:end="167:5">{<block_content pos:start="165:9" pos:end="165:21">

        <comment type="block" pos:start="163:9" pos:end="163:46">/* Invalid format or input to short */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:21"><expr pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:10">rc</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <operator pos:start="165:14" pos:end="165:14">-</operator><name pos:start="165:15" pos:end="165:20">ENODEV</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="171:1" pos:end="171:4"><name pos:start="171:1" pos:end="171:3">out</name>:</label>

    <expr_stmt pos:start="173:5" pos:end="173:14"><expr pos:start="173:5" pos:end="173:13"><call pos:start="173:5" pos:end="173:13"><name pos:start="173:5" pos:end="173:9">close</name><argument_list pos:start="173:10" pos:end="173:13">(<argument pos:start="173:11" pos:end="173:12"><expr pos:start="173:11" pos:end="173:12"><name pos:start="173:11" pos:end="173:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="175:5" pos:end="175:14">return <expr pos:start="175:12" pos:end="175:13"><name pos:start="175:12" pos:end="175:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
