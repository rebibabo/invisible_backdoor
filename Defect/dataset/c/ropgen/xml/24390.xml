<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24390.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mxf_read_partition_pack</name><parameter_list pos:start="1:35" pos:end="1:90">(<parameter pos:start="1:36" pos:end="1:44"><decl pos:start="1:36" pos:end="1:44"><type pos:start="1:36" pos:end="1:44"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">arg</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:57">AVIOContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">pb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:70"><decl pos:start="1:64" pos:end="1:70"><type pos:start="1:64" pos:end="1:70"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">tag</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:80"><decl pos:start="1:73" pos:end="1:80"><type pos:start="1:73" pos:end="1:80"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:80">size</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:89"><decl pos:start="1:83" pos:end="1:89"><type pos:start="1:83" pos:end="1:89"><name pos:start="1:83" pos:end="1:85">UID</name></type> <name pos:start="1:87" pos:end="1:89">uid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:25">= <expr pos:start="5:23" pos:end="5:25"><name pos:start="5:23" pos:end="5:25">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MXFPartition</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:27">partition</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">UID</name></type> <name pos:start="9:9" pos:end="9:10">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:29">footer_partition</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:71">(<expr pos:start="15:9" pos:end="15:70"><name pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:11">mxf</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:29">partitions_count</name></name><operator pos:start="15:30" pos:end="15:30">+</operator><literal type="number" pos:start="15:31" pos:end="15:31">1</literal> <operator pos:start="15:33" pos:end="15:34">&gt;=</operator> <name pos:start="15:36" pos:end="15:43">UINT_MAX</name> <operator pos:start="15:45" pos:end="15:45">/</operator> <sizeof pos:start="15:47" pos:end="15:70">sizeof<argument_list pos:start="15:53" pos:end="15:70">(<argument pos:start="15:54" pos:end="15:69"><expr pos:start="15:54" pos:end="15:69"><operator pos:start="15:54" pos:end="15:54">*</operator><name pos:start="15:55" pos:end="15:69"><name pos:start="15:55" pos:end="15:57">mxf</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:69">partitions</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:106"><expr pos:start="21:5" pos:end="21:105"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:7">mxf</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:19">partitions</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <call pos:start="21:23" pos:end="21:105"><name pos:start="21:23" pos:end="21:32">av_realloc</name><argument_list pos:start="21:33" pos:end="21:105">(<argument pos:start="21:34" pos:end="21:48"><expr pos:start="21:34" pos:end="21:48"><name pos:start="21:34" pos:end="21:48"><name pos:start="21:34" pos:end="21:36">mxf</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:48">partitions</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:104"><expr pos:start="21:51" pos:end="21:104"><operator pos:start="21:51" pos:end="21:51">(</operator><name pos:start="21:52" pos:end="21:72"><name pos:start="21:52" pos:end="21:54">mxf</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:72">partitions_count</name></name> <operator pos:start="21:74" pos:end="21:74">+</operator> <literal type="number" pos:start="21:76" pos:end="21:76">1</literal><operator pos:start="21:77" pos:end="21:77">)</operator> <operator pos:start="21:79" pos:end="21:79">*</operator> <sizeof pos:start="21:81" pos:end="21:104">sizeof<argument_list pos:start="21:87" pos:end="21:104">(<argument pos:start="21:88" pos:end="21:103"><expr pos:start="21:88" pos:end="21:103"><operator pos:start="21:88" pos:end="21:88">*</operator><name pos:start="21:89" pos:end="21:103"><name pos:start="21:89" pos:end="21:91">mxf</name><operator pos:start="21:92" pos:end="21:93">-&gt;</operator><name pos:start="21:94" pos:end="21:103">partitions</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:24"><name pos:start="23:10" pos:end="23:12">mxf</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:24">partitions</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="49:5"><if pos:start="29:5" pos:end="43:5">if <condition pos:start="29:8" pos:end="29:30">(<expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:11">mxf</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:29">parsing_backward</name></name></expr>)</condition> <block pos:start="29:32" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:91">

        <comment type="block" pos:start="31:9" pos:end="33:72">/* insert the new partition pack in the middle

         * this makes the entries in mxf-&gt;partitions sorted by offset */</comment>

        <expr_stmt pos:start="35:9" pos:end="39:96"><expr pos:start="35:9" pos:end="39:95"><call pos:start="35:9" pos:end="39:95"><name pos:start="35:9" pos:end="35:15">memmove</name><argument_list pos:start="35:16" pos:end="39:95">(<argument pos:start="35:17" pos:end="35:63"><expr pos:start="35:17" pos:end="35:63"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:63"><name pos:start="35:18" pos:end="35:20">mxf</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:32">partitions</name><index pos:start="35:33" pos:end="35:63">[<expr pos:start="35:34" pos:end="35:62"><name pos:start="35:34" pos:end="35:60"><name pos:start="35:34" pos:end="35:36">mxf</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:60">last_forward_partition</name></name><operator pos:start="35:61" pos:end="35:61">+</operator><literal type="number" pos:start="35:62" pos:end="35:62">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="37:17" pos:end="37:61"><expr pos:start="37:17" pos:end="37:61"><operator pos:start="37:17" pos:end="37:17">&amp;</operator><name pos:start="37:18" pos:end="37:61"><name pos:start="37:18" pos:end="37:20">mxf</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:32">partitions</name><index pos:start="37:33" pos:end="37:61">[<expr pos:start="37:34" pos:end="37:60"><name pos:start="37:34" pos:end="37:60"><name pos:start="37:34" pos:end="37:36">mxf</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:60">last_forward_partition</name></name></expr>]</index></name></expr></argument>,

                <argument pos:start="39:17" pos:end="39:94"><expr pos:start="39:17" pos:end="39:94"><operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:38"><name pos:start="39:18" pos:end="39:20">mxf</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:38">partitions_count</name></name> <operator pos:start="39:40" pos:end="39:40">-</operator> <name pos:start="39:42" pos:end="39:68"><name pos:start="39:42" pos:end="39:44">mxf</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:68">last_forward_partition</name></name><operator pos:start="39:69" pos:end="39:69">)</operator><operator pos:start="39:70" pos:end="39:70">*</operator><sizeof pos:start="39:71" pos:end="39:94">sizeof<argument_list pos:start="39:77" pos:end="39:94">(<argument pos:start="39:78" pos:end="39:93"><expr pos:start="39:78" pos:end="39:93"><operator pos:start="39:78" pos:end="39:78">*</operator><name pos:start="39:79" pos:end="39:93"><name pos:start="39:79" pos:end="39:81">mxf</name><operator pos:start="39:82" pos:end="39:83">-&gt;</operator><name pos:start="39:84" pos:end="39:93">partitions</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:91"><expr pos:start="41:9" pos:end="41:90"><name pos:start="41:9" pos:end="41:17">partition</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:42"><name pos:start="41:21" pos:end="41:23">mxf</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:42">current_partition</name></name> <operator pos:start="41:44" pos:end="41:44">=</operator> <operator pos:start="41:46" pos:end="41:46">&amp;</operator><name pos:start="41:47" pos:end="41:90"><name pos:start="41:47" pos:end="41:49">mxf</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:61">partitions</name><index pos:start="41:62" pos:end="41:90">[<expr pos:start="41:63" pos:end="41:89"><name pos:start="41:63" pos:end="41:89"><name pos:start="41:63" pos:end="41:65">mxf</name><operator pos:start="41:66" pos:end="41:67">-&gt;</operator><name pos:start="41:68" pos:end="41:89">last_forward_partition</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="49:5">else <block pos:start="43:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:85">

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:11">mxf</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:35">last_forward_partition</name></name><operator pos:start="45:36" pos:end="45:37">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:85"><expr pos:start="47:9" pos:end="47:84"><name pos:start="47:9" pos:end="47:17">partition</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:42"><name pos:start="47:21" pos:end="47:23">mxf</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:42">current_partition</name></name> <operator pos:start="47:44" pos:end="47:44">=</operator> <operator pos:start="47:46" pos:end="47:46">&amp;</operator><name pos:start="47:47" pos:end="47:84"><name pos:start="47:47" pos:end="47:49">mxf</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:61">partitions</name><index pos:start="47:62" pos:end="47:84">[<expr pos:start="47:63" pos:end="47:83"><name pos:start="47:63" pos:end="47:83"><name pos:start="47:63" pos:end="47:65">mxf</name><operator pos:start="47:66" pos:end="47:67">-&gt;</operator><name pos:start="47:68" pos:end="47:83">partitions_count</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:10">memset</name><argument_list pos:start="53:11" pos:end="53:44">(<argument pos:start="53:12" pos:end="53:20"><expr pos:start="53:12" pos:end="53:20"><name pos:start="53:12" pos:end="53:20">partition</name></expr></argument>, <argument pos:start="53:23" pos:end="53:23"><expr pos:start="53:23" pos:end="53:23"><literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr></argument>, <argument pos:start="53:26" pos:end="53:43"><expr pos:start="53:26" pos:end="53:43"><sizeof pos:start="53:26" pos:end="53:43">sizeof<argument_list pos:start="53:32" pos:end="53:43">(<argument pos:start="53:33" pos:end="53:42"><expr pos:start="53:33" pos:end="53:42"><operator pos:start="53:33" pos:end="53:33">*</operator><name pos:start="53:34" pos:end="53:42">partition</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:28"><expr pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:7">mxf</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:25">partitions_count</name></name><operator pos:start="55:26" pos:end="55:27">++</operator></expr>;</expr_stmt>



    <switch pos:start="59:5" pos:end="85:5">switch<condition pos:start="59:11" pos:end="59:19">(<expr pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:14">uid</name><index pos:start="59:15" pos:end="59:18">[<expr pos:start="59:16" pos:end="59:17"><literal type="number" pos:start="59:16" pos:end="59:17">13</literal></expr>]</index></name></expr>)</condition> <block pos:start="59:21" pos:end="85:5">{<block_content pos:start="61:5" pos:end="83:35">

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">2</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:17">partition</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:23">type</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:32">Header</name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">3</literal></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:17">partition</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">type</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:39">BodyPartition</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">4</literal></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:17">partition</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:23">type</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:32">Footer</name></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <default pos:start="79:5" pos:end="79:12">default:</default>

        <expr_stmt pos:start="81:9" pos:end="81:78"><expr pos:start="81:9" pos:end="81:77"><call pos:start="81:9" pos:end="81:77"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:77">(<argument pos:start="81:16" pos:end="81:22"><expr pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:18">mxf</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:22">fc</name></name></expr></argument>, <argument pos:start="81:25" pos:end="81:36"><expr pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:39" pos:end="81:67"><expr pos:start="81:39" pos:end="81:67"><literal type="string" pos:start="81:39" pos:end="81:67">"unknown partition type %i\n"</literal></expr></argument>, <argument pos:start="81:70" pos:end="81:76"><expr pos:start="81:70" pos:end="81:76"><name pos:start="81:70" pos:end="81:76"><name pos:start="81:70" pos:end="81:72">uid</name><index pos:start="81:73" pos:end="81:76">[<expr pos:start="81:74" pos:end="81:75"><literal type="number" pos:start="81:74" pos:end="81:75">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="89:5" pos:end="89:86">/* consider both footers to be closed (there is only Footer and CompleteFooter) */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:68"><expr pos:start="91:5" pos:end="91:67"><name pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:13">partition</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">closed</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:39"><name pos:start="91:25" pos:end="91:33">partition</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:39">type</name></name> <operator pos:start="91:41" pos:end="91:42">==</operator> <name pos:start="91:44" pos:end="91:49">Footer</name> <operator pos:start="91:51" pos:end="91:52">||</operator> <operator pos:start="91:54" pos:end="91:54">!</operator><operator pos:start="91:55" pos:end="91:55">(</operator><name pos:start="91:56" pos:end="91:62"><name pos:start="91:56" pos:end="91:58">uid</name><index pos:start="91:59" pos:end="91:62">[<expr pos:start="91:60" pos:end="91:61"><literal type="number" pos:start="91:60" pos:end="91:61">14</literal></expr>]</index></name> <operator pos:start="91:64" pos:end="91:64">&amp;</operator> <literal type="number" pos:start="91:66" pos:end="91:66">1</literal><operator pos:start="91:67" pos:end="91:67">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:38"><expr pos:start="93:5" pos:end="93:37"><name pos:start="93:5" pos:end="93:23"><name pos:start="93:5" pos:end="93:13">partition</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:23">complete</name></name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:33"><name pos:start="93:27" pos:end="93:29">uid</name><index pos:start="93:30" pos:end="93:33">[<expr pos:start="93:31" pos:end="93:32"><literal type="number" pos:start="93:31" pos:end="93:32">14</literal></expr>]</index></name> <operator pos:start="93:35" pos:end="93:35">&gt;</operator> <literal type="number" pos:start="93:37" pos:end="93:37">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:13">avio_skip</name><argument_list pos:start="95:14" pos:end="95:20">(<argument pos:start="95:15" pos:end="95:16"><expr pos:start="95:15" pos:end="95:16"><name pos:start="95:15" pos:end="95:16">pb</name></expr></argument>, <argument pos:start="95:19" pos:end="95:19"><expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:46"><expr pos:start="97:5" pos:end="97:45"><name pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:13">partition</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:29">this_partition</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <call pos:start="97:33" pos:end="97:45"><name pos:start="97:33" pos:end="97:41">avio_rb64</name><argument_list pos:start="97:42" pos:end="97:45">(<argument pos:start="97:43" pos:end="97:44"><expr pos:start="97:43" pos:end="97:44"><name pos:start="97:43" pos:end="97:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:50"><expr pos:start="99:5" pos:end="99:49"><name pos:start="99:5" pos:end="99:33"><name pos:start="99:5" pos:end="99:13">partition</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:33">previous_partition</name></name> <operator pos:start="99:35" pos:end="99:35">=</operator> <call pos:start="99:37" pos:end="99:49"><name pos:start="99:37" pos:end="99:45">avio_rb64</name><argument_list pos:start="99:46" pos:end="99:49">(<argument pos:start="99:47" pos:end="99:48"><expr pos:start="99:47" pos:end="99:48"><name pos:start="99:47" pos:end="99:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:37"><expr pos:start="101:5" pos:end="101:36"><name pos:start="101:5" pos:end="101:20">footer_partition</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:36"><name pos:start="101:24" pos:end="101:32">avio_rb64</name><argument_list pos:start="101:33" pos:end="101:36">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><name pos:start="101:34" pos:end="101:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:22"><expr pos:start="103:5" pos:end="103:21"><call pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:13">avio_skip</name><argument_list pos:start="103:14" pos:end="103:21">(<argument pos:start="103:15" pos:end="103:16"><expr pos:start="103:15" pos:end="103:16"><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:20"><expr pos:start="103:19" pos:end="103:20"><literal type="number" pos:start="103:19" pos:end="103:20">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:41"><expr pos:start="105:5" pos:end="105:40"><name pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:13">partition</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:24">index_sid</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:40"><name pos:start="105:28" pos:end="105:36">avio_rb32</name><argument_list pos:start="105:37" pos:end="105:40">(<argument pos:start="105:38" pos:end="105:39"><expr pos:start="105:38" pos:end="105:39"><name pos:start="105:38" pos:end="105:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><call pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:13">avio_skip</name><argument_list pos:start="107:14" pos:end="107:20">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:40"><expr pos:start="109:5" pos:end="109:39"><name pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:13">partition</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:23">body_sid</name></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <call pos:start="109:27" pos:end="109:39"><name pos:start="109:27" pos:end="109:35">avio_rb32</name><argument_list pos:start="109:36" pos:end="109:39">(<argument pos:start="109:37" pos:end="109:38"><expr pos:start="109:37" pos:end="109:38"><name pos:start="109:37" pos:end="109:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:35"><expr pos:start="111:5" pos:end="111:34"><call pos:start="111:5" pos:end="111:34"><name pos:start="111:5" pos:end="111:13">avio_read</name><argument_list pos:start="111:14" pos:end="111:34">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:20"><expr pos:start="111:19" pos:end="111:20"><name pos:start="111:19" pos:end="111:20">op</name></expr></argument>, <argument pos:start="111:23" pos:end="111:33"><expr pos:start="111:23" pos:end="111:33"><sizeof pos:start="111:23" pos:end="111:33">sizeof<argument_list pos:start="111:29" pos:end="111:33">(<argument pos:start="111:30" pos:end="111:32"><expr pos:start="111:30" pos:end="111:32"><name pos:start="111:30" pos:end="111:32">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:69">/* some files don'thave FooterPartition set in every partition */</comment>

    <if_stmt pos:start="117:5" pos:end="131:5"><if pos:start="117:5" pos:end="131:5">if <condition pos:start="117:8" pos:end="117:25">(<expr pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:24">footer_partition</name></expr>)</condition> <block pos:start="117:27" pos:end="131:5">{<block_content pos:start="119:9" pos:end="129:9">

        <if_stmt pos:start="119:9" pos:end="129:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:79">(<expr pos:start="119:13" pos:end="119:78"><name pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:15">mxf</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:33">footer_partition</name></name> <operator pos:start="119:35" pos:end="119:36">&amp;&amp;</operator> <name pos:start="119:38" pos:end="119:58"><name pos:start="119:38" pos:end="119:40">mxf</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:58">footer_partition</name></name> <operator pos:start="119:60" pos:end="119:61">!=</operator> <name pos:start="119:63" pos:end="119:78">footer_partition</name></expr>)</condition> <block pos:start="119:81" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:60">

            <expr_stmt pos:start="121:13" pos:end="123:60"><expr pos:start="121:13" pos:end="123:59"><call pos:start="121:13" pos:end="123:59"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="123:59">(<argument pos:start="121:20" pos:end="121:26"><expr pos:start="121:20" pos:end="121:26"><name pos:start="121:20" pos:end="121:26"><name pos:start="121:20" pos:end="121:22">mxf</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:26">fc</name></name></expr></argument>, <argument pos:start="121:29" pos:end="121:40"><expr pos:start="121:29" pos:end="121:40"><name pos:start="121:29" pos:end="121:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:43" pos:end="121:92"><expr pos:start="121:43" pos:end="121:92"><literal type="string" pos:start="121:43" pos:end="121:92">"inconsistent FooterPartition value: %li != %li\n"</literal></expr></argument>,

                   <argument pos:start="123:20" pos:end="123:40"><expr pos:start="123:20" pos:end="123:40"><name pos:start="123:20" pos:end="123:40"><name pos:start="123:20" pos:end="123:22">mxf</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:40">footer_partition</name></name></expr></argument>, <argument pos:start="123:43" pos:end="123:58"><expr pos:start="123:43" pos:end="123:58"><name pos:start="123:43" pos:end="123:58">footer_partition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="129:9">else <block pos:start="125:16" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:53">

            <expr_stmt pos:start="127:13" pos:end="127:53"><expr pos:start="127:13" pos:end="127:52"><name pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:15">mxf</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:33">footer_partition</name></name> <operator pos:start="127:35" pos:end="127:35">=</operator> <name pos:start="127:37" pos:end="127:52">footer_partition</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="143:55"><expr pos:start="135:5" pos:end="143:54"><call pos:start="135:5" pos:end="143:54"><name pos:start="135:5" pos:end="135:11">av_dlog</name><argument_list pos:start="135:12" pos:end="143:54">(<argument pos:start="135:13" pos:end="135:19"><expr pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">mxf</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:19">fc</name></name></expr></argument>, <argument pos:start="135:22" pos:end="137:68"><expr pos:start="135:22" pos:end="137:68"><literal type="string" pos:start="135:22" pos:end="135:88">"PartitionPack: ThisPartition = 0x%lx, PreviousPartition = 0x%lx, "</literal>

            <literal type="string" pos:start="137:13" pos:end="137:68">"FooterPartition = 0x%lx, IndexSID = %i, BodySID = %i\n"</literal></expr></argument>,

            <argument pos:start="139:13" pos:end="139:37"><expr pos:start="139:13" pos:end="139:37"><name pos:start="139:13" pos:end="139:37"><name pos:start="139:13" pos:end="139:21">partition</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:37">this_partition</name></name></expr></argument>,

            <argument pos:start="141:13" pos:end="141:41"><expr pos:start="141:13" pos:end="141:41"><name pos:start="141:13" pos:end="141:41"><name pos:start="141:13" pos:end="141:21">partition</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:41">previous_partition</name></name></expr></argument>, <argument pos:start="141:44" pos:end="141:59"><expr pos:start="141:44" pos:end="141:59"><name pos:start="141:44" pos:end="141:59">footer_partition</name></expr></argument>,

            <argument pos:start="143:13" pos:end="143:32"><expr pos:start="143:13" pos:end="143:32"><name pos:start="143:13" pos:end="143:32"><name pos:start="143:13" pos:end="143:21">partition</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:32">index_sid</name></name></expr></argument>, <argument pos:start="143:35" pos:end="143:53"><expr pos:start="143:35" pos:end="143:53"><name pos:start="143:35" pos:end="143:53"><name pos:start="143:35" pos:end="143:43">partition</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:53">body_sid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="147:5" pos:end="169:100"><if pos:start="147:5" pos:end="147:56">if      <condition pos:start="147:13" pos:end="147:40">(<expr pos:start="147:14" pos:end="147:39"><name pos:start="147:14" pos:end="147:19"><name pos:start="147:14" pos:end="147:15">op</name><index pos:start="147:16" pos:end="147:19">[<expr pos:start="147:17" pos:end="147:18"><literal type="number" pos:start="147:17" pos:end="147:18">12</literal></expr>]</index></name> <operator pos:start="147:21" pos:end="147:22">==</operator> <literal type="number" pos:start="147:24" pos:end="147:24">1</literal> <operator pos:start="147:26" pos:end="147:27">&amp;&amp;</operator> <name pos:start="147:29" pos:end="147:34"><name pos:start="147:29" pos:end="147:30">op</name><index pos:start="147:31" pos:end="147:34">[<expr pos:start="147:32" pos:end="147:33"><literal type="number" pos:start="147:32" pos:end="147:33">13</literal></expr>]</index></name> <operator pos:start="147:36" pos:end="147:37">==</operator> <literal type="number" pos:start="147:39" pos:end="147:39">1</literal></expr>)</condition><block type="pseudo" pos:start="147:42" pos:end="147:56"><block_content pos:start="147:42" pos:end="147:56"> <expr_stmt pos:start="147:42" pos:end="147:56"><expr pos:start="147:42" pos:end="147:55"><name pos:start="147:42" pos:end="147:48"><name pos:start="147:42" pos:end="147:44">mxf</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:48">op</name></name> <operator pos:start="147:50" pos:end="147:50">=</operator> <name pos:start="147:52" pos:end="147:55">OP1a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="149:5" pos:end="149:56">else if <condition pos:start="149:13" pos:end="149:40">(<expr pos:start="149:14" pos:end="149:39"><name pos:start="149:14" pos:end="149:19"><name pos:start="149:14" pos:end="149:15">op</name><index pos:start="149:16" pos:end="149:19">[<expr pos:start="149:17" pos:end="149:18"><literal type="number" pos:start="149:17" pos:end="149:18">12</literal></expr>]</index></name> <operator pos:start="149:21" pos:end="149:22">==</operator> <literal type="number" pos:start="149:24" pos:end="149:24">1</literal> <operator pos:start="149:26" pos:end="149:27">&amp;&amp;</operator> <name pos:start="149:29" pos:end="149:34"><name pos:start="149:29" pos:end="149:30">op</name><index pos:start="149:31" pos:end="149:34">[<expr pos:start="149:32" pos:end="149:33"><literal type="number" pos:start="149:32" pos:end="149:33">13</literal></expr>]</index></name> <operator pos:start="149:36" pos:end="149:37">==</operator> <literal type="number" pos:start="149:39" pos:end="149:39">2</literal></expr>)</condition><block type="pseudo" pos:start="149:42" pos:end="149:56"><block_content pos:start="149:42" pos:end="149:56"> <expr_stmt pos:start="149:42" pos:end="149:56"><expr pos:start="149:42" pos:end="149:55"><name pos:start="149:42" pos:end="149:48"><name pos:start="149:42" pos:end="149:44">mxf</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:48">op</name></name> <operator pos:start="149:50" pos:end="149:50">=</operator> <name pos:start="149:52" pos:end="149:55">OP1b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="151:5" pos:end="151:56">else if <condition pos:start="151:13" pos:end="151:40">(<expr pos:start="151:14" pos:end="151:39"><name pos:start="151:14" pos:end="151:19"><name pos:start="151:14" pos:end="151:15">op</name><index pos:start="151:16" pos:end="151:19">[<expr pos:start="151:17" pos:end="151:18"><literal type="number" pos:start="151:17" pos:end="151:18">12</literal></expr>]</index></name> <operator pos:start="151:21" pos:end="151:22">==</operator> <literal type="number" pos:start="151:24" pos:end="151:24">1</literal> <operator pos:start="151:26" pos:end="151:27">&amp;&amp;</operator> <name pos:start="151:29" pos:end="151:34"><name pos:start="151:29" pos:end="151:30">op</name><index pos:start="151:31" pos:end="151:34">[<expr pos:start="151:32" pos:end="151:33"><literal type="number" pos:start="151:32" pos:end="151:33">13</literal></expr>]</index></name> <operator pos:start="151:36" pos:end="151:37">==</operator> <literal type="number" pos:start="151:39" pos:end="151:39">3</literal></expr>)</condition><block type="pseudo" pos:start="151:42" pos:end="151:56"><block_content pos:start="151:42" pos:end="151:56"> <expr_stmt pos:start="151:42" pos:end="151:56"><expr pos:start="151:42" pos:end="151:55"><name pos:start="151:42" pos:end="151:48"><name pos:start="151:42" pos:end="151:44">mxf</name><operator pos:start="151:45" pos:end="151:46">-&gt;</operator><name pos:start="151:47" pos:end="151:48">op</name></name> <operator pos:start="151:50" pos:end="151:50">=</operator> <name pos:start="151:52" pos:end="151:55">OP1c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="153:5" pos:end="153:56">else if <condition pos:start="153:13" pos:end="153:40">(<expr pos:start="153:14" pos:end="153:39"><name pos:start="153:14" pos:end="153:19"><name pos:start="153:14" pos:end="153:15">op</name><index pos:start="153:16" pos:end="153:19">[<expr pos:start="153:17" pos:end="153:18"><literal type="number" pos:start="153:17" pos:end="153:18">12</literal></expr>]</index></name> <operator pos:start="153:21" pos:end="153:22">==</operator> <literal type="number" pos:start="153:24" pos:end="153:24">2</literal> <operator pos:start="153:26" pos:end="153:27">&amp;&amp;</operator> <name pos:start="153:29" pos:end="153:34"><name pos:start="153:29" pos:end="153:30">op</name><index pos:start="153:31" pos:end="153:34">[<expr pos:start="153:32" pos:end="153:33"><literal type="number" pos:start="153:32" pos:end="153:33">13</literal></expr>]</index></name> <operator pos:start="153:36" pos:end="153:37">==</operator> <literal type="number" pos:start="153:39" pos:end="153:39">1</literal></expr>)</condition><block type="pseudo" pos:start="153:42" pos:end="153:56"><block_content pos:start="153:42" pos:end="153:56"> <expr_stmt pos:start="153:42" pos:end="153:56"><expr pos:start="153:42" pos:end="153:55"><name pos:start="153:42" pos:end="153:48"><name pos:start="153:42" pos:end="153:44">mxf</name><operator pos:start="153:45" pos:end="153:46">-&gt;</operator><name pos:start="153:47" pos:end="153:48">op</name></name> <operator pos:start="153:50" pos:end="153:50">=</operator> <name pos:start="153:52" pos:end="153:55">OP2a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="155:5" pos:end="155:56">else if <condition pos:start="155:13" pos:end="155:40">(<expr pos:start="155:14" pos:end="155:39"><name pos:start="155:14" pos:end="155:19"><name pos:start="155:14" pos:end="155:15">op</name><index pos:start="155:16" pos:end="155:19">[<expr pos:start="155:17" pos:end="155:18"><literal type="number" pos:start="155:17" pos:end="155:18">12</literal></expr>]</index></name> <operator pos:start="155:21" pos:end="155:22">==</operator> <literal type="number" pos:start="155:24" pos:end="155:24">2</literal> <operator pos:start="155:26" pos:end="155:27">&amp;&amp;</operator> <name pos:start="155:29" pos:end="155:34"><name pos:start="155:29" pos:end="155:30">op</name><index pos:start="155:31" pos:end="155:34">[<expr pos:start="155:32" pos:end="155:33"><literal type="number" pos:start="155:32" pos:end="155:33">13</literal></expr>]</index></name> <operator pos:start="155:36" pos:end="155:37">==</operator> <literal type="number" pos:start="155:39" pos:end="155:39">2</literal></expr>)</condition><block type="pseudo" pos:start="155:42" pos:end="155:56"><block_content pos:start="155:42" pos:end="155:56"> <expr_stmt pos:start="155:42" pos:end="155:56"><expr pos:start="155:42" pos:end="155:55"><name pos:start="155:42" pos:end="155:48"><name pos:start="155:42" pos:end="155:44">mxf</name><operator pos:start="155:45" pos:end="155:46">-&gt;</operator><name pos:start="155:47" pos:end="155:48">op</name></name> <operator pos:start="155:50" pos:end="155:50">=</operator> <name pos:start="155:52" pos:end="155:55">OP2b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="157:5" pos:end="157:56">else if <condition pos:start="157:13" pos:end="157:40">(<expr pos:start="157:14" pos:end="157:39"><name pos:start="157:14" pos:end="157:19"><name pos:start="157:14" pos:end="157:15">op</name><index pos:start="157:16" pos:end="157:19">[<expr pos:start="157:17" pos:end="157:18"><literal type="number" pos:start="157:17" pos:end="157:18">12</literal></expr>]</index></name> <operator pos:start="157:21" pos:end="157:22">==</operator> <literal type="number" pos:start="157:24" pos:end="157:24">2</literal> <operator pos:start="157:26" pos:end="157:27">&amp;&amp;</operator> <name pos:start="157:29" pos:end="157:34"><name pos:start="157:29" pos:end="157:30">op</name><index pos:start="157:31" pos:end="157:34">[<expr pos:start="157:32" pos:end="157:33"><literal type="number" pos:start="157:32" pos:end="157:33">13</literal></expr>]</index></name> <operator pos:start="157:36" pos:end="157:37">==</operator> <literal type="number" pos:start="157:39" pos:end="157:39">3</literal></expr>)</condition><block type="pseudo" pos:start="157:42" pos:end="157:56"><block_content pos:start="157:42" pos:end="157:56"> <expr_stmt pos:start="157:42" pos:end="157:56"><expr pos:start="157:42" pos:end="157:55"><name pos:start="157:42" pos:end="157:48"><name pos:start="157:42" pos:end="157:44">mxf</name><operator pos:start="157:45" pos:end="157:46">-&gt;</operator><name pos:start="157:47" pos:end="157:48">op</name></name> <operator pos:start="157:50" pos:end="157:50">=</operator> <name pos:start="157:52" pos:end="157:55">OP2c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="159:5" pos:end="159:56">else if <condition pos:start="159:13" pos:end="159:40">(<expr pos:start="159:14" pos:end="159:39"><name pos:start="159:14" pos:end="159:19"><name pos:start="159:14" pos:end="159:15">op</name><index pos:start="159:16" pos:end="159:19">[<expr pos:start="159:17" pos:end="159:18"><literal type="number" pos:start="159:17" pos:end="159:18">12</literal></expr>]</index></name> <operator pos:start="159:21" pos:end="159:22">==</operator> <literal type="number" pos:start="159:24" pos:end="159:24">3</literal> <operator pos:start="159:26" pos:end="159:27">&amp;&amp;</operator> <name pos:start="159:29" pos:end="159:34"><name pos:start="159:29" pos:end="159:30">op</name><index pos:start="159:31" pos:end="159:34">[<expr pos:start="159:32" pos:end="159:33"><literal type="number" pos:start="159:32" pos:end="159:33">13</literal></expr>]</index></name> <operator pos:start="159:36" pos:end="159:37">==</operator> <literal type="number" pos:start="159:39" pos:end="159:39">1</literal></expr>)</condition><block type="pseudo" pos:start="159:42" pos:end="159:56"><block_content pos:start="159:42" pos:end="159:56"> <expr_stmt pos:start="159:42" pos:end="159:56"><expr pos:start="159:42" pos:end="159:55"><name pos:start="159:42" pos:end="159:48"><name pos:start="159:42" pos:end="159:44">mxf</name><operator pos:start="159:45" pos:end="159:46">-&gt;</operator><name pos:start="159:47" pos:end="159:48">op</name></name> <operator pos:start="159:50" pos:end="159:50">=</operator> <name pos:start="159:52" pos:end="159:55">OP3a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="161:5" pos:end="161:56">else if <condition pos:start="161:13" pos:end="161:40">(<expr pos:start="161:14" pos:end="161:39"><name pos:start="161:14" pos:end="161:19"><name pos:start="161:14" pos:end="161:15">op</name><index pos:start="161:16" pos:end="161:19">[<expr pos:start="161:17" pos:end="161:18"><literal type="number" pos:start="161:17" pos:end="161:18">12</literal></expr>]</index></name> <operator pos:start="161:21" pos:end="161:22">==</operator> <literal type="number" pos:start="161:24" pos:end="161:24">3</literal> <operator pos:start="161:26" pos:end="161:27">&amp;&amp;</operator> <name pos:start="161:29" pos:end="161:34"><name pos:start="161:29" pos:end="161:30">op</name><index pos:start="161:31" pos:end="161:34">[<expr pos:start="161:32" pos:end="161:33"><literal type="number" pos:start="161:32" pos:end="161:33">13</literal></expr>]</index></name> <operator pos:start="161:36" pos:end="161:37">==</operator> <literal type="number" pos:start="161:39" pos:end="161:39">2</literal></expr>)</condition><block type="pseudo" pos:start="161:42" pos:end="161:56"><block_content pos:start="161:42" pos:end="161:56"> <expr_stmt pos:start="161:42" pos:end="161:56"><expr pos:start="161:42" pos:end="161:55"><name pos:start="161:42" pos:end="161:48"><name pos:start="161:42" pos:end="161:44">mxf</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:48">op</name></name> <operator pos:start="161:50" pos:end="161:50">=</operator> <name pos:start="161:52" pos:end="161:55">OP3b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="163:5" pos:end="163:56">else if <condition pos:start="163:13" pos:end="163:40">(<expr pos:start="163:14" pos:end="163:39"><name pos:start="163:14" pos:end="163:19"><name pos:start="163:14" pos:end="163:15">op</name><index pos:start="163:16" pos:end="163:19">[<expr pos:start="163:17" pos:end="163:18"><literal type="number" pos:start="163:17" pos:end="163:18">12</literal></expr>]</index></name> <operator pos:start="163:21" pos:end="163:22">==</operator> <literal type="number" pos:start="163:24" pos:end="163:24">3</literal> <operator pos:start="163:26" pos:end="163:27">&amp;&amp;</operator> <name pos:start="163:29" pos:end="163:34"><name pos:start="163:29" pos:end="163:30">op</name><index pos:start="163:31" pos:end="163:34">[<expr pos:start="163:32" pos:end="163:33"><literal type="number" pos:start="163:32" pos:end="163:33">13</literal></expr>]</index></name> <operator pos:start="163:36" pos:end="163:37">==</operator> <literal type="number" pos:start="163:39" pos:end="163:39">3</literal></expr>)</condition><block type="pseudo" pos:start="163:42" pos:end="163:56"><block_content pos:start="163:42" pos:end="163:56"> <expr_stmt pos:start="163:42" pos:end="163:56"><expr pos:start="163:42" pos:end="163:55"><name pos:start="163:42" pos:end="163:48"><name pos:start="163:42" pos:end="163:44">mxf</name><operator pos:start="163:45" pos:end="163:46">-&gt;</operator><name pos:start="163:47" pos:end="163:48">op</name></name> <operator pos:start="163:50" pos:end="163:50">=</operator> <name pos:start="163:52" pos:end="163:55">OP3c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="165:5" pos:end="165:58">else if <condition pos:start="165:13" pos:end="165:28">(<expr pos:start="165:14" pos:end="165:27"><name pos:start="165:14" pos:end="165:19"><name pos:start="165:14" pos:end="165:15">op</name><index pos:start="165:16" pos:end="165:19">[<expr pos:start="165:17" pos:end="165:18"><literal type="number" pos:start="165:17" pos:end="165:18">12</literal></expr>]</index></name> <operator pos:start="165:21" pos:end="165:22">==</operator> <literal type="number" pos:start="165:24" pos:end="165:27">0x10</literal></expr>)</condition><block type="pseudo" pos:start="165:42" pos:end="165:58"><block_content pos:start="165:42" pos:end="165:58">             <expr_stmt pos:start="165:42" pos:end="165:58"><expr pos:start="165:42" pos:end="165:57"><name pos:start="165:42" pos:end="165:48"><name pos:start="165:42" pos:end="165:44">mxf</name><operator pos:start="165:45" pos:end="165:46">-&gt;</operator><name pos:start="165:47" pos:end="165:48">op</name></name> <operator pos:start="165:50" pos:end="165:50">=</operator> <name pos:start="165:52" pos:end="165:57">OPAtom</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="167:5" pos:end="169:100">else<block type="pseudo" pos:start="169:9" pos:end="169:100"><block_content pos:start="169:9" pos:end="169:100">

        <expr_stmt pos:start="169:9" pos:end="169:100"><expr pos:start="169:9" pos:end="169:99"><call pos:start="169:9" pos:end="169:99"><name pos:start="169:9" pos:end="169:14">av_log</name><argument_list pos:start="169:15" pos:end="169:99">(<argument pos:start="169:16" pos:end="169:22"><expr pos:start="169:16" pos:end="169:22"><name pos:start="169:16" pos:end="169:22"><name pos:start="169:16" pos:end="169:18">mxf</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:22">fc</name></name></expr></argument>, <argument pos:start="169:25" pos:end="169:36"><expr pos:start="169:25" pos:end="169:36"><name pos:start="169:25" pos:end="169:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:39" pos:end="169:82"><expr pos:start="169:39" pos:end="169:82"><literal type="string" pos:start="169:39" pos:end="169:82">"unknown operational pattern: %02xh %02xh\n"</literal></expr></argument>, <argument pos:start="169:85" pos:end="169:90"><expr pos:start="169:85" pos:end="169:90"><name pos:start="169:85" pos:end="169:90"><name pos:start="169:85" pos:end="169:86">op</name><index pos:start="169:87" pos:end="169:90">[<expr pos:start="169:88" pos:end="169:89"><literal type="number" pos:start="169:88" pos:end="169:89">12</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:93" pos:end="169:98"><expr pos:start="169:93" pos:end="169:98"><name pos:start="169:93" pos:end="169:98"><name pos:start="169:93" pos:end="169:94">op</name><index pos:start="169:95" pos:end="169:98">[<expr pos:start="169:96" pos:end="169:97"><literal type="number" pos:start="169:96" pos:end="169:97">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
