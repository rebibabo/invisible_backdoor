<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21391.c" pos:tabs="8"><function pos:start="1:1" pos:end="381:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">nut_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="381:1">{<block_content pos:start="5:5" pos:end="379:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NUTContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">nut</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">bc</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:76"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:22">tmp_time</name></decl>, <decl pos:start="11:25" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:33">tmp_flags</name></decl>,<decl pos:start="11:35" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:35" pos:end="11:44">tmp_stream</name></decl>, <decl pos:start="11:47" pos:end="11:53"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:47" pos:end="11:53">tmp_mul</name></decl>, <decl pos:start="11:56" pos:end="11:63"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:56" pos:end="11:63">tmp_size</name></decl>, <decl pos:start="11:66" pos:end="11:75"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:66" pos:end="11:75">tmp_fields</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">nut</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">avf</name></name><operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:15">s</name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="19:5" pos:end="21:56"><expr pos:start="19:5" pos:end="21:55"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:7">nut</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">stream</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator>	

	<call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:18">av_mallocz</name><argument_list pos:start="21:19" pos:end="21:55">(<argument pos:start="21:20" pos:end="21:54"><expr pos:start="21:20" pos:end="21:54"><sizeof pos:start="21:20" pos:end="21:40">sizeof<argument_list pos:start="21:26" pos:end="21:40">(<argument pos:start="21:27" pos:end="21:39"><expr pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:39">StreamContext</name></expr></argument>)</argument_list></sizeof><operator pos:start="21:41" pos:end="21:41">*</operator><name pos:start="21:42" pos:end="21:54"><name pos:start="21:42" pos:end="21:42">s</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:54">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        



    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:14">put_buffer</name><argument_list pos:start="27:15" pos:end="27:48">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">bc</name></expr></argument>, <argument pos:start="27:20" pos:end="27:28"><expr pos:start="27:20" pos:end="27:28"><name pos:start="27:20" pos:end="27:28">ID_STRING</name></expr></argument>, <argument pos:start="27:31" pos:end="27:47"><expr pos:start="27:31" pos:end="27:47"><call pos:start="27:31" pos:end="27:47"><name pos:start="27:31" pos:end="27:36">strlen</name><argument_list pos:start="27:37" pos:end="27:47">(<argument pos:start="27:38" pos:end="27:46"><expr pos:start="27:38" pos:end="27:46"><name pos:start="27:38" pos:end="27:46">ID_STRING</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><call pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:12">put_byte</name><argument_list pos:start="29:13" pos:end="29:19">(<argument pos:start="29:14" pos:end="29:15"><expr pos:start="29:14" pos:end="29:15"><name pos:start="29:14" pos:end="29:15">bc</name></expr></argument>, <argument pos:start="29:18" pos:end="29:18"><expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:7">nut</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:21">packet_start</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">2</literal></expr>]</index></name><operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="31:39"><name pos:start="31:27" pos:end="31:35">url_ftell</name><argument_list pos:start="31:36" pos:end="31:39">(<argument pos:start="31:37" pos:end="31:38"><expr pos:start="31:37" pos:end="31:38"><name pos:start="31:37" pos:end="31:38">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="35:5" pos:end="35:21">/* main header */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:12">put_be64</name><argument_list pos:start="37:13" pos:end="37:32">(<argument pos:start="37:14" pos:end="37:15"><expr pos:start="37:14" pos:end="37:15"><name pos:start="37:14" pos:end="37:15">bc</name></expr></argument>, <argument pos:start="37:18" pos:end="37:31"><expr pos:start="37:18" pos:end="37:31"><name pos:start="37:18" pos:end="37:31">MAIN_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:44"><expr pos:start="39:5" pos:end="39:43"><call pos:start="39:5" pos:end="39:43"><name pos:start="39:5" pos:end="39:20">put_packetheader</name><argument_list pos:start="39:21" pos:end="39:43">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">nut</name></expr></argument>, <argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">bc</name></expr></argument>, <argument pos:start="39:31" pos:end="39:39"><expr pos:start="39:31" pos:end="39:39"><literal type="number" pos:start="39:31" pos:end="39:34">120</literal><operator pos:start="39:34" pos:end="39:34">+</operator><literal type="number" pos:start="39:35" pos:end="39:35">5</literal><operator pos:start="39:36" pos:end="39:36">*</operator><literal type="number" pos:start="39:37" pos:end="39:39">256</literal></expr></argument>, <argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:17"><expr pos:start="41:5" pos:end="41:16"><call pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:9">put_v</name><argument_list pos:start="41:10" pos:end="41:16">(<argument pos:start="41:11" pos:end="41:12"><expr pos:start="41:11" pos:end="41:12"><name pos:start="41:11" pos:end="41:12">bc</name></expr></argument>, <argument pos:start="41:15" pos:end="41:15"><expr pos:start="41:15" pos:end="41:15"><literal type="number" pos:start="41:15" pos:end="41:15">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:19" pos:end="41:31">/* version */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><call pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:9">put_v</name><argument_list pos:start="43:10" pos:end="43:28">(<argument pos:start="43:11" pos:end="43:12"><expr pos:start="43:11" pos:end="43:12"><name pos:start="43:11" pos:end="43:12">bc</name></expr></argument>, <argument pos:start="43:15" pos:end="43:27"><expr pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:15">s</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:27">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><call pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:9">put_v</name><argument_list pos:start="45:10" pos:end="45:27">(<argument pos:start="45:11" pos:end="45:12"><expr pos:start="45:11" pos:end="45:12"><name pos:start="45:11" pos:end="45:12">bc</name></expr></argument>, <argument pos:start="45:15" pos:end="45:26"><expr pos:start="45:15" pos:end="45:26"><name pos:start="45:15" pos:end="45:26">MAX_DISTANCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><call pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:9">put_v</name><argument_list pos:start="47:10" pos:end="47:33">(<argument pos:start="47:11" pos:end="47:12"><expr pos:start="47:11" pos:end="47:12"><name pos:start="47:11" pos:end="47:12">bc</name></expr></argument>, <argument pos:start="47:15" pos:end="47:32"><expr pos:start="47:15" pos:end="47:32"><name pos:start="47:15" pos:end="47:32">MAX_SHORT_DISTANCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><call pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:9">put_v</name><argument_list pos:start="51:10" pos:end="51:30">(<argument pos:start="51:11" pos:end="51:12"><expr pos:start="51:11" pos:end="51:12"><name pos:start="51:11" pos:end="51:12">bc</name></expr></argument>, <argument pos:start="51:15" pos:end="51:29"><expr pos:start="51:15" pos:end="51:29"><name pos:start="51:15" pos:end="51:27"><name pos:start="51:15" pos:end="51:17">nut</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:27">rate_num</name></name><operator pos:start="51:28" pos:end="51:28">=</operator><literal type="number" pos:start="51:29" pos:end="51:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><call pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:9">put_v</name><argument_list pos:start="53:10" pos:end="53:30">(<argument pos:start="53:11" pos:end="53:12"><expr pos:start="53:11" pos:end="53:12"><name pos:start="53:11" pos:end="53:12">bc</name></expr></argument>, <argument pos:start="53:15" pos:end="53:29"><expr pos:start="53:15" pos:end="53:29"><name pos:start="53:15" pos:end="53:27"><name pos:start="53:15" pos:end="53:17">nut</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:27">rate_den</name></name><operator pos:start="53:28" pos:end="53:28">=</operator><literal type="number" pos:start="53:29" pos:end="53:29">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:9">put_v</name><argument_list pos:start="55:10" pos:end="55:44">(<argument pos:start="55:11" pos:end="55:12"><expr pos:start="55:11" pos:end="55:12"><name pos:start="55:11" pos:end="55:12">bc</name></expr></argument>, <argument pos:start="55:15" pos:end="55:43"><expr pos:start="55:15" pos:end="55:43"><name pos:start="55:15" pos:end="55:34"><name pos:start="55:15" pos:end="55:17">nut</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:34">short_startcode</name></name><operator pos:start="55:35" pos:end="55:35">=</operator><literal type="number" pos:start="55:36" pos:end="55:43">0x4EFE79</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><call pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:20">build_frame_code</name><argument_list pos:start="59:21" pos:end="59:23">(<argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:55"><expr pos:start="61:5" pos:end="61:54"><call pos:start="61:5" pos:end="61:54"><name pos:start="61:5" pos:end="61:10">assert</name><argument_list pos:start="61:11" pos:end="61:54">(<argument pos:start="61:12" pos:end="61:53"><expr pos:start="61:12" pos:end="61:53"><name pos:start="61:12" pos:end="61:31"><name pos:start="61:12" pos:end="61:14">nut</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:26">frame_code</name><index pos:start="61:27" pos:end="61:31">[<expr pos:start="61:28" pos:end="61:30"><literal type="char" pos:start="61:28" pos:end="61:30">'N'</literal></expr>]</index></name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:37">flags</name> <operator pos:start="61:39" pos:end="61:40">==</operator> <name pos:start="61:42" pos:end="61:53">FLAG_INVALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="65:5" pos:end="65:77"><expr pos:start="65:5" pos:end="65:76"><name pos:start="65:5" pos:end="65:12">tmp_time</name><operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:23">tmp_flags</name><operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:35">tmp_stream</name><operator pos:start="65:36" pos:end="65:36">=</operator> <name pos:start="65:38" pos:end="65:44">tmp_mul</name><operator pos:start="65:45" pos:end="65:45">=</operator> <name pos:start="65:47" pos:end="65:54">tmp_size</name><operator pos:start="65:55" pos:end="65:55">=</operator> <comment type="block" pos:start="65:57" pos:end="65:68">/*tmp_res=*/</comment> <name pos:start="65:70" pos:end="65:76">INT_MAX</name></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="135:5">for<control pos:start="67:8" pos:end="67:20">(<init pos:start="67:9" pos:end="67:12"><expr pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:9">i</name><operator pos:start="67:10" pos:end="67:10">=</operator><literal type="number" pos:start="67:11" pos:end="67:11">0</literal></expr>;</init> <condition pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name><operator pos:start="67:15" pos:end="67:15">&lt;</operator><literal type="number" pos:start="67:16" pos:end="67:18">256</literal></expr>;</condition><incr/>)</control><block pos:start="67:21" pos:end="135:5">{<block_content pos:start="69:9" pos:end="133:38">

        <expr_stmt pos:start="69:9" pos:end="69:21"><expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:18">tmp_fields</name><operator pos:start="69:19" pos:end="69:19">=</operator><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:20"><expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:16">tmp_size</name><operator pos:start="71:17" pos:end="71:17">=</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="73:74"><if pos:start="73:9" pos:end="73:74">if<condition pos:start="73:11" pos:end="73:60">(<expr pos:start="73:12" pos:end="73:59"><name pos:start="73:12" pos:end="73:19">tmp_time</name>   <operator pos:start="73:23" pos:end="73:24">!=</operator> <name pos:start="73:26" pos:end="73:43"><name pos:start="73:26" pos:end="73:28">nut</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:40">frame_code</name><index pos:start="73:41" pos:end="73:43">[<expr pos:start="73:42" pos:end="73:42"><name pos:start="73:42" pos:end="73:42">i</name></expr>]</index></name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:59">timestamp_delta</name></expr>)</condition><block type="pseudo" pos:start="73:62" pos:end="73:74"><block_content pos:start="73:62" pos:end="73:74"> <expr_stmt pos:start="73:62" pos:end="73:74"><expr pos:start="73:62" pos:end="73:73"><name pos:start="73:62" pos:end="73:71">tmp_fields</name><operator pos:start="73:72" pos:end="73:72">=</operator><literal type="number" pos:start="73:73" pos:end="73:73">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="75:74"><if pos:start="75:9" pos:end="75:74">if<condition pos:start="75:11" pos:end="75:60">(<expr pos:start="75:12" pos:end="75:52"><name pos:start="75:12" pos:end="75:18">tmp_mul</name>    <operator pos:start="75:23" pos:end="75:24">!=</operator> <name pos:start="75:26" pos:end="75:43"><name pos:start="75:26" pos:end="75:28">nut</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:40">frame_code</name><index pos:start="75:41" pos:end="75:43">[<expr pos:start="75:42" pos:end="75:42"><name pos:start="75:42" pos:end="75:42">i</name></expr>]</index></name><operator pos:start="75:44" pos:end="75:44">.</operator><name pos:start="75:45" pos:end="75:52">size_mul</name></expr>       )</condition><block type="pseudo" pos:start="75:62" pos:end="75:74"><block_content pos:start="75:62" pos:end="75:74"> <expr_stmt pos:start="75:62" pos:end="75:74"><expr pos:start="75:62" pos:end="75:73"><name pos:start="75:62" pos:end="75:71">tmp_fields</name><operator pos:start="75:72" pos:end="75:72">=</operator><literal type="number" pos:start="75:73" pos:end="75:73">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="77:74"><if pos:start="77:9" pos:end="77:74">if<condition pos:start="77:11" pos:end="77:60">(<expr pos:start="77:12" pos:end="77:59"><name pos:start="77:12" pos:end="77:21">tmp_stream</name> <operator pos:start="77:23" pos:end="77:24">!=</operator> <name pos:start="77:26" pos:end="77:43"><name pos:start="77:26" pos:end="77:28">nut</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:40">frame_code</name><index pos:start="77:41" pos:end="77:43">[<expr pos:start="77:42" pos:end="77:42"><name pos:start="77:42" pos:end="77:42">i</name></expr>]</index></name><operator pos:start="77:44" pos:end="77:44">.</operator><name pos:start="77:45" pos:end="77:59">stream_id_plus1</name></expr>)</condition><block type="pseudo" pos:start="77:62" pos:end="77:74"><block_content pos:start="77:62" pos:end="77:74"> <expr_stmt pos:start="77:62" pos:end="77:74"><expr pos:start="77:62" pos:end="77:73"><name pos:start="77:62" pos:end="77:71">tmp_fields</name><operator pos:start="77:72" pos:end="77:72">=</operator><literal type="number" pos:start="77:73" pos:end="77:73">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="79:74"><if pos:start="79:9" pos:end="79:74">if<condition pos:start="79:11" pos:end="79:60">(<expr pos:start="79:12" pos:end="79:52"><name pos:start="79:12" pos:end="79:19">tmp_size</name>   <operator pos:start="79:23" pos:end="79:24">!=</operator> <name pos:start="79:26" pos:end="79:43"><name pos:start="79:26" pos:end="79:28">nut</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:40">frame_code</name><index pos:start="79:41" pos:end="79:43">[<expr pos:start="79:42" pos:end="79:42"><name pos:start="79:42" pos:end="79:42">i</name></expr>]</index></name><operator pos:start="79:44" pos:end="79:44">.</operator><name pos:start="79:45" pos:end="79:52">size_lsb</name></expr>       )</condition><block type="pseudo" pos:start="79:62" pos:end="79:74"><block_content pos:start="79:62" pos:end="79:74"> <expr_stmt pos:start="79:62" pos:end="79:74"><expr pos:start="79:62" pos:end="79:73"><name pos:start="79:62" pos:end="79:71">tmp_fields</name><operator pos:start="79:72" pos:end="79:72">=</operator><literal type="number" pos:start="79:73" pos:end="79:73">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="81:1" pos:end="81:76">//        if(tmp_res    != nut-&gt;frame_code[i].res            ) tmp_fields=5;</comment>



        <expr_stmt pos:start="85:9" pos:end="85:55"><expr pos:start="85:9" pos:end="85:54"><name pos:start="85:9" pos:end="85:16">tmp_time</name>  <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:38"><name pos:start="85:21" pos:end="85:23">nut</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:35">frame_code</name><index pos:start="85:36" pos:end="85:38">[<expr pos:start="85:37" pos:end="85:37"><name pos:start="85:37" pos:end="85:37">i</name></expr>]</index></name><operator pos:start="85:39" pos:end="85:39">.</operator><name pos:start="85:40" pos:end="85:54">timestamp_delta</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:17">tmp_flags</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:38"><name pos:start="87:21" pos:end="87:23">nut</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:35">frame_code</name><index pos:start="87:36" pos:end="87:38">[<expr pos:start="87:37" pos:end="87:37"><name pos:start="87:37" pos:end="87:37">i</name></expr>]</index></name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:44">flags</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:18">tmp_stream</name><operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:38"><name pos:start="89:21" pos:end="89:23">nut</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:35">frame_code</name><index pos:start="89:36" pos:end="89:38">[<expr pos:start="89:37" pos:end="89:37"><name pos:start="89:37" pos:end="89:37">i</name></expr>]</index></name><operator pos:start="89:39" pos:end="89:39">.</operator><name pos:start="89:40" pos:end="89:54">stream_id_plus1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:15">tmp_mul</name>   <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:23">nut</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:35">frame_code</name><index pos:start="91:36" pos:end="91:38">[<expr pos:start="91:37" pos:end="91:37"><name pos:start="91:37" pos:end="91:37">i</name></expr>]</index></name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:47">size_mul</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:48"><expr pos:start="93:9" pos:end="93:47"><name pos:start="93:9" pos:end="93:16">tmp_size</name>  <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:38"><name pos:start="93:21" pos:end="93:23">nut</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:35">frame_code</name><index pos:start="93:36" pos:end="93:38">[<expr pos:start="93:37" pos:end="93:37"><name pos:start="93:37" pos:end="93:37">i</name></expr>]</index></name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:47">size_lsb</name></expr>;</expr_stmt>

<comment type="line" pos:start="95:1" pos:end="95:45">//        tmp_res   = nut-&gt;frame_code[i].res;</comment>

        

        <for pos:start="99:9" pos:end="113:9">for<control pos:start="99:12" pos:end="99:32">(<init pos:start="99:13" pos:end="99:16"><expr pos:start="99:13" pos:end="99:15"><name pos:start="99:13" pos:end="99:13">j</name><operator pos:start="99:14" pos:end="99:14">=</operator><literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>;</init> <condition pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">i</name><operator pos:start="99:19" pos:end="99:19">&lt;</operator><literal type="number" pos:start="99:20" pos:end="99:22">256</literal></expr>;</condition> <incr pos:start="99:25" pos:end="99:31"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:25">j</name><operator pos:start="99:26" pos:end="99:27">++</operator></expr><operator pos:start="99:28" pos:end="99:28">,</operator><expr pos:start="99:29" pos:end="99:31"><name pos:start="99:29" pos:end="99:29">i</name><operator pos:start="99:30" pos:end="99:31">++</operator></expr></incr>)</control><block pos:start="99:33" pos:end="113:9">{<block_content pos:start="101:13" pos:end="109:71">

            <if_stmt pos:start="101:13" pos:end="101:71"><if pos:start="101:13" pos:end="101:71">if<condition pos:start="101:15" pos:end="101:64">(<expr pos:start="101:16" pos:end="101:61"><name pos:start="101:16" pos:end="101:33"><name pos:start="101:16" pos:end="101:18">nut</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:30">frame_code</name><index pos:start="101:31" pos:end="101:33">[<expr pos:start="101:32" pos:end="101:32"><name pos:start="101:32" pos:end="101:32">i</name></expr>]</index></name><operator pos:start="101:34" pos:end="101:34">.</operator><name pos:start="101:35" pos:end="101:49">timestamp_delta</name> <operator pos:start="101:51" pos:end="101:52">!=</operator> <name pos:start="101:54" pos:end="101:61">tmp_time</name></expr>  )</condition><block type="pseudo" pos:start="101:66" pos:end="101:71"><block_content pos:start="101:66" pos:end="101:71"> <break pos:start="101:66" pos:end="101:71">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="103:13" pos:end="103:71"><if pos:start="103:13" pos:end="103:71">if<condition pos:start="103:15" pos:end="103:64">(<expr pos:start="103:16" pos:end="103:62"><name pos:start="103:16" pos:end="103:33"><name pos:start="103:16" pos:end="103:18">nut</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:30">frame_code</name><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">i</name></expr>]</index></name><operator pos:start="103:34" pos:end="103:34">.</operator><name pos:start="103:35" pos:end="103:39">flags</name>           <operator pos:start="103:51" pos:end="103:52">!=</operator> <name pos:start="103:54" pos:end="103:62">tmp_flags</name></expr> )</condition><block type="pseudo" pos:start="103:66" pos:end="103:71"><block_content pos:start="103:66" pos:end="103:71"> <break pos:start="103:66" pos:end="103:71">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="105:13" pos:end="105:71"><if pos:start="105:13" pos:end="105:71">if<condition pos:start="105:15" pos:end="105:64">(<expr pos:start="105:16" pos:end="105:63"><name pos:start="105:16" pos:end="105:33"><name pos:start="105:16" pos:end="105:18">nut</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:30">frame_code</name><index pos:start="105:31" pos:end="105:33">[<expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">i</name></expr>]</index></name><operator pos:start="105:34" pos:end="105:34">.</operator><name pos:start="105:35" pos:end="105:49">stream_id_plus1</name> <operator pos:start="105:51" pos:end="105:52">!=</operator> <name pos:start="105:54" pos:end="105:63">tmp_stream</name></expr>)</condition><block type="pseudo" pos:start="105:66" pos:end="105:71"><block_content pos:start="105:66" pos:end="105:71"> <break pos:start="105:66" pos:end="105:71">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="107:71"><if pos:start="107:13" pos:end="107:71">if<condition pos:start="107:15" pos:end="107:64">(<expr pos:start="107:16" pos:end="107:60"><name pos:start="107:16" pos:end="107:33"><name pos:start="107:16" pos:end="107:18">nut</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:30">frame_code</name><index pos:start="107:31" pos:end="107:33">[<expr pos:start="107:32" pos:end="107:32"><name pos:start="107:32" pos:end="107:32">i</name></expr>]</index></name><operator pos:start="107:34" pos:end="107:34">.</operator><name pos:start="107:35" pos:end="107:42">size_mul</name>        <operator pos:start="107:51" pos:end="107:52">!=</operator> <name pos:start="107:54" pos:end="107:60">tmp_mul</name></expr>   )</condition><block type="pseudo" pos:start="107:66" pos:end="107:71"><block_content pos:start="107:66" pos:end="107:71"> <break pos:start="107:66" pos:end="107:71">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="109:13" pos:end="109:71"><if pos:start="109:13" pos:end="109:71">if<condition pos:start="109:15" pos:end="109:64">(<expr pos:start="109:16" pos:end="109:63"><name pos:start="109:16" pos:end="109:33"><name pos:start="109:16" pos:end="109:18">nut</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:30">frame_code</name><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><name pos:start="109:32" pos:end="109:32">i</name></expr>]</index></name><operator pos:start="109:34" pos:end="109:34">.</operator><name pos:start="109:35" pos:end="109:42">size_lsb</name>        <operator pos:start="109:51" pos:end="109:52">!=</operator> <name pos:start="109:54" pos:end="109:61">tmp_size</name><operator pos:start="109:62" pos:end="109:62">+</operator><name pos:start="109:63" pos:end="109:63">j</name></expr>)</condition><block type="pseudo" pos:start="109:66" pos:end="109:71"><block_content pos:start="109:66" pos:end="109:71"> <break pos:start="109:66" pos:end="109:71">break;</break></block_content></block></if></if_stmt>

<comment type="line" pos:start="111:1" pos:end="111:73">//            if(nut-&gt;frame_code[i].res             != tmp_res   ) break;</comment>

        </block_content>}</block></for>

        <if_stmt pos:start="115:9" pos:end="115:49"><if pos:start="115:9" pos:end="115:49">if<condition pos:start="115:11" pos:end="115:35">(<expr pos:start="115:12" pos:end="115:34"><name pos:start="115:12" pos:end="115:12">j</name> <operator pos:start="115:14" pos:end="115:15">!=</operator> <name pos:start="115:17" pos:end="115:23">tmp_mul</name> <operator pos:start="115:25" pos:end="115:25">-</operator> <name pos:start="115:27" pos:end="115:34">tmp_size</name></expr>)</condition><block type="pseudo" pos:start="115:37" pos:end="115:49"><block_content pos:start="115:37" pos:end="115:49"> <expr_stmt pos:start="115:37" pos:end="115:49"><expr pos:start="115:37" pos:end="115:48"><name pos:start="115:37" pos:end="115:46">tmp_fields</name><operator pos:start="115:47" pos:end="115:47">=</operator><literal type="number" pos:start="115:48" pos:end="115:48">6</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:29"><expr pos:start="119:9" pos:end="119:28"><call pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:13">put_v</name><argument_list pos:start="119:14" pos:end="119:28">(<argument pos:start="119:15" pos:end="119:16"><expr pos:start="119:15" pos:end="119:16"><name pos:start="119:15" pos:end="119:16">bc</name></expr></argument>, <argument pos:start="119:19" pos:end="119:27"><expr pos:start="119:19" pos:end="119:27"><name pos:start="119:19" pos:end="119:27">tmp_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:30"><expr pos:start="121:9" pos:end="121:29"><call pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:13">put_v</name><argument_list pos:start="121:14" pos:end="121:29">(<argument pos:start="121:15" pos:end="121:16"><expr pos:start="121:15" pos:end="121:16"><name pos:start="121:15" pos:end="121:16">bc</name></expr></argument>, <argument pos:start="121:19" pos:end="121:28"><expr pos:start="121:19" pos:end="121:28"><name pos:start="121:19" pos:end="121:28">tmp_fields</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="123:45"><if pos:start="123:9" pos:end="123:45">if<condition pos:start="123:11" pos:end="123:24">(<expr pos:start="123:12" pos:end="123:23"><name pos:start="123:12" pos:end="123:21">tmp_fields</name><operator pos:start="123:22" pos:end="123:22">&gt;</operator><literal type="number" pos:start="123:23" pos:end="123:23">0</literal></expr>)</condition><block type="pseudo" pos:start="123:26" pos:end="123:45"><block_content pos:start="123:26" pos:end="123:45"> <expr_stmt pos:start="123:26" pos:end="123:45"><expr pos:start="123:26" pos:end="123:44"><call pos:start="123:26" pos:end="123:44"><name pos:start="123:26" pos:end="123:30">put_s</name><argument_list pos:start="123:31" pos:end="123:44">(<argument pos:start="123:32" pos:end="123:33"><expr pos:start="123:32" pos:end="123:33"><name pos:start="123:32" pos:end="123:33">bc</name></expr></argument>, <argument pos:start="123:36" pos:end="123:43"><expr pos:start="123:36" pos:end="123:43"><name pos:start="123:36" pos:end="123:43">tmp_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="125:44"><if pos:start="125:9" pos:end="125:44">if<condition pos:start="125:11" pos:end="125:24">(<expr pos:start="125:12" pos:end="125:23"><name pos:start="125:12" pos:end="125:21">tmp_fields</name><operator pos:start="125:22" pos:end="125:22">&gt;</operator><literal type="number" pos:start="125:23" pos:end="125:23">1</literal></expr>)</condition><block type="pseudo" pos:start="125:26" pos:end="125:44"><block_content pos:start="125:26" pos:end="125:44"> <expr_stmt pos:start="125:26" pos:end="125:44"><expr pos:start="125:26" pos:end="125:43"><call pos:start="125:26" pos:end="125:43"><name pos:start="125:26" pos:end="125:30">put_v</name><argument_list pos:start="125:31" pos:end="125:43">(<argument pos:start="125:32" pos:end="125:33"><expr pos:start="125:32" pos:end="125:33"><name pos:start="125:32" pos:end="125:33">bc</name></expr></argument>, <argument pos:start="125:36" pos:end="125:42"><expr pos:start="125:36" pos:end="125:42"><name pos:start="125:36" pos:end="125:42">tmp_mul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="127:9" pos:end="127:47"><if pos:start="127:9" pos:end="127:47">if<condition pos:start="127:11" pos:end="127:24">(<expr pos:start="127:12" pos:end="127:23"><name pos:start="127:12" pos:end="127:21">tmp_fields</name><operator pos:start="127:22" pos:end="127:22">&gt;</operator><literal type="number" pos:start="127:23" pos:end="127:23">2</literal></expr>)</condition><block type="pseudo" pos:start="127:26" pos:end="127:47"><block_content pos:start="127:26" pos:end="127:47"> <expr_stmt pos:start="127:26" pos:end="127:47"><expr pos:start="127:26" pos:end="127:46"><call pos:start="127:26" pos:end="127:46"><name pos:start="127:26" pos:end="127:30">put_v</name><argument_list pos:start="127:31" pos:end="127:46">(<argument pos:start="127:32" pos:end="127:33"><expr pos:start="127:32" pos:end="127:33"><name pos:start="127:32" pos:end="127:33">bc</name></expr></argument>, <argument pos:start="127:36" pos:end="127:45"><expr pos:start="127:36" pos:end="127:45"><name pos:start="127:36" pos:end="127:45">tmp_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="129:45"><if pos:start="129:9" pos:end="129:45">if<condition pos:start="129:11" pos:end="129:24">(<expr pos:start="129:12" pos:end="129:23"><name pos:start="129:12" pos:end="129:21">tmp_fields</name><operator pos:start="129:22" pos:end="129:22">&gt;</operator><literal type="number" pos:start="129:23" pos:end="129:23">3</literal></expr>)</condition><block type="pseudo" pos:start="129:26" pos:end="129:45"><block_content pos:start="129:26" pos:end="129:45"> <expr_stmt pos:start="129:26" pos:end="129:45"><expr pos:start="129:26" pos:end="129:44"><call pos:start="129:26" pos:end="129:44"><name pos:start="129:26" pos:end="129:30">put_v</name><argument_list pos:start="129:31" pos:end="129:44">(<argument pos:start="129:32" pos:end="129:33"><expr pos:start="129:32" pos:end="129:33"><name pos:start="129:32" pos:end="129:33">bc</name></expr></argument>, <argument pos:start="129:36" pos:end="129:43"><expr pos:start="129:36" pos:end="129:43"><name pos:start="129:36" pos:end="129:43">tmp_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="131:50"><if pos:start="131:9" pos:end="131:50">if<condition pos:start="131:11" pos:end="131:24">(<expr pos:start="131:12" pos:end="131:23"><name pos:start="131:12" pos:end="131:21">tmp_fields</name><operator pos:start="131:22" pos:end="131:22">&gt;</operator><literal type="number" pos:start="131:23" pos:end="131:23">4</literal></expr>)</condition><block type="pseudo" pos:start="131:26" pos:end="131:50"><block_content pos:start="131:26" pos:end="131:50"> <expr_stmt pos:start="131:26" pos:end="131:50"><expr pos:start="131:26" pos:end="131:49"><call pos:start="131:26" pos:end="131:49"><name pos:start="131:26" pos:end="131:30">put_v</name><argument_list pos:start="131:31" pos:end="131:49">(<argument pos:start="131:32" pos:end="131:33"><expr pos:start="131:32" pos:end="131:33"><name pos:start="131:32" pos:end="131:33">bc</name></expr></argument>, <argument pos:start="131:36" pos:end="131:36"><expr pos:start="131:36" pos:end="131:36"><literal type="number" pos:start="131:36" pos:end="131:36">0</literal></expr></argument> <comment type="block" pos:start="131:38" pos:end="131:48">/*tmp_res*/</comment>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="133:38"><if pos:start="133:9" pos:end="133:38">if<condition pos:start="133:11" pos:end="133:24">(<expr pos:start="133:12" pos:end="133:23"><name pos:start="133:12" pos:end="133:21">tmp_fields</name><operator pos:start="133:22" pos:end="133:22">&gt;</operator><literal type="number" pos:start="133:23" pos:end="133:23">5</literal></expr>)</condition><block type="pseudo" pos:start="133:26" pos:end="133:38"><block_content pos:start="133:26" pos:end="133:38"> <expr_stmt pos:start="133:26" pos:end="133:38"><expr pos:start="133:26" pos:end="133:37"><call pos:start="133:26" pos:end="133:37"><name pos:start="133:26" pos:end="133:30">put_v</name><argument_list pos:start="133:31" pos:end="133:37">(<argument pos:start="133:32" pos:end="133:33"><expr pos:start="133:32" pos:end="133:33"><name pos:start="133:32" pos:end="133:33">bc</name></expr></argument>, <argument pos:start="133:36" pos:end="133:36"><expr pos:start="133:36" pos:end="133:36"><name pos:start="133:36" pos:end="133:36">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="139:5" pos:end="139:39"><expr pos:start="139:5" pos:end="139:38"><call pos:start="139:5" pos:end="139:38"><name pos:start="139:5" pos:end="139:23">update_packetheader</name><argument_list pos:start="139:24" pos:end="139:38">(<argument pos:start="139:25" pos:end="139:27"><expr pos:start="139:25" pos:end="139:27"><name pos:start="139:25" pos:end="139:27">nut</name></expr></argument>, <argument pos:start="139:30" pos:end="139:31"><expr pos:start="139:30" pos:end="139:31"><name pos:start="139:30" pos:end="139:31">bc</name></expr></argument>, <argument pos:start="139:34" pos:end="139:34"><expr pos:start="139:34" pos:end="139:34"><literal type="number" pos:start="139:34" pos:end="139:34">0</literal></expr></argument>, <argument pos:start="139:37" pos:end="139:37"><expr pos:start="139:37" pos:end="139:37"><literal type="number" pos:start="139:37" pos:end="139:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="143:5" pos:end="143:24">/* stream headers */</comment>

    <for pos:start="145:5" pos:end="305:5">for <control pos:start="145:9" pos:end="145:39">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">0</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:34"><expr pos:start="145:17" pos:end="145:33"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:19">&lt;</operator> <name pos:start="145:21" pos:end="145:33"><name pos:start="145:21" pos:end="145:21">s</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:33">nb_streams</name></name></expr>;</condition> <incr pos:start="145:36" pos:end="145:38"><expr pos:start="145:36" pos:end="145:38"><name pos:start="145:36" pos:end="145:36">i</name><operator pos:start="145:37" pos:end="145:38">++</operator></expr></incr>)</control>

    <block pos:start="147:5" pos:end="305:5">{<block_content pos:start="149:9" pos:end="303:43">

	<decl_stmt pos:start="149:9" pos:end="149:28"><decl pos:start="149:9" pos:end="149:15"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:15">nom</name></decl>, <decl pos:start="149:18" pos:end="149:22"><type ref="prev" pos:start="149:9" pos:end="149:11"/><name pos:start="149:18" pos:end="149:22">denom</name></decl>, <decl pos:start="149:25" pos:end="149:27"><type ref="prev" pos:start="149:9" pos:end="149:11"/><name pos:start="149:25" pos:end="149:27">gcd</name></decl>;</decl_stmt>



	<expr_stmt pos:start="153:9" pos:end="153:38"><expr pos:start="153:9" pos:end="153:37"><name pos:start="153:9" pos:end="153:13">codec</name> <operator pos:start="153:15" pos:end="153:15">=</operator> <operator pos:start="153:17" pos:end="153:17">&amp;</operator><name pos:start="153:18" pos:end="153:30"><name pos:start="153:18" pos:end="153:18">s</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:27">streams</name><index pos:start="153:28" pos:end="153:30">[<expr pos:start="153:29" pos:end="153:29"><name pos:start="153:29" pos:end="153:29">i</name></expr>]</index></name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:37">codec</name></expr>;</expr_stmt>

	

	<expr_stmt pos:start="157:9" pos:end="157:39"><expr pos:start="157:9" pos:end="157:38"><call pos:start="157:9" pos:end="157:38"><name pos:start="157:9" pos:end="157:16">put_be64</name><argument_list pos:start="157:17" pos:end="157:38">(<argument pos:start="157:18" pos:end="157:19"><expr pos:start="157:18" pos:end="157:19"><name pos:start="157:18" pos:end="157:19">bc</name></expr></argument>, <argument pos:start="157:22" pos:end="157:37"><expr pos:start="157:22" pos:end="157:37"><name pos:start="157:22" pos:end="157:37">STREAM_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="159:9" pos:end="159:66"><expr pos:start="159:9" pos:end="159:65"><call pos:start="159:9" pos:end="159:65"><name pos:start="159:9" pos:end="159:24">put_packetheader</name><argument_list pos:start="159:25" pos:end="159:65">(<argument pos:start="159:26" pos:end="159:28"><expr pos:start="159:26" pos:end="159:28"><name pos:start="159:26" pos:end="159:28">nut</name></expr></argument>, <argument pos:start="159:31" pos:end="159:32"><expr pos:start="159:31" pos:end="159:32"><name pos:start="159:31" pos:end="159:32">bc</name></expr></argument>, <argument pos:start="159:35" pos:end="159:61"><expr pos:start="159:35" pos:end="159:61"><literal type="number" pos:start="159:35" pos:end="159:39">120</literal> <operator pos:start="159:39" pos:end="159:39">+</operator> <name pos:start="159:41" pos:end="159:61"><name pos:start="159:41" pos:end="159:45">codec</name><operator pos:start="159:46" pos:end="159:47">-&gt;</operator><name pos:start="159:48" pos:end="159:61">extradata_size</name></name></expr></argument>, <argument pos:start="159:64" pos:end="159:64"><expr pos:start="159:64" pos:end="159:64"><literal type="number" pos:start="159:64" pos:end="159:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="161:9" pos:end="161:46"><expr pos:start="161:9" pos:end="161:45"><call pos:start="161:9" pos:end="161:45"><name pos:start="161:9" pos:end="161:13">put_v</name><argument_list pos:start="161:14" pos:end="161:45">(<argument pos:start="161:15" pos:end="161:16"><expr pos:start="161:15" pos:end="161:16"><name pos:start="161:15" pos:end="161:16">bc</name></expr></argument>, <argument pos:start="161:19" pos:end="161:19"><expr pos:start="161:19" pos:end="161:19"><name pos:start="161:19" pos:end="161:19">i</name></expr></argument> <comment type="block" pos:start="161:21" pos:end="161:44">/*s-&gt;streams[i]-&gt;index*/</comment>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="163:9" pos:end="163:68"><expr pos:start="163:9" pos:end="163:67"><call pos:start="163:9" pos:end="163:67"><name pos:start="163:9" pos:end="163:13">put_v</name><argument_list pos:start="163:14" pos:end="163:67">(<argument pos:start="163:15" pos:end="163:16"><expr pos:start="163:15" pos:end="163:16"><name pos:start="163:15" pos:end="163:16">bc</name></expr></argument>, <argument pos:start="163:19" pos:end="163:66"><expr pos:start="163:19" pos:end="163:66"><ternary pos:start="163:19" pos:end="163:66"><condition pos:start="163:19" pos:end="163:59"><expr pos:start="163:19" pos:end="163:57"><operator pos:start="163:19" pos:end="163:19">(</operator><name pos:start="163:20" pos:end="163:36"><name pos:start="163:20" pos:end="163:24">codec</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:36">codec_type</name></name> <operator pos:start="163:38" pos:end="163:39">==</operator> <name pos:start="163:41" pos:end="163:56">CODEC_TYPE_AUDIO</name><operator pos:start="163:57" pos:end="163:57">)</operator></expr> ?</condition><then pos:start="163:61" pos:end="163:62"> <expr pos:start="163:61" pos:end="163:62"><literal type="number" pos:start="163:61" pos:end="163:62">32</literal></expr> </then><else pos:start="163:64" pos:end="163:66">: <expr pos:start="163:66" pos:end="163:66"><literal type="number" pos:start="163:66" pos:end="163:66">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="165:9" pos:end="187:26"><if pos:start="165:9" pos:end="167:41">if <condition pos:start="165:12" pos:end="165:29">(<expr pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:17">codec</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:28">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:41"><block_content pos:start="167:13" pos:end="167:41">

	    <expr_stmt pos:start="167:13" pos:end="167:41"><expr pos:start="167:13" pos:end="167:40"><call pos:start="167:13" pos:end="167:40"><name pos:start="167:13" pos:end="167:18">put_vb</name><argument_list pos:start="167:19" pos:end="167:40">(<argument pos:start="167:20" pos:end="167:21"><expr pos:start="167:20" pos:end="167:21"><name pos:start="167:20" pos:end="167:21">bc</name></expr></argument>, <argument pos:start="167:24" pos:end="167:39"><expr pos:start="167:24" pos:end="167:39"><name pos:start="167:24" pos:end="167:39"><name pos:start="167:24" pos:end="167:28">codec</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:39">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

	<if type="elseif" pos:start="169:9" pos:end="175:9">else if <condition pos:start="169:17" pos:end="169:55">(<expr pos:start="169:18" pos:end="169:54"><name pos:start="169:18" pos:end="169:34"><name pos:start="169:18" pos:end="169:22">codec</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:34">codec_type</name></name> <operator pos:start="169:36" pos:end="169:37">==</operator> <name pos:start="169:39" pos:end="169:54">CODEC_TYPE_VIDEO</name></expr>)</condition>

	<block pos:start="171:9" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:59">

	    <expr_stmt pos:start="173:13" pos:end="173:59"><expr pos:start="173:13" pos:end="173:58"><call pos:start="173:13" pos:end="173:58"><name pos:start="173:13" pos:end="173:18">put_vb</name><argument_list pos:start="173:19" pos:end="173:58">(<argument pos:start="173:20" pos:end="173:21"><expr pos:start="173:20" pos:end="173:21"><name pos:start="173:20" pos:end="173:21">bc</name></expr></argument>, <argument pos:start="173:24" pos:end="173:57"><expr pos:start="173:24" pos:end="173:57"><call pos:start="173:24" pos:end="173:57"><name pos:start="173:24" pos:end="173:40">codec_get_bmp_tag</name><argument_list pos:start="173:41" pos:end="173:57">(<argument pos:start="173:42" pos:end="173:56"><expr pos:start="173:42" pos:end="173:56"><name pos:start="173:42" pos:end="173:56"><name pos:start="173:42" pos:end="173:46">codec</name><operator pos:start="173:47" pos:end="173:48">-&gt;</operator><name pos:start="173:49" pos:end="173:56">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if>

	<if type="elseif" pos:start="177:9" pos:end="183:9">else if <condition pos:start="177:17" pos:end="177:55">(<expr pos:start="177:18" pos:end="177:54"><name pos:start="177:18" pos:end="177:34"><name pos:start="177:18" pos:end="177:22">codec</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:34">codec_type</name></name> <operator pos:start="177:36" pos:end="177:37">==</operator> <name pos:start="177:39" pos:end="177:54">CODEC_TYPE_AUDIO</name></expr>)</condition>

	<block pos:start="179:9" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:59">

	    <expr_stmt pos:start="181:13" pos:end="181:59"><expr pos:start="181:13" pos:end="181:58"><call pos:start="181:13" pos:end="181:58"><name pos:start="181:13" pos:end="181:18">put_vb</name><argument_list pos:start="181:19" pos:end="181:58">(<argument pos:start="181:20" pos:end="181:21"><expr pos:start="181:20" pos:end="181:21"><name pos:start="181:20" pos:end="181:21">bc</name></expr></argument>, <argument pos:start="181:24" pos:end="181:57"><expr pos:start="181:24" pos:end="181:57"><call pos:start="181:24" pos:end="181:57"><name pos:start="181:24" pos:end="181:40">codec_get_wav_tag</name><argument_list pos:start="181:41" pos:end="181:57">(<argument pos:start="181:42" pos:end="181:56"><expr pos:start="181:42" pos:end="181:56"><name pos:start="181:42" pos:end="181:56"><name pos:start="181:42" pos:end="181:46">codec</name><operator pos:start="181:47" pos:end="181:48">-&gt;</operator><name pos:start="181:49" pos:end="181:56">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if>

        <else pos:start="185:9" pos:end="187:26">else<block type="pseudo" pos:start="187:13" pos:end="187:26"><block_content pos:start="187:13" pos:end="187:26">

            <expr_stmt pos:start="187:13" pos:end="187:26"><expr pos:start="187:13" pos:end="187:25"><call pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:18">put_vb</name><argument_list pos:start="187:19" pos:end="187:25">(<argument pos:start="187:20" pos:end="187:21"><expr pos:start="187:20" pos:end="187:21"><name pos:start="187:20" pos:end="187:21">bc</name></expr></argument>, <argument pos:start="187:24" pos:end="187:24"><expr pos:start="187:24" pos:end="187:24"><literal type="number" pos:start="187:24" pos:end="187:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



	<if_stmt pos:start="191:9" pos:end="215:9"><if pos:start="191:9" pos:end="199:9">if <condition pos:start="191:12" pos:end="191:50">(<expr pos:start="191:13" pos:end="191:49"><name pos:start="191:13" pos:end="191:29"><name pos:start="191:13" pos:end="191:17">codec</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:29">codec_type</name></name> <operator pos:start="191:31" pos:end="191:32">==</operator> <name pos:start="191:34" pos:end="191:49">CODEC_TYPE_VIDEO</name></expr>)</condition>

	<block pos:start="193:9" pos:end="199:9">{<block_content pos:start="195:13" pos:end="197:41">

	    <expr_stmt pos:start="195:13" pos:end="195:39"><expr pos:start="195:13" pos:end="195:38"><name pos:start="195:13" pos:end="195:15">nom</name> <operator pos:start="195:17" pos:end="195:17">=</operator> <name pos:start="195:19" pos:end="195:38"><name pos:start="195:19" pos:end="195:23">codec</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:34">time_base</name><operator pos:start="195:35" pos:end="195:35">.</operator><name pos:start="195:36" pos:end="195:38">den</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="197:13" pos:end="197:41"><expr pos:start="197:13" pos:end="197:40"><name pos:start="197:13" pos:end="197:17">denom</name> <operator pos:start="197:19" pos:end="197:19">=</operator> <name pos:start="197:21" pos:end="197:40"><name pos:start="197:21" pos:end="197:25">codec</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:36">time_base</name><operator pos:start="197:37" pos:end="197:37">.</operator><name pos:start="197:38" pos:end="197:40">num</name></name></expr>;</expr_stmt>

	</block_content>}</block></if>

	<else pos:start="201:9" pos:end="215:9">else

	<block pos:start="203:9" pos:end="215:9">{<block_content pos:start="205:13" pos:end="213:25">

	    <expr_stmt pos:start="205:13" pos:end="205:37"><expr pos:start="205:13" pos:end="205:36"><name pos:start="205:13" pos:end="205:15">nom</name> <operator pos:start="205:17" pos:end="205:17">=</operator> <name pos:start="205:19" pos:end="205:36"><name pos:start="205:19" pos:end="205:23">codec</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:36">sample_rate</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="213:25"><if pos:start="207:13" pos:end="209:41">if<condition pos:start="207:15" pos:end="207:35">(<expr pos:start="207:16" pos:end="207:34"><name pos:start="207:16" pos:end="207:32"><name pos:start="207:16" pos:end="207:20">codec</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:32">frame_size</name></name><operator pos:start="207:33" pos:end="207:33">&gt;</operator><literal type="number" pos:start="207:34" pos:end="207:34">0</literal></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:41"><block_content pos:start="209:17" pos:end="209:41">

                <expr_stmt pos:start="209:17" pos:end="209:41"><expr pos:start="209:17" pos:end="209:40"><name pos:start="209:17" pos:end="209:21">denom</name><operator pos:start="209:22" pos:end="209:22">=</operator> <name pos:start="209:24" pos:end="209:40"><name pos:start="209:24" pos:end="209:28">codec</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:40">frame_size</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="211:13" pos:end="213:25">else<block type="pseudo" pos:start="213:17" pos:end="213:25"><block_content pos:start="213:17" pos:end="213:25">

                <expr_stmt pos:start="213:17" pos:end="213:25"><expr pos:start="213:17" pos:end="213:24"><name pos:start="213:17" pos:end="213:21">denom</name><operator pos:start="213:22" pos:end="213:22">=</operator> <literal type="number" pos:start="213:24" pos:end="213:24">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="213:27" pos:end="213:35">//unlucky</comment>

	</block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:32"><expr pos:start="217:9" pos:end="217:31"><name pos:start="217:9" pos:end="217:11">gcd</name><operator pos:start="217:12" pos:end="217:12">=</operator> <call pos:start="217:14" pos:end="217:31"><name pos:start="217:14" pos:end="217:19">ff_gcd</name><argument_list pos:start="217:20" pos:end="217:31">(<argument pos:start="217:21" pos:end="217:23"><expr pos:start="217:21" pos:end="217:23"><name pos:start="217:21" pos:end="217:23">nom</name></expr></argument>, <argument pos:start="217:26" pos:end="217:30"><expr pos:start="217:26" pos:end="217:30"><name pos:start="217:26" pos:end="217:30">denom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:21"><expr pos:start="219:9" pos:end="219:20"><name pos:start="219:9" pos:end="219:11">nom</name>   <operator pos:start="219:15" pos:end="219:16">/=</operator> <name pos:start="219:18" pos:end="219:20">gcd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:21"><expr pos:start="221:9" pos:end="221:20"><name pos:start="221:9" pos:end="221:13">denom</name> <operator pos:start="221:15" pos:end="221:16">/=</operator> <name pos:start="221:18" pos:end="221:20">gcd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:37"><expr pos:start="223:9" pos:end="223:36"><name pos:start="223:9" pos:end="223:22"><name pos:start="223:9" pos:end="223:11">nut</name><operator pos:start="223:12" pos:end="223:13">-&gt;</operator><name pos:start="223:14" pos:end="223:19">stream</name><index pos:start="223:20" pos:end="223:22">[<expr pos:start="223:21" pos:end="223:21"><name pos:start="223:21" pos:end="223:21">i</name></expr>]</index></name><operator pos:start="223:23" pos:end="223:23">.</operator><name pos:start="223:24" pos:end="223:31">rate_num</name><operator pos:start="223:32" pos:end="223:32">=</operator> <name pos:start="223:34" pos:end="223:36">nom</name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:39"><expr pos:start="225:9" pos:end="225:38"><name pos:start="225:9" pos:end="225:22"><name pos:start="225:9" pos:end="225:11">nut</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:19">stream</name><index pos:start="225:20" pos:end="225:22">[<expr pos:start="225:21" pos:end="225:21"><name pos:start="225:21" pos:end="225:21">i</name></expr>]</index></name><operator pos:start="225:23" pos:end="225:23">.</operator><name pos:start="225:24" pos:end="225:31">rate_den</name><operator pos:start="225:32" pos:end="225:32">=</operator> <name pos:start="225:34" pos:end="225:38">denom</name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:55"><expr pos:start="227:9" pos:end="227:54"><call pos:start="227:9" pos:end="227:54"><name pos:start="227:9" pos:end="227:23">av_set_pts_info</name><argument_list pos:start="227:24" pos:end="227:54">(<argument pos:start="227:25" pos:end="227:37"><expr pos:start="227:25" pos:end="227:37"><name pos:start="227:25" pos:end="227:37"><name pos:start="227:25" pos:end="227:25">s</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:34">streams</name><index pos:start="227:35" pos:end="227:37">[<expr pos:start="227:36" pos:end="227:36"><name pos:start="227:36" pos:end="227:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="227:40" pos:end="227:41"><expr pos:start="227:40" pos:end="227:41"><literal type="number" pos:start="227:40" pos:end="227:41">60</literal></expr></argument>, <argument pos:start="227:44" pos:end="227:48"><expr pos:start="227:44" pos:end="227:48"><name pos:start="227:44" pos:end="227:48">denom</name></expr></argument>, <argument pos:start="227:51" pos:end="227:53"><expr pos:start="227:51" pos:end="227:53"><name pos:start="227:51" pos:end="227:53">nom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="231:9" pos:end="231:35"><expr pos:start="231:9" pos:end="231:34"><call pos:start="231:9" pos:end="231:34"><name pos:start="231:9" pos:end="231:13">put_v</name><argument_list pos:start="231:14" pos:end="231:34">(<argument pos:start="231:15" pos:end="231:16"><expr pos:start="231:15" pos:end="231:16"><name pos:start="231:15" pos:end="231:16">bc</name></expr></argument>, <argument pos:start="231:19" pos:end="231:33"><expr pos:start="231:19" pos:end="231:33"><name pos:start="231:19" pos:end="231:33"><name pos:start="231:19" pos:end="231:23">codec</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:33">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="233:9" pos:end="233:22"><expr pos:start="233:9" pos:end="233:21"><call pos:start="233:9" pos:end="233:21"><name pos:start="233:9" pos:end="233:14">put_vb</name><argument_list pos:start="233:15" pos:end="233:21">(<argument pos:start="233:16" pos:end="233:17"><expr pos:start="233:16" pos:end="233:17"><name pos:start="233:16" pos:end="233:17">bc</name></expr></argument>, <argument pos:start="233:20" pos:end="233:20"><expr pos:start="233:20" pos:end="233:20"><literal type="number" pos:start="233:20" pos:end="233:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="233:24" pos:end="233:45">/* no language code */</comment>

	<expr_stmt pos:start="235:9" pos:end="235:23"><expr pos:start="235:9" pos:end="235:22"><call pos:start="235:9" pos:end="235:22"><name pos:start="235:9" pos:end="235:13">put_v</name><argument_list pos:start="235:14" pos:end="235:22">(<argument pos:start="235:15" pos:end="235:16"><expr pos:start="235:15" pos:end="235:16"><name pos:start="235:15" pos:end="235:16">bc</name></expr></argument>, <argument pos:start="235:19" pos:end="235:21"><expr pos:start="235:19" pos:end="235:21"><name pos:start="235:19" pos:end="235:21">nom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="237:9" pos:end="237:25"><expr pos:start="237:9" pos:end="237:24"><call pos:start="237:9" pos:end="237:24"><name pos:start="237:9" pos:end="237:13">put_v</name><argument_list pos:start="237:14" pos:end="237:24">(<argument pos:start="237:15" pos:end="237:16"><expr pos:start="237:15" pos:end="237:16"><name pos:start="237:15" pos:end="237:16">bc</name></expr></argument>, <argument pos:start="237:19" pos:end="237:23"><expr pos:start="237:19" pos:end="237:23"><name pos:start="237:19" pos:end="237:23">denom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="245:52"><if pos:start="239:9" pos:end="241:51">if<condition pos:start="239:11" pos:end="239:30">(<expr pos:start="239:12" pos:end="239:29"><name pos:start="239:12" pos:end="239:14">nom</name> <operator pos:start="239:16" pos:end="239:16">/</operator> <name pos:start="239:18" pos:end="239:22">denom</name> <operator pos:start="239:24" pos:end="239:24">&lt;</operator> <literal type="number" pos:start="239:26" pos:end="239:29">1000</literal></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:51"><block_content pos:start="241:13" pos:end="241:51">

	    <expr_stmt pos:start="241:13" pos:end="241:51"><expr pos:start="241:13" pos:end="241:50"><name pos:start="241:13" pos:end="241:26"><name pos:start="241:13" pos:end="241:15">nut</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:23">stream</name><index pos:start="241:24" pos:end="241:26">[<expr pos:start="241:25" pos:end="241:25"><name pos:start="241:25" pos:end="241:25">i</name></expr>]</index></name><operator pos:start="241:27" pos:end="241:27">.</operator><name pos:start="241:28" pos:end="241:46">msb_timestamp_shift</name> <operator pos:start="241:48" pos:end="241:48">=</operator> <literal type="number" pos:start="241:50" pos:end="241:50">7</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="243:9" pos:end="245:52">else<block type="pseudo" pos:start="245:13" pos:end="245:52"><block_content pos:start="245:13" pos:end="245:52">

	    <expr_stmt pos:start="245:13" pos:end="245:52"><expr pos:start="245:13" pos:end="245:51"><name pos:start="245:13" pos:end="245:26"><name pos:start="245:13" pos:end="245:15">nut</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:23">stream</name><index pos:start="245:24" pos:end="245:26">[<expr pos:start="245:25" pos:end="245:25"><name pos:start="245:25" pos:end="245:25">i</name></expr>]</index></name><operator pos:start="245:27" pos:end="245:27">.</operator><name pos:start="245:28" pos:end="245:46">msb_timestamp_shift</name> <operator pos:start="245:48" pos:end="245:48">=</operator> <literal type="number" pos:start="245:50" pos:end="245:51">14</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

	<expr_stmt pos:start="247:9" pos:end="247:54"><expr pos:start="247:9" pos:end="247:53"><call pos:start="247:9" pos:end="247:53"><name pos:start="247:9" pos:end="247:13">put_v</name><argument_list pos:start="247:14" pos:end="247:53">(<argument pos:start="247:15" pos:end="247:16"><expr pos:start="247:15" pos:end="247:16"><name pos:start="247:15" pos:end="247:16">bc</name></expr></argument>, <argument pos:start="247:19" pos:end="247:52"><expr pos:start="247:19" pos:end="247:52"><name pos:start="247:19" pos:end="247:32"><name pos:start="247:19" pos:end="247:21">nut</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:29">stream</name><index pos:start="247:30" pos:end="247:32">[<expr pos:start="247:31" pos:end="247:31"><name pos:start="247:31" pos:end="247:31">i</name></expr>]</index></name><operator pos:start="247:33" pos:end="247:33">.</operator><name pos:start="247:34" pos:end="247:52">msb_timestamp_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:39"><expr pos:start="249:9" pos:end="249:38"><call pos:start="249:9" pos:end="249:38"><name pos:start="249:9" pos:end="249:13">put_v</name><argument_list pos:start="249:14" pos:end="249:38">(<argument pos:start="249:15" pos:end="249:16"><expr pos:start="249:15" pos:end="249:16"><name pos:start="249:15" pos:end="249:16">bc</name></expr></argument>, <argument pos:start="249:19" pos:end="249:37"><expr pos:start="249:19" pos:end="249:37"><name pos:start="249:19" pos:end="249:37"><name pos:start="249:19" pos:end="249:23">codec</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:37">has_b_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="251:9" pos:end="251:24"><expr pos:start="251:9" pos:end="251:23"><call pos:start="251:9" pos:end="251:23"><name pos:start="251:9" pos:end="251:16">put_byte</name><argument_list pos:start="251:17" pos:end="251:23">(<argument pos:start="251:18" pos:end="251:19"><expr pos:start="251:18" pos:end="251:19"><name pos:start="251:18" pos:end="251:19">bc</name></expr></argument>, <argument pos:start="251:22" pos:end="251:22"><expr pos:start="251:22" pos:end="251:22"><literal type="number" pos:start="251:22" pos:end="251:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="251:26" pos:end="251:74">/* flags: 0x1 - fixed_fps, 0x2 - index_present */</comment>

	

        <if_stmt pos:start="255:9" pos:end="263:9"><if pos:start="255:9" pos:end="263:9">if<condition pos:start="255:11" pos:end="255:33">(<expr pos:start="255:12" pos:end="255:32"><name pos:start="255:12" pos:end="255:32"><name pos:start="255:12" pos:end="255:16">codec</name><operator pos:start="255:17" pos:end="255:18">-&gt;</operator><name pos:start="255:19" pos:end="255:32">extradata_size</name></name></expr>)</condition><block pos:start="255:34" pos:end="263:9">{<block_content pos:start="257:13" pos:end="261:68">

            <expr_stmt pos:start="257:13" pos:end="257:25"><expr pos:start="257:13" pos:end="257:24"><call pos:start="257:13" pos:end="257:24"><name pos:start="257:13" pos:end="257:17">put_v</name><argument_list pos:start="257:18" pos:end="257:24">(<argument pos:start="257:19" pos:end="257:20"><expr pos:start="257:19" pos:end="257:20"><name pos:start="257:19" pos:end="257:20">bc</name></expr></argument>, <argument pos:start="257:23" pos:end="257:23"><expr pos:start="257:23" pos:end="257:23"><literal type="number" pos:start="257:23" pos:end="257:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:45"><expr pos:start="259:13" pos:end="259:44"><call pos:start="259:13" pos:end="259:44"><name pos:start="259:13" pos:end="259:17">put_v</name><argument_list pos:start="259:18" pos:end="259:44">(<argument pos:start="259:19" pos:end="259:20"><expr pos:start="259:19" pos:end="259:20"><name pos:start="259:19" pos:end="259:20">bc</name></expr></argument>, <argument pos:start="259:23" pos:end="259:43"><expr pos:start="259:23" pos:end="259:43"><name pos:start="259:23" pos:end="259:43"><name pos:start="259:23" pos:end="259:27">codec</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:43">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:68"><expr pos:start="261:13" pos:end="261:67"><call pos:start="261:13" pos:end="261:67"><name pos:start="261:13" pos:end="261:22">put_buffer</name><argument_list pos:start="261:23" pos:end="261:67">(<argument pos:start="261:24" pos:end="261:25"><expr pos:start="261:24" pos:end="261:25"><name pos:start="261:24" pos:end="261:25">bc</name></expr></argument>, <argument pos:start="261:28" pos:end="261:43"><expr pos:start="261:28" pos:end="261:43"><name pos:start="261:28" pos:end="261:43"><name pos:start="261:28" pos:end="261:32">codec</name><operator pos:start="261:33" pos:end="261:34">-&gt;</operator><name pos:start="261:35" pos:end="261:43">extradata</name></name></expr></argument>, <argument pos:start="261:46" pos:end="261:66"><expr pos:start="261:46" pos:end="261:66"><name pos:start="261:46" pos:end="261:66"><name pos:start="261:46" pos:end="261:50">codec</name><operator pos:start="261:51" pos:end="261:52">-&gt;</operator><name pos:start="261:53" pos:end="261:66">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            

        </block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="265:9" pos:end="265:21"><expr pos:start="265:9" pos:end="265:20"><call pos:start="265:9" pos:end="265:20"><name pos:start="265:9" pos:end="265:13">put_v</name><argument_list pos:start="265:14" pos:end="265:20">(<argument pos:start="265:15" pos:end="265:16"><expr pos:start="265:15" pos:end="265:16"><name pos:start="265:15" pos:end="265:16">bc</name></expr></argument>, <argument pos:start="265:19" pos:end="265:19"><expr pos:start="265:19" pos:end="265:19"><literal type="number" pos:start="265:19" pos:end="265:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="265:23" pos:end="265:57">/* end of codec specific headers */</comment>

	

	<switch pos:start="269:9" pos:end="301:9">switch<condition pos:start="269:15" pos:end="269:33">(<expr pos:start="269:16" pos:end="269:32"><name pos:start="269:16" pos:end="269:32"><name pos:start="269:16" pos:end="269:20">codec</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:32">codec_type</name></name></expr>)</condition>

	<block pos:start="271:9" pos:end="301:9">{<block_content pos:start="273:13" pos:end="299:22">

	    <case pos:start="273:13" pos:end="273:34">case <expr pos:start="273:18" pos:end="273:33"><name pos:start="273:18" pos:end="273:33">CODEC_TYPE_AUDIO</name></expr>:</case>

		<expr_stmt pos:start="275:17" pos:end="275:46"><expr pos:start="275:17" pos:end="275:45"><call pos:start="275:17" pos:end="275:45"><name pos:start="275:17" pos:end="275:21">put_v</name><argument_list pos:start="275:22" pos:end="275:45">(<argument pos:start="275:23" pos:end="275:24"><expr pos:start="275:23" pos:end="275:24"><name pos:start="275:23" pos:end="275:24">bc</name></expr></argument>, <argument pos:start="275:27" pos:end="275:44"><expr pos:start="275:27" pos:end="275:44"><name pos:start="275:27" pos:end="275:44"><name pos:start="275:27" pos:end="275:31">codec</name><operator pos:start="275:32" pos:end="275:33">-&gt;</operator><name pos:start="275:34" pos:end="275:44">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="277:17" pos:end="277:29"><expr pos:start="277:17" pos:end="277:28"><call pos:start="277:17" pos:end="277:28"><name pos:start="277:17" pos:end="277:21">put_v</name><argument_list pos:start="277:22" pos:end="277:28">(<argument pos:start="277:23" pos:end="277:24"><expr pos:start="277:23" pos:end="277:24"><name pos:start="277:23" pos:end="277:24">bc</name></expr></argument>, <argument pos:start="277:27" pos:end="277:27"><expr pos:start="277:27" pos:end="277:27"><literal type="number" pos:start="277:27" pos:end="277:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="279:17" pos:end="279:43"><expr pos:start="279:17" pos:end="279:42"><call pos:start="279:17" pos:end="279:42"><name pos:start="279:17" pos:end="279:21">put_v</name><argument_list pos:start="279:22" pos:end="279:42">(<argument pos:start="279:23" pos:end="279:24"><expr pos:start="279:23" pos:end="279:24"><name pos:start="279:23" pos:end="279:24">bc</name></expr></argument>, <argument pos:start="279:27" pos:end="279:41"><expr pos:start="279:27" pos:end="279:41"><name pos:start="279:27" pos:end="279:41"><name pos:start="279:27" pos:end="279:31">codec</name><operator pos:start="279:32" pos:end="279:33">-&gt;</operator><name pos:start="279:34" pos:end="279:41">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="281:17" pos:end="281:22">break;</break>

	    <case pos:start="283:13" pos:end="283:34">case <expr pos:start="283:18" pos:end="283:33"><name pos:start="283:18" pos:end="283:33">CODEC_TYPE_VIDEO</name></expr>:</case>

		<expr_stmt pos:start="285:17" pos:end="285:40"><expr pos:start="285:17" pos:end="285:39"><call pos:start="285:17" pos:end="285:39"><name pos:start="285:17" pos:end="285:21">put_v</name><argument_list pos:start="285:22" pos:end="285:39">(<argument pos:start="285:23" pos:end="285:24"><expr pos:start="285:23" pos:end="285:24"><name pos:start="285:23" pos:end="285:24">bc</name></expr></argument>, <argument pos:start="285:27" pos:end="285:38"><expr pos:start="285:27" pos:end="285:38"><name pos:start="285:27" pos:end="285:38"><name pos:start="285:27" pos:end="285:31">codec</name><operator pos:start="285:32" pos:end="285:33">-&gt;</operator><name pos:start="285:34" pos:end="285:38">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="287:17" pos:end="287:41"><expr pos:start="287:17" pos:end="287:40"><call pos:start="287:17" pos:end="287:40"><name pos:start="287:17" pos:end="287:21">put_v</name><argument_list pos:start="287:22" pos:end="287:40">(<argument pos:start="287:23" pos:end="287:24"><expr pos:start="287:23" pos:end="287:24"><name pos:start="287:23" pos:end="287:24">bc</name></expr></argument>, <argument pos:start="287:27" pos:end="287:39"><expr pos:start="287:27" pos:end="287:39"><name pos:start="287:27" pos:end="287:39"><name pos:start="287:27" pos:end="287:31">codec</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:39">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="289:17" pos:end="289:58"><expr pos:start="289:17" pos:end="289:57"><call pos:start="289:17" pos:end="289:57"><name pos:start="289:17" pos:end="289:21">put_v</name><argument_list pos:start="289:22" pos:end="289:57">(<argument pos:start="289:23" pos:end="289:24"><expr pos:start="289:23" pos:end="289:24"><name pos:start="289:23" pos:end="289:24">bc</name></expr></argument>, <argument pos:start="289:27" pos:end="289:56"><expr pos:start="289:27" pos:end="289:56"><name pos:start="289:27" pos:end="289:56"><name pos:start="289:27" pos:end="289:31">codec</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:52">sample_aspect_ratio</name><operator pos:start="289:53" pos:end="289:53">.</operator><name pos:start="289:54" pos:end="289:56">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="291:17" pos:end="291:58"><expr pos:start="291:17" pos:end="291:57"><call pos:start="291:17" pos:end="291:57"><name pos:start="291:17" pos:end="291:21">put_v</name><argument_list pos:start="291:22" pos:end="291:57">(<argument pos:start="291:23" pos:end="291:24"><expr pos:start="291:23" pos:end="291:24"><name pos:start="291:23" pos:end="291:24">bc</name></expr></argument>, <argument pos:start="291:27" pos:end="291:56"><expr pos:start="291:27" pos:end="291:56"><name pos:start="291:27" pos:end="291:56"><name pos:start="291:27" pos:end="291:31">codec</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:52">sample_aspect_ratio</name><operator pos:start="291:53" pos:end="291:53">.</operator><name pos:start="291:54" pos:end="291:56">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="293:17" pos:end="293:29"><expr pos:start="293:17" pos:end="293:28"><call pos:start="293:17" pos:end="293:28"><name pos:start="293:17" pos:end="293:21">put_v</name><argument_list pos:start="293:22" pos:end="293:28">(<argument pos:start="293:23" pos:end="293:24"><expr pos:start="293:23" pos:end="293:24"><name pos:start="293:23" pos:end="293:24">bc</name></expr></argument>, <argument pos:start="293:27" pos:end="293:27"><expr pos:start="293:27" pos:end="293:27"><literal type="number" pos:start="293:27" pos:end="293:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="293:31" pos:end="293:55">/* csp type -- unknown */</comment>

		<break pos:start="295:17" pos:end="295:22">break;</break>

            <default pos:start="297:13" pos:end="297:20">default:</default>

                <break pos:start="299:17" pos:end="299:22">break;</break>

	</block_content>}</block></switch>

        <expr_stmt pos:start="303:9" pos:end="303:43"><expr pos:start="303:9" pos:end="303:42"><call pos:start="303:9" pos:end="303:42"><name pos:start="303:9" pos:end="303:27">update_packetheader</name><argument_list pos:start="303:28" pos:end="303:42">(<argument pos:start="303:29" pos:end="303:31"><expr pos:start="303:29" pos:end="303:31"><name pos:start="303:29" pos:end="303:31">nut</name></expr></argument>, <argument pos:start="303:34" pos:end="303:35"><expr pos:start="303:34" pos:end="303:35"><name pos:start="303:34" pos:end="303:35">bc</name></expr></argument>, <argument pos:start="303:38" pos:end="303:38"><expr pos:start="303:38" pos:end="303:38"><literal type="number" pos:start="303:38" pos:end="303:38">0</literal></expr></argument>, <argument pos:start="303:41" pos:end="303:41"><expr pos:start="303:41" pos:end="303:41"><literal type="number" pos:start="303:41" pos:end="303:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="309:5" pos:end="309:21">/* info header */</comment>

    <expr_stmt pos:start="311:5" pos:end="311:33"><expr pos:start="311:5" pos:end="311:32"><call pos:start="311:5" pos:end="311:32"><name pos:start="311:5" pos:end="311:12">put_be64</name><argument_list pos:start="311:13" pos:end="311:32">(<argument pos:start="311:14" pos:end="311:15"><expr pos:start="311:14" pos:end="311:15"><name pos:start="311:14" pos:end="311:15">bc</name></expr></argument>, <argument pos:start="311:18" pos:end="311:31"><expr pos:start="311:18" pos:end="311:31"><name pos:start="311:18" pos:end="311:31">INFO_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="315:78"><expr pos:start="313:5" pos:end="315:77"><call pos:start="313:5" pos:end="315:77"><name pos:start="313:5" pos:end="313:20">put_packetheader</name><argument_list pos:start="313:21" pos:end="315:77">(<argument pos:start="313:22" pos:end="313:24"><expr pos:start="313:22" pos:end="313:24"><name pos:start="313:22" pos:end="313:24">nut</name></expr></argument>, <argument pos:start="313:27" pos:end="313:28"><expr pos:start="313:27" pos:end="313:28"><name pos:start="313:27" pos:end="313:28">bc</name></expr></argument>, <argument pos:start="313:31" pos:end="315:73"><expr pos:start="313:31" pos:end="315:73"><literal type="number" pos:start="313:31" pos:end="313:33">30</literal><operator pos:start="313:33" pos:end="313:33">+</operator><call pos:start="313:34" pos:end="313:50"><name pos:start="313:34" pos:end="313:39">strlen</name><argument_list pos:start="313:40" pos:end="313:50">(<argument pos:start="313:41" pos:end="313:49"><expr pos:start="313:41" pos:end="313:49"><name pos:start="313:41" pos:end="313:49"><name pos:start="313:41" pos:end="313:41">s</name><operator pos:start="313:42" pos:end="313:43">-&gt;</operator><name pos:start="313:44" pos:end="313:49">author</name></name></expr></argument>)</argument_list></call><operator pos:start="313:51" pos:end="313:51">+</operator><call pos:start="313:52" pos:end="313:67"><name pos:start="313:52" pos:end="313:57">strlen</name><argument_list pos:start="313:58" pos:end="313:67">(<argument pos:start="313:59" pos:end="313:66"><expr pos:start="313:59" pos:end="313:66"><name pos:start="313:59" pos:end="313:66"><name pos:start="313:59" pos:end="313:59">s</name><operator pos:start="313:60" pos:end="313:61">-&gt;</operator><name pos:start="313:62" pos:end="313:66">title</name></name></expr></argument>)</argument_list></call><operator pos:start="313:68" pos:end="313:68">+</operator>

        <call pos:start="315:9" pos:end="315:26"><name pos:start="315:9" pos:end="315:14">strlen</name><argument_list pos:start="315:15" pos:end="315:26">(<argument pos:start="315:16" pos:end="315:25"><expr pos:start="315:16" pos:end="315:25"><name pos:start="315:16" pos:end="315:25"><name pos:start="315:16" pos:end="315:16">s</name><operator pos:start="315:17" pos:end="315:18">-&gt;</operator><name pos:start="315:19" pos:end="315:25">comment</name></name></expr></argument>)</argument_list></call><operator pos:start="315:27" pos:end="315:27">+</operator><call pos:start="315:28" pos:end="315:47"><name pos:start="315:28" pos:end="315:33">strlen</name><argument_list pos:start="315:34" pos:end="315:47">(<argument pos:start="315:35" pos:end="315:46"><expr pos:start="315:35" pos:end="315:46"><name pos:start="315:35" pos:end="315:46"><name pos:start="315:35" pos:end="315:35">s</name><operator pos:start="315:36" pos:end="315:37">-&gt;</operator><name pos:start="315:38" pos:end="315:46">copyright</name></name></expr></argument>)</argument_list></call><operator pos:start="315:48" pos:end="315:48">+</operator><call pos:start="315:49" pos:end="315:73"><name pos:start="315:49" pos:end="315:54">strlen</name><argument_list pos:start="315:55" pos:end="315:73">(<argument pos:start="315:56" pos:end="315:72"><expr pos:start="315:56" pos:end="315:72"><name pos:start="315:56" pos:end="315:72">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="315:76" pos:end="315:76"><expr pos:start="315:76" pos:end="315:76"><literal type="number" pos:start="315:76" pos:end="315:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

    <if_stmt pos:start="317:5" pos:end="325:5"><if pos:start="317:5" pos:end="325:5">if <condition pos:start="317:8" pos:end="317:21">(<expr pos:start="317:9" pos:end="317:20"><name pos:start="317:9" pos:end="317:20"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:17">author</name><index pos:start="317:18" pos:end="317:20">[<expr pos:start="317:19" pos:end="317:19"><literal type="number" pos:start="317:19" pos:end="317:19">0</literal></expr>]</index></name></expr>)</condition>

    <block pos:start="319:5" pos:end="325:5">{<block_content pos:start="321:9" pos:end="323:31">

        <expr_stmt pos:start="321:9" pos:end="321:21"><expr pos:start="321:9" pos:end="321:20"><call pos:start="321:9" pos:end="321:20"><name pos:start="321:9" pos:end="321:13">put_v</name><argument_list pos:start="321:14" pos:end="321:20">(<argument pos:start="321:15" pos:end="321:16"><expr pos:start="321:15" pos:end="321:16"><name pos:start="321:15" pos:end="321:16">bc</name></expr></argument>, <argument pos:start="321:19" pos:end="321:19"><expr pos:start="321:19" pos:end="321:19"><literal type="number" pos:start="321:19" pos:end="321:19">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="321:23" pos:end="321:32">/* type */</comment>

        <expr_stmt pos:start="323:9" pos:end="323:31"><expr pos:start="323:9" pos:end="323:30"><call pos:start="323:9" pos:end="323:30"><name pos:start="323:9" pos:end="323:15">put_str</name><argument_list pos:start="323:16" pos:end="323:30">(<argument pos:start="323:17" pos:end="323:18"><expr pos:start="323:17" pos:end="323:18"><name pos:start="323:17" pos:end="323:18">bc</name></expr></argument>, <argument pos:start="323:21" pos:end="323:29"><expr pos:start="323:21" pos:end="323:29"><name pos:start="323:21" pos:end="323:29"><name pos:start="323:21" pos:end="323:21">s</name><operator pos:start="323:22" pos:end="323:23">-&gt;</operator><name pos:start="323:24" pos:end="323:29">author</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="327:5" pos:end="335:5"><if pos:start="327:5" pos:end="335:5">if <condition pos:start="327:8" pos:end="327:20">(<expr pos:start="327:9" pos:end="327:19"><name pos:start="327:9" pos:end="327:19"><name pos:start="327:9" pos:end="327:9">s</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:16">title</name><index pos:start="327:17" pos:end="327:19">[<expr pos:start="327:18" pos:end="327:18"><literal type="number" pos:start="327:18" pos:end="327:18">0</literal></expr>]</index></name></expr>)</condition>

    <block pos:start="329:5" pos:end="335:5">{<block_content pos:start="331:9" pos:end="333:30">

        <expr_stmt pos:start="331:9" pos:end="331:22"><expr pos:start="331:9" pos:end="331:21"><call pos:start="331:9" pos:end="331:21"><name pos:start="331:9" pos:end="331:13">put_v</name><argument_list pos:start="331:14" pos:end="331:21">(<argument pos:start="331:15" pos:end="331:16"><expr pos:start="331:15" pos:end="331:16"><name pos:start="331:15" pos:end="331:16">bc</name></expr></argument>, <argument pos:start="331:19" pos:end="331:20"><expr pos:start="331:19" pos:end="331:20"><literal type="number" pos:start="331:19" pos:end="331:20">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="331:24" pos:end="331:33">/* type */</comment>

        <expr_stmt pos:start="333:9" pos:end="333:30"><expr pos:start="333:9" pos:end="333:29"><call pos:start="333:9" pos:end="333:29"><name pos:start="333:9" pos:end="333:15">put_str</name><argument_list pos:start="333:16" pos:end="333:29">(<argument pos:start="333:17" pos:end="333:18"><expr pos:start="333:17" pos:end="333:18"><name pos:start="333:17" pos:end="333:18">bc</name></expr></argument>, <argument pos:start="333:21" pos:end="333:28"><expr pos:start="333:21" pos:end="333:28"><name pos:start="333:21" pos:end="333:28"><name pos:start="333:21" pos:end="333:21">s</name><operator pos:start="333:22" pos:end="333:23">-&gt;</operator><name pos:start="333:24" pos:end="333:28">title</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="337:5" pos:end="345:5"><if pos:start="337:5" pos:end="345:5">if <condition pos:start="337:8" pos:end="337:22">(<expr pos:start="337:9" pos:end="337:21"><name pos:start="337:9" pos:end="337:21"><name pos:start="337:9" pos:end="337:9">s</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:18">comment</name><index pos:start="337:19" pos:end="337:21">[<expr pos:start="337:20" pos:end="337:20"><literal type="number" pos:start="337:20" pos:end="337:20">0</literal></expr>]</index></name></expr>)</condition>

    <block pos:start="339:5" pos:end="345:5">{<block_content pos:start="341:9" pos:end="343:32">

        <expr_stmt pos:start="341:9" pos:end="341:22"><expr pos:start="341:9" pos:end="341:21"><call pos:start="341:9" pos:end="341:21"><name pos:start="341:9" pos:end="341:13">put_v</name><argument_list pos:start="341:14" pos:end="341:21">(<argument pos:start="341:15" pos:end="341:16"><expr pos:start="341:15" pos:end="341:16"><name pos:start="341:15" pos:end="341:16">bc</name></expr></argument>, <argument pos:start="341:19" pos:end="341:20"><expr pos:start="341:19" pos:end="341:20"><literal type="number" pos:start="341:19" pos:end="341:20">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="341:24" pos:end="341:33">/* type */</comment>

        <expr_stmt pos:start="343:9" pos:end="343:32"><expr pos:start="343:9" pos:end="343:31"><call pos:start="343:9" pos:end="343:31"><name pos:start="343:9" pos:end="343:15">put_str</name><argument_list pos:start="343:16" pos:end="343:31">(<argument pos:start="343:17" pos:end="343:18"><expr pos:start="343:17" pos:end="343:18"><name pos:start="343:17" pos:end="343:18">bc</name></expr></argument>, <argument pos:start="343:21" pos:end="343:30"><expr pos:start="343:21" pos:end="343:30"><name pos:start="343:21" pos:end="343:30"><name pos:start="343:21" pos:end="343:21">s</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:30">comment</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="347:5" pos:end="355:5"><if pos:start="347:5" pos:end="355:5">if <condition pos:start="347:8" pos:end="347:24">(<expr pos:start="347:9" pos:end="347:23"><name pos:start="347:9" pos:end="347:23"><name pos:start="347:9" pos:end="347:9">s</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:20">copyright</name><index pos:start="347:21" pos:end="347:23">[<expr pos:start="347:22" pos:end="347:22"><literal type="number" pos:start="347:22" pos:end="347:22">0</literal></expr>]</index></name></expr>)</condition>

    <block pos:start="349:5" pos:end="355:5">{<block_content pos:start="351:9" pos:end="353:34">

        <expr_stmt pos:start="351:9" pos:end="351:22"><expr pos:start="351:9" pos:end="351:21"><call pos:start="351:9" pos:end="351:21"><name pos:start="351:9" pos:end="351:13">put_v</name><argument_list pos:start="351:14" pos:end="351:21">(<argument pos:start="351:15" pos:end="351:16"><expr pos:start="351:15" pos:end="351:16"><name pos:start="351:15" pos:end="351:16">bc</name></expr></argument>, <argument pos:start="351:19" pos:end="351:20"><expr pos:start="351:19" pos:end="351:20"><literal type="number" pos:start="351:19" pos:end="351:20">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="351:24" pos:end="351:33">/* type */</comment>

        <expr_stmt pos:start="353:9" pos:end="353:34"><expr pos:start="353:9" pos:end="353:33"><call pos:start="353:9" pos:end="353:33"><name pos:start="353:9" pos:end="353:15">put_str</name><argument_list pos:start="353:16" pos:end="353:33">(<argument pos:start="353:17" pos:end="353:18"><expr pos:start="353:17" pos:end="353:18"><name pos:start="353:17" pos:end="353:18">bc</name></expr></argument>, <argument pos:start="353:21" pos:end="353:32"><expr pos:start="353:21" pos:end="353:32"><name pos:start="353:21" pos:end="353:32"><name pos:start="353:21" pos:end="353:21">s</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:32">copyright</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="357:5" pos:end="357:17">/* encoder */</comment>

    <if_stmt pos:start="359:5" pos:end="365:5"><if pos:start="359:5" pos:end="365:5">if<condition pos:start="359:7" pos:end="359:59">(<expr pos:start="359:8" pos:end="359:58"><operator pos:start="359:8" pos:end="359:8">!</operator><operator pos:start="359:9" pos:end="359:9">(</operator><name pos:start="359:10" pos:end="359:22"><name pos:start="359:10" pos:end="359:10">s</name><operator pos:start="359:11" pos:end="359:12">-&gt;</operator><name pos:start="359:13" pos:end="359:19">streams</name><index pos:start="359:20" pos:end="359:22">[<expr pos:start="359:21" pos:end="359:21"><literal type="number" pos:start="359:21" pos:end="359:21">0</literal></expr>]</index></name><operator pos:start="359:23" pos:end="359:24">-&gt;</operator><name pos:start="359:25" pos:end="359:35"><name pos:start="359:25" pos:end="359:29">codec</name><operator pos:start="359:30" pos:end="359:30">.</operator><name pos:start="359:31" pos:end="359:35">flags</name></name> <operator pos:start="359:37" pos:end="359:37">&amp;</operator> <name pos:start="359:39" pos:end="359:57">CODEC_FLAG_BITEXACT</name><operator pos:start="359:58" pos:end="359:58">)</operator></expr>)</condition><block pos:start="359:60" pos:end="365:5">{<block_content pos:start="361:9" pos:end="363:39">

        <expr_stmt pos:start="361:9" pos:end="361:22"><expr pos:start="361:9" pos:end="361:21"><call pos:start="361:9" pos:end="361:21"><name pos:start="361:9" pos:end="361:13">put_v</name><argument_list pos:start="361:14" pos:end="361:21">(<argument pos:start="361:15" pos:end="361:16"><expr pos:start="361:15" pos:end="361:16"><name pos:start="361:15" pos:end="361:16">bc</name></expr></argument>, <argument pos:start="361:19" pos:end="361:20"><expr pos:start="361:19" pos:end="361:20"><literal type="number" pos:start="361:19" pos:end="361:20">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="361:24" pos:end="361:33">/* type */</comment>

        <expr_stmt pos:start="363:9" pos:end="363:39"><expr pos:start="363:9" pos:end="363:38"><call pos:start="363:9" pos:end="363:38"><name pos:start="363:9" pos:end="363:15">put_str</name><argument_list pos:start="363:16" pos:end="363:38">(<argument pos:start="363:17" pos:end="363:18"><expr pos:start="363:17" pos:end="363:18"><name pos:start="363:17" pos:end="363:18">bc</name></expr></argument>, <argument pos:start="363:21" pos:end="363:37"><expr pos:start="363:21" pos:end="363:37"><name pos:start="363:21" pos:end="363:37">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="369:5" pos:end="369:17"><expr pos:start="369:5" pos:end="369:16"><call pos:start="369:5" pos:end="369:16"><name pos:start="369:5" pos:end="369:9">put_v</name><argument_list pos:start="369:10" pos:end="369:16">(<argument pos:start="369:11" pos:end="369:12"><expr pos:start="369:11" pos:end="369:12"><name pos:start="369:11" pos:end="369:12">bc</name></expr></argument>, <argument pos:start="369:15" pos:end="369:15"><expr pos:start="369:15" pos:end="369:15"><literal type="number" pos:start="369:15" pos:end="369:15">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="369:19" pos:end="369:32">/* eof info */</comment>

    <expr_stmt pos:start="371:5" pos:end="371:39"><expr pos:start="371:5" pos:end="371:38"><call pos:start="371:5" pos:end="371:38"><name pos:start="371:5" pos:end="371:23">update_packetheader</name><argument_list pos:start="371:24" pos:end="371:38">(<argument pos:start="371:25" pos:end="371:27"><expr pos:start="371:25" pos:end="371:27"><name pos:start="371:25" pos:end="371:27">nut</name></expr></argument>, <argument pos:start="371:30" pos:end="371:31"><expr pos:start="371:30" pos:end="371:31"><name pos:start="371:30" pos:end="371:31">bc</name></expr></argument>, <argument pos:start="371:34" pos:end="371:34"><expr pos:start="371:34" pos:end="371:34"><literal type="number" pos:start="371:34" pos:end="371:34">0</literal></expr></argument>, <argument pos:start="371:37" pos:end="371:37"><expr pos:start="371:37" pos:end="371:37"><literal type="number" pos:start="371:37" pos:end="371:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

    <expr_stmt pos:start="375:5" pos:end="375:25"><expr pos:start="375:5" pos:end="375:24"><call pos:start="375:5" pos:end="375:24"><name pos:start="375:5" pos:end="375:20">put_flush_packet</name><argument_list pos:start="375:21" pos:end="375:24">(<argument pos:start="375:22" pos:end="375:23"><expr pos:start="375:22" pos:end="375:23"><name pos:start="375:22" pos:end="375:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <return pos:start="379:5" pos:end="379:13">return <expr pos:start="379:12" pos:end="379:12"><literal type="number" pos:start="379:12" pos:end="379:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
