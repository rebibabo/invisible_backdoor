<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20589.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:45">yv12touyvy_unscaled_altivec</name><parameter_list pos:start="1:46" pos:end="3:59">(<parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:56">SwsContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">c</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:68">uint8_t</name><modifier pos:start="1:69" pos:end="1:69">*</modifier></type> <name pos:start="1:71" pos:end="1:75"><name pos:start="1:71" pos:end="1:73">src</name><index pos:start="1:74" pos:end="1:75">[]</index></name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:92"><decl pos:start="1:78" pos:end="1:92"><type pos:start="1:78" pos:end="1:90"><name pos:start="1:78" pos:end="1:80">int</name></type> <name pos:start="1:82" pos:end="1:92"><name pos:start="1:82" pos:end="1:90">srcStride</name><index pos:start="1:91" pos:end="1:92">[]</index></name></decl></parameter>, <parameter pos:start="1:95" pos:end="1:107"><decl pos:start="1:95" pos:end="1:107"><type pos:start="1:95" pos:end="1:107"><name pos:start="1:95" pos:end="1:97">int</name></type> <name pos:start="1:99" pos:end="1:107">srcSliceY</name></decl></parameter>,

     <parameter pos:start="3:6" pos:end="3:18"><decl pos:start="3:6" pos:end="3:18"><type pos:start="3:6" pos:end="3:18"><name pos:start="3:6" pos:end="3:8">int</name></type> <name pos:start="3:10" pos:end="3:18">srcSliceH</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:39"><decl pos:start="3:21" pos:end="3:39"><type pos:start="3:21" pos:end="3:37"><name pos:start="3:21" pos:end="3:27">uint8_t</name><modifier pos:start="3:28" pos:end="3:28">*</modifier></type> <name pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:37">dstParam</name><index pos:start="3:38" pos:end="3:39">[]</index></name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:58"><decl pos:start="3:42" pos:end="3:58"><type pos:start="3:42" pos:end="3:56"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:56">dstStride_a</name><index pos:start="3:57" pos:end="3:58">[]</index></name></decl></parameter>)</parameter_list> <block pos:start="3:61" pos:end="153:1">{<block_content pos:start="5:3" pos:end="151:19">

  <decl_stmt pos:start="5:3" pos:end="5:54"><decl pos:start="5:3" pos:end="5:53"><type pos:start="5:3" pos:end="5:11"><name pos:start="5:3" pos:end="5:9">uint8_t</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">dst</name><init pos:start="5:15" pos:end="5:53">=<expr pos:start="5:16" pos:end="5:53"><name pos:start="5:16" pos:end="5:26"><name pos:start="5:16" pos:end="5:23">dstParam</name><index pos:start="5:24" pos:end="5:26">[<expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr>]</index></name> <operator pos:start="5:28" pos:end="5:28">+</operator> <name pos:start="5:30" pos:end="5:43"><name pos:start="5:30" pos:end="5:40">dstStride_a</name><index pos:start="5:41" pos:end="5:43">[<expr pos:start="5:42" pos:end="5:42"><literal type="number" pos:start="5:42" pos:end="5:42">0</literal></expr>]</index></name><operator pos:start="5:44" pos:end="5:44">*</operator><name pos:start="5:45" pos:end="5:53">srcSliceY</name></expr></init></decl>;</decl_stmt>

  <comment type="line" pos:start="7:3" pos:end="7:101">// yv12toyuy2( src[0],src[1],src[2],dst,c-&gt;srcW,srcSliceH,srcStride[0],srcStride[1],dstStride[0] );</comment>

  <decl_stmt pos:start="9:3" pos:end="9:25"><decl pos:start="9:3" pos:end="9:24"><type pos:start="9:3" pos:end="9:11"><name pos:start="9:3" pos:end="9:9">uint8_t</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:15">ysrc</name> <init pos:start="9:17" pos:end="9:24">= <expr pos:start="9:19" pos:end="9:24"><name pos:start="9:19" pos:end="9:24"><name pos:start="9:19" pos:end="9:21">src</name><index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:25"><decl pos:start="11:3" pos:end="11:24"><type pos:start="11:3" pos:end="11:11"><name pos:start="11:3" pos:end="11:9">uint8_t</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:15">usrc</name> <init pos:start="11:17" pos:end="11:24">= <expr pos:start="11:19" pos:end="11:24"><name pos:start="11:19" pos:end="11:24"><name pos:start="11:19" pos:end="11:21">src</name><index pos:start="11:22" pos:end="11:24">[<expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:25"><decl pos:start="13:3" pos:end="13:24"><type pos:start="13:3" pos:end="13:11"><name pos:start="13:3" pos:end="13:9">uint8_t</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:15">vsrc</name> <init pos:start="13:17" pos:end="13:24">= <expr pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:21">src</name><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:28"><decl pos:start="15:3" pos:end="15:27"><type pos:start="15:3" pos:end="15:11"><specifier pos:start="15:3" pos:end="15:7">const</specifier> <name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:17">width</name> <init pos:start="15:19" pos:end="15:27">= <expr pos:start="15:21" pos:end="15:27"><name pos:start="15:21" pos:end="15:27"><name pos:start="15:21" pos:end="15:21">c</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:27">srcW</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="17:3" pos:end="17:31"><decl pos:start="17:3" pos:end="17:30"><type pos:start="17:3" pos:end="17:11"><specifier pos:start="17:3" pos:end="17:7">const</specifier> <name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:18">height</name> <init pos:start="17:20" pos:end="17:30">= <expr pos:start="17:22" pos:end="17:30"><name pos:start="17:22" pos:end="17:30">srcSliceH</name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="19:3" pos:end="19:37"><decl pos:start="19:3" pos:end="19:36"><type pos:start="19:3" pos:end="19:11"><specifier pos:start="19:3" pos:end="19:7">const</specifier> <name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:21">lumStride</name> <init pos:start="19:23" pos:end="19:36">= <expr pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:33">srcStride</name><index pos:start="19:34" pos:end="19:36">[<expr pos:start="19:35" pos:end="19:35"><literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="21:3" pos:end="21:39"><decl pos:start="21:3" pos:end="21:38"><type pos:start="21:3" pos:end="21:11"><specifier pos:start="21:3" pos:end="21:7">const</specifier> <name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:23">chromStride</name> <init pos:start="21:25" pos:end="21:38">= <expr pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:35">srcStride</name><index pos:start="21:36" pos:end="21:38">[<expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="23:3" pos:end="23:39"><decl pos:start="23:3" pos:end="23:38"><type pos:start="23:3" pos:end="23:11"><specifier pos:start="23:3" pos:end="23:7">const</specifier> <name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:21">dstStride</name> <init pos:start="23:23" pos:end="23:38">= <expr pos:start="23:25" pos:end="23:38"><name pos:start="23:25" pos:end="23:38"><name pos:start="23:25" pos:end="23:35">dstStride_a</name><index pos:start="23:36" pos:end="23:38">[<expr pos:start="23:37" pos:end="23:37"><literal type="number" pos:start="23:37" pos:end="23:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="25:3" pos:end="25:33"><decl pos:start="25:3" pos:end="25:32"><type pos:start="25:3" pos:end="25:11"><specifier pos:start="25:3" pos:end="25:7">const</specifier> <name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:28">vertLumPerChroma</name> <init pos:start="25:30" pos:end="25:32">= <expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">2</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="27:3" pos:end="27:55"><decl pos:start="27:3" pos:end="27:54"><type pos:start="27:3" pos:end="27:28"><specifier pos:start="27:3" pos:end="27:7">const</specifier> <name pos:start="27:9" pos:end="27:14">vector</name> <name pos:start="27:16" pos:end="27:23">unsigned</name> <name pos:start="27:25" pos:end="27:28">char</name></type> <name pos:start="27:30" pos:end="27:34">yperm</name> <init pos:start="27:36" pos:end="27:54">= <expr pos:start="27:38" pos:end="27:54"><call pos:start="27:38" pos:end="27:54"><name pos:start="27:38" pos:end="27:45">vec_lvsl</name><argument_list pos:start="27:46" pos:end="27:54">(<argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><literal type="number" pos:start="27:47" pos:end="27:47">0</literal></expr></argument>, <argument pos:start="27:50" pos:end="27:53"><expr pos:start="27:50" pos:end="27:53"><name pos:start="27:50" pos:end="27:53">ysrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="29:3" pos:end="29:26"><decl pos:start="29:3" pos:end="29:25"><type pos:start="29:3" pos:end="29:23"><specifier pos:start="29:3" pos:end="29:10">register</specifier> <name pos:start="29:12" pos:end="29:19">unsigned</name> <name pos:start="29:21" pos:end="29:23">int</name></type> <name pos:start="29:25" pos:end="29:25">y</name></decl>;</decl_stmt>



  <if_stmt pos:start="33:3" pos:end="39:3"><if pos:start="33:3" pos:end="39:3">if<condition pos:start="33:5" pos:end="33:14">(<expr pos:start="33:6" pos:end="33:13"><name pos:start="33:6" pos:end="33:10">width</name><operator pos:start="33:11" pos:end="33:11">&amp;</operator><literal type="number" pos:start="33:12" pos:end="33:13">15</literal></expr>)</condition><block pos:start="33:15" pos:end="39:3">{<block_content pos:start="35:5" pos:end="37:21">

    <expr_stmt pos:start="35:5" pos:end="35:92"><expr pos:start="35:5" pos:end="35:91"><call pos:start="35:5" pos:end="35:91"><name pos:start="35:5" pos:end="35:14">yv12touyvy</name><argument_list pos:start="35:15" pos:end="35:91">( <argument pos:start="35:17" pos:end="35:20"><expr pos:start="35:17" pos:end="35:20"><name pos:start="35:17" pos:end="35:20">ysrc</name></expr></argument>, <argument pos:start="35:23" pos:end="35:26"><expr pos:start="35:23" pos:end="35:26"><name pos:start="35:23" pos:end="35:26">usrc</name></expr></argument>, <argument pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:32">vsrc</name></expr></argument>, <argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">dst</name></expr></argument>,<argument pos:start="35:39" pos:end="35:45"><expr pos:start="35:39" pos:end="35:45"><name pos:start="35:39" pos:end="35:45"><name pos:start="35:39" pos:end="35:39">c</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:45">srcW</name></name></expr></argument>,<argument pos:start="35:47" pos:end="35:55"><expr pos:start="35:47" pos:end="35:55"><name pos:start="35:47" pos:end="35:55">srcSliceH</name></expr></argument>, <argument pos:start="35:58" pos:end="35:66"><expr pos:start="35:58" pos:end="35:66"><name pos:start="35:58" pos:end="35:66">lumStride</name></expr></argument>, <argument pos:start="35:69" pos:end="35:79"><expr pos:start="35:69" pos:end="35:79"><name pos:start="35:69" pos:end="35:79">chromStride</name></expr></argument>, <argument pos:start="35:82" pos:end="35:90"><expr pos:start="35:82" pos:end="35:90"><name pos:start="35:82" pos:end="35:90">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:21">return <expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:20">srcSliceH</name></expr>;</return>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="43:3" pos:end="55:4">/* this code assume:



  1) dst is 16 bytes-aligned

  2) dstStride is a multiple of 16

  3) width is a multiple of 16

  4) lum&amp;chrom stride are multiple of 8

  */</comment>



  <for pos:start="59:3" pos:end="149:5">for<control pos:start="59:6" pos:end="59:25">(<init pos:start="59:7" pos:end="59:10"><expr pos:start="59:7" pos:end="59:9"><name pos:start="59:7" pos:end="59:7">y</name><operator pos:start="59:8" pos:end="59:8">=</operator><literal type="number" pos:start="59:9" pos:end="59:9">0</literal></expr>;</init> <condition pos:start="59:12" pos:end="59:20"><expr pos:start="59:12" pos:end="59:19"><name pos:start="59:12" pos:end="59:12">y</name><operator pos:start="59:13" pos:end="59:13">&lt;</operator><name pos:start="59:14" pos:end="59:19">height</name></expr>;</condition> <incr pos:start="59:22" pos:end="59:24"><expr pos:start="59:22" pos:end="59:24"><name pos:start="59:22" pos:end="59:22">y</name><operator pos:start="59:23" pos:end="59:24">++</operator></expr></incr>)</control>

    <block pos:start="61:5" pos:end="149:5">{<block_content pos:start="63:7" pos:end="147:23">

      <decl_stmt pos:start="63:7" pos:end="63:12"><decl pos:start="63:7" pos:end="63:11"><type pos:start="63:7" pos:end="63:9"><name pos:start="63:7" pos:end="63:9">int</name></type> <name pos:start="63:11" pos:end="63:11">i</name></decl>;</decl_stmt>

      <for pos:start="65:7" pos:end="111:7">for <control pos:start="65:11" pos:end="65:41">(<init pos:start="65:12" pos:end="65:17"><expr pos:start="65:12" pos:end="65:16"><name pos:start="65:12" pos:end="65:12">i</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</init> <condition pos:start="65:19" pos:end="65:33"><expr pos:start="65:19" pos:end="65:32"><name pos:start="65:19" pos:end="65:19">i</name> <operator pos:start="65:21" pos:end="65:21">&lt;</operator> <name pos:start="65:23" pos:end="65:27">width</name> <operator pos:start="65:29" pos:end="65:29">-</operator> <literal type="number" pos:start="65:31" pos:end="65:32">31</literal></expr>;</condition> <incr pos:start="65:35" pos:end="65:40"><expr pos:start="65:35" pos:end="65:40"><name pos:start="65:35" pos:end="65:35">i</name><operator pos:start="65:36" pos:end="65:37">+=</operator> <literal type="number" pos:start="65:39" pos:end="65:40">32</literal></expr></incr>)</control> <block pos:start="65:43" pos:end="111:7">{<block_content pos:start="67:9" pos:end="109:45">

	<decl_stmt pos:start="67:9" pos:end="67:38"><decl pos:start="67:9" pos:end="67:37"><type pos:start="67:9" pos:end="67:26"><specifier pos:start="67:9" pos:end="67:13">const</specifier> <name pos:start="67:15" pos:end="67:22">unsigned</name> <name pos:start="67:24" pos:end="67:26">int</name></type> <name pos:start="67:28" pos:end="67:28">j</name> <init pos:start="67:30" pos:end="67:37">= <expr pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:32">i</name> <operator pos:start="67:34" pos:end="67:35">&gt;&gt;</operator> <literal type="number" pos:start="67:37" pos:end="67:37">1</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="69:9" pos:end="69:52"><decl pos:start="69:9" pos:end="69:51"><type pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:14">vector</name> <name pos:start="69:16" pos:end="69:23">unsigned</name> <name pos:start="69:25" pos:end="69:28">char</name></type> <name pos:start="69:30" pos:end="69:33">v_yA</name> <init pos:start="69:35" pos:end="69:51">= <expr pos:start="69:37" pos:end="69:51"><call pos:start="69:37" pos:end="69:51"><name pos:start="69:37" pos:end="69:42">vec_ld</name><argument_list pos:start="69:43" pos:end="69:51">(<argument pos:start="69:44" pos:end="69:44"><expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">i</name></expr></argument>, <argument pos:start="69:47" pos:end="69:50"><expr pos:start="69:47" pos:end="69:50"><name pos:start="69:47" pos:end="69:50">ysrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="71:9" pos:end="71:57"><decl pos:start="71:9" pos:end="71:56"><type pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:14">vector</name> <name pos:start="71:16" pos:end="71:23">unsigned</name> <name pos:start="71:25" pos:end="71:28">char</name></type> <name pos:start="71:30" pos:end="71:33">v_yB</name> <init pos:start="71:35" pos:end="71:56">= <expr pos:start="71:37" pos:end="71:56"><call pos:start="71:37" pos:end="71:56"><name pos:start="71:37" pos:end="71:42">vec_ld</name><argument_list pos:start="71:43" pos:end="71:56">(<argument pos:start="71:44" pos:end="71:49"><expr pos:start="71:44" pos:end="71:49"><name pos:start="71:44" pos:end="71:44">i</name> <operator pos:start="71:46" pos:end="71:46">+</operator> <literal type="number" pos:start="71:48" pos:end="71:49">16</literal></expr></argument>, <argument pos:start="71:52" pos:end="71:55"><expr pos:start="71:52" pos:end="71:55"><name pos:start="71:52" pos:end="71:55">ysrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="73:9" pos:end="73:57"><decl pos:start="73:9" pos:end="73:56"><type pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:14">vector</name> <name pos:start="73:16" pos:end="73:23">unsigned</name> <name pos:start="73:25" pos:end="73:28">char</name></type> <name pos:start="73:30" pos:end="73:33">v_yC</name> <init pos:start="73:35" pos:end="73:56">= <expr pos:start="73:37" pos:end="73:56"><call pos:start="73:37" pos:end="73:56"><name pos:start="73:37" pos:end="73:42">vec_ld</name><argument_list pos:start="73:43" pos:end="73:56">(<argument pos:start="73:44" pos:end="73:49"><expr pos:start="73:44" pos:end="73:49"><name pos:start="73:44" pos:end="73:44">i</name> <operator pos:start="73:46" pos:end="73:46">+</operator> <literal type="number" pos:start="73:48" pos:end="73:49">32</literal></expr></argument>, <argument pos:start="73:52" pos:end="73:55"><expr pos:start="73:52" pos:end="73:55"><name pos:start="73:52" pos:end="73:55">ysrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="75:9" pos:end="75:64"><decl pos:start="75:9" pos:end="75:63"><type pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:14">vector</name> <name pos:start="75:16" pos:end="75:23">unsigned</name> <name pos:start="75:25" pos:end="75:28">char</name></type> <name pos:start="75:30" pos:end="75:33">v_y1</name> <init pos:start="75:35" pos:end="75:63">= <expr pos:start="75:37" pos:end="75:63"><call pos:start="75:37" pos:end="75:63"><name pos:start="75:37" pos:end="75:44">vec_perm</name><argument_list pos:start="75:45" pos:end="75:63">(<argument pos:start="75:46" pos:end="75:49"><expr pos:start="75:46" pos:end="75:49"><name pos:start="75:46" pos:end="75:49">v_yA</name></expr></argument>, <argument pos:start="75:52" pos:end="75:55"><expr pos:start="75:52" pos:end="75:55"><name pos:start="75:52" pos:end="75:55">v_yB</name></expr></argument>, <argument pos:start="75:58" pos:end="75:62"><expr pos:start="75:58" pos:end="75:62"><name pos:start="75:58" pos:end="75:62">yperm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="77:9" pos:end="77:64"><decl pos:start="77:9" pos:end="77:63"><type pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:14">vector</name> <name pos:start="77:16" pos:end="77:23">unsigned</name> <name pos:start="77:25" pos:end="77:28">char</name></type> <name pos:start="77:30" pos:end="77:33">v_y2</name> <init pos:start="77:35" pos:end="77:63">= <expr pos:start="77:37" pos:end="77:63"><call pos:start="77:37" pos:end="77:63"><name pos:start="77:37" pos:end="77:44">vec_perm</name><argument_list pos:start="77:45" pos:end="77:63">(<argument pos:start="77:46" pos:end="77:49"><expr pos:start="77:46" pos:end="77:49"><name pos:start="77:46" pos:end="77:49">v_yB</name></expr></argument>, <argument pos:start="77:52" pos:end="77:55"><expr pos:start="77:52" pos:end="77:55"><name pos:start="77:52" pos:end="77:55">v_yC</name></expr></argument>, <argument pos:start="77:58" pos:end="77:62"><expr pos:start="77:58" pos:end="77:62"><name pos:start="77:58" pos:end="77:62">yperm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="79:9" pos:end="79:52"><decl pos:start="79:9" pos:end="79:51"><type pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:14">vector</name> <name pos:start="79:16" pos:end="79:23">unsigned</name> <name pos:start="79:25" pos:end="79:28">char</name></type> <name pos:start="79:30" pos:end="79:33">v_uA</name> <init pos:start="79:35" pos:end="79:51">= <expr pos:start="79:37" pos:end="79:51"><call pos:start="79:37" pos:end="79:51"><name pos:start="79:37" pos:end="79:42">vec_ld</name><argument_list pos:start="79:43" pos:end="79:51">(<argument pos:start="79:44" pos:end="79:44"><expr pos:start="79:44" pos:end="79:44"><name pos:start="79:44" pos:end="79:44">j</name></expr></argument>, <argument pos:start="79:47" pos:end="79:50"><expr pos:start="79:47" pos:end="79:50"><name pos:start="79:47" pos:end="79:50">usrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="81:9" pos:end="81:57"><decl pos:start="81:9" pos:end="81:56"><type pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:14">vector</name> <name pos:start="81:16" pos:end="81:23">unsigned</name> <name pos:start="81:25" pos:end="81:28">char</name></type> <name pos:start="81:30" pos:end="81:33">v_uB</name> <init pos:start="81:35" pos:end="81:56">= <expr pos:start="81:37" pos:end="81:56"><call pos:start="81:37" pos:end="81:56"><name pos:start="81:37" pos:end="81:42">vec_ld</name><argument_list pos:start="81:43" pos:end="81:56">(<argument pos:start="81:44" pos:end="81:49"><expr pos:start="81:44" pos:end="81:49"><name pos:start="81:44" pos:end="81:44">j</name> <operator pos:start="81:46" pos:end="81:46">+</operator> <literal type="number" pos:start="81:48" pos:end="81:49">16</literal></expr></argument>, <argument pos:start="81:52" pos:end="81:55"><expr pos:start="81:52" pos:end="81:55"><name pos:start="81:52" pos:end="81:55">usrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="83:9" pos:end="83:75"><decl pos:start="83:9" pos:end="83:74"><type pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:14">vector</name> <name pos:start="83:16" pos:end="83:23">unsigned</name> <name pos:start="83:25" pos:end="83:28">char</name></type> <name pos:start="83:30" pos:end="83:32">v_u</name> <init pos:start="83:34" pos:end="83:74">= <expr pos:start="83:36" pos:end="83:74"><call pos:start="83:36" pos:end="83:74"><name pos:start="83:36" pos:end="83:43">vec_perm</name><argument_list pos:start="83:44" pos:end="83:74">(<argument pos:start="83:45" pos:end="83:48"><expr pos:start="83:45" pos:end="83:48"><name pos:start="83:45" pos:end="83:48">v_uA</name></expr></argument>, <argument pos:start="83:51" pos:end="83:54"><expr pos:start="83:51" pos:end="83:54"><name pos:start="83:51" pos:end="83:54">v_uB</name></expr></argument>, <argument pos:start="83:57" pos:end="83:73"><expr pos:start="83:57" pos:end="83:73"><call pos:start="83:57" pos:end="83:73"><name pos:start="83:57" pos:end="83:64">vec_lvsl</name><argument_list pos:start="83:65" pos:end="83:73">(<argument pos:start="83:66" pos:end="83:66"><expr pos:start="83:66" pos:end="83:66"><name pos:start="83:66" pos:end="83:66">j</name></expr></argument>, <argument pos:start="83:69" pos:end="83:72"><expr pos:start="83:69" pos:end="83:72"><name pos:start="83:69" pos:end="83:72">usrc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="85:9" pos:end="85:52"><decl pos:start="85:9" pos:end="85:51"><type pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:14">vector</name> <name pos:start="85:16" pos:end="85:23">unsigned</name> <name pos:start="85:25" pos:end="85:28">char</name></type> <name pos:start="85:30" pos:end="85:33">v_vA</name> <init pos:start="85:35" pos:end="85:51">= <expr pos:start="85:37" pos:end="85:51"><call pos:start="85:37" pos:end="85:51"><name pos:start="85:37" pos:end="85:42">vec_ld</name><argument_list pos:start="85:43" pos:end="85:51">(<argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">j</name></expr></argument>, <argument pos:start="85:47" pos:end="85:50"><expr pos:start="85:47" pos:end="85:50"><name pos:start="85:47" pos:end="85:50">vsrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="87:9" pos:end="87:57"><decl pos:start="87:9" pos:end="87:56"><type pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:14">vector</name> <name pos:start="87:16" pos:end="87:23">unsigned</name> <name pos:start="87:25" pos:end="87:28">char</name></type> <name pos:start="87:30" pos:end="87:33">v_vB</name> <init pos:start="87:35" pos:end="87:56">= <expr pos:start="87:37" pos:end="87:56"><call pos:start="87:37" pos:end="87:56"><name pos:start="87:37" pos:end="87:42">vec_ld</name><argument_list pos:start="87:43" pos:end="87:56">(<argument pos:start="87:44" pos:end="87:49"><expr pos:start="87:44" pos:end="87:49"><name pos:start="87:44" pos:end="87:44">j</name> <operator pos:start="87:46" pos:end="87:46">+</operator> <literal type="number" pos:start="87:48" pos:end="87:49">16</literal></expr></argument>, <argument pos:start="87:52" pos:end="87:55"><expr pos:start="87:52" pos:end="87:55"><name pos:start="87:52" pos:end="87:55">vsrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="89:9" pos:end="89:75"><decl pos:start="89:9" pos:end="89:74"><type pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:14">vector</name> <name pos:start="89:16" pos:end="89:23">unsigned</name> <name pos:start="89:25" pos:end="89:28">char</name></type> <name pos:start="89:30" pos:end="89:32">v_v</name> <init pos:start="89:34" pos:end="89:74">= <expr pos:start="89:36" pos:end="89:74"><call pos:start="89:36" pos:end="89:74"><name pos:start="89:36" pos:end="89:43">vec_perm</name><argument_list pos:start="89:44" pos:end="89:74">(<argument pos:start="89:45" pos:end="89:48"><expr pos:start="89:45" pos:end="89:48"><name pos:start="89:45" pos:end="89:48">v_vA</name></expr></argument>, <argument pos:start="89:51" pos:end="89:54"><expr pos:start="89:51" pos:end="89:54"><name pos:start="89:51" pos:end="89:54">v_vB</name></expr></argument>, <argument pos:start="89:57" pos:end="89:73"><expr pos:start="89:57" pos:end="89:73"><call pos:start="89:57" pos:end="89:73"><name pos:start="89:57" pos:end="89:64">vec_lvsl</name><argument_list pos:start="89:65" pos:end="89:73">(<argument pos:start="89:66" pos:end="89:66"><expr pos:start="89:66" pos:end="89:66"><name pos:start="89:66" pos:end="89:66">j</name></expr></argument>, <argument pos:start="89:69" pos:end="89:72"><expr pos:start="89:69" pos:end="89:72"><name pos:start="89:69" pos:end="89:72">vsrc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="91:9" pos:end="91:59"><decl pos:start="91:9" pos:end="91:58"><type pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:14">vector</name> <name pos:start="91:16" pos:end="91:23">unsigned</name> <name pos:start="91:25" pos:end="91:28">char</name></type> <name pos:start="91:30" pos:end="91:35">v_uv_a</name> <init pos:start="91:37" pos:end="91:58">= <expr pos:start="91:39" pos:end="91:58"><call pos:start="91:39" pos:end="91:58"><name pos:start="91:39" pos:end="91:48">vec_mergeh</name><argument_list pos:start="91:49" pos:end="91:58">(<argument pos:start="91:50" pos:end="91:52"><expr pos:start="91:50" pos:end="91:52"><name pos:start="91:50" pos:end="91:52">v_u</name></expr></argument>, <argument pos:start="91:55" pos:end="91:57"><expr pos:start="91:55" pos:end="91:57"><name pos:start="91:55" pos:end="91:57">v_v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="93:9" pos:end="93:59"><decl pos:start="93:9" pos:end="93:58"><type pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:14">vector</name> <name pos:start="93:16" pos:end="93:23">unsigned</name> <name pos:start="93:25" pos:end="93:28">char</name></type> <name pos:start="93:30" pos:end="93:35">v_uv_b</name> <init pos:start="93:37" pos:end="93:58">= <expr pos:start="93:39" pos:end="93:58"><call pos:start="93:39" pos:end="93:58"><name pos:start="93:39" pos:end="93:48">vec_mergel</name><argument_list pos:start="93:49" pos:end="93:58">(<argument pos:start="93:50" pos:end="93:52"><expr pos:start="93:50" pos:end="93:52"><name pos:start="93:50" pos:end="93:52">v_u</name></expr></argument>, <argument pos:start="93:55" pos:end="93:57"><expr pos:start="93:55" pos:end="93:57"><name pos:start="93:55" pos:end="93:57">v_v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="95:9" pos:end="95:65"><decl pos:start="95:9" pos:end="95:64"><type pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:14">vector</name> <name pos:start="95:16" pos:end="95:23">unsigned</name> <name pos:start="95:25" pos:end="95:28">char</name></type> <name pos:start="95:30" pos:end="95:37">v_uyvy_0</name> <init pos:start="95:39" pos:end="95:64">= <expr pos:start="95:41" pos:end="95:64"><call pos:start="95:41" pos:end="95:64"><name pos:start="95:41" pos:end="95:50">vec_mergeh</name><argument_list pos:start="95:51" pos:end="95:64">(<argument pos:start="95:52" pos:end="95:57"><expr pos:start="95:52" pos:end="95:57"><name pos:start="95:52" pos:end="95:57">v_uv_a</name></expr></argument>, <argument pos:start="95:60" pos:end="95:63"><expr pos:start="95:60" pos:end="95:63"><name pos:start="95:60" pos:end="95:63">v_y1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="97:9" pos:end="97:65"><decl pos:start="97:9" pos:end="97:64"><type pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:14">vector</name> <name pos:start="97:16" pos:end="97:23">unsigned</name> <name pos:start="97:25" pos:end="97:28">char</name></type> <name pos:start="97:30" pos:end="97:37">v_uyvy_1</name> <init pos:start="97:39" pos:end="97:64">= <expr pos:start="97:41" pos:end="97:64"><call pos:start="97:41" pos:end="97:64"><name pos:start="97:41" pos:end="97:50">vec_mergel</name><argument_list pos:start="97:51" pos:end="97:64">(<argument pos:start="97:52" pos:end="97:57"><expr pos:start="97:52" pos:end="97:57"><name pos:start="97:52" pos:end="97:57">v_uv_a</name></expr></argument>, <argument pos:start="97:60" pos:end="97:63"><expr pos:start="97:60" pos:end="97:63"><name pos:start="97:60" pos:end="97:63">v_y1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="99:9" pos:end="99:65"><decl pos:start="99:9" pos:end="99:64"><type pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:14">vector</name> <name pos:start="99:16" pos:end="99:23">unsigned</name> <name pos:start="99:25" pos:end="99:28">char</name></type> <name pos:start="99:30" pos:end="99:37">v_uyvy_2</name> <init pos:start="99:39" pos:end="99:64">= <expr pos:start="99:41" pos:end="99:64"><call pos:start="99:41" pos:end="99:64"><name pos:start="99:41" pos:end="99:50">vec_mergeh</name><argument_list pos:start="99:51" pos:end="99:64">(<argument pos:start="99:52" pos:end="99:57"><expr pos:start="99:52" pos:end="99:57"><name pos:start="99:52" pos:end="99:57">v_uv_b</name></expr></argument>, <argument pos:start="99:60" pos:end="99:63"><expr pos:start="99:60" pos:end="99:63"><name pos:start="99:60" pos:end="99:63">v_y2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="101:9" pos:end="101:65"><decl pos:start="101:9" pos:end="101:64"><type pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:14">vector</name> <name pos:start="101:16" pos:end="101:23">unsigned</name> <name pos:start="101:25" pos:end="101:28">char</name></type> <name pos:start="101:30" pos:end="101:37">v_uyvy_3</name> <init pos:start="101:39" pos:end="101:64">= <expr pos:start="101:41" pos:end="101:64"><call pos:start="101:41" pos:end="101:64"><name pos:start="101:41" pos:end="101:50">vec_mergel</name><argument_list pos:start="101:51" pos:end="101:64">(<argument pos:start="101:52" pos:end="101:57"><expr pos:start="101:52" pos:end="101:57"><name pos:start="101:52" pos:end="101:57">v_uv_b</name></expr></argument>, <argument pos:start="101:60" pos:end="101:63"><expr pos:start="101:60" pos:end="101:63"><name pos:start="101:60" pos:end="101:63">v_y2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="103:9" pos:end="103:40"><expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:14">vec_st</name><argument_list pos:start="103:15" pos:end="103:39">(<argument pos:start="103:16" pos:end="103:23"><expr pos:start="103:16" pos:end="103:23"><name pos:start="103:16" pos:end="103:23">v_uyvy_0</name></expr></argument>, <argument pos:start="103:26" pos:end="103:33"><expr pos:start="103:26" pos:end="103:33"><operator pos:start="103:26" pos:end="103:26">(</operator><name pos:start="103:27" pos:end="103:27">i</name> <operator pos:start="103:29" pos:end="103:30">&lt;&lt;</operator> <literal type="number" pos:start="103:32" pos:end="103:32">1</literal><operator pos:start="103:33" pos:end="103:33">)</operator></expr></argument>, <argument pos:start="103:36" pos:end="103:38"><expr pos:start="103:36" pos:end="103:38"><name pos:start="103:36" pos:end="103:38">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="105:9" pos:end="105:45"><expr pos:start="105:9" pos:end="105:44"><call pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:14">vec_st</name><argument_list pos:start="105:15" pos:end="105:44">(<argument pos:start="105:16" pos:end="105:23"><expr pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:23">v_uyvy_1</name></expr></argument>, <argument pos:start="105:26" pos:end="105:38"><expr pos:start="105:26" pos:end="105:38"><operator pos:start="105:26" pos:end="105:26">(</operator><name pos:start="105:27" pos:end="105:27">i</name> <operator pos:start="105:29" pos:end="105:30">&lt;&lt;</operator> <literal type="number" pos:start="105:32" pos:end="105:32">1</literal><operator pos:start="105:33" pos:end="105:33">)</operator> <operator pos:start="105:35" pos:end="105:35">+</operator> <literal type="number" pos:start="105:37" pos:end="105:38">16</literal></expr></argument>, <argument pos:start="105:41" pos:end="105:43"><expr pos:start="105:41" pos:end="105:43"><name pos:start="105:41" pos:end="105:43">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="107:9" pos:end="107:45"><expr pos:start="107:9" pos:end="107:44"><call pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:14">vec_st</name><argument_list pos:start="107:15" pos:end="107:44">(<argument pos:start="107:16" pos:end="107:23"><expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:23">v_uyvy_2</name></expr></argument>, <argument pos:start="107:26" pos:end="107:38"><expr pos:start="107:26" pos:end="107:38"><operator pos:start="107:26" pos:end="107:26">(</operator><name pos:start="107:27" pos:end="107:27">i</name> <operator pos:start="107:29" pos:end="107:30">&lt;&lt;</operator> <literal type="number" pos:start="107:32" pos:end="107:32">1</literal><operator pos:start="107:33" pos:end="107:33">)</operator> <operator pos:start="107:35" pos:end="107:35">+</operator> <literal type="number" pos:start="107:37" pos:end="107:38">32</literal></expr></argument>, <argument pos:start="107:41" pos:end="107:43"><expr pos:start="107:41" pos:end="107:43"><name pos:start="107:41" pos:end="107:43">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="109:9" pos:end="109:45"><expr pos:start="109:9" pos:end="109:44"><call pos:start="109:9" pos:end="109:44"><name pos:start="109:9" pos:end="109:14">vec_st</name><argument_list pos:start="109:15" pos:end="109:44">(<argument pos:start="109:16" pos:end="109:23"><expr pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:23">v_uyvy_3</name></expr></argument>, <argument pos:start="109:26" pos:end="109:38"><expr pos:start="109:26" pos:end="109:38"><operator pos:start="109:26" pos:end="109:26">(</operator><name pos:start="109:27" pos:end="109:27">i</name> <operator pos:start="109:29" pos:end="109:30">&lt;&lt;</operator> <literal type="number" pos:start="109:32" pos:end="109:32">1</literal><operator pos:start="109:33" pos:end="109:33">)</operator> <operator pos:start="109:35" pos:end="109:35">+</operator> <literal type="number" pos:start="109:37" pos:end="109:38">48</literal></expr></argument>, <argument pos:start="109:41" pos:end="109:43"><expr pos:start="109:41" pos:end="109:43"><name pos:start="109:41" pos:end="109:43">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></for>

      <if_stmt pos:start="113:7" pos:end="133:7"><if pos:start="113:7" pos:end="133:7">if <condition pos:start="113:10" pos:end="113:20">(<expr pos:start="113:11" pos:end="113:19"><name pos:start="113:11" pos:end="113:11">i</name> <operator pos:start="113:13" pos:end="113:13">&lt;</operator> <name pos:start="113:15" pos:end="113:19">width</name></expr>)</condition> <block pos:start="113:22" pos:end="133:7">{<block_content pos:start="115:9" pos:end="131:45">

	<decl_stmt pos:start="115:9" pos:end="115:38"><decl pos:start="115:9" pos:end="115:37"><type pos:start="115:9" pos:end="115:26"><specifier pos:start="115:9" pos:end="115:13">const</specifier> <name pos:start="115:15" pos:end="115:22">unsigned</name> <name pos:start="115:24" pos:end="115:26">int</name></type> <name pos:start="115:28" pos:end="115:28">j</name> <init pos:start="115:30" pos:end="115:37">= <expr pos:start="115:32" pos:end="115:37"><name pos:start="115:32" pos:end="115:32">i</name> <operator pos:start="115:34" pos:end="115:35">&gt;&gt;</operator> <literal type="number" pos:start="115:37" pos:end="115:37">1</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="117:9" pos:end="117:52"><decl pos:start="117:9" pos:end="117:51"><type pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:14">vector</name> <name pos:start="117:16" pos:end="117:23">unsigned</name> <name pos:start="117:25" pos:end="117:28">char</name></type> <name pos:start="117:30" pos:end="117:33">v_y1</name> <init pos:start="117:35" pos:end="117:51">= <expr pos:start="117:37" pos:end="117:51"><call pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:42">vec_ld</name><argument_list pos:start="117:43" pos:end="117:51">(<argument pos:start="117:44" pos:end="117:44"><expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">i</name></expr></argument>, <argument pos:start="117:47" pos:end="117:50"><expr pos:start="117:47" pos:end="117:50"><name pos:start="117:47" pos:end="117:50">ysrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="119:9" pos:end="119:51"><decl pos:start="119:9" pos:end="119:50"><type pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:14">vector</name> <name pos:start="119:16" pos:end="119:23">unsigned</name> <name pos:start="119:25" pos:end="119:28">char</name></type> <name pos:start="119:30" pos:end="119:32">v_u</name> <init pos:start="119:34" pos:end="119:50">= <expr pos:start="119:36" pos:end="119:50"><call pos:start="119:36" pos:end="119:50"><name pos:start="119:36" pos:end="119:41">vec_ld</name><argument_list pos:start="119:42" pos:end="119:50">(<argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><name pos:start="119:43" pos:end="119:43">j</name></expr></argument>, <argument pos:start="119:46" pos:end="119:49"><expr pos:start="119:46" pos:end="119:49"><name pos:start="119:46" pos:end="119:49">usrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="121:9" pos:end="121:51"><decl pos:start="121:9" pos:end="121:50"><type pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:14">vector</name> <name pos:start="121:16" pos:end="121:23">unsigned</name> <name pos:start="121:25" pos:end="121:28">char</name></type> <name pos:start="121:30" pos:end="121:32">v_v</name> <init pos:start="121:34" pos:end="121:50">= <expr pos:start="121:36" pos:end="121:50"><call pos:start="121:36" pos:end="121:50"><name pos:start="121:36" pos:end="121:41">vec_ld</name><argument_list pos:start="121:42" pos:end="121:50">(<argument pos:start="121:43" pos:end="121:43"><expr pos:start="121:43" pos:end="121:43"><name pos:start="121:43" pos:end="121:43">j</name></expr></argument>, <argument pos:start="121:46" pos:end="121:49"><expr pos:start="121:46" pos:end="121:49"><name pos:start="121:46" pos:end="121:49">vsrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="123:9" pos:end="123:59"><decl pos:start="123:9" pos:end="123:58"><type pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:14">vector</name> <name pos:start="123:16" pos:end="123:23">unsigned</name> <name pos:start="123:25" pos:end="123:28">char</name></type> <name pos:start="123:30" pos:end="123:35">v_uv_a</name> <init pos:start="123:37" pos:end="123:58">= <expr pos:start="123:39" pos:end="123:58"><call pos:start="123:39" pos:end="123:58"><name pos:start="123:39" pos:end="123:48">vec_mergeh</name><argument_list pos:start="123:49" pos:end="123:58">(<argument pos:start="123:50" pos:end="123:52"><expr pos:start="123:50" pos:end="123:52"><name pos:start="123:50" pos:end="123:52">v_u</name></expr></argument>, <argument pos:start="123:55" pos:end="123:57"><expr pos:start="123:55" pos:end="123:57"><name pos:start="123:55" pos:end="123:57">v_v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="125:9" pos:end="125:65"><decl pos:start="125:9" pos:end="125:64"><type pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:14">vector</name> <name pos:start="125:16" pos:end="125:23">unsigned</name> <name pos:start="125:25" pos:end="125:28">char</name></type> <name pos:start="125:30" pos:end="125:37">v_uyvy_0</name> <init pos:start="125:39" pos:end="125:64">= <expr pos:start="125:41" pos:end="125:64"><call pos:start="125:41" pos:end="125:64"><name pos:start="125:41" pos:end="125:50">vec_mergeh</name><argument_list pos:start="125:51" pos:end="125:64">(<argument pos:start="125:52" pos:end="125:57"><expr pos:start="125:52" pos:end="125:57"><name pos:start="125:52" pos:end="125:57">v_uv_a</name></expr></argument>, <argument pos:start="125:60" pos:end="125:63"><expr pos:start="125:60" pos:end="125:63"><name pos:start="125:60" pos:end="125:63">v_y1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="127:9" pos:end="127:65"><decl pos:start="127:9" pos:end="127:64"><type pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:14">vector</name> <name pos:start="127:16" pos:end="127:23">unsigned</name> <name pos:start="127:25" pos:end="127:28">char</name></type> <name pos:start="127:30" pos:end="127:37">v_uyvy_1</name> <init pos:start="127:39" pos:end="127:64">= <expr pos:start="127:41" pos:end="127:64"><call pos:start="127:41" pos:end="127:64"><name pos:start="127:41" pos:end="127:50">vec_mergel</name><argument_list pos:start="127:51" pos:end="127:64">(<argument pos:start="127:52" pos:end="127:57"><expr pos:start="127:52" pos:end="127:57"><name pos:start="127:52" pos:end="127:57">v_uv_a</name></expr></argument>, <argument pos:start="127:60" pos:end="127:63"><expr pos:start="127:60" pos:end="127:63"><name pos:start="127:60" pos:end="127:63">v_y1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="129:9" pos:end="129:40"><expr pos:start="129:9" pos:end="129:39"><call pos:start="129:9" pos:end="129:39"><name pos:start="129:9" pos:end="129:14">vec_st</name><argument_list pos:start="129:15" pos:end="129:39">(<argument pos:start="129:16" pos:end="129:23"><expr pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:23">v_uyvy_0</name></expr></argument>, <argument pos:start="129:26" pos:end="129:33"><expr pos:start="129:26" pos:end="129:33"><operator pos:start="129:26" pos:end="129:26">(</operator><name pos:start="129:27" pos:end="129:27">i</name> <operator pos:start="129:29" pos:end="129:30">&lt;&lt;</operator> <literal type="number" pos:start="129:32" pos:end="129:32">1</literal><operator pos:start="129:33" pos:end="129:33">)</operator></expr></argument>, <argument pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><name pos:start="129:36" pos:end="129:38">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="131:9" pos:end="131:45"><expr pos:start="131:9" pos:end="131:44"><call pos:start="131:9" pos:end="131:44"><name pos:start="131:9" pos:end="131:14">vec_st</name><argument_list pos:start="131:15" pos:end="131:44">(<argument pos:start="131:16" pos:end="131:23"><expr pos:start="131:16" pos:end="131:23"><name pos:start="131:16" pos:end="131:23">v_uyvy_1</name></expr></argument>, <argument pos:start="131:26" pos:end="131:38"><expr pos:start="131:26" pos:end="131:38"><operator pos:start="131:26" pos:end="131:26">(</operator><name pos:start="131:27" pos:end="131:27">i</name> <operator pos:start="131:29" pos:end="131:30">&lt;&lt;</operator> <literal type="number" pos:start="131:32" pos:end="131:32">1</literal><operator pos:start="131:33" pos:end="131:33">)</operator> <operator pos:start="131:35" pos:end="131:35">+</operator> <literal type="number" pos:start="131:37" pos:end="131:38">16</literal></expr></argument>, <argument pos:start="131:41" pos:end="131:43"><expr pos:start="131:41" pos:end="131:43"><name pos:start="131:41" pos:end="131:43">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>

      <if_stmt pos:start="135:7" pos:end="143:9"><if pos:start="135:7" pos:end="143:9">if<condition pos:start="135:9" pos:end="135:57">(<expr pos:start="135:10" pos:end="135:55"><operator pos:start="135:10" pos:end="135:10">(</operator><name pos:start="135:11" pos:end="135:11">y</name><operator pos:start="135:12" pos:end="135:12">&amp;</operator><operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:29">vertLumPerChroma</name><operator pos:start="135:30" pos:end="135:30">-</operator><literal type="number" pos:start="135:31" pos:end="135:31">1</literal><operator pos:start="135:32" pos:end="135:32">)</operator><operator pos:start="135:33" pos:end="135:33">)</operator><operator pos:start="135:34" pos:end="135:35">==</operator><operator pos:start="135:36" pos:end="135:36">(</operator><name pos:start="135:37" pos:end="135:52">vertLumPerChroma</name><operator pos:start="135:53" pos:end="135:53">-</operator><literal type="number" pos:start="135:54" pos:end="135:54">1</literal><operator pos:start="135:55" pos:end="135:55">)</operator></expr> )</condition>

	<block pos:start="137:9" pos:end="143:9">{<block_content pos:start="139:11" pos:end="141:30">

	  <expr_stmt pos:start="139:11" pos:end="139:30"><expr pos:start="139:11" pos:end="139:29"><name pos:start="139:11" pos:end="139:14">usrc</name> <operator pos:start="139:16" pos:end="139:17">+=</operator> <name pos:start="139:19" pos:end="139:29">chromStride</name></expr>;</expr_stmt>

	  <expr_stmt pos:start="141:11" pos:end="141:30"><expr pos:start="141:11" pos:end="141:29"><name pos:start="141:11" pos:end="141:14">vsrc</name> <operator pos:start="141:16" pos:end="141:17">+=</operator> <name pos:start="141:19" pos:end="141:29">chromStride</name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

      <expr_stmt pos:start="145:7" pos:end="145:24"><expr pos:start="145:7" pos:end="145:23"><name pos:start="145:7" pos:end="145:10">ysrc</name> <operator pos:start="145:12" pos:end="145:13">+=</operator> <name pos:start="145:15" pos:end="145:23">lumStride</name></expr>;</expr_stmt>

      <expr_stmt pos:start="147:7" pos:end="147:23"><expr pos:start="147:7" pos:end="147:22"><name pos:start="147:7" pos:end="147:9">dst</name> <operator pos:start="147:11" pos:end="147:12">+=</operator> <name pos:start="147:14" pos:end="147:22">dstStride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

  <return pos:start="151:3" pos:end="151:19">return <expr pos:start="151:10" pos:end="151:18"><name pos:start="151:10" pos:end="151:18">srcSliceH</name></expr>;</return>

</block_content>}</block></function>
</unit>
