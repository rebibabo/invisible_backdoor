<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10071.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">flush_packet</name><parameter_list pos:start="1:25" pos:end="1:78">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:63">stream_index</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:77">last_pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:27">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegMuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">StreamInfo</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">stream</name> <init pos:start="7:24" pos:end="7:62">= <expr pos:start="7:26" pos:end="7:62"><name pos:start="7:26" pos:end="7:51"><name pos:start="7:26" pos:end="7:28">ctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:37">streams</name><index pos:start="7:38" pos:end="7:51">[<expr pos:start="7:39" pos:end="7:50"><name pos:start="7:39" pos:end="7:50">stream_index</name></expr>]</index></name><operator pos:start="7:52" pos:end="7:53">-&gt;</operator><name pos:start="7:54" pos:end="7:62">priv_data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:77"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name></decl>, <decl pos:start="11:15" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:26">payload_size</name></decl>, <decl pos:start="11:29" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:37">startcode</name></decl>, <decl pos:start="11:40" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:40" pos:end="11:41">id</name></decl>, <decl pos:start="11:44" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:44" pos:end="11:46">len</name></decl>, <decl pos:start="11:49" pos:end="11:61"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:49" pos:end="11:61">stuffing_size</name></decl>, <decl pos:start="11:64" pos:end="11:64"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:64" pos:end="11:64">i</name></decl>, <decl pos:start="11:67" pos:end="11:76"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:67" pos:end="11:76">header_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:18">buffer</name><index pos:start="15:19" pos:end="15:23">[<expr pos:start="15:20" pos:end="15:22"><literal type="number" pos:start="15:20" pos:end="15:22">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">last</name> <init pos:start="17:14" pos:end="17:31">= <expr pos:start="17:16" pos:end="17:31"><ternary pos:start="17:16" pos:end="17:31"><condition pos:start="17:16" pos:end="17:25"><expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23">last_pkt</name></expr> ?</condition><then pos:start="17:27" pos:end="17:27"> <expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">4</literal></expr> </then><else pos:start="17:29" pos:end="17:31">: <expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    

    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:6">id</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:19"><name pos:start="21:10" pos:end="21:15">stream</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="34:0"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:13">timestamp</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:22">stream</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:33">start_pts</name></name></expr>;</expr_stmt>



<cpp:if pos:start="27:1" pos:end="27:5">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:5"><literal type="number" pos:start="27:5" pos:end="27:5">0</literal></expr></cpp:if>

    printf("packet ID=%2x PTS=%0.3f\n", 

           id, timestamp / 90000.0);

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:11">buf_ptr</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:20">buffer</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="55:5">if <condition pos:start="39:8" pos:end="39:56">(<expr pos:start="39:9" pos:end="39:55"><operator pos:start="39:9" pos:end="39:9">(</operator><operator pos:start="39:10" pos:end="39:10">(</operator><name pos:start="39:11" pos:end="39:26"><name pos:start="39:11" pos:end="39:11">s</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:26">packet_number</name></name> <operator pos:start="39:28" pos:end="39:28">%</operator> <name pos:start="39:30" pos:end="39:48"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:48">pack_header_freq</name></name><operator pos:start="39:49" pos:end="39:49">)</operator> <operator pos:start="39:51" pos:end="39:52">==</operator> <literal type="number" pos:start="39:54" pos:end="39:54">0</literal><operator pos:start="39:55" pos:end="39:55">)</operator></expr>)</condition> <block pos:start="39:58" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <comment type="block" pos:start="41:9" pos:end="41:54">/* output pack and systems header if needed */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:12">size</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:55"><name pos:start="43:16" pos:end="43:30">put_pack_header</name><argument_list pos:start="43:31" pos:end="43:55">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">ctx</name></expr></argument>, <argument pos:start="43:37" pos:end="43:43"><expr pos:start="43:37" pos:end="43:43"><name pos:start="43:37" pos:end="43:43">buf_ptr</name></expr></argument>, <argument pos:start="43:46" pos:end="43:54"><expr pos:start="43:46" pos:end="43:54"><name pos:start="43:46" pos:end="43:54">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:15">buf_ptr</name> <operator pos:start="45:17" pos:end="45:18">+=</operator> <name pos:start="45:20" pos:end="45:23">size</name></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:60">(<expr pos:start="47:13" pos:end="47:59"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:29">packet_number</name></name> <operator pos:start="47:31" pos:end="47:31">%</operator> <name pos:start="47:33" pos:end="47:53"><name pos:start="47:33" pos:end="47:33">s</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:53">system_header_freq</name></name><operator pos:start="47:54" pos:end="47:54">)</operator> <operator pos:start="47:56" pos:end="47:57">==</operator> <literal type="number" pos:start="47:59" pos:end="47:59">0</literal></expr>)</condition> <block pos:start="47:62" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:28">

            <expr_stmt pos:start="49:13" pos:end="49:51"><expr pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:16">size</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:50"><name pos:start="49:20" pos:end="49:36">put_system_header</name><argument_list pos:start="49:37" pos:end="49:50">(<argument pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><name pos:start="49:38" pos:end="49:40">ctx</name></expr></argument>, <argument pos:start="49:43" pos:end="49:49"><expr pos:start="49:43" pos:end="49:49"><name pos:start="49:43" pos:end="49:49">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:19">buf_ptr</name> <operator pos:start="51:21" pos:end="51:22">+=</operator> <name pos:start="51:24" pos:end="51:27">size</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:8">size</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <name pos:start="57:12" pos:end="57:18">buf_ptr</name> <operator pos:start="57:20" pos:end="57:20">-</operator> <name pos:start="57:22" pos:end="57:27">buffer</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><call pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:14">put_buffer</name><argument_list pos:start="59:15" pos:end="59:38">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><operator pos:start="59:16" pos:end="59:16">&amp;</operator><name pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:19">ctx</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">pb</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:31"><expr pos:start="59:26" pos:end="59:31"><name pos:start="59:26" pos:end="59:31">buffer</name></expr></argument>, <argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:23">/* packet header */</comment>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:20">(<expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:19">is_mpeg2</name></name></expr>)</condition> <block pos:start="65:22" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:23">

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:18">header_len</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:23">

        <expr_stmt pos:start="71:9" pos:end="71:23"><expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:18">header_len</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">5</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:67"><expr pos:start="75:5" pos:end="75:66"><name pos:start="75:5" pos:end="75:16">payload_size</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:33"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:33">packet_size</name></name> <operator pos:start="75:35" pos:end="75:35">-</operator> <operator pos:start="75:37" pos:end="75:37">(</operator><name pos:start="75:38" pos:end="75:41">size</name> <operator pos:start="75:43" pos:end="75:43">+</operator> <literal type="number" pos:start="75:45" pos:end="75:47">6</literal> <operator pos:start="75:47" pos:end="75:47">+</operator> <name pos:start="75:49" pos:end="75:58">header_len</name> <operator pos:start="75:60" pos:end="75:60">+</operator> <name pos:start="75:62" pos:end="75:65">last</name><operator pos:start="75:66" pos:end="75:66">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="87:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:18">(<expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:10">id</name> <operator pos:start="77:12" pos:end="77:12">&lt;</operator> <literal type="number" pos:start="77:14" pos:end="77:17">0xc0</literal></expr>)</condition> <block pos:start="77:20" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:26">

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:17">startcode</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:36">PRIVATE_STREAM_1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:20">payload_size</name> <operator pos:start="81:22" pos:end="81:23">-=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="87:5">else <block pos:start="83:12" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:31">

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:17">startcode</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <literal type="number" pos:start="85:21" pos:end="85:27">0x100</literal> <operator pos:start="85:27" pos:end="85:27">+</operator> <name pos:start="85:29" pos:end="85:30">id</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:54"><expr pos:start="89:5" pos:end="89:53"><name pos:start="89:5" pos:end="89:17">stuffing_size</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:32">payload_size</name> <operator pos:start="89:34" pos:end="89:34">-</operator> <name pos:start="89:36" pos:end="89:53"><name pos:start="89:36" pos:end="89:41">stream</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:53">buffer_ptr</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:26"><if pos:start="91:5" pos:end="93:26">if <condition pos:start="91:8" pos:end="91:26">(<expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:21">stuffing_size</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <literal type="number" pos:start="91:25" pos:end="91:25">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:26"><block_content pos:start="93:9" pos:end="93:26">

        <expr_stmt pos:start="93:9" pos:end="93:26"><expr pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:21">stuffing_size</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <literal type="number" pos:start="93:25" pos:end="93:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:34"><expr pos:start="97:5" pos:end="97:33"><call pos:start="97:5" pos:end="97:33"><name pos:start="97:5" pos:end="97:12">put_be32</name><argument_list pos:start="97:13" pos:end="97:33">(<argument pos:start="97:14" pos:end="97:21"><expr pos:start="97:14" pos:end="97:21"><operator pos:start="97:14" pos:end="97:14">&amp;</operator><name pos:start="97:15" pos:end="97:21"><name pos:start="97:15" pos:end="97:17">ctx</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:21">pb</name></name></expr></argument>, <argument pos:start="97:24" pos:end="97:32"><expr pos:start="97:24" pos:end="97:32"><name pos:start="97:24" pos:end="97:32">startcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:50"><expr pos:start="101:5" pos:end="101:49"><call pos:start="101:5" pos:end="101:49"><name pos:start="101:5" pos:end="101:12">put_be16</name><argument_list pos:start="101:13" pos:end="101:49">(<argument pos:start="101:14" pos:end="101:21"><expr pos:start="101:14" pos:end="101:21"><operator pos:start="101:14" pos:end="101:14">&amp;</operator><name pos:start="101:15" pos:end="101:21"><name pos:start="101:15" pos:end="101:17">ctx</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:21">pb</name></name></expr></argument>, <argument pos:start="101:24" pos:end="101:48"><expr pos:start="101:24" pos:end="101:48"><name pos:start="101:24" pos:end="101:35">payload_size</name> <operator pos:start="101:37" pos:end="101:37">+</operator> <name pos:start="101:39" pos:end="101:48">header_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="103:5" pos:end="103:18">/* stuffing */</comment>

    <for pos:start="105:5" pos:end="107:33">for<control pos:start="105:8" pos:end="105:32">(<init pos:start="105:9" pos:end="105:12"><expr pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:9">i</name><operator pos:start="105:10" pos:end="105:10">=</operator><literal type="number" pos:start="105:11" pos:end="105:11">0</literal></expr>;</init><condition pos:start="105:13" pos:end="105:28"><expr pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:13">i</name><operator pos:start="105:14" pos:end="105:14">&lt;</operator><name pos:start="105:15" pos:end="105:27">stuffing_size</name></expr>;</condition><incr pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:29">i</name><operator pos:start="105:30" pos:end="105:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:9" pos:end="107:33"><block_content pos:start="107:9" pos:end="107:33">

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><call pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:16">put_byte</name><argument_list pos:start="107:17" pos:end="107:32">(<argument pos:start="107:18" pos:end="107:25"><expr pos:start="107:18" pos:end="107:25"><operator pos:start="107:18" pos:end="107:18">&amp;</operator><name pos:start="107:19" pos:end="107:25"><name pos:start="107:19" pos:end="107:21">ctx</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:25">pb</name></name></expr></argument>, <argument pos:start="107:28" pos:end="107:31"><expr pos:start="107:28" pos:end="107:31"><literal type="number" pos:start="107:28" pos:end="107:31">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:20">(<expr pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:19">is_mpeg2</name></name></expr>)</condition> <block pos:start="111:22" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:33">

        <expr_stmt pos:start="113:9" pos:end="113:33"><expr pos:start="113:9" pos:end="113:32"><call pos:start="113:9" pos:end="113:32"><name pos:start="113:9" pos:end="113:16">put_byte</name><argument_list pos:start="113:17" pos:end="113:32">(<argument pos:start="113:18" pos:end="113:25"><expr pos:start="113:18" pos:end="113:25"><operator pos:start="113:18" pos:end="113:18">&amp;</operator><name pos:start="113:19" pos:end="113:25"><name pos:start="113:19" pos:end="113:21">ctx</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:25">pb</name></name></expr></argument>, <argument pos:start="113:28" pos:end="113:31"><expr pos:start="113:28" pos:end="113:31"><literal type="number" pos:start="113:28" pos:end="113:31">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:35" pos:end="113:48">/* mpeg2 id */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:33"><expr pos:start="115:9" pos:end="115:32"><call pos:start="115:9" pos:end="115:32"><name pos:start="115:9" pos:end="115:16">put_byte</name><argument_list pos:start="115:17" pos:end="115:32">(<argument pos:start="115:18" pos:end="115:25"><expr pos:start="115:18" pos:end="115:25"><operator pos:start="115:18" pos:end="115:18">&amp;</operator><name pos:start="115:19" pos:end="115:25"><name pos:start="115:19" pos:end="115:21">ctx</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:25">pb</name></name></expr></argument>, <argument pos:start="115:28" pos:end="115:31"><expr pos:start="115:28" pos:end="115:31"><literal type="number" pos:start="115:28" pos:end="115:31">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:35" pos:end="115:45">/* flags */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:33"><expr pos:start="117:9" pos:end="117:32"><call pos:start="117:9" pos:end="117:32"><name pos:start="117:9" pos:end="117:16">put_byte</name><argument_list pos:start="117:17" pos:end="117:32">(<argument pos:start="117:18" pos:end="117:25"><expr pos:start="117:18" pos:end="117:25"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:25"><name pos:start="117:19" pos:end="117:21">ctx</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:25">pb</name></name></expr></argument>, <argument pos:start="117:28" pos:end="117:31"><expr pos:start="117:28" pos:end="117:31"><literal type="number" pos:start="117:28" pos:end="117:31">0x05</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:35" pos:end="117:73">/* header len (only pts is included) */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="127:16"><expr pos:start="121:5" pos:end="127:15"><call pos:start="121:5" pos:end="127:15"><name pos:start="121:5" pos:end="121:12">put_byte</name><argument_list pos:start="121:13" pos:end="127:15">(<argument pos:start="121:14" pos:end="121:21"><expr pos:start="121:14" pos:end="121:21"><operator pos:start="121:14" pos:end="121:14">&amp;</operator><name pos:start="121:15" pos:end="121:21"><name pos:start="121:15" pos:end="121:17">ctx</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:21">pb</name></name></expr></argument>, 

             <argument pos:start="123:14" pos:end="127:14"><expr pos:start="123:14" pos:end="127:14"><operator pos:start="123:14" pos:end="123:14">(</operator><literal type="number" pos:start="123:15" pos:end="123:18">0x02</literal> <operator pos:start="123:20" pos:end="123:21">&lt;&lt;</operator> <literal type="number" pos:start="123:23" pos:end="123:23">4</literal><operator pos:start="123:24" pos:end="123:24">)</operator> <operator pos:start="123:26" pos:end="123:26">|</operator> 

             <operator pos:start="125:14" pos:end="125:14">(</operator><operator pos:start="125:15" pos:end="125:15">(</operator><operator pos:start="125:16" pos:end="125:16">(</operator><name pos:start="125:17" pos:end="125:25">timestamp</name> <operator pos:start="125:27" pos:end="125:28">&gt;&gt;</operator> <literal type="number" pos:start="125:30" pos:end="125:31">30</literal><operator pos:start="125:32" pos:end="125:32">)</operator> <operator pos:start="125:34" pos:end="125:34">&amp;</operator> <literal type="number" pos:start="125:36" pos:end="125:39">0x07</literal><operator pos:start="125:40" pos:end="125:40">)</operator> <operator pos:start="125:42" pos:end="125:43">&lt;&lt;</operator> <literal type="number" pos:start="125:45" pos:end="125:45">1</literal><operator pos:start="125:46" pos:end="125:46">)</operator> <operator pos:start="125:48" pos:end="125:48">|</operator> 

             <literal type="number" pos:start="127:14" pos:end="127:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:76"><expr pos:start="129:5" pos:end="129:75"><call pos:start="129:5" pos:end="129:75"><name pos:start="129:5" pos:end="129:12">put_be16</name><argument_list pos:start="129:13" pos:end="129:75">(<argument pos:start="129:14" pos:end="129:21"><expr pos:start="129:14" pos:end="129:21"><operator pos:start="129:14" pos:end="129:14">&amp;</operator><name pos:start="129:15" pos:end="129:21"><name pos:start="129:15" pos:end="129:17">ctx</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:21">pb</name></name></expr></argument>, <argument pos:start="129:24" pos:end="129:74"><expr pos:start="129:24" pos:end="129:74"><operator pos:start="129:24" pos:end="129:24">(</operator><name pos:start="129:25" pos:end="129:32">uint16_t</name><operator pos:start="129:33" pos:end="129:33">)</operator><operator pos:start="129:34" pos:end="129:34">(</operator><operator pos:start="129:35" pos:end="129:35">(</operator><operator pos:start="129:36" pos:end="129:36">(</operator><operator pos:start="129:37" pos:end="129:37">(</operator><name pos:start="129:38" pos:end="129:46">timestamp</name> <operator pos:start="129:48" pos:end="129:49">&gt;&gt;</operator> <literal type="number" pos:start="129:51" pos:end="129:52">15</literal><operator pos:start="129:53" pos:end="129:53">)</operator> <operator pos:start="129:55" pos:end="129:55">&amp;</operator> <literal type="number" pos:start="129:57" pos:end="129:62">0x7fff</literal><operator pos:start="129:63" pos:end="129:63">)</operator> <operator pos:start="129:65" pos:end="129:66">&lt;&lt;</operator> <literal type="number" pos:start="129:68" pos:end="129:68">1</literal><operator pos:start="129:69" pos:end="129:69">)</operator> <operator pos:start="129:71" pos:end="129:71">|</operator> <literal type="number" pos:start="129:73" pos:end="129:73">1</literal><operator pos:start="129:74" pos:end="129:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:70"><expr pos:start="131:5" pos:end="131:69"><call pos:start="131:5" pos:end="131:69"><name pos:start="131:5" pos:end="131:12">put_be16</name><argument_list pos:start="131:13" pos:end="131:69">(<argument pos:start="131:14" pos:end="131:21"><expr pos:start="131:14" pos:end="131:21"><operator pos:start="131:14" pos:end="131:14">&amp;</operator><name pos:start="131:15" pos:end="131:21"><name pos:start="131:15" pos:end="131:17">ctx</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:21">pb</name></name></expr></argument>, <argument pos:start="131:24" pos:end="131:68"><expr pos:start="131:24" pos:end="131:68"><operator pos:start="131:24" pos:end="131:24">(</operator><name pos:start="131:25" pos:end="131:32">uint16_t</name><operator pos:start="131:33" pos:end="131:33">)</operator><operator pos:start="131:34" pos:end="131:34">(</operator><operator pos:start="131:35" pos:end="131:35">(</operator><operator pos:start="131:36" pos:end="131:36">(</operator><operator pos:start="131:37" pos:end="131:37">(</operator><name pos:start="131:38" pos:end="131:46">timestamp</name><operator pos:start="131:47" pos:end="131:47">)</operator> <operator pos:start="131:49" pos:end="131:49">&amp;</operator> <literal type="number" pos:start="131:51" pos:end="131:56">0x7fff</literal><operator pos:start="131:57" pos:end="131:57">)</operator> <operator pos:start="131:59" pos:end="131:60">&lt;&lt;</operator> <literal type="number" pos:start="131:62" pos:end="131:62">1</literal><operator pos:start="131:63" pos:end="131:63">)</operator> <operator pos:start="131:65" pos:end="131:65">|</operator> <literal type="number" pos:start="131:67" pos:end="131:67">1</literal><operator pos:start="131:68" pos:end="131:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="135:5" pos:end="151:5"><if pos:start="135:5" pos:end="151:5">if <condition pos:start="135:8" pos:end="135:38">(<expr pos:start="135:9" pos:end="135:37"><name pos:start="135:9" pos:end="135:17">startcode</name> <operator pos:start="135:19" pos:end="135:20">==</operator> <name pos:start="135:22" pos:end="135:37">PRIVATE_STREAM_1</name></expr>)</condition> <block pos:start="135:40" pos:end="151:5">{<block_content pos:start="137:9" pos:end="149:9">

        <expr_stmt pos:start="137:9" pos:end="137:31"><expr pos:start="137:9" pos:end="137:30"><call pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:16">put_byte</name><argument_list pos:start="137:17" pos:end="137:30">(<argument pos:start="137:18" pos:end="137:25"><expr pos:start="137:18" pos:end="137:25"><operator pos:start="137:18" pos:end="137:18">&amp;</operator><name pos:start="137:19" pos:end="137:25"><name pos:start="137:19" pos:end="137:21">ctx</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:25">pb</name></name></expr></argument>, <argument pos:start="137:28" pos:end="137:29"><expr pos:start="137:28" pos:end="137:29"><name pos:start="137:28" pos:end="137:29">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="149:9"><if pos:start="139:9" pos:end="149:9">if <condition pos:start="139:12" pos:end="139:37">(<expr pos:start="139:13" pos:end="139:36"><name pos:start="139:13" pos:end="139:14">id</name> <operator pos:start="139:16" pos:end="139:17">&gt;=</operator> <literal type="number" pos:start="139:19" pos:end="139:22">0x80</literal> <operator pos:start="139:24" pos:end="139:25">&amp;&amp;</operator> <name pos:start="139:27" pos:end="139:28">id</name> <operator pos:start="139:30" pos:end="139:31">&lt;=</operator> <literal type="number" pos:start="139:33" pos:end="139:36">0xbf</literal></expr>)</condition> <block pos:start="139:39" pos:end="149:9">{<block_content pos:start="143:13" pos:end="147:34">

            <comment type="block" pos:start="141:13" pos:end="141:45">/* XXX: need to check AC3 spec */</comment>

            <expr_stmt pos:start="143:13" pos:end="143:34"><expr pos:start="143:13" pos:end="143:33"><call pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:20">put_byte</name><argument_list pos:start="143:21" pos:end="143:33">(<argument pos:start="143:22" pos:end="143:29"><expr pos:start="143:22" pos:end="143:29"><operator pos:start="143:22" pos:end="143:22">&amp;</operator><name pos:start="143:23" pos:end="143:29"><name pos:start="143:23" pos:end="143:25">ctx</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:29">pb</name></name></expr></argument>, <argument pos:start="143:32" pos:end="143:32"><expr pos:start="143:32" pos:end="143:32"><literal type="number" pos:start="143:32" pos:end="143:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:34"><expr pos:start="145:13" pos:end="145:33"><call pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:20">put_byte</name><argument_list pos:start="145:21" pos:end="145:33">(<argument pos:start="145:22" pos:end="145:29"><expr pos:start="145:22" pos:end="145:29"><operator pos:start="145:22" pos:end="145:22">&amp;</operator><name pos:start="145:23" pos:end="145:29"><name pos:start="145:23" pos:end="145:25">ctx</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:29">pb</name></name></expr></argument>, <argument pos:start="145:32" pos:end="145:32"><expr pos:start="145:32" pos:end="145:32"><literal type="number" pos:start="145:32" pos:end="145:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:34"><expr pos:start="147:13" pos:end="147:33"><call pos:start="147:13" pos:end="147:33"><name pos:start="147:13" pos:end="147:20">put_byte</name><argument_list pos:start="147:21" pos:end="147:33">(<argument pos:start="147:22" pos:end="147:29"><expr pos:start="147:22" pos:end="147:29"><operator pos:start="147:22" pos:end="147:22">&amp;</operator><name pos:start="147:23" pos:end="147:29"><name pos:start="147:23" pos:end="147:25">ctx</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:29">pb</name></name></expr></argument>, <argument pos:start="147:32" pos:end="147:32"><expr pos:start="147:32" pos:end="147:32"><literal type="number" pos:start="147:32" pos:end="147:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="159:5"><if pos:start="155:5" pos:end="159:5">if <condition pos:start="155:8" pos:end="155:17">(<expr pos:start="155:9" pos:end="155:16"><name pos:start="155:9" pos:end="155:16">last_pkt</name></expr>)</condition> <block pos:start="155:19" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:47">

        <expr_stmt pos:start="157:9" pos:end="157:47"><expr pos:start="157:9" pos:end="157:46"><call pos:start="157:9" pos:end="157:46"><name pos:start="157:9" pos:end="157:16">put_be32</name><argument_list pos:start="157:17" pos:end="157:46">(<argument pos:start="157:18" pos:end="157:25"><expr pos:start="157:18" pos:end="157:25"><operator pos:start="157:18" pos:end="157:18">&amp;</operator><name pos:start="157:19" pos:end="157:25"><name pos:start="157:19" pos:end="157:21">ctx</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:25">pb</name></name></expr></argument>, <argument pos:start="157:28" pos:end="157:45"><expr pos:start="157:28" pos:end="157:45"><name pos:start="157:28" pos:end="157:45">ISO_11172_END_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="161:5" pos:end="161:21">/* output data */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:71"><expr pos:start="163:5" pos:end="163:70"><call pos:start="163:5" pos:end="163:70"><name pos:start="163:5" pos:end="163:14">put_buffer</name><argument_list pos:start="163:15" pos:end="163:70">(<argument pos:start="163:16" pos:end="163:23"><expr pos:start="163:16" pos:end="163:23"><operator pos:start="163:16" pos:end="163:16">&amp;</operator><name pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:19">ctx</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:23">pb</name></name></expr></argument>, <argument pos:start="163:26" pos:end="163:39"><expr pos:start="163:26" pos:end="163:39"><name pos:start="163:26" pos:end="163:39"><name pos:start="163:26" pos:end="163:31">stream</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:39">buffer</name></name></expr></argument>, <argument pos:start="163:42" pos:end="163:69"><expr pos:start="163:42" pos:end="163:69"><name pos:start="163:42" pos:end="163:53">payload_size</name> <operator pos:start="163:55" pos:end="163:55">-</operator> <name pos:start="163:57" pos:end="163:69">stuffing_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:31"><expr pos:start="165:5" pos:end="165:30"><call pos:start="165:5" pos:end="165:30"><name pos:start="165:5" pos:end="165:20">put_flush_packet</name><argument_list pos:start="165:21" pos:end="165:30">(<argument pos:start="165:22" pos:end="165:29"><expr pos:start="165:22" pos:end="165:29"><operator pos:start="165:22" pos:end="165:22">&amp;</operator><name pos:start="165:23" pos:end="165:29"><name pos:start="165:23" pos:end="165:25">ctx</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="169:5" pos:end="169:33">/* preserve remaining data */</comment>

    <expr_stmt pos:start="171:5" pos:end="171:44"><expr pos:start="171:5" pos:end="171:43"><name pos:start="171:5" pos:end="171:7">len</name> <operator pos:start="171:9" pos:end="171:9">=</operator> <name pos:start="171:11" pos:end="171:28"><name pos:start="171:11" pos:end="171:16">stream</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:28">buffer_ptr</name></name> <operator pos:start="171:30" pos:end="171:30">-</operator> <name pos:start="171:32" pos:end="171:43">payload_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="175:16"><if pos:start="173:5" pos:end="175:16">if <condition pos:start="173:8" pos:end="173:16">(<expr pos:start="173:9" pos:end="173:15"><name pos:start="173:9" pos:end="173:11">len</name> <operator pos:start="173:13" pos:end="173:13">&lt;</operator> <literal type="number" pos:start="173:15" pos:end="173:15">0</literal></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:16"><block_content pos:start="175:9" pos:end="175:16"> 

        <expr_stmt pos:start="175:9" pos:end="175:16"><expr pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:11">len</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <literal type="number" pos:start="175:15" pos:end="175:15">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:76"><expr pos:start="177:5" pos:end="177:75"><call pos:start="177:5" pos:end="177:75"><name pos:start="177:5" pos:end="177:11">memmove</name><argument_list pos:start="177:12" pos:end="177:75">(<argument pos:start="177:13" pos:end="177:26"><expr pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:18">stream</name><operator pos:start="177:19" pos:end="177:20">-&gt;</operator><name pos:start="177:21" pos:end="177:26">buffer</name></name></expr></argument>, <argument pos:start="177:29" pos:end="177:69"><expr pos:start="177:29" pos:end="177:69"><name pos:start="177:29" pos:end="177:42"><name pos:start="177:29" pos:end="177:34">stream</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:42">buffer</name></name> <operator pos:start="177:44" pos:end="177:44">+</operator> <name pos:start="177:46" pos:end="177:63"><name pos:start="177:46" pos:end="177:51">stream</name><operator pos:start="177:52" pos:end="177:53">-&gt;</operator><name pos:start="177:54" pos:end="177:63">buffer_ptr</name></name> <operator pos:start="177:65" pos:end="177:65">-</operator> <name pos:start="177:67" pos:end="177:69">len</name></expr></argument>, <argument pos:start="177:72" pos:end="177:74"><expr pos:start="177:72" pos:end="177:74"><name pos:start="177:72" pos:end="177:74">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:29"><expr pos:start="179:5" pos:end="179:28"><name pos:start="179:5" pos:end="179:22"><name pos:start="179:5" pos:end="179:10">stream</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:22">buffer_ptr</name></name> <operator pos:start="179:24" pos:end="179:24">=</operator> <name pos:start="179:26" pos:end="179:28">len</name></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:23"><expr pos:start="183:5" pos:end="183:22"><name pos:start="183:5" pos:end="183:20"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:20">packet_number</name></name><operator pos:start="183:21" pos:end="183:22">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:28"><expr pos:start="185:5" pos:end="185:27"><name pos:start="185:5" pos:end="185:25"><name pos:start="185:5" pos:end="185:10">stream</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:25">packet_number</name></name><operator pos:start="185:26" pos:end="185:27">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:27"><expr pos:start="187:5" pos:end="187:26"><name pos:start="187:5" pos:end="187:21"><name pos:start="187:5" pos:end="187:10">stream</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:21">start_pts</name></name> <operator pos:start="187:23" pos:end="187:23">=</operator> <operator pos:start="187:25" pos:end="187:25">-</operator><literal type="number" pos:start="187:26" pos:end="187:26">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
