<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6062.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_h264_execute_decode_slices</name><parameter_list pos:start="1:34" pos:end="1:73">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:45">H264Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><name pos:start="1:51" pos:end="1:58">unsigned</name></type> <name pos:start="1:60" pos:end="1:72">context_count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier><specifier pos:start="5:21" pos:end="5:25">const</specifier></type> <name pos:start="5:27" pos:end="5:31">avctx</name> <init pos:start="5:33" pos:end="5:42">= <expr pos:start="5:35" pos:end="5:42"><name pos:start="5:35" pos:end="5:42"><name pos:start="5:35" pos:end="5:35">h</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:42">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">H264Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">hx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">h</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">mb_y</name></name> <operator pos:start="13:17" pos:end="13:18">&gt;=</operator> <name pos:start="13:20" pos:end="13:31"><name pos:start="13:20" pos:end="13:20">h</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:31">mb_height</name></name></expr>)</condition> <block pos:start="13:34" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:35">

        <expr_stmt pos:start="15:9" pos:end="17:71"><expr pos:start="15:9" pos:end="17:70"><call pos:start="15:9" pos:end="17:70"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="17:70">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">h</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="17:16" pos:end="17:69"><expr pos:start="17:16" pos:end="17:69"><literal type="string" pos:start="17:16" pos:end="17:69">"Input contains more MB rows than the frame height.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:26">(<expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:9">h</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">avctx</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:25">hwaccel</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="67:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:21">context_count</name> <operator pos:start="29:23" pos:end="29:24">==</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>)</condition> <block pos:start="29:29" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:39">

        <return pos:start="31:9" pos:end="31:39">return <expr pos:start="31:16" pos:end="31:38"><call pos:start="31:16" pos:end="31:38"><name pos:start="31:16" pos:end="31:27">decode_slice</name><argument_list pos:start="31:28" pos:end="31:38">(<argument pos:start="31:29" pos:end="31:33"><expr pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:33">avctx</name></expr></argument>, <argument pos:start="31:36" pos:end="31:37"><expr pos:start="31:36" pos:end="31:37"><operator pos:start="31:36" pos:end="31:36">&amp;</operator><name pos:start="31:37" pos:end="31:37">h</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="67:5">else <block pos:start="33:12" pos:end="67:5">{<block_content pos:start="35:9" pos:end="65:70">

        <for pos:start="35:9" pos:end="41:9">for <control pos:start="35:13" pos:end="35:43">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:38"><expr pos:start="35:21" pos:end="35:37"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:37">context_count</name></expr>;</condition> <incr pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:40">i</name><operator pos:start="35:41" pos:end="35:42">++</operator></expr></incr>)</control> <block pos:start="35:45" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:35">

            <expr_stmt pos:start="37:13" pos:end="37:54"><expr pos:start="37:13" pos:end="37:53"><name pos:start="37:13" pos:end="37:14">hx</name>                 <operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:53"><name pos:start="37:34" pos:end="37:34">h</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:50">thread_context</name><index pos:start="37:51" pos:end="37:53">[<expr pos:start="37:52" pos:end="37:52"><name pos:start="37:52" pos:end="37:52">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:14">hx</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">er</name><operator pos:start="39:19" pos:end="39:19">.</operator><name pos:start="39:20" pos:end="39:30">error_count</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <literal type="number" pos:start="39:34" pos:end="39:34">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="45:9" pos:end="47:60"><expr pos:start="45:9" pos:end="47:59"><call pos:start="45:9" pos:end="47:59"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">execute</name></name><argument_list pos:start="45:23" pos:end="47:59">(<argument pos:start="45:24" pos:end="45:28"><expr pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:28">avctx</name></expr></argument>, <argument pos:start="45:31" pos:end="45:42"><expr pos:start="45:31" pos:end="45:42"><name pos:start="45:31" pos:end="45:42">decode_slice</name></expr></argument>, <argument pos:start="45:45" pos:end="45:61"><expr pos:start="45:45" pos:end="45:61"><name pos:start="45:45" pos:end="45:61"><name pos:start="45:45" pos:end="45:45">h</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:61">thread_context</name></name></expr></argument>,

                       <argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">NULL</name></expr></argument>, <argument pos:start="47:30" pos:end="47:42"><expr pos:start="47:30" pos:end="47:42"><name pos:start="47:30" pos:end="47:42">context_count</name></expr></argument>, <argument pos:start="47:45" pos:end="47:58"><expr pos:start="47:45" pos:end="47:58"><sizeof pos:start="47:45" pos:end="47:58">sizeof<argument_list pos:start="47:51" pos:end="47:58">(<argument pos:start="47:52" pos:end="47:57"><expr pos:start="47:52" pos:end="47:57"><name pos:start="47:52" pos:end="47:55">void</name> <operator pos:start="47:57" pos:end="47:57">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="51:9" pos:end="51:59">/* pull back stuff from slices to master context */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:68"><expr pos:start="53:9" pos:end="53:67"><name pos:start="53:9" pos:end="53:10">hx</name>                   <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:67"><name pos:start="53:32" pos:end="53:32">h</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:48">thread_context</name><index pos:start="53:49" pos:end="53:67">[<expr pos:start="53:50" pos:end="53:66"><name pos:start="53:50" pos:end="53:62">context_count</name> <operator pos:start="53:64" pos:end="53:64">-</operator> <literal type="number" pos:start="53:66" pos:end="53:66">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">h</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:15">mb_x</name></name>              <operator pos:start="55:30" pos:end="55:30">=</operator> <name pos:start="55:32" pos:end="55:39"><name pos:start="55:32" pos:end="55:33">hx</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:39">mb_x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:9">h</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:15">mb_y</name></name>              <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:39"><name pos:start="57:32" pos:end="57:33">hx</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:39">mb_y</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:9">h</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:20">droppable</name></name>         <operator pos:start="59:30" pos:end="59:30">=</operator> <name pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:33">hx</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:44">droppable</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:9">h</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:28">picture_structure</name></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:52"><name pos:start="61:32" pos:end="61:33">hx</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:52">picture_structure</name></name></expr>;</expr_stmt>

        <for pos:start="63:9" pos:end="65:70">for <control pos:start="63:13" pos:end="63:43">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">i</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:38"><expr pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:37">context_count</name></expr>;</condition> <incr pos:start="63:40" pos:end="63:42"><expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:40">i</name><operator pos:start="63:41" pos:end="63:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:13" pos:end="65:70"><block_content pos:start="65:13" pos:end="65:70">

            <expr_stmt pos:start="65:13" pos:end="65:70"><expr pos:start="65:13" pos:end="65:69"><name pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:13">h</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:17">er</name><operator pos:start="65:18" pos:end="65:18">.</operator><name pos:start="65:19" pos:end="65:29">error_count</name></name> <operator pos:start="65:31" pos:end="65:32">+=</operator> <name pos:start="65:34" pos:end="65:53"><name pos:start="65:34" pos:end="65:34">h</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:50">thread_context</name><index pos:start="65:51" pos:end="65:53">[<expr pos:start="65:52" pos:end="65:52"><name pos:start="65:52" pos:end="65:52">i</name></expr>]</index></name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:69"><name pos:start="65:56" pos:end="65:57">er</name><operator pos:start="65:58" pos:end="65:58">.</operator><name pos:start="65:59" pos:end="65:69">error_count</name></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
