<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6897.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:25"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:36">v9fs_create</name><parameter_list pos:start="1:37" pos:end="1:50">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:43"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="313:25">{<block_content pos:start="5:5" pos:end="313:25">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">V9fsFidState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">V9fsQID</name></type> <name pos:start="13:13" pos:end="13:15">qid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:16">perm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">int8_t</name></type> <name pos:start="17:12" pos:end="17:15">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">V9fsPath</name></type> <name pos:start="19:14" pos:end="19:17">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:10">struct</name> <name pos:start="21:12" pos:end="21:15">stat</name></name></type> <name pos:start="21:17" pos:end="21:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:14">V9fsString</name></type> <name pos:start="23:16" pos:end="23:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:24"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:14">V9fsString</name></type> <name pos:start="25:16" pos:end="25:24">extension</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:15"><decl pos:start="27:5" pos:end="27:14"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:14">iounit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">V9fsPDU</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:16">pdu</name> <init pos:start="29:18" pos:end="29:25">= <expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><call pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:18">v9fs_path_init</name><argument_list pos:start="33:19" pos:end="33:25">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><call pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:20">v9fs_string_init</name><argument_list pos:start="35:21" pos:end="35:27">(<argument pos:start="35:22" pos:end="35:26"><expr pos:start="35:22" pos:end="35:26"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:20">v9fs_string_init</name><argument_list pos:start="37:21" pos:end="37:32">(<argument pos:start="37:22" pos:end="37:31"><expr pos:start="37:22" pos:end="37:31"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:31">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:50"><expr pos:start="39:5" pos:end="41:49"><name pos:start="39:5" pos:end="39:7">err</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="41:49"><name pos:start="39:11" pos:end="39:23">pdu_unmarshal</name><argument_list pos:start="39:24" pos:end="41:49">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">pdu</name></expr></argument>, <argument pos:start="39:30" pos:end="39:35"><expr pos:start="39:30" pos:end="39:35"><name pos:start="39:30" pos:end="39:35">offset</name></expr></argument>, <argument pos:start="39:38" pos:end="39:44"><expr pos:start="39:38" pos:end="39:44"><literal type="string" pos:start="39:38" pos:end="39:44">"dsdbs"</literal></expr></argument>, <argument pos:start="39:47" pos:end="39:50"><expr pos:start="39:47" pos:end="39:50"><operator pos:start="39:47" pos:end="39:47">&amp;</operator><name pos:start="39:48" pos:end="39:50">fid</name></expr></argument>, <argument pos:start="39:53" pos:end="39:57"><expr pos:start="39:53" pos:end="39:57"><operator pos:start="39:53" pos:end="39:53">&amp;</operator><name pos:start="39:54" pos:end="39:57">name</name></expr></argument>,

                        <argument pos:start="41:25" pos:end="41:29"><expr pos:start="41:25" pos:end="41:29"><operator pos:start="41:25" pos:end="41:25">&amp;</operator><name pos:start="41:26" pos:end="41:29">perm</name></expr></argument>, <argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><operator pos:start="41:32" pos:end="41:32">&amp;</operator><name pos:start="41:33" pos:end="41:36">mode</name></expr></argument>, <argument pos:start="41:39" pos:end="41:48"><expr pos:start="41:39" pos:end="41:48"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:48">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="313:25"><if pos:start="43:5" pos:end="313:25">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition> <block pos:start="43:18" pos:end="313:25">{<block_content pos:start="45:9" pos:end="313:25">

        <goto pos:start="45:9" pos:end="45:23">goto <name pos:start="45:14" pos:end="45:22">out_nofid</name>;</goto>


    <expr_stmt pos:start="48:5" pos:end="48:69"><expr pos:start="48:5" pos:end="48:68"><call pos:start="48:5" pos:end="48:68"><name pos:start="48:5" pos:end="48:21">trace_v9fs_create</name><argument_list pos:start="48:22" pos:end="48:68">(<argument pos:start="48:23" pos:end="48:30"><expr pos:start="48:23" pos:end="48:30"><name pos:start="48:23" pos:end="48:30"><name pos:start="48:23" pos:end="48:25">pdu</name><operator pos:start="48:26" pos:end="48:27">-&gt;</operator><name pos:start="48:28" pos:end="48:30">tag</name></name></expr></argument>, <argument pos:start="48:33" pos:end="48:39"><expr pos:start="48:33" pos:end="48:39"><name pos:start="48:33" pos:end="48:39"><name pos:start="48:33" pos:end="48:35">pdu</name><operator pos:start="48:36" pos:end="48:37">-&gt;</operator><name pos:start="48:38" pos:end="48:39">id</name></name></expr></argument>, <argument pos:start="48:42" pos:end="48:44"><expr pos:start="48:42" pos:end="48:44"><name pos:start="48:42" pos:end="48:44">fid</name></expr></argument>, <argument pos:start="48:47" pos:end="48:55"><expr pos:start="48:47" pos:end="48:55"><name pos:start="48:47" pos:end="48:55"><name pos:start="48:47" pos:end="48:50">name</name><operator pos:start="48:51" pos:end="48:51">.</operator><name pos:start="48:52" pos:end="48:55">data</name></name></expr></argument>, <argument pos:start="48:58" pos:end="48:61"><expr pos:start="48:58" pos:end="48:61"><name pos:start="48:58" pos:end="48:61">perm</name></expr></argument>, <argument pos:start="48:64" pos:end="48:67"><expr pos:start="48:64" pos:end="48:67"><name pos:start="48:64" pos:end="48:67">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="52:5" pos:end="313:25"><if pos:start="52:5" pos:end="313:25">if <condition pos:start="52:8" pos:end="52:35">(<expr pos:start="52:9" pos:end="52:34"><call pos:start="52:9" pos:end="52:34"><name pos:start="52:9" pos:end="52:23">name_is_illegal</name><argument_list pos:start="52:24" pos:end="52:34">(<argument pos:start="52:25" pos:end="52:33"><expr pos:start="52:25" pos:end="52:33"><name pos:start="52:25" pos:end="52:33"><name pos:start="52:25" pos:end="52:28">name</name><operator pos:start="52:29" pos:end="52:29">.</operator><name pos:start="52:30" pos:end="52:33">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="52:37" pos:end="313:25">{<block_content pos:start="54:9" pos:end="313:25">

        <expr_stmt pos:start="54:9" pos:end="54:22"><expr pos:start="54:9" pos:end="54:21"><name pos:start="54:9" pos:end="54:11">err</name> <operator pos:start="54:13" pos:end="54:13">=</operator> <operator pos:start="54:15" pos:end="54:15">-</operator><name pos:start="54:16" pos:end="54:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="56:9" pos:end="56:23">goto <name pos:start="56:14" pos:end="56:22">out_nofid</name>;</goto>




    <if_stmt pos:start="61:5" pos:end="313:25"><if pos:start="61:5" pos:end="313:25">if <condition pos:start="61:8" pos:end="61:60">(<expr pos:start="61:9" pos:end="61:59"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:31"><name pos:start="61:10" pos:end="61:15">strcmp</name><argument_list pos:start="61:16" pos:end="61:31">(<argument pos:start="61:17" pos:end="61:19"><expr pos:start="61:17" pos:end="61:19"><literal type="string" pos:start="61:17" pos:end="61:19">"."</literal></expr></argument>, <argument pos:start="61:22" pos:end="61:30"><expr pos:start="61:22" pos:end="61:30"><name pos:start="61:22" pos:end="61:30"><name pos:start="61:22" pos:end="61:25">name</name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:30">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:33" pos:end="61:34">||</operator> <operator pos:start="61:36" pos:end="61:36">!</operator><call pos:start="61:37" pos:end="61:59"><name pos:start="61:37" pos:end="61:42">strcmp</name><argument_list pos:start="61:43" pos:end="61:59">(<argument pos:start="61:44" pos:end="61:47"><expr pos:start="61:44" pos:end="61:47"><literal type="string" pos:start="61:44" pos:end="61:47">".."</literal></expr></argument>, <argument pos:start="61:50" pos:end="61:58"><expr pos:start="61:50" pos:end="61:58"><name pos:start="61:50" pos:end="61:58"><name pos:start="61:50" pos:end="61:53">name</name><operator pos:start="61:54" pos:end="61:54">.</operator><name pos:start="61:55" pos:end="61:58">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:62" pos:end="313:25">{<block_content pos:start="63:9" pos:end="313:25">

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:11">err</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <operator pos:start="63:15" pos:end="63:15">-</operator><name pos:start="63:16" pos:end="63:21">EEXIST</name></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:23">goto <name pos:start="65:14" pos:end="65:22">out_nofid</name>;</goto>




    <expr_stmt pos:start="70:5" pos:end="70:29"><expr pos:start="70:5" pos:end="70:28"><name pos:start="70:5" pos:end="70:8">fidp</name> <operator pos:start="70:10" pos:end="70:10">=</operator> <call pos:start="70:12" pos:end="70:28"><name pos:start="70:12" pos:end="70:18">get_fid</name><argument_list pos:start="70:19" pos:end="70:28">(<argument pos:start="70:20" pos:end="70:22"><expr pos:start="70:20" pos:end="70:22"><name pos:start="70:20" pos:end="70:22">pdu</name></expr></argument>, <argument pos:start="70:25" pos:end="70:27"><expr pos:start="70:25" pos:end="70:27"><name pos:start="70:25" pos:end="70:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="72:5" pos:end="313:25"><if pos:start="72:5" pos:end="313:25">if <condition pos:start="72:8" pos:end="72:21">(<expr pos:start="72:9" pos:end="72:20"><name pos:start="72:9" pos:end="72:12">fidp</name> <operator pos:start="72:14" pos:end="72:15">==</operator> <name pos:start="72:17" pos:end="72:20">NULL</name></expr>)</condition> <block pos:start="72:23" pos:end="313:25">{<block_content pos:start="75:9" pos:end="313:25">


        <goto pos:start="75:9" pos:end="75:23">goto <name pos:start="75:14" pos:end="75:22">out_nofid</name>;</goto>






    <if_stmt pos:start="82:5" pos:end="313:25"><if pos:start="82:5" pos:end="313:25">if <condition pos:start="82:8" pos:end="82:32">(<expr pos:start="82:9" pos:end="82:31"><name pos:start="82:9" pos:end="82:12">perm</name> <operator pos:start="82:14" pos:end="82:14">&amp;</operator> <name pos:start="82:16" pos:end="82:31">P9_STAT_MODE_DIR</name></expr>)</condition> <block pos:start="82:34" pos:end="313:25">{<block_content pos:start="84:9" pos:end="313:25">

        <expr_stmt pos:start="84:9" pos:end="86:51"><expr pos:start="84:9" pos:end="86:50"><name pos:start="84:9" pos:end="84:11">err</name> <operator pos:start="84:13" pos:end="84:13">=</operator> <call pos:start="84:15" pos:end="86:50"><name pos:start="84:15" pos:end="84:27">v9fs_co_mkdir</name><argument_list pos:start="84:28" pos:end="86:50">(<argument pos:start="84:29" pos:end="84:31"><expr pos:start="84:29" pos:end="84:31"><name pos:start="84:29" pos:end="84:31">pdu</name></expr></argument>, <argument pos:start="84:34" pos:end="84:37"><expr pos:start="84:34" pos:end="84:37"><name pos:start="84:34" pos:end="84:37">fidp</name></expr></argument>, <argument pos:start="84:40" pos:end="84:44"><expr pos:start="84:40" pos:end="84:44"><operator pos:start="84:40" pos:end="84:40">&amp;</operator><name pos:start="84:41" pos:end="84:44">name</name></expr></argument>, <argument pos:start="84:47" pos:end="84:57"><expr pos:start="84:47" pos:end="84:57"><name pos:start="84:47" pos:end="84:50">perm</name> <operator pos:start="84:52" pos:end="84:52">&amp;</operator> <literal type="number" pos:start="84:54" pos:end="84:57">0777</literal></expr></argument>,

                            <argument pos:start="86:29" pos:end="86:37"><expr pos:start="86:29" pos:end="86:37"><name pos:start="86:29" pos:end="86:37"><name pos:start="86:29" pos:end="86:32">fidp</name><operator pos:start="86:33" pos:end="86:34">-&gt;</operator><name pos:start="86:35" pos:end="86:37">uid</name></name></expr></argument>, <argument pos:start="86:40" pos:end="86:41"><expr pos:start="86:40" pos:end="86:41"><operator pos:start="86:40" pos:end="86:40">-</operator><literal type="number" pos:start="86:41" pos:end="86:41">1</literal></expr></argument>, <argument pos:start="86:44" pos:end="86:49"><expr pos:start="86:44" pos:end="86:49"><operator pos:start="86:44" pos:end="86:44">&amp;</operator><name pos:start="86:45" pos:end="86:49">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="88:9" pos:end="313:25"><if pos:start="88:9" pos:end="313:25">if <condition pos:start="88:12" pos:end="88:20">(<expr pos:start="88:13" pos:end="88:19"><name pos:start="88:13" pos:end="88:15">err</name> <operator pos:start="88:17" pos:end="88:17">&lt;</operator> <literal type="number" pos:start="88:19" pos:end="88:19">0</literal></expr>)</condition> <block pos:start="88:22" pos:end="313:25">{<block_content pos:start="92:9" pos:end="313:25">



        <expr_stmt pos:start="92:9" pos:end="92:71"><expr pos:start="92:9" pos:end="92:70"><name pos:start="92:9" pos:end="92:11">err</name> <operator pos:start="92:13" pos:end="92:13">=</operator> <call pos:start="92:15" pos:end="92:70"><name pos:start="92:15" pos:end="92:34">v9fs_co_name_to_path</name><argument_list pos:start="92:35" pos:end="92:70">(<argument pos:start="92:36" pos:end="92:38"><expr pos:start="92:36" pos:end="92:38"><name pos:start="92:36" pos:end="92:38">pdu</name></expr></argument>, <argument pos:start="92:41" pos:end="92:51"><expr pos:start="92:41" pos:end="92:51"><operator pos:start="92:41" pos:end="92:41">&amp;</operator><name pos:start="92:42" pos:end="92:51"><name pos:start="92:42" pos:end="92:45">fidp</name><operator pos:start="92:46" pos:end="92:47">-&gt;</operator><name pos:start="92:48" pos:end="92:51">path</name></name></expr></argument>, <argument pos:start="92:54" pos:end="92:62"><expr pos:start="92:54" pos:end="92:62"><name pos:start="92:54" pos:end="92:62"><name pos:start="92:54" pos:end="92:57">name</name><operator pos:start="92:58" pos:end="92:58">.</operator><name pos:start="92:59" pos:end="92:62">data</name></name></expr></argument>, <argument pos:start="92:65" pos:end="92:69"><expr pos:start="92:65" pos:end="92:69"><operator pos:start="92:65" pos:end="92:65">&amp;</operator><name pos:start="92:66" pos:end="92:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="94:9" pos:end="313:25"><if pos:start="94:9" pos:end="313:25">if <condition pos:start="94:12" pos:end="94:20">(<expr pos:start="94:13" pos:end="94:19"><name pos:start="94:13" pos:end="94:15">err</name> <operator pos:start="94:17" pos:end="94:17">&lt;</operator> <literal type="number" pos:start="94:19" pos:end="94:19">0</literal></expr>)</condition> <block pos:start="94:22" pos:end="313:25">{<block_content pos:start="98:9" pos:end="313:25">



        <expr_stmt pos:start="98:9" pos:end="98:43"><expr pos:start="98:9" pos:end="98:42"><call pos:start="98:9" pos:end="98:42"><name pos:start="98:9" pos:end="98:22">v9fs_path_copy</name><argument_list pos:start="98:23" pos:end="98:42">(<argument pos:start="98:24" pos:end="98:34"><expr pos:start="98:24" pos:end="98:34"><operator pos:start="98:24" pos:end="98:24">&amp;</operator><name pos:start="98:25" pos:end="98:34"><name pos:start="98:25" pos:end="98:28">fidp</name><operator pos:start="98:29" pos:end="98:30">-&gt;</operator><name pos:start="98:31" pos:end="98:34">path</name></name></expr></argument>, <argument pos:start="98:37" pos:end="98:41"><expr pos:start="98:37" pos:end="98:41"><operator pos:start="98:37" pos:end="98:37">&amp;</operator><name pos:start="98:38" pos:end="98:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="100:9" pos:end="100:41"><expr pos:start="100:9" pos:end="100:40"><name pos:start="100:9" pos:end="100:11">err</name> <operator pos:start="100:13" pos:end="100:13">=</operator> <call pos:start="100:15" pos:end="100:40"><name pos:start="100:15" pos:end="100:29">v9fs_co_opendir</name><argument_list pos:start="100:30" pos:end="100:40">(<argument pos:start="100:31" pos:end="100:33"><expr pos:start="100:31" pos:end="100:33"><name pos:start="100:31" pos:end="100:33">pdu</name></expr></argument>, <argument pos:start="100:36" pos:end="100:39"><expr pos:start="100:36" pos:end="100:39"><name pos:start="100:36" pos:end="100:39">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="102:9" pos:end="313:25"><if pos:start="102:9" pos:end="108:5">if <condition pos:start="102:12" pos:end="102:20">(<expr pos:start="102:13" pos:end="102:19"><name pos:start="102:13" pos:end="102:15">err</name> <operator pos:start="102:17" pos:end="102:17">&lt;</operator> <literal type="number" pos:start="102:19" pos:end="102:19">0</literal></expr>)</condition> <block pos:start="102:22" pos:end="108:5">{<block_content pos:start="106:9" pos:end="106:36">



        <expr_stmt pos:start="106:9" pos:end="106:36"><expr pos:start="106:9" pos:end="106:35"><name pos:start="106:9" pos:end="106:22"><name pos:start="106:9" pos:end="106:12">fidp</name><operator pos:start="106:13" pos:end="106:14">-&gt;</operator><name pos:start="106:15" pos:end="106:22">fid_type</name></name> <operator pos:start="106:24" pos:end="106:24">=</operator> <name pos:start="106:26" pos:end="106:35">P9_FID_DIR</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="108:7" pos:end="313:25">else if <condition pos:start="108:15" pos:end="108:43">(<expr pos:start="108:16" pos:end="108:42"><name pos:start="108:16" pos:end="108:19">perm</name> <operator pos:start="108:21" pos:end="108:21">&amp;</operator> <name pos:start="108:23" pos:end="108:42">P9_STAT_MODE_SYMLINK</name></expr>)</condition> <block pos:start="108:45" pos:end="313:25">{<block_content pos:start="110:9" pos:end="313:25">

        <expr_stmt pos:start="110:9" pos:end="112:59"><expr pos:start="110:9" pos:end="112:58"><name pos:start="110:9" pos:end="110:11">err</name> <operator pos:start="110:13" pos:end="110:13">=</operator> <call pos:start="110:15" pos:end="112:58"><name pos:start="110:15" pos:end="110:29">v9fs_co_symlink</name><argument_list pos:start="110:30" pos:end="112:58">(<argument pos:start="110:31" pos:end="110:33"><expr pos:start="110:31" pos:end="110:33"><name pos:start="110:31" pos:end="110:33">pdu</name></expr></argument>, <argument pos:start="110:36" pos:end="110:39"><expr pos:start="110:36" pos:end="110:39"><name pos:start="110:36" pos:end="110:39">fidp</name></expr></argument>, <argument pos:start="110:42" pos:end="110:46"><expr pos:start="110:42" pos:end="110:46"><operator pos:start="110:42" pos:end="110:42">&amp;</operator><name pos:start="110:43" pos:end="110:46">name</name></expr></argument>,

                              <argument pos:start="112:31" pos:end="112:44"><expr pos:start="112:31" pos:end="112:44"><name pos:start="112:31" pos:end="112:44"><name pos:start="112:31" pos:end="112:39">extension</name><operator pos:start="112:40" pos:end="112:40">.</operator><name pos:start="112:41" pos:end="112:44">data</name></name></expr></argument>, <argument pos:start="112:47" pos:end="112:48"><expr pos:start="112:47" pos:end="112:48"><operator pos:start="112:47" pos:end="112:47">-</operator><literal type="number" pos:start="112:48" pos:end="112:48">1</literal></expr></argument> , <argument pos:start="112:52" pos:end="112:57"><expr pos:start="112:52" pos:end="112:57"><operator pos:start="112:52" pos:end="112:52">&amp;</operator><name pos:start="112:53" pos:end="112:57">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="114:9" pos:end="313:25"><if pos:start="114:9" pos:end="313:25">if <condition pos:start="114:12" pos:end="114:20">(<expr pos:start="114:13" pos:end="114:19"><name pos:start="114:13" pos:end="114:15">err</name> <operator pos:start="114:17" pos:end="114:17">&lt;</operator> <literal type="number" pos:start="114:19" pos:end="114:19">0</literal></expr>)</condition> <block pos:start="114:22" pos:end="313:25">{<block_content pos:start="118:9" pos:end="313:25">



        <expr_stmt pos:start="118:9" pos:end="118:71"><expr pos:start="118:9" pos:end="118:70"><name pos:start="118:9" pos:end="118:11">err</name> <operator pos:start="118:13" pos:end="118:13">=</operator> <call pos:start="118:15" pos:end="118:70"><name pos:start="118:15" pos:end="118:34">v9fs_co_name_to_path</name><argument_list pos:start="118:35" pos:end="118:70">(<argument pos:start="118:36" pos:end="118:38"><expr pos:start="118:36" pos:end="118:38"><name pos:start="118:36" pos:end="118:38">pdu</name></expr></argument>, <argument pos:start="118:41" pos:end="118:51"><expr pos:start="118:41" pos:end="118:51"><operator pos:start="118:41" pos:end="118:41">&amp;</operator><name pos:start="118:42" pos:end="118:51"><name pos:start="118:42" pos:end="118:45">fidp</name><operator pos:start="118:46" pos:end="118:47">-&gt;</operator><name pos:start="118:48" pos:end="118:51">path</name></name></expr></argument>, <argument pos:start="118:54" pos:end="118:62"><expr pos:start="118:54" pos:end="118:62"><name pos:start="118:54" pos:end="118:62"><name pos:start="118:54" pos:end="118:57">name</name><operator pos:start="118:58" pos:end="118:58">.</operator><name pos:start="118:59" pos:end="118:62">data</name></name></expr></argument>, <argument pos:start="118:65" pos:end="118:69"><expr pos:start="118:65" pos:end="118:69"><operator pos:start="118:65" pos:end="118:65">&amp;</operator><name pos:start="118:66" pos:end="118:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="120:9" pos:end="313:25"><if pos:start="120:9" pos:end="126:5">if <condition pos:start="120:12" pos:end="120:20">(<expr pos:start="120:13" pos:end="120:19"><name pos:start="120:13" pos:end="120:15">err</name> <operator pos:start="120:17" pos:end="120:17">&lt;</operator> <literal type="number" pos:start="120:19" pos:end="120:19">0</literal></expr>)</condition> <block pos:start="120:22" pos:end="126:5">{<block_content pos:start="124:9" pos:end="124:43">



        <expr_stmt pos:start="124:9" pos:end="124:43"><expr pos:start="124:9" pos:end="124:42"><call pos:start="124:9" pos:end="124:42"><name pos:start="124:9" pos:end="124:22">v9fs_path_copy</name><argument_list pos:start="124:23" pos:end="124:42">(<argument pos:start="124:24" pos:end="124:34"><expr pos:start="124:24" pos:end="124:34"><operator pos:start="124:24" pos:end="124:24">&amp;</operator><name pos:start="124:25" pos:end="124:34"><name pos:start="124:25" pos:end="124:28">fidp</name><operator pos:start="124:29" pos:end="124:30">-&gt;</operator><name pos:start="124:31" pos:end="124:34">path</name></name></expr></argument>, <argument pos:start="124:37" pos:end="124:41"><expr pos:start="124:37" pos:end="124:41"><operator pos:start="124:37" pos:end="124:37">&amp;</operator><name pos:start="124:38" pos:end="124:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="126:7" pos:end="313:25">else if <condition pos:start="126:15" pos:end="126:40">(<expr pos:start="126:16" pos:end="126:39"><name pos:start="126:16" pos:end="126:19">perm</name> <operator pos:start="126:21" pos:end="126:21">&amp;</operator> <name pos:start="126:23" pos:end="126:39">P9_STAT_MODE_LINK</name></expr>)</condition> <block pos:start="126:42" pos:end="313:25">{<block_content pos:start="128:9" pos:end="313:25">

        <decl_stmt pos:start="128:9" pos:end="128:44"><decl pos:start="128:9" pos:end="128:43"><type pos:start="128:9" pos:end="128:15"><name pos:start="128:9" pos:end="128:15">int32_t</name></type> <name pos:start="128:17" pos:end="128:20">ofid</name> <init pos:start="128:22" pos:end="128:43">= <expr pos:start="128:24" pos:end="128:43"><call pos:start="128:24" pos:end="128:43"><name pos:start="128:24" pos:end="128:27">atoi</name><argument_list pos:start="128:28" pos:end="128:43">(<argument pos:start="128:29" pos:end="128:42"><expr pos:start="128:29" pos:end="128:42"><name pos:start="128:29" pos:end="128:42"><name pos:start="128:29" pos:end="128:37">extension</name><operator pos:start="128:38" pos:end="128:38">.</operator><name pos:start="128:39" pos:end="128:42">data</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="130:9" pos:end="130:49"><decl pos:start="130:9" pos:end="130:48"><type pos:start="130:9" pos:end="130:22"><name pos:start="130:9" pos:end="130:20">V9fsFidState</name> <modifier pos:start="130:22" pos:end="130:22">*</modifier></type><name pos:start="130:23" pos:end="130:27">ofidp</name> <init pos:start="130:29" pos:end="130:48">= <expr pos:start="130:31" pos:end="130:48"><call pos:start="130:31" pos:end="130:48"><name pos:start="130:31" pos:end="130:37">get_fid</name><argument_list pos:start="130:38" pos:end="130:48">(<argument pos:start="130:39" pos:end="130:41"><expr pos:start="130:39" pos:end="130:41"><name pos:start="130:39" pos:end="130:41">pdu</name></expr></argument>, <argument pos:start="130:44" pos:end="130:47"><expr pos:start="130:44" pos:end="130:47"><name pos:start="130:44" pos:end="130:47">ofid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="132:9" pos:end="313:25"><if pos:start="132:9" pos:end="313:25">if <condition pos:start="132:12" pos:end="132:26">(<expr pos:start="132:13" pos:end="132:25"><name pos:start="132:13" pos:end="132:17">ofidp</name> <operator pos:start="132:19" pos:end="132:20">==</operator> <name pos:start="132:22" pos:end="132:25">NULL</name></expr>)</condition> <block pos:start="132:28" pos:end="313:25">{<block_content pos:start="137:9" pos:end="313:25">




        <expr_stmt pos:start="137:9" pos:end="137:52"><expr pos:start="137:9" pos:end="137:51"><name pos:start="137:9" pos:end="137:11">err</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:51"><name pos:start="137:15" pos:end="137:26">v9fs_co_link</name><argument_list pos:start="137:27" pos:end="137:51">(<argument pos:start="137:28" pos:end="137:30"><expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:30">pdu</name></expr></argument>, <argument pos:start="137:33" pos:end="137:37"><expr pos:start="137:33" pos:end="137:37"><name pos:start="137:33" pos:end="137:37">ofidp</name></expr></argument>, <argument pos:start="137:40" pos:end="137:43"><expr pos:start="137:40" pos:end="137:43"><name pos:start="137:40" pos:end="137:43">fidp</name></expr></argument>, <argument pos:start="137:46" pos:end="137:50"><expr pos:start="137:46" pos:end="137:50"><operator pos:start="137:46" pos:end="137:46">&amp;</operator><name pos:start="137:47" pos:end="137:50">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:28"><expr pos:start="139:9" pos:end="139:27"><call pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:15">put_fid</name><argument_list pos:start="139:16" pos:end="139:27">(<argument pos:start="139:17" pos:end="139:19"><expr pos:start="139:17" pos:end="139:19"><name pos:start="139:17" pos:end="139:19">pdu</name></expr></argument>, <argument pos:start="139:22" pos:end="139:26"><expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:26">ofidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="313:25"><if pos:start="141:9" pos:end="313:25">if <condition pos:start="141:12" pos:end="141:20">(<expr pos:start="141:13" pos:end="141:19"><name pos:start="141:13" pos:end="141:15">err</name> <operator pos:start="141:17" pos:end="141:17">&lt;</operator> <literal type="number" pos:start="141:19" pos:end="141:19">0</literal></expr>)</condition> <block pos:start="141:22" pos:end="313:25">{<block_content pos:start="145:9" pos:end="313:25">



        <expr_stmt pos:start="145:9" pos:end="145:71"><expr pos:start="145:9" pos:end="145:70"><name pos:start="145:9" pos:end="145:11">err</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:70"><name pos:start="145:15" pos:end="145:34">v9fs_co_name_to_path</name><argument_list pos:start="145:35" pos:end="145:70">(<argument pos:start="145:36" pos:end="145:38"><expr pos:start="145:36" pos:end="145:38"><name pos:start="145:36" pos:end="145:38">pdu</name></expr></argument>, <argument pos:start="145:41" pos:end="145:51"><expr pos:start="145:41" pos:end="145:51"><operator pos:start="145:41" pos:end="145:41">&amp;</operator><name pos:start="145:42" pos:end="145:51"><name pos:start="145:42" pos:end="145:45">fidp</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:51">path</name></name></expr></argument>, <argument pos:start="145:54" pos:end="145:62"><expr pos:start="145:54" pos:end="145:62"><name pos:start="145:54" pos:end="145:62"><name pos:start="145:54" pos:end="145:57">name</name><operator pos:start="145:58" pos:end="145:58">.</operator><name pos:start="145:59" pos:end="145:62">data</name></name></expr></argument>, <argument pos:start="145:65" pos:end="145:69"><expr pos:start="145:65" pos:end="145:69"><operator pos:start="145:65" pos:end="145:65">&amp;</operator><name pos:start="145:66" pos:end="145:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="313:25"><if pos:start="147:9" pos:end="313:25">if <condition pos:start="147:12" pos:end="147:20">(<expr pos:start="147:13" pos:end="147:19"><name pos:start="147:13" pos:end="147:15">err</name> <operator pos:start="147:17" pos:end="147:17">&lt;</operator> <literal type="number" pos:start="147:19" pos:end="147:19">0</literal></expr>)</condition> <block pos:start="147:22" pos:end="313:25">{<block_content pos:start="149:13" pos:end="313:25">

            <expr_stmt pos:start="149:13" pos:end="149:41"><expr pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:26"><name pos:start="149:13" pos:end="149:16">fidp</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:26">fid_type</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:40">P9_FID_NONE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:43"><expr pos:start="153:9" pos:end="153:42"><call pos:start="153:9" pos:end="153:42"><name pos:start="153:9" pos:end="153:22">v9fs_path_copy</name><argument_list pos:start="153:23" pos:end="153:42">(<argument pos:start="153:24" pos:end="153:34"><expr pos:start="153:24" pos:end="153:34"><operator pos:start="153:24" pos:end="153:24">&amp;</operator><name pos:start="153:25" pos:end="153:34"><name pos:start="153:25" pos:end="153:28">fidp</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:34">path</name></name></expr></argument>, <argument pos:start="153:37" pos:end="153:41"><expr pos:start="153:37" pos:end="153:41"><operator pos:start="153:37" pos:end="153:37">&amp;</operator><name pos:start="153:38" pos:end="153:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:54"><expr pos:start="155:9" pos:end="155:53"><name pos:start="155:9" pos:end="155:11">err</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:53"><name pos:start="155:15" pos:end="155:27">v9fs_co_lstat</name><argument_list pos:start="155:28" pos:end="155:53">(<argument pos:start="155:29" pos:end="155:31"><expr pos:start="155:29" pos:end="155:31"><name pos:start="155:29" pos:end="155:31">pdu</name></expr></argument>, <argument pos:start="155:34" pos:end="155:44"><expr pos:start="155:34" pos:end="155:44"><operator pos:start="155:34" pos:end="155:34">&amp;</operator><name pos:start="155:35" pos:end="155:44"><name pos:start="155:35" pos:end="155:38">fidp</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:44">path</name></name></expr></argument>, <argument pos:start="155:47" pos:end="155:52"><expr pos:start="155:47" pos:end="155:52"><operator pos:start="155:47" pos:end="155:47">&amp;</operator><name pos:start="155:48" pos:end="155:52">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="313:25"><if pos:start="157:9" pos:end="163:5">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:15">err</name> <operator pos:start="157:17" pos:end="157:17">&lt;</operator> <literal type="number" pos:start="157:19" pos:end="157:19">0</literal></expr>)</condition> <block pos:start="157:22" pos:end="163:5">{<block_content pos:start="159:13" pos:end="159:41">

            <expr_stmt pos:start="159:13" pos:end="159:41"><expr pos:start="159:13" pos:end="159:40"><name pos:start="159:13" pos:end="159:26"><name pos:start="159:13" pos:end="159:16">fidp</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:26">fid_type</name></name> <operator pos:start="159:28" pos:end="159:28">=</operator> <name pos:start="159:30" pos:end="159:40">P9_FID_NONE</name></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="163:7" pos:end="313:25">else if <condition pos:start="163:15" pos:end="163:42">(<expr pos:start="163:16" pos:end="163:41"><name pos:start="163:16" pos:end="163:19">perm</name> <operator pos:start="163:21" pos:end="163:21">&amp;</operator> <name pos:start="163:23" pos:end="163:41">P9_STAT_MODE_DEVICE</name></expr>)</condition> <block pos:start="163:44" pos:end="313:25">{<block_content pos:start="165:9" pos:end="313:25">

        <decl_stmt pos:start="165:9" pos:end="165:19"><decl pos:start="165:9" pos:end="165:18"><type pos:start="165:9" pos:end="165:12"><name pos:start="165:9" pos:end="165:12">char</name></type> <name pos:start="165:14" pos:end="165:18">ctype</name></decl>;</decl_stmt>

        <decl_stmt pos:start="167:9" pos:end="167:30"><decl pos:start="167:9" pos:end="167:22"><type pos:start="167:9" pos:end="167:16"><name pos:start="167:9" pos:end="167:16">uint32_t</name></type> <name pos:start="167:18" pos:end="167:22">major</name></decl>, <decl pos:start="167:25" pos:end="167:29"><type ref="prev" pos:start="167:9" pos:end="167:16"/><name pos:start="167:25" pos:end="167:29">minor</name></decl>;</decl_stmt>

        <decl_stmt pos:start="169:9" pos:end="169:25"><decl pos:start="169:9" pos:end="169:24"><type pos:start="169:9" pos:end="169:14"><name pos:start="169:9" pos:end="169:14">mode_t</name></type> <name pos:start="169:16" pos:end="169:20">nmode</name> <init pos:start="169:22" pos:end="169:24">= <expr pos:start="169:24" pos:end="169:24"><literal type="number" pos:start="169:24" pos:end="169:24">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="173:9" pos:end="313:25"><if pos:start="173:9" pos:end="313:25">if <condition pos:start="173:12" pos:end="173:76">(<expr pos:start="173:13" pos:end="173:75"><call pos:start="173:13" pos:end="173:70"><name pos:start="173:13" pos:end="173:18">sscanf</name><argument_list pos:start="173:19" pos:end="173:70">(<argument pos:start="173:20" pos:end="173:33"><expr pos:start="173:20" pos:end="173:33"><name pos:start="173:20" pos:end="173:33"><name pos:start="173:20" pos:end="173:28">extension</name><operator pos:start="173:29" pos:end="173:29">.</operator><name pos:start="173:30" pos:end="173:33">data</name></name></expr></argument>, <argument pos:start="173:36" pos:end="173:45"><expr pos:start="173:36" pos:end="173:45"><literal type="string" pos:start="173:36" pos:end="173:45">"%c %u %u"</literal></expr></argument>, <argument pos:start="173:48" pos:end="173:53"><expr pos:start="173:48" pos:end="173:53"><operator pos:start="173:48" pos:end="173:48">&amp;</operator><name pos:start="173:49" pos:end="173:53">ctype</name></expr></argument>, <argument pos:start="173:56" pos:end="173:61"><expr pos:start="173:56" pos:end="173:61"><operator pos:start="173:56" pos:end="173:56">&amp;</operator><name pos:start="173:57" pos:end="173:61">major</name></expr></argument>, <argument pos:start="173:64" pos:end="173:69"><expr pos:start="173:64" pos:end="173:69"><operator pos:start="173:64" pos:end="173:64">&amp;</operator><name pos:start="173:65" pos:end="173:69">minor</name></expr></argument>)</argument_list></call> <operator pos:start="173:72" pos:end="173:73">!=</operator> <literal type="number" pos:start="173:75" pos:end="173:75">3</literal></expr>)</condition> <block pos:start="173:78" pos:end="313:25">{<block_content pos:start="175:13" pos:end="313:25">

            <expr_stmt pos:start="175:13" pos:end="175:25"><expr pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:15">err</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <operator pos:start="175:19" pos:end="175:19">-</operator><name pos:start="175:20" pos:end="175:24">errno</name></expr>;</expr_stmt>





        <switch pos:start="181:9" pos:end="313:25">switch <condition pos:start="181:16" pos:end="181:22">(<expr pos:start="181:17" pos:end="181:21"><name pos:start="181:17" pos:end="181:21">ctype</name></expr>)</condition> <block pos:start="181:24" pos:end="313:25">{<block_content pos:start="183:9" pos:end="313:25">

        <case pos:start="183:9" pos:end="183:17">case <expr pos:start="183:14" pos:end="183:16"><literal type="char" pos:start="183:14" pos:end="183:16">'c'</literal></expr>:</case>

            <expr_stmt pos:start="185:13" pos:end="185:28"><expr pos:start="185:13" pos:end="185:27"><name pos:start="185:13" pos:end="185:17">nmode</name> <operator pos:start="185:19" pos:end="185:19">=</operator> <name pos:start="185:21" pos:end="185:27">S_IFCHR</name></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:17">case <expr pos:start="189:14" pos:end="189:16"><literal type="char" pos:start="189:14" pos:end="189:16">'b'</literal></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:28"><expr pos:start="191:13" pos:end="191:27"><name pos:start="191:13" pos:end="191:17">nmode</name> <operator pos:start="191:19" pos:end="191:19">=</operator> <name pos:start="191:21" pos:end="191:27">S_IFBLK</name></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <default pos:start="195:9" pos:end="195:16">default:</default>

            <expr_stmt pos:start="197:13" pos:end="197:23"><expr pos:start="197:13" pos:end="197:22"><name pos:start="197:13" pos:end="197:15">err</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <operator pos:start="197:19" pos:end="197:19">-</operator><name pos:start="197:20" pos:end="197:22">EIO</name></expr>;</expr_stmt>





        <expr_stmt pos:start="203:9" pos:end="203:29"><expr pos:start="203:9" pos:end="203:28"><name pos:start="203:9" pos:end="203:13">nmode</name> <operator pos:start="203:15" pos:end="203:16">|=</operator> <name pos:start="203:18" pos:end="203:21">perm</name> <operator pos:start="203:23" pos:end="203:23">&amp;</operator> <literal type="number" pos:start="203:25" pos:end="203:28">0777</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="207:66"><expr pos:start="205:9" pos:end="207:65"><name pos:start="205:9" pos:end="205:11">err</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <call pos:start="205:15" pos:end="207:65"><name pos:start="205:15" pos:end="205:27">v9fs_co_mknod</name><argument_list pos:start="205:28" pos:end="207:65">(<argument pos:start="205:29" pos:end="205:31"><expr pos:start="205:29" pos:end="205:31"><name pos:start="205:29" pos:end="205:31">pdu</name></expr></argument>, <argument pos:start="205:34" pos:end="205:37"><expr pos:start="205:34" pos:end="205:37"><name pos:start="205:34" pos:end="205:37">fidp</name></expr></argument>, <argument pos:start="205:40" pos:end="205:44"><expr pos:start="205:40" pos:end="205:44"><operator pos:start="205:40" pos:end="205:40">&amp;</operator><name pos:start="205:41" pos:end="205:44">name</name></expr></argument>, <argument pos:start="205:47" pos:end="205:55"><expr pos:start="205:47" pos:end="205:55"><name pos:start="205:47" pos:end="205:55"><name pos:start="205:47" pos:end="205:50">fidp</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:55">uid</name></name></expr></argument>, <argument pos:start="205:58" pos:end="205:59"><expr pos:start="205:58" pos:end="205:59"><operator pos:start="205:58" pos:end="205:58">-</operator><literal type="number" pos:start="205:59" pos:end="205:59">1</literal></expr></argument>,

                            <argument pos:start="207:29" pos:end="207:49"><expr pos:start="207:29" pos:end="207:49"><call pos:start="207:29" pos:end="207:49"><name pos:start="207:29" pos:end="207:35">makedev</name><argument_list pos:start="207:36" pos:end="207:49">(<argument pos:start="207:37" pos:end="207:41"><expr pos:start="207:37" pos:end="207:41"><name pos:start="207:37" pos:end="207:41">major</name></expr></argument>, <argument pos:start="207:44" pos:end="207:48"><expr pos:start="207:44" pos:end="207:48"><name pos:start="207:44" pos:end="207:48">minor</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="207:52" pos:end="207:56"><expr pos:start="207:52" pos:end="207:56"><name pos:start="207:52" pos:end="207:56">nmode</name></expr></argument>, <argument pos:start="207:59" pos:end="207:64"><expr pos:start="207:59" pos:end="207:64"><operator pos:start="207:59" pos:end="207:59">&amp;</operator><name pos:start="207:60" pos:end="207:64">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="313:25"><if pos:start="209:9" pos:end="313:25">if <condition pos:start="209:12" pos:end="209:20">(<expr pos:start="209:13" pos:end="209:19"><name pos:start="209:13" pos:end="209:15">err</name> <operator pos:start="209:17" pos:end="209:17">&lt;</operator> <literal type="number" pos:start="209:19" pos:end="209:19">0</literal></expr>)</condition> <block pos:start="209:22" pos:end="313:25">{<block_content pos:start="213:9" pos:end="313:25">



        <expr_stmt pos:start="213:9" pos:end="213:71"><expr pos:start="213:9" pos:end="213:70"><name pos:start="213:9" pos:end="213:11">err</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <call pos:start="213:15" pos:end="213:70"><name pos:start="213:15" pos:end="213:34">v9fs_co_name_to_path</name><argument_list pos:start="213:35" pos:end="213:70">(<argument pos:start="213:36" pos:end="213:38"><expr pos:start="213:36" pos:end="213:38"><name pos:start="213:36" pos:end="213:38">pdu</name></expr></argument>, <argument pos:start="213:41" pos:end="213:51"><expr pos:start="213:41" pos:end="213:51"><operator pos:start="213:41" pos:end="213:41">&amp;</operator><name pos:start="213:42" pos:end="213:51"><name pos:start="213:42" pos:end="213:45">fidp</name><operator pos:start="213:46" pos:end="213:47">-&gt;</operator><name pos:start="213:48" pos:end="213:51">path</name></name></expr></argument>, <argument pos:start="213:54" pos:end="213:62"><expr pos:start="213:54" pos:end="213:62"><name pos:start="213:54" pos:end="213:62"><name pos:start="213:54" pos:end="213:57">name</name><operator pos:start="213:58" pos:end="213:58">.</operator><name pos:start="213:59" pos:end="213:62">data</name></name></expr></argument>, <argument pos:start="213:65" pos:end="213:69"><expr pos:start="213:65" pos:end="213:69"><operator pos:start="213:65" pos:end="213:65">&amp;</operator><name pos:start="213:66" pos:end="213:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="313:25"><if pos:start="215:9" pos:end="221:5">if <condition pos:start="215:12" pos:end="215:20">(<expr pos:start="215:13" pos:end="215:19"><name pos:start="215:13" pos:end="215:15">err</name> <operator pos:start="215:17" pos:end="215:17">&lt;</operator> <literal type="number" pos:start="215:19" pos:end="215:19">0</literal></expr>)</condition> <block pos:start="215:22" pos:end="221:5">{<block_content pos:start="219:9" pos:end="219:43">



        <expr_stmt pos:start="219:9" pos:end="219:43"><expr pos:start="219:9" pos:end="219:42"><call pos:start="219:9" pos:end="219:42"><name pos:start="219:9" pos:end="219:22">v9fs_path_copy</name><argument_list pos:start="219:23" pos:end="219:42">(<argument pos:start="219:24" pos:end="219:34"><expr pos:start="219:24" pos:end="219:34"><operator pos:start="219:24" pos:end="219:24">&amp;</operator><name pos:start="219:25" pos:end="219:34"><name pos:start="219:25" pos:end="219:28">fidp</name><operator pos:start="219:29" pos:end="219:30">-&gt;</operator><name pos:start="219:31" pos:end="219:34">path</name></name></expr></argument>, <argument pos:start="219:37" pos:end="219:41"><expr pos:start="219:37" pos:end="219:41"><operator pos:start="219:37" pos:end="219:37">&amp;</operator><name pos:start="219:38" pos:end="219:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="221:7" pos:end="313:25">else if <condition pos:start="221:15" pos:end="221:46">(<expr pos:start="221:16" pos:end="221:45"><name pos:start="221:16" pos:end="221:19">perm</name> <operator pos:start="221:21" pos:end="221:21">&amp;</operator> <name pos:start="221:23" pos:end="221:45">P9_STAT_MODE_NAMED_PIPE</name></expr>)</condition> <block pos:start="221:48" pos:end="313:25">{<block_content pos:start="223:9" pos:end="313:25">

        <expr_stmt pos:start="223:9" pos:end="225:64"><expr pos:start="223:9" pos:end="225:63"><name pos:start="223:9" pos:end="223:11">err</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="225:63"><name pos:start="223:15" pos:end="223:27">v9fs_co_mknod</name><argument_list pos:start="223:28" pos:end="225:63">(<argument pos:start="223:29" pos:end="223:31"><expr pos:start="223:29" pos:end="223:31"><name pos:start="223:29" pos:end="223:31">pdu</name></expr></argument>, <argument pos:start="223:34" pos:end="223:37"><expr pos:start="223:34" pos:end="223:37"><name pos:start="223:34" pos:end="223:37">fidp</name></expr></argument>, <argument pos:start="223:40" pos:end="223:44"><expr pos:start="223:40" pos:end="223:44"><operator pos:start="223:40" pos:end="223:40">&amp;</operator><name pos:start="223:41" pos:end="223:44">name</name></expr></argument>, <argument pos:start="223:47" pos:end="223:55"><expr pos:start="223:47" pos:end="223:55"><name pos:start="223:47" pos:end="223:55"><name pos:start="223:47" pos:end="223:50">fidp</name><operator pos:start="223:51" pos:end="223:52">-&gt;</operator><name pos:start="223:53" pos:end="223:55">uid</name></name></expr></argument>, <argument pos:start="223:58" pos:end="223:59"><expr pos:start="223:58" pos:end="223:59"><operator pos:start="223:58" pos:end="223:58">-</operator><literal type="number" pos:start="223:59" pos:end="223:59">1</literal></expr></argument>,

                            <argument pos:start="225:29" pos:end="225:29"><expr pos:start="225:29" pos:end="225:29"><literal type="number" pos:start="225:29" pos:end="225:29">0</literal></expr></argument>, <argument pos:start="225:32" pos:end="225:54"><expr pos:start="225:32" pos:end="225:54"><name pos:start="225:32" pos:end="225:38">S_IFIFO</name> <operator pos:start="225:40" pos:end="225:40">|</operator> <operator pos:start="225:42" pos:end="225:42">(</operator><name pos:start="225:43" pos:end="225:46">perm</name> <operator pos:start="225:48" pos:end="225:48">&amp;</operator> <literal type="number" pos:start="225:50" pos:end="225:53">0777</literal><operator pos:start="225:54" pos:end="225:54">)</operator></expr></argument>, <argument pos:start="225:57" pos:end="225:62"><expr pos:start="225:57" pos:end="225:62"><operator pos:start="225:57" pos:end="225:57">&amp;</operator><name pos:start="225:58" pos:end="225:62">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="227:9" pos:end="313:25"><if pos:start="227:9" pos:end="313:25">if <condition pos:start="227:12" pos:end="227:20">(<expr pos:start="227:13" pos:end="227:19"><name pos:start="227:13" pos:end="227:15">err</name> <operator pos:start="227:17" pos:end="227:17">&lt;</operator> <literal type="number" pos:start="227:19" pos:end="227:19">0</literal></expr>)</condition> <block pos:start="227:22" pos:end="313:25">{<block_content pos:start="231:9" pos:end="313:25">



        <expr_stmt pos:start="231:9" pos:end="231:71"><expr pos:start="231:9" pos:end="231:70"><name pos:start="231:9" pos:end="231:11">err</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:70"><name pos:start="231:15" pos:end="231:34">v9fs_co_name_to_path</name><argument_list pos:start="231:35" pos:end="231:70">(<argument pos:start="231:36" pos:end="231:38"><expr pos:start="231:36" pos:end="231:38"><name pos:start="231:36" pos:end="231:38">pdu</name></expr></argument>, <argument pos:start="231:41" pos:end="231:51"><expr pos:start="231:41" pos:end="231:51"><operator pos:start="231:41" pos:end="231:41">&amp;</operator><name pos:start="231:42" pos:end="231:51"><name pos:start="231:42" pos:end="231:45">fidp</name><operator pos:start="231:46" pos:end="231:47">-&gt;</operator><name pos:start="231:48" pos:end="231:51">path</name></name></expr></argument>, <argument pos:start="231:54" pos:end="231:62"><expr pos:start="231:54" pos:end="231:62"><name pos:start="231:54" pos:end="231:62"><name pos:start="231:54" pos:end="231:57">name</name><operator pos:start="231:58" pos:end="231:58">.</operator><name pos:start="231:59" pos:end="231:62">data</name></name></expr></argument>, <argument pos:start="231:65" pos:end="231:69"><expr pos:start="231:65" pos:end="231:69"><operator pos:start="231:65" pos:end="231:65">&amp;</operator><name pos:start="231:66" pos:end="231:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="313:25"><if pos:start="233:9" pos:end="239:5">if <condition pos:start="233:12" pos:end="233:20">(<expr pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:15">err</name> <operator pos:start="233:17" pos:end="233:17">&lt;</operator> <literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr>)</condition> <block pos:start="233:22" pos:end="239:5">{<block_content pos:start="237:9" pos:end="237:43">



        <expr_stmt pos:start="237:9" pos:end="237:43"><expr pos:start="237:9" pos:end="237:42"><call pos:start="237:9" pos:end="237:42"><name pos:start="237:9" pos:end="237:22">v9fs_path_copy</name><argument_list pos:start="237:23" pos:end="237:42">(<argument pos:start="237:24" pos:end="237:34"><expr pos:start="237:24" pos:end="237:34"><operator pos:start="237:24" pos:end="237:24">&amp;</operator><name pos:start="237:25" pos:end="237:34"><name pos:start="237:25" pos:end="237:28">fidp</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:34">path</name></name></expr></argument>, <argument pos:start="237:37" pos:end="237:41"><expr pos:start="237:37" pos:end="237:41"><operator pos:start="237:37" pos:end="237:37">&amp;</operator><name pos:start="237:38" pos:end="237:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="239:7" pos:end="313:25">else if <condition pos:start="239:15" pos:end="239:42">(<expr pos:start="239:16" pos:end="239:41"><name pos:start="239:16" pos:end="239:19">perm</name> <operator pos:start="239:21" pos:end="239:21">&amp;</operator> <name pos:start="239:23" pos:end="239:41">P9_STAT_MODE_SOCKET</name></expr>)</condition> <block pos:start="239:44" pos:end="313:25">{<block_content pos:start="241:9" pos:end="313:25">

        <expr_stmt pos:start="241:9" pos:end="243:65"><expr pos:start="241:9" pos:end="243:64"><name pos:start="241:9" pos:end="241:11">err</name> <operator pos:start="241:13" pos:end="241:13">=</operator> <call pos:start="241:15" pos:end="243:64"><name pos:start="241:15" pos:end="241:27">v9fs_co_mknod</name><argument_list pos:start="241:28" pos:end="243:64">(<argument pos:start="241:29" pos:end="241:31"><expr pos:start="241:29" pos:end="241:31"><name pos:start="241:29" pos:end="241:31">pdu</name></expr></argument>, <argument pos:start="241:34" pos:end="241:37"><expr pos:start="241:34" pos:end="241:37"><name pos:start="241:34" pos:end="241:37">fidp</name></expr></argument>, <argument pos:start="241:40" pos:end="241:44"><expr pos:start="241:40" pos:end="241:44"><operator pos:start="241:40" pos:end="241:40">&amp;</operator><name pos:start="241:41" pos:end="241:44">name</name></expr></argument>, <argument pos:start="241:47" pos:end="241:55"><expr pos:start="241:47" pos:end="241:55"><name pos:start="241:47" pos:end="241:55"><name pos:start="241:47" pos:end="241:50">fidp</name><operator pos:start="241:51" pos:end="241:52">-&gt;</operator><name pos:start="241:53" pos:end="241:55">uid</name></name></expr></argument>, <argument pos:start="241:58" pos:end="241:59"><expr pos:start="241:58" pos:end="241:59"><operator pos:start="241:58" pos:end="241:58">-</operator><literal type="number" pos:start="241:59" pos:end="241:59">1</literal></expr></argument>,

                            <argument pos:start="243:29" pos:end="243:29"><expr pos:start="243:29" pos:end="243:29"><literal type="number" pos:start="243:29" pos:end="243:29">0</literal></expr></argument>, <argument pos:start="243:32" pos:end="243:55"><expr pos:start="243:32" pos:end="243:55"><name pos:start="243:32" pos:end="243:39">S_IFSOCK</name> <operator pos:start="243:41" pos:end="243:41">|</operator> <operator pos:start="243:43" pos:end="243:43">(</operator><name pos:start="243:44" pos:end="243:47">perm</name> <operator pos:start="243:49" pos:end="243:49">&amp;</operator> <literal type="number" pos:start="243:51" pos:end="243:54">0777</literal><operator pos:start="243:55" pos:end="243:55">)</operator></expr></argument>, <argument pos:start="243:58" pos:end="243:63"><expr pos:start="243:58" pos:end="243:63"><operator pos:start="243:58" pos:end="243:58">&amp;</operator><name pos:start="243:59" pos:end="243:63">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="245:9" pos:end="313:25"><if pos:start="245:9" pos:end="313:25">if <condition pos:start="245:12" pos:end="245:20">(<expr pos:start="245:13" pos:end="245:19"><name pos:start="245:13" pos:end="245:15">err</name> <operator pos:start="245:17" pos:end="245:17">&lt;</operator> <literal type="number" pos:start="245:19" pos:end="245:19">0</literal></expr>)</condition> <block pos:start="245:22" pos:end="313:25">{<block_content pos:start="249:9" pos:end="313:25">



        <expr_stmt pos:start="249:9" pos:end="249:71"><expr pos:start="249:9" pos:end="249:70"><name pos:start="249:9" pos:end="249:11">err</name> <operator pos:start="249:13" pos:end="249:13">=</operator> <call pos:start="249:15" pos:end="249:70"><name pos:start="249:15" pos:end="249:34">v9fs_co_name_to_path</name><argument_list pos:start="249:35" pos:end="249:70">(<argument pos:start="249:36" pos:end="249:38"><expr pos:start="249:36" pos:end="249:38"><name pos:start="249:36" pos:end="249:38">pdu</name></expr></argument>, <argument pos:start="249:41" pos:end="249:51"><expr pos:start="249:41" pos:end="249:51"><operator pos:start="249:41" pos:end="249:41">&amp;</operator><name pos:start="249:42" pos:end="249:51"><name pos:start="249:42" pos:end="249:45">fidp</name><operator pos:start="249:46" pos:end="249:47">-&gt;</operator><name pos:start="249:48" pos:end="249:51">path</name></name></expr></argument>, <argument pos:start="249:54" pos:end="249:62"><expr pos:start="249:54" pos:end="249:62"><name pos:start="249:54" pos:end="249:62"><name pos:start="249:54" pos:end="249:57">name</name><operator pos:start="249:58" pos:end="249:58">.</operator><name pos:start="249:59" pos:end="249:62">data</name></name></expr></argument>, <argument pos:start="249:65" pos:end="249:69"><expr pos:start="249:65" pos:end="249:69"><operator pos:start="249:65" pos:end="249:65">&amp;</operator><name pos:start="249:66" pos:end="249:69">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="313:25"><if pos:start="251:9" pos:end="257:5">if <condition pos:start="251:12" pos:end="251:20">(<expr pos:start="251:13" pos:end="251:19"><name pos:start="251:13" pos:end="251:15">err</name> <operator pos:start="251:17" pos:end="251:17">&lt;</operator> <literal type="number" pos:start="251:19" pos:end="251:19">0</literal></expr>)</condition> <block pos:start="251:22" pos:end="257:5">{<block_content pos:start="255:9" pos:end="255:43">



        <expr_stmt pos:start="255:9" pos:end="255:43"><expr pos:start="255:9" pos:end="255:42"><call pos:start="255:9" pos:end="255:42"><name pos:start="255:9" pos:end="255:22">v9fs_path_copy</name><argument_list pos:start="255:23" pos:end="255:42">(<argument pos:start="255:24" pos:end="255:34"><expr pos:start="255:24" pos:end="255:34"><operator pos:start="255:24" pos:end="255:24">&amp;</operator><name pos:start="255:25" pos:end="255:34"><name pos:start="255:25" pos:end="255:28">fidp</name><operator pos:start="255:29" pos:end="255:30">-&gt;</operator><name pos:start="255:31" pos:end="255:34">path</name></name></expr></argument>, <argument pos:start="255:37" pos:end="255:41"><expr pos:start="255:37" pos:end="255:41"><operator pos:start="255:37" pos:end="255:37">&amp;</operator><name pos:start="255:38" pos:end="255:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="257:7" pos:end="313:25">else <block pos:start="257:12" pos:end="313:25">{<block_content pos:start="259:9" pos:end="313:25">

        <expr_stmt pos:start="259:9" pos:end="261:73"><expr pos:start="259:9" pos:end="261:72"><name pos:start="259:9" pos:end="259:11">err</name> <operator pos:start="259:13" pos:end="259:13">=</operator> <call pos:start="259:15" pos:end="261:72"><name pos:start="259:15" pos:end="259:27">v9fs_co_open2</name><argument_list pos:start="259:28" pos:end="261:72">(<argument pos:start="259:29" pos:end="259:31"><expr pos:start="259:29" pos:end="259:31"><name pos:start="259:29" pos:end="259:31">pdu</name></expr></argument>, <argument pos:start="259:34" pos:end="259:37"><expr pos:start="259:34" pos:end="259:37"><name pos:start="259:34" pos:end="259:37">fidp</name></expr></argument>, <argument pos:start="259:40" pos:end="259:44"><expr pos:start="259:40" pos:end="259:44"><operator pos:start="259:40" pos:end="259:40">&amp;</operator><name pos:start="259:41" pos:end="259:44">name</name></expr></argument>, <argument pos:start="259:47" pos:end="259:48"><expr pos:start="259:47" pos:end="259:48"><operator pos:start="259:47" pos:end="259:47">-</operator><literal type="number" pos:start="259:48" pos:end="259:48">1</literal></expr></argument>,

                            <argument pos:start="261:29" pos:end="261:57"><expr pos:start="261:29" pos:end="261:57"><call pos:start="261:29" pos:end="261:49"><name pos:start="261:29" pos:end="261:43">omode_to_uflags</name><argument_list pos:start="261:44" pos:end="261:49">(<argument pos:start="261:45" pos:end="261:48"><expr pos:start="261:45" pos:end="261:48"><name pos:start="261:45" pos:end="261:48">mode</name></expr></argument>)</argument_list></call><operator pos:start="261:50" pos:end="261:50">|</operator><name pos:start="261:51" pos:end="261:57">O_CREAT</name></expr></argument>, <argument pos:start="261:60" pos:end="261:63"><expr pos:start="261:60" pos:end="261:63"><name pos:start="261:60" pos:end="261:63">perm</name></expr></argument>, <argument pos:start="261:66" pos:end="261:71"><expr pos:start="261:66" pos:end="261:71"><operator pos:start="261:66" pos:end="261:66">&amp;</operator><name pos:start="261:67" pos:end="261:71">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="263:9" pos:end="313:25"><if pos:start="263:9" pos:end="313:25">if <condition pos:start="263:12" pos:end="263:20">(<expr pos:start="263:13" pos:end="263:19"><name pos:start="263:13" pos:end="263:15">err</name> <operator pos:start="263:17" pos:end="263:17">&lt;</operator> <literal type="number" pos:start="263:19" pos:end="263:19">0</literal></expr>)</condition> <block pos:start="263:22" pos:end="313:25">{<block_content pos:start="267:9" pos:end="313:25">



        <expr_stmt pos:start="267:9" pos:end="267:37"><expr pos:start="267:9" pos:end="267:36"><name pos:start="267:9" pos:end="267:22"><name pos:start="267:9" pos:end="267:12">fidp</name><operator pos:start="267:13" pos:end="267:14">-&gt;</operator><name pos:start="267:15" pos:end="267:22">fid_type</name></name> <operator pos:start="267:24" pos:end="267:24">=</operator> <name pos:start="267:26" pos:end="267:36">P9_FID_FILE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:49"><expr pos:start="269:9" pos:end="269:48"><name pos:start="269:9" pos:end="269:24"><name pos:start="269:9" pos:end="269:12">fidp</name><operator pos:start="269:13" pos:end="269:14">-&gt;</operator><name pos:start="269:15" pos:end="269:24">open_flags</name></name> <operator pos:start="269:26" pos:end="269:26">=</operator> <call pos:start="269:28" pos:end="269:48"><name pos:start="269:28" pos:end="269:42">omode_to_uflags</name><argument_list pos:start="269:43" pos:end="269:48">(<argument pos:start="269:44" pos:end="269:47"><expr pos:start="269:44" pos:end="269:47"><name pos:start="269:44" pos:end="269:47">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="313:25"><if pos:start="271:9" pos:end="313:25">if <condition pos:start="271:12" pos:end="271:38">(<expr pos:start="271:13" pos:end="271:37"><name pos:start="271:13" pos:end="271:28"><name pos:start="271:13" pos:end="271:16">fidp</name><operator pos:start="271:17" pos:end="271:18">-&gt;</operator><name pos:start="271:19" pos:end="271:28">open_flags</name></name> <operator pos:start="271:30" pos:end="271:30">&amp;</operator> <name pos:start="271:32" pos:end="271:37">O_EXCL</name></expr>)</condition> <block pos:start="271:40" pos:end="313:25">{<block_content pos:start="281:13" pos:end="313:25">

            <comment type="block" pos:start="273:13" pos:end="279:15">/*

             * We let the host file system do O_EXCL check

             * We should not reclaim such fd

             */</comment>

            <expr_stmt pos:start="281:13" pos:end="281:47"><expr pos:start="281:13" pos:end="281:46"><name pos:start="281:13" pos:end="281:23"><name pos:start="281:13" pos:end="281:16">fidp</name><operator pos:start="281:17" pos:end="281:18">-&gt;</operator><name pos:start="281:19" pos:end="281:23">flags</name></name> <operator pos:start="281:25" pos:end="281:26">|=</operator> <name pos:start="281:28" pos:end="281:46">FID_NON_RECLAIMABLE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="285:5" pos:end="285:42"><expr pos:start="285:5" pos:end="285:41"><name pos:start="285:5" pos:end="285:10">iounit</name> <operator pos:start="285:12" pos:end="285:12">=</operator> <call pos:start="285:14" pos:end="285:41"><name pos:start="285:14" pos:end="285:23">get_iounit</name><argument_list pos:start="285:24" pos:end="285:41">(<argument pos:start="285:25" pos:end="285:27"><expr pos:start="285:25" pos:end="285:27"><name pos:start="285:25" pos:end="285:27">pdu</name></expr></argument>, <argument pos:start="285:30" pos:end="285:40"><expr pos:start="285:30" pos:end="285:40"><operator pos:start="285:30" pos:end="285:30">&amp;</operator><name pos:start="285:31" pos:end="285:40"><name pos:start="285:31" pos:end="285:34">fidp</name><operator pos:start="285:35" pos:end="285:36">-&gt;</operator><name pos:start="285:37" pos:end="285:40">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:30"><expr pos:start="287:5" pos:end="287:29"><call pos:start="287:5" pos:end="287:29"><name pos:start="287:5" pos:end="287:15">stat_to_qid</name><argument_list pos:start="287:16" pos:end="287:29">(<argument pos:start="287:17" pos:end="287:22"><expr pos:start="287:17" pos:end="287:22"><operator pos:start="287:17" pos:end="287:17">&amp;</operator><name pos:start="287:18" pos:end="287:22">stbuf</name></expr></argument>, <argument pos:start="287:25" pos:end="287:28"><expr pos:start="287:25" pos:end="287:28"><operator pos:start="287:25" pos:end="287:25">&amp;</operator><name pos:start="287:26" pos:end="287:28">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:55"><expr pos:start="289:5" pos:end="289:54"><name pos:start="289:5" pos:end="289:7">err</name> <operator pos:start="289:9" pos:end="289:9">=</operator> <call pos:start="289:11" pos:end="289:54"><name pos:start="289:11" pos:end="289:21">pdu_marshal</name><argument_list pos:start="289:22" pos:end="289:54">(<argument pos:start="289:23" pos:end="289:25"><expr pos:start="289:23" pos:end="289:25"><name pos:start="289:23" pos:end="289:25">pdu</name></expr></argument>, <argument pos:start="289:28" pos:end="289:33"><expr pos:start="289:28" pos:end="289:33"><name pos:start="289:28" pos:end="289:33">offset</name></expr></argument>, <argument pos:start="289:36" pos:end="289:39"><expr pos:start="289:36" pos:end="289:39"><literal type="string" pos:start="289:36" pos:end="289:39">"Qd"</literal></expr></argument>, <argument pos:start="289:42" pos:end="289:45"><expr pos:start="289:42" pos:end="289:45"><operator pos:start="289:42" pos:end="289:42">&amp;</operator><name pos:start="289:43" pos:end="289:45">qid</name></expr></argument>, <argument pos:start="289:48" pos:end="289:53"><expr pos:start="289:48" pos:end="289:53"><name pos:start="289:48" pos:end="289:53">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="291:5" pos:end="313:25"><if pos:start="291:5" pos:end="313:25">if <condition pos:start="291:8" pos:end="291:16">(<expr pos:start="291:9" pos:end="291:15"><name pos:start="291:9" pos:end="291:11">err</name> <operator pos:start="291:13" pos:end="291:13">&lt;</operator> <literal type="number" pos:start="291:15" pos:end="291:15">0</literal></expr>)</condition> <block pos:start="291:18" pos:end="313:25">{<block_content pos:start="295:5" pos:end="313:25">



    <expr_stmt pos:start="295:5" pos:end="295:18"><expr pos:start="295:5" pos:end="295:17"><name pos:start="295:5" pos:end="295:7">err</name> <operator pos:start="295:9" pos:end="295:10">+=</operator> <name pos:start="295:12" pos:end="295:17">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="299:70"><expr pos:start="297:5" pos:end="299:69"><call pos:start="297:5" pos:end="299:69"><name pos:start="297:5" pos:end="297:28">trace_v9fs_create_return</name><argument_list pos:start="297:29" pos:end="299:69">(<argument pos:start="297:30" pos:end="297:37"><expr pos:start="297:30" pos:end="297:37"><name pos:start="297:30" pos:end="297:37"><name pos:start="297:30" pos:end="297:32">pdu</name><operator pos:start="297:33" pos:end="297:34">-&gt;</operator><name pos:start="297:35" pos:end="297:37">tag</name></name></expr></argument>, <argument pos:start="297:40" pos:end="297:46"><expr pos:start="297:40" pos:end="297:46"><name pos:start="297:40" pos:end="297:46"><name pos:start="297:40" pos:end="297:42">pdu</name><operator pos:start="297:43" pos:end="297:44">-&gt;</operator><name pos:start="297:45" pos:end="297:46">id</name></name></expr></argument>,

                             <argument pos:start="299:30" pos:end="299:37"><expr pos:start="299:30" pos:end="299:37"><name pos:start="299:30" pos:end="299:37"><name pos:start="299:30" pos:end="299:32">qid</name><operator pos:start="299:33" pos:end="299:33">.</operator><name pos:start="299:34" pos:end="299:37">type</name></name></expr></argument>, <argument pos:start="299:40" pos:end="299:50"><expr pos:start="299:40" pos:end="299:50"><name pos:start="299:40" pos:end="299:50"><name pos:start="299:40" pos:end="299:42">qid</name><operator pos:start="299:43" pos:end="299:43">.</operator><name pos:start="299:44" pos:end="299:50">version</name></name></expr></argument>, <argument pos:start="299:53" pos:end="299:60"><expr pos:start="299:53" pos:end="299:60"><name pos:start="299:53" pos:end="299:60"><name pos:start="299:53" pos:end="299:55">qid</name><operator pos:start="299:56" pos:end="299:56">.</operator><name pos:start="299:57" pos:end="299:60">path</name></name></expr></argument>, <argument pos:start="299:63" pos:end="299:68"><expr pos:start="299:63" pos:end="299:68"><name pos:start="299:63" pos:end="299:68">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="301:1" pos:end="301:4"><name pos:start="301:1" pos:end="301:3">out</name>:</label>

    <expr_stmt pos:start="303:5" pos:end="303:23"><expr pos:start="303:5" pos:end="303:22"><call pos:start="303:5" pos:end="303:22"><name pos:start="303:5" pos:end="303:11">put_fid</name><argument_list pos:start="303:12" pos:end="303:22">(<argument pos:start="303:13" pos:end="303:15"><expr pos:start="303:13" pos:end="303:15"><name pos:start="303:13" pos:end="303:15">pdu</name></expr></argument>, <argument pos:start="303:18" pos:end="303:21"><expr pos:start="303:18" pos:end="303:21"><name pos:start="303:18" pos:end="303:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="305:1" pos:end="305:10"><name pos:start="305:1" pos:end="305:9">out_nofid</name>:</label>

   <expr_stmt pos:start="307:4" pos:end="307:26"><expr pos:start="307:4" pos:end="307:25"><call pos:start="307:4" pos:end="307:25"><name pos:start="307:4" pos:end="307:15">pdu_complete</name><argument_list pos:start="307:16" pos:end="307:25">(<argument pos:start="307:17" pos:end="307:19"><expr pos:start="307:17" pos:end="307:19"><name pos:start="307:17" pos:end="307:19">pdu</name></expr></argument>, <argument pos:start="307:22" pos:end="307:24"><expr pos:start="307:22" pos:end="307:24"><name pos:start="307:22" pos:end="307:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="309:4" pos:end="309:27"><expr pos:start="309:4" pos:end="309:26"><call pos:start="309:4" pos:end="309:26"><name pos:start="309:4" pos:end="309:19">v9fs_string_free</name><argument_list pos:start="309:20" pos:end="309:26">(<argument pos:start="309:21" pos:end="309:25"><expr pos:start="309:21" pos:end="309:25"><operator pos:start="309:21" pos:end="309:21">&amp;</operator><name pos:start="309:22" pos:end="309:25">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="311:4" pos:end="311:32"><expr pos:start="311:4" pos:end="311:31"><call pos:start="311:4" pos:end="311:31"><name pos:start="311:4" pos:end="311:19">v9fs_string_free</name><argument_list pos:start="311:20" pos:end="311:31">(<argument pos:start="311:21" pos:end="311:30"><expr pos:start="311:21" pos:end="311:30"><operator pos:start="311:21" pos:end="311:21">&amp;</operator><name pos:start="311:22" pos:end="311:30">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <expr_stmt pos:start="313:4" pos:end="313:25"><expr pos:start="313:4" pos:end="313:24"><call pos:start="313:4" pos:end="313:24"><name pos:start="313:4" pos:end="313:17">v9fs_path_free</name><argument_list pos:start="313:18" pos:end="313:24">(<argument pos:start="313:19" pos:end="313:23"><expr pos:start="313:19" pos:end="313:23"><operator pos:start="313:19" pos:end="313:19">&amp;</operator><name pos:start="313:20" pos:end="313:23">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
