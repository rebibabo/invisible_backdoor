<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8872.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">synth_frame</name><parameter_list pos:start="1:23" pos:end="7:55">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:57">GetBitContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">gb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:76">frame_idx</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:37"><decl pos:start="3:24" pos:end="3:37"><type pos:start="3:24" pos:end="3:37"><name pos:start="3:24" pos:end="3:28">float</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:37">samples</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:41"><decl pos:start="5:24" pos:end="5:41"><type pos:start="5:24" pos:end="5:41"><specifier pos:start="5:24" pos:end="5:28">const</specifier> <name pos:start="5:30" pos:end="5:35">double</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:41">lsps</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:66"><decl pos:start="5:44" pos:end="5:66"><type pos:start="5:44" pos:end="5:66"><specifier pos:start="5:44" pos:end="5:48">const</specifier> <name pos:start="5:50" pos:end="5:55">double</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:66">prev_lsps</name></decl></parameter>,

                       <parameter pos:start="7:24" pos:end="7:40"><decl pos:start="7:24" pos:end="7:40"><type pos:start="7:24" pos:end="7:40"><name pos:start="7:24" pos:end="7:28">float</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:40">excitation</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:54"><decl pos:start="7:43" pos:end="7:54"><type pos:start="7:43" pos:end="7:54"><name pos:start="7:43" pos:end="7:47">float</name> <modifier pos:start="7:49" pos:end="7:49">*</modifier></type><name pos:start="7:50" pos:end="7:54">synth</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="325:1">{<block_content pos:start="11:5" pos:end="323:13">

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">WMAVoiceContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">s</name> <init pos:start="11:24" pos:end="11:39">= <expr pos:start="11:26" pos:end="11:39"><name pos:start="11:26" pos:end="11:39"><name pos:start="11:26" pos:end="11:28">ctx</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">n</name></decl>, <decl pos:start="13:12" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:22">n_blocks_x2</name></decl>, <decl pos:start="13:25" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:39">log_n_blocks_x2</name></decl>, <decl pos:start="13:42" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:42" pos:end="13:54">cur_pitch_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:13">pitch</name><index pos:start="15:14" pos:end="15:25">[<expr pos:start="15:15" pos:end="15:24"><name pos:start="15:15" pos:end="15:24">MAX_BLOCKS</name></expr>]</index></name></decl>, <decl pos:start="15:28" pos:end="15:43"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:28" pos:end="15:43">last_block_pitch</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:60">/* Parse frame type ("frame header"), see frame_descs */</comment>

    <decl_stmt pos:start="21:5" pos:end="21:87"><decl pos:start="21:5" pos:end="21:70"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">bd_idx</name> <init pos:start="21:16" pos:end="21:70">= <expr pos:start="21:18" pos:end="21:70"><name pos:start="21:18" pos:end="21:70"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:28">vbm_tree</name><index pos:start="21:29" pos:end="21:70">[<expr pos:start="21:30" pos:end="21:69"><call pos:start="21:30" pos:end="21:69"><name pos:start="21:30" pos:end="21:37">get_vlc2</name><argument_list pos:start="21:38" pos:end="21:69">(<argument pos:start="21:39" pos:end="21:40"><expr pos:start="21:39" pos:end="21:40"><name pos:start="21:39" pos:end="21:40">gb</name></expr></argument>, <argument pos:start="21:43" pos:end="21:62"><expr pos:start="21:43" pos:end="21:62"><name pos:start="21:43" pos:end="21:62"><name pos:start="21:43" pos:end="21:56">frame_type_vlc</name><operator pos:start="21:57" pos:end="21:57">.</operator><name pos:start="21:58" pos:end="21:62">table</name></name></expr></argument>, <argument pos:start="21:65" pos:end="21:65"><expr pos:start="21:65" pos:end="21:65"><literal type="number" pos:start="21:65" pos:end="21:65">6</literal></expr></argument>, <argument pos:start="21:68" pos:end="21:68"><expr pos:start="21:68" pos:end="21:68"><literal type="number" pos:start="21:68" pos:end="21:68">3</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>, <decl pos:start="21:73" pos:end="21:86"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:73" pos:end="21:86">block_nsamples</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:14">bd_idx</name> <operator pos:start="25:16" pos:end="25:16">&lt;</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>)</condition> <block pos:start="25:21" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:18">

        <expr_stmt pos:start="27:9" pos:end="29:58"><expr pos:start="27:9" pos:end="29:57"><call pos:start="27:9" pos:end="29:57"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="29:57">(<argument pos:start="27:16" pos:end="27:18"><expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ctx</name></expr></argument>, <argument pos:start="27:21" pos:end="27:32"><expr pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="29:16" pos:end="29:56"><expr pos:start="29:16" pos:end="29:56"><literal type="string" pos:start="29:16" pos:end="29:56">"Invalid frame type VLC code, skipping\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:66"><expr pos:start="37:5" pos:end="37:65"><name pos:start="37:5" pos:end="37:18">block_nsamples</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:34">MAX_FRAMESIZE</name> <operator pos:start="37:36" pos:end="37:36">/</operator> <name pos:start="37:38" pos:end="37:56"><name pos:start="37:38" pos:end="37:48">frame_descs</name><index pos:start="37:49" pos:end="37:56">[<expr pos:start="37:50" pos:end="37:55"><name pos:start="37:50" pos:end="37:55">bd_idx</name></expr>]</index></name><operator pos:start="37:57" pos:end="37:57">.</operator><name pos:start="37:58" pos:end="37:65">n_blocks</name></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:71">/* Pitch calculation for ACB_TYPE_ASYMMETRIC ("pitch-per-frame") */</comment>

    <if_stmt pos:start="43:5" pos:end="95:5"><if pos:start="43:5" pos:end="95:5">if <condition pos:start="43:8" pos:end="43:60">(<expr pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:19">frame_descs</name><index pos:start="43:20" pos:end="43:27">[<expr pos:start="43:21" pos:end="43:26"><name pos:start="43:21" pos:end="43:26">bd_idx</name></expr>]</index></name><operator pos:start="43:28" pos:end="43:28">.</operator><name pos:start="43:29" pos:end="43:36">acb_type</name> <operator pos:start="43:38" pos:end="43:39">==</operator> <name pos:start="43:41" pos:end="43:59">ACB_TYPE_ASYMMETRIC</name></expr>)</condition> <block pos:start="43:62" pos:end="95:5">{<block_content pos:start="53:9" pos:end="93:72">

        <comment type="block" pos:start="45:9" pos:end="51:74">/* Pitch is provided per frame, which is interpreted as the pitch of

         * the last sample of the last block of this frame. We can interpolate

         * the pitch of other blocks (and even pitch-per-sample) by gradually

         * incrementing/decrementing prev_frame_pitch to cur_pitch_val. */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:19">n_blocks_x2</name>      <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:46"><name pos:start="53:28" pos:end="53:38">frame_descs</name><index pos:start="53:39" pos:end="53:46">[<expr pos:start="53:40" pos:end="53:45"><name pos:start="53:40" pos:end="53:45">bd_idx</name></expr>]</index></name><operator pos:start="53:47" pos:end="53:47">.</operator><name pos:start="53:48" pos:end="53:55">n_blocks</name> <operator pos:start="53:57" pos:end="53:58">&lt;&lt;</operator> <literal type="number" pos:start="53:60" pos:end="53:60">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:64"><expr pos:start="55:9" pos:end="55:63"><name pos:start="55:9" pos:end="55:23">log_n_blocks_x2</name>  <operator pos:start="55:26" pos:end="55:26">=</operator> <name pos:start="55:28" pos:end="55:46"><name pos:start="55:28" pos:end="55:38">frame_descs</name><index pos:start="55:39" pos:end="55:46">[<expr pos:start="55:40" pos:end="55:45"><name pos:start="55:40" pos:end="55:45">bd_idx</name></expr>]</index></name><operator pos:start="55:47" pos:end="55:47">.</operator><name pos:start="55:48" pos:end="55:59">log_n_blocks</name> <operator pos:start="55:61" pos:end="55:61">+</operator> <literal type="number" pos:start="55:63" pos:end="55:63">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:75"><expr pos:start="57:9" pos:end="57:74"><name pos:start="57:9" pos:end="57:21">cur_pitch_val</name>    <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:43"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:43">min_pitch_val</name></name> <operator pos:start="57:45" pos:end="57:45">+</operator> <call pos:start="57:47" pos:end="57:74"><name pos:start="57:47" pos:end="57:54">get_bits</name><argument_list pos:start="57:55" pos:end="57:74">(<argument pos:start="57:56" pos:end="57:57"><expr pos:start="57:56" pos:end="57:57"><name pos:start="57:56" pos:end="57:57">gb</name></expr></argument>, <argument pos:start="57:60" pos:end="57:73"><expr pos:start="57:60" pos:end="57:73"><name pos:start="57:60" pos:end="57:73"><name pos:start="57:60" pos:end="57:60">s</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:73">pitch_nbits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:21">cur_pitch_val</name>    <operator pos:start="59:26" pos:end="59:26">=</operator> <call pos:start="59:28" pos:end="59:69"><name pos:start="59:28" pos:end="59:32">FFMIN</name><argument_list pos:start="59:33" pos:end="59:69">(<argument pos:start="59:34" pos:end="59:46"><expr pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:46">cur_pitch_val</name></expr></argument>, <argument pos:start="59:49" pos:end="59:68"><expr pos:start="59:49" pos:end="59:68"><name pos:start="59:49" pos:end="59:64"><name pos:start="59:49" pos:end="59:49">s</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:64">max_pitch_val</name></name> <operator pos:start="59:66" pos:end="59:66">-</operator> <literal type="number" pos:start="59:68" pos:end="59:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:46"><if pos:start="61:9" pos:end="67:46">if <condition pos:start="61:12" pos:end="65:52">(<expr pos:start="61:13" pos:end="65:51"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:28">last_acb_type</name></name> <operator pos:start="61:30" pos:end="61:31">==</operator> <name pos:start="61:33" pos:end="61:45">ACB_TYPE_NONE</name> <operator pos:start="61:47" pos:end="61:48">||</operator>

            <literal type="number" pos:start="63:13" pos:end="63:14">20</literal> <operator pos:start="63:16" pos:end="63:16">*</operator> <call pos:start="63:18" pos:end="63:55"><name pos:start="63:18" pos:end="63:20">abs</name><argument_list pos:start="63:21" pos:end="63:55">(<argument pos:start="63:22" pos:end="63:54"><expr pos:start="63:22" pos:end="63:54"><name pos:start="63:22" pos:end="63:34">cur_pitch_val</name> <operator pos:start="63:36" pos:end="63:36">-</operator> <name pos:start="63:38" pos:end="63:54"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:54">last_pitch_val</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:57" pos:end="63:57">&gt;</operator>

                <operator pos:start="65:17" pos:end="65:17">(</operator><name pos:start="65:18" pos:end="65:30">cur_pitch_val</name> <operator pos:start="65:32" pos:end="65:32">+</operator> <name pos:start="65:34" pos:end="65:50"><name pos:start="65:34" pos:end="65:34">s</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:50">last_pitch_val</name></name><operator pos:start="65:51" pos:end="65:51">)</operator></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:46"><block_content pos:start="67:13" pos:end="67:46">

            <expr_stmt pos:start="67:13" pos:end="67:46"><expr pos:start="67:13" pos:end="67:45"><name pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:29">last_pitch_val</name></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <name pos:start="67:33" pos:end="67:45">cur_pitch_val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="71:9" pos:end="71:29">/* pitch per block */</comment>

        <for pos:start="73:9" pos:end="85:9">for <control pos:start="73:13" pos:end="73:58">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">n</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:53"><expr pos:start="73:21" pos:end="73:52"><name pos:start="73:21" pos:end="73:21">n</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:43"><name pos:start="73:25" pos:end="73:35">frame_descs</name><index pos:start="73:36" pos:end="73:43">[<expr pos:start="73:37" pos:end="73:42"><name pos:start="73:37" pos:end="73:42">bd_idx</name></expr>]</index></name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:52">n_blocks</name></expr>;</condition> <incr pos:start="73:55" pos:end="73:57"><expr pos:start="73:55" pos:end="73:57"><name pos:start="73:55" pos:end="73:55">n</name><operator pos:start="73:56" pos:end="73:57">++</operator></expr></incr>)</control> <block pos:start="73:60" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:73">

            <decl_stmt pos:start="75:13" pos:end="75:32"><decl pos:start="75:13" pos:end="75:31"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:19">fac</name> <init pos:start="75:21" pos:end="75:31">= <expr pos:start="75:23" pos:end="75:31"><name pos:start="75:23" pos:end="75:23">n</name> <operator pos:start="75:25" pos:end="75:25">*</operator> <literal type="number" pos:start="75:27" pos:end="75:29">2</literal> <operator pos:start="75:29" pos:end="75:29">+</operator> <literal type="number" pos:start="75:31" pos:end="75:31">1</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="79:13" pos:end="83:73"><expr pos:start="79:13" pos:end="83:72"><name pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:17">pitch</name><index pos:start="79:18" pos:end="79:20">[<expr pos:start="79:19" pos:end="79:19"><name pos:start="79:19" pos:end="79:19">n</name></expr>]</index></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <operator pos:start="79:24" pos:end="79:24">(</operator><call pos:start="79:25" pos:end="79:65"><name pos:start="79:25" pos:end="79:29">MUL16</name><argument_list pos:start="79:30" pos:end="79:65">(<argument pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:33">fac</name></expr></argument>,                 <argument pos:start="79:52" pos:end="79:64"><expr pos:start="79:52" pos:end="79:64"><name pos:start="79:52" pos:end="79:64">cur_pitch_val</name></expr></argument>)</argument_list></call> <operator pos:start="79:67" pos:end="79:67">+</operator>

                        <call pos:start="81:25" pos:end="81:69"><name pos:start="81:25" pos:end="81:29">MUL16</name><argument_list pos:start="81:30" pos:end="81:69">(<argument pos:start="81:31" pos:end="81:49"><expr pos:start="81:31" pos:end="81:49"><operator pos:start="81:31" pos:end="81:31">(</operator><name pos:start="81:32" pos:end="81:42">n_blocks_x2</name> <operator pos:start="81:44" pos:end="81:44">-</operator> <name pos:start="81:46" pos:end="81:48">fac</name><operator pos:start="81:49" pos:end="81:49">)</operator></expr></argument>, <argument pos:start="81:52" pos:end="81:68"><expr pos:start="81:52" pos:end="81:68"><name pos:start="81:52" pos:end="81:68"><name pos:start="81:52" pos:end="81:52">s</name><operator pos:start="81:53" pos:end="81:54">-&gt;</operator><name pos:start="81:55" pos:end="81:68">last_pitch_val</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:71" pos:end="81:71">+</operator>

                        <name pos:start="83:25" pos:end="83:43"><name pos:start="83:25" pos:end="83:35">frame_descs</name><index pos:start="83:36" pos:end="83:43">[<expr pos:start="83:37" pos:end="83:42"><name pos:start="83:37" pos:end="83:42">bd_idx</name></expr>]</index></name><operator pos:start="83:44" pos:end="83:44">.</operator><name pos:start="83:45" pos:end="83:52">n_blocks</name><operator pos:start="83:53" pos:end="83:53">)</operator> <operator pos:start="83:55" pos:end="83:56">&gt;&gt;</operator> <name pos:start="83:58" pos:end="83:72">log_n_blocks_x2</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="89:9" pos:end="89:73">/* "pitch-diff-per-sample" for calculation of pitch per sample */</comment>

        <expr_stmt pos:start="91:9" pos:end="93:72"><expr pos:start="91:9" pos:end="93:71"><name pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:26">pitch_diff_sh16</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator>

            <operator pos:start="93:13" pos:end="93:13">(</operator><operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:27">cur_pitch_val</name> <operator pos:start="93:29" pos:end="93:29">-</operator> <name pos:start="93:31" pos:end="93:47"><name pos:start="93:31" pos:end="93:31">s</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:47">last_pitch_val</name></name><operator pos:start="93:48" pos:end="93:48">)</operator> <operator pos:start="93:50" pos:end="93:51">&lt;&lt;</operator> <literal type="number" pos:start="93:53" pos:end="93:54">16</literal><operator pos:start="93:55" pos:end="93:55">)</operator> <operator pos:start="93:57" pos:end="93:57">/</operator> <name pos:start="93:59" pos:end="93:71">MAX_FRAMESIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:72">/* Global gain (if silence) and pitch-adaptive window coordinates */</comment>

    <switch pos:start="101:5" pos:end="115:5">switch <condition pos:start="101:12" pos:end="101:41">(<expr pos:start="101:13" pos:end="101:40"><name pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:23">frame_descs</name><index pos:start="101:24" pos:end="101:31">[<expr pos:start="101:25" pos:end="101:30"><name pos:start="101:25" pos:end="101:30">bd_idx</name></expr>]</index></name><operator pos:start="101:32" pos:end="101:32">.</operator><name pos:start="101:33" pos:end="101:40">fcb_type</name></expr>)</condition> <block pos:start="101:43" pos:end="115:5">{<block_content pos:start="103:5" pos:end="113:14">

    <case pos:start="103:5" pos:end="103:26">case <expr pos:start="103:10" pos:end="103:25"><name pos:start="103:10" pos:end="103:25">FCB_TYPE_SILENCE</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:65"><expr pos:start="105:9" pos:end="105:64"><name pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:23">silence_gain</name></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:64"><name pos:start="105:27" pos:end="105:47">wmavoice_gain_silence</name><index pos:start="105:48" pos:end="105:64">[<expr pos:start="105:49" pos:end="105:63"><call pos:start="105:49" pos:end="105:63"><name pos:start="105:49" pos:end="105:56">get_bits</name><argument_list pos:start="105:57" pos:end="105:63">(<argument pos:start="105:58" pos:end="105:59"><expr pos:start="105:58" pos:end="105:59"><name pos:start="105:58" pos:end="105:59">gb</name></expr></argument>, <argument pos:start="105:62" pos:end="105:62"><expr pos:start="105:62" pos:end="105:62"><literal type="number" pos:start="105:62" pos:end="105:62">8</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:28">case <expr pos:start="109:10" pos:end="109:27"><name pos:start="109:10" pos:end="109:27">FCB_TYPE_AW_PULSES</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><call pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:23">aw_parse_coords</name><argument_list pos:start="111:24" pos:end="111:37">(<argument pos:start="111:25" pos:end="111:25"><expr pos:start="111:25" pos:end="111:25"><name pos:start="111:25" pos:end="111:25">s</name></expr></argument>, <argument pos:start="111:28" pos:end="111:29"><expr pos:start="111:28" pos:end="111:29"><name pos:start="111:28" pos:end="111:29">gb</name></expr></argument>, <argument pos:start="111:32" pos:end="111:36"><expr pos:start="111:32" pos:end="111:36"><name pos:start="111:32" pos:end="111:36">pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    </block_content>}</block></switch>



    <for pos:start="119:5" pos:end="243:5">for <control pos:start="119:9" pos:end="119:54">(<init pos:start="119:10" pos:end="119:15"><expr pos:start="119:10" pos:end="119:14"><name pos:start="119:10" pos:end="119:10">n</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</init> <condition pos:start="119:17" pos:end="119:49"><expr pos:start="119:17" pos:end="119:48"><name pos:start="119:17" pos:end="119:17">n</name> <operator pos:start="119:19" pos:end="119:19">&lt;</operator> <name pos:start="119:21" pos:end="119:39"><name pos:start="119:21" pos:end="119:31">frame_descs</name><index pos:start="119:32" pos:end="119:39">[<expr pos:start="119:33" pos:end="119:38"><name pos:start="119:33" pos:end="119:38">bd_idx</name></expr>]</index></name><operator pos:start="119:40" pos:end="119:40">.</operator><name pos:start="119:41" pos:end="119:48">n_blocks</name></expr>;</condition> <incr pos:start="119:51" pos:end="119:53"><expr pos:start="119:51" pos:end="119:53"><name pos:start="119:51" pos:end="119:51">n</name><operator pos:start="119:52" pos:end="119:53">++</operator></expr></incr>)</control> <block pos:start="119:56" pos:end="243:5">{<block_content pos:start="121:9" pos:end="241:48">

        <decl_stmt pos:start="121:9" pos:end="121:25"><decl pos:start="121:9" pos:end="121:24"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:24">bl_pitch_sh2</name></decl>;</decl_stmt>



        <comment type="block" pos:start="125:9" pos:end="125:72">/* Pitch calculation for ACB_TYPE_HAMMING ("pitch-per-block") */</comment>

        <switch pos:start="127:9" pos:end="231:9">switch <condition pos:start="127:16" pos:end="127:45">(<expr pos:start="127:17" pos:end="127:44"><name pos:start="127:17" pos:end="127:35"><name pos:start="127:17" pos:end="127:27">frame_descs</name><index pos:start="127:28" pos:end="127:35">[<expr pos:start="127:29" pos:end="127:34"><name pos:start="127:29" pos:end="127:34">bd_idx</name></expr>]</index></name><operator pos:start="127:36" pos:end="127:36">.</operator><name pos:start="127:37" pos:end="127:44">acb_type</name></expr>)</condition> <block pos:start="127:47" pos:end="231:9">{<block_content pos:start="129:9" pos:end="229:18">

        <case pos:start="129:9" pos:end="129:30">case <expr pos:start="129:14" pos:end="129:29"><name pos:start="129:14" pos:end="129:29">ACB_TYPE_HAMMING</name></expr>:</case> <block pos:start="129:32" pos:end="211:9">{<block_content pos:start="141:13" pos:end="209:18">

            <comment type="block" pos:start="131:13" pos:end="139:65">/* Pitch is given per block. Per-block pitches are encoded as an

             * absolute value for the first block, and then delta values

             * relative to this value) for all subsequent blocks. The scale of

             * this pitch value is semi-logaritmic compared to its use in the

             * decoder, so we convert it to normal scale also. */</comment>

            <decl_stmt pos:start="141:13" pos:end="147:74"><decl pos:start="141:13" pos:end="141:27"><type pos:start="141:13" pos:end="141:15"><name pos:start="141:13" pos:end="141:15">int</name></type> <name pos:start="141:17" pos:end="141:27">block_pitch</name></decl>,

                <decl pos:start="143:17" pos:end="143:75"><type ref="prev" pos:start="141:13" pos:end="141:15"/><name pos:start="143:17" pos:end="143:18">t1</name> <init pos:start="143:20" pos:end="143:75">= <expr pos:start="143:22" pos:end="143:75"><operator pos:start="143:22" pos:end="143:22">(</operator><name pos:start="143:23" pos:end="143:44"><name pos:start="143:23" pos:end="143:23">s</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:41">block_conv_table</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><literal type="number" pos:start="143:43" pos:end="143:43">1</literal></expr>]</index></name> <operator pos:start="143:46" pos:end="143:46">-</operator> <name pos:start="143:48" pos:end="143:69"><name pos:start="143:48" pos:end="143:48">s</name><operator pos:start="143:49" pos:end="143:50">-&gt;</operator><name pos:start="143:51" pos:end="143:66">block_conv_table</name><index pos:start="143:67" pos:end="143:69">[<expr pos:start="143:68" pos:end="143:68"><literal type="number" pos:start="143:68" pos:end="143:68">0</literal></expr>]</index></name><operator pos:start="143:70" pos:end="143:70">)</operator> <operator pos:start="143:72" pos:end="143:73">&lt;&lt;</operator> <literal type="number" pos:start="143:75" pos:end="143:75">2</literal></expr></init></decl>,

                <decl pos:start="145:17" pos:end="145:75"><type ref="prev" pos:start="141:13" pos:end="141:15"/><name pos:start="145:17" pos:end="145:18">t2</name> <init pos:start="145:20" pos:end="145:75">= <expr pos:start="145:22" pos:end="145:75"><operator pos:start="145:22" pos:end="145:22">(</operator><name pos:start="145:23" pos:end="145:44"><name pos:start="145:23" pos:end="145:23">s</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:41">block_conv_table</name><index pos:start="145:42" pos:end="145:44">[<expr pos:start="145:43" pos:end="145:43"><literal type="number" pos:start="145:43" pos:end="145:43">2</literal></expr>]</index></name> <operator pos:start="145:46" pos:end="145:46">-</operator> <name pos:start="145:48" pos:end="145:69"><name pos:start="145:48" pos:end="145:48">s</name><operator pos:start="145:49" pos:end="145:50">-&gt;</operator><name pos:start="145:51" pos:end="145:66">block_conv_table</name><index pos:start="145:67" pos:end="145:69">[<expr pos:start="145:68" pos:end="145:68"><literal type="number" pos:start="145:68" pos:end="145:68">1</literal></expr>]</index></name><operator pos:start="145:70" pos:end="145:70">)</operator> <operator pos:start="145:72" pos:end="145:73">&lt;&lt;</operator> <literal type="number" pos:start="145:75" pos:end="145:75">1</literal></expr></init></decl>,

                <decl pos:start="147:17" pos:end="147:73"><type ref="prev" pos:start="141:13" pos:end="141:15"/><name pos:start="147:17" pos:end="147:18">t3</name> <init pos:start="147:20" pos:end="147:73">=  <expr pos:start="147:23" pos:end="147:73"><name pos:start="147:23" pos:end="147:44"><name pos:start="147:23" pos:end="147:23">s</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:41">block_conv_table</name><index pos:start="147:42" pos:end="147:44">[<expr pos:start="147:43" pos:end="147:43"><literal type="number" pos:start="147:43" pos:end="147:43">3</literal></expr>]</index></name> <operator pos:start="147:46" pos:end="147:46">-</operator> <name pos:start="147:48" pos:end="147:69"><name pos:start="147:48" pos:end="147:48">s</name><operator pos:start="147:49" pos:end="147:50">-&gt;</operator><name pos:start="147:51" pos:end="147:66">block_conv_table</name><index pos:start="147:67" pos:end="147:69">[<expr pos:start="147:68" pos:end="147:68"><literal type="number" pos:start="147:68" pos:end="147:68">2</literal></expr>]</index></name> <operator pos:start="147:71" pos:end="147:71">+</operator> <literal type="number" pos:start="147:73" pos:end="147:73">1</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="151:13" pos:end="159:74"><if pos:start="151:13" pos:end="155:13">if <condition pos:start="151:16" pos:end="151:23">(<expr pos:start="151:17" pos:end="151:22"><name pos:start="151:17" pos:end="151:17">n</name> <operator pos:start="151:19" pos:end="151:20">==</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>)</condition> <block pos:start="151:25" pos:end="155:13">{<block_content pos:start="153:17" pos:end="153:65">

                <expr_stmt pos:start="153:17" pos:end="153:65"><expr pos:start="153:17" pos:end="153:64"><name pos:start="153:17" pos:end="153:27">block_pitch</name> <operator pos:start="153:29" pos:end="153:29">=</operator> <call pos:start="153:31" pos:end="153:64"><name pos:start="153:31" pos:end="153:38">get_bits</name><argument_list pos:start="153:39" pos:end="153:64">(<argument pos:start="153:40" pos:end="153:41"><expr pos:start="153:40" pos:end="153:41"><name pos:start="153:40" pos:end="153:41">gb</name></expr></argument>, <argument pos:start="153:44" pos:end="153:63"><expr pos:start="153:44" pos:end="153:63"><name pos:start="153:44" pos:end="153:63"><name pos:start="153:44" pos:end="153:44">s</name><operator pos:start="153:45" pos:end="153:46">-&gt;</operator><name pos:start="153:47" pos:end="153:63">block_pitch_nbits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="155:15" pos:end="159:74">else<block type="pseudo" pos:start="157:17" pos:end="159:74"><block_content pos:start="157:17" pos:end="159:74">

                <expr_stmt pos:start="157:17" pos:end="159:74"><expr pos:start="157:17" pos:end="159:73"><name pos:start="157:17" pos:end="157:27">block_pitch</name> <operator pos:start="157:29" pos:end="157:29">=</operator> <name pos:start="157:31" pos:end="157:46">last_block_pitch</name> <operator pos:start="157:48" pos:end="157:48">-</operator> <name pos:start="157:50" pos:end="157:76"><name pos:start="157:50" pos:end="157:50">s</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:76">block_delta_pitch_hrange</name></name> <operator pos:start="157:78" pos:end="157:78">+</operator>

                                 <call pos:start="159:34" pos:end="159:73"><name pos:start="159:34" pos:end="159:41">get_bits</name><argument_list pos:start="159:42" pos:end="159:73">(<argument pos:start="159:43" pos:end="159:44"><expr pos:start="159:43" pos:end="159:44"><name pos:start="159:43" pos:end="159:44">gb</name></expr></argument>, <argument pos:start="159:47" pos:end="159:72"><expr pos:start="159:47" pos:end="159:72"><name pos:start="159:47" pos:end="159:72"><name pos:start="159:47" pos:end="159:47">s</name><operator pos:start="159:48" pos:end="159:49">-&gt;</operator><name pos:start="159:50" pos:end="159:72">block_delta_pitch_nbits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <comment type="block" pos:start="161:13" pos:end="161:71">/* Convert last_ so that any next delta is within _range */</comment>

            <expr_stmt pos:start="163:13" pos:end="169:72"><expr pos:start="163:13" pos:end="169:71"><name pos:start="163:13" pos:end="163:28">last_block_pitch</name> <operator pos:start="163:30" pos:end="163:30">=</operator> <call pos:start="163:32" pos:end="169:71"><name pos:start="163:32" pos:end="163:38">av_clip</name><argument_list pos:start="163:39" pos:end="169:71">(<argument pos:start="163:40" pos:end="163:50"><expr pos:start="163:40" pos:end="163:50"><name pos:start="163:40" pos:end="163:50">block_pitch</name></expr></argument>,

                                       <argument pos:start="165:40" pos:end="165:66"><expr pos:start="165:40" pos:end="165:66"><name pos:start="165:40" pos:end="165:66"><name pos:start="165:40" pos:end="165:40">s</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:66">block_delta_pitch_hrange</name></name></expr></argument>,

                                       <argument pos:start="167:40" pos:end="169:70"><expr pos:start="167:40" pos:end="169:70"><name pos:start="167:40" pos:end="167:59"><name pos:start="167:40" pos:end="167:40">s</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:59">block_pitch_range</name></name> <operator pos:start="167:61" pos:end="167:61">-</operator>

                                           <name pos:start="169:44" pos:end="169:70"><name pos:start="169:44" pos:end="169:44">s</name><operator pos:start="169:45" pos:end="169:46">-&gt;</operator><name pos:start="169:47" pos:end="169:70">block_delta_pitch_hrange</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="173:13" pos:end="173:67">/* Convert semi-log-style scale back to normal scale */</comment>

            <if_stmt pos:start="175:13" pos:end="205:13"><if pos:start="175:13" pos:end="179:13">if <condition pos:start="175:16" pos:end="175:33">(<expr pos:start="175:17" pos:end="175:32"><name pos:start="175:17" pos:end="175:27">block_pitch</name> <operator pos:start="175:29" pos:end="175:29">&lt;</operator> <name pos:start="175:31" pos:end="175:32">t1</name></expr>)</condition> <block pos:start="175:35" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:75">

                <expr_stmt pos:start="177:17" pos:end="177:75"><expr pos:start="177:17" pos:end="177:74"><name pos:start="177:17" pos:end="177:28">bl_pitch_sh2</name> <operator pos:start="177:30" pos:end="177:30">=</operator> <operator pos:start="177:32" pos:end="177:32">(</operator><name pos:start="177:33" pos:end="177:54"><name pos:start="177:33" pos:end="177:33">s</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:51">block_conv_table</name><index pos:start="177:52" pos:end="177:54">[<expr pos:start="177:53" pos:end="177:53"><literal type="number" pos:start="177:53" pos:end="177:53">0</literal></expr>]</index></name> <operator pos:start="177:56" pos:end="177:57">&lt;&lt;</operator> <literal type="number" pos:start="177:59" pos:end="177:59">2</literal><operator pos:start="177:60" pos:end="177:60">)</operator> <operator pos:start="177:62" pos:end="177:62">+</operator> <name pos:start="177:64" pos:end="177:74">block_pitch</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="179:15" pos:end="205:13">else <block pos:start="179:20" pos:end="205:13">{<block_content pos:start="181:17" pos:end="203:17">

                <expr_stmt pos:start="181:17" pos:end="181:34"><expr pos:start="181:17" pos:end="181:33"><name pos:start="181:17" pos:end="181:27">block_pitch</name> <operator pos:start="181:29" pos:end="181:30">-=</operator> <name pos:start="181:32" pos:end="181:33">t1</name></expr>;</expr_stmt>

                <if_stmt pos:start="183:17" pos:end="203:17"><if pos:start="183:17" pos:end="189:17">if <condition pos:start="183:20" pos:end="183:37">(<expr pos:start="183:21" pos:end="183:36"><name pos:start="183:21" pos:end="183:31">block_pitch</name> <operator pos:start="183:33" pos:end="183:33">&lt;</operator> <name pos:start="183:35" pos:end="183:36">t2</name></expr>)</condition> <block pos:start="183:39" pos:end="189:17">{<block_content pos:start="185:21" pos:end="187:75">

                    <expr_stmt pos:start="185:21" pos:end="187:75"><expr pos:start="185:21" pos:end="187:74"><name pos:start="185:21" pos:end="185:32">bl_pitch_sh2</name> <operator pos:start="185:34" pos:end="185:34">=</operator>

                        <operator pos:start="187:25" pos:end="187:25">(</operator><name pos:start="187:26" pos:end="187:47"><name pos:start="187:26" pos:end="187:26">s</name><operator pos:start="187:27" pos:end="187:28">-&gt;</operator><name pos:start="187:29" pos:end="187:44">block_conv_table</name><index pos:start="187:45" pos:end="187:47">[<expr pos:start="187:46" pos:end="187:46"><literal type="number" pos:start="187:46" pos:end="187:46">1</literal></expr>]</index></name> <operator pos:start="187:49" pos:end="187:50">&lt;&lt;</operator> <literal type="number" pos:start="187:52" pos:end="187:52">2</literal><operator pos:start="187:53" pos:end="187:53">)</operator> <operator pos:start="187:55" pos:end="187:55">+</operator> <operator pos:start="187:57" pos:end="187:57">(</operator><name pos:start="187:58" pos:end="187:68">block_pitch</name> <operator pos:start="187:70" pos:end="187:71">&lt;&lt;</operator> <literal type="number" pos:start="187:73" pos:end="187:73">1</literal><operator pos:start="187:74" pos:end="187:74">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="189:19" pos:end="203:17">else <block pos:start="189:24" pos:end="203:17">{<block_content pos:start="191:21" pos:end="201:67">

                    <expr_stmt pos:start="191:21" pos:end="191:38"><expr pos:start="191:21" pos:end="191:37"><name pos:start="191:21" pos:end="191:31">block_pitch</name> <operator pos:start="191:33" pos:end="191:34">-=</operator> <name pos:start="191:36" pos:end="191:37">t2</name></expr>;</expr_stmt>

                    <if_stmt pos:start="193:21" pos:end="201:67"><if pos:start="193:21" pos:end="199:21">if <condition pos:start="193:24" pos:end="193:41">(<expr pos:start="193:25" pos:end="193:40"><name pos:start="193:25" pos:end="193:35">block_pitch</name> <operator pos:start="193:37" pos:end="193:37">&lt;</operator> <name pos:start="193:39" pos:end="193:40">t3</name></expr>)</condition> <block pos:start="193:43" pos:end="199:21">{<block_content pos:start="195:25" pos:end="197:72">

                        <expr_stmt pos:start="195:25" pos:end="197:72"><expr pos:start="195:25" pos:end="197:71"><name pos:start="195:25" pos:end="195:36">bl_pitch_sh2</name> <operator pos:start="195:38" pos:end="195:38">=</operator>

                            <operator pos:start="197:29" pos:end="197:29">(</operator><name pos:start="197:30" pos:end="197:51"><name pos:start="197:30" pos:end="197:30">s</name><operator pos:start="197:31" pos:end="197:32">-&gt;</operator><name pos:start="197:33" pos:end="197:48">block_conv_table</name><index pos:start="197:49" pos:end="197:51">[<expr pos:start="197:50" pos:end="197:50"><literal type="number" pos:start="197:50" pos:end="197:50">2</literal></expr>]</index></name> <operator pos:start="197:53" pos:end="197:53">+</operator> <name pos:start="197:55" pos:end="197:65">block_pitch</name><operator pos:start="197:66" pos:end="197:66">)</operator> <operator pos:start="197:68" pos:end="197:69">&lt;&lt;</operator> <literal type="number" pos:start="197:71" pos:end="197:71">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="199:23" pos:end="201:67">else<block type="pseudo" pos:start="201:25" pos:end="201:67"><block_content pos:start="201:25" pos:end="201:67">

                        <expr_stmt pos:start="201:25" pos:end="201:67"><expr pos:start="201:25" pos:end="201:66"><name pos:start="201:25" pos:end="201:36">bl_pitch_sh2</name> <operator pos:start="201:38" pos:end="201:38">=</operator> <name pos:start="201:40" pos:end="201:61"><name pos:start="201:40" pos:end="201:40">s</name><operator pos:start="201:41" pos:end="201:42">-&gt;</operator><name pos:start="201:43" pos:end="201:58">block_conv_table</name><index pos:start="201:59" pos:end="201:61">[<expr pos:start="201:60" pos:end="201:60"><literal type="number" pos:start="201:60" pos:end="201:60">3</literal></expr>]</index></name> <operator pos:start="201:63" pos:end="201:64">&lt;&lt;</operator> <literal type="number" pos:start="201:66" pos:end="201:66">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:41"><expr pos:start="207:13" pos:end="207:40"><name pos:start="207:13" pos:end="207:20"><name pos:start="207:13" pos:end="207:17">pitch</name><index pos:start="207:18" pos:end="207:20">[<expr pos:start="207:19" pos:end="207:19"><name pos:start="207:19" pos:end="207:19">n</name></expr>]</index></name> <operator pos:start="207:22" pos:end="207:22">=</operator> <name pos:start="207:24" pos:end="207:35">bl_pitch_sh2</name> <operator pos:start="207:37" pos:end="207:38">&gt;&gt;</operator> <literal type="number" pos:start="207:40" pos:end="207:40">2</literal></expr>;</expr_stmt>

            <break pos:start="209:13" pos:end="209:18">break;</break>

        </block_content>}</block>



        <case pos:start="215:9" pos:end="215:33">case <expr pos:start="215:14" pos:end="215:32"><name pos:start="215:14" pos:end="215:32">ACB_TYPE_ASYMMETRIC</name></expr>:</case> <block pos:start="215:35" pos:end="221:9">{<block_content pos:start="217:13" pos:end="219:18">

            <expr_stmt pos:start="217:13" pos:end="217:41"><expr pos:start="217:13" pos:end="217:40"><name pos:start="217:13" pos:end="217:24">bl_pitch_sh2</name> <operator pos:start="217:26" pos:end="217:26">=</operator> <name pos:start="217:28" pos:end="217:35"><name pos:start="217:28" pos:end="217:32">pitch</name><index pos:start="217:33" pos:end="217:35">[<expr pos:start="217:34" pos:end="217:34"><name pos:start="217:34" pos:end="217:34">n</name></expr>]</index></name> <operator pos:start="217:37" pos:end="217:38">&lt;&lt;</operator> <literal type="number" pos:start="217:40" pos:end="217:40">2</literal></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        </block_content>}</block>



        <default pos:start="225:9" pos:end="225:16">default:</default> <comment type="line" pos:start="225:18" pos:end="225:46">// ACB_TYPE_NONE has no pitch</comment>

            <expr_stmt pos:start="227:13" pos:end="227:29"><expr pos:start="227:13" pos:end="227:28"><name pos:start="227:13" pos:end="227:24">bl_pitch_sh2</name> <operator pos:start="227:26" pos:end="227:26">=</operator> <literal type="number" pos:start="227:28" pos:end="227:28">0</literal></expr>;</expr_stmt>

            <break pos:start="229:13" pos:end="229:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="235:9" pos:end="241:48"><expr pos:start="235:9" pos:end="241:47"><call pos:start="235:9" pos:end="241:47"><name pos:start="235:9" pos:end="235:19">synth_block</name><argument_list pos:start="235:20" pos:end="241:47">(<argument pos:start="235:21" pos:end="235:21"><expr pos:start="235:21" pos:end="235:21"><name pos:start="235:21" pos:end="235:21">s</name></expr></argument>, <argument pos:start="235:24" pos:end="235:25"><expr pos:start="235:24" pos:end="235:25"><name pos:start="235:24" pos:end="235:25">gb</name></expr></argument>, <argument pos:start="235:28" pos:end="235:28"><expr pos:start="235:28" pos:end="235:28"><name pos:start="235:28" pos:end="235:28">n</name></expr></argument>, <argument pos:start="235:31" pos:end="235:44"><expr pos:start="235:31" pos:end="235:44"><name pos:start="235:31" pos:end="235:44">block_nsamples</name></expr></argument>, <argument pos:start="235:47" pos:end="235:58"><expr pos:start="235:47" pos:end="235:58"><name pos:start="235:47" pos:end="235:58">bl_pitch_sh2</name></expr></argument>,

                    <argument pos:start="237:21" pos:end="237:24"><expr pos:start="237:21" pos:end="237:24"><name pos:start="237:21" pos:end="237:24">lsps</name></expr></argument>, <argument pos:start="237:27" pos:end="237:35"><expr pos:start="237:27" pos:end="237:35"><name pos:start="237:27" pos:end="237:35">prev_lsps</name></expr></argument>, <argument pos:start="237:38" pos:end="237:57"><expr pos:start="237:38" pos:end="237:57"><operator pos:start="237:38" pos:end="237:38">&amp;</operator><name pos:start="237:39" pos:end="237:57"><name pos:start="237:39" pos:end="237:49">frame_descs</name><index pos:start="237:50" pos:end="237:57">[<expr pos:start="237:51" pos:end="237:56"><name pos:start="237:51" pos:end="237:56">bd_idx</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="239:21" pos:end="239:51"><expr pos:start="239:21" pos:end="239:51"><operator pos:start="239:21" pos:end="239:21">&amp;</operator><name pos:start="239:22" pos:end="239:51"><name pos:start="239:22" pos:end="239:31">excitation</name><index pos:start="239:32" pos:end="239:51">[<expr pos:start="239:33" pos:end="239:50"><name pos:start="239:33" pos:end="239:33">n</name> <operator pos:start="239:35" pos:end="239:35">*</operator> <name pos:start="239:37" pos:end="239:50">block_nsamples</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="241:21" pos:end="241:46"><expr pos:start="241:21" pos:end="241:46"><operator pos:start="241:21" pos:end="241:21">&amp;</operator><name pos:start="241:22" pos:end="241:46"><name pos:start="241:22" pos:end="241:26">synth</name><index pos:start="241:27" pos:end="241:46">[<expr pos:start="241:28" pos:end="241:45"><name pos:start="241:28" pos:end="241:28">n</name> <operator pos:start="241:30" pos:end="241:30">*</operator> <name pos:start="241:32" pos:end="241:45">block_nsamples</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="247:5" pos:end="249:31">/* Averaging projection filter, if applicable. Else, just copy samples

     * from synthesis buffer */</comment>

    <if_stmt pos:start="251:5" pos:end="287:55"><if pos:start="251:5" pos:end="285:5">if <condition pos:start="251:8" pos:end="251:18">(<expr pos:start="251:9" pos:end="251:17"><name pos:start="251:9" pos:end="251:17"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:17">do_apf</name></name></expr>)</condition> <block pos:start="251:20" pos:end="285:5">{<block_content pos:start="253:9" pos:end="283:59">

        <decl_stmt pos:start="253:9" pos:end="253:32"><decl pos:start="253:9" pos:end="253:31"><type pos:start="253:9" pos:end="253:14"><name pos:start="253:9" pos:end="253:14">double</name></type> <name pos:start="253:16" pos:end="253:31"><name pos:start="253:16" pos:end="253:21">i_lsps</name><index pos:start="253:22" pos:end="253:31">[<expr pos:start="253:23" pos:end="253:30"><name pos:start="253:23" pos:end="253:30">MAX_LSPS</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="255:9" pos:end="255:29"><decl pos:start="255:9" pos:end="255:28"><type pos:start="255:9" pos:end="255:13"><name pos:start="255:9" pos:end="255:13">float</name></type> <name pos:start="255:15" pos:end="255:28"><name pos:start="255:15" pos:end="255:18">lpcs</name><index pos:start="255:19" pos:end="255:28">[<expr pos:start="255:20" pos:end="255:27"><name pos:start="255:20" pos:end="255:27">MAX_LSPS</name></expr>]</index></name></decl>;</decl_stmt>



        <for pos:start="259:9" pos:end="261:60">for <control pos:start="259:13" pos:end="259:37">(<init pos:start="259:14" pos:end="259:19"><expr pos:start="259:14" pos:end="259:18"><name pos:start="259:14" pos:end="259:14">n</name> <operator pos:start="259:16" pos:end="259:16">=</operator> <literal type="number" pos:start="259:18" pos:end="259:18">0</literal></expr>;</init> <condition pos:start="259:21" pos:end="259:32"><expr pos:start="259:21" pos:end="259:31"><name pos:start="259:21" pos:end="259:21">n</name> <operator pos:start="259:23" pos:end="259:23">&lt;</operator> <name pos:start="259:25" pos:end="259:31"><name pos:start="259:25" pos:end="259:25">s</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:31">lsps</name></name></expr>;</condition> <incr pos:start="259:34" pos:end="259:36"><expr pos:start="259:34" pos:end="259:36"><name pos:start="259:34" pos:end="259:34">n</name><operator pos:start="259:35" pos:end="259:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="261:13" pos:end="261:60"><block_content pos:start="261:13" pos:end="261:60"> <comment type="line" pos:start="259:39" pos:end="259:51">// LSF -&gt; LSP</comment>

            <expr_stmt pos:start="261:13" pos:end="261:60"><expr pos:start="261:13" pos:end="261:59"><name pos:start="261:13" pos:end="261:21"><name pos:start="261:13" pos:end="261:18">i_lsps</name><index pos:start="261:19" pos:end="261:21">[<expr pos:start="261:20" pos:end="261:20"><name pos:start="261:20" pos:end="261:20">n</name></expr>]</index></name> <operator pos:start="261:23" pos:end="261:23">=</operator> <call pos:start="261:25" pos:end="261:59"><name pos:start="261:25" pos:end="261:27">cos</name><argument_list pos:start="261:28" pos:end="261:59">(<argument pos:start="261:29" pos:end="261:58"><expr pos:start="261:29" pos:end="261:58"><literal type="number" pos:start="261:29" pos:end="261:31">0.5</literal> <operator pos:start="261:33" pos:end="261:33">*</operator> <operator pos:start="261:35" pos:end="261:35">(</operator><name pos:start="261:36" pos:end="261:47"><name pos:start="261:36" pos:end="261:44">prev_lsps</name><index pos:start="261:45" pos:end="261:47">[<expr pos:start="261:46" pos:end="261:46"><name pos:start="261:46" pos:end="261:46">n</name></expr>]</index></name> <operator pos:start="261:49" pos:end="261:49">+</operator> <name pos:start="261:51" pos:end="261:57"><name pos:start="261:51" pos:end="261:54">lsps</name><index pos:start="261:55" pos:end="261:57">[<expr pos:start="261:56" pos:end="261:56"><name pos:start="261:56" pos:end="261:56">n</name></expr>]</index></name><operator pos:start="261:58" pos:end="261:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="263:9" pos:end="263:54"><expr pos:start="263:9" pos:end="263:53"><call pos:start="263:9" pos:end="263:53"><name pos:start="263:9" pos:end="263:25">ff_acelp_lspd2lpc</name><argument_list pos:start="263:26" pos:end="263:53">(<argument pos:start="263:27" pos:end="263:32"><expr pos:start="263:27" pos:end="263:32"><name pos:start="263:27" pos:end="263:32">i_lsps</name></expr></argument>, <argument pos:start="263:35" pos:end="263:38"><expr pos:start="263:35" pos:end="263:38"><name pos:start="263:35" pos:end="263:38">lpcs</name></expr></argument>, <argument pos:start="263:41" pos:end="263:52"><expr pos:start="263:41" pos:end="263:52"><name pos:start="263:41" pos:end="263:47"><name pos:start="263:41" pos:end="263:41">s</name><operator pos:start="263:42" pos:end="263:43">-&gt;</operator><name pos:start="263:44" pos:end="263:47">lsps</name></name> <operator pos:start="263:49" pos:end="263:50">&gt;&gt;</operator> <literal type="number" pos:start="263:52" pos:end="263:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="269:59"><expr pos:start="265:9" pos:end="269:58"><call pos:start="265:9" pos:end="269:58"><name pos:start="265:9" pos:end="265:18">postfilter</name><argument_list pos:start="265:19" pos:end="269:58">(<argument pos:start="265:20" pos:end="265:20"><expr pos:start="265:20" pos:end="265:20"><name pos:start="265:20" pos:end="265:20">s</name></expr></argument>, <argument pos:start="265:23" pos:end="265:27"><expr pos:start="265:23" pos:end="265:27"><name pos:start="265:23" pos:end="265:27">synth</name></expr></argument>, <argument pos:start="265:30" pos:end="265:36"><expr pos:start="265:30" pos:end="265:36"><name pos:start="265:30" pos:end="265:36">samples</name></expr></argument>, <argument pos:start="265:39" pos:end="265:40"><expr pos:start="265:39" pos:end="265:40"><literal type="number" pos:start="265:39" pos:end="265:40">80</literal></expr></argument>, <argument pos:start="265:43" pos:end="265:46"><expr pos:start="265:43" pos:end="265:46"><name pos:start="265:43" pos:end="265:46">lpcs</name></expr></argument>,

                   <argument pos:start="267:20" pos:end="267:83"><expr pos:start="267:20" pos:end="267:83"><operator pos:start="267:20" pos:end="267:20">&amp;</operator><name pos:start="267:21" pos:end="267:83"><name pos:start="267:21" pos:end="267:21">s</name><operator pos:start="267:22" pos:end="267:23">-&gt;</operator><name pos:start="267:24" pos:end="267:34">zero_exc_pf</name><index pos:start="267:35" pos:end="267:83">[<expr pos:start="267:36" pos:end="267:82"><name pos:start="267:36" pos:end="267:54"><name pos:start="267:36" pos:end="267:36">s</name><operator pos:start="267:37" pos:end="267:38">-&gt;</operator><name pos:start="267:39" pos:end="267:54">history_nsamples</name></name> <operator pos:start="267:56" pos:end="267:56">+</operator> <name pos:start="267:58" pos:end="267:70">MAX_FRAMESIZE</name> <operator pos:start="267:72" pos:end="267:72">*</operator> <name pos:start="267:74" pos:end="267:82">frame_idx</name></expr>]</index></name></expr></argument>,

                   <argument pos:start="269:20" pos:end="269:47"><expr pos:start="269:20" pos:end="269:47"><name pos:start="269:20" pos:end="269:38"><name pos:start="269:20" pos:end="269:30">frame_descs</name><index pos:start="269:31" pos:end="269:38">[<expr pos:start="269:32" pos:end="269:37"><name pos:start="269:32" pos:end="269:37">bd_idx</name></expr>]</index></name><operator pos:start="269:39" pos:end="269:39">.</operator><name pos:start="269:40" pos:end="269:47">fcb_type</name></expr></argument>, <argument pos:start="269:50" pos:end="269:57"><expr pos:start="269:50" pos:end="269:57"><name pos:start="269:50" pos:end="269:57"><name pos:start="269:50" pos:end="269:54">pitch</name><index pos:start="269:55" pos:end="269:57">[<expr pos:start="269:56" pos:end="269:56"><literal type="number" pos:start="269:56" pos:end="269:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="273:9" pos:end="275:37">for <control pos:start="273:13" pos:end="273:37">(<init pos:start="273:14" pos:end="273:19"><expr pos:start="273:14" pos:end="273:18"><name pos:start="273:14" pos:end="273:14">n</name> <operator pos:start="273:16" pos:end="273:16">=</operator> <literal type="number" pos:start="273:18" pos:end="273:18">0</literal></expr>;</init> <condition pos:start="273:21" pos:end="273:32"><expr pos:start="273:21" pos:end="273:31"><name pos:start="273:21" pos:end="273:21">n</name> <operator pos:start="273:23" pos:end="273:23">&lt;</operator> <name pos:start="273:25" pos:end="273:31"><name pos:start="273:25" pos:end="273:25">s</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:31">lsps</name></name></expr>;</condition> <incr pos:start="273:34" pos:end="273:36"><expr pos:start="273:34" pos:end="273:36"><name pos:start="273:34" pos:end="273:34">n</name><operator pos:start="273:35" pos:end="273:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="275:13" pos:end="275:37"><block_content pos:start="275:13" pos:end="275:37"> <comment type="line" pos:start="273:39" pos:end="273:51">// LSF -&gt; LSP</comment>

            <expr_stmt pos:start="275:13" pos:end="275:37"><expr pos:start="275:13" pos:end="275:36"><name pos:start="275:13" pos:end="275:21"><name pos:start="275:13" pos:end="275:18">i_lsps</name><index pos:start="275:19" pos:end="275:21">[<expr pos:start="275:20" pos:end="275:20"><name pos:start="275:20" pos:end="275:20">n</name></expr>]</index></name> <operator pos:start="275:23" pos:end="275:23">=</operator> <call pos:start="275:25" pos:end="275:36"><name pos:start="275:25" pos:end="275:27">cos</name><argument_list pos:start="275:28" pos:end="275:36">(<argument pos:start="275:29" pos:end="275:35"><expr pos:start="275:29" pos:end="275:35"><name pos:start="275:29" pos:end="275:35"><name pos:start="275:29" pos:end="275:32">lsps</name><index pos:start="275:33" pos:end="275:35">[<expr pos:start="275:34" pos:end="275:34"><name pos:start="275:34" pos:end="275:34">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="277:9" pos:end="277:54"><expr pos:start="277:9" pos:end="277:53"><call pos:start="277:9" pos:end="277:53"><name pos:start="277:9" pos:end="277:25">ff_acelp_lspd2lpc</name><argument_list pos:start="277:26" pos:end="277:53">(<argument pos:start="277:27" pos:end="277:32"><expr pos:start="277:27" pos:end="277:32"><name pos:start="277:27" pos:end="277:32">i_lsps</name></expr></argument>, <argument pos:start="277:35" pos:end="277:38"><expr pos:start="277:35" pos:end="277:38"><name pos:start="277:35" pos:end="277:38">lpcs</name></expr></argument>, <argument pos:start="277:41" pos:end="277:52"><expr pos:start="277:41" pos:end="277:52"><name pos:start="277:41" pos:end="277:47"><name pos:start="277:41" pos:end="277:41">s</name><operator pos:start="277:42" pos:end="277:43">-&gt;</operator><name pos:start="277:44" pos:end="277:47">lsps</name></name> <operator pos:start="277:49" pos:end="277:50">&gt;&gt;</operator> <literal type="number" pos:start="277:52" pos:end="277:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="283:59"><expr pos:start="279:9" pos:end="283:58"><call pos:start="279:9" pos:end="283:58"><name pos:start="279:9" pos:end="279:18">postfilter</name><argument_list pos:start="279:19" pos:end="283:58">(<argument pos:start="279:20" pos:end="279:20"><expr pos:start="279:20" pos:end="279:20"><name pos:start="279:20" pos:end="279:20">s</name></expr></argument>, <argument pos:start="279:23" pos:end="279:32"><expr pos:start="279:23" pos:end="279:32"><operator pos:start="279:23" pos:end="279:23">&amp;</operator><name pos:start="279:24" pos:end="279:32"><name pos:start="279:24" pos:end="279:28">synth</name><index pos:start="279:29" pos:end="279:32">[<expr pos:start="279:30" pos:end="279:31"><literal type="number" pos:start="279:30" pos:end="279:31">80</literal></expr>]</index></name></expr></argument>, <argument pos:start="279:35" pos:end="279:46"><expr pos:start="279:35" pos:end="279:46"><operator pos:start="279:35" pos:end="279:35">&amp;</operator><name pos:start="279:36" pos:end="279:46"><name pos:start="279:36" pos:end="279:42">samples</name><index pos:start="279:43" pos:end="279:46">[<expr pos:start="279:44" pos:end="279:45"><literal type="number" pos:start="279:44" pos:end="279:45">80</literal></expr>]</index></name></expr></argument>, <argument pos:start="279:49" pos:end="279:50"><expr pos:start="279:49" pos:end="279:50"><literal type="number" pos:start="279:49" pos:end="279:50">80</literal></expr></argument>, <argument pos:start="279:53" pos:end="279:56"><expr pos:start="279:53" pos:end="279:56"><name pos:start="279:53" pos:end="279:56">lpcs</name></expr></argument>,

                   <argument pos:start="281:20" pos:end="281:88"><expr pos:start="281:20" pos:end="281:88"><operator pos:start="281:20" pos:end="281:20">&amp;</operator><name pos:start="281:21" pos:end="281:88"><name pos:start="281:21" pos:end="281:21">s</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:34">zero_exc_pf</name><index pos:start="281:35" pos:end="281:88">[<expr pos:start="281:36" pos:end="281:87"><name pos:start="281:36" pos:end="281:54"><name pos:start="281:36" pos:end="281:36">s</name><operator pos:start="281:37" pos:end="281:38">-&gt;</operator><name pos:start="281:39" pos:end="281:54">history_nsamples</name></name> <operator pos:start="281:56" pos:end="281:56">+</operator> <name pos:start="281:58" pos:end="281:70">MAX_FRAMESIZE</name> <operator pos:start="281:72" pos:end="281:72">*</operator> <name pos:start="281:74" pos:end="281:82">frame_idx</name> <operator pos:start="281:84" pos:end="281:84">+</operator> <literal type="number" pos:start="281:86" pos:end="281:87">80</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="283:20" pos:end="283:47"><expr pos:start="283:20" pos:end="283:47"><name pos:start="283:20" pos:end="283:38"><name pos:start="283:20" pos:end="283:30">frame_descs</name><index pos:start="283:31" pos:end="283:38">[<expr pos:start="283:32" pos:end="283:37"><name pos:start="283:32" pos:end="283:37">bd_idx</name></expr>]</index></name><operator pos:start="283:39" pos:end="283:39">.</operator><name pos:start="283:40" pos:end="283:47">fcb_type</name></expr></argument>, <argument pos:start="283:50" pos:end="283:57"><expr pos:start="283:50" pos:end="283:57"><name pos:start="283:50" pos:end="283:57"><name pos:start="283:50" pos:end="283:54">pitch</name><index pos:start="283:55" pos:end="283:57">[<expr pos:start="283:56" pos:end="283:56"><literal type="number" pos:start="283:56" pos:end="283:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="285:7" pos:end="287:55">else<block type="pseudo" pos:start="287:9" pos:end="287:55"><block_content pos:start="287:9" pos:end="287:55">

        <expr_stmt pos:start="287:9" pos:end="287:55"><expr pos:start="287:9" pos:end="287:54"><call pos:start="287:9" pos:end="287:54"><name pos:start="287:9" pos:end="287:14">memcpy</name><argument_list pos:start="287:15" pos:end="287:54">(<argument pos:start="287:16" pos:end="287:22"><expr pos:start="287:16" pos:end="287:22"><name pos:start="287:16" pos:end="287:22">samples</name></expr></argument>, <argument pos:start="287:25" pos:end="287:29"><expr pos:start="287:25" pos:end="287:29"><name pos:start="287:25" pos:end="287:29">synth</name></expr></argument>, <argument pos:start="287:32" pos:end="287:53"><expr pos:start="287:32" pos:end="287:53"><literal type="number" pos:start="287:32" pos:end="287:34">160</literal> <operator pos:start="287:36" pos:end="287:36">*</operator> <sizeof pos:start="287:38" pos:end="287:53">sizeof<argument_list pos:start="287:44" pos:end="287:53">(<argument pos:start="287:45" pos:end="287:52"><expr pos:start="287:45" pos:end="287:52"><name pos:start="287:45" pos:end="287:52"><name pos:start="287:45" pos:end="287:49">synth</name><index pos:start="287:50" pos:end="287:52">[<expr pos:start="287:51" pos:end="287:51"><literal type="number" pos:start="287:51" pos:end="287:51">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="291:5" pos:end="291:37">/* Cache values for next frame */</comment>

    <expr_stmt pos:start="293:5" pos:end="293:20"><expr pos:start="293:5" pos:end="293:19"><name pos:start="293:5" pos:end="293:17"><name pos:start="293:5" pos:end="293:5">s</name><operator pos:start="293:6" pos:end="293:7">-&gt;</operator><name pos:start="293:8" pos:end="293:17">frame_cntr</name></name><operator pos:start="293:18" pos:end="293:19">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="295:5" pos:end="295:57"><if pos:start="295:5" pos:end="295:57">if <condition pos:start="295:8" pos:end="295:32">(<expr pos:start="295:9" pos:end="295:31"><name pos:start="295:9" pos:end="295:21"><name pos:start="295:9" pos:end="295:9">s</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:21">frame_cntr</name></name> <operator pos:start="295:23" pos:end="295:24">&gt;=</operator> <literal type="number" pos:start="295:26" pos:end="295:31">0xFFFF</literal></expr>)</condition><block type="pseudo" pos:start="295:34" pos:end="295:57"><block_content pos:start="295:34" pos:end="295:57"> <expr_stmt pos:start="295:34" pos:end="295:57"><expr pos:start="295:34" pos:end="295:56"><name pos:start="295:34" pos:end="295:46"><name pos:start="295:34" pos:end="295:34">s</name><operator pos:start="295:35" pos:end="295:36">-&gt;</operator><name pos:start="295:37" pos:end="295:46">frame_cntr</name></name> <operator pos:start="295:48" pos:end="295:49">-=</operator> <literal type="number" pos:start="295:51" pos:end="295:56">0xFFFF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="295:59" pos:end="295:76">// i.e. modulo (%)</comment>

    <expr_stmt pos:start="297:5" pos:end="297:52"><expr pos:start="297:5" pos:end="297:51"><name pos:start="297:5" pos:end="297:20"><name pos:start="297:5" pos:end="297:5">s</name><operator pos:start="297:6" pos:end="297:7">-&gt;</operator><name pos:start="297:8" pos:end="297:20">last_acb_type</name></name> <operator pos:start="297:22" pos:end="297:22">=</operator> <name pos:start="297:24" pos:end="297:42"><name pos:start="297:24" pos:end="297:34">frame_descs</name><index pos:start="297:35" pos:end="297:42">[<expr pos:start="297:36" pos:end="297:41"><name pos:start="297:36" pos:end="297:41">bd_idx</name></expr>]</index></name><operator pos:start="297:43" pos:end="297:43">.</operator><name pos:start="297:44" pos:end="297:51">acb_type</name></expr>;</expr_stmt>

    <switch pos:start="299:5" pos:end="319:5">switch <condition pos:start="299:12" pos:end="299:41">(<expr pos:start="299:13" pos:end="299:40"><name pos:start="299:13" pos:end="299:31"><name pos:start="299:13" pos:end="299:23">frame_descs</name><index pos:start="299:24" pos:end="299:31">[<expr pos:start="299:25" pos:end="299:30"><name pos:start="299:25" pos:end="299:30">bd_idx</name></expr>]</index></name><operator pos:start="299:32" pos:end="299:32">.</operator><name pos:start="299:33" pos:end="299:40">acb_type</name></expr>)</condition> <block pos:start="299:43" pos:end="319:5">{<block_content pos:start="301:5" pos:end="317:14">

    <case pos:start="301:5" pos:end="301:23">case <expr pos:start="301:10" pos:end="301:22"><name pos:start="301:10" pos:end="301:22">ACB_TYPE_NONE</name></expr>:</case>

        <expr_stmt pos:start="303:9" pos:end="303:30"><expr pos:start="303:9" pos:end="303:29"><name pos:start="303:9" pos:end="303:25"><name pos:start="303:9" pos:end="303:9">s</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:25">last_pitch_val</name></name> <operator pos:start="303:27" pos:end="303:27">=</operator> <literal type="number" pos:start="303:29" pos:end="303:29">0</literal></expr>;</expr_stmt>

        <break pos:start="305:9" pos:end="305:14">break;</break>

    <case pos:start="307:5" pos:end="307:29">case <expr pos:start="307:10" pos:end="307:28"><name pos:start="307:10" pos:end="307:28">ACB_TYPE_ASYMMETRIC</name></expr>:</case>

        <expr_stmt pos:start="309:9" pos:end="309:42"><expr pos:start="309:9" pos:end="309:41"><name pos:start="309:9" pos:end="309:25"><name pos:start="309:9" pos:end="309:9">s</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:25">last_pitch_val</name></name> <operator pos:start="309:27" pos:end="309:27">=</operator> <name pos:start="309:29" pos:end="309:41">cur_pitch_val</name></expr>;</expr_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <case pos:start="313:5" pos:end="313:26">case <expr pos:start="313:10" pos:end="313:25"><name pos:start="313:10" pos:end="313:25">ACB_TYPE_HAMMING</name></expr>:</case>

        <expr_stmt pos:start="315:9" pos:end="315:68"><expr pos:start="315:9" pos:end="315:67"><name pos:start="315:9" pos:end="315:25"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:25">last_pitch_val</name></name> <operator pos:start="315:27" pos:end="315:27">=</operator> <name pos:start="315:29" pos:end="315:67"><name pos:start="315:29" pos:end="315:33">pitch</name><index pos:start="315:34" pos:end="315:67">[<expr pos:start="315:35" pos:end="315:66"><name pos:start="315:35" pos:end="315:53"><name pos:start="315:35" pos:end="315:45">frame_descs</name><index pos:start="315:46" pos:end="315:53">[<expr pos:start="315:47" pos:end="315:52"><name pos:start="315:47" pos:end="315:52">bd_idx</name></expr>]</index></name><operator pos:start="315:54" pos:end="315:54">.</operator><name pos:start="315:55" pos:end="315:62">n_blocks</name> <operator pos:start="315:64" pos:end="315:64">-</operator> <literal type="number" pos:start="315:66" pos:end="315:66">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="317:9" pos:end="317:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="323:5" pos:end="323:13">return <expr pos:start="323:12" pos:end="323:12"><literal type="number" pos:start="323:12" pos:end="323:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
