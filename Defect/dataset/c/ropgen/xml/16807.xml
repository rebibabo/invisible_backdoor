<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16807.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">a52_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="175:1">{<block_content pos:start="9:5" pos:end="173:25">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AC3DecodeState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">flags</name></decl>, <decl pos:start="13:16" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:16">i</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">sample_rate</name></decl>, <decl pos:start="15:22" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:22" pos:end="15:29">bit_rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">short</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:22">out_samples</name> <init pos:start="17:24" pos:end="17:29">= <expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">float</name></type> <name pos:start="19:11" pos:end="19:15">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="25:6"><decl pos:start="21:5" pos:end="25:5"><type pos:start="21:5" pos:end="21:20"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <specifier pos:start="21:12" pos:end="21:16">const</specifier> <name pos:start="21:18" pos:end="21:20">int</name></type> <name pos:start="21:22" pos:end="21:36"><name pos:start="21:22" pos:end="21:33">ac3_channels</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">8</literal></expr>]</index></name> <init pos:start="21:38" pos:end="25:5">= <expr pos:start="21:40" pos:end="25:5"><block pos:start="21:40" pos:end="25:5">{

        <expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">2</literal></expr>, <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">1</literal></expr>, <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">2</literal></expr>, <expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">3</literal></expr>, <expr pos:start="23:21" pos:end="23:21"><literal type="number" pos:start="23:21" pos:end="23:21">3</literal></expr>, <expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">4</literal></expr>, <expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">4</literal></expr>, <expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">5</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:14">data_size</name><operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:11">buf_ptr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:17">buf</name></expr>;</expr_stmt>

    <while pos:start="35:5" pos:end="171:5">while <condition pos:start="35:11" pos:end="35:24">(<expr pos:start="35:12" pos:end="35:23"><name pos:start="35:12" pos:end="35:19">buf_size</name> <operator pos:start="35:21" pos:end="35:21">&gt;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition> <block pos:start="35:26" pos:end="171:5">{<block_content pos:start="37:9" pos:end="169:9">

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:26"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:26">inbuf_ptr</name></name> <operator pos:start="37:28" pos:end="37:28">-</operator> <name pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:37">inbuf</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="169:9"><if pos:start="39:9" pos:end="101:9">if <condition pos:start="39:12" pos:end="39:31">(<expr pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:25">frame_size</name></name> <operator pos:start="39:27" pos:end="39:28">==</operator> <literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr>)</condition> <block pos:start="39:33" pos:end="101:9">{<block_content pos:start="43:13" pos:end="99:13">

            <comment type="block" pos:start="41:13" pos:end="41:81">/* no header seen : find one. We need at least 7 bytes to parse it */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:36"><expr pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:15">len</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:29">HEADER_SIZE</name> <operator pos:start="43:31" pos:end="43:31">-</operator> <name pos:start="43:33" pos:end="43:35">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:31"><if pos:start="45:13" pos:end="47:31">if <condition pos:start="45:16" pos:end="45:31">(<expr pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:19">len</name> <operator pos:start="45:21" pos:end="45:21">&gt;</operator> <name pos:start="45:23" pos:end="45:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:31"><block_content pos:start="47:17" pos:end="47:31">

                <expr_stmt pos:start="47:17" pos:end="47:31"><expr pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">len</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:47"><expr pos:start="49:13" pos:end="49:46"><call pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:18">memcpy</name><argument_list pos:start="49:19" pos:end="49:46">(<argument pos:start="49:20" pos:end="49:31"><expr pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:31">inbuf_ptr</name></name></expr></argument>, <argument pos:start="49:34" pos:end="49:40"><expr pos:start="49:34" pos:end="49:40"><name pos:start="49:34" pos:end="49:40">buf_ptr</name></expr></argument>, <argument pos:start="49:43" pos:end="49:45"><expr pos:start="49:43" pos:end="49:45"><name pos:start="49:43" pos:end="49:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:27"><expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:19">buf_ptr</name> <operator pos:start="51:21" pos:end="51:22">+=</operator> <name pos:start="51:24" pos:end="51:26">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">inbuf_ptr</name></name> <operator pos:start="53:26" pos:end="53:27">+=</operator> <name pos:start="53:29" pos:end="53:31">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:20">buf_size</name> <operator pos:start="55:22" pos:end="55:23">-=</operator> <name pos:start="55:25" pos:end="55:27">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="99:13"><if pos:start="57:13" pos:end="99:13">if <condition pos:start="57:16" pos:end="57:57">(<expr pos:start="57:17" pos:end="57:56"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:29"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:29">inbuf_ptr</name></name> <operator pos:start="57:31" pos:end="57:31">-</operator> <name pos:start="57:33" pos:end="57:40"><name pos:start="57:33" pos:end="57:33">s</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:40">inbuf</name></name><operator pos:start="57:41" pos:end="57:41">)</operator> <operator pos:start="57:43" pos:end="57:44">==</operator> <name pos:start="57:46" pos:end="57:56">HEADER_SIZE</name></expr>)</condition> <block pos:start="57:59" pos:end="99:13">{<block_content pos:start="59:17" pos:end="97:17">

                <expr_stmt pos:start="59:17" pos:end="59:84"><expr pos:start="59:17" pos:end="59:83"><name pos:start="59:17" pos:end="59:19">len</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:83"><name pos:start="59:23" pos:end="59:37"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:37">a52_syncinfo</name></name><argument_list pos:start="59:38" pos:end="59:83">(<argument pos:start="59:39" pos:end="59:46"><expr pos:start="59:39" pos:end="59:46"><name pos:start="59:39" pos:end="59:46"><name pos:start="59:39" pos:end="59:39">s</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:46">inbuf</name></name></expr></argument>, <argument pos:start="59:49" pos:end="59:57"><expr pos:start="59:49" pos:end="59:57"><operator pos:start="59:49" pos:end="59:49">&amp;</operator><name pos:start="59:50" pos:end="59:57"><name pos:start="59:50" pos:end="59:50">s</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:57">flags</name></name></expr></argument>, <argument pos:start="59:60" pos:end="59:71"><expr pos:start="59:60" pos:end="59:71"><operator pos:start="59:60" pos:end="59:60">&amp;</operator><name pos:start="59:61" pos:end="59:71">sample_rate</name></expr></argument>, <argument pos:start="59:74" pos:end="59:82"><expr pos:start="59:74" pos:end="59:82"><operator pos:start="59:74" pos:end="59:74">&amp;</operator><name pos:start="59:75" pos:end="59:82">bit_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="61:17" pos:end="97:17"><if pos:start="61:17" pos:end="69:17">if <condition pos:start="61:20" pos:end="61:29">(<expr pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:23">len</name> <operator pos:start="61:25" pos:end="61:26">==</operator> <literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>)</condition> <block pos:start="61:31" pos:end="69:17">{<block_content pos:start="65:21" pos:end="67:35">

                    <comment type="block" pos:start="63:21" pos:end="63:85">/* no sync found : move by one byte (inefficient, but simple!) */</comment>

                    <expr_stmt pos:start="65:21" pos:end="65:68"><expr pos:start="65:21" pos:end="65:67"><call pos:start="65:21" pos:end="65:67"><name pos:start="65:21" pos:end="65:26">memcpy</name><argument_list pos:start="65:27" pos:end="65:67">(<argument pos:start="65:28" pos:end="65:35"><expr pos:start="65:28" pos:end="65:35"><name pos:start="65:28" pos:end="65:35"><name pos:start="65:28" pos:end="65:28">s</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:35">inbuf</name></name></expr></argument>, <argument pos:start="65:38" pos:end="65:49"><expr pos:start="65:38" pos:end="65:49"><name pos:start="65:38" pos:end="65:45"><name pos:start="65:38" pos:end="65:38">s</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:45">inbuf</name></name> <operator pos:start="65:47" pos:end="65:47">+</operator> <literal type="number" pos:start="65:49" pos:end="65:49">1</literal></expr></argument>, <argument pos:start="65:52" pos:end="65:66"><expr pos:start="65:52" pos:end="65:66"><name pos:start="65:52" pos:end="65:62">HEADER_SIZE</name> <operator pos:start="65:64" pos:end="65:64">-</operator> <literal type="number" pos:start="65:66" pos:end="65:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:35"><expr pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:32">inbuf_ptr</name></name><operator pos:start="67:33" pos:end="67:34">--</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="69:19" pos:end="97:17">else <block pos:start="69:24" pos:end="97:17">{<block_content pos:start="71:21" pos:end="95:47">

                    <expr_stmt pos:start="71:21" pos:end="71:40"><expr pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:33"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:33">frame_size</name></name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:39">len</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="73:21" pos:end="73:43">/* update codec info */</comment>

                    <expr_stmt pos:start="75:21" pos:end="75:53"><expr pos:start="75:21" pos:end="75:52"><name pos:start="75:21" pos:end="75:38"><name pos:start="75:21" pos:end="75:25">avctx</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:38">sample_rate</name></name> <operator pos:start="75:40" pos:end="75:40">=</operator> <name pos:start="75:42" pos:end="75:52">sample_rate</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:61"><expr pos:start="77:21" pos:end="77:60"><name pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:31">channels</name></name> <operator pos:start="77:33" pos:end="77:33">=</operator> <name pos:start="77:35" pos:end="77:60"><name pos:start="77:35" pos:end="77:46">ac3_channels</name><index pos:start="77:47" pos:end="77:60">[<expr pos:start="77:48" pos:end="77:59"><name pos:start="77:48" pos:end="77:55"><name pos:start="77:48" pos:end="77:48">s</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:55">flags</name></name> <operator pos:start="77:57" pos:end="77:57">&amp;</operator> <literal type="number" pos:start="77:59" pos:end="77:59">7</literal></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="79:21" pos:end="81:38"><if pos:start="79:21" pos:end="81:38">if <condition pos:start="79:24" pos:end="79:43">(<expr pos:start="79:25" pos:end="79:42"><name pos:start="79:25" pos:end="79:32"><name pos:start="79:25" pos:end="79:25">s</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:32">flags</name></name> <operator pos:start="79:34" pos:end="79:34">&amp;</operator> <name pos:start="79:36" pos:end="79:42">A52_LFE</name></expr>)</condition><block type="pseudo" pos:start="81:25" pos:end="81:38"><block_content pos:start="81:25" pos:end="81:38">

                        <expr_stmt pos:start="81:25" pos:end="81:38"><expr pos:start="81:25" pos:end="81:37"><name pos:start="81:25" pos:end="81:35"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:35">channels</name></name><operator pos:start="81:36" pos:end="81:37">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:54"><expr pos:start="83:25" pos:end="83:53"><name pos:start="83:25" pos:end="83:39"><name pos:start="83:25" pos:end="83:29">avctx</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:39">channels</name></name> <operator pos:start="83:41" pos:end="83:41">=</operator> <name pos:start="83:43" pos:end="83:53"><name pos:start="83:43" pos:end="83:43">s</name><operator pos:start="83:44" pos:end="83:45">-&gt;</operator><name pos:start="83:46" pos:end="83:53">channels</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="85:21" pos:end="93:21"><if pos:start="85:21" pos:end="93:21">if <condition pos:start="85:24" pos:end="89:66">(<expr pos:start="85:25" pos:end="89:65"><name pos:start="85:25" pos:end="85:47"><name pos:start="85:25" pos:end="85:29">avctx</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:47">request_channels</name></name> <operator pos:start="85:49" pos:end="85:49">&gt;</operator> <literal type="number" pos:start="85:51" pos:end="85:51">0</literal> <operator pos:start="85:53" pos:end="85:54">&amp;&amp;</operator>

                            <name pos:start="87:29" pos:end="87:51"><name pos:start="87:29" pos:end="87:33">avctx</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:51">request_channels</name></name> <operator pos:start="87:53" pos:end="87:54">&lt;=</operator> <literal type="number" pos:start="87:56" pos:end="87:56">2</literal> <operator pos:start="87:58" pos:end="87:59">&amp;&amp;</operator>

                            <name pos:start="89:29" pos:end="89:51"><name pos:start="89:29" pos:end="89:33">avctx</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:51">request_channels</name></name> <operator pos:start="89:53" pos:end="89:53">&lt;</operator> <name pos:start="89:55" pos:end="89:65"><name pos:start="89:55" pos:end="89:55">s</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:65">channels</name></name></expr>)</condition> <block pos:start="89:68" pos:end="93:21">{<block_content pos:start="91:25" pos:end="91:66">

                        <expr_stmt pos:start="91:25" pos:end="91:66"><expr pos:start="91:25" pos:end="91:65"><name pos:start="91:25" pos:end="91:39"><name pos:start="91:25" pos:end="91:29">avctx</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:39">channels</name></name> <operator pos:start="91:41" pos:end="91:41">=</operator> <name pos:start="91:43" pos:end="91:65"><name pos:start="91:43" pos:end="91:47">avctx</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:65">request_channels</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:47"><expr pos:start="95:21" pos:end="95:46"><name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:25">avctx</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:35">bit_rate</name></name> <operator pos:start="95:37" pos:end="95:37">=</operator> <name pos:start="95:39" pos:end="95:46">bit_rate</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="101:11" pos:end="119:9">else if <condition pos:start="101:19" pos:end="101:39">(<expr pos:start="101:20" pos:end="101:38"><name pos:start="101:20" pos:end="101:22">len</name> <operator pos:start="101:24" pos:end="101:24">&lt;</operator> <name pos:start="101:26" pos:end="101:38"><name pos:start="101:26" pos:end="101:26">s</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:38">frame_size</name></name></expr>)</condition> <block pos:start="101:41" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:28">

            <expr_stmt pos:start="103:13" pos:end="103:38"><expr pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:15">len</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:31"><name pos:start="103:19" pos:end="103:19">s</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:31">frame_size</name></name> <operator pos:start="103:33" pos:end="103:33">-</operator> <name pos:start="103:35" pos:end="103:37">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:31"><if pos:start="105:13" pos:end="107:31">if <condition pos:start="105:16" pos:end="105:31">(<expr pos:start="105:17" pos:end="105:30"><name pos:start="105:17" pos:end="105:19">len</name> <operator pos:start="105:21" pos:end="105:21">&gt;</operator> <name pos:start="105:23" pos:end="105:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:31"><block_content pos:start="107:17" pos:end="107:31">

                <expr_stmt pos:start="107:17" pos:end="107:31"><expr pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:19">len</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:47"><expr pos:start="111:13" pos:end="111:46"><call pos:start="111:13" pos:end="111:46"><name pos:start="111:13" pos:end="111:18">memcpy</name><argument_list pos:start="111:19" pos:end="111:46">(<argument pos:start="111:20" pos:end="111:31"><expr pos:start="111:20" pos:end="111:31"><name pos:start="111:20" pos:end="111:31"><name pos:start="111:20" pos:end="111:20">s</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:31">inbuf_ptr</name></name></expr></argument>, <argument pos:start="111:34" pos:end="111:40"><expr pos:start="111:34" pos:end="111:40"><name pos:start="111:34" pos:end="111:40">buf_ptr</name></expr></argument>, <argument pos:start="111:43" pos:end="111:45"><expr pos:start="111:43" pos:end="111:45"><name pos:start="111:43" pos:end="111:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:27"><expr pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:19">buf_ptr</name> <operator pos:start="113:21" pos:end="113:22">+=</operator> <name pos:start="113:24" pos:end="113:26">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:32"><expr pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:24">inbuf_ptr</name></name> <operator pos:start="115:26" pos:end="115:27">+=</operator> <name pos:start="115:29" pos:end="115:31">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:28"><expr pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:20">buf_size</name> <operator pos:start="117:22" pos:end="117:23">-=</operator> <name pos:start="117:25" pos:end="117:27">len</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="169:9">else <block pos:start="119:16" pos:end="169:9">{<block_content pos:start="121:13" pos:end="167:18">

            <expr_stmt pos:start="121:13" pos:end="121:29"><expr pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:17">flags</name> <operator pos:start="121:19" pos:end="121:19">=</operator> <name pos:start="121:21" pos:end="121:28"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:28">flags</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="133:42"><if pos:start="123:13" pos:end="125:33">if <condition pos:start="123:16" pos:end="123:37">(<expr pos:start="123:17" pos:end="123:36"><name pos:start="123:17" pos:end="123:31"><name pos:start="123:17" pos:end="123:21">avctx</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:31">channels</name></name> <operator pos:start="123:33" pos:end="123:34">==</operator> <literal type="number" pos:start="123:36" pos:end="123:36">1</literal></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:33"><block_content pos:start="125:17" pos:end="125:33">

                <expr_stmt pos:start="125:17" pos:end="125:33"><expr pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:21">flags</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:32">A52_MONO</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="127:13" pos:end="129:35">else if <condition pos:start="127:21" pos:end="127:42">(<expr pos:start="127:22" pos:end="127:41"><name pos:start="127:22" pos:end="127:36"><name pos:start="127:22" pos:end="127:26">avctx</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:36">channels</name></name> <operator pos:start="127:38" pos:end="127:39">==</operator> <literal type="number" pos:start="127:41" pos:end="127:41">2</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:35"><block_content pos:start="129:17" pos:end="129:35">

                <expr_stmt pos:start="129:17" pos:end="129:35"><expr pos:start="129:17" pos:end="129:34"><name pos:start="129:17" pos:end="129:21">flags</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:34">A52_STEREO</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="131:13" pos:end="133:42">else<block type="pseudo" pos:start="133:17" pos:end="133:42"><block_content pos:start="133:17" pos:end="133:42">

                <expr_stmt pos:start="133:17" pos:end="133:42"><expr pos:start="133:17" pos:end="133:41"><name pos:start="133:17" pos:end="133:21">flags</name> <operator pos:start="133:23" pos:end="133:24">|=</operator> <name pos:start="133:26" pos:end="133:41">A52_ADJUST_LEVEL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:22"><expr pos:start="135:13" pos:end="135:21"><name pos:start="135:13" pos:end="135:17">level</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <literal type="number" pos:start="135:21" pos:end="135:21">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="149:13"><if pos:start="137:13" pos:end="149:13">if <condition pos:start="137:16" pos:end="137:70">(<expr pos:start="137:17" pos:end="137:69"><call pos:start="137:17" pos:end="137:69"><name pos:start="137:17" pos:end="137:28"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:28">a52_frame</name></name><argument_list pos:start="137:29" pos:end="137:69">(<argument pos:start="137:30" pos:end="137:37"><expr pos:start="137:30" pos:end="137:37"><name pos:start="137:30" pos:end="137:37"><name pos:start="137:30" pos:end="137:30">s</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:37">state</name></name></expr></argument>, <argument pos:start="137:40" pos:end="137:47"><expr pos:start="137:40" pos:end="137:47"><name pos:start="137:40" pos:end="137:47"><name pos:start="137:40" pos:end="137:40">s</name><operator pos:start="137:41" pos:end="137:42">-&gt;</operator><name pos:start="137:43" pos:end="137:47">inbuf</name></name></expr></argument>, <argument pos:start="137:50" pos:end="137:55"><expr pos:start="137:50" pos:end="137:55"><operator pos:start="137:50" pos:end="137:50">&amp;</operator><name pos:start="137:51" pos:end="137:55">flags</name></expr></argument>, <argument pos:start="137:58" pos:end="137:63"><expr pos:start="137:58" pos:end="137:63"><operator pos:start="137:58" pos:end="137:58">&amp;</operator><name pos:start="137:59" pos:end="137:63">level</name></expr></argument>, <argument pos:start="137:66" pos:end="137:68"><expr pos:start="137:66" pos:end="137:68"><literal type="number" pos:start="137:66" pos:end="137:68">384</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:72" pos:end="149:13">{<block_content pos:start="139:13" pos:end="147:25">

            <label pos:start="139:13" pos:end="139:17"><name pos:start="139:13" pos:end="139:16">fail</name>:</label>

                <expr_stmt pos:start="141:17" pos:end="141:70"><expr pos:start="141:17" pos:end="141:69"><call pos:start="141:17" pos:end="141:69"><name pos:start="141:17" pos:end="141:22">av_log</name><argument_list pos:start="141:23" pos:end="141:69">(<argument pos:start="141:24" pos:end="141:28"><expr pos:start="141:24" pos:end="141:28"><name pos:start="141:24" pos:end="141:28">avctx</name></expr></argument>, <argument pos:start="141:31" pos:end="141:42"><expr pos:start="141:31" pos:end="141:42"><name pos:start="141:31" pos:end="141:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="141:45" pos:end="141:68"><expr pos:start="141:45" pos:end="141:68"><literal type="string" pos:start="141:45" pos:end="141:68">"Error decoding frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:40"><expr pos:start="143:17" pos:end="143:39"><name pos:start="143:17" pos:end="143:28"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:28">inbuf_ptr</name></name> <operator pos:start="143:30" pos:end="143:30">=</operator> <name pos:start="143:32" pos:end="143:39"><name pos:start="143:32" pos:end="143:32">s</name><operator pos:start="143:33" pos:end="143:34">-&gt;</operator><name pos:start="143:35" pos:end="143:39">inbuf</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:34"><expr pos:start="145:17" pos:end="145:33"><name pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:29">frame_size</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <literal type="number" pos:start="145:33" pos:end="145:33">0</literal></expr>;</expr_stmt>

                <continue pos:start="147:17" pos:end="147:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <for pos:start="151:13" pos:end="159:13">for <control pos:start="151:17" pos:end="151:35">(<init pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:18">i</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>;</init> <condition pos:start="151:25" pos:end="151:30"><expr pos:start="151:25" pos:end="151:29"><name pos:start="151:25" pos:end="151:25">i</name> <operator pos:start="151:27" pos:end="151:27">&lt;</operator> <literal type="number" pos:start="151:29" pos:end="151:29">6</literal></expr>;</condition> <incr pos:start="151:32" pos:end="151:34"><expr pos:start="151:32" pos:end="151:34"><name pos:start="151:32" pos:end="151:32">i</name><operator pos:start="151:33" pos:end="151:34">++</operator></expr></incr>)</control> <block pos:start="151:37" pos:end="159:13">{<block_content pos:start="153:17" pos:end="157:99">

                <if_stmt pos:start="153:17" pos:end="155:30"><if pos:start="153:17" pos:end="155:30">if <condition pos:start="153:20" pos:end="153:43">(<expr pos:start="153:21" pos:end="153:42"><call pos:start="153:21" pos:end="153:42"><name pos:start="153:21" pos:end="153:32"><name pos:start="153:21" pos:end="153:21">s</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:32">a52_block</name></name><argument_list pos:start="153:33" pos:end="153:42">(<argument pos:start="153:34" pos:end="153:41"><expr pos:start="153:34" pos:end="153:41"><name pos:start="153:34" pos:end="153:41"><name pos:start="153:34" pos:end="153:34">s</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:41">state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="155:21" pos:end="155:30"><block_content pos:start="155:21" pos:end="155:30">

                    <goto pos:start="155:21" pos:end="155:30">goto <name pos:start="155:26" pos:end="155:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:99"><expr pos:start="157:17" pos:end="157:98"><call pos:start="157:17" pos:end="157:98"><name pos:start="157:17" pos:end="157:28">float_to_int</name><argument_list pos:start="157:29" pos:end="157:98">(<argument pos:start="157:30" pos:end="157:39"><expr pos:start="157:30" pos:end="157:39"><name pos:start="157:30" pos:end="157:39"><name pos:start="157:30" pos:end="157:30">s</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:39">samples</name></name></expr></argument>, <argument pos:start="157:42" pos:end="157:80"><expr pos:start="157:42" pos:end="157:80"><name pos:start="157:42" pos:end="157:52">out_samples</name> <operator pos:start="157:54" pos:end="157:54">+</operator> <name pos:start="157:56" pos:end="157:56">i</name> <operator pos:start="157:58" pos:end="157:58">*</operator> <literal type="number" pos:start="157:60" pos:end="157:62">256</literal> <operator pos:start="157:64" pos:end="157:64">*</operator> <name pos:start="157:66" pos:end="157:80"><name pos:start="157:66" pos:end="157:70">avctx</name><operator pos:start="157:71" pos:end="157:72">-&gt;</operator><name pos:start="157:73" pos:end="157:80">channels</name></name></expr></argument>, <argument pos:start="157:83" pos:end="157:97"><expr pos:start="157:83" pos:end="157:97"><name pos:start="157:83" pos:end="157:97"><name pos:start="157:83" pos:end="157:87">avctx</name><operator pos:start="157:88" pos:end="157:89">-&gt;</operator><name pos:start="157:90" pos:end="157:97">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:24"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:24">inbuf_ptr</name></name> <operator pos:start="161:26" pos:end="161:26">=</operator> <name pos:start="161:28" pos:end="161:35"><name pos:start="161:28" pos:end="161:28">s</name><operator pos:start="161:29" pos:end="161:30">-&gt;</operator><name pos:start="161:31" pos:end="161:35">inbuf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:30"><expr pos:start="163:13" pos:end="163:29"><name pos:start="163:13" pos:end="163:25"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:25">frame_size</name></name> <operator pos:start="163:27" pos:end="163:27">=</operator> <literal type="number" pos:start="163:29" pos:end="163:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:69"><expr pos:start="165:13" pos:end="165:68"><operator pos:start="165:13" pos:end="165:13">*</operator><name pos:start="165:14" pos:end="165:22">data_size</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <literal type="number" pos:start="165:26" pos:end="165:26">6</literal> <operator pos:start="165:28" pos:end="165:28">*</operator> <name pos:start="165:30" pos:end="165:44"><name pos:start="165:30" pos:end="165:34">avctx</name><operator pos:start="165:35" pos:end="165:36">-&gt;</operator><name pos:start="165:37" pos:end="165:44">channels</name></name> <operator pos:start="165:46" pos:end="165:46">*</operator> <literal type="number" pos:start="165:48" pos:end="165:50">256</literal> <operator pos:start="165:52" pos:end="165:52">*</operator> <sizeof pos:start="165:54" pos:end="165:68">sizeof<argument_list pos:start="165:60" pos:end="165:68">(<argument pos:start="165:61" pos:end="165:67"><expr pos:start="165:61" pos:end="165:67"><name pos:start="165:61" pos:end="165:67">int16_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <break pos:start="167:13" pos:end="167:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="173:5" pos:end="173:25">return <expr pos:start="173:12" pos:end="173:24"><name pos:start="173:12" pos:end="173:18">buf_ptr</name> <operator pos:start="173:20" pos:end="173:20">-</operator> <name pos:start="173:22" pos:end="173:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
