<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18250.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:23">helper_frsqrte</name> <parameter_list pos:start="1:25" pos:end="1:38">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:33"><name pos:start="1:26" pos:end="1:33">uint64_t</name></type> <name pos:start="1:35" pos:end="1:37">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:19">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">CPU_DoubleU</name></type> <name pos:start="5:17" pos:end="5:20">fone</name></decl>, <decl pos:start="5:23" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:15"/><name pos:start="5:23" pos:end="5:26">farg</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:8">fone</name><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:11">ll</name></name> <operator pos:start="7:13" pos:end="7:13">=</operator> <literal type="number" pos:start="7:15" pos:end="7:35">0x3FF0000000000000ULL</literal></expr>;</expr_stmt> <comment type="block" pos:start="7:38" pos:end="7:46">/* 1.0 */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">farg</name><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:11">ll</name></name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:17">arg</name></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="55:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:50">(<argument pos:start="13:18" pos:end="13:49"><expr pos:start="13:18" pos:end="13:49"><call pos:start="13:18" pos:end="13:49"><name pos:start="13:18" pos:end="13:41">float64_is_signaling_nan</name><argument_list pos:start="13:42" pos:end="13:49">(<argument pos:start="13:43" pos:end="13:48"><expr pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:46">farg</name><operator pos:start="13:47" pos:end="13:47">.</operator><name pos:start="13:48" pos:end="13:48">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:53" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:64">

        <comment type="block" pos:start="15:9" pos:end="15:41">/* sNaN reciprocal square root */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:64"><expr pos:start="17:9" pos:end="17:63"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">farg</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:15">ll</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:63"><name pos:start="17:19" pos:end="17:39">fload_invalid_op_excp</name><argument_list pos:start="17:40" pos:end="17:63">(<argument pos:start="17:41" pos:end="17:62"><expr pos:start="17:41" pos:end="17:62"><name pos:start="17:41" pos:end="17:62">POWERPC_EXCP_FP_VXSNAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="25:5">else if <condition pos:start="19:15" pos:end="19:76">(<expr pos:start="19:16" pos:end="19:75"><call pos:start="19:16" pos:end="19:75"><name pos:start="19:16" pos:end="19:23">unlikely</name><argument_list pos:start="19:24" pos:end="19:75">(<argument pos:start="19:25" pos:end="19:74"><expr pos:start="19:25" pos:end="19:74"><call pos:start="19:25" pos:end="19:46"><name pos:start="19:25" pos:end="19:38">float64_is_neg</name><argument_list pos:start="19:39" pos:end="19:46">(<argument pos:start="19:40" pos:end="19:45"><expr pos:start="19:40" pos:end="19:45"><name pos:start="19:40" pos:end="19:45"><name pos:start="19:40" pos:end="19:43">farg</name><operator pos:start="19:44" pos:end="19:44">.</operator><name pos:start="19:45" pos:end="19:45">d</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:48" pos:end="19:49">&amp;&amp;</operator> <operator pos:start="19:51" pos:end="19:51">!</operator><call pos:start="19:52" pos:end="19:74"><name pos:start="19:52" pos:end="19:66">float64_is_zero</name><argument_list pos:start="19:67" pos:end="19:74">(<argument pos:start="19:68" pos:end="19:73"><expr pos:start="19:68" pos:end="19:73"><name pos:start="19:68" pos:end="19:73"><name pos:start="19:68" pos:end="19:71">farg</name><operator pos:start="19:72" pos:end="19:72">.</operator><name pos:start="19:73" pos:end="19:73">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:78" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:64">

        <comment type="block" pos:start="21:9" pos:end="21:65">/* Reciprocal square root of a negative nonzero number */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:12">farg</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:15">ll</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:63"><name pos:start="23:19" pos:end="23:39">fload_invalid_op_excp</name><argument_list pos:start="23:40" pos:end="23:63">(<argument pos:start="23:41" pos:end="23:62"><expr pos:start="23:41" pos:end="23:62"><name pos:start="23:41" pos:end="23:62">POWERPC_EXCP_FP_VXSQRT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="31:5">else if <condition pos:start="25:15" pos:end="25:40">(<expr pos:start="25:16" pos:end="25:39"><call pos:start="25:16" pos:end="25:39"><name pos:start="25:16" pos:end="25:21">likely</name><argument_list pos:start="25:22" pos:end="25:39">(<argument pos:start="25:23" pos:end="25:38"><expr pos:start="25:23" pos:end="25:38"><call pos:start="25:23" pos:end="25:38"><name pos:start="25:23" pos:end="25:30">isnormal</name><argument_list pos:start="25:31" pos:end="25:38">(<argument pos:start="25:32" pos:end="25:37"><expr pos:start="25:32" pos:end="25:37"><name pos:start="25:32" pos:end="25:37"><name pos:start="25:32" pos:end="25:35">farg</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:37">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:42" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:62">

        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:12">farg</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:14">d</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:54"><name pos:start="27:18" pos:end="27:29">float64_sqrt</name><argument_list pos:start="27:30" pos:end="27:54">(<argument pos:start="27:31" pos:end="27:36"><expr pos:start="27:31" pos:end="27:36"><name pos:start="27:31" pos:end="27:36"><name pos:start="27:31" pos:end="27:34">farg</name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:36">d</name></name></expr></argument>, <argument pos:start="27:39" pos:end="27:53"><expr pos:start="27:39" pos:end="27:53"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:42">env</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:53">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:62"><expr pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:12">farg</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:14">d</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:61"><name pos:start="29:18" pos:end="29:28">float32_div</name><argument_list pos:start="29:29" pos:end="29:61">(<argument pos:start="29:30" pos:end="29:35"><expr pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:33">fone</name><operator pos:start="29:34" pos:end="29:34">.</operator><name pos:start="29:35" pos:end="29:35">d</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:43"><expr pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:41">farg</name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:43">d</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:60"><expr pos:start="29:46" pos:end="29:60"><operator pos:start="29:46" pos:end="29:46">&amp;</operator><name pos:start="29:47" pos:end="29:60"><name pos:start="29:47" pos:end="29:49">env</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:60">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="55:5">else <block pos:start="31:12" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:9">

        <if_stmt pos:start="33:9" pos:end="53:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:45">(<expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:16">farg</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:19">ll</name></name> <operator pos:start="33:21" pos:end="33:22">==</operator> <literal type="number" pos:start="33:24" pos:end="33:44">0x8000000000000000ULL</literal></expr>)</condition> <block pos:start="33:47" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:44">

            <expr_stmt pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:16">farg</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:19">ll</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:43">0xFFF0000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="41:9">else if <condition pos:start="37:19" pos:end="37:52">(<expr pos:start="37:20" pos:end="37:51"><name pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:23">farg</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:26">ll</name></name> <operator pos:start="37:28" pos:end="37:29">==</operator> <literal type="number" pos:start="37:31" pos:end="37:51">0x0000000000000000ULL</literal></expr>)</condition> <block pos:start="37:54" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:44">

            <expr_stmt pos:start="39:13" pos:end="39:44"><expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:16">farg</name><operator pos:start="39:17" pos:end="39:17">.</operator><name pos:start="39:18" pos:end="39:19">ll</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:43">0x7FF0000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="45:9">else if <condition pos:start="41:19" pos:end="41:42">(<expr pos:start="41:20" pos:end="41:41"><call pos:start="41:20" pos:end="41:41"><name pos:start="41:20" pos:end="41:33">float64_is_nan</name><argument_list pos:start="41:34" pos:end="41:41">(<argument pos:start="41:35" pos:end="41:40"><expr pos:start="41:35" pos:end="41:40"><name pos:start="41:35" pos:end="41:40"><name pos:start="41:35" pos:end="41:38">farg</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:40">d</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:44" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:45">

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:16">farg</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:19">ll</name></name> <operator pos:start="43:21" pos:end="43:22">|=</operator> <literal type="number" pos:start="43:24" pos:end="43:44">0x000FFFFFFFFFFFFFULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="45:11" pos:end="49:9">else if <condition pos:start="45:19" pos:end="45:42">(<expr pos:start="45:20" pos:end="45:41"><call pos:start="45:20" pos:end="45:41"><name pos:start="45:20" pos:end="45:33">float64_is_neg</name><argument_list pos:start="45:34" pos:end="45:41">(<argument pos:start="45:35" pos:end="45:40"><expr pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:38">farg</name><operator pos:start="45:39" pos:end="45:39">.</operator><name pos:start="45:40" pos:end="45:40">d</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:44" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:44">

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:16">farg</name><operator pos:start="47:17" pos:end="47:17">.</operator><name pos:start="47:18" pos:end="47:19">ll</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:43">0x7FF8000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="53:9">else <block pos:start="49:16" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:44">

            <expr_stmt pos:start="51:13" pos:end="51:44"><expr pos:start="51:13" pos:end="51:43"><name pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:16">farg</name><operator pos:start="51:17" pos:end="51:17">.</operator><name pos:start="51:18" pos:end="51:19">ll</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <literal type="number" pos:start="51:23" pos:end="51:43">0x0000000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="57:5" pos:end="57:19">return <expr pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:15">farg</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:18">ll</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
