<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21514.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">smbios_build_type_1_fields</name><parameter_list pos:start="1:39" pos:end="1:44">(<parameter pos:start="1:40" pos:end="1:43"><decl pos:start="1:40" pos:end="1:43"><type pos:start="1:40" pos:end="1:43"><name pos:start="1:40" pos:end="1:43">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <expr_stmt pos:start="5:5" pos:end="7:45"><expr pos:start="5:5" pos:end="7:44"><call pos:start="5:5" pos:end="7:44"><name pos:start="5:5" pos:end="5:24">smbios_maybe_add_str</name><argument_list pos:start="5:25" pos:end="7:44">(<argument pos:start="5:26" pos:end="5:26"><expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">1</literal></expr></argument>, <argument pos:start="5:29" pos:end="5:76"><expr pos:start="5:29" pos:end="5:76"><call pos:start="5:29" pos:end="5:76"><name pos:start="5:29" pos:end="5:36">offsetof</name><argument_list pos:start="5:37" pos:end="5:76">(<argument pos:start="5:38" pos:end="5:57"><expr pos:start="5:38" pos:end="5:57">struct <name pos:start="5:45" pos:end="5:57">smbios_type_1</name></expr></argument>, <argument pos:start="5:60" pos:end="5:75"><expr pos:start="5:60" pos:end="5:75"><name pos:start="5:60" pos:end="5:75">manufacturer_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="7:26" pos:end="7:43"><expr pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:30">type1</name><operator pos:start="7:31" pos:end="7:31">.</operator><name pos:start="7:32" pos:end="7:43">manufacturer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="11:40"><expr pos:start="9:5" pos:end="11:39"><call pos:start="9:5" pos:end="11:39"><name pos:start="9:5" pos:end="9:24">smbios_maybe_add_str</name><argument_list pos:start="9:25" pos:end="11:39">(<argument pos:start="9:26" pos:end="9:26"><expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">1</literal></expr></argument>, <argument pos:start="9:29" pos:end="9:76"><expr pos:start="9:29" pos:end="9:76"><call pos:start="9:29" pos:end="9:76"><name pos:start="9:29" pos:end="9:36">offsetof</name><argument_list pos:start="9:37" pos:end="9:76">(<argument pos:start="9:38" pos:end="9:57"><expr pos:start="9:38" pos:end="9:57">struct <name pos:start="9:45" pos:end="9:57">smbios_type_1</name></expr></argument>, <argument pos:start="9:60" pos:end="9:75"><expr pos:start="9:60" pos:end="9:75"><name pos:start="9:60" pos:end="9:75">product_name_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="11:26" pos:end="11:38"><expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:30">type1</name><operator pos:start="11:31" pos:end="11:31">.</operator><name pos:start="11:32" pos:end="11:38">product</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:40"><expr pos:start="13:5" pos:end="15:39"><call pos:start="13:5" pos:end="15:39"><name pos:start="13:5" pos:end="13:24">smbios_maybe_add_str</name><argument_list pos:start="13:25" pos:end="15:39">(<argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">1</literal></expr></argument>, <argument pos:start="13:29" pos:end="13:71"><expr pos:start="13:29" pos:end="13:71"><call pos:start="13:29" pos:end="13:71"><name pos:start="13:29" pos:end="13:36">offsetof</name><argument_list pos:start="13:37" pos:end="13:71">(<argument pos:start="13:38" pos:end="13:57"><expr pos:start="13:38" pos:end="13:57">struct <name pos:start="13:45" pos:end="13:57">smbios_type_1</name></expr></argument>, <argument pos:start="13:60" pos:end="13:70"><expr pos:start="13:60" pos:end="13:70"><name pos:start="13:60" pos:end="13:70">version_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="15:26" pos:end="15:38"><expr pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:30">type1</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:38">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:39"><expr pos:start="17:5" pos:end="19:38"><call pos:start="17:5" pos:end="19:38"><name pos:start="17:5" pos:end="17:24">smbios_maybe_add_str</name><argument_list pos:start="17:25" pos:end="19:38">(<argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr></argument>, <argument pos:start="17:29" pos:end="17:77"><expr pos:start="17:29" pos:end="17:77"><call pos:start="17:29" pos:end="17:77"><name pos:start="17:29" pos:end="17:36">offsetof</name><argument_list pos:start="17:37" pos:end="17:77">(<argument pos:start="17:38" pos:end="17:57"><expr pos:start="17:38" pos:end="17:57">struct <name pos:start="17:45" pos:end="17:57">smbios_type_1</name></expr></argument>, <argument pos:start="17:60" pos:end="17:76"><expr pos:start="17:60" pos:end="17:76"><name pos:start="17:60" pos:end="17:76">serial_number_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="19:26" pos:end="19:37"><expr pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:30">type1</name><operator pos:start="19:31" pos:end="19:31">.</operator><name pos:start="19:32" pos:end="19:37">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:36"><expr pos:start="21:5" pos:end="23:35"><call pos:start="21:5" pos:end="23:35"><name pos:start="21:5" pos:end="21:24">smbios_maybe_add_str</name><argument_list pos:start="21:25" pos:end="23:35">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr></argument>, <argument pos:start="21:29" pos:end="21:74"><expr pos:start="21:29" pos:end="21:74"><call pos:start="21:29" pos:end="21:74"><name pos:start="21:29" pos:end="21:36">offsetof</name><argument_list pos:start="21:37" pos:end="21:74">(<argument pos:start="21:38" pos:end="21:57"><expr pos:start="21:38" pos:end="21:57">struct <name pos:start="21:45" pos:end="21:57">smbios_type_1</name></expr></argument>, <argument pos:start="21:60" pos:end="21:73"><expr pos:start="21:60" pos:end="21:73"><name pos:start="21:60" pos:end="21:73">sku_number_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="23:26" pos:end="23:34"><expr pos:start="23:26" pos:end="23:34"><name pos:start="23:26" pos:end="23:34"><name pos:start="23:26" pos:end="23:30">type1</name><operator pos:start="23:31" pos:end="23:31">.</operator><name pos:start="23:32" pos:end="23:34">sku</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:39"><expr pos:start="25:5" pos:end="27:38"><call pos:start="25:5" pos:end="27:38"><name pos:start="25:5" pos:end="25:24">smbios_maybe_add_str</name><argument_list pos:start="25:25" pos:end="27:38">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr></argument>, <argument pos:start="25:29" pos:end="25:70"><expr pos:start="25:29" pos:end="25:70"><call pos:start="25:29" pos:end="25:70"><name pos:start="25:29" pos:end="25:36">offsetof</name><argument_list pos:start="25:37" pos:end="25:70">(<argument pos:start="25:38" pos:end="25:57"><expr pos:start="25:38" pos:end="25:57">struct <name pos:start="25:45" pos:end="25:57">smbios_type_1</name></expr></argument>, <argument pos:start="25:60" pos:end="25:69"><expr pos:start="25:60" pos:end="25:69"><name pos:start="25:60" pos:end="25:69">family_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:30">type1</name><operator pos:start="27:31" pos:end="27:31">.</operator><name pos:start="27:32" pos:end="27:37">family</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="45:5">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:21">qemu_uuid_set</name></expr>)</condition> <block pos:start="29:24" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:40">

        <comment type="block" pos:start="31:9" pos:end="39:11">/* We don't encode the UUID in the "wire format" here because this

         * function is for legacy mode and needs to keep the guest ABI, and

         * because we don't know what's the SMBIOS version advertised by the

         * BIOS.

         */</comment>

        <expr_stmt pos:start="41:9" pos:end="43:40"><expr pos:start="41:9" pos:end="43:39"><call pos:start="41:9" pos:end="43:39"><name pos:start="41:9" pos:end="41:24">smbios_add_field</name><argument_list pos:start="41:25" pos:end="43:39">(<argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr></argument>, <argument pos:start="41:29" pos:end="41:64"><expr pos:start="41:29" pos:end="41:64"><call pos:start="41:29" pos:end="41:64"><name pos:start="41:29" pos:end="41:36">offsetof</name><argument_list pos:start="41:37" pos:end="41:64">(<argument pos:start="41:38" pos:end="41:57"><expr pos:start="41:38" pos:end="41:57">struct <name pos:start="41:45" pos:end="41:57">smbios_type_1</name></expr></argument>, <argument pos:start="41:60" pos:end="41:63"><expr pos:start="41:60" pos:end="41:63"><name pos:start="41:60" pos:end="41:63">uuid</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="43:26" pos:end="43:34"><expr pos:start="43:26" pos:end="43:34"><name pos:start="43:26" pos:end="43:34">qemu_uuid</name></expr></argument>, <argument pos:start="43:37" pos:end="43:38"><expr pos:start="43:37" pos:end="43:38"><literal type="number" pos:start="43:37" pos:end="43:38">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
