<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15708.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">monitor_find_completion</name><parameter_list pos:start="1:36" pos:end="3:56">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">Monitor</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">mon</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:55"><decl pos:start="3:37" pos:end="3:55"><type pos:start="3:37" pos:end="3:55"><specifier pos:start="3:37" pos:end="3:41">const</specifier> <name pos:start="3:43" pos:end="3:46">char</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:55">cmdline</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:37">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:24"><name pos:start="7:11" pos:end="7:14">args</name><index pos:start="7:15" pos:end="7:24">[<expr pos:start="7:16" pos:end="7:23"><name pos:start="7:16" pos:end="7:23">MAX_ARGS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">nb_args</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">len</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:30">/* 1. parse the cmdline */</comment>

    <if_stmt pos:start="15:5" pos:end="22:0"><if pos:start="15:5" pos:end="22:0">if <condition pos:start="15:8" pos:end="15:51">(<expr pos:start="15:9" pos:end="15:50"><call pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:21">parse_cmdline</name><argument_list pos:start="15:22" pos:end="15:46">(<argument pos:start="15:23" pos:end="15:29"><expr pos:start="15:23" pos:end="15:29"><name pos:start="15:23" pos:end="15:29">cmdline</name></expr></argument>, <argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><operator pos:start="15:32" pos:end="15:32">&amp;</operator><name pos:start="15:33" pos:end="15:39">nb_args</name></expr></argument>, <argument pos:start="15:42" pos:end="15:45"><expr pos:start="15:42" pos:end="15:45"><name pos:start="15:42" pos:end="15:45">args</name></expr></argument>)</argument_list></call> <operator pos:start="15:48" pos:end="15:48">&lt;</operator> <literal type="number" pos:start="15:50" pos:end="15:50">0</literal></expr>)</condition> <block pos:start="15:53" pos:end="22:0">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="21:1" pos:end="21:23">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:23">DEBUG_COMPLETION</name></cpp:ifdef>

    <for pos:start="23:5" pos:end="30:0">for <control pos:start="23:9" pos:end="23:33">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:28"><expr pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:27">nb_args</name></expr>;</condition> <incr pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:30">i</name><operator pos:start="23:31" pos:end="23:32">++</operator></expr></incr>)</control> <block pos:start="23:35" pos:end="30:0">{<block_content pos:start="25:9" pos:end="25:58">

        <expr_stmt pos:start="25:9" pos:end="25:58"><expr pos:start="25:9" pos:end="25:57"><call pos:start="25:9" pos:end="25:57"><name pos:start="25:9" pos:end="25:22">monitor_printf</name><argument_list pos:start="25:23" pos:end="25:57">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">mon</name></expr></argument>, <argument pos:start="25:29" pos:end="25:44"><expr pos:start="25:29" pos:end="25:44"><literal type="string" pos:start="25:29" pos:end="25:44">"arg%d = '%s'\n"</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:47"><expr pos:start="25:47" pos:end="25:47"><name pos:start="25:47" pos:end="25:47">i</name></expr></argument>, <argument pos:start="25:50" pos:end="25:56"><expr pos:start="25:50" pos:end="25:56"><name pos:start="25:50" pos:end="25:56"><name pos:start="25:50" pos:end="25:53">args</name><index pos:start="25:54" pos:end="25:56">[<expr pos:start="25:55" pos:end="25:55"><name pos:start="25:55" pos:end="25:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="33:5" pos:end="35:18">/* if the line ends with a space, it means we want to complete the

       next arg */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:7">len</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:25"><name pos:start="37:11" pos:end="37:16">strlen</name><argument_list pos:start="37:17" pos:end="37:25">(<argument pos:start="37:18" pos:end="37:24"><expr pos:start="37:18" pos:end="37:24"><name pos:start="37:18" pos:end="37:24">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:50">(<expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:11">len</name> <operator pos:start="39:13" pos:end="39:13">&gt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal> <operator pos:start="39:17" pos:end="39:18">&amp;&amp;</operator> <call pos:start="39:20" pos:end="39:49"><name pos:start="39:20" pos:end="39:31">qemu_isspace</name><argument_list pos:start="39:32" pos:end="39:49">(<argument pos:start="39:33" pos:end="39:48"><expr pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:39">cmdline</name><index pos:start="39:40" pos:end="39:48">[<expr pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:43">len</name> <operator pos:start="39:45" pos:end="39:45">-</operator> <literal type="number" pos:start="39:47" pos:end="39:47">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:52" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:39">

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:32">(<expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:19">nb_args</name> <operator pos:start="41:21" pos:end="41:22">&gt;=</operator> <name pos:start="41:24" pos:end="41:31">MAX_ARGS</name></expr>)</condition> <block pos:start="41:34" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:25">

            <goto pos:start="43:13" pos:end="43:25">goto <name pos:start="43:18" pos:end="43:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:12">args</name><index pos:start="47:13" pos:end="47:23">[<expr pos:start="47:14" pos:end="47:22"><name pos:start="47:14" pos:end="47:20">nb_args</name><operator pos:start="47:21" pos:end="47:22">++</operator></expr>]</index></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <call pos:start="47:27" pos:end="47:38"><name pos:start="47:27" pos:end="47:34">g_strdup</name><argument_list pos:start="47:35" pos:end="47:38">(<argument pos:start="47:36" pos:end="47:37"><expr pos:start="47:36" pos:end="47:37"><literal type="string" pos:start="47:36" pos:end="47:37">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:44">/* 2. auto complete according to args */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:73"><expr pos:start="55:5" pos:end="55:72"><call pos:start="55:5" pos:end="55:72"><name pos:start="55:5" pos:end="55:36">monitor_find_completion_by_table</name><argument_list pos:start="55:37" pos:end="55:72">(<argument pos:start="55:38" pos:end="55:40"><expr pos:start="55:38" pos:end="55:40"><name pos:start="55:38" pos:end="55:40">mon</name></expr></argument>, <argument pos:start="55:43" pos:end="55:56"><expr pos:start="55:43" pos:end="55:56"><name pos:start="55:43" pos:end="55:56"><name pos:start="55:43" pos:end="55:45">mon</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:56">cmd_table</name></name></expr></argument>, <argument pos:start="55:59" pos:end="55:62"><expr pos:start="55:59" pos:end="55:62"><name pos:start="55:59" pos:end="55:62">args</name></expr></argument>, <argument pos:start="55:65" pos:end="55:71"><expr pos:start="55:65" pos:end="55:71"><name pos:start="55:65" pos:end="55:71">nb_args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="59:1" pos:end="59:8"><name pos:start="59:1" pos:end="59:7">cleanup</name>:</label>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><call pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:21">free_cmdline_args</name><argument_list pos:start="61:22" pos:end="61:36">(<argument pos:start="61:23" pos:end="61:26"><expr pos:start="61:23" pos:end="61:26"><name pos:start="61:23" pos:end="61:26">args</name></expr></argument>, <argument pos:start="61:29" pos:end="61:35"><expr pos:start="61:29" pos:end="61:35"><name pos:start="61:29" pos:end="61:35">nb_args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
