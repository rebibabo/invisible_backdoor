<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1700.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">test_visitor_in_number</name><parameter_list pos:start="1:35" pos:end="3:54">(<parameter pos:start="1:36" pos:end="1:61"><decl pos:start="1:36" pos:end="1:61"><type pos:start="1:36" pos:end="1:61"><name pos:start="1:36" pos:end="1:55">TestInputVisitorData</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:45">void</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:53">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="21:1">{<block_content pos:start="7:5" pos:end="19:38">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:14">res</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:21" pos:end="7:25">value</name> <init pos:start="7:27" pos:end="7:32">= <expr pos:start="7:29" pos:end="7:32"><literal type="number" pos:start="7:29" pos:end="7:32">3.14</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Visitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:5">v</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:31">visitor_input_test_init</name><argument_list pos:start="13:32" pos:end="13:50">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">data</name></expr></argument>, <argument pos:start="13:39" pos:end="13:42"><expr pos:start="13:39" pos:end="13:42"><literal type="string" pos:start="13:39" pos:end="13:42">"%f"</literal></expr></argument>, <argument pos:start="13:45" pos:end="13:49"><expr pos:start="13:45" pos:end="13:49"><name pos:start="13:45" pos:end="13:49">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><call pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:21">visit_type_number</name><argument_list pos:start="17:22" pos:end="17:50">(<argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">v</name></expr></argument>, <argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">NULL</name></expr></argument>, <argument pos:start="17:32" pos:end="17:35"><expr pos:start="17:32" pos:end="17:35"><operator pos:start="17:32" pos:end="17:32">&amp;</operator><name pos:start="17:33" pos:end="17:35">res</name></expr></argument>, <argument pos:start="17:38" pos:end="17:49"><expr pos:start="17:38" pos:end="17:49"><operator pos:start="17:38" pos:end="17:38">&amp;</operator><name pos:start="17:39" pos:end="17:49">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:21">g_assert_cmpfloat</name><argument_list pos:start="19:22" pos:end="19:37">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">res</name></expr></argument>, <argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><operator pos:start="19:28" pos:end="19:29">==</operator></expr></argument>, <argument pos:start="19:32" pos:end="19:36"><expr pos:start="19:32" pos:end="19:36"><name pos:start="19:32" pos:end="19:36">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
