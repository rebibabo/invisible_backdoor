<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18382.c" pos:tabs="8"><function pos:start="1:1" pos:end="68:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">virtio_scsi_common_realize</name><parameter_list pos:start="1:32" pos:end="5:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">DeviceState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">Error</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">errp</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:44">HandleOutput</name></type> <name pos:start="3:46" pos:end="3:49">ctrl</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:67"><decl pos:start="3:52" pos:end="3:67"><type pos:start="3:52" pos:end="3:67"><name pos:start="3:52" pos:end="3:63">HandleOutput</name></type> <name pos:start="3:65" pos:end="3:67">evt</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:48"><decl pos:start="5:33" pos:end="5:48"><type pos:start="5:33" pos:end="5:48"><name pos:start="5:33" pos:end="5:44">HandleOutput</name></type> <name pos:start="5:46" pos:end="5:48">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="68:1">{<block_content pos:start="9:5" pos:end="66:5">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:43">= <expr pos:start="9:26" pos:end="9:43"><call pos:start="9:26" pos:end="9:43"><name pos:start="9:26" pos:end="9:38">VIRTIO_DEVICE</name><argument_list pos:start="9:39" pos:end="9:43">(<argument pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">VirtIOSCSICommon</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:23">s</name> <init pos:start="11:25" pos:end="11:49">= <expr pos:start="11:27" pos:end="11:49"><call pos:start="11:27" pos:end="11:49"><name pos:start="11:27" pos:end="11:44">VIRTIO_SCSI_COMMON</name><argument_list pos:start="11:45" pos:end="11:49">(<argument pos:start="11:46" pos:end="11:48"><expr pos:start="11:46" pos:end="11:48"><name pos:start="11:46" pos:end="11:48">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:42"><expr pos:start="17:5" pos:end="19:41"><call pos:start="17:5" pos:end="19:41"><name pos:start="17:5" pos:end="17:15">virtio_init</name><argument_list pos:start="17:16" pos:end="19:41">(<argument pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:20">vdev</name></expr></argument>, <argument pos:start="17:23" pos:end="17:35"><expr pos:start="17:23" pos:end="17:35"><literal type="string" pos:start="17:23" pos:end="17:35">"virtio-scsi"</literal></expr></argument>, <argument pos:start="17:38" pos:end="17:51"><expr pos:start="17:38" pos:end="17:51"><name pos:start="17:38" pos:end="17:51">VIRTIO_ID_SCSI</name></expr></argument>,

                <argument pos:start="19:17" pos:end="19:40"><expr pos:start="19:17" pos:end="19:40"><sizeof pos:start="19:17" pos:end="19:40">sizeof<argument_list pos:start="19:23" pos:end="19:40">(<argument pos:start="19:24" pos:end="19:39"><expr pos:start="19:24" pos:end="19:39"><name pos:start="19:24" pos:end="19:39">VirtIOSCSIConfig</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="34:5"><if pos:start="23:5" pos:end="34:5">if <condition pos:start="23:8" pos:end="23:77">(<expr pos:start="23:9" pos:end="23:76"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">conf</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:26">num_queues</name></name> <operator pos:start="23:28" pos:end="23:29">&lt;=</operator> <literal type="number" pos:start="23:31" pos:end="23:31">0</literal> <operator pos:start="23:33" pos:end="23:34">||</operator> <name pos:start="23:36" pos:end="23:53"><name pos:start="23:36" pos:end="23:36">s</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:42">conf</name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:53">num_queues</name></name> <operator pos:start="23:55" pos:end="23:55">&gt;</operator> <name pos:start="23:57" pos:end="23:76">VIRTIO_PCI_QUEUE_MAX</name></expr>)</condition> <block pos:start="23:79" pos:end="34:5">{<block_content pos:start="25:9" pos:end="32:15">

        <expr_stmt pos:start="25:9" pos:end="29:61"><expr pos:start="25:9" pos:end="29:60"><call pos:start="25:9" pos:end="29:60"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="29:60">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="27:67"><expr pos:start="25:26" pos:end="27:67"><literal type="string" pos:start="25:26" pos:end="25:56">"Invalid number of queues (= %"</literal> <name pos:start="25:58" pos:end="25:63">PRId32</name> <literal type="string" pos:start="25:65" pos:end="25:69">"), "</literal>

                         <literal type="string" pos:start="27:26" pos:end="27:67">"must be a positive integer less than %d."</literal></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:37"><expr pos:start="29:20" pos:end="29:37"><name pos:start="29:20" pos:end="29:37"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:26">conf</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:37">num_queues</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:59"><expr pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:59">VIRTIO_PCI_QUEUE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="32:9" pos:end="32:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="36:5" pos:end="36:69"><expr pos:start="36:5" pos:end="36:68"><name pos:start="36:5" pos:end="36:14"><name pos:start="36:5" pos:end="36:5">s</name><operator pos:start="36:6" pos:end="36:7">-&gt;</operator><name pos:start="36:8" pos:end="36:14">cmd_vqs</name></name> <operator pos:start="36:16" pos:end="36:16">=</operator> <call pos:start="36:18" pos:end="36:68"><name pos:start="36:18" pos:end="36:26">g_malloc0</name><argument_list pos:start="36:27" pos:end="36:68">(<argument pos:start="36:28" pos:end="36:67"><expr pos:start="36:28" pos:end="36:67"><name pos:start="36:28" pos:end="36:45"><name pos:start="36:28" pos:end="36:28">s</name><operator pos:start="36:29" pos:end="36:30">-&gt;</operator><name pos:start="36:31" pos:end="36:34">conf</name><operator pos:start="36:35" pos:end="36:35">.</operator><name pos:start="36:36" pos:end="36:45">num_queues</name></name> <operator pos:start="36:47" pos:end="36:47">*</operator> <sizeof pos:start="36:49" pos:end="36:67">sizeof<argument_list pos:start="36:55" pos:end="36:67">(<argument pos:start="36:56" pos:end="36:66"><expr pos:start="36:56" pos:end="36:66"><name pos:start="36:56" pos:end="36:64">VirtQueue</name> <operator pos:start="36:66" pos:end="36:66">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:43"><expr pos:start="38:5" pos:end="38:42"><name pos:start="38:5" pos:end="38:17"><name pos:start="38:5" pos:end="38:5">s</name><operator pos:start="38:6" pos:end="38:7">-&gt;</operator><name pos:start="38:8" pos:end="38:17">sense_size</name></name> <operator pos:start="38:19" pos:end="38:19">=</operator> <name pos:start="38:21" pos:end="38:42">VIRTIO_SCSI_SENSE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="40:5" pos:end="40:39"><expr pos:start="40:5" pos:end="40:38"><name pos:start="40:5" pos:end="40:15"><name pos:start="40:5" pos:end="40:5">s</name><operator pos:start="40:6" pos:end="40:7">-&gt;</operator><name pos:start="40:8" pos:end="40:15">cdb_size</name></name> <operator pos:start="40:17" pos:end="40:17">=</operator> <name pos:start="40:19" pos:end="40:38">VIRTIO_SCSI_CDB_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="44:5" pos:end="46:40"><expr pos:start="44:5" pos:end="46:39"><name pos:start="44:5" pos:end="44:14"><name pos:start="44:5" pos:end="44:5">s</name><operator pos:start="44:6" pos:end="44:7">-&gt;</operator><name pos:start="44:8" pos:end="44:14">ctrl_vq</name></name> <operator pos:start="44:16" pos:end="44:16">=</operator> <call pos:start="44:18" pos:end="46:39"><name pos:start="44:18" pos:end="44:33">virtio_add_queue</name><argument_list pos:start="44:34" pos:end="46:39">(<argument pos:start="44:35" pos:end="44:38"><expr pos:start="44:35" pos:end="44:38"><name pos:start="44:35" pos:end="44:38">vdev</name></expr></argument>, <argument pos:start="44:41" pos:end="44:59"><expr pos:start="44:41" pos:end="44:59"><name pos:start="44:41" pos:end="44:59">VIRTIO_SCSI_VQ_SIZE</name></expr></argument>,

                                  <argument pos:start="46:35" pos:end="46:38"><expr pos:start="46:35" pos:end="46:38"><name pos:start="46:35" pos:end="46:38">ctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="48:5" pos:end="50:40"><expr pos:start="48:5" pos:end="50:39"><name pos:start="48:5" pos:end="48:15"><name pos:start="48:5" pos:end="48:5">s</name><operator pos:start="48:6" pos:end="48:7">-&gt;</operator><name pos:start="48:8" pos:end="48:15">event_vq</name></name> <operator pos:start="48:17" pos:end="48:17">=</operator> <call pos:start="48:19" pos:end="50:39"><name pos:start="48:19" pos:end="48:34">virtio_add_queue</name><argument_list pos:start="48:35" pos:end="50:39">(<argument pos:start="48:36" pos:end="48:39"><expr pos:start="48:36" pos:end="48:39"><name pos:start="48:36" pos:end="48:39">vdev</name></expr></argument>, <argument pos:start="48:42" pos:end="48:60"><expr pos:start="48:42" pos:end="48:60"><name pos:start="48:42" pos:end="48:60">VIRTIO_SCSI_VQ_SIZE</name></expr></argument>,

                                   <argument pos:start="50:36" pos:end="50:38"><expr pos:start="50:36" pos:end="50:38"><name pos:start="50:36" pos:end="50:38">evt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="52:5" pos:end="58:5">for <control pos:start="52:9" pos:end="52:44">(<init pos:start="52:10" pos:end="52:15"><expr pos:start="52:10" pos:end="52:14"><name pos:start="52:10" pos:end="52:10">i</name> <operator pos:start="52:12" pos:end="52:12">=</operator> <literal type="number" pos:start="52:14" pos:end="52:14">0</literal></expr>;</init> <condition pos:start="52:17" pos:end="52:39"><expr pos:start="52:17" pos:end="52:38"><name pos:start="52:17" pos:end="52:17">i</name> <operator pos:start="52:19" pos:end="52:19">&lt;</operator> <name pos:start="52:21" pos:end="52:38"><name pos:start="52:21" pos:end="52:21">s</name><operator pos:start="52:22" pos:end="52:23">-&gt;</operator><name pos:start="52:24" pos:end="52:27">conf</name><operator pos:start="52:28" pos:end="52:28">.</operator><name pos:start="52:29" pos:end="52:38">num_queues</name></name></expr>;</condition> <incr pos:start="52:41" pos:end="52:43"><expr pos:start="52:41" pos:end="52:43"><name pos:start="52:41" pos:end="52:41">i</name><operator pos:start="52:42" pos:end="52:43">++</operator></expr></incr>)</control> <block pos:start="52:46" pos:end="58:5">{<block_content pos:start="54:9" pos:end="56:46">

        <expr_stmt pos:start="54:9" pos:end="56:46"><expr pos:start="54:9" pos:end="56:45"><name pos:start="54:9" pos:end="54:21"><name pos:start="54:9" pos:end="54:9">s</name><operator pos:start="54:10" pos:end="54:11">-&gt;</operator><name pos:start="54:12" pos:end="54:18">cmd_vqs</name><index pos:start="54:19" pos:end="54:21">[<expr pos:start="54:20" pos:end="54:20"><name pos:start="54:20" pos:end="54:20">i</name></expr>]</index></name> <operator pos:start="54:23" pos:end="54:23">=</operator> <call pos:start="54:25" pos:end="56:45"><name pos:start="54:25" pos:end="54:40">virtio_add_queue</name><argument_list pos:start="54:41" pos:end="56:45">(<argument pos:start="54:42" pos:end="54:45"><expr pos:start="54:42" pos:end="54:45"><name pos:start="54:42" pos:end="54:45">vdev</name></expr></argument>, <argument pos:start="54:48" pos:end="54:66"><expr pos:start="54:48" pos:end="54:66"><name pos:start="54:48" pos:end="54:66">VIRTIO_SCSI_VQ_SIZE</name></expr></argument>,

                                         <argument pos:start="56:42" pos:end="56:44"><expr pos:start="56:42" pos:end="56:44"><name pos:start="56:42" pos:end="56:44">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="62:5" pos:end="66:5"><if pos:start="62:5" pos:end="66:5">if <condition pos:start="62:8" pos:end="62:25">(<expr pos:start="62:9" pos:end="62:24"><name pos:start="62:9" pos:end="62:24"><name pos:start="62:9" pos:end="62:9">s</name><operator pos:start="62:10" pos:end="62:11">-&gt;</operator><name pos:start="62:12" pos:end="62:15">conf</name><operator pos:start="62:16" pos:end="62:16">.</operator><name pos:start="62:17" pos:end="62:24">iothread</name></name></expr>)</condition> <block pos:start="62:27" pos:end="66:5">{<block_content pos:start="64:9" pos:end="64:67">

        <expr_stmt pos:start="64:9" pos:end="64:67"><expr pos:start="64:9" pos:end="64:66"><call pos:start="64:9" pos:end="64:66"><name pos:start="64:9" pos:end="64:32">virtio_scsi_set_iothread</name><argument_list pos:start="64:33" pos:end="64:66">(<argument pos:start="64:34" pos:end="64:47"><expr pos:start="64:34" pos:end="64:47"><call pos:start="64:34" pos:end="64:47"><name pos:start="64:34" pos:end="64:44">VIRTIO_SCSI</name><argument_list pos:start="64:45" pos:end="64:47">(<argument pos:start="64:46" pos:end="64:46"><expr pos:start="64:46" pos:end="64:46"><name pos:start="64:46" pos:end="64:46">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="64:50" pos:end="64:65"><expr pos:start="64:50" pos:end="64:65"><name pos:start="64:50" pos:end="64:65"><name pos:start="64:50" pos:end="64:50">s</name><operator pos:start="64:51" pos:end="64:52">-&gt;</operator><name pos:start="64:53" pos:end="64:56">conf</name><operator pos:start="64:57" pos:end="64:57">.</operator><name pos:start="64:58" pos:end="64:65">iothread</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
