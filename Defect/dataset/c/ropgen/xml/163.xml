<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/163.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">unix_process_msgfd</name><parameter_list pos:start="1:31" pos:end="1:72">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:46">CharDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">chr</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:59">struct</name> <name pos:start="1:61" pos:end="1:66">msghdr</name></name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">msg</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="21:1">{<block_content pos:start="3:5" pos:end="20:5">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">TCPCharDriver</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:20">s</name> <init pos:start="3:22" pos:end="3:34">= <expr pos:start="3:24" pos:end="3:34"><name pos:start="3:24" pos:end="3:34"><name pos:start="3:24" pos:end="3:26">chr</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:34">opaque</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:24"><type pos:start="4:5" pos:end="4:20"><name pos:start="4:5" pos:end="4:18"><name pos:start="4:5" pos:end="4:10">struct</name> <name pos:start="4:12" pos:end="4:18">cmsghdr</name></name> <modifier pos:start="4:20" pos:end="4:20">*</modifier></type><name pos:start="4:21" pos:end="4:24">cmsg</name></decl>;</decl_stmt>
    <for pos:start="5:5" pos:end="20:5">for <control pos:start="5:9" pos:end="5:72">(<init pos:start="5:10" pos:end="5:35"><expr pos:start="5:10" pos:end="5:34"><name pos:start="5:10" pos:end="5:13">cmsg</name> <operator pos:start="5:15" pos:end="5:15">=</operator> <call pos:start="5:17" pos:end="5:34"><name pos:start="5:17" pos:end="5:29">CMSG_FIRSTHDR</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">msg</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="5:37" pos:end="5:41"><expr pos:start="5:37" pos:end="5:40"><name pos:start="5:37" pos:end="5:40">cmsg</name></expr>;</condition> <incr pos:start="5:43" pos:end="5:71"><expr pos:start="5:43" pos:end="5:71"><name pos:start="5:43" pos:end="5:46">cmsg</name> <operator pos:start="5:48" pos:end="5:48">=</operator> <call pos:start="5:50" pos:end="5:71"><name pos:start="5:50" pos:end="5:60">CMSG_NXTHDR</name><argument_list pos:start="5:61" pos:end="5:71">(<argument pos:start="5:62" pos:end="5:64"><expr pos:start="5:62" pos:end="5:64"><name pos:start="5:62" pos:end="5:64">msg</name></expr></argument>, <argument pos:start="5:67" pos:end="5:70"><expr pos:start="5:67" pos:end="5:70"><name pos:start="5:67" pos:end="5:70">cmsg</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="5:74" pos:end="20:5">{<block_content pos:start="6:9" pos:end="19:22">
        <decl_stmt pos:start="6:9" pos:end="6:15"><decl pos:start="6:9" pos:end="6:14"><type pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:14">fd</name></decl>;</decl_stmt>
        <if_stmt pos:start="7:9" pos:end="10:21"><if pos:start="7:9" pos:end="10:21">if <condition pos:start="7:12" pos:end="9:42">(<expr pos:start="7:13" pos:end="9:41"><name pos:start="7:13" pos:end="7:26"><name pos:start="7:13" pos:end="7:16">cmsg</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:26">cmsg_len</name></name> <operator pos:start="7:28" pos:end="7:29">!=</operator> <call pos:start="7:31" pos:end="7:51"><name pos:start="7:31" pos:end="7:38">CMSG_LEN</name><argument_list pos:start="7:39" pos:end="7:51">(<argument pos:start="7:40" pos:end="7:50"><expr pos:start="7:40" pos:end="7:50"><sizeof pos:start="7:40" pos:end="7:50">sizeof<argument_list pos:start="7:46" pos:end="7:50">(<argument pos:start="7:47" pos:end="7:49"><expr pos:start="7:47" pos:end="7:49"><name pos:start="7:47" pos:end="7:49">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="7:53" pos:end="7:54">||</operator>
            <name pos:start="8:13" pos:end="8:28"><name pos:start="8:13" pos:end="8:16">cmsg</name><operator pos:start="8:17" pos:end="8:18">-&gt;</operator><name pos:start="8:19" pos:end="8:28">cmsg_level</name></name> <operator pos:start="8:30" pos:end="8:31">!=</operator> <name pos:start="8:33" pos:end="8:42">SOL_SOCKET</name> <operator pos:start="8:44" pos:end="8:45">||</operator>
            <name pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:16">cmsg</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:27">cmsg_type</name></name> <operator pos:start="9:29" pos:end="9:30">!=</operator> <name pos:start="9:32" pos:end="9:41">SCM_RIGHTS</name></expr>)</condition><block type="pseudo" pos:start="10:13" pos:end="10:21"><block_content pos:start="10:13" pos:end="10:21">
            <continue pos:start="10:13" pos:end="10:21">continue;</continue></block_content></block></if></if_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:39"><expr pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:10">fd</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <operator pos:start="11:14" pos:end="11:14">*</operator><operator pos:start="11:15" pos:end="11:15">(</operator><operator pos:start="11:16" pos:end="11:16">(</operator><name pos:start="11:17" pos:end="11:19">int</name> <operator pos:start="11:21" pos:end="11:21">*</operator><operator pos:start="11:22" pos:end="11:22">)</operator><call pos:start="11:23" pos:end="11:37"><name pos:start="11:23" pos:end="11:31">CMSG_DATA</name><argument_list pos:start="11:32" pos:end="11:37">(<argument pos:start="11:33" pos:end="11:36"><expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:36">cmsg</name></expr></argument>)</argument_list></call><operator pos:start="11:38" pos:end="11:38">)</operator></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="15:0"><if pos:start="12:9" pos:end="15:0">if <condition pos:start="12:12" pos:end="12:19">(<expr pos:start="12:13" pos:end="12:18"><name pos:start="12:13" pos:end="12:14">fd</name> <operator pos:start="12:16" pos:end="12:16">&lt;</operator> <literal type="number" pos:start="12:18" pos:end="12:18">0</literal></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="15:0"><block_content pos:start="13:13" pos:end="15:0">
            <continue pos:start="13:13" pos:end="15:0">continue;</continue></block_content></block></if></if_stmt>
<cpp:ifndef pos:start="14:1" pos:end="14:24">#<cpp:directive pos:start="14:2" pos:end="14:7">ifndef</cpp:directive> <name pos:start="14:9" pos:end="14:24">MSG_CMSG_CLOEXEC</name></cpp:ifndef>
        <expr_stmt pos:start="15:9" pos:end="17:0"><expr pos:start="15:9" pos:end="15:28"><call pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:24">qemu_set_cloexec</name><argument_list pos:start="15:25" pos:end="15:28">(<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="16:1" pos:end="16:6">#<cpp:directive pos:start="16:2" pos:end="16:6">endif</cpp:directive></cpp:endif>
        <if_stmt pos:start="17:9" pos:end="18:28"><if pos:start="17:9" pos:end="18:28">if <condition pos:start="17:12" pos:end="17:27">(<expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">msgfd</name></name> <operator pos:start="17:22" pos:end="17:23">!=</operator> <operator pos:start="17:25" pos:end="17:25">-</operator><literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr>)</condition><block type="pseudo" pos:start="18:13" pos:end="18:28"><block_content pos:start="18:13" pos:end="18:28">
            <expr_stmt pos:start="18:13" pos:end="18:28"><expr pos:start="18:13" pos:end="18:27"><call pos:start="18:13" pos:end="18:27"><name pos:start="18:13" pos:end="18:17">close</name><argument_list pos:start="18:18" pos:end="18:27">(<argument pos:start="18:19" pos:end="18:26"><expr pos:start="18:19" pos:end="18:26"><name pos:start="18:19" pos:end="18:26"><name pos:start="18:19" pos:end="18:19">s</name><operator pos:start="18:20" pos:end="18:21">-&gt;</operator><name pos:start="18:22" pos:end="18:26">msgfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">msgfd</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:21">fd</name></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function></unit>
