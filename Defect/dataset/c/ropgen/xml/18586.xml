<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18586.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vfio_get_device</name><parameter_list pos:start="1:27" pos:end="3:47">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:36">VFIOGroup</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">group</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">name</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:46"><decl pos:start="3:28" pos:end="3:46"><type pos:start="3:28" pos:end="3:46"><name pos:start="3:28" pos:end="3:40">VFIOPCIDevice</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="305:1">{<block_content pos:start="7:5" pos:end="303:15">

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">vfio_device_info</name></name></type> <name pos:start="7:29" pos:end="7:36">dev_info</name> <init pos:start="7:38" pos:end="7:68">= <expr pos:start="7:40" pos:end="7:68"><block pos:start="7:40" pos:end="7:68">{ <expr pos:start="7:42" pos:end="7:66"><operator pos:start="7:42" pos:end="7:42">.</operator><name pos:start="7:43" pos:end="7:47">argsz</name> <operator pos:start="7:49" pos:end="7:49">=</operator> sizeof<operator pos:start="7:57" pos:end="7:57">(</operator><name pos:start="7:58" pos:end="7:65">dev_info</name><operator pos:start="7:66" pos:end="7:66">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:69"><decl pos:start="9:5" pos:end="9:68"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:27">vfio_region_info</name></name></type> <name pos:start="9:29" pos:end="9:36">reg_info</name> <init pos:start="9:38" pos:end="9:68">= <expr pos:start="9:40" pos:end="9:68"><block pos:start="9:40" pos:end="9:68">{ <expr pos:start="9:42" pos:end="9:66"><operator pos:start="9:42" pos:end="9:42">.</operator><name pos:start="9:43" pos:end="9:47">argsz</name> <operator pos:start="9:49" pos:end="9:49">=</operator> sizeof<operator pos:start="9:57" pos:end="9:57">(</operator><name pos:start="9:58" pos:end="9:65">reg_info</name><operator pos:start="9:66" pos:end="9:66">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:24">vfio_irq_info</name></name></type> <name pos:start="11:26" pos:end="11:33">irq_info</name> <init pos:start="11:35" pos:end="11:65">= <expr pos:start="11:37" pos:end="11:65"><block pos:start="11:37" pos:end="11:65">{ <expr pos:start="11:39" pos:end="11:63"><operator pos:start="11:39" pos:end="11:39">.</operator><name pos:start="11:40" pos:end="11:44">argsz</name> <operator pos:start="11:46" pos:end="11:46">=</operator> sizeof<operator pos:start="11:54" pos:end="11:54">(</operator><name pos:start="11:55" pos:end="11:62">irq_info</name><operator pos:start="11:63" pos:end="11:63">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:59"><expr pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:58"><name pos:start="17:11" pos:end="17:15">ioctl</name><argument_list pos:start="17:16" pos:end="17:58">(<argument pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:21">group</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:25">fd</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:51"><expr pos:start="17:28" pos:end="17:51"><name pos:start="17:28" pos:end="17:51">VFIO_GROUP_GET_DEVICE_FD</name></expr></argument>, <argument pos:start="17:54" pos:end="17:57"><expr pos:start="17:54" pos:end="17:57"><name pos:start="17:54" pos:end="17:57">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:19">

        <expr_stmt pos:start="21:9" pos:end="23:43"><expr pos:start="21:9" pos:end="23:42"><call pos:start="21:9" pos:end="23:42"><name pos:start="21:9" pos:end="21:20">error_report</name><argument_list pos:start="21:21" pos:end="23:42">(<argument pos:start="21:22" pos:end="21:70"><expr pos:start="21:22" pos:end="21:70"><literal type="string" pos:start="21:22" pos:end="21:70">"vfio: error getting device %s from group %d: %m"</literal></expr></argument>,

                     <argument pos:start="23:22" pos:end="23:25"><expr pos:start="23:22" pos:end="23:25"><name pos:start="23:22" pos:end="23:25">name</name></expr></argument>, <argument pos:start="23:28" pos:end="23:41"><expr pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:32">group</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:41">groupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="27:77"><expr pos:start="25:9" pos:end="27:76"><call pos:start="25:9" pos:end="27:76"><name pos:start="25:9" pos:end="25:20">error_printf</name><argument_list pos:start="25:21" pos:end="27:76">(<argument pos:start="25:22" pos:end="27:59"><expr pos:start="25:22" pos:end="27:59"><literal type="string" pos:start="25:22" pos:end="25:76">"Verify all devices in group %d are bound to vfio-pci "</literal>

                     <literal type="string" pos:start="27:22" pos:end="27:59">"or pci-stub and not already in use\n"</literal></expr></argument>, <argument pos:start="27:62" pos:end="27:75"><expr pos:start="27:62" pos:end="27:75"><name pos:start="27:62" pos:end="27:75"><name pos:start="27:62" pos:end="27:66">group</name><operator pos:start="27:67" pos:end="27:68">-&gt;</operator><name pos:start="27:69" pos:end="27:75">groupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:8">vdev</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:18">vbasedev</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:21">fd</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:27">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:8">vdev</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:18">vbasedev</name><operator pos:start="37:19" pos:end="37:19">.</operator><name pos:start="37:20" pos:end="37:24">group</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:32">group</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:55"><expr pos:start="39:5" pos:end="39:54"><call pos:start="39:5" pos:end="39:54"><name pos:start="39:5" pos:end="39:21">QLIST_INSERT_HEAD</name><argument_list pos:start="39:22" pos:end="39:54">(<argument pos:start="39:23" pos:end="39:41"><expr pos:start="39:23" pos:end="39:41"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:41"><name pos:start="39:24" pos:end="39:28">group</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:41">device_list</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:47"><expr pos:start="39:44" pos:end="39:47"><name pos:start="39:44" pos:end="39:47">vdev</name></expr></argument>, <argument pos:start="39:50" pos:end="39:53"><expr pos:start="39:50" pos:end="39:53"><name pos:start="39:50" pos:end="39:53">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:29">/* Sanity check device */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:68"><expr pos:start="45:5" pos:end="45:67"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:67"><name pos:start="45:11" pos:end="45:15">ioctl</name><argument_list pos:start="45:16" pos:end="45:67">(<argument pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:20">vdev</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:30">vbasedev</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:33">fd</name></name></expr></argument>, <argument pos:start="45:36" pos:end="45:55"><expr pos:start="45:36" pos:end="45:55"><name pos:start="45:36" pos:end="45:55">VFIO_DEVICE_GET_INFO</name></expr></argument>, <argument pos:start="45:58" pos:end="45:66"><expr pos:start="45:58" pos:end="45:66"><operator pos:start="45:58" pos:end="45:58">&amp;</operator><name pos:start="45:59" pos:end="45:66">dev_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:12">(<expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">ret</name></expr>)</condition> <block pos:start="47:14" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:19">

        <expr_stmt pos:start="49:9" pos:end="49:60"><expr pos:start="49:9" pos:end="49:59"><call pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:20">error_report</name><argument_list pos:start="49:21" pos:end="49:59">(<argument pos:start="49:22" pos:end="49:58"><expr pos:start="49:22" pos:end="49:58"><literal type="string" pos:start="49:22" pos:end="49:58">"vfio: error getting device info: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:19">goto <name pos:start="51:14" pos:end="51:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:71"><expr pos:start="57:5" pos:end="59:70"><call pos:start="57:5" pos:end="59:70"><name pos:start="57:5" pos:end="57:29">trace_vfio_get_device_irq</name><argument_list pos:start="57:30" pos:end="59:70">(<argument pos:start="57:31" pos:end="57:34"><expr pos:start="57:31" pos:end="57:34"><name pos:start="57:31" pos:end="57:34">name</name></expr></argument>, <argument pos:start="57:37" pos:end="57:50"><expr pos:start="57:37" pos:end="57:50"><name pos:start="57:37" pos:end="57:50"><name pos:start="57:37" pos:end="57:44">dev_info</name><operator pos:start="57:45" pos:end="57:45">.</operator><name pos:start="57:46" pos:end="57:50">flags</name></name></expr></argument>,

                              <argument pos:start="59:31" pos:end="59:50"><expr pos:start="59:31" pos:end="59:50"><name pos:start="59:31" pos:end="59:50"><name pos:start="59:31" pos:end="59:38">dev_info</name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:50">num_regions</name></name></expr></argument>, <argument pos:start="59:53" pos:end="59:69"><expr pos:start="59:53" pos:end="59:69"><name pos:start="59:53" pos:end="59:69"><name pos:start="59:53" pos:end="59:60">dev_info</name><operator pos:start="59:61" pos:end="59:61">.</operator><name pos:start="59:62" pos:end="59:69">num_irqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:50">(<expr pos:start="63:9" pos:end="63:49"><operator pos:start="63:9" pos:end="63:9">!</operator><operator pos:start="63:10" pos:end="63:10">(</operator><name pos:start="63:11" pos:end="63:24"><name pos:start="63:11" pos:end="63:18">dev_info</name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:24">flags</name></name> <operator pos:start="63:26" pos:end="63:26">&amp;</operator> <name pos:start="63:28" pos:end="63:48">VFIO_DEVICE_FLAGS_PCI</name><operator pos:start="63:49" pos:end="63:49">)</operator></expr>)</condition> <block pos:start="63:52" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:19">

        <expr_stmt pos:start="65:9" pos:end="65:58"><expr pos:start="65:9" pos:end="65:57"><call pos:start="65:9" pos:end="65:57"><name pos:start="65:9" pos:end="65:20">error_report</name><argument_list pos:start="65:21" pos:end="65:57">(<argument pos:start="65:22" pos:end="65:56"><expr pos:start="65:22" pos:end="65:56"><literal type="string" pos:start="65:22" pos:end="65:56">"vfio: Um, this isn't a PCI device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:19">goto <name pos:start="67:14" pos:end="67:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:69"><expr pos:start="73:5" pos:end="73:68"><name pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:8">vdev</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:21">reset_works</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">!</operator><operator pos:start="73:26" pos:end="73:26">!</operator><operator pos:start="73:27" pos:end="73:27">(</operator><name pos:start="73:28" pos:end="73:41"><name pos:start="73:28" pos:end="73:35">dev_info</name><operator pos:start="73:36" pos:end="73:36">.</operator><name pos:start="73:37" pos:end="73:41">flags</name></name> <operator pos:start="73:43" pos:end="73:43">&amp;</operator> <name pos:start="73:45" pos:end="73:67">VFIO_DEVICE_FLAGS_RESET</name><operator pos:start="73:68" pos:end="73:68">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:64">(<expr pos:start="77:9" pos:end="77:63"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:16">dev_info</name><operator pos:start="77:17" pos:end="77:17">.</operator><name pos:start="77:18" pos:end="77:28">num_regions</name></name> <operator pos:start="77:30" pos:end="77:30">&lt;</operator> <name pos:start="77:32" pos:end="77:59">VFIO_PCI_CONFIG_REGION_INDEX</name> <operator pos:start="77:61" pos:end="77:61">+</operator> <literal type="number" pos:start="77:63" pos:end="77:63">1</literal></expr>)</condition> <block pos:start="77:66" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:19">

        <expr_stmt pos:start="79:9" pos:end="81:43"><expr pos:start="79:9" pos:end="81:42"><call pos:start="79:9" pos:end="81:42"><name pos:start="79:9" pos:end="79:20">error_report</name><argument_list pos:start="79:21" pos:end="81:42">(<argument pos:start="79:22" pos:end="79:63"><expr pos:start="79:22" pos:end="79:63"><literal type="string" pos:start="79:22" pos:end="79:63">"vfio: unexpected number of io regions %u"</literal></expr></argument>,

                     <argument pos:start="81:22" pos:end="81:41"><expr pos:start="81:22" pos:end="81:41"><name pos:start="81:22" pos:end="81:41"><name pos:start="81:22" pos:end="81:29">dev_info</name><operator pos:start="81:30" pos:end="81:30">.</operator><name pos:start="81:31" pos:end="81:41">num_regions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:19">goto <name pos:start="83:14" pos:end="83:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:56">(<expr pos:start="89:9" pos:end="89:55"><name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:16">dev_info</name><operator pos:start="89:17" pos:end="89:17">.</operator><name pos:start="89:18" pos:end="89:25">num_irqs</name></name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <name pos:start="89:29" pos:end="89:51">VFIO_PCI_MSIX_IRQ_INDEX</name> <operator pos:start="89:53" pos:end="89:53">+</operator> <literal type="number" pos:start="89:55" pos:end="89:55">1</literal></expr>)</condition> <block pos:start="89:58" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:19">

        <expr_stmt pos:start="91:9" pos:end="91:78"><expr pos:start="91:9" pos:end="91:77"><call pos:start="91:9" pos:end="91:77"><name pos:start="91:9" pos:end="91:20">error_report</name><argument_list pos:start="91:21" pos:end="91:77">(<argument pos:start="91:22" pos:end="91:57"><expr pos:start="91:22" pos:end="91:57"><literal type="string" pos:start="91:22" pos:end="91:57">"vfio: unexpected number of irqs %u"</literal></expr></argument>, <argument pos:start="91:60" pos:end="91:76"><expr pos:start="91:60" pos:end="91:76"><name pos:start="91:60" pos:end="91:76"><name pos:start="91:60" pos:end="91:67">dev_info</name><operator pos:start="91:68" pos:end="91:68">.</operator><name pos:start="91:69" pos:end="91:76">num_irqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:19">goto <name pos:start="93:14" pos:end="93:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="99:5" pos:end="139:5">for <control pos:start="99:9" pos:end="99:76">(<init pos:start="99:10" pos:end="99:40"><expr pos:start="99:10" pos:end="99:39"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <name pos:start="99:14" pos:end="99:39">VFIO_PCI_BAR0_REGION_INDEX</name></expr>;</init> <condition pos:start="99:42" pos:end="99:71"><expr pos:start="99:42" pos:end="99:70"><name pos:start="99:42" pos:end="99:42">i</name> <operator pos:start="99:44" pos:end="99:44">&lt;</operator> <name pos:start="99:46" pos:end="99:70">VFIO_PCI_ROM_REGION_INDEX</name></expr>;</condition> <incr pos:start="99:73" pos:end="99:75"><expr pos:start="99:73" pos:end="99:75"><name pos:start="99:73" pos:end="99:73">i</name><operator pos:start="99:74" pos:end="99:75">++</operator></expr></incr>)</control> <block pos:start="99:78" pos:end="139:5">{<block_content pos:start="101:9" pos:end="137:42">

        <expr_stmt pos:start="101:9" pos:end="101:27"><expr pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:16">reg_info</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:22">index</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:26">i</name></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:79"><expr pos:start="105:9" pos:end="105:78"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:78"><name pos:start="105:15" pos:end="105:19">ioctl</name><argument_list pos:start="105:20" pos:end="105:78">(<argument pos:start="105:21" pos:end="105:37"><expr pos:start="105:21" pos:end="105:37"><name pos:start="105:21" pos:end="105:37"><name pos:start="105:21" pos:end="105:24">vdev</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:34">vbasedev</name><operator pos:start="105:35" pos:end="105:35">.</operator><name pos:start="105:36" pos:end="105:37">fd</name></name></expr></argument>, <argument pos:start="105:40" pos:end="105:66"><expr pos:start="105:40" pos:end="105:66"><name pos:start="105:40" pos:end="105:66">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="105:69" pos:end="105:77"><expr pos:start="105:69" pos:end="105:77"><operator pos:start="105:69" pos:end="105:69">&amp;</operator><name pos:start="105:70" pos:end="105:77">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="113:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:16">(<expr pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">ret</name></expr>)</condition> <block pos:start="107:18" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:23">

            <expr_stmt pos:start="109:13" pos:end="109:70"><expr pos:start="109:13" pos:end="109:69"><call pos:start="109:13" pos:end="109:69"><name pos:start="109:13" pos:end="109:24">error_report</name><argument_list pos:start="109:25" pos:end="109:69">(<argument pos:start="109:26" pos:end="109:65"><expr pos:start="109:26" pos:end="109:65"><literal type="string" pos:start="109:26" pos:end="109:65">"vfio: Error getting region %d info: %m"</literal></expr></argument>, <argument pos:start="109:68" pos:end="109:68"><expr pos:start="109:68" pos:end="109:68"><name pos:start="109:68" pos:end="109:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="111:13" pos:end="111:23">goto <name pos:start="111:18" pos:end="111:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="123:68"><expr pos:start="117:9" pos:end="123:67"><call pos:start="117:9" pos:end="123:67"><name pos:start="117:9" pos:end="117:36">trace_vfio_get_device_region</name><argument_list pos:start="117:37" pos:end="123:67">(<argument pos:start="117:38" pos:end="117:41"><expr pos:start="117:38" pos:end="117:41"><name pos:start="117:38" pos:end="117:41">name</name></expr></argument>, <argument pos:start="117:44" pos:end="117:44"><expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">i</name></expr></argument>,

                                     <argument pos:start="119:38" pos:end="119:65"><expr pos:start="119:38" pos:end="119:65"><operator pos:start="119:38" pos:end="119:38">(</operator><name pos:start="119:39" pos:end="119:46">unsigned</name> <name pos:start="119:48" pos:end="119:51">long</name><operator pos:start="119:52" pos:end="119:52">)</operator><name pos:start="119:53" pos:end="119:65"><name pos:start="119:53" pos:end="119:60">reg_info</name><operator pos:start="119:61" pos:end="119:61">.</operator><name pos:start="119:62" pos:end="119:65">size</name></name></expr></argument>,

                                     <argument pos:start="121:38" pos:end="121:67"><expr pos:start="121:38" pos:end="121:67"><operator pos:start="121:38" pos:end="121:38">(</operator><name pos:start="121:39" pos:end="121:46">unsigned</name> <name pos:start="121:48" pos:end="121:51">long</name><operator pos:start="121:52" pos:end="121:52">)</operator><name pos:start="121:53" pos:end="121:67"><name pos:start="121:53" pos:end="121:60">reg_info</name><operator pos:start="121:61" pos:end="121:61">.</operator><name pos:start="121:62" pos:end="121:67">offset</name></name></expr></argument>,

                                     <argument pos:start="123:38" pos:end="123:66"><expr pos:start="123:38" pos:end="123:66"><operator pos:start="123:38" pos:end="123:38">(</operator><name pos:start="123:39" pos:end="123:46">unsigned</name> <name pos:start="123:48" pos:end="123:51">long</name><operator pos:start="123:52" pos:end="123:52">)</operator><name pos:start="123:53" pos:end="123:66"><name pos:start="123:53" pos:end="123:60">reg_info</name><operator pos:start="123:61" pos:end="123:61">.</operator><name pos:start="123:62" pos:end="123:66">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:45"><expr pos:start="127:9" pos:end="127:44"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:12">vdev</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:18">bars</name><index pos:start="127:19" pos:end="127:21">[<expr pos:start="127:20" pos:end="127:20"><name pos:start="127:20" pos:end="127:20">i</name></expr>]</index></name><operator pos:start="127:22" pos:end="127:22">.</operator><name pos:start="127:23" pos:end="127:27">flags</name> <operator pos:start="127:29" pos:end="127:29">=</operator> <name pos:start="127:31" pos:end="127:44"><name pos:start="127:31" pos:end="127:38">reg_info</name><operator pos:start="127:39" pos:end="127:39">.</operator><name pos:start="127:40" pos:end="127:44">flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:12">vdev</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:18">bars</name><index pos:start="129:19" pos:end="129:21">[<expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">i</name></expr>]</index></name><operator pos:start="129:22" pos:end="129:22">.</operator><name pos:start="129:23" pos:end="129:26">size</name> <operator pos:start="129:28" pos:end="129:28">=</operator> <name pos:start="129:30" pos:end="129:42"><name pos:start="129:30" pos:end="129:37">reg_info</name><operator pos:start="129:38" pos:end="129:38">.</operator><name pos:start="129:39" pos:end="129:42">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:50"><expr pos:start="131:9" pos:end="131:49"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:12">vdev</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:18">bars</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><name pos:start="131:20" pos:end="131:20">i</name></expr>]</index></name><operator pos:start="131:22" pos:end="131:22">.</operator><name pos:start="131:23" pos:end="131:31">fd_offset</name> <operator pos:start="131:33" pos:end="131:33">=</operator> <name pos:start="131:35" pos:end="131:49"><name pos:start="131:35" pos:end="131:42">reg_info</name><operator pos:start="131:43" pos:end="131:43">.</operator><name pos:start="131:44" pos:end="131:49">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:45"><expr pos:start="133:9" pos:end="133:44"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:12">vdev</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:18">bars</name><index pos:start="133:19" pos:end="133:21">[<expr pos:start="133:20" pos:end="133:20"><name pos:start="133:20" pos:end="133:20">i</name></expr>]</index></name><operator pos:start="133:22" pos:end="133:22">.</operator><name pos:start="133:23" pos:end="133:24">fd</name> <operator pos:start="133:26" pos:end="133:26">=</operator> <name pos:start="133:28" pos:end="133:44"><name pos:start="133:28" pos:end="133:31">vdev</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:41">vbasedev</name><operator pos:start="133:42" pos:end="133:42">.</operator><name pos:start="133:43" pos:end="133:44">fd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:12">vdev</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:18">bars</name><index pos:start="135:19" pos:end="135:21">[<expr pos:start="135:20" pos:end="135:20"><name pos:start="135:20" pos:end="135:20">i</name></expr>]</index></name><operator pos:start="135:22" pos:end="135:22">.</operator><name pos:start="135:23" pos:end="135:24">nr</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:28">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:42"><expr pos:start="137:9" pos:end="137:41"><call pos:start="137:9" pos:end="137:41"><name pos:start="137:9" pos:end="137:18">QLIST_INIT</name><argument_list pos:start="137:19" pos:end="137:41">(<argument pos:start="137:20" pos:end="137:40"><expr pos:start="137:20" pos:end="137:40"><operator pos:start="137:20" pos:end="137:20">&amp;</operator><name pos:start="137:21" pos:end="137:33"><name pos:start="137:21" pos:end="137:24">vdev</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:30">bars</name><index pos:start="137:31" pos:end="137:33">[<expr pos:start="137:32" pos:end="137:32"><name pos:start="137:32" pos:end="137:32">i</name></expr>]</index></name><operator pos:start="137:34" pos:end="137:34">.</operator><name pos:start="137:35" pos:end="137:40">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="143:5" pos:end="143:50"><expr pos:start="143:5" pos:end="143:49"><name pos:start="143:5" pos:end="143:18"><name pos:start="143:5" pos:end="143:12">reg_info</name><operator pos:start="143:13" pos:end="143:13">.</operator><name pos:start="143:14" pos:end="143:18">index</name></name> <operator pos:start="143:20" pos:end="143:20">=</operator> <name pos:start="143:22" pos:end="143:49">VFIO_PCI_CONFIG_REGION_INDEX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:75"><expr pos:start="147:5" pos:end="147:74"><name pos:start="147:5" pos:end="147:7">ret</name> <operator pos:start="147:9" pos:end="147:9">=</operator> <call pos:start="147:11" pos:end="147:74"><name pos:start="147:11" pos:end="147:15">ioctl</name><argument_list pos:start="147:16" pos:end="147:74">(<argument pos:start="147:17" pos:end="147:33"><expr pos:start="147:17" pos:end="147:33"><name pos:start="147:17" pos:end="147:33"><name pos:start="147:17" pos:end="147:20">vdev</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:30">vbasedev</name><operator pos:start="147:31" pos:end="147:31">.</operator><name pos:start="147:32" pos:end="147:33">fd</name></name></expr></argument>, <argument pos:start="147:36" pos:end="147:62"><expr pos:start="147:36" pos:end="147:62"><name pos:start="147:36" pos:end="147:62">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="147:65" pos:end="147:73"><expr pos:start="147:65" pos:end="147:73"><operator pos:start="147:65" pos:end="147:65">&amp;</operator><name pos:start="147:66" pos:end="147:73">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:12">(<expr pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">ret</name></expr>)</condition> <block pos:start="149:14" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:19">

        <expr_stmt pos:start="151:9" pos:end="151:60"><expr pos:start="151:9" pos:end="151:59"><call pos:start="151:9" pos:end="151:59"><name pos:start="151:9" pos:end="151:20">error_report</name><argument_list pos:start="151:21" pos:end="151:59">(<argument pos:start="151:22" pos:end="151:58"><expr pos:start="151:22" pos:end="151:58"><literal type="string" pos:start="151:22" pos:end="151:58">"vfio: Error getting config info: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:19">goto <name pos:start="153:14" pos:end="153:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="163:64"><expr pos:start="159:5" pos:end="163:63"><call pos:start="159:5" pos:end="163:63"><name pos:start="159:5" pos:end="159:32">trace_vfio_get_device_config</name><argument_list pos:start="159:33" pos:end="163:63">(<argument pos:start="159:34" pos:end="159:37"><expr pos:start="159:34" pos:end="159:37"><name pos:start="159:34" pos:end="159:37">name</name></expr></argument>, <argument pos:start="159:40" pos:end="159:67"><expr pos:start="159:40" pos:end="159:67"><operator pos:start="159:40" pos:end="159:40">(</operator><name pos:start="159:41" pos:end="159:48">unsigned</name> <name pos:start="159:50" pos:end="159:53">long</name><operator pos:start="159:54" pos:end="159:54">)</operator><name pos:start="159:55" pos:end="159:67"><name pos:start="159:55" pos:end="159:62">reg_info</name><operator pos:start="159:63" pos:end="159:63">.</operator><name pos:start="159:64" pos:end="159:67">size</name></name></expr></argument>,

                                 <argument pos:start="161:34" pos:end="161:63"><expr pos:start="161:34" pos:end="161:63"><operator pos:start="161:34" pos:end="161:34">(</operator><name pos:start="161:35" pos:end="161:42">unsigned</name> <name pos:start="161:44" pos:end="161:47">long</name><operator pos:start="161:48" pos:end="161:48">)</operator><name pos:start="161:49" pos:end="161:63"><name pos:start="161:49" pos:end="161:56">reg_info</name><operator pos:start="161:57" pos:end="161:57">.</operator><name pos:start="161:58" pos:end="161:63">offset</name></name></expr></argument>,

                                 <argument pos:start="163:34" pos:end="163:62"><expr pos:start="163:34" pos:end="163:62"><operator pos:start="163:34" pos:end="163:34">(</operator><name pos:start="163:35" pos:end="163:42">unsigned</name> <name pos:start="163:44" pos:end="163:47">long</name><operator pos:start="163:48" pos:end="163:48">)</operator><name pos:start="163:49" pos:end="163:62"><name pos:start="163:49" pos:end="163:56">reg_info</name><operator pos:start="163:57" pos:end="163:57">.</operator><name pos:start="163:58" pos:end="163:62">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:38"><expr pos:start="167:5" pos:end="167:37"><name pos:start="167:5" pos:end="167:21"><name pos:start="167:5" pos:end="167:8">vdev</name><operator pos:start="167:9" pos:end="167:10">-&gt;</operator><name pos:start="167:11" pos:end="167:21">config_size</name></name> <operator pos:start="167:23" pos:end="167:23">=</operator> <name pos:start="167:25" pos:end="167:37"><name pos:start="167:25" pos:end="167:32">reg_info</name><operator pos:start="167:33" pos:end="167:33">.</operator><name pos:start="167:34" pos:end="167:37">size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="173:5"><if pos:start="169:5" pos:end="173:5">if <condition pos:start="169:8" pos:end="169:51">(<expr pos:start="169:9" pos:end="169:50"><name pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:12">vdev</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:25">config_size</name></name> <operator pos:start="169:27" pos:end="169:28">==</operator> <name pos:start="169:30" pos:end="169:50">PCI_CONFIG_SPACE_SIZE</name></expr>)</condition> <block pos:start="169:53" pos:end="173:5">{<block_content pos:start="171:9" pos:end="171:56">

        <expr_stmt pos:start="171:9" pos:end="171:56"><expr pos:start="171:9" pos:end="171:55"><name pos:start="171:9" pos:end="171:30"><name pos:start="171:9" pos:end="171:12">vdev</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:18">pdev</name><operator pos:start="171:19" pos:end="171:19">.</operator><name pos:start="171:20" pos:end="171:30">cap_present</name></name> <operator pos:start="171:32" pos:end="171:33">&amp;=</operator> <operator pos:start="171:35" pos:end="171:35">~</operator><name pos:start="171:36" pos:end="171:55">QEMU_PCI_CAP_EXPRESS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:42"><expr pos:start="175:5" pos:end="175:41"><name pos:start="175:5" pos:end="175:23"><name pos:start="175:5" pos:end="175:8">vdev</name><operator pos:start="175:9" pos:end="175:10">-&gt;</operator><name pos:start="175:11" pos:end="175:23">config_offset</name></name> <operator pos:start="175:25" pos:end="175:25">=</operator> <name pos:start="175:27" pos:end="175:41"><name pos:start="175:27" pos:end="175:34">reg_info</name><operator pos:start="175:35" pos:end="175:35">.</operator><name pos:start="175:36" pos:end="175:41">offset</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="179:5" pos:end="257:5"><if pos:start="179:5" pos:end="257:5">if <condition pos:start="179:8" pos:end="181:57">(<expr pos:start="179:9" pos:end="181:56"><operator pos:start="179:9" pos:end="179:9">(</operator><name pos:start="179:10" pos:end="179:23"><name pos:start="179:10" pos:end="179:13">vdev</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:23">features</name></name> <operator pos:start="179:25" pos:end="179:25">&amp;</operator> <name pos:start="179:27" pos:end="179:49">VFIO_FEATURE_ENABLE_VGA</name><operator pos:start="179:50" pos:end="179:50">)</operator> <operator pos:start="179:52" pos:end="179:53">&amp;&amp;</operator>

        <name pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:16">dev_info</name><operator pos:start="181:17" pos:end="181:17">.</operator><name pos:start="181:18" pos:end="181:28">num_regions</name></name> <operator pos:start="181:30" pos:end="181:30">&gt;</operator> <name pos:start="181:32" pos:end="181:56">VFIO_PCI_VGA_REGION_INDEX</name></expr>)</condition> <block pos:start="181:59" pos:end="257:5">{<block_content pos:start="183:9" pos:end="255:29">

        <decl_stmt pos:start="183:9" pos:end="189:11"><decl pos:start="183:9" pos:end="189:10"><type pos:start="183:9" pos:end="183:31"><name pos:start="183:9" pos:end="183:31"><name pos:start="183:9" pos:end="183:14">struct</name> <name pos:start="183:16" pos:end="183:31">vfio_region_info</name></name></type> <name pos:start="183:33" pos:end="183:40">vga_info</name> <init pos:start="183:42" pos:end="189:10">= <expr pos:start="183:44" pos:end="189:10"><block pos:start="183:44" pos:end="189:10">{

            <expr pos:start="185:13" pos:end="185:37"><operator pos:start="185:13" pos:end="185:13">.</operator><name pos:start="185:14" pos:end="185:18">argsz</name> <operator pos:start="185:20" pos:end="185:20">=</operator> <sizeof pos:start="185:22" pos:end="185:37">sizeof<argument_list pos:start="185:28" pos:end="185:37">(<argument pos:start="185:29" pos:end="185:36"><expr pos:start="185:29" pos:end="185:36"><name pos:start="185:29" pos:end="185:36">vga_info</name></expr></argument>)</argument_list></sizeof></expr>,

            <expr pos:start="187:13" pos:end="187:46"><operator pos:start="187:13" pos:end="187:13">.</operator><name pos:start="187:14" pos:end="187:18">index</name> <operator pos:start="187:20" pos:end="187:20">=</operator> <name pos:start="187:22" pos:end="187:46">VFIO_PCI_VGA_REGION_INDEX</name></expr>,

         }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:79"><expr pos:start="193:9" pos:end="193:78"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:78"><name pos:start="193:15" pos:end="193:19">ioctl</name><argument_list pos:start="193:20" pos:end="193:78">(<argument pos:start="193:21" pos:end="193:37"><expr pos:start="193:21" pos:end="193:37"><name pos:start="193:21" pos:end="193:37"><name pos:start="193:21" pos:end="193:24">vdev</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:34">vbasedev</name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:37">fd</name></name></expr></argument>, <argument pos:start="193:40" pos:end="193:66"><expr pos:start="193:40" pos:end="193:66"><name pos:start="193:40" pos:end="193:66">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="193:69" pos:end="193:77"><expr pos:start="193:69" pos:end="193:77"><operator pos:start="193:69" pos:end="193:69">&amp;</operator><name pos:start="193:70" pos:end="193:77">vga_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="203:9"><if pos:start="195:9" pos:end="203:9">if <condition pos:start="195:12" pos:end="195:16">(<expr pos:start="195:13" pos:end="195:15"><name pos:start="195:13" pos:end="195:15">ret</name></expr>)</condition> <block pos:start="195:18" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:23">

            <expr_stmt pos:start="197:13" pos:end="199:73"><expr pos:start="197:13" pos:end="199:72"><call pos:start="197:13" pos:end="199:72"><name pos:start="197:13" pos:end="197:24">error_report</name><argument_list pos:start="197:25" pos:end="199:72">(

                <argument pos:start="199:17" pos:end="199:71"><expr pos:start="199:17" pos:end="199:71"><literal type="string" pos:start="199:17" pos:end="199:71">"vfio: Device does not support requested feature x-vga"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="201:13" pos:end="201:23">goto <name pos:start="201:18" pos:end="201:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="207:9" pos:end="221:9"><if pos:start="207:9" pos:end="221:9">if <condition pos:start="207:12" pos:end="211:40">(<expr pos:start="207:13" pos:end="211:39"><operator pos:start="207:13" pos:end="207:13">!</operator><operator pos:start="207:14" pos:end="207:14">(</operator><name pos:start="207:15" pos:end="207:28"><name pos:start="207:15" pos:end="207:22">vga_info</name><operator pos:start="207:23" pos:end="207:23">.</operator><name pos:start="207:24" pos:end="207:28">flags</name></name> <operator pos:start="207:30" pos:end="207:30">&amp;</operator> <name pos:start="207:32" pos:end="207:57">VFIO_REGION_INFO_FLAG_READ</name><operator pos:start="207:58" pos:end="207:58">)</operator> <operator pos:start="207:60" pos:end="207:61">||</operator>

            <operator pos:start="209:13" pos:end="209:13">!</operator><operator pos:start="209:14" pos:end="209:14">(</operator><name pos:start="209:15" pos:end="209:28"><name pos:start="209:15" pos:end="209:22">vga_info</name><operator pos:start="209:23" pos:end="209:23">.</operator><name pos:start="209:24" pos:end="209:28">flags</name></name> <operator pos:start="209:30" pos:end="209:30">&amp;</operator> <name pos:start="209:32" pos:end="209:58">VFIO_REGION_INFO_FLAG_WRITE</name><operator pos:start="209:59" pos:end="209:59">)</operator> <operator pos:start="209:61" pos:end="209:62">||</operator>

            <name pos:start="211:13" pos:end="211:25"><name pos:start="211:13" pos:end="211:20">vga_info</name><operator pos:start="211:21" pos:end="211:21">.</operator><name pos:start="211:22" pos:end="211:25">size</name></name> <operator pos:start="211:27" pos:end="211:27">&lt;</operator> <literal type="number" pos:start="211:29" pos:end="211:37">0xbffff</literal> <operator pos:start="211:37" pos:end="211:37">+</operator> <literal type="number" pos:start="211:39" pos:end="211:39">1</literal></expr>)</condition> <block pos:start="211:42" pos:end="221:9">{<block_content pos:start="213:13" pos:end="219:23">

            <expr_stmt pos:start="213:13" pos:end="217:55"><expr pos:start="213:13" pos:end="217:54"><call pos:start="213:13" pos:end="217:54"><name pos:start="213:13" pos:end="213:24">error_report</name><argument_list pos:start="213:25" pos:end="217:54">(<argument pos:start="213:26" pos:end="213:77"><expr pos:start="213:26" pos:end="213:77"><literal type="string" pos:start="213:26" pos:end="213:77">"vfio: Unexpected VGA info, flags 0x%lx, size 0x%lx"</literal></expr></argument>,

                         <argument pos:start="215:26" pos:end="215:54"><expr pos:start="215:26" pos:end="215:54"><operator pos:start="215:26" pos:end="215:26">(</operator><name pos:start="215:27" pos:end="215:34">unsigned</name> <name pos:start="215:36" pos:end="215:39">long</name><operator pos:start="215:40" pos:end="215:40">)</operator><name pos:start="215:41" pos:end="215:54"><name pos:start="215:41" pos:end="215:48">vga_info</name><operator pos:start="215:49" pos:end="215:49">.</operator><name pos:start="215:50" pos:end="215:54">flags</name></name></expr></argument>,

                         <argument pos:start="217:26" pos:end="217:53"><expr pos:start="217:26" pos:end="217:53"><operator pos:start="217:26" pos:end="217:26">(</operator><name pos:start="217:27" pos:end="217:34">unsigned</name> <name pos:start="217:36" pos:end="217:39">long</name><operator pos:start="217:40" pos:end="217:40">)</operator><name pos:start="217:41" pos:end="217:53"><name pos:start="217:41" pos:end="217:48">vga_info</name><operator pos:start="217:49" pos:end="217:49">.</operator><name pos:start="217:50" pos:end="217:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="219:13" pos:end="219:23">goto <name pos:start="219:18" pos:end="219:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:46"><expr pos:start="225:9" pos:end="225:45"><name pos:start="225:9" pos:end="225:27"><name pos:start="225:9" pos:end="225:12">vdev</name><operator pos:start="225:13" pos:end="225:14">-&gt;</operator><name pos:start="225:15" pos:end="225:17">vga</name><operator pos:start="225:18" pos:end="225:18">.</operator><name pos:start="225:19" pos:end="225:27">fd_offset</name></name> <operator pos:start="225:29" pos:end="225:29">=</operator> <name pos:start="225:31" pos:end="225:45"><name pos:start="225:31" pos:end="225:38">vga_info</name><operator pos:start="225:39" pos:end="225:39">.</operator><name pos:start="225:40" pos:end="225:45">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:41"><expr pos:start="227:9" pos:end="227:40"><name pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:12">vdev</name><operator pos:start="227:13" pos:end="227:14">-&gt;</operator><name pos:start="227:15" pos:end="227:17">vga</name><operator pos:start="227:18" pos:end="227:18">.</operator><name pos:start="227:19" pos:end="227:20">fd</name></name> <operator pos:start="227:22" pos:end="227:22">=</operator> <name pos:start="227:24" pos:end="227:40"><name pos:start="227:24" pos:end="227:27">vdev</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:37">vbasedev</name><operator pos:start="227:38" pos:end="227:38">.</operator><name pos:start="227:39" pos:end="227:40">fd</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="231:9" pos:end="231:74"><expr pos:start="231:9" pos:end="231:73"><name pos:start="231:9" pos:end="231:42"><name pos:start="231:9" pos:end="231:12">vdev</name><operator pos:start="231:13" pos:end="231:14">-&gt;</operator><name pos:start="231:15" pos:end="231:17">vga</name><operator pos:start="231:18" pos:end="231:18">.</operator><name pos:start="231:19" pos:end="231:24">region</name><index pos:start="231:25" pos:end="231:42">[<expr pos:start="231:26" pos:end="231:41"><name pos:start="231:26" pos:end="231:41">QEMU_PCI_VGA_MEM</name></expr>]</index></name><operator pos:start="231:43" pos:end="231:43">.</operator><name pos:start="231:44" pos:end="231:49">offset</name> <operator pos:start="231:51" pos:end="231:51">=</operator> <name pos:start="231:53" pos:end="231:73">QEMU_PCI_VGA_MEM_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:65"><expr pos:start="233:9" pos:end="233:64"><name pos:start="233:9" pos:end="233:42"><name pos:start="233:9" pos:end="233:12">vdev</name><operator pos:start="233:13" pos:end="233:14">-&gt;</operator><name pos:start="233:15" pos:end="233:17">vga</name><operator pos:start="233:18" pos:end="233:18">.</operator><name pos:start="233:19" pos:end="233:24">region</name><index pos:start="233:25" pos:end="233:42">[<expr pos:start="233:26" pos:end="233:41"><name pos:start="233:26" pos:end="233:41">QEMU_PCI_VGA_MEM</name></expr>]</index></name><operator pos:start="233:43" pos:end="233:43">.</operator><name pos:start="233:44" pos:end="233:45">nr</name> <operator pos:start="233:47" pos:end="233:47">=</operator> <name pos:start="233:49" pos:end="233:64">QEMU_PCI_VGA_MEM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:63"><expr pos:start="235:9" pos:end="235:62"><call pos:start="235:9" pos:end="235:62"><name pos:start="235:9" pos:end="235:18">QLIST_INIT</name><argument_list pos:start="235:19" pos:end="235:62">(<argument pos:start="235:20" pos:end="235:61"><expr pos:start="235:20" pos:end="235:61"><operator pos:start="235:20" pos:end="235:20">&amp;</operator><name pos:start="235:21" pos:end="235:54"><name pos:start="235:21" pos:end="235:24">vdev</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:29">vga</name><operator pos:start="235:30" pos:end="235:30">.</operator><name pos:start="235:31" pos:end="235:36">region</name><index pos:start="235:37" pos:end="235:54">[<expr pos:start="235:38" pos:end="235:53"><name pos:start="235:38" pos:end="235:53">QEMU_PCI_VGA_MEM</name></expr>]</index></name><operator pos:start="235:55" pos:end="235:55">.</operator><name pos:start="235:56" pos:end="235:61">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="239:9" pos:end="239:78"><expr pos:start="239:9" pos:end="239:77"><name pos:start="239:9" pos:end="239:44"><name pos:start="239:9" pos:end="239:12">vdev</name><operator pos:start="239:13" pos:end="239:14">-&gt;</operator><name pos:start="239:15" pos:end="239:17">vga</name><operator pos:start="239:18" pos:end="239:18">.</operator><name pos:start="239:19" pos:end="239:24">region</name><index pos:start="239:25" pos:end="239:44">[<expr pos:start="239:26" pos:end="239:43"><name pos:start="239:26" pos:end="239:43">QEMU_PCI_VGA_IO_LO</name></expr>]</index></name><operator pos:start="239:45" pos:end="239:45">.</operator><name pos:start="239:46" pos:end="239:51">offset</name> <operator pos:start="239:53" pos:end="239:53">=</operator> <name pos:start="239:55" pos:end="239:77">QEMU_PCI_VGA_IO_LO_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:69"><expr pos:start="241:9" pos:end="241:68"><name pos:start="241:9" pos:end="241:44"><name pos:start="241:9" pos:end="241:12">vdev</name><operator pos:start="241:13" pos:end="241:14">-&gt;</operator><name pos:start="241:15" pos:end="241:17">vga</name><operator pos:start="241:18" pos:end="241:18">.</operator><name pos:start="241:19" pos:end="241:24">region</name><index pos:start="241:25" pos:end="241:44">[<expr pos:start="241:26" pos:end="241:43"><name pos:start="241:26" pos:end="241:43">QEMU_PCI_VGA_IO_LO</name></expr>]</index></name><operator pos:start="241:45" pos:end="241:45">.</operator><name pos:start="241:46" pos:end="241:47">nr</name> <operator pos:start="241:49" pos:end="241:49">=</operator> <name pos:start="241:51" pos:end="241:68">QEMU_PCI_VGA_IO_LO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:65"><expr pos:start="243:9" pos:end="243:64"><call pos:start="243:9" pos:end="243:64"><name pos:start="243:9" pos:end="243:18">QLIST_INIT</name><argument_list pos:start="243:19" pos:end="243:64">(<argument pos:start="243:20" pos:end="243:63"><expr pos:start="243:20" pos:end="243:63"><operator pos:start="243:20" pos:end="243:20">&amp;</operator><name pos:start="243:21" pos:end="243:56"><name pos:start="243:21" pos:end="243:24">vdev</name><operator pos:start="243:25" pos:end="243:26">-&gt;</operator><name pos:start="243:27" pos:end="243:29">vga</name><operator pos:start="243:30" pos:end="243:30">.</operator><name pos:start="243:31" pos:end="243:36">region</name><index pos:start="243:37" pos:end="243:56">[<expr pos:start="243:38" pos:end="243:55"><name pos:start="243:38" pos:end="243:55">QEMU_PCI_VGA_IO_LO</name></expr>]</index></name><operator pos:start="243:57" pos:end="243:57">.</operator><name pos:start="243:58" pos:end="243:63">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="247:9" pos:end="247:78"><expr pos:start="247:9" pos:end="247:77"><name pos:start="247:9" pos:end="247:44"><name pos:start="247:9" pos:end="247:12">vdev</name><operator pos:start="247:13" pos:end="247:14">-&gt;</operator><name pos:start="247:15" pos:end="247:17">vga</name><operator pos:start="247:18" pos:end="247:18">.</operator><name pos:start="247:19" pos:end="247:24">region</name><index pos:start="247:25" pos:end="247:44">[<expr pos:start="247:26" pos:end="247:43"><name pos:start="247:26" pos:end="247:43">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="247:45" pos:end="247:45">.</operator><name pos:start="247:46" pos:end="247:51">offset</name> <operator pos:start="247:53" pos:end="247:53">=</operator> <name pos:start="247:55" pos:end="247:77">QEMU_PCI_VGA_IO_HI_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:69"><expr pos:start="249:9" pos:end="249:68"><name pos:start="249:9" pos:end="249:44"><name pos:start="249:9" pos:end="249:12">vdev</name><operator pos:start="249:13" pos:end="249:14">-&gt;</operator><name pos:start="249:15" pos:end="249:17">vga</name><operator pos:start="249:18" pos:end="249:18">.</operator><name pos:start="249:19" pos:end="249:24">region</name><index pos:start="249:25" pos:end="249:44">[<expr pos:start="249:26" pos:end="249:43"><name pos:start="249:26" pos:end="249:43">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="249:45" pos:end="249:45">.</operator><name pos:start="249:46" pos:end="249:47">nr</name> <operator pos:start="249:49" pos:end="249:49">=</operator> <name pos:start="249:51" pos:end="249:68">QEMU_PCI_VGA_IO_HI</name></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:65"><expr pos:start="251:9" pos:end="251:64"><call pos:start="251:9" pos:end="251:64"><name pos:start="251:9" pos:end="251:18">QLIST_INIT</name><argument_list pos:start="251:19" pos:end="251:64">(<argument pos:start="251:20" pos:end="251:63"><expr pos:start="251:20" pos:end="251:63"><operator pos:start="251:20" pos:end="251:20">&amp;</operator><name pos:start="251:21" pos:end="251:56"><name pos:start="251:21" pos:end="251:24">vdev</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:29">vga</name><operator pos:start="251:30" pos:end="251:30">.</operator><name pos:start="251:31" pos:end="251:36">region</name><index pos:start="251:37" pos:end="251:56">[<expr pos:start="251:38" pos:end="251:55"><name pos:start="251:38" pos:end="251:55">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="251:57" pos:end="251:57">.</operator><name pos:start="251:58" pos:end="251:63">quirks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="255:9" pos:end="255:29"><expr pos:start="255:9" pos:end="255:28"><name pos:start="255:9" pos:end="255:21"><name pos:start="255:9" pos:end="255:12">vdev</name><operator pos:start="255:13" pos:end="255:14">-&gt;</operator><name pos:start="255:15" pos:end="255:21">has_vga</name></name> <operator pos:start="255:23" pos:end="255:23">=</operator> <name pos:start="255:25" pos:end="255:28">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:44"><expr pos:start="259:5" pos:end="259:43"><name pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:12">irq_info</name><operator pos:start="259:13" pos:end="259:13">.</operator><name pos:start="259:14" pos:end="259:18">index</name></name> <operator pos:start="259:20" pos:end="259:20">=</operator> <name pos:start="259:22" pos:end="259:43">VFIO_PCI_ERR_IRQ_INDEX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:72"><expr pos:start="263:5" pos:end="263:71"><name pos:start="263:5" pos:end="263:7">ret</name> <operator pos:start="263:9" pos:end="263:9">=</operator> <call pos:start="263:11" pos:end="263:71"><name pos:start="263:11" pos:end="263:15">ioctl</name><argument_list pos:start="263:16" pos:end="263:71">(<argument pos:start="263:17" pos:end="263:33"><expr pos:start="263:17" pos:end="263:33"><name pos:start="263:17" pos:end="263:33"><name pos:start="263:17" pos:end="263:20">vdev</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:30">vbasedev</name><operator pos:start="263:31" pos:end="263:31">.</operator><name pos:start="263:32" pos:end="263:33">fd</name></name></expr></argument>, <argument pos:start="263:36" pos:end="263:59"><expr pos:start="263:36" pos:end="263:59"><name pos:start="263:36" pos:end="263:59">VFIO_DEVICE_GET_IRQ_INFO</name></expr></argument>, <argument pos:start="263:62" pos:end="263:70"><expr pos:start="263:62" pos:end="263:70"><operator pos:start="263:62" pos:end="263:62">&amp;</operator><name pos:start="263:63" pos:end="263:70">irq_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="265:5" pos:end="287:5"><if pos:start="265:5" pos:end="273:5">if <condition pos:start="265:8" pos:end="265:12">(<expr pos:start="265:9" pos:end="265:11"><name pos:start="265:9" pos:end="265:11">ret</name></expr>)</condition> <block pos:start="265:14" pos:end="273:5">{<block_content pos:start="269:9" pos:end="271:16">

        <comment type="block" pos:start="267:9" pos:end="267:63">/* This can fail for an old kernel or legacy PCI dev */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:53"><expr pos:start="269:9" pos:end="269:52"><call pos:start="269:9" pos:end="269:52"><name pos:start="269:9" pos:end="269:50">trace_vfio_get_device_get_irq_info_failure</name><argument_list pos:start="269:51" pos:end="269:52">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:16"><expr pos:start="271:9" pos:end="271:15"><name pos:start="271:9" pos:end="271:11">ret</name> <operator pos:start="271:13" pos:end="271:13">=</operator> <literal type="number" pos:start="271:15" pos:end="271:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="273:7" pos:end="277:5">else if <condition pos:start="273:15" pos:end="273:35">(<expr pos:start="273:16" pos:end="273:34"><name pos:start="273:16" pos:end="273:29"><name pos:start="273:16" pos:end="273:23">irq_info</name><operator pos:start="273:24" pos:end="273:24">.</operator><name pos:start="273:25" pos:end="273:29">count</name></name> <operator pos:start="273:31" pos:end="273:32">==</operator> <literal type="number" pos:start="273:34" pos:end="273:34">1</literal></expr>)</condition> <block pos:start="273:37" pos:end="277:5">{<block_content pos:start="275:9" pos:end="275:29">

        <expr_stmt pos:start="275:9" pos:end="275:29"><expr pos:start="275:9" pos:end="275:28"><name pos:start="275:9" pos:end="275:21"><name pos:start="275:9" pos:end="275:12">vdev</name><operator pos:start="275:13" pos:end="275:14">-&gt;</operator><name pos:start="275:15" pos:end="275:21">pci_aer</name></name> <operator pos:start="275:23" pos:end="275:23">=</operator> <name pos:start="275:25" pos:end="275:28">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="277:7" pos:end="287:5">else <block pos:start="277:12" pos:end="287:5">{<block_content pos:start="279:9" pos:end="285:42">

        <expr_stmt pos:start="279:9" pos:end="285:42"><expr pos:start="279:9" pos:end="285:41"><call pos:start="279:9" pos:end="285:41"><name pos:start="279:9" pos:end="279:20">error_report</name><argument_list pos:start="279:21" pos:end="285:41">(<argument pos:start="279:22" pos:end="281:69"><expr pos:start="279:22" pos:end="281:69"><literal type="string" pos:start="279:22" pos:end="279:47">"vfio: %04x:%02x:%02x.%x "</literal>

                     <literal type="string" pos:start="281:22" pos:end="281:69">"Could not enable error recovery for the device"</literal></expr></argument>,

                     <argument pos:start="283:22" pos:end="283:38"><expr pos:start="283:22" pos:end="283:38"><name pos:start="283:22" pos:end="283:38"><name pos:start="283:22" pos:end="283:25">vdev</name><operator pos:start="283:26" pos:end="283:27">-&gt;</operator><name pos:start="283:28" pos:end="283:31">host</name><operator pos:start="283:32" pos:end="283:32">.</operator><name pos:start="283:33" pos:end="283:38">domain</name></name></expr></argument>, <argument pos:start="283:41" pos:end="283:54"><expr pos:start="283:41" pos:end="283:54"><name pos:start="283:41" pos:end="283:54"><name pos:start="283:41" pos:end="283:44">vdev</name><operator pos:start="283:45" pos:end="283:46">-&gt;</operator><name pos:start="283:47" pos:end="283:50">host</name><operator pos:start="283:51" pos:end="283:51">.</operator><name pos:start="283:52" pos:end="283:54">bus</name></name></expr></argument>, <argument pos:start="283:57" pos:end="283:71"><expr pos:start="283:57" pos:end="283:71"><name pos:start="283:57" pos:end="283:71"><name pos:start="283:57" pos:end="283:60">vdev</name><operator pos:start="283:61" pos:end="283:62">-&gt;</operator><name pos:start="283:63" pos:end="283:66">host</name><operator pos:start="283:67" pos:end="283:67">.</operator><name pos:start="283:68" pos:end="283:71">slot</name></name></expr></argument>,

                     <argument pos:start="285:22" pos:end="285:40"><expr pos:start="285:22" pos:end="285:40"><name pos:start="285:22" pos:end="285:40"><name pos:start="285:22" pos:end="285:25">vdev</name><operator pos:start="285:26" pos:end="285:27">-&gt;</operator><name pos:start="285:28" pos:end="285:31">host</name><operator pos:start="285:32" pos:end="285:32">.</operator><name pos:start="285:33" pos:end="285:40">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="291:1" pos:end="291:6"><name pos:start="291:1" pos:end="291:5">error</name>:</label>

    <if_stmt pos:start="293:5" pos:end="301:5"><if pos:start="293:5" pos:end="301:5">if <condition pos:start="293:8" pos:end="293:12">(<expr pos:start="293:9" pos:end="293:11"><name pos:start="293:9" pos:end="293:11">ret</name></expr>)</condition> <block pos:start="293:14" pos:end="301:5">{<block_content pos:start="295:9" pos:end="299:33">

        <expr_stmt pos:start="295:9" pos:end="295:33"><expr pos:start="295:9" pos:end="295:32"><call pos:start="295:9" pos:end="295:32"><name pos:start="295:9" pos:end="295:20">QLIST_REMOVE</name><argument_list pos:start="295:21" pos:end="295:32">(<argument pos:start="295:22" pos:end="295:25"><expr pos:start="295:22" pos:end="295:25"><name pos:start="295:22" pos:end="295:25">vdev</name></expr></argument>, <argument pos:start="295:28" pos:end="295:31"><expr pos:start="295:28" pos:end="295:31"><name pos:start="295:28" pos:end="295:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:36"><expr pos:start="297:9" pos:end="297:35"><name pos:start="297:9" pos:end="297:28"><name pos:start="297:9" pos:end="297:12">vdev</name><operator pos:start="297:13" pos:end="297:14">-&gt;</operator><name pos:start="297:15" pos:end="297:22">vbasedev</name><operator pos:start="297:23" pos:end="297:23">.</operator><name pos:start="297:24" pos:end="297:28">group</name></name> <operator pos:start="297:30" pos:end="297:30">=</operator> <name pos:start="297:32" pos:end="297:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:33"><expr pos:start="299:9" pos:end="299:32"><call pos:start="299:9" pos:end="299:32"><name pos:start="299:9" pos:end="299:13">close</name><argument_list pos:start="299:14" pos:end="299:32">(<argument pos:start="299:15" pos:end="299:31"><expr pos:start="299:15" pos:end="299:31"><name pos:start="299:15" pos:end="299:31"><name pos:start="299:15" pos:end="299:18">vdev</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:28">vbasedev</name><operator pos:start="299:29" pos:end="299:29">.</operator><name pos:start="299:30" pos:end="299:31">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="303:5" pos:end="303:15">return <expr pos:start="303:12" pos:end="303:14"><name pos:start="303:12" pos:end="303:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
