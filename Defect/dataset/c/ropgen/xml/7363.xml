<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7363.c" pos:tabs="8"><function pos:start="1:1" pos:end="1269:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_mtc0</name><parameter_list pos:start="1:21" pos:end="1:67">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:44">TCGv</name></type> <name pos:start="1:46" pos:end="1:48">arg</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:57"><decl pos:start="1:51" pos:end="1:57"><type pos:start="1:51" pos:end="1:57"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:57">reg</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:66"><decl pos:start="1:60" pos:end="1:66"><type pos:start="1:60" pos:end="1:66"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:66">sel</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1269:1">{<block_content pos:start="5:5" pos:end="1267:57">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">rn</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><literal type="string" pos:start="5:22" pos:end="5:30">"invalid"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:36"><if pos:start="9:5" pos:end="11:36">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sel</name> <operator pos:start="9:13" pos:end="9:14">!=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">check_insn</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ctx</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="17:23"><if pos:start="15:5" pos:end="17:23">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:18">use_icount</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:23"><block_content pos:start="17:9" pos:end="17:23">

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><call pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:20">gen_io_start</name><argument_list pos:start="17:21" pos:end="17:22">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="21:5" pos:end="1245:5">switch <condition pos:start="21:12" pos:end="21:16">(<expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">reg</name></expr>)</condition> <block pos:start="21:18" pos:end="1245:5">{<block_content pos:start="23:5" pos:end="1243:30">

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">0</literal></expr>:</case>

        <switch pos:start="25:9" pos:end="69:9">switch <condition pos:start="25:16" pos:end="25:20">(<expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">sel</name></expr>)</condition> <block pos:start="25:22" pos:end="69:9">{<block_content pos:start="27:9" pos:end="67:35">

        <case pos:start="27:9" pos:end="27:15">case <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:48"><expr pos:start="29:13" pos:end="29:47"><call pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:33">gen_helper_mtc0_index</name><argument_list pos:start="29:34" pos:end="29:47">(<argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:41">cpu_env</name></expr></argument>, <argument pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:25"><expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:14">rn</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="string" pos:start="31:18" pos:end="31:24">"Index"</literal></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:15">case <expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:47"><call pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:21">CP0_CHECK</name><argument_list pos:start="37:22" pos:end="37:47">(<argument pos:start="37:23" pos:end="37:46"><expr pos:start="37:23" pos:end="37:46"><name pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:25">ctx</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:37">insn_flags</name></name> <operator pos:start="37:39" pos:end="37:39">&amp;</operator> <name pos:start="37:41" pos:end="37:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:53"><expr pos:start="39:13" pos:end="39:52"><call pos:start="39:13" pos:end="39:52"><name pos:start="39:13" pos:end="39:38">gen_helper_mtc0_mvpcontrol</name><argument_list pos:start="39:39" pos:end="39:52">(<argument pos:start="39:40" pos:end="39:46"><expr pos:start="39:40" pos:end="39:46"><name pos:start="39:40" pos:end="39:46">cpu_env</name></expr></argument>, <argument pos:start="39:49" pos:end="39:51"><expr pos:start="39:49" pos:end="39:51"><name pos:start="39:49" pos:end="39:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:14">rn</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="string" pos:start="41:18" pos:end="41:29">"MVPControl"</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">2</literal></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:48"><expr pos:start="47:13" pos:end="47:47"><call pos:start="47:13" pos:end="47:47"><name pos:start="47:13" pos:end="47:21">CP0_CHECK</name><argument_list pos:start="47:22" pos:end="47:47">(<argument pos:start="47:23" pos:end="47:46"><expr pos:start="47:23" pos:end="47:46"><name pos:start="47:23" pos:end="47:37"><name pos:start="47:23" pos:end="47:25">ctx</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:37">insn_flags</name></name> <operator pos:start="47:39" pos:end="47:39">&amp;</operator> <name pos:start="47:41" pos:end="47:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:25">/* ignored */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:14">rn</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="string" pos:start="51:18" pos:end="51:27">"MVPConf0"</literal></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:15">case <expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">3</literal></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><call pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:21">CP0_CHECK</name><argument_list pos:start="57:22" pos:end="57:47">(<argument pos:start="57:23" pos:end="57:46"><expr pos:start="57:23" pos:end="57:46"><name pos:start="57:23" pos:end="57:37"><name pos:start="57:23" pos:end="57:25">ctx</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:37">insn_flags</name></name> <operator pos:start="57:39" pos:end="57:39">&amp;</operator> <name pos:start="57:41" pos:end="57:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="59:13" pos:end="59:25">/* ignored */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:28"><expr pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:14">rn</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="string" pos:start="61:18" pos:end="61:27">"MVPConf1"</literal></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <default pos:start="65:9" pos:end="65:16">default:</default>

            <goto pos:start="67:13" pos:end="67:35">goto <name pos:start="67:18" pos:end="67:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">1</literal></expr>:</case>

        <switch pos:start="75:9" pos:end="159:9">switch <condition pos:start="75:16" pos:end="75:20">(<expr pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">sel</name></expr>)</condition> <block pos:start="75:22" pos:end="159:9">{<block_content pos:start="77:9" pos:end="157:35">

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>:</case>

            <comment type="block" pos:start="79:13" pos:end="79:25">/* ignored */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:26"><expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:14">rn</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="string" pos:start="81:18" pos:end="81:25">"Random"</literal></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:15">case <expr pos:start="85:14" pos:end="85:14"><literal type="number" pos:start="85:14" pos:end="85:14">1</literal></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:48"><expr pos:start="87:13" pos:end="87:47"><call pos:start="87:13" pos:end="87:47"><name pos:start="87:13" pos:end="87:21">CP0_CHECK</name><argument_list pos:start="87:22" pos:end="87:47">(<argument pos:start="87:23" pos:end="87:46"><expr pos:start="87:23" pos:end="87:46"><name pos:start="87:23" pos:end="87:37"><name pos:start="87:23" pos:end="87:25">ctx</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:37">insn_flags</name></name> <operator pos:start="87:39" pos:end="87:39">&amp;</operator> <name pos:start="87:41" pos:end="87:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><call pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:38">gen_helper_mtc0_vpecontrol</name><argument_list pos:start="89:39" pos:end="89:52">(<argument pos:start="89:40" pos:end="89:46"><expr pos:start="89:40" pos:end="89:46"><name pos:start="89:40" pos:end="89:46">cpu_env</name></expr></argument>, <argument pos:start="89:49" pos:end="89:51"><expr pos:start="89:49" pos:end="89:51"><name pos:start="89:49" pos:end="89:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:30"><expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:14">rn</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="string" pos:start="91:18" pos:end="91:29">"VPEControl"</literal></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:15">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">2</literal></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><call pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:21">CP0_CHECK</name><argument_list pos:start="97:22" pos:end="97:47">(<argument pos:start="97:23" pos:end="97:46"><expr pos:start="97:23" pos:end="97:46"><name pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:25">ctx</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:37">insn_flags</name></name> <operator pos:start="97:39" pos:end="97:39">&amp;</operator> <name pos:start="97:41" pos:end="97:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:51"><expr pos:start="99:13" pos:end="99:50"><call pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:36">gen_helper_mtc0_vpeconf0</name><argument_list pos:start="99:37" pos:end="99:50">(<argument pos:start="99:38" pos:end="99:44"><expr pos:start="99:38" pos:end="99:44"><name pos:start="99:38" pos:end="99:44">cpu_env</name></expr></argument>, <argument pos:start="99:47" pos:end="99:49"><expr pos:start="99:47" pos:end="99:49"><name pos:start="99:47" pos:end="99:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:28"><expr pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:14">rn</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="string" pos:start="101:18" pos:end="101:27">"VPEConf0"</literal></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:15">case <expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">3</literal></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:48"><expr pos:start="107:13" pos:end="107:47"><call pos:start="107:13" pos:end="107:47"><name pos:start="107:13" pos:end="107:21">CP0_CHECK</name><argument_list pos:start="107:22" pos:end="107:47">(<argument pos:start="107:23" pos:end="107:46"><expr pos:start="107:23" pos:end="107:46"><name pos:start="107:23" pos:end="107:37"><name pos:start="107:23" pos:end="107:25">ctx</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:37">insn_flags</name></name> <operator pos:start="107:39" pos:end="107:39">&amp;</operator> <name pos:start="107:41" pos:end="107:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:51"><expr pos:start="109:13" pos:end="109:50"><call pos:start="109:13" pos:end="109:50"><name pos:start="109:13" pos:end="109:36">gen_helper_mtc0_vpeconf1</name><argument_list pos:start="109:37" pos:end="109:50">(<argument pos:start="109:38" pos:end="109:44"><expr pos:start="109:38" pos:end="109:44"><name pos:start="109:38" pos:end="109:44">cpu_env</name></expr></argument>, <argument pos:start="109:47" pos:end="109:49"><expr pos:start="109:47" pos:end="109:49"><name pos:start="109:47" pos:end="109:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:28"><expr pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:14">rn</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="string" pos:start="111:18" pos:end="111:27">"VPEConf1"</literal></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:15">case <expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">4</literal></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><call pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:21">CP0_CHECK</name><argument_list pos:start="117:22" pos:end="117:47">(<argument pos:start="117:23" pos:end="117:46"><expr pos:start="117:23" pos:end="117:46"><name pos:start="117:23" pos:end="117:37"><name pos:start="117:23" pos:end="117:25">ctx</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:37">insn_flags</name></name> <operator pos:start="117:39" pos:end="117:39">&amp;</operator> <name pos:start="117:41" pos:end="117:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:49"><expr pos:start="119:13" pos:end="119:48"><call pos:start="119:13" pos:end="119:48"><name pos:start="119:13" pos:end="119:34">gen_helper_mtc0_yqmask</name><argument_list pos:start="119:35" pos:end="119:48">(<argument pos:start="119:36" pos:end="119:42"><expr pos:start="119:36" pos:end="119:42"><name pos:start="119:36" pos:end="119:42">cpu_env</name></expr></argument>, <argument pos:start="119:45" pos:end="119:47"><expr pos:start="119:45" pos:end="119:47"><name pos:start="119:45" pos:end="119:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:26"><expr pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:14">rn</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="string" pos:start="121:18" pos:end="121:25">"YQMask"</literal></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:15">case <expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">5</literal></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><call pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:21">CP0_CHECK</name><argument_list pos:start="127:22" pos:end="127:47">(<argument pos:start="127:23" pos:end="127:46"><expr pos:start="127:23" pos:end="127:46"><name pos:start="127:23" pos:end="127:37"><name pos:start="127:23" pos:end="127:25">ctx</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:37">insn_flags</name></name> <operator pos:start="127:39" pos:end="127:39">&amp;</operator> <name pos:start="127:41" pos:end="127:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:75"><expr pos:start="129:13" pos:end="129:74"><call pos:start="129:13" pos:end="129:74"><name pos:start="129:13" pos:end="129:28">gen_mtc0_store64</name><argument_list pos:start="129:29" pos:end="129:74">(<argument pos:start="129:30" pos:end="129:32"><expr pos:start="129:30" pos:end="129:32"><name pos:start="129:30" pos:end="129:32">arg</name></expr></argument>, <argument pos:start="129:35" pos:end="129:73"><expr pos:start="129:35" pos:end="129:73"><call pos:start="129:35" pos:end="129:73"><name pos:start="129:35" pos:end="129:42">offsetof</name><argument_list pos:start="129:43" pos:end="129:73">(<argument pos:start="129:44" pos:end="129:55"><expr pos:start="129:44" pos:end="129:55"><name pos:start="129:44" pos:end="129:55">CPUMIPSState</name></expr></argument>, <argument pos:start="129:58" pos:end="129:72"><expr pos:start="129:58" pos:end="129:72"><name pos:start="129:58" pos:end="129:72">CP0_VPESchedule</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:31"><expr pos:start="131:13" pos:end="131:30"><name pos:start="131:13" pos:end="131:14">rn</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="string" pos:start="131:18" pos:end="131:30">"VPESchedule"</literal></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:15">case <expr pos:start="135:14" pos:end="135:14"><literal type="number" pos:start="135:14" pos:end="135:14">6</literal></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:48"><expr pos:start="137:13" pos:end="137:47"><call pos:start="137:13" pos:end="137:47"><name pos:start="137:13" pos:end="137:21">CP0_CHECK</name><argument_list pos:start="137:22" pos:end="137:47">(<argument pos:start="137:23" pos:end="137:46"><expr pos:start="137:23" pos:end="137:46"><name pos:start="137:23" pos:end="137:37"><name pos:start="137:23" pos:end="137:25">ctx</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:37">insn_flags</name></name> <operator pos:start="137:39" pos:end="137:39">&amp;</operator> <name pos:start="137:41" pos:end="137:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:76"><expr pos:start="139:13" pos:end="139:75"><call pos:start="139:13" pos:end="139:75"><name pos:start="139:13" pos:end="139:28">gen_mtc0_store64</name><argument_list pos:start="139:29" pos:end="139:75">(<argument pos:start="139:30" pos:end="139:32"><expr pos:start="139:30" pos:end="139:32"><name pos:start="139:30" pos:end="139:32">arg</name></expr></argument>, <argument pos:start="139:35" pos:end="139:74"><expr pos:start="139:35" pos:end="139:74"><call pos:start="139:35" pos:end="139:74"><name pos:start="139:35" pos:end="139:42">offsetof</name><argument_list pos:start="139:43" pos:end="139:74">(<argument pos:start="139:44" pos:end="139:55"><expr pos:start="139:44" pos:end="139:55"><name pos:start="139:44" pos:end="139:55">CPUMIPSState</name></expr></argument>, <argument pos:start="139:58" pos:end="139:73"><expr pos:start="139:58" pos:end="139:73"><name pos:start="139:58" pos:end="139:73">CP0_VPEScheFBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:32"><expr pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:14">rn</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <literal type="string" pos:start="141:18" pos:end="141:31">"VPEScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:15">case <expr pos:start="145:14" pos:end="145:14"><literal type="number" pos:start="145:14" pos:end="145:14">7</literal></expr>:</case>

            <expr_stmt pos:start="147:13" pos:end="147:48"><expr pos:start="147:13" pos:end="147:47"><call pos:start="147:13" pos:end="147:47"><name pos:start="147:13" pos:end="147:21">CP0_CHECK</name><argument_list pos:start="147:22" pos:end="147:47">(<argument pos:start="147:23" pos:end="147:46"><expr pos:start="147:23" pos:end="147:46"><name pos:start="147:23" pos:end="147:37"><name pos:start="147:23" pos:end="147:25">ctx</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:37">insn_flags</name></name> <operator pos:start="147:39" pos:end="147:39">&amp;</operator> <name pos:start="147:41" pos:end="147:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:49"><expr pos:start="149:13" pos:end="149:48"><call pos:start="149:13" pos:end="149:48"><name pos:start="149:13" pos:end="149:34">gen_helper_mtc0_vpeopt</name><argument_list pos:start="149:35" pos:end="149:48">(<argument pos:start="149:36" pos:end="149:42"><expr pos:start="149:36" pos:end="149:42"><name pos:start="149:36" pos:end="149:42">cpu_env</name></expr></argument>, <argument pos:start="149:45" pos:end="149:47"><expr pos:start="149:45" pos:end="149:47"><name pos:start="149:45" pos:end="149:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:26"><expr pos:start="151:13" pos:end="151:25"><name pos:start="151:13" pos:end="151:14">rn</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="string" pos:start="151:18" pos:end="151:25">"VPEOpt"</literal></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <default pos:start="155:9" pos:end="155:16">default:</default>

            <goto pos:start="157:13" pos:end="157:35">goto <name pos:start="157:18" pos:end="157:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:11">case <expr pos:start="163:10" pos:end="163:10"><literal type="number" pos:start="163:10" pos:end="163:10">2</literal></expr>:</case>

        <switch pos:start="165:9" pos:end="249:9">switch <condition pos:start="165:16" pos:end="165:20">(<expr pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">sel</name></expr>)</condition> <block pos:start="165:22" pos:end="249:9">{<block_content pos:start="167:9" pos:end="247:35">

        <case pos:start="167:9" pos:end="167:15">case <expr pos:start="167:14" pos:end="167:14"><literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="169:51"><expr pos:start="169:13" pos:end="169:50"><call pos:start="169:13" pos:end="169:50"><name pos:start="169:13" pos:end="169:36">gen_helper_mtc0_entrylo0</name><argument_list pos:start="169:37" pos:end="169:50">(<argument pos:start="169:38" pos:end="169:44"><expr pos:start="169:38" pos:end="169:44"><name pos:start="169:38" pos:end="169:44">cpu_env</name></expr></argument>, <argument pos:start="169:47" pos:end="169:49"><expr pos:start="169:47" pos:end="169:49"><name pos:start="169:47" pos:end="169:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:28"><expr pos:start="171:13" pos:end="171:27"><name pos:start="171:13" pos:end="171:14">rn</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <literal type="string" pos:start="171:18" pos:end="171:27">"EntryLo0"</literal></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:15">case <expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">1</literal></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:48"><expr pos:start="177:13" pos:end="177:47"><call pos:start="177:13" pos:end="177:47"><name pos:start="177:13" pos:end="177:21">CP0_CHECK</name><argument_list pos:start="177:22" pos:end="177:47">(<argument pos:start="177:23" pos:end="177:46"><expr pos:start="177:23" pos:end="177:46"><name pos:start="177:23" pos:end="177:37"><name pos:start="177:23" pos:end="177:25">ctx</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:37">insn_flags</name></name> <operator pos:start="177:39" pos:end="177:39">&amp;</operator> <name pos:start="177:41" pos:end="177:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:51"><expr pos:start="179:13" pos:end="179:50"><call pos:start="179:13" pos:end="179:50"><name pos:start="179:13" pos:end="179:36">gen_helper_mtc0_tcstatus</name><argument_list pos:start="179:37" pos:end="179:50">(<argument pos:start="179:38" pos:end="179:44"><expr pos:start="179:38" pos:end="179:44"><name pos:start="179:38" pos:end="179:44">cpu_env</name></expr></argument>, <argument pos:start="179:47" pos:end="179:49"><expr pos:start="179:47" pos:end="179:49"><name pos:start="179:47" pos:end="179:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:28"><expr pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:14">rn</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <literal type="string" pos:start="181:18" pos:end="181:27">"TCStatus"</literal></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:15">case <expr pos:start="185:14" pos:end="185:14"><literal type="number" pos:start="185:14" pos:end="185:14">2</literal></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:48"><expr pos:start="187:13" pos:end="187:47"><call pos:start="187:13" pos:end="187:47"><name pos:start="187:13" pos:end="187:21">CP0_CHECK</name><argument_list pos:start="187:22" pos:end="187:47">(<argument pos:start="187:23" pos:end="187:46"><expr pos:start="187:23" pos:end="187:46"><name pos:start="187:23" pos:end="187:37"><name pos:start="187:23" pos:end="187:25">ctx</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:37">insn_flags</name></name> <operator pos:start="187:39" pos:end="187:39">&amp;</operator> <name pos:start="187:41" pos:end="187:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:49"><expr pos:start="189:13" pos:end="189:48"><call pos:start="189:13" pos:end="189:48"><name pos:start="189:13" pos:end="189:34">gen_helper_mtc0_tcbind</name><argument_list pos:start="189:35" pos:end="189:48">(<argument pos:start="189:36" pos:end="189:42"><expr pos:start="189:36" pos:end="189:42"><name pos:start="189:36" pos:end="189:42">cpu_env</name></expr></argument>, <argument pos:start="189:45" pos:end="189:47"><expr pos:start="189:45" pos:end="189:47"><name pos:start="189:45" pos:end="189:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:26"><expr pos:start="191:13" pos:end="191:25"><name pos:start="191:13" pos:end="191:14">rn</name> <operator pos:start="191:16" pos:end="191:16">=</operator> <literal type="string" pos:start="191:18" pos:end="191:25">"TCBind"</literal></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:15">case <expr pos:start="195:14" pos:end="195:14"><literal type="number" pos:start="195:14" pos:end="195:14">3</literal></expr>:</case>

            <expr_stmt pos:start="197:13" pos:end="197:48"><expr pos:start="197:13" pos:end="197:47"><call pos:start="197:13" pos:end="197:47"><name pos:start="197:13" pos:end="197:21">CP0_CHECK</name><argument_list pos:start="197:22" pos:end="197:47">(<argument pos:start="197:23" pos:end="197:46"><expr pos:start="197:23" pos:end="197:46"><name pos:start="197:23" pos:end="197:37"><name pos:start="197:23" pos:end="197:25">ctx</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:37">insn_flags</name></name> <operator pos:start="197:39" pos:end="197:39">&amp;</operator> <name pos:start="197:41" pos:end="197:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:52"><expr pos:start="199:13" pos:end="199:51"><call pos:start="199:13" pos:end="199:51"><name pos:start="199:13" pos:end="199:37">gen_helper_mtc0_tcrestart</name><argument_list pos:start="199:38" pos:end="199:51">(<argument pos:start="199:39" pos:end="199:45"><expr pos:start="199:39" pos:end="199:45"><name pos:start="199:39" pos:end="199:45">cpu_env</name></expr></argument>, <argument pos:start="199:48" pos:end="199:50"><expr pos:start="199:48" pos:end="199:50"><name pos:start="199:48" pos:end="199:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:29"><expr pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:14">rn</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="string" pos:start="201:18" pos:end="201:28">"TCRestart"</literal></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:15">case <expr pos:start="205:14" pos:end="205:14"><literal type="number" pos:start="205:14" pos:end="205:14">4</literal></expr>:</case>

            <expr_stmt pos:start="207:13" pos:end="207:48"><expr pos:start="207:13" pos:end="207:47"><call pos:start="207:13" pos:end="207:47"><name pos:start="207:13" pos:end="207:21">CP0_CHECK</name><argument_list pos:start="207:22" pos:end="207:47">(<argument pos:start="207:23" pos:end="207:46"><expr pos:start="207:23" pos:end="207:46"><name pos:start="207:23" pos:end="207:37"><name pos:start="207:23" pos:end="207:25">ctx</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:37">insn_flags</name></name> <operator pos:start="207:39" pos:end="207:39">&amp;</operator> <name pos:start="207:41" pos:end="207:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:49"><expr pos:start="209:13" pos:end="209:48"><call pos:start="209:13" pos:end="209:48"><name pos:start="209:13" pos:end="209:34">gen_helper_mtc0_tchalt</name><argument_list pos:start="209:35" pos:end="209:48">(<argument pos:start="209:36" pos:end="209:42"><expr pos:start="209:36" pos:end="209:42"><name pos:start="209:36" pos:end="209:42">cpu_env</name></expr></argument>, <argument pos:start="209:45" pos:end="209:47"><expr pos:start="209:45" pos:end="209:47"><name pos:start="209:45" pos:end="209:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:26"><expr pos:start="211:13" pos:end="211:25"><name pos:start="211:13" pos:end="211:14">rn</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <literal type="string" pos:start="211:18" pos:end="211:25">"TCHalt"</literal></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        <case pos:start="215:9" pos:end="215:15">case <expr pos:start="215:14" pos:end="215:14"><literal type="number" pos:start="215:14" pos:end="215:14">5</literal></expr>:</case>

            <expr_stmt pos:start="217:13" pos:end="217:48"><expr pos:start="217:13" pos:end="217:47"><call pos:start="217:13" pos:end="217:47"><name pos:start="217:13" pos:end="217:21">CP0_CHECK</name><argument_list pos:start="217:22" pos:end="217:47">(<argument pos:start="217:23" pos:end="217:46"><expr pos:start="217:23" pos:end="217:46"><name pos:start="217:23" pos:end="217:37"><name pos:start="217:23" pos:end="217:25">ctx</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:37">insn_flags</name></name> <operator pos:start="217:39" pos:end="217:39">&amp;</operator> <name pos:start="217:41" pos:end="217:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:52"><expr pos:start="219:13" pos:end="219:51"><call pos:start="219:13" pos:end="219:51"><name pos:start="219:13" pos:end="219:37">gen_helper_mtc0_tccontext</name><argument_list pos:start="219:38" pos:end="219:51">(<argument pos:start="219:39" pos:end="219:45"><expr pos:start="219:39" pos:end="219:45"><name pos:start="219:39" pos:end="219:45">cpu_env</name></expr></argument>, <argument pos:start="219:48" pos:end="219:50"><expr pos:start="219:48" pos:end="219:50"><name pos:start="219:48" pos:end="219:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:29"><expr pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:14">rn</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <literal type="string" pos:start="221:18" pos:end="221:28">"TCContext"</literal></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:15">case <expr pos:start="225:14" pos:end="225:14"><literal type="number" pos:start="225:14" pos:end="225:14">6</literal></expr>:</case>

            <expr_stmt pos:start="227:13" pos:end="227:48"><expr pos:start="227:13" pos:end="227:47"><call pos:start="227:13" pos:end="227:47"><name pos:start="227:13" pos:end="227:21">CP0_CHECK</name><argument_list pos:start="227:22" pos:end="227:47">(<argument pos:start="227:23" pos:end="227:46"><expr pos:start="227:23" pos:end="227:46"><name pos:start="227:23" pos:end="227:37"><name pos:start="227:23" pos:end="227:25">ctx</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:37">insn_flags</name></name> <operator pos:start="227:39" pos:end="227:39">&amp;</operator> <name pos:start="227:41" pos:end="227:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:53"><expr pos:start="229:13" pos:end="229:52"><call pos:start="229:13" pos:end="229:52"><name pos:start="229:13" pos:end="229:38">gen_helper_mtc0_tcschedule</name><argument_list pos:start="229:39" pos:end="229:52">(<argument pos:start="229:40" pos:end="229:46"><expr pos:start="229:40" pos:end="229:46"><name pos:start="229:40" pos:end="229:46">cpu_env</name></expr></argument>, <argument pos:start="229:49" pos:end="229:51"><expr pos:start="229:49" pos:end="229:51"><name pos:start="229:49" pos:end="229:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:30"><expr pos:start="231:13" pos:end="231:29"><name pos:start="231:13" pos:end="231:14">rn</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <literal type="string" pos:start="231:18" pos:end="231:29">"TCSchedule"</literal></expr>;</expr_stmt>

            <break pos:start="233:13" pos:end="233:18">break;</break>

        <case pos:start="235:9" pos:end="235:15">case <expr pos:start="235:14" pos:end="235:14"><literal type="number" pos:start="235:14" pos:end="235:14">7</literal></expr>:</case>

            <expr_stmt pos:start="237:13" pos:end="237:48"><expr pos:start="237:13" pos:end="237:47"><call pos:start="237:13" pos:end="237:47"><name pos:start="237:13" pos:end="237:21">CP0_CHECK</name><argument_list pos:start="237:22" pos:end="237:47">(<argument pos:start="237:23" pos:end="237:46"><expr pos:start="237:23" pos:end="237:46"><name pos:start="237:23" pos:end="237:37"><name pos:start="237:23" pos:end="237:25">ctx</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:37">insn_flags</name></name> <operator pos:start="237:39" pos:end="237:39">&amp;</operator> <name pos:start="237:41" pos:end="237:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:54"><expr pos:start="239:13" pos:end="239:53"><call pos:start="239:13" pos:end="239:53"><name pos:start="239:13" pos:end="239:39">gen_helper_mtc0_tcschefback</name><argument_list pos:start="239:40" pos:end="239:53">(<argument pos:start="239:41" pos:end="239:47"><expr pos:start="239:41" pos:end="239:47"><name pos:start="239:41" pos:end="239:47">cpu_env</name></expr></argument>, <argument pos:start="239:50" pos:end="239:52"><expr pos:start="239:50" pos:end="239:52"><name pos:start="239:50" pos:end="239:52">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:31"><expr pos:start="241:13" pos:end="241:30"><name pos:start="241:13" pos:end="241:14">rn</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <literal type="string" pos:start="241:18" pos:end="241:30">"TCScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        <default pos:start="245:9" pos:end="245:16">default:</default>

            <goto pos:start="247:13" pos:end="247:35">goto <name pos:start="247:18" pos:end="247:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    <case pos:start="253:5" pos:end="253:11">case <expr pos:start="253:10" pos:end="253:10"><literal type="number" pos:start="253:10" pos:end="253:10">3</literal></expr>:</case>

        <switch pos:start="255:9" pos:end="269:9">switch <condition pos:start="255:16" pos:end="255:20">(<expr pos:start="255:17" pos:end="255:19"><name pos:start="255:17" pos:end="255:19">sel</name></expr>)</condition> <block pos:start="255:22" pos:end="269:9">{<block_content pos:start="257:9" pos:end="267:35">

        <case pos:start="257:9" pos:end="257:15">case <expr pos:start="257:14" pos:end="257:14"><literal type="number" pos:start="257:14" pos:end="257:14">0</literal></expr>:</case>

            <expr_stmt pos:start="259:13" pos:end="259:51"><expr pos:start="259:13" pos:end="259:50"><call pos:start="259:13" pos:end="259:50"><name pos:start="259:13" pos:end="259:36">gen_helper_mtc0_entrylo1</name><argument_list pos:start="259:37" pos:end="259:50">(<argument pos:start="259:38" pos:end="259:44"><expr pos:start="259:38" pos:end="259:44"><name pos:start="259:38" pos:end="259:44">cpu_env</name></expr></argument>, <argument pos:start="259:47" pos:end="259:49"><expr pos:start="259:47" pos:end="259:49"><name pos:start="259:47" pos:end="259:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:28"><expr pos:start="261:13" pos:end="261:27"><name pos:start="261:13" pos:end="261:14">rn</name> <operator pos:start="261:16" pos:end="261:16">=</operator> <literal type="string" pos:start="261:18" pos:end="261:27">"EntryLo1"</literal></expr>;</expr_stmt>

            <break pos:start="263:13" pos:end="263:18">break;</break>

        <default pos:start="265:9" pos:end="265:16">default:</default>

            <goto pos:start="267:13" pos:end="267:35">goto <name pos:start="267:18" pos:end="267:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="271:9" pos:end="271:14">break;</break>

    <case pos:start="273:5" pos:end="273:11">case <expr pos:start="273:10" pos:end="273:10"><literal type="number" pos:start="273:10" pos:end="273:10">4</literal></expr>:</case>

        <switch pos:start="275:9" pos:end="311:9">switch <condition pos:start="275:16" pos:end="275:20">(<expr pos:start="275:17" pos:end="275:19"><name pos:start="275:17" pos:end="275:19">sel</name></expr>)</condition> <block pos:start="275:22" pos:end="311:9">{<block_content pos:start="277:9" pos:end="309:35">

        <case pos:start="277:9" pos:end="277:15">case <expr pos:start="277:14" pos:end="277:14"><literal type="number" pos:start="277:14" pos:end="277:14">0</literal></expr>:</case>

            <expr_stmt pos:start="279:13" pos:end="279:50"><expr pos:start="279:13" pos:end="279:49"><call pos:start="279:13" pos:end="279:49"><name pos:start="279:13" pos:end="279:35">gen_helper_mtc0_context</name><argument_list pos:start="279:36" pos:end="279:49">(<argument pos:start="279:37" pos:end="279:43"><expr pos:start="279:37" pos:end="279:43"><name pos:start="279:37" pos:end="279:43">cpu_env</name></expr></argument>, <argument pos:start="279:46" pos:end="279:48"><expr pos:start="279:46" pos:end="279:48"><name pos:start="279:46" pos:end="279:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:27"><expr pos:start="281:13" pos:end="281:26"><name pos:start="281:13" pos:end="281:14">rn</name> <operator pos:start="281:16" pos:end="281:16">=</operator> <literal type="string" pos:start="281:18" pos:end="281:26">"Context"</literal></expr>;</expr_stmt>

            <break pos:start="283:13" pos:end="283:18">break;</break>

        <case pos:start="285:9" pos:end="285:15">case <expr pos:start="285:14" pos:end="285:14"><literal type="number" pos:start="285:14" pos:end="285:14">1</literal></expr>:</case>

<comment type="line" pos:start="287:1" pos:end="287:78">//            gen_helper_mtc0_contextconfig(cpu_env, arg); /* SmartMIPS ASE */</comment>

            <expr_stmt pos:start="289:13" pos:end="289:33"><expr pos:start="289:13" pos:end="289:32"><name pos:start="289:13" pos:end="289:14">rn</name> <operator pos:start="289:16" pos:end="289:16">=</operator> <literal type="string" pos:start="289:18" pos:end="289:32">"ContextConfig"</literal></expr>;</expr_stmt>

            <goto pos:start="291:13" pos:end="291:35">goto <name pos:start="291:18" pos:end="291:34">cp0_unimplemented</name>;</goto>

<comment type="line" pos:start="293:1" pos:end="293:20">//            break;</comment>

        <case pos:start="295:9" pos:end="295:15">case <expr pos:start="295:14" pos:end="295:14"><literal type="number" pos:start="295:14" pos:end="295:14">2</literal></expr>:</case>

            <expr_stmt pos:start="297:13" pos:end="297:33"><expr pos:start="297:13" pos:end="297:32"><call pos:start="297:13" pos:end="297:32"><name pos:start="297:13" pos:end="297:21">CP0_CHECK</name><argument_list pos:start="297:22" pos:end="297:32">(<argument pos:start="297:23" pos:end="297:31"><expr pos:start="297:23" pos:end="297:31"><name pos:start="297:23" pos:end="297:31"><name pos:start="297:23" pos:end="297:25">ctx</name><operator pos:start="297:26" pos:end="297:27">-&gt;</operator><name pos:start="297:28" pos:end="297:31">ulri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="301:75"><expr pos:start="299:13" pos:end="301:74"><call pos:start="299:13" pos:end="301:74"><name pos:start="299:13" pos:end="299:25">tcg_gen_st_tl</name><argument_list pos:start="299:26" pos:end="301:74">(<argument pos:start="299:27" pos:end="299:29"><expr pos:start="299:27" pos:end="299:29"><name pos:start="299:27" pos:end="299:29">arg</name></expr></argument>, <argument pos:start="299:32" pos:end="299:38"><expr pos:start="299:32" pos:end="299:38"><name pos:start="299:32" pos:end="299:38">cpu_env</name></expr></argument>,

                          <argument pos:start="301:27" pos:end="301:73"><expr pos:start="301:27" pos:end="301:73"><call pos:start="301:27" pos:end="301:73"><name pos:start="301:27" pos:end="301:34">offsetof</name><argument_list pos:start="301:35" pos:end="301:73">(<argument pos:start="301:36" pos:end="301:47"><expr pos:start="301:36" pos:end="301:47"><name pos:start="301:36" pos:end="301:47">CPUMIPSState</name></expr></argument>, <argument pos:start="301:50" pos:end="301:72"><expr pos:start="301:50" pos:end="301:72"><name pos:start="301:50" pos:end="301:72"><name pos:start="301:50" pos:end="301:58">active_tc</name><operator pos:start="301:59" pos:end="301:59">.</operator><name pos:start="301:60" pos:end="301:72">CP0_UserLocal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:29"><expr pos:start="303:13" pos:end="303:28"><name pos:start="303:13" pos:end="303:14">rn</name> <operator pos:start="303:16" pos:end="303:16">=</operator> <literal type="string" pos:start="303:18" pos:end="303:28">"UserLocal"</literal></expr>;</expr_stmt>

            <break pos:start="305:13" pos:end="305:18">break;</break>

        <default pos:start="307:9" pos:end="307:16">default:</default>

            <goto pos:start="309:13" pos:end="309:35">goto <name pos:start="309:18" pos:end="309:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="313:9" pos:end="313:14">break;</break>

    <case pos:start="315:5" pos:end="315:11">case <expr pos:start="315:10" pos:end="315:10"><literal type="number" pos:start="315:10" pos:end="315:10">5</literal></expr>:</case>

        <switch pos:start="317:9" pos:end="341:9">switch <condition pos:start="317:16" pos:end="317:20">(<expr pos:start="317:17" pos:end="317:19"><name pos:start="317:17" pos:end="317:19">sel</name></expr>)</condition> <block pos:start="317:22" pos:end="341:9">{<block_content pos:start="319:9" pos:end="339:35">

        <case pos:start="319:9" pos:end="319:15">case <expr pos:start="319:14" pos:end="319:14"><literal type="number" pos:start="319:14" pos:end="319:14">0</literal></expr>:</case>

            <expr_stmt pos:start="321:13" pos:end="321:51"><expr pos:start="321:13" pos:end="321:50"><call pos:start="321:13" pos:end="321:50"><name pos:start="321:13" pos:end="321:36">gen_helper_mtc0_pagemask</name><argument_list pos:start="321:37" pos:end="321:50">(<argument pos:start="321:38" pos:end="321:44"><expr pos:start="321:38" pos:end="321:44"><name pos:start="321:38" pos:end="321:44">cpu_env</name></expr></argument>, <argument pos:start="321:47" pos:end="321:49"><expr pos:start="321:47" pos:end="321:49"><name pos:start="321:47" pos:end="321:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:28"><expr pos:start="323:13" pos:end="323:27"><name pos:start="323:13" pos:end="323:14">rn</name> <operator pos:start="323:16" pos:end="323:16">=</operator> <literal type="string" pos:start="323:18" pos:end="323:27">"PageMask"</literal></expr>;</expr_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        <case pos:start="327:9" pos:end="327:15">case <expr pos:start="327:14" pos:end="327:14"><literal type="number" pos:start="327:14" pos:end="327:14">1</literal></expr>:</case>

            <expr_stmt pos:start="329:13" pos:end="329:42"><expr pos:start="329:13" pos:end="329:41"><call pos:start="329:13" pos:end="329:41"><name pos:start="329:13" pos:end="329:22">check_insn</name><argument_list pos:start="329:23" pos:end="329:41">(<argument pos:start="329:24" pos:end="329:26"><expr pos:start="329:24" pos:end="329:26"><name pos:start="329:24" pos:end="329:26">ctx</name></expr></argument>, <argument pos:start="329:29" pos:end="329:40"><expr pos:start="329:29" pos:end="329:40"><name pos:start="329:29" pos:end="329:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:52"><expr pos:start="331:13" pos:end="331:51"><call pos:start="331:13" pos:end="331:51"><name pos:start="331:13" pos:end="331:37">gen_helper_mtc0_pagegrain</name><argument_list pos:start="331:38" pos:end="331:51">(<argument pos:start="331:39" pos:end="331:45"><expr pos:start="331:39" pos:end="331:45"><name pos:start="331:39" pos:end="331:45">cpu_env</name></expr></argument>, <argument pos:start="331:48" pos:end="331:50"><expr pos:start="331:48" pos:end="331:50"><name pos:start="331:48" pos:end="331:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:29"><expr pos:start="333:13" pos:end="333:28"><name pos:start="333:13" pos:end="333:14">rn</name> <operator pos:start="333:16" pos:end="333:16">=</operator> <literal type="string" pos:start="333:18" pos:end="333:28">"PageGrain"</literal></expr>;</expr_stmt>

            <break pos:start="335:13" pos:end="335:18">break;</break>

        <default pos:start="337:9" pos:end="337:16">default:</default>

            <goto pos:start="339:13" pos:end="339:35">goto <name pos:start="339:18" pos:end="339:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:11">case <expr pos:start="345:10" pos:end="345:10"><literal type="number" pos:start="345:10" pos:end="345:10">6</literal></expr>:</case>

        <switch pos:start="347:9" pos:end="411:9">switch <condition pos:start="347:16" pos:end="347:20">(<expr pos:start="347:17" pos:end="347:19"><name pos:start="347:17" pos:end="347:19">sel</name></expr>)</condition> <block pos:start="347:22" pos:end="411:9">{<block_content pos:start="349:9" pos:end="409:35">

        <case pos:start="349:9" pos:end="349:15">case <expr pos:start="349:14" pos:end="349:14"><literal type="number" pos:start="349:14" pos:end="349:14">0</literal></expr>:</case>

            <expr_stmt pos:start="351:13" pos:end="351:48"><expr pos:start="351:13" pos:end="351:47"><call pos:start="351:13" pos:end="351:47"><name pos:start="351:13" pos:end="351:33">gen_helper_mtc0_wired</name><argument_list pos:start="351:34" pos:end="351:47">(<argument pos:start="351:35" pos:end="351:41"><expr pos:start="351:35" pos:end="351:41"><name pos:start="351:35" pos:end="351:41">cpu_env</name></expr></argument>, <argument pos:start="351:44" pos:end="351:46"><expr pos:start="351:44" pos:end="351:46"><name pos:start="351:44" pos:end="351:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:25"><expr pos:start="353:13" pos:end="353:24"><name pos:start="353:13" pos:end="353:14">rn</name> <operator pos:start="353:16" pos:end="353:16">=</operator> <literal type="string" pos:start="353:18" pos:end="353:24">"Wired"</literal></expr>;</expr_stmt>

            <break pos:start="355:13" pos:end="355:18">break;</break>

        <case pos:start="357:9" pos:end="357:15">case <expr pos:start="357:14" pos:end="357:14"><literal type="number" pos:start="357:14" pos:end="357:14">1</literal></expr>:</case>

            <expr_stmt pos:start="359:13" pos:end="359:42"><expr pos:start="359:13" pos:end="359:41"><call pos:start="359:13" pos:end="359:41"><name pos:start="359:13" pos:end="359:22">check_insn</name><argument_list pos:start="359:23" pos:end="359:41">(<argument pos:start="359:24" pos:end="359:26"><expr pos:start="359:24" pos:end="359:26"><name pos:start="359:24" pos:end="359:26">ctx</name></expr></argument>, <argument pos:start="359:29" pos:end="359:40"><expr pos:start="359:29" pos:end="359:40"><name pos:start="359:29" pos:end="359:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:51"><expr pos:start="361:13" pos:end="361:50"><call pos:start="361:13" pos:end="361:50"><name pos:start="361:13" pos:end="361:36">gen_helper_mtc0_srsconf0</name><argument_list pos:start="361:37" pos:end="361:50">(<argument pos:start="361:38" pos:end="361:44"><expr pos:start="361:38" pos:end="361:44"><name pos:start="361:38" pos:end="361:44">cpu_env</name></expr></argument>, <argument pos:start="361:47" pos:end="361:49"><expr pos:start="361:47" pos:end="361:49"><name pos:start="361:47" pos:end="361:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:28"><expr pos:start="363:13" pos:end="363:27"><name pos:start="363:13" pos:end="363:14">rn</name> <operator pos:start="363:16" pos:end="363:16">=</operator> <literal type="string" pos:start="363:18" pos:end="363:27">"SRSConf0"</literal></expr>;</expr_stmt>

            <break pos:start="365:13" pos:end="365:18">break;</break>

        <case pos:start="367:9" pos:end="367:15">case <expr pos:start="367:14" pos:end="367:14"><literal type="number" pos:start="367:14" pos:end="367:14">2</literal></expr>:</case>

            <expr_stmt pos:start="369:13" pos:end="369:42"><expr pos:start="369:13" pos:end="369:41"><call pos:start="369:13" pos:end="369:41"><name pos:start="369:13" pos:end="369:22">check_insn</name><argument_list pos:start="369:23" pos:end="369:41">(<argument pos:start="369:24" pos:end="369:26"><expr pos:start="369:24" pos:end="369:26"><name pos:start="369:24" pos:end="369:26">ctx</name></expr></argument>, <argument pos:start="369:29" pos:end="369:40"><expr pos:start="369:29" pos:end="369:40"><name pos:start="369:29" pos:end="369:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:51"><expr pos:start="371:13" pos:end="371:50"><call pos:start="371:13" pos:end="371:50"><name pos:start="371:13" pos:end="371:36">gen_helper_mtc0_srsconf1</name><argument_list pos:start="371:37" pos:end="371:50">(<argument pos:start="371:38" pos:end="371:44"><expr pos:start="371:38" pos:end="371:44"><name pos:start="371:38" pos:end="371:44">cpu_env</name></expr></argument>, <argument pos:start="371:47" pos:end="371:49"><expr pos:start="371:47" pos:end="371:49"><name pos:start="371:47" pos:end="371:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:28"><expr pos:start="373:13" pos:end="373:27"><name pos:start="373:13" pos:end="373:14">rn</name> <operator pos:start="373:16" pos:end="373:16">=</operator> <literal type="string" pos:start="373:18" pos:end="373:27">"SRSConf1"</literal></expr>;</expr_stmt>

            <break pos:start="375:13" pos:end="375:18">break;</break>

        <case pos:start="377:9" pos:end="377:15">case <expr pos:start="377:14" pos:end="377:14"><literal type="number" pos:start="377:14" pos:end="377:14">3</literal></expr>:</case>

            <expr_stmt pos:start="379:13" pos:end="379:42"><expr pos:start="379:13" pos:end="379:41"><call pos:start="379:13" pos:end="379:41"><name pos:start="379:13" pos:end="379:22">check_insn</name><argument_list pos:start="379:23" pos:end="379:41">(<argument pos:start="379:24" pos:end="379:26"><expr pos:start="379:24" pos:end="379:26"><name pos:start="379:24" pos:end="379:26">ctx</name></expr></argument>, <argument pos:start="379:29" pos:end="379:40"><expr pos:start="379:29" pos:end="379:40"><name pos:start="379:29" pos:end="379:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:51"><expr pos:start="381:13" pos:end="381:50"><call pos:start="381:13" pos:end="381:50"><name pos:start="381:13" pos:end="381:36">gen_helper_mtc0_srsconf2</name><argument_list pos:start="381:37" pos:end="381:50">(<argument pos:start="381:38" pos:end="381:44"><expr pos:start="381:38" pos:end="381:44"><name pos:start="381:38" pos:end="381:44">cpu_env</name></expr></argument>, <argument pos:start="381:47" pos:end="381:49"><expr pos:start="381:47" pos:end="381:49"><name pos:start="381:47" pos:end="381:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:28"><expr pos:start="383:13" pos:end="383:27"><name pos:start="383:13" pos:end="383:14">rn</name> <operator pos:start="383:16" pos:end="383:16">=</operator> <literal type="string" pos:start="383:18" pos:end="383:27">"SRSConf2"</literal></expr>;</expr_stmt>

            <break pos:start="385:13" pos:end="385:18">break;</break>

        <case pos:start="387:9" pos:end="387:15">case <expr pos:start="387:14" pos:end="387:14"><literal type="number" pos:start="387:14" pos:end="387:14">4</literal></expr>:</case>

            <expr_stmt pos:start="389:13" pos:end="389:42"><expr pos:start="389:13" pos:end="389:41"><call pos:start="389:13" pos:end="389:41"><name pos:start="389:13" pos:end="389:22">check_insn</name><argument_list pos:start="389:23" pos:end="389:41">(<argument pos:start="389:24" pos:end="389:26"><expr pos:start="389:24" pos:end="389:26"><name pos:start="389:24" pos:end="389:26">ctx</name></expr></argument>, <argument pos:start="389:29" pos:end="389:40"><expr pos:start="389:29" pos:end="389:40"><name pos:start="389:29" pos:end="389:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:51"><expr pos:start="391:13" pos:end="391:50"><call pos:start="391:13" pos:end="391:50"><name pos:start="391:13" pos:end="391:36">gen_helper_mtc0_srsconf3</name><argument_list pos:start="391:37" pos:end="391:50">(<argument pos:start="391:38" pos:end="391:44"><expr pos:start="391:38" pos:end="391:44"><name pos:start="391:38" pos:end="391:44">cpu_env</name></expr></argument>, <argument pos:start="391:47" pos:end="391:49"><expr pos:start="391:47" pos:end="391:49"><name pos:start="391:47" pos:end="391:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:28"><expr pos:start="393:13" pos:end="393:27"><name pos:start="393:13" pos:end="393:14">rn</name> <operator pos:start="393:16" pos:end="393:16">=</operator> <literal type="string" pos:start="393:18" pos:end="393:27">"SRSConf3"</literal></expr>;</expr_stmt>

            <break pos:start="395:13" pos:end="395:18">break;</break>

        <case pos:start="397:9" pos:end="397:15">case <expr pos:start="397:14" pos:end="397:14"><literal type="number" pos:start="397:14" pos:end="397:14">5</literal></expr>:</case>

            <expr_stmt pos:start="399:13" pos:end="399:42"><expr pos:start="399:13" pos:end="399:41"><call pos:start="399:13" pos:end="399:41"><name pos:start="399:13" pos:end="399:22">check_insn</name><argument_list pos:start="399:23" pos:end="399:41">(<argument pos:start="399:24" pos:end="399:26"><expr pos:start="399:24" pos:end="399:26"><name pos:start="399:24" pos:end="399:26">ctx</name></expr></argument>, <argument pos:start="399:29" pos:end="399:40"><expr pos:start="399:29" pos:end="399:40"><name pos:start="399:29" pos:end="399:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:51"><expr pos:start="401:13" pos:end="401:50"><call pos:start="401:13" pos:end="401:50"><name pos:start="401:13" pos:end="401:36">gen_helper_mtc0_srsconf4</name><argument_list pos:start="401:37" pos:end="401:50">(<argument pos:start="401:38" pos:end="401:44"><expr pos:start="401:38" pos:end="401:44"><name pos:start="401:38" pos:end="401:44">cpu_env</name></expr></argument>, <argument pos:start="401:47" pos:end="401:49"><expr pos:start="401:47" pos:end="401:49"><name pos:start="401:47" pos:end="401:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:28"><expr pos:start="403:13" pos:end="403:27"><name pos:start="403:13" pos:end="403:14">rn</name> <operator pos:start="403:16" pos:end="403:16">=</operator> <literal type="string" pos:start="403:18" pos:end="403:27">"SRSConf4"</literal></expr>;</expr_stmt>

            <break pos:start="405:13" pos:end="405:18">break;</break>

        <default pos:start="407:9" pos:end="407:16">default:</default>

            <goto pos:start="409:13" pos:end="409:35">goto <name pos:start="409:18" pos:end="409:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="413:9" pos:end="413:14">break;</break>

    <case pos:start="415:5" pos:end="415:11">case <expr pos:start="415:10" pos:end="415:10"><literal type="number" pos:start="415:10" pos:end="415:10">7</literal></expr>:</case>

        <switch pos:start="417:9" pos:end="435:9">switch <condition pos:start="417:16" pos:end="417:20">(<expr pos:start="417:17" pos:end="417:19"><name pos:start="417:17" pos:end="417:19">sel</name></expr>)</condition> <block pos:start="417:22" pos:end="435:9">{<block_content pos:start="419:9" pos:end="433:35">

        <case pos:start="419:9" pos:end="419:15">case <expr pos:start="419:14" pos:end="419:14"><literal type="number" pos:start="419:14" pos:end="419:14">0</literal></expr>:</case>

            <expr_stmt pos:start="421:13" pos:end="421:42"><expr pos:start="421:13" pos:end="421:41"><call pos:start="421:13" pos:end="421:41"><name pos:start="421:13" pos:end="421:22">check_insn</name><argument_list pos:start="421:23" pos:end="421:41">(<argument pos:start="421:24" pos:end="421:26"><expr pos:start="421:24" pos:end="421:26"><name pos:start="421:24" pos:end="421:26">ctx</name></expr></argument>, <argument pos:start="421:29" pos:end="421:40"><expr pos:start="421:29" pos:end="421:40"><name pos:start="421:29" pos:end="421:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:49"><expr pos:start="423:13" pos:end="423:48"><call pos:start="423:13" pos:end="423:48"><name pos:start="423:13" pos:end="423:34">gen_helper_mtc0_hwrena</name><argument_list pos:start="423:35" pos:end="423:48">(<argument pos:start="423:36" pos:end="423:42"><expr pos:start="423:36" pos:end="423:42"><name pos:start="423:36" pos:end="423:42">cpu_env</name></expr></argument>, <argument pos:start="423:45" pos:end="423:47"><expr pos:start="423:45" pos:end="423:47"><name pos:start="423:45" pos:end="423:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:34"><expr pos:start="425:13" pos:end="425:33"><name pos:start="425:13" pos:end="425:23"><name pos:start="425:13" pos:end="425:15">ctx</name><operator pos:start="425:16" pos:end="425:17">-&gt;</operator><name pos:start="425:18" pos:end="425:23">bstate</name></name> <operator pos:start="425:25" pos:end="425:25">=</operator> <name pos:start="425:27" pos:end="425:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:26"><expr pos:start="427:13" pos:end="427:25"><name pos:start="427:13" pos:end="427:14">rn</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <literal type="string" pos:start="427:18" pos:end="427:25">"HWREna"</literal></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <default pos:start="431:9" pos:end="431:16">default:</default>

            <goto pos:start="433:13" pos:end="433:35">goto <name pos:start="433:18" pos:end="433:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="437:9" pos:end="437:14">break;</break>

    <case pos:start="439:5" pos:end="439:11">case <expr pos:start="439:10" pos:end="439:10"><literal type="number" pos:start="439:10" pos:end="439:10">8</literal></expr>:</case>

        <switch pos:start="441:9" pos:end="471:9">switch <condition pos:start="441:16" pos:end="441:20">(<expr pos:start="441:17" pos:end="441:19"><name pos:start="441:17" pos:end="441:19">sel</name></expr>)</condition> <block pos:start="441:22" pos:end="471:9">{<block_content pos:start="443:9" pos:end="469:35">

        <case pos:start="443:9" pos:end="443:15">case <expr pos:start="443:14" pos:end="443:14"><literal type="number" pos:start="443:14" pos:end="443:14">0</literal></expr>:</case>

            <comment type="block" pos:start="445:13" pos:end="445:25">/* ignored */</comment>

            <expr_stmt pos:start="447:13" pos:end="447:28"><expr pos:start="447:13" pos:end="447:27"><name pos:start="447:13" pos:end="447:14">rn</name> <operator pos:start="447:16" pos:end="447:16">=</operator> <literal type="string" pos:start="447:18" pos:end="447:27">"BadVAddr"</literal></expr>;</expr_stmt>

            <break pos:start="449:13" pos:end="449:18">break;</break>

        <case pos:start="451:9" pos:end="451:15">case <expr pos:start="451:14" pos:end="451:14"><literal type="number" pos:start="451:14" pos:end="451:14">1</literal></expr>:</case>

            <comment type="block" pos:start="453:13" pos:end="453:25">/* ignored */</comment>

            <expr_stmt pos:start="455:13" pos:end="455:28"><expr pos:start="455:13" pos:end="455:27"><name pos:start="455:13" pos:end="455:14">rn</name> <operator pos:start="455:16" pos:end="455:16">=</operator> <literal type="string" pos:start="455:18" pos:end="455:27">"BadInstr"</literal></expr>;</expr_stmt>

            <break pos:start="457:13" pos:end="457:18">break;</break>

        <case pos:start="459:9" pos:end="459:15">case <expr pos:start="459:14" pos:end="459:14"><literal type="number" pos:start="459:14" pos:end="459:14">2</literal></expr>:</case>

            <comment type="block" pos:start="461:13" pos:end="461:25">/* ignored */</comment>

            <expr_stmt pos:start="463:13" pos:end="463:29"><expr pos:start="463:13" pos:end="463:28"><name pos:start="463:13" pos:end="463:14">rn</name> <operator pos:start="463:16" pos:end="463:16">=</operator> <literal type="string" pos:start="463:18" pos:end="463:28">"BadInstrP"</literal></expr>;</expr_stmt>

            <break pos:start="465:13" pos:end="465:18">break;</break>

        <default pos:start="467:9" pos:end="467:16">default:</default>

            <goto pos:start="469:13" pos:end="469:35">goto <name pos:start="469:18" pos:end="469:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="473:9" pos:end="473:14">break;</break>

    <case pos:start="475:5" pos:end="475:11">case <expr pos:start="475:10" pos:end="475:10"><literal type="number" pos:start="475:10" pos:end="475:10">9</literal></expr>:</case>

        <switch pos:start="477:9" pos:end="493:9">switch <condition pos:start="477:16" pos:end="477:20">(<expr pos:start="477:17" pos:end="477:19"><name pos:start="477:17" pos:end="477:19">sel</name></expr>)</condition> <block pos:start="477:22" pos:end="493:9">{<block_content pos:start="479:9" pos:end="491:35">

        <case pos:start="479:9" pos:end="479:15">case <expr pos:start="479:14" pos:end="479:14"><literal type="number" pos:start="479:14" pos:end="479:14">0</literal></expr>:</case>

            <expr_stmt pos:start="481:13" pos:end="481:48"><expr pos:start="481:13" pos:end="481:47"><call pos:start="481:13" pos:end="481:47"><name pos:start="481:13" pos:end="481:33">gen_helper_mtc0_count</name><argument_list pos:start="481:34" pos:end="481:47">(<argument pos:start="481:35" pos:end="481:41"><expr pos:start="481:35" pos:end="481:41"><name pos:start="481:35" pos:end="481:41">cpu_env</name></expr></argument>, <argument pos:start="481:44" pos:end="481:46"><expr pos:start="481:44" pos:end="481:46"><name pos:start="481:44" pos:end="481:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="483:13" pos:end="483:25"><expr pos:start="483:13" pos:end="483:24"><name pos:start="483:13" pos:end="483:14">rn</name> <operator pos:start="483:16" pos:end="483:16">=</operator> <literal type="string" pos:start="483:18" pos:end="483:24">"Count"</literal></expr>;</expr_stmt>

            <break pos:start="485:13" pos:end="485:18">break;</break>

        <comment type="block" pos:start="487:9" pos:end="487:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="489:9" pos:end="489:16">default:</default>

            <goto pos:start="491:13" pos:end="491:35">goto <name pos:start="491:18" pos:end="491:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="495:9" pos:end="495:14">break;</break>

    <case pos:start="497:5" pos:end="497:12">case <expr pos:start="497:10" pos:end="497:11"><literal type="number" pos:start="497:10" pos:end="497:11">10</literal></expr>:</case>

        <switch pos:start="499:9" pos:end="513:9">switch <condition pos:start="499:16" pos:end="499:20">(<expr pos:start="499:17" pos:end="499:19"><name pos:start="499:17" pos:end="499:19">sel</name></expr>)</condition> <block pos:start="499:22" pos:end="513:9">{<block_content pos:start="501:9" pos:end="511:35">

        <case pos:start="501:9" pos:end="501:15">case <expr pos:start="501:14" pos:end="501:14"><literal type="number" pos:start="501:14" pos:end="501:14">0</literal></expr>:</case>

            <expr_stmt pos:start="503:13" pos:end="503:50"><expr pos:start="503:13" pos:end="503:49"><call pos:start="503:13" pos:end="503:49"><name pos:start="503:13" pos:end="503:35">gen_helper_mtc0_entryhi</name><argument_list pos:start="503:36" pos:end="503:49">(<argument pos:start="503:37" pos:end="503:43"><expr pos:start="503:37" pos:end="503:43"><name pos:start="503:37" pos:end="503:43">cpu_env</name></expr></argument>, <argument pos:start="503:46" pos:end="503:48"><expr pos:start="503:46" pos:end="503:48"><name pos:start="503:46" pos:end="503:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:27"><expr pos:start="505:13" pos:end="505:26"><name pos:start="505:13" pos:end="505:14">rn</name> <operator pos:start="505:16" pos:end="505:16">=</operator> <literal type="string" pos:start="505:18" pos:end="505:26">"EntryHi"</literal></expr>;</expr_stmt>

            <break pos:start="507:13" pos:end="507:18">break;</break>

        <default pos:start="509:9" pos:end="509:16">default:</default>

            <goto pos:start="511:13" pos:end="511:35">goto <name pos:start="511:18" pos:end="511:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="515:9" pos:end="515:14">break;</break>

    <case pos:start="517:5" pos:end="517:12">case <expr pos:start="517:10" pos:end="517:11"><literal type="number" pos:start="517:10" pos:end="517:11">11</literal></expr>:</case>

        <switch pos:start="519:9" pos:end="535:9">switch <condition pos:start="519:16" pos:end="519:20">(<expr pos:start="519:17" pos:end="519:19"><name pos:start="519:17" pos:end="519:19">sel</name></expr>)</condition> <block pos:start="519:22" pos:end="535:9">{<block_content pos:start="521:9" pos:end="533:35">

        <case pos:start="521:9" pos:end="521:15">case <expr pos:start="521:14" pos:end="521:14"><literal type="number" pos:start="521:14" pos:end="521:14">0</literal></expr>:</case>

            <expr_stmt pos:start="523:13" pos:end="523:50"><expr pos:start="523:13" pos:end="523:49"><call pos:start="523:13" pos:end="523:49"><name pos:start="523:13" pos:end="523:35">gen_helper_mtc0_compare</name><argument_list pos:start="523:36" pos:end="523:49">(<argument pos:start="523:37" pos:end="523:43"><expr pos:start="523:37" pos:end="523:43"><name pos:start="523:37" pos:end="523:43">cpu_env</name></expr></argument>, <argument pos:start="523:46" pos:end="523:48"><expr pos:start="523:46" pos:end="523:48"><name pos:start="523:46" pos:end="523:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:27"><expr pos:start="525:13" pos:end="525:26"><name pos:start="525:13" pos:end="525:14">rn</name> <operator pos:start="525:16" pos:end="525:16">=</operator> <literal type="string" pos:start="525:18" pos:end="525:26">"Compare"</literal></expr>;</expr_stmt>

            <break pos:start="527:13" pos:end="527:18">break;</break>

        <comment type="block" pos:start="529:9" pos:end="529:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="531:9" pos:end="531:16">default:</default>

            <goto pos:start="533:13" pos:end="533:35">goto <name pos:start="533:18" pos:end="533:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="537:9" pos:end="537:14">break;</break>

    <case pos:start="539:5" pos:end="539:12">case <expr pos:start="539:10" pos:end="539:11"><literal type="number" pos:start="539:10" pos:end="539:11">12</literal></expr>:</case>

        <switch pos:start="541:9" pos:end="605:9">switch <condition pos:start="541:16" pos:end="541:20">(<expr pos:start="541:17" pos:end="541:19"><name pos:start="541:17" pos:end="541:19">sel</name></expr>)</condition> <block pos:start="541:22" pos:end="605:9">{<block_content pos:start="543:9" pos:end="603:35">

        <case pos:start="543:9" pos:end="543:15">case <expr pos:start="543:14" pos:end="543:14"><literal type="number" pos:start="543:14" pos:end="543:14">0</literal></expr>:</case>

            <expr_stmt pos:start="545:13" pos:end="545:35"><expr pos:start="545:13" pos:end="545:34"><call pos:start="545:13" pos:end="545:34"><name pos:start="545:13" pos:end="545:26">save_cpu_state</name><argument_list pos:start="545:27" pos:end="545:34">(<argument pos:start="545:28" pos:end="545:30"><expr pos:start="545:28" pos:end="545:30"><name pos:start="545:28" pos:end="545:30">ctx</name></expr></argument>, <argument pos:start="545:33" pos:end="545:33"><expr pos:start="545:33" pos:end="545:33"><literal type="number" pos:start="545:33" pos:end="545:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="547:13" pos:end="547:49"><expr pos:start="547:13" pos:end="547:48"><call pos:start="547:13" pos:end="547:48"><name pos:start="547:13" pos:end="547:34">gen_helper_mtc0_status</name><argument_list pos:start="547:35" pos:end="547:48">(<argument pos:start="547:36" pos:end="547:42"><expr pos:start="547:36" pos:end="547:42"><name pos:start="547:36" pos:end="547:42">cpu_env</name></expr></argument>, <argument pos:start="547:45" pos:end="547:47"><expr pos:start="547:45" pos:end="547:47"><name pos:start="547:45" pos:end="547:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="549:13" pos:end="549:74">/* BS_STOP isn't good enough here, hflags may have changed. */</comment>

            <expr_stmt pos:start="551:13" pos:end="551:37"><expr pos:start="551:13" pos:end="551:36"><call pos:start="551:13" pos:end="551:36"><name pos:start="551:13" pos:end="551:23">gen_save_pc</name><argument_list pos:start="551:24" pos:end="551:36">(<argument pos:start="551:25" pos:end="551:35"><expr pos:start="551:25" pos:end="551:35"><name pos:start="551:25" pos:end="551:31"><name pos:start="551:25" pos:end="551:27">ctx</name><operator pos:start="551:28" pos:end="551:29">-&gt;</operator><name pos:start="551:30" pos:end="551:31">pc</name></name> <operator pos:start="551:33" pos:end="551:33">+</operator> <literal type="number" pos:start="551:35" pos:end="551:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:34"><expr pos:start="553:13" pos:end="553:33"><name pos:start="553:13" pos:end="553:23"><name pos:start="553:13" pos:end="553:15">ctx</name><operator pos:start="553:16" pos:end="553:17">-&gt;</operator><name pos:start="553:18" pos:end="553:23">bstate</name></name> <operator pos:start="553:25" pos:end="553:25">=</operator> <name pos:start="553:27" pos:end="553:33">BS_EXCP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="555:13" pos:end="555:26"><expr pos:start="555:13" pos:end="555:25"><name pos:start="555:13" pos:end="555:14">rn</name> <operator pos:start="555:16" pos:end="555:16">=</operator> <literal type="string" pos:start="555:18" pos:end="555:25">"Status"</literal></expr>;</expr_stmt>

            <break pos:start="557:13" pos:end="557:18">break;</break>

        <case pos:start="559:9" pos:end="559:15">case <expr pos:start="559:14" pos:end="559:14"><literal type="number" pos:start="559:14" pos:end="559:14">1</literal></expr>:</case>

            <expr_stmt pos:start="561:13" pos:end="561:42"><expr pos:start="561:13" pos:end="561:41"><call pos:start="561:13" pos:end="561:41"><name pos:start="561:13" pos:end="561:22">check_insn</name><argument_list pos:start="561:23" pos:end="561:41">(<argument pos:start="561:24" pos:end="561:26"><expr pos:start="561:24" pos:end="561:26"><name pos:start="561:24" pos:end="561:26">ctx</name></expr></argument>, <argument pos:start="561:29" pos:end="561:40"><expr pos:start="561:29" pos:end="561:40"><name pos:start="561:29" pos:end="561:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:49"><expr pos:start="563:13" pos:end="563:48"><call pos:start="563:13" pos:end="563:48"><name pos:start="563:13" pos:end="563:34">gen_helper_mtc0_intctl</name><argument_list pos:start="563:35" pos:end="563:48">(<argument pos:start="563:36" pos:end="563:42"><expr pos:start="563:36" pos:end="563:42"><name pos:start="563:36" pos:end="563:42">cpu_env</name></expr></argument>, <argument pos:start="563:45" pos:end="563:47"><expr pos:start="563:45" pos:end="563:47"><name pos:start="563:45" pos:end="563:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="565:13" pos:end="565:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="567:13" pos:end="567:34"><expr pos:start="567:13" pos:end="567:33"><name pos:start="567:13" pos:end="567:23"><name pos:start="567:13" pos:end="567:15">ctx</name><operator pos:start="567:16" pos:end="567:17">-&gt;</operator><name pos:start="567:18" pos:end="567:23">bstate</name></name> <operator pos:start="567:25" pos:end="567:25">=</operator> <name pos:start="567:27" pos:end="567:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:26"><expr pos:start="569:13" pos:end="569:25"><name pos:start="569:13" pos:end="569:14">rn</name> <operator pos:start="569:16" pos:end="569:16">=</operator> <literal type="string" pos:start="569:18" pos:end="569:25">"IntCtl"</literal></expr>;</expr_stmt>

            <break pos:start="571:13" pos:end="571:18">break;</break>

        <case pos:start="573:9" pos:end="573:15">case <expr pos:start="573:14" pos:end="573:14"><literal type="number" pos:start="573:14" pos:end="573:14">2</literal></expr>:</case>

            <expr_stmt pos:start="575:13" pos:end="575:42"><expr pos:start="575:13" pos:end="575:41"><call pos:start="575:13" pos:end="575:41"><name pos:start="575:13" pos:end="575:22">check_insn</name><argument_list pos:start="575:23" pos:end="575:41">(<argument pos:start="575:24" pos:end="575:26"><expr pos:start="575:24" pos:end="575:26"><name pos:start="575:24" pos:end="575:26">ctx</name></expr></argument>, <argument pos:start="575:29" pos:end="575:40"><expr pos:start="575:29" pos:end="575:40"><name pos:start="575:29" pos:end="575:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="577:13" pos:end="577:49"><expr pos:start="577:13" pos:end="577:48"><call pos:start="577:13" pos:end="577:48"><name pos:start="577:13" pos:end="577:34">gen_helper_mtc0_srsctl</name><argument_list pos:start="577:35" pos:end="577:48">(<argument pos:start="577:36" pos:end="577:42"><expr pos:start="577:36" pos:end="577:42"><name pos:start="577:36" pos:end="577:42">cpu_env</name></expr></argument>, <argument pos:start="577:45" pos:end="577:47"><expr pos:start="577:45" pos:end="577:47"><name pos:start="577:45" pos:end="577:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="579:13" pos:end="579:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="581:13" pos:end="581:34"><expr pos:start="581:13" pos:end="581:33"><name pos:start="581:13" pos:end="581:23"><name pos:start="581:13" pos:end="581:15">ctx</name><operator pos:start="581:16" pos:end="581:17">-&gt;</operator><name pos:start="581:18" pos:end="581:23">bstate</name></name> <operator pos:start="581:25" pos:end="581:25">=</operator> <name pos:start="581:27" pos:end="581:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:26"><expr pos:start="583:13" pos:end="583:25"><name pos:start="583:13" pos:end="583:14">rn</name> <operator pos:start="583:16" pos:end="583:16">=</operator> <literal type="string" pos:start="583:18" pos:end="583:25">"SRSCtl"</literal></expr>;</expr_stmt>

            <break pos:start="585:13" pos:end="585:18">break;</break>

        <case pos:start="587:9" pos:end="587:15">case <expr pos:start="587:14" pos:end="587:14"><literal type="number" pos:start="587:14" pos:end="587:14">3</literal></expr>:</case>

            <expr_stmt pos:start="589:13" pos:end="589:42"><expr pos:start="589:13" pos:end="589:41"><call pos:start="589:13" pos:end="589:41"><name pos:start="589:13" pos:end="589:22">check_insn</name><argument_list pos:start="589:23" pos:end="589:41">(<argument pos:start="589:24" pos:end="589:26"><expr pos:start="589:24" pos:end="589:26"><name pos:start="589:24" pos:end="589:26">ctx</name></expr></argument>, <argument pos:start="589:29" pos:end="589:40"><expr pos:start="589:29" pos:end="589:40"><name pos:start="589:29" pos:end="589:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:70"><expr pos:start="591:13" pos:end="591:69"><call pos:start="591:13" pos:end="591:69"><name pos:start="591:13" pos:end="591:28">gen_mtc0_store32</name><argument_list pos:start="591:29" pos:end="591:69">(<argument pos:start="591:30" pos:end="591:32"><expr pos:start="591:30" pos:end="591:32"><name pos:start="591:30" pos:end="591:32">arg</name></expr></argument>, <argument pos:start="591:35" pos:end="591:68"><expr pos:start="591:35" pos:end="591:68"><call pos:start="591:35" pos:end="591:68"><name pos:start="591:35" pos:end="591:42">offsetof</name><argument_list pos:start="591:43" pos:end="591:68">(<argument pos:start="591:44" pos:end="591:55"><expr pos:start="591:44" pos:end="591:55"><name pos:start="591:44" pos:end="591:55">CPUMIPSState</name></expr></argument>, <argument pos:start="591:58" pos:end="591:67"><expr pos:start="591:58" pos:end="591:67"><name pos:start="591:58" pos:end="591:67">CP0_SRSMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="593:13" pos:end="593:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="595:13" pos:end="595:34"><expr pos:start="595:13" pos:end="595:33"><name pos:start="595:13" pos:end="595:23"><name pos:start="595:13" pos:end="595:15">ctx</name><operator pos:start="595:16" pos:end="595:17">-&gt;</operator><name pos:start="595:18" pos:end="595:23">bstate</name></name> <operator pos:start="595:25" pos:end="595:25">=</operator> <name pos:start="595:27" pos:end="595:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="597:13" pos:end="597:26"><expr pos:start="597:13" pos:end="597:25"><name pos:start="597:13" pos:end="597:14">rn</name> <operator pos:start="597:16" pos:end="597:16">=</operator> <literal type="string" pos:start="597:18" pos:end="597:25">"SRSMap"</literal></expr>;</expr_stmt>

            <break pos:start="599:13" pos:end="599:18">break;</break>

        <default pos:start="601:9" pos:end="601:16">default:</default>

            <goto pos:start="603:13" pos:end="603:35">goto <name pos:start="603:18" pos:end="603:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="607:9" pos:end="607:14">break;</break>

    <case pos:start="609:5" pos:end="609:12">case <expr pos:start="609:10" pos:end="609:11"><literal type="number" pos:start="609:10" pos:end="609:11">13</literal></expr>:</case>

        <switch pos:start="611:9" pos:end="627:9">switch <condition pos:start="611:16" pos:end="611:20">(<expr pos:start="611:17" pos:end="611:19"><name pos:start="611:17" pos:end="611:19">sel</name></expr>)</condition> <block pos:start="611:22" pos:end="627:9">{<block_content pos:start="613:9" pos:end="625:35">

        <case pos:start="613:9" pos:end="613:15">case <expr pos:start="613:14" pos:end="613:14"><literal type="number" pos:start="613:14" pos:end="613:14">0</literal></expr>:</case>

            <expr_stmt pos:start="615:13" pos:end="615:35"><expr pos:start="615:13" pos:end="615:34"><call pos:start="615:13" pos:end="615:34"><name pos:start="615:13" pos:end="615:26">save_cpu_state</name><argument_list pos:start="615:27" pos:end="615:34">(<argument pos:start="615:28" pos:end="615:30"><expr pos:start="615:28" pos:end="615:30"><name pos:start="615:28" pos:end="615:30">ctx</name></expr></argument>, <argument pos:start="615:33" pos:end="615:33"><expr pos:start="615:33" pos:end="615:33"><literal type="number" pos:start="615:33" pos:end="615:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:48"><expr pos:start="617:13" pos:end="617:47"><call pos:start="617:13" pos:end="617:47"><name pos:start="617:13" pos:end="617:33">gen_helper_mtc0_cause</name><argument_list pos:start="617:34" pos:end="617:47">(<argument pos:start="617:35" pos:end="617:41"><expr pos:start="617:35" pos:end="617:41"><name pos:start="617:35" pos:end="617:41">cpu_env</name></expr></argument>, <argument pos:start="617:44" pos:end="617:46"><expr pos:start="617:44" pos:end="617:46"><name pos:start="617:44" pos:end="617:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="619:13" pos:end="619:25"><expr pos:start="619:13" pos:end="619:24"><name pos:start="619:13" pos:end="619:14">rn</name> <operator pos:start="619:16" pos:end="619:16">=</operator> <literal type="string" pos:start="619:18" pos:end="619:24">"Cause"</literal></expr>;</expr_stmt>

            <break pos:start="621:13" pos:end="621:18">break;</break>

        <default pos:start="623:9" pos:end="623:16">default:</default>

            <goto pos:start="625:13" pos:end="625:35">goto <name pos:start="625:18" pos:end="625:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="629:9" pos:end="629:14">break;</break>

    <case pos:start="631:5" pos:end="631:12">case <expr pos:start="631:10" pos:end="631:11"><literal type="number" pos:start="631:10" pos:end="631:11">14</literal></expr>:</case>

        <switch pos:start="633:9" pos:end="647:9">switch <condition pos:start="633:16" pos:end="633:20">(<expr pos:start="633:17" pos:end="633:19"><name pos:start="633:17" pos:end="633:19">sel</name></expr>)</condition> <block pos:start="633:22" pos:end="647:9">{<block_content pos:start="635:9" pos:end="645:35">

        <case pos:start="635:9" pos:end="635:15">case <expr pos:start="635:14" pos:end="635:14"><literal type="number" pos:start="635:14" pos:end="635:14">0</literal></expr>:</case>

            <expr_stmt pos:start="637:13" pos:end="637:67"><expr pos:start="637:13" pos:end="637:66"><call pos:start="637:13" pos:end="637:66"><name pos:start="637:13" pos:end="637:28">gen_mtc0_store64</name><argument_list pos:start="637:29" pos:end="637:66">(<argument pos:start="637:30" pos:end="637:32"><expr pos:start="637:30" pos:end="637:32"><name pos:start="637:30" pos:end="637:32">arg</name></expr></argument>, <argument pos:start="637:35" pos:end="637:65"><expr pos:start="637:35" pos:end="637:65"><call pos:start="637:35" pos:end="637:65"><name pos:start="637:35" pos:end="637:42">offsetof</name><argument_list pos:start="637:43" pos:end="637:65">(<argument pos:start="637:44" pos:end="637:55"><expr pos:start="637:44" pos:end="637:55"><name pos:start="637:44" pos:end="637:55">CPUMIPSState</name></expr></argument>, <argument pos:start="637:58" pos:end="637:64"><expr pos:start="637:58" pos:end="637:64"><name pos:start="637:58" pos:end="637:64">CP0_EPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:23"><expr pos:start="639:13" pos:end="639:22"><name pos:start="639:13" pos:end="639:14">rn</name> <operator pos:start="639:16" pos:end="639:16">=</operator> <literal type="string" pos:start="639:18" pos:end="639:22">"EPC"</literal></expr>;</expr_stmt>

            <break pos:start="641:13" pos:end="641:18">break;</break>

        <default pos:start="643:9" pos:end="643:16">default:</default>

            <goto pos:start="645:13" pos:end="645:35">goto <name pos:start="645:18" pos:end="645:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="649:9" pos:end="649:14">break;</break>

    <case pos:start="651:5" pos:end="651:12">case <expr pos:start="651:10" pos:end="651:11"><literal type="number" pos:start="651:10" pos:end="651:11">15</literal></expr>:</case>

        <switch pos:start="653:9" pos:end="677:9">switch <condition pos:start="653:16" pos:end="653:20">(<expr pos:start="653:17" pos:end="653:19"><name pos:start="653:17" pos:end="653:19">sel</name></expr>)</condition> <block pos:start="653:22" pos:end="677:9">{<block_content pos:start="655:9" pos:end="675:35">

        <case pos:start="655:9" pos:end="655:15">case <expr pos:start="655:14" pos:end="655:14"><literal type="number" pos:start="655:14" pos:end="655:14">0</literal></expr>:</case>

            <comment type="block" pos:start="657:13" pos:end="657:25">/* ignored */</comment>

            <expr_stmt pos:start="659:13" pos:end="659:24"><expr pos:start="659:13" pos:end="659:23"><name pos:start="659:13" pos:end="659:14">rn</name> <operator pos:start="659:16" pos:end="659:16">=</operator> <literal type="string" pos:start="659:18" pos:end="659:23">"PRid"</literal></expr>;</expr_stmt>

            <break pos:start="661:13" pos:end="661:18">break;</break>

        <case pos:start="663:9" pos:end="663:15">case <expr pos:start="663:14" pos:end="663:14"><literal type="number" pos:start="663:14" pos:end="663:14">1</literal></expr>:</case>

            <expr_stmt pos:start="665:13" pos:end="665:42"><expr pos:start="665:13" pos:end="665:41"><call pos:start="665:13" pos:end="665:41"><name pos:start="665:13" pos:end="665:22">check_insn</name><argument_list pos:start="665:23" pos:end="665:41">(<argument pos:start="665:24" pos:end="665:26"><expr pos:start="665:24" pos:end="665:26"><name pos:start="665:24" pos:end="665:26">ctx</name></expr></argument>, <argument pos:start="665:29" pos:end="665:40"><expr pos:start="665:29" pos:end="665:40"><name pos:start="665:29" pos:end="665:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="667:13" pos:end="667:48"><expr pos:start="667:13" pos:end="667:47"><call pos:start="667:13" pos:end="667:47"><name pos:start="667:13" pos:end="667:33">gen_helper_mtc0_ebase</name><argument_list pos:start="667:34" pos:end="667:47">(<argument pos:start="667:35" pos:end="667:41"><expr pos:start="667:35" pos:end="667:41"><name pos:start="667:35" pos:end="667:41">cpu_env</name></expr></argument>, <argument pos:start="667:44" pos:end="667:46"><expr pos:start="667:44" pos:end="667:46"><name pos:start="667:44" pos:end="667:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="669:13" pos:end="669:25"><expr pos:start="669:13" pos:end="669:24"><name pos:start="669:13" pos:end="669:14">rn</name> <operator pos:start="669:16" pos:end="669:16">=</operator> <literal type="string" pos:start="669:18" pos:end="669:24">"EBase"</literal></expr>;</expr_stmt>

            <break pos:start="671:13" pos:end="671:18">break;</break>

        <default pos:start="673:9" pos:end="673:16">default:</default>

            <goto pos:start="675:13" pos:end="675:35">goto <name pos:start="675:18" pos:end="675:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="679:9" pos:end="679:14">break;</break>

    <case pos:start="681:5" pos:end="681:12">case <expr pos:start="681:10" pos:end="681:11"><literal type="number" pos:start="681:10" pos:end="681:11">16</literal></expr>:</case>

        <switch pos:start="683:9" pos:end="775:9">switch <condition pos:start="683:16" pos:end="683:20">(<expr pos:start="683:17" pos:end="683:19"><name pos:start="683:17" pos:end="683:19">sel</name></expr>)</condition> <block pos:start="683:22" pos:end="775:9">{<block_content pos:start="685:9" pos:end="773:35">

        <case pos:start="685:9" pos:end="685:15">case <expr pos:start="685:14" pos:end="685:14"><literal type="number" pos:start="685:14" pos:end="685:14">0</literal></expr>:</case>

            <expr_stmt pos:start="687:13" pos:end="687:50"><expr pos:start="687:13" pos:end="687:49"><call pos:start="687:13" pos:end="687:49"><name pos:start="687:13" pos:end="687:35">gen_helper_mtc0_config0</name><argument_list pos:start="687:36" pos:end="687:49">(<argument pos:start="687:37" pos:end="687:43"><expr pos:start="687:37" pos:end="687:43"><name pos:start="687:37" pos:end="687:43">cpu_env</name></expr></argument>, <argument pos:start="687:46" pos:end="687:48"><expr pos:start="687:46" pos:end="687:48"><name pos:start="687:46" pos:end="687:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:26"><expr pos:start="689:13" pos:end="689:25"><name pos:start="689:13" pos:end="689:14">rn</name> <operator pos:start="689:16" pos:end="689:16">=</operator> <literal type="string" pos:start="689:18" pos:end="689:25">"Config"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="691:13" pos:end="691:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="693:13" pos:end="693:34"><expr pos:start="693:13" pos:end="693:33"><name pos:start="693:13" pos:end="693:23"><name pos:start="693:13" pos:end="693:15">ctx</name><operator pos:start="693:16" pos:end="693:17">-&gt;</operator><name pos:start="693:18" pos:end="693:23">bstate</name></name> <operator pos:start="693:25" pos:end="693:25">=</operator> <name pos:start="693:27" pos:end="693:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="695:13" pos:end="695:18">break;</break>

        <case pos:start="697:9" pos:end="697:15">case <expr pos:start="697:14" pos:end="697:14"><literal type="number" pos:start="697:14" pos:end="697:14">1</literal></expr>:</case>

            <comment type="block" pos:start="699:13" pos:end="699:36">/* ignored, read only */</comment>

            <expr_stmt pos:start="701:13" pos:end="701:27"><expr pos:start="701:13" pos:end="701:26"><name pos:start="701:13" pos:end="701:14">rn</name> <operator pos:start="701:16" pos:end="701:16">=</operator> <literal type="string" pos:start="701:18" pos:end="701:26">"Config1"</literal></expr>;</expr_stmt>

            <break pos:start="703:13" pos:end="703:18">break;</break>

        <case pos:start="705:9" pos:end="705:15">case <expr pos:start="705:14" pos:end="705:14"><literal type="number" pos:start="705:14" pos:end="705:14">2</literal></expr>:</case>

            <expr_stmt pos:start="707:13" pos:end="707:50"><expr pos:start="707:13" pos:end="707:49"><call pos:start="707:13" pos:end="707:49"><name pos:start="707:13" pos:end="707:35">gen_helper_mtc0_config2</name><argument_list pos:start="707:36" pos:end="707:49">(<argument pos:start="707:37" pos:end="707:43"><expr pos:start="707:37" pos:end="707:43"><name pos:start="707:37" pos:end="707:43">cpu_env</name></expr></argument>, <argument pos:start="707:46" pos:end="707:48"><expr pos:start="707:46" pos:end="707:48"><name pos:start="707:46" pos:end="707:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="709:13" pos:end="709:27"><expr pos:start="709:13" pos:end="709:26"><name pos:start="709:13" pos:end="709:14">rn</name> <operator pos:start="709:16" pos:end="709:16">=</operator> <literal type="string" pos:start="709:18" pos:end="709:26">"Config2"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="711:13" pos:end="711:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="713:13" pos:end="713:34"><expr pos:start="713:13" pos:end="713:33"><name pos:start="713:13" pos:end="713:23"><name pos:start="713:13" pos:end="713:15">ctx</name><operator pos:start="713:16" pos:end="713:17">-&gt;</operator><name pos:start="713:18" pos:end="713:23">bstate</name></name> <operator pos:start="713:25" pos:end="713:25">=</operator> <name pos:start="713:27" pos:end="713:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="715:13" pos:end="715:18">break;</break>

        <case pos:start="717:9" pos:end="717:15">case <expr pos:start="717:14" pos:end="717:14"><literal type="number" pos:start="717:14" pos:end="717:14">3</literal></expr>:</case>

            <expr_stmt pos:start="719:13" pos:end="719:50"><expr pos:start="719:13" pos:end="719:49"><call pos:start="719:13" pos:end="719:49"><name pos:start="719:13" pos:end="719:35">gen_helper_mtc0_config3</name><argument_list pos:start="719:36" pos:end="719:49">(<argument pos:start="719:37" pos:end="719:43"><expr pos:start="719:37" pos:end="719:43"><name pos:start="719:37" pos:end="719:43">cpu_env</name></expr></argument>, <argument pos:start="719:46" pos:end="719:48"><expr pos:start="719:46" pos:end="719:48"><name pos:start="719:46" pos:end="719:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="721:13" pos:end="721:27"><expr pos:start="721:13" pos:end="721:26"><name pos:start="721:13" pos:end="721:14">rn</name> <operator pos:start="721:16" pos:end="721:16">=</operator> <literal type="string" pos:start="721:18" pos:end="721:26">"Config3"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="723:13" pos:end="723:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="725:13" pos:end="725:34"><expr pos:start="725:13" pos:end="725:33"><name pos:start="725:13" pos:end="725:23"><name pos:start="725:13" pos:end="725:15">ctx</name><operator pos:start="725:16" pos:end="725:17">-&gt;</operator><name pos:start="725:18" pos:end="725:23">bstate</name></name> <operator pos:start="725:25" pos:end="725:25">=</operator> <name pos:start="725:27" pos:end="725:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="727:13" pos:end="727:18">break;</break>

        <case pos:start="729:9" pos:end="729:15">case <expr pos:start="729:14" pos:end="729:14"><literal type="number" pos:start="729:14" pos:end="729:14">4</literal></expr>:</case>

            <expr_stmt pos:start="731:13" pos:end="731:50"><expr pos:start="731:13" pos:end="731:49"><call pos:start="731:13" pos:end="731:49"><name pos:start="731:13" pos:end="731:35">gen_helper_mtc0_config4</name><argument_list pos:start="731:36" pos:end="731:49">(<argument pos:start="731:37" pos:end="731:43"><expr pos:start="731:37" pos:end="731:43"><name pos:start="731:37" pos:end="731:43">cpu_env</name></expr></argument>, <argument pos:start="731:46" pos:end="731:48"><expr pos:start="731:46" pos:end="731:48"><name pos:start="731:46" pos:end="731:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:27"><expr pos:start="733:13" pos:end="733:26"><name pos:start="733:13" pos:end="733:14">rn</name> <operator pos:start="733:16" pos:end="733:16">=</operator> <literal type="string" pos:start="733:18" pos:end="733:26">"Config4"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="735:13" pos:end="735:34"><expr pos:start="735:13" pos:end="735:33"><name pos:start="735:13" pos:end="735:23"><name pos:start="735:13" pos:end="735:15">ctx</name><operator pos:start="735:16" pos:end="735:17">-&gt;</operator><name pos:start="735:18" pos:end="735:23">bstate</name></name> <operator pos:start="735:25" pos:end="735:25">=</operator> <name pos:start="735:27" pos:end="735:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="737:13" pos:end="737:18">break;</break>

        <case pos:start="739:9" pos:end="739:15">case <expr pos:start="739:14" pos:end="739:14"><literal type="number" pos:start="739:14" pos:end="739:14">5</literal></expr>:</case>

            <expr_stmt pos:start="741:13" pos:end="741:50"><expr pos:start="741:13" pos:end="741:49"><call pos:start="741:13" pos:end="741:49"><name pos:start="741:13" pos:end="741:35">gen_helper_mtc0_config5</name><argument_list pos:start="741:36" pos:end="741:49">(<argument pos:start="741:37" pos:end="741:43"><expr pos:start="741:37" pos:end="741:43"><name pos:start="741:37" pos:end="741:43">cpu_env</name></expr></argument>, <argument pos:start="741:46" pos:end="741:48"><expr pos:start="741:46" pos:end="741:48"><name pos:start="741:46" pos:end="741:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="743:13" pos:end="743:27"><expr pos:start="743:13" pos:end="743:26"><name pos:start="743:13" pos:end="743:14">rn</name> <operator pos:start="743:16" pos:end="743:16">=</operator> <literal type="string" pos:start="743:18" pos:end="743:26">"Config5"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="745:13" pos:end="745:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="747:13" pos:end="747:34"><expr pos:start="747:13" pos:end="747:33"><name pos:start="747:13" pos:end="747:23"><name pos:start="747:13" pos:end="747:15">ctx</name><operator pos:start="747:16" pos:end="747:17">-&gt;</operator><name pos:start="747:18" pos:end="747:23">bstate</name></name> <operator pos:start="747:25" pos:end="747:25">=</operator> <name pos:start="747:27" pos:end="747:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="749:13" pos:end="749:18">break;</break>

        <comment type="block" pos:start="751:9" pos:end="751:46">/* 6,7 are implementation dependent */</comment>

        <case pos:start="753:9" pos:end="753:15">case <expr pos:start="753:14" pos:end="753:14"><literal type="number" pos:start="753:14" pos:end="753:14">6</literal></expr>:</case>

            <comment type="block" pos:start="755:13" pos:end="755:25">/* ignored */</comment>

            <expr_stmt pos:start="757:13" pos:end="757:27"><expr pos:start="757:13" pos:end="757:26"><name pos:start="757:13" pos:end="757:14">rn</name> <operator pos:start="757:16" pos:end="757:16">=</operator> <literal type="string" pos:start="757:18" pos:end="757:26">"Config6"</literal></expr>;</expr_stmt>

            <break pos:start="759:13" pos:end="759:18">break;</break>

        <case pos:start="761:9" pos:end="761:15">case <expr pos:start="761:14" pos:end="761:14"><literal type="number" pos:start="761:14" pos:end="761:14">7</literal></expr>:</case>

            <comment type="block" pos:start="763:13" pos:end="763:25">/* ignored */</comment>

            <expr_stmt pos:start="765:13" pos:end="765:27"><expr pos:start="765:13" pos:end="765:26"><name pos:start="765:13" pos:end="765:14">rn</name> <operator pos:start="765:16" pos:end="765:16">=</operator> <literal type="string" pos:start="765:18" pos:end="765:26">"Config7"</literal></expr>;</expr_stmt>

            <break pos:start="767:13" pos:end="767:18">break;</break>

        <default pos:start="769:9" pos:end="769:16">default:</default>

            <expr_stmt pos:start="771:13" pos:end="771:43"><expr pos:start="771:13" pos:end="771:42"><name pos:start="771:13" pos:end="771:14">rn</name> <operator pos:start="771:16" pos:end="771:16">=</operator> <literal type="string" pos:start="771:18" pos:end="771:42">"Invalid config selector"</literal></expr>;</expr_stmt>

            <goto pos:start="773:13" pos:end="773:35">goto <name pos:start="773:18" pos:end="773:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="777:9" pos:end="777:14">break;</break>

    <case pos:start="779:5" pos:end="779:12">case <expr pos:start="779:10" pos:end="779:11"><literal type="number" pos:start="779:10" pos:end="779:11">17</literal></expr>:</case>

        <switch pos:start="781:9" pos:end="795:9">switch <condition pos:start="781:16" pos:end="781:20">(<expr pos:start="781:17" pos:end="781:19"><name pos:start="781:17" pos:end="781:19">sel</name></expr>)</condition> <block pos:start="781:22" pos:end="795:9">{<block_content pos:start="783:9" pos:end="793:35">

        <case pos:start="783:9" pos:end="783:15">case <expr pos:start="783:14" pos:end="783:14"><literal type="number" pos:start="783:14" pos:end="783:14">0</literal></expr>:</case>

            <expr_stmt pos:start="785:13" pos:end="785:49"><expr pos:start="785:13" pos:end="785:48"><call pos:start="785:13" pos:end="785:48"><name pos:start="785:13" pos:end="785:34">gen_helper_mtc0_lladdr</name><argument_list pos:start="785:35" pos:end="785:48">(<argument pos:start="785:36" pos:end="785:42"><expr pos:start="785:36" pos:end="785:42"><name pos:start="785:36" pos:end="785:42">cpu_env</name></expr></argument>, <argument pos:start="785:45" pos:end="785:47"><expr pos:start="785:45" pos:end="785:47"><name pos:start="785:45" pos:end="785:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="787:13" pos:end="787:26"><expr pos:start="787:13" pos:end="787:25"><name pos:start="787:13" pos:end="787:14">rn</name> <operator pos:start="787:16" pos:end="787:16">=</operator> <literal type="string" pos:start="787:18" pos:end="787:25">"LLAddr"</literal></expr>;</expr_stmt>

            <break pos:start="789:13" pos:end="789:18">break;</break>

        <default pos:start="791:9" pos:end="791:16">default:</default>

            <goto pos:start="793:13" pos:end="793:35">goto <name pos:start="793:18" pos:end="793:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="797:9" pos:end="797:14">break;</break>

    <case pos:start="799:5" pos:end="799:12">case <expr pos:start="799:10" pos:end="799:11"><literal type="number" pos:start="799:10" pos:end="799:11">18</literal></expr>:</case>

        <switch pos:start="801:9" pos:end="815:9">switch <condition pos:start="801:16" pos:end="801:20">(<expr pos:start="801:17" pos:end="801:19"><name pos:start="801:17" pos:end="801:19">sel</name></expr>)</condition> <block pos:start="801:22" pos:end="815:9">{<block_content pos:start="803:9" pos:end="813:35">

        <case pos:start="803:9" pos:end="803:21">case <expr pos:start="803:14" pos:end="803:20"><literal type="number" pos:start="803:14" pos:end="803:14">0</literal> <operator pos:start="803:16" pos:end="803:18">...</operator> <literal type="number" pos:start="803:20" pos:end="803:20">7</literal></expr>:</case>

            <expr_stmt pos:start="805:13" pos:end="805:52"><expr pos:start="805:13" pos:end="805:51"><call pos:start="805:13" pos:end="805:51"><name pos:start="805:13" pos:end="805:27">gen_helper_0e1i</name><argument_list pos:start="805:28" pos:end="805:51">(<argument pos:start="805:29" pos:end="805:40"><expr pos:start="805:29" pos:end="805:40"><name pos:start="805:29" pos:end="805:40">mtc0_watchlo</name></expr></argument>, <argument pos:start="805:43" pos:end="805:45"><expr pos:start="805:43" pos:end="805:45"><name pos:start="805:43" pos:end="805:45">arg</name></expr></argument>, <argument pos:start="805:48" pos:end="805:50"><expr pos:start="805:48" pos:end="805:50"><name pos:start="805:48" pos:end="805:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="807:13" pos:end="807:27"><expr pos:start="807:13" pos:end="807:26"><name pos:start="807:13" pos:end="807:14">rn</name> <operator pos:start="807:16" pos:end="807:16">=</operator> <literal type="string" pos:start="807:18" pos:end="807:26">"WatchLo"</literal></expr>;</expr_stmt>

            <break pos:start="809:13" pos:end="809:18">break;</break>

        <default pos:start="811:9" pos:end="811:16">default:</default>

            <goto pos:start="813:13" pos:end="813:35">goto <name pos:start="813:18" pos:end="813:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="817:9" pos:end="817:14">break;</break>

    <case pos:start="819:5" pos:end="819:12">case <expr pos:start="819:10" pos:end="819:11"><literal type="number" pos:start="819:10" pos:end="819:11">19</literal></expr>:</case>

        <switch pos:start="821:9" pos:end="835:9">switch <condition pos:start="821:16" pos:end="821:20">(<expr pos:start="821:17" pos:end="821:19"><name pos:start="821:17" pos:end="821:19">sel</name></expr>)</condition> <block pos:start="821:22" pos:end="835:9">{<block_content pos:start="823:9" pos:end="833:35">

        <case pos:start="823:9" pos:end="823:21">case <expr pos:start="823:14" pos:end="823:20"><literal type="number" pos:start="823:14" pos:end="823:14">0</literal> <operator pos:start="823:16" pos:end="823:18">...</operator> <literal type="number" pos:start="823:20" pos:end="823:20">7</literal></expr>:</case>

            <expr_stmt pos:start="825:13" pos:end="825:52"><expr pos:start="825:13" pos:end="825:51"><call pos:start="825:13" pos:end="825:51"><name pos:start="825:13" pos:end="825:27">gen_helper_0e1i</name><argument_list pos:start="825:28" pos:end="825:51">(<argument pos:start="825:29" pos:end="825:40"><expr pos:start="825:29" pos:end="825:40"><name pos:start="825:29" pos:end="825:40">mtc0_watchhi</name></expr></argument>, <argument pos:start="825:43" pos:end="825:45"><expr pos:start="825:43" pos:end="825:45"><name pos:start="825:43" pos:end="825:45">arg</name></expr></argument>, <argument pos:start="825:48" pos:end="825:50"><expr pos:start="825:48" pos:end="825:50"><name pos:start="825:48" pos:end="825:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="827:13" pos:end="827:27"><expr pos:start="827:13" pos:end="827:26"><name pos:start="827:13" pos:end="827:14">rn</name> <operator pos:start="827:16" pos:end="827:16">=</operator> <literal type="string" pos:start="827:18" pos:end="827:26">"WatchHi"</literal></expr>;</expr_stmt>

            <break pos:start="829:13" pos:end="829:18">break;</break>

        <default pos:start="831:9" pos:end="831:16">default:</default>

            <goto pos:start="833:13" pos:end="833:35">goto <name pos:start="833:18" pos:end="833:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="837:9" pos:end="837:14">break;</break>

    <case pos:start="839:5" pos:end="839:12">case <expr pos:start="839:10" pos:end="839:11"><literal type="number" pos:start="839:10" pos:end="839:11">20</literal></expr>:</case>

        <switch pos:start="841:9" pos:end="861:9">switch <condition pos:start="841:16" pos:end="841:20">(<expr pos:start="841:17" pos:end="841:19"><name pos:start="841:17" pos:end="841:19">sel</name></expr>)</condition> <block pos:start="841:22" pos:end="861:9">{<block_content pos:start="843:9" pos:end="859:35">

        <case pos:start="843:9" pos:end="846:0">case <expr pos:start="843:14" pos:end="843:14"><literal type="number" pos:start="843:14" pos:end="843:14">0</literal></expr>:</case>

<cpp:if pos:start="845:1" pos:end="845:26">#<cpp:directive pos:start="845:2" pos:end="845:3">if</cpp:directive> <expr pos:start="845:5" pos:end="845:26"><call pos:start="845:5" pos:end="845:26"><name pos:start="845:5" pos:end="845:11">defined</name><argument_list pos:start="845:12" pos:end="845:26">(<argument pos:start="845:13" pos:end="845:25"><expr pos:start="845:13" pos:end="845:25"><name pos:start="845:13" pos:end="845:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="847:13" pos:end="847:39"><expr pos:start="847:13" pos:end="847:38"><call pos:start="847:13" pos:end="847:38"><name pos:start="847:13" pos:end="847:22">check_insn</name><argument_list pos:start="847:23" pos:end="847:38">(<argument pos:start="847:24" pos:end="847:26"><expr pos:start="847:24" pos:end="847:26"><name pos:start="847:24" pos:end="847:26">ctx</name></expr></argument>, <argument pos:start="847:29" pos:end="847:37"><expr pos:start="847:29" pos:end="847:37"><name pos:start="847:29" pos:end="847:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="849:13" pos:end="849:51"><expr pos:start="849:13" pos:end="849:50"><call pos:start="849:13" pos:end="849:50"><name pos:start="849:13" pos:end="849:36">gen_helper_mtc0_xcontext</name><argument_list pos:start="849:37" pos:end="849:50">(<argument pos:start="849:38" pos:end="849:44"><expr pos:start="849:38" pos:end="849:44"><name pos:start="849:38" pos:end="849:44">cpu_env</name></expr></argument>, <argument pos:start="849:47" pos:end="849:49"><expr pos:start="849:47" pos:end="849:49"><name pos:start="849:47" pos:end="849:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="851:13" pos:end="851:28"><expr pos:start="851:13" pos:end="851:27"><name pos:start="851:13" pos:end="851:14">rn</name> <operator pos:start="851:16" pos:end="851:16">=</operator> <literal type="string" pos:start="851:18" pos:end="851:27">"XContext"</literal></expr>;</expr_stmt>

            <break pos:start="853:13" pos:end="856:0">break;</break>

<cpp:endif pos:start="855:1" pos:end="855:6">#<cpp:directive pos:start="855:2" pos:end="855:6">endif</cpp:directive></cpp:endif>

        <default pos:start="857:9" pos:end="857:16">default:</default>

            <goto pos:start="859:13" pos:end="859:35">goto <name pos:start="859:18" pos:end="859:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="863:9" pos:end="863:14">break;</break>

    <case pos:start="865:5" pos:end="865:12">case <expr pos:start="865:10" pos:end="865:11"><literal type="number" pos:start="865:10" pos:end="865:11">21</literal></expr>:</case>

       <comment type="block" pos:start="867:8" pos:end="867:72">/* Officially reserved, but sel 0 is used for R1x000 framemask */</comment>

        <expr_stmt pos:start="869:9" pos:end="869:53"><expr pos:start="869:9" pos:end="869:52"><call pos:start="869:9" pos:end="869:52"><name pos:start="869:9" pos:end="869:17">CP0_CHECK</name><argument_list pos:start="869:18" pos:end="869:52">(<argument pos:start="869:19" pos:end="869:51"><expr pos:start="869:19" pos:end="869:51"><operator pos:start="869:19" pos:end="869:19">!</operator><operator pos:start="869:20" pos:end="869:20">(</operator><name pos:start="869:21" pos:end="869:35"><name pos:start="869:21" pos:end="869:23">ctx</name><operator pos:start="869:24" pos:end="869:25">-&gt;</operator><name pos:start="869:26" pos:end="869:35">insn_flags</name></name> <operator pos:start="869:37" pos:end="869:37">&amp;</operator> <name pos:start="869:39" pos:end="869:50">ISA_MIPS32R6</name><operator pos:start="869:51" pos:end="869:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="871:9" pos:end="885:9">switch <condition pos:start="871:16" pos:end="871:20">(<expr pos:start="871:17" pos:end="871:19"><name pos:start="871:17" pos:end="871:19">sel</name></expr>)</condition> <block pos:start="871:22" pos:end="885:9">{<block_content pos:start="873:9" pos:end="883:35">

        <case pos:start="873:9" pos:end="873:15">case <expr pos:start="873:14" pos:end="873:14"><literal type="number" pos:start="873:14" pos:end="873:14">0</literal></expr>:</case>

            <expr_stmt pos:start="875:13" pos:end="875:52"><expr pos:start="875:13" pos:end="875:51"><call pos:start="875:13" pos:end="875:51"><name pos:start="875:13" pos:end="875:37">gen_helper_mtc0_framemask</name><argument_list pos:start="875:38" pos:end="875:51">(<argument pos:start="875:39" pos:end="875:45"><expr pos:start="875:39" pos:end="875:45"><name pos:start="875:39" pos:end="875:45">cpu_env</name></expr></argument>, <argument pos:start="875:48" pos:end="875:50"><expr pos:start="875:48" pos:end="875:50"><name pos:start="875:48" pos:end="875:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="877:13" pos:end="877:29"><expr pos:start="877:13" pos:end="877:28"><name pos:start="877:13" pos:end="877:14">rn</name> <operator pos:start="877:16" pos:end="877:16">=</operator> <literal type="string" pos:start="877:18" pos:end="877:28">"Framemask"</literal></expr>;</expr_stmt>

            <break pos:start="879:13" pos:end="879:18">break;</break>

        <default pos:start="881:9" pos:end="881:16">default:</default>

            <goto pos:start="883:13" pos:end="883:35">goto <name pos:start="883:18" pos:end="883:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="887:9" pos:end="887:14">break;</break>

    <case pos:start="889:5" pos:end="889:12">case <expr pos:start="889:10" pos:end="889:11"><literal type="number" pos:start="889:10" pos:end="889:11">22</literal></expr>:</case>

        <comment type="block" pos:start="891:9" pos:end="891:21">/* ignored */</comment>

        <expr_stmt pos:start="893:9" pos:end="893:26"><expr pos:start="893:9" pos:end="893:25"><name pos:start="893:9" pos:end="893:10">rn</name> <operator pos:start="893:12" pos:end="893:12">=</operator> <literal type="string" pos:start="893:14" pos:end="893:25">"Diagnostic"</literal></expr>;</expr_stmt> <comment type="block" pos:start="893:28" pos:end="893:57">/* implementation dependent */</comment>

        <break pos:start="895:9" pos:end="895:14">break;</break>

    <case pos:start="897:5" pos:end="897:12">case <expr pos:start="897:10" pos:end="897:11"><literal type="number" pos:start="897:10" pos:end="897:11">23</literal></expr>:</case>

        <switch pos:start="899:9" pos:end="971:9">switch <condition pos:start="899:16" pos:end="899:20">(<expr pos:start="899:17" pos:end="899:19"><name pos:start="899:17" pos:end="899:19">sel</name></expr>)</condition> <block pos:start="899:22" pos:end="971:9">{<block_content pos:start="901:9" pos:end="969:35">

        <case pos:start="901:9" pos:end="901:15">case <expr pos:start="901:14" pos:end="901:14"><literal type="number" pos:start="901:14" pos:end="901:14">0</literal></expr>:</case>

            <expr_stmt pos:start="903:13" pos:end="903:48"><expr pos:start="903:13" pos:end="903:47"><call pos:start="903:13" pos:end="903:47"><name pos:start="903:13" pos:end="903:33">gen_helper_mtc0_debug</name><argument_list pos:start="903:34" pos:end="903:47">(<argument pos:start="903:35" pos:end="903:41"><expr pos:start="903:35" pos:end="903:41"><name pos:start="903:35" pos:end="903:41">cpu_env</name></expr></argument>, <argument pos:start="903:44" pos:end="903:46"><expr pos:start="903:44" pos:end="903:46"><name pos:start="903:44" pos:end="903:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="903:50" pos:end="903:68">/* EJTAG support */</comment>

            <comment type="block" pos:start="905:13" pos:end="905:74">/* BS_STOP isn't good enough here, hflags may have changed. */</comment>

            <expr_stmt pos:start="907:13" pos:end="907:37"><expr pos:start="907:13" pos:end="907:36"><call pos:start="907:13" pos:end="907:36"><name pos:start="907:13" pos:end="907:23">gen_save_pc</name><argument_list pos:start="907:24" pos:end="907:36">(<argument pos:start="907:25" pos:end="907:35"><expr pos:start="907:25" pos:end="907:35"><name pos:start="907:25" pos:end="907:31"><name pos:start="907:25" pos:end="907:27">ctx</name><operator pos:start="907:28" pos:end="907:29">-&gt;</operator><name pos:start="907:30" pos:end="907:31">pc</name></name> <operator pos:start="907:33" pos:end="907:33">+</operator> <literal type="number" pos:start="907:35" pos:end="907:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="909:13" pos:end="909:34"><expr pos:start="909:13" pos:end="909:33"><name pos:start="909:13" pos:end="909:23"><name pos:start="909:13" pos:end="909:15">ctx</name><operator pos:start="909:16" pos:end="909:17">-&gt;</operator><name pos:start="909:18" pos:end="909:23">bstate</name></name> <operator pos:start="909:25" pos:end="909:25">=</operator> <name pos:start="909:27" pos:end="909:33">BS_EXCP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="911:13" pos:end="911:25"><expr pos:start="911:13" pos:end="911:24"><name pos:start="911:13" pos:end="911:14">rn</name> <operator pos:start="911:16" pos:end="911:16">=</operator> <literal type="string" pos:start="911:18" pos:end="911:24">"Debug"</literal></expr>;</expr_stmt>

            <break pos:start="913:13" pos:end="913:18">break;</break>

        <case pos:start="915:9" pos:end="915:15">case <expr pos:start="915:14" pos:end="915:14"><literal type="number" pos:start="915:14" pos:end="915:14">1</literal></expr>:</case>

<comment type="line" pos:start="917:1" pos:end="917:79">//            gen_helper_mtc0_tracecontrol(cpu_env, arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="919:13" pos:end="919:32"><expr pos:start="919:13" pos:end="919:31"><name pos:start="919:13" pos:end="919:14">rn</name> <operator pos:start="919:16" pos:end="919:16">=</operator> <literal type="string" pos:start="919:18" pos:end="919:31">"TraceControl"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="921:13" pos:end="921:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="923:13" pos:end="923:34"><expr pos:start="923:13" pos:end="923:33"><name pos:start="923:13" pos:end="923:23"><name pos:start="923:13" pos:end="923:15">ctx</name><operator pos:start="923:16" pos:end="923:17">-&gt;</operator><name pos:start="923:18" pos:end="923:23">bstate</name></name> <operator pos:start="923:25" pos:end="923:25">=</operator> <name pos:start="923:27" pos:end="923:33">BS_STOP</name></expr>;</expr_stmt>

<comment type="line" pos:start="925:1" pos:end="925:20">//            break;</comment>

        <case pos:start="927:9" pos:end="927:15">case <expr pos:start="927:14" pos:end="927:14"><literal type="number" pos:start="927:14" pos:end="927:14">2</literal></expr>:</case>

<comment type="line" pos:start="929:1" pos:end="929:80">//            gen_helper_mtc0_tracecontrol2(cpu_env, arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="931:13" pos:end="931:33"><expr pos:start="931:13" pos:end="931:32"><name pos:start="931:13" pos:end="931:14">rn</name> <operator pos:start="931:16" pos:end="931:16">=</operator> <literal type="string" pos:start="931:18" pos:end="931:32">"TraceControl2"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="933:13" pos:end="933:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="935:13" pos:end="935:34"><expr pos:start="935:13" pos:end="935:33"><name pos:start="935:13" pos:end="935:23"><name pos:start="935:13" pos:end="935:15">ctx</name><operator pos:start="935:16" pos:end="935:17">-&gt;</operator><name pos:start="935:18" pos:end="935:23">bstate</name></name> <operator pos:start="935:25" pos:end="935:25">=</operator> <name pos:start="935:27" pos:end="935:33">BS_STOP</name></expr>;</expr_stmt>

<comment type="line" pos:start="937:1" pos:end="937:20">//            break;</comment>

        <case pos:start="939:9" pos:end="939:15">case <expr pos:start="939:14" pos:end="939:14"><literal type="number" pos:start="939:14" pos:end="939:14">3</literal></expr>:</case>

            <comment type="block" pos:start="941:13" pos:end="941:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="943:13" pos:end="943:34"><expr pos:start="943:13" pos:end="943:33"><name pos:start="943:13" pos:end="943:23"><name pos:start="943:13" pos:end="943:15">ctx</name><operator pos:start="943:16" pos:end="943:17">-&gt;</operator><name pos:start="943:18" pos:end="943:23">bstate</name></name> <operator pos:start="943:25" pos:end="943:25">=</operator> <name pos:start="943:27" pos:end="943:33">BS_STOP</name></expr>;</expr_stmt>

<comment type="line" pos:start="945:1" pos:end="945:80">//            gen_helper_mtc0_usertracedata(cpu_env, arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="947:13" pos:end="947:33"><expr pos:start="947:13" pos:end="947:32"><name pos:start="947:13" pos:end="947:14">rn</name> <operator pos:start="947:16" pos:end="947:16">=</operator> <literal type="string" pos:start="947:18" pos:end="947:32">"UserTraceData"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="949:13" pos:end="949:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="951:13" pos:end="951:34"><expr pos:start="951:13" pos:end="951:33"><name pos:start="951:13" pos:end="951:23"><name pos:start="951:13" pos:end="951:15">ctx</name><operator pos:start="951:16" pos:end="951:17">-&gt;</operator><name pos:start="951:18" pos:end="951:23">bstate</name></name> <operator pos:start="951:25" pos:end="951:25">=</operator> <name pos:start="951:27" pos:end="951:33">BS_STOP</name></expr>;</expr_stmt>

<comment type="line" pos:start="953:1" pos:end="953:20">//            break;</comment>

        <case pos:start="955:9" pos:end="955:15">case <expr pos:start="955:14" pos:end="955:14"><literal type="number" pos:start="955:14" pos:end="955:14">4</literal></expr>:</case>

<comment type="line" pos:start="957:1" pos:end="957:75">//            gen_helper_mtc0_tracebpc(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="959:13" pos:end="959:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="961:13" pos:end="961:34"><expr pos:start="961:13" pos:end="961:33"><name pos:start="961:13" pos:end="961:23"><name pos:start="961:13" pos:end="961:15">ctx</name><operator pos:start="961:16" pos:end="961:17">-&gt;</operator><name pos:start="961:18" pos:end="961:23">bstate</name></name> <operator pos:start="961:25" pos:end="961:25">=</operator> <name pos:start="961:27" pos:end="961:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="963:13" pos:end="963:28"><expr pos:start="963:13" pos:end="963:27"><name pos:start="963:13" pos:end="963:14">rn</name> <operator pos:start="963:16" pos:end="963:16">=</operator> <literal type="string" pos:start="963:18" pos:end="963:27">"TraceBPC"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="965:1" pos:end="965:20">//            break;</comment>

        <default pos:start="967:9" pos:end="967:16">default:</default>

            <goto pos:start="969:13" pos:end="969:35">goto <name pos:start="969:18" pos:end="969:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="973:9" pos:end="973:14">break;</break>

    <case pos:start="975:5" pos:end="975:12">case <expr pos:start="975:10" pos:end="975:11"><literal type="number" pos:start="975:10" pos:end="975:11">24</literal></expr>:</case>

        <switch pos:start="977:9" pos:end="993:9">switch <condition pos:start="977:16" pos:end="977:20">(<expr pos:start="977:17" pos:end="977:19"><name pos:start="977:17" pos:end="977:19">sel</name></expr>)</condition> <block pos:start="977:22" pos:end="993:9">{<block_content pos:start="979:9" pos:end="991:35">

        <case pos:start="979:9" pos:end="979:15">case <expr pos:start="979:14" pos:end="979:14"><literal type="number" pos:start="979:14" pos:end="979:14">0</literal></expr>:</case>

            <comment type="block" pos:start="981:13" pos:end="981:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="983:13" pos:end="983:68"><expr pos:start="983:13" pos:end="983:67"><call pos:start="983:13" pos:end="983:67"><name pos:start="983:13" pos:end="983:28">gen_mtc0_store64</name><argument_list pos:start="983:29" pos:end="983:67">(<argument pos:start="983:30" pos:end="983:32"><expr pos:start="983:30" pos:end="983:32"><name pos:start="983:30" pos:end="983:32">arg</name></expr></argument>, <argument pos:start="983:35" pos:end="983:66"><expr pos:start="983:35" pos:end="983:66"><call pos:start="983:35" pos:end="983:66"><name pos:start="983:35" pos:end="983:42">offsetof</name><argument_list pos:start="983:43" pos:end="983:66">(<argument pos:start="983:44" pos:end="983:55"><expr pos:start="983:44" pos:end="983:55"><name pos:start="983:44" pos:end="983:55">CPUMIPSState</name></expr></argument>, <argument pos:start="983:58" pos:end="983:65"><expr pos:start="983:58" pos:end="983:65"><name pos:start="983:58" pos:end="983:65">CP0_DEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="985:13" pos:end="985:24"><expr pos:start="985:13" pos:end="985:23"><name pos:start="985:13" pos:end="985:14">rn</name> <operator pos:start="985:16" pos:end="985:16">=</operator> <literal type="string" pos:start="985:18" pos:end="985:23">"DEPC"</literal></expr>;</expr_stmt>

            <break pos:start="987:13" pos:end="987:18">break;</break>

        <default pos:start="989:9" pos:end="989:16">default:</default>

            <goto pos:start="991:13" pos:end="991:35">goto <name pos:start="991:18" pos:end="991:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="995:9" pos:end="995:14">break;</break>

    <case pos:start="997:5" pos:end="997:12">case <expr pos:start="997:10" pos:end="997:11"><literal type="number" pos:start="997:10" pos:end="997:11">25</literal></expr>:</case>

        <switch pos:start="999:9" pos:end="1069:9">switch <condition pos:start="999:16" pos:end="999:20">(<expr pos:start="999:17" pos:end="999:19"><name pos:start="999:17" pos:end="999:19">sel</name></expr>)</condition> <block pos:start="999:22" pos:end="1069:9">{<block_content pos:start="1001:9" pos:end="1067:35">

        <case pos:start="1001:9" pos:end="1001:15">case <expr pos:start="1001:14" pos:end="1001:14"><literal type="number" pos:start="1001:14" pos:end="1001:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1003:13" pos:end="1003:55"><expr pos:start="1003:13" pos:end="1003:54"><call pos:start="1003:13" pos:end="1003:54"><name pos:start="1003:13" pos:end="1003:40">gen_helper_mtc0_performance0</name><argument_list pos:start="1003:41" pos:end="1003:54">(<argument pos:start="1003:42" pos:end="1003:48"><expr pos:start="1003:42" pos:end="1003:48"><name pos:start="1003:42" pos:end="1003:48">cpu_env</name></expr></argument>, <argument pos:start="1003:51" pos:end="1003:53"><expr pos:start="1003:51" pos:end="1003:53"><name pos:start="1003:51" pos:end="1003:53">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1005:13" pos:end="1005:32"><expr pos:start="1005:13" pos:end="1005:31"><name pos:start="1005:13" pos:end="1005:14">rn</name> <operator pos:start="1005:16" pos:end="1005:16">=</operator> <literal type="string" pos:start="1005:18" pos:end="1005:31">"Performance0"</literal></expr>;</expr_stmt>

            <break pos:start="1007:13" pos:end="1007:18">break;</break>

        <case pos:start="1009:9" pos:end="1009:15">case <expr pos:start="1009:14" pos:end="1009:14"><literal type="number" pos:start="1009:14" pos:end="1009:14">1</literal></expr>:</case>

<comment type="line" pos:start="1011:1" pos:end="1011:48">//            gen_helper_mtc0_performance1(arg);</comment>

            <expr_stmt pos:start="1013:13" pos:end="1013:32"><expr pos:start="1013:13" pos:end="1013:31"><name pos:start="1013:13" pos:end="1013:14">rn</name> <operator pos:start="1013:16" pos:end="1013:16">=</operator> <literal type="string" pos:start="1013:18" pos:end="1013:31">"Performance1"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1015:1" pos:end="1015:20">//            break;</comment>

        <case pos:start="1017:9" pos:end="1017:15">case <expr pos:start="1017:14" pos:end="1017:14"><literal type="number" pos:start="1017:14" pos:end="1017:14">2</literal></expr>:</case>

<comment type="line" pos:start="1019:1" pos:end="1019:48">//            gen_helper_mtc0_performance2(arg);</comment>

            <expr_stmt pos:start="1021:13" pos:end="1021:32"><expr pos:start="1021:13" pos:end="1021:31"><name pos:start="1021:13" pos:end="1021:14">rn</name> <operator pos:start="1021:16" pos:end="1021:16">=</operator> <literal type="string" pos:start="1021:18" pos:end="1021:31">"Performance2"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1023:1" pos:end="1023:20">//            break;</comment>

        <case pos:start="1025:9" pos:end="1025:15">case <expr pos:start="1025:14" pos:end="1025:14"><literal type="number" pos:start="1025:14" pos:end="1025:14">3</literal></expr>:</case>

<comment type="line" pos:start="1027:1" pos:end="1027:48">//            gen_helper_mtc0_performance3(arg);</comment>

            <expr_stmt pos:start="1029:13" pos:end="1029:32"><expr pos:start="1029:13" pos:end="1029:31"><name pos:start="1029:13" pos:end="1029:14">rn</name> <operator pos:start="1029:16" pos:end="1029:16">=</operator> <literal type="string" pos:start="1029:18" pos:end="1029:31">"Performance3"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1031:1" pos:end="1031:20">//            break;</comment>

        <case pos:start="1033:9" pos:end="1033:15">case <expr pos:start="1033:14" pos:end="1033:14"><literal type="number" pos:start="1033:14" pos:end="1033:14">4</literal></expr>:</case>

<comment type="line" pos:start="1035:1" pos:end="1035:48">//            gen_helper_mtc0_performance4(arg);</comment>

            <expr_stmt pos:start="1037:13" pos:end="1037:32"><expr pos:start="1037:13" pos:end="1037:31"><name pos:start="1037:13" pos:end="1037:14">rn</name> <operator pos:start="1037:16" pos:end="1037:16">=</operator> <literal type="string" pos:start="1037:18" pos:end="1037:31">"Performance4"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1039:1" pos:end="1039:20">//            break;</comment>

        <case pos:start="1041:9" pos:end="1041:15">case <expr pos:start="1041:14" pos:end="1041:14"><literal type="number" pos:start="1041:14" pos:end="1041:14">5</literal></expr>:</case>

<comment type="line" pos:start="1043:1" pos:end="1043:48">//            gen_helper_mtc0_performance5(arg);</comment>

            <expr_stmt pos:start="1045:13" pos:end="1045:32"><expr pos:start="1045:13" pos:end="1045:31"><name pos:start="1045:13" pos:end="1045:14">rn</name> <operator pos:start="1045:16" pos:end="1045:16">=</operator> <literal type="string" pos:start="1045:18" pos:end="1045:31">"Performance5"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1047:1" pos:end="1047:20">//            break;</comment>

        <case pos:start="1049:9" pos:end="1049:15">case <expr pos:start="1049:14" pos:end="1049:14"><literal type="number" pos:start="1049:14" pos:end="1049:14">6</literal></expr>:</case>

<comment type="line" pos:start="1051:1" pos:end="1051:48">//            gen_helper_mtc0_performance6(arg);</comment>

            <expr_stmt pos:start="1053:13" pos:end="1053:32"><expr pos:start="1053:13" pos:end="1053:31"><name pos:start="1053:13" pos:end="1053:14">rn</name> <operator pos:start="1053:16" pos:end="1053:16">=</operator> <literal type="string" pos:start="1053:18" pos:end="1053:31">"Performance6"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1055:1" pos:end="1055:20">//            break;</comment>

        <case pos:start="1057:9" pos:end="1057:15">case <expr pos:start="1057:14" pos:end="1057:14"><literal type="number" pos:start="1057:14" pos:end="1057:14">7</literal></expr>:</case>

<comment type="line" pos:start="1059:1" pos:end="1059:48">//            gen_helper_mtc0_performance7(arg);</comment>

            <expr_stmt pos:start="1061:13" pos:end="1061:32"><expr pos:start="1061:13" pos:end="1061:31"><name pos:start="1061:13" pos:end="1061:14">rn</name> <operator pos:start="1061:16" pos:end="1061:16">=</operator> <literal type="string" pos:start="1061:18" pos:end="1061:31">"Performance7"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1063:1" pos:end="1063:20">//            break;</comment>

        <default pos:start="1065:9" pos:end="1065:16">default:</default>

            <goto pos:start="1067:13" pos:end="1067:35">goto <name pos:start="1067:18" pos:end="1067:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

       <break pos:start="1071:8" pos:end="1071:13">break;</break>

    <case pos:start="1073:5" pos:end="1073:12">case <expr pos:start="1073:10" pos:end="1073:11"><literal type="number" pos:start="1073:10" pos:end="1073:11">26</literal></expr>:</case>

        <comment type="block" pos:start="1075:9" pos:end="1075:21">/* ignored */</comment>

        <expr_stmt pos:start="1077:9" pos:end="1077:19"><expr pos:start="1077:9" pos:end="1077:18"><name pos:start="1077:9" pos:end="1077:10">rn</name> <operator pos:start="1077:12" pos:end="1077:12">=</operator> <literal type="string" pos:start="1077:14" pos:end="1077:18">"ECC"</literal></expr>;</expr_stmt>

        <break pos:start="1079:9" pos:end="1079:14">break;</break>

    <case pos:start="1081:5" pos:end="1081:12">case <expr pos:start="1081:10" pos:end="1081:11"><literal type="number" pos:start="1081:10" pos:end="1081:11">27</literal></expr>:</case>

        <switch pos:start="1083:9" pos:end="1097:9">switch <condition pos:start="1083:16" pos:end="1083:20">(<expr pos:start="1083:17" pos:end="1083:19"><name pos:start="1083:17" pos:end="1083:19">sel</name></expr>)</condition> <block pos:start="1083:22" pos:end="1097:9">{<block_content pos:start="1085:9" pos:end="1095:35">

        <case pos:start="1085:9" pos:end="1085:21">case <expr pos:start="1085:14" pos:end="1085:20"><literal type="number" pos:start="1085:14" pos:end="1085:14">0</literal> <operator pos:start="1085:16" pos:end="1085:18">...</operator> <literal type="number" pos:start="1085:20" pos:end="1085:20">3</literal></expr>:</case>

            <comment type="block" pos:start="1087:13" pos:end="1087:25">/* ignored */</comment>

            <expr_stmt pos:start="1089:13" pos:end="1089:28"><expr pos:start="1089:13" pos:end="1089:27"><name pos:start="1089:13" pos:end="1089:14">rn</name> <operator pos:start="1089:16" pos:end="1089:16">=</operator> <literal type="string" pos:start="1089:18" pos:end="1089:27">"CacheErr"</literal></expr>;</expr_stmt>

            <break pos:start="1091:13" pos:end="1091:18">break;</break>

        <default pos:start="1093:9" pos:end="1093:16">default:</default>

            <goto pos:start="1095:13" pos:end="1095:35">goto <name pos:start="1095:18" pos:end="1095:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

       <break pos:start="1099:8" pos:end="1099:13">break;</break>

    <case pos:start="1101:5" pos:end="1101:12">case <expr pos:start="1101:10" pos:end="1101:11"><literal type="number" pos:start="1101:10" pos:end="1101:11">28</literal></expr>:</case>

        <switch pos:start="1103:9" pos:end="1137:9">switch <condition pos:start="1103:16" pos:end="1103:20">(<expr pos:start="1103:17" pos:end="1103:19"><name pos:start="1103:17" pos:end="1103:19">sel</name></expr>)</condition> <block pos:start="1103:22" pos:end="1137:9">{<block_content pos:start="1105:9" pos:end="1135:35">

        <case pos:start="1105:9" pos:end="1105:15">case <expr pos:start="1105:14" pos:end="1105:14"><literal type="number" pos:start="1105:14" pos:end="1105:14">0</literal></expr>:</case>

        <case pos:start="1107:9" pos:end="1107:15">case <expr pos:start="1107:14" pos:end="1107:14"><literal type="number" pos:start="1107:14" pos:end="1107:14">2</literal></expr>:</case>

        <case pos:start="1109:9" pos:end="1109:15">case <expr pos:start="1109:14" pos:end="1109:14"><literal type="number" pos:start="1109:14" pos:end="1109:14">4</literal></expr>:</case>

        <case pos:start="1111:9" pos:end="1111:15">case <expr pos:start="1111:14" pos:end="1111:14"><literal type="number" pos:start="1111:14" pos:end="1111:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1113:13" pos:end="1113:48"><expr pos:start="1113:13" pos:end="1113:47"><call pos:start="1113:13" pos:end="1113:47"><name pos:start="1113:13" pos:end="1113:33">gen_helper_mtc0_taglo</name><argument_list pos:start="1113:34" pos:end="1113:47">(<argument pos:start="1113:35" pos:end="1113:41"><expr pos:start="1113:35" pos:end="1113:41"><name pos:start="1113:35" pos:end="1113:41">cpu_env</name></expr></argument>, <argument pos:start="1113:44" pos:end="1113:46"><expr pos:start="1113:44" pos:end="1113:46"><name pos:start="1113:44" pos:end="1113:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1115:13" pos:end="1115:25"><expr pos:start="1115:13" pos:end="1115:24"><name pos:start="1115:13" pos:end="1115:14">rn</name> <operator pos:start="1115:16" pos:end="1115:16">=</operator> <literal type="string" pos:start="1115:18" pos:end="1115:24">"TagLo"</literal></expr>;</expr_stmt>

            <break pos:start="1117:13" pos:end="1117:18">break;</break>

        <case pos:start="1119:9" pos:end="1119:15">case <expr pos:start="1119:14" pos:end="1119:14"><literal type="number" pos:start="1119:14" pos:end="1119:14">1</literal></expr>:</case>

        <case pos:start="1121:9" pos:end="1121:15">case <expr pos:start="1121:14" pos:end="1121:14"><literal type="number" pos:start="1121:14" pos:end="1121:14">3</literal></expr>:</case>

        <case pos:start="1123:9" pos:end="1123:15">case <expr pos:start="1123:14" pos:end="1123:14"><literal type="number" pos:start="1123:14" pos:end="1123:14">5</literal></expr>:</case>

        <case pos:start="1125:9" pos:end="1125:15">case <expr pos:start="1125:14" pos:end="1125:14"><literal type="number" pos:start="1125:14" pos:end="1125:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1127:13" pos:end="1127:49"><expr pos:start="1127:13" pos:end="1127:48"><call pos:start="1127:13" pos:end="1127:48"><name pos:start="1127:13" pos:end="1127:34">gen_helper_mtc0_datalo</name><argument_list pos:start="1127:35" pos:end="1127:48">(<argument pos:start="1127:36" pos:end="1127:42"><expr pos:start="1127:36" pos:end="1127:42"><name pos:start="1127:36" pos:end="1127:42">cpu_env</name></expr></argument>, <argument pos:start="1127:45" pos:end="1127:47"><expr pos:start="1127:45" pos:end="1127:47"><name pos:start="1127:45" pos:end="1127:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1129:13" pos:end="1129:26"><expr pos:start="1129:13" pos:end="1129:25"><name pos:start="1129:13" pos:end="1129:14">rn</name> <operator pos:start="1129:16" pos:end="1129:16">=</operator> <literal type="string" pos:start="1129:18" pos:end="1129:25">"DataLo"</literal></expr>;</expr_stmt>

            <break pos:start="1131:13" pos:end="1131:18">break;</break>

        <default pos:start="1133:9" pos:end="1133:16">default:</default>

            <goto pos:start="1135:13" pos:end="1135:35">goto <name pos:start="1135:18" pos:end="1135:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1139:9" pos:end="1139:14">break;</break>

    <case pos:start="1141:5" pos:end="1141:12">case <expr pos:start="1141:10" pos:end="1141:11"><literal type="number" pos:start="1141:10" pos:end="1141:11">29</literal></expr>:</case>

        <switch pos:start="1143:9" pos:end="1179:9">switch <condition pos:start="1143:16" pos:end="1143:20">(<expr pos:start="1143:17" pos:end="1143:19"><name pos:start="1143:17" pos:end="1143:19">sel</name></expr>)</condition> <block pos:start="1143:22" pos:end="1179:9">{<block_content pos:start="1145:9" pos:end="1177:35">

        <case pos:start="1145:9" pos:end="1145:15">case <expr pos:start="1145:14" pos:end="1145:14"><literal type="number" pos:start="1145:14" pos:end="1145:14">0</literal></expr>:</case>

        <case pos:start="1147:9" pos:end="1147:15">case <expr pos:start="1147:14" pos:end="1147:14"><literal type="number" pos:start="1147:14" pos:end="1147:14">2</literal></expr>:</case>

        <case pos:start="1149:9" pos:end="1149:15">case <expr pos:start="1149:14" pos:end="1149:14"><literal type="number" pos:start="1149:14" pos:end="1149:14">4</literal></expr>:</case>

        <case pos:start="1151:9" pos:end="1151:15">case <expr pos:start="1151:14" pos:end="1151:14"><literal type="number" pos:start="1151:14" pos:end="1151:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1153:13" pos:end="1153:48"><expr pos:start="1153:13" pos:end="1153:47"><call pos:start="1153:13" pos:end="1153:47"><name pos:start="1153:13" pos:end="1153:33">gen_helper_mtc0_taghi</name><argument_list pos:start="1153:34" pos:end="1153:47">(<argument pos:start="1153:35" pos:end="1153:41"><expr pos:start="1153:35" pos:end="1153:41"><name pos:start="1153:35" pos:end="1153:41">cpu_env</name></expr></argument>, <argument pos:start="1153:44" pos:end="1153:46"><expr pos:start="1153:44" pos:end="1153:46"><name pos:start="1153:44" pos:end="1153:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1155:13" pos:end="1155:25"><expr pos:start="1155:13" pos:end="1155:24"><name pos:start="1155:13" pos:end="1155:14">rn</name> <operator pos:start="1155:16" pos:end="1155:16">=</operator> <literal type="string" pos:start="1155:18" pos:end="1155:24">"TagHi"</literal></expr>;</expr_stmt>

            <break pos:start="1157:13" pos:end="1157:18">break;</break>

        <case pos:start="1159:9" pos:end="1159:15">case <expr pos:start="1159:14" pos:end="1159:14"><literal type="number" pos:start="1159:14" pos:end="1159:14">1</literal></expr>:</case>

        <case pos:start="1161:9" pos:end="1161:15">case <expr pos:start="1161:14" pos:end="1161:14"><literal type="number" pos:start="1161:14" pos:end="1161:14">3</literal></expr>:</case>

        <case pos:start="1163:9" pos:end="1163:15">case <expr pos:start="1163:14" pos:end="1163:14"><literal type="number" pos:start="1163:14" pos:end="1163:14">5</literal></expr>:</case>

        <case pos:start="1165:9" pos:end="1165:15">case <expr pos:start="1165:14" pos:end="1165:14"><literal type="number" pos:start="1165:14" pos:end="1165:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1167:13" pos:end="1167:49"><expr pos:start="1167:13" pos:end="1167:48"><call pos:start="1167:13" pos:end="1167:48"><name pos:start="1167:13" pos:end="1167:34">gen_helper_mtc0_datahi</name><argument_list pos:start="1167:35" pos:end="1167:48">(<argument pos:start="1167:36" pos:end="1167:42"><expr pos:start="1167:36" pos:end="1167:42"><name pos:start="1167:36" pos:end="1167:42">cpu_env</name></expr></argument>, <argument pos:start="1167:45" pos:end="1167:47"><expr pos:start="1167:45" pos:end="1167:47"><name pos:start="1167:45" pos:end="1167:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1169:13" pos:end="1169:26"><expr pos:start="1169:13" pos:end="1169:25"><name pos:start="1169:13" pos:end="1169:14">rn</name> <operator pos:start="1169:16" pos:end="1169:16">=</operator> <literal type="string" pos:start="1169:18" pos:end="1169:25">"DataHi"</literal></expr>;</expr_stmt>

            <break pos:start="1171:13" pos:end="1171:18">break;</break>

        <default pos:start="1173:9" pos:end="1173:16">default:</default>

            <expr_stmt pos:start="1175:13" pos:end="1175:31"><expr pos:start="1175:13" pos:end="1175:30"><name pos:start="1175:13" pos:end="1175:14">rn</name> <operator pos:start="1175:16" pos:end="1175:16">=</operator> <literal type="string" pos:start="1175:18" pos:end="1175:30">"invalid sel"</literal></expr>;</expr_stmt>

            <goto pos:start="1177:13" pos:end="1177:35">goto <name pos:start="1177:18" pos:end="1177:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

       <break pos:start="1181:8" pos:end="1181:13">break;</break>

    <case pos:start="1183:5" pos:end="1183:12">case <expr pos:start="1183:10" pos:end="1183:11"><literal type="number" pos:start="1183:10" pos:end="1183:11">30</literal></expr>:</case>

        <switch pos:start="1185:9" pos:end="1199:9">switch <condition pos:start="1185:16" pos:end="1185:20">(<expr pos:start="1185:17" pos:end="1185:19"><name pos:start="1185:17" pos:end="1185:19">sel</name></expr>)</condition> <block pos:start="1185:22" pos:end="1199:9">{<block_content pos:start="1187:9" pos:end="1197:35">

        <case pos:start="1187:9" pos:end="1187:15">case <expr pos:start="1187:14" pos:end="1187:14"><literal type="number" pos:start="1187:14" pos:end="1187:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1189:13" pos:end="1189:72"><expr pos:start="1189:13" pos:end="1189:71"><call pos:start="1189:13" pos:end="1189:71"><name pos:start="1189:13" pos:end="1189:28">gen_mtc0_store64</name><argument_list pos:start="1189:29" pos:end="1189:71">(<argument pos:start="1189:30" pos:end="1189:32"><expr pos:start="1189:30" pos:end="1189:32"><name pos:start="1189:30" pos:end="1189:32">arg</name></expr></argument>, <argument pos:start="1189:35" pos:end="1189:70"><expr pos:start="1189:35" pos:end="1189:70"><call pos:start="1189:35" pos:end="1189:70"><name pos:start="1189:35" pos:end="1189:42">offsetof</name><argument_list pos:start="1189:43" pos:end="1189:70">(<argument pos:start="1189:44" pos:end="1189:55"><expr pos:start="1189:44" pos:end="1189:55"><name pos:start="1189:44" pos:end="1189:55">CPUMIPSState</name></expr></argument>, <argument pos:start="1189:58" pos:end="1189:69"><expr pos:start="1189:58" pos:end="1189:69"><name pos:start="1189:58" pos:end="1189:69">CP0_ErrorEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1191:13" pos:end="1191:28"><expr pos:start="1191:13" pos:end="1191:27"><name pos:start="1191:13" pos:end="1191:14">rn</name> <operator pos:start="1191:16" pos:end="1191:16">=</operator> <literal type="string" pos:start="1191:18" pos:end="1191:27">"ErrorEPC"</literal></expr>;</expr_stmt>

            <break pos:start="1193:13" pos:end="1193:18">break;</break>

        <default pos:start="1195:9" pos:end="1195:16">default:</default>

            <goto pos:start="1197:13" pos:end="1197:35">goto <name pos:start="1197:18" pos:end="1197:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1201:9" pos:end="1201:14">break;</break>

    <case pos:start="1203:5" pos:end="1203:12">case <expr pos:start="1203:10" pos:end="1203:11"><literal type="number" pos:start="1203:10" pos:end="1203:11">31</literal></expr>:</case>

        <switch pos:start="1205:9" pos:end="1233:9">switch <condition pos:start="1205:16" pos:end="1205:20">(<expr pos:start="1205:17" pos:end="1205:19"><name pos:start="1205:17" pos:end="1205:19">sel</name></expr>)</condition> <block pos:start="1205:22" pos:end="1233:9">{<block_content pos:start="1207:9" pos:end="1231:35">

        <case pos:start="1207:9" pos:end="1207:15">case <expr pos:start="1207:14" pos:end="1207:14"><literal type="number" pos:start="1207:14" pos:end="1207:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1209:13" pos:end="1209:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1211:13" pos:end="1211:70"><expr pos:start="1211:13" pos:end="1211:69"><call pos:start="1211:13" pos:end="1211:69"><name pos:start="1211:13" pos:end="1211:28">gen_mtc0_store32</name><argument_list pos:start="1211:29" pos:end="1211:69">(<argument pos:start="1211:30" pos:end="1211:32"><expr pos:start="1211:30" pos:end="1211:32"><name pos:start="1211:30" pos:end="1211:32">arg</name></expr></argument>, <argument pos:start="1211:35" pos:end="1211:68"><expr pos:start="1211:35" pos:end="1211:68"><call pos:start="1211:35" pos:end="1211:68"><name pos:start="1211:35" pos:end="1211:42">offsetof</name><argument_list pos:start="1211:43" pos:end="1211:68">(<argument pos:start="1211:44" pos:end="1211:55"><expr pos:start="1211:44" pos:end="1211:55"><name pos:start="1211:44" pos:end="1211:55">CPUMIPSState</name></expr></argument>, <argument pos:start="1211:58" pos:end="1211:67"><expr pos:start="1211:58" pos:end="1211:67"><name pos:start="1211:58" pos:end="1211:67">CP0_DESAVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1213:13" pos:end="1213:26"><expr pos:start="1213:13" pos:end="1213:25"><name pos:start="1213:13" pos:end="1213:14">rn</name> <operator pos:start="1213:16" pos:end="1213:16">=</operator> <literal type="string" pos:start="1213:18" pos:end="1213:25">"DESAVE"</literal></expr>;</expr_stmt>

            <break pos:start="1215:13" pos:end="1215:18">break;</break>

        <case pos:start="1217:9" pos:end="1217:21">case <expr pos:start="1217:14" pos:end="1217:20"><literal type="number" pos:start="1217:14" pos:end="1217:14">2</literal> <operator pos:start="1217:16" pos:end="1217:18">...</operator> <literal type="number" pos:start="1217:20" pos:end="1217:20">7</literal></expr>:</case>

            <expr_stmt pos:start="1219:13" pos:end="1219:51"><expr pos:start="1219:13" pos:end="1219:50"><call pos:start="1219:13" pos:end="1219:50"><name pos:start="1219:13" pos:end="1219:21">CP0_CHECK</name><argument_list pos:start="1219:22" pos:end="1219:50">(<argument pos:start="1219:23" pos:end="1219:49"><expr pos:start="1219:23" pos:end="1219:49"><name pos:start="1219:23" pos:end="1219:36"><name pos:start="1219:23" pos:end="1219:25">ctx</name><operator pos:start="1219:26" pos:end="1219:27">-&gt;</operator><name pos:start="1219:28" pos:end="1219:36">kscrexist</name></name> <operator pos:start="1219:38" pos:end="1219:38">&amp;</operator> <operator pos:start="1219:40" pos:end="1219:40">(</operator><literal type="number" pos:start="1219:41" pos:end="1219:41">1</literal> <operator pos:start="1219:43" pos:end="1219:44">&lt;&lt;</operator> <name pos:start="1219:46" pos:end="1219:48">sel</name><operator pos:start="1219:49" pos:end="1219:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1221:13" pos:end="1223:71"><expr pos:start="1221:13" pos:end="1223:70"><call pos:start="1221:13" pos:end="1223:70"><name pos:start="1221:13" pos:end="1221:25">tcg_gen_st_tl</name><argument_list pos:start="1221:26" pos:end="1223:70">(<argument pos:start="1221:27" pos:end="1221:29"><expr pos:start="1221:27" pos:end="1221:29"><name pos:start="1221:27" pos:end="1221:29">arg</name></expr></argument>, <argument pos:start="1221:32" pos:end="1221:38"><expr pos:start="1221:32" pos:end="1221:38"><name pos:start="1221:32" pos:end="1221:38">cpu_env</name></expr></argument>,

                          <argument pos:start="1223:27" pos:end="1223:69"><expr pos:start="1223:27" pos:end="1223:69"><call pos:start="1223:27" pos:end="1223:69"><name pos:start="1223:27" pos:end="1223:34">offsetof</name><argument_list pos:start="1223:35" pos:end="1223:69">(<argument pos:start="1223:36" pos:end="1223:47"><expr pos:start="1223:36" pos:end="1223:47"><name pos:start="1223:36" pos:end="1223:47">CPUMIPSState</name></expr></argument>, <argument pos:start="1223:50" pos:end="1223:68"><expr pos:start="1223:50" pos:end="1223:68"><name pos:start="1223:50" pos:end="1223:68"><name pos:start="1223:50" pos:end="1223:61">CP0_KScratch</name><index pos:start="1223:62" pos:end="1223:68">[<expr pos:start="1223:63" pos:end="1223:67"><name pos:start="1223:63" pos:end="1223:65">sel</name><operator pos:start="1223:66" pos:end="1223:66">-</operator><literal type="number" pos:start="1223:67" pos:end="1223:67">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1225:13" pos:end="1225:28"><expr pos:start="1225:13" pos:end="1225:27"><name pos:start="1225:13" pos:end="1225:14">rn</name> <operator pos:start="1225:16" pos:end="1225:16">=</operator> <literal type="string" pos:start="1225:18" pos:end="1225:27">"KScratch"</literal></expr>;</expr_stmt>

            <break pos:start="1227:13" pos:end="1227:18">break;</break>

        <default pos:start="1229:9" pos:end="1229:16">default:</default>

            <goto pos:start="1231:13" pos:end="1231:35">goto <name pos:start="1231:18" pos:end="1231:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <comment type="block" pos:start="1235:9" pos:end="1235:73">/* Stop translation as we may have switched the execution mode */</comment>

        <expr_stmt pos:start="1237:9" pos:end="1237:30"><expr pos:start="1237:9" pos:end="1237:29"><name pos:start="1237:9" pos:end="1237:19"><name pos:start="1237:9" pos:end="1237:11">ctx</name><operator pos:start="1237:12" pos:end="1237:13">-&gt;</operator><name pos:start="1237:14" pos:end="1237:19">bstate</name></name> <operator pos:start="1237:21" pos:end="1237:21">=</operator> <name pos:start="1237:23" pos:end="1237:29">BS_STOP</name></expr>;</expr_stmt>

        <break pos:start="1239:9" pos:end="1239:14">break;</break>

    <default pos:start="1241:5" pos:end="1241:12">default:</default>

       <goto pos:start="1243:8" pos:end="1243:30">goto <name pos:start="1243:13" pos:end="1243:29">cp0_unimplemented</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1247:5" pos:end="1247:13"><expr pos:start="1247:5" pos:end="1247:12"><operator pos:start="1247:5" pos:end="1247:5">(</operator><name pos:start="1247:6" pos:end="1247:9">void</name><operator pos:start="1247:10" pos:end="1247:10">)</operator><name pos:start="1247:11" pos:end="1247:12">rn</name></expr>;</expr_stmt> <comment type="block" pos:start="1247:15" pos:end="1247:44">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="1249:5" pos:end="1249:57"><expr pos:start="1249:5" pos:end="1249:56"><call pos:start="1249:5" pos:end="1249:56"><name pos:start="1249:5" pos:end="1249:13">LOG_DISAS</name><argument_list pos:start="1249:14" pos:end="1249:56">(<argument pos:start="1249:15" pos:end="1249:41"><expr pos:start="1249:15" pos:end="1249:41"><literal type="string" pos:start="1249:15" pos:end="1249:41">"mtc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1249:44" pos:end="1249:45"><expr pos:start="1249:44" pos:end="1249:45"><name pos:start="1249:44" pos:end="1249:45">rn</name></expr></argument>, <argument pos:start="1249:48" pos:end="1249:50"><expr pos:start="1249:48" pos:end="1249:50"><name pos:start="1249:48" pos:end="1249:50">reg</name></expr></argument>, <argument pos:start="1249:53" pos:end="1249:55"><expr pos:start="1249:53" pos:end="1249:55"><name pos:start="1249:53" pos:end="1249:55">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="1251:5" pos:end="1251:70">/* For simplicity assume that all writes can cause interrupts.  */</comment>

    <if_stmt pos:start="1253:5" pos:end="1259:5"><if pos:start="1253:5" pos:end="1259:5">if <condition pos:start="1253:8" pos:end="1253:19">(<expr pos:start="1253:9" pos:end="1253:18"><name pos:start="1253:9" pos:end="1253:18">use_icount</name></expr>)</condition> <block pos:start="1253:21" pos:end="1259:5">{<block_content pos:start="1255:9" pos:end="1257:30">

        <expr_stmt pos:start="1255:9" pos:end="1255:21"><expr pos:start="1255:9" pos:end="1255:20"><call pos:start="1255:9" pos:end="1255:20"><name pos:start="1255:9" pos:end="1255:18">gen_io_end</name><argument_list pos:start="1255:19" pos:end="1255:20">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1257:9" pos:end="1257:30"><expr pos:start="1257:9" pos:end="1257:29"><name pos:start="1257:9" pos:end="1257:19"><name pos:start="1257:9" pos:end="1257:11">ctx</name><operator pos:start="1257:12" pos:end="1257:13">-&gt;</operator><name pos:start="1257:14" pos:end="1257:19">bstate</name></name> <operator pos:start="1257:21" pos:end="1257:21">=</operator> <name pos:start="1257:23" pos:end="1257:29">BS_STOP</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1261:5" pos:end="1261:11">return;</return>



<label pos:start="1265:1" pos:end="1265:18"><name pos:start="1265:1" pos:end="1265:17">cp0_unimplemented</name>:</label>

    <expr_stmt pos:start="1267:5" pos:end="1267:57"><expr pos:start="1267:5" pos:end="1267:56"><call pos:start="1267:5" pos:end="1267:56"><name pos:start="1267:5" pos:end="1267:13">LOG_DISAS</name><argument_list pos:start="1267:14" pos:end="1267:56">(<argument pos:start="1267:15" pos:end="1267:41"><expr pos:start="1267:15" pos:end="1267:41"><literal type="string" pos:start="1267:15" pos:end="1267:41">"mtc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1267:44" pos:end="1267:45"><expr pos:start="1267:44" pos:end="1267:45"><name pos:start="1267:44" pos:end="1267:45">rn</name></expr></argument>, <argument pos:start="1267:48" pos:end="1267:50"><expr pos:start="1267:48" pos:end="1267:50"><name pos:start="1267:48" pos:end="1267:50">reg</name></expr></argument>, <argument pos:start="1267:53" pos:end="1267:55"><expr pos:start="1267:53" pos:end="1267:55"><name pos:start="1267:53" pos:end="1267:55">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
