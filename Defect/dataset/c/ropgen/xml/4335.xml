<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4335.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">hwaddr</name></type> <name pos:start="1:8" pos:end="1:36">sparc_cpu_get_phys_page_debug</name><parameter_list pos:start="1:37" pos:end="1:62">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">cs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:56">vaddr</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:21">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">SPARCCPU</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name> <init pos:start="5:19" pos:end="5:33">= <expr pos:start="5:21" pos:end="5:33"><call pos:start="5:21" pos:end="5:33"><name pos:start="5:21" pos:end="5:29">SPARC_CPU</name><argument_list pos:start="5:30" pos:end="5:33">(<argument pos:start="5:31" pos:end="5:32"><expr pos:start="5:31" pos:end="5:32"><name pos:start="5:31" pos:end="5:32">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">CPUSPARCState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">env</name> <init pos:start="7:24" pos:end="7:34">= <expr pos:start="7:26" pos:end="7:34"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:29">cpu</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:20">phys_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">mmu_idx</name> <init pos:start="11:17" pos:end="11:43">= <expr pos:start="11:19" pos:end="11:43"><call pos:start="11:19" pos:end="11:43"><name pos:start="11:19" pos:end="11:31">cpu_mmu_index</name><argument_list pos:start="11:32" pos:end="11:43">(<argument pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:35">env</name></expr></argument>, <argument pos:start="11:38" pos:end="11:42"><expr pos:start="11:38" pos:end="11:42"><name pos:start="11:38" pos:end="11:42">false</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:23">MemoryRegionSection</name></type> <name pos:start="13:25" pos:end="13:31">section</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:72">(<expr pos:start="17:9" pos:end="17:71"><call pos:start="17:9" pos:end="17:66"><name pos:start="17:9" pos:end="17:31">cpu_sparc_get_phys_page</name><argument_list pos:start="17:32" pos:end="17:66">(<argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">env</name></expr></argument>, <argument pos:start="17:38" pos:end="17:47"><expr pos:start="17:38" pos:end="17:47"><operator pos:start="17:38" pos:end="17:38">&amp;</operator><name pos:start="17:39" pos:end="17:47">phys_addr</name></expr></argument>, <argument pos:start="17:50" pos:end="17:53"><expr pos:start="17:50" pos:end="17:53"><name pos:start="17:50" pos:end="17:53">addr</name></expr></argument>, <argument pos:start="17:56" pos:end="17:56"><expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">2</literal></expr></argument>, <argument pos:start="17:59" pos:end="17:65"><expr pos:start="17:59" pos:end="17:65"><name pos:start="17:59" pos:end="17:65">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="17:68" pos:end="17:69">!=</operator> <literal type="number" pos:start="17:71" pos:end="17:71">0</literal></expr>)</condition> <block pos:start="17:74" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:9">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:76">(<expr pos:start="19:13" pos:end="19:75"><call pos:start="19:13" pos:end="19:70"><name pos:start="19:13" pos:end="19:35">cpu_sparc_get_phys_page</name><argument_list pos:start="19:36" pos:end="19:70">(<argument pos:start="19:37" pos:end="19:39"><expr pos:start="19:37" pos:end="19:39"><name pos:start="19:37" pos:end="19:39">env</name></expr></argument>, <argument pos:start="19:42" pos:end="19:51"><expr pos:start="19:42" pos:end="19:51"><operator pos:start="19:42" pos:end="19:42">&amp;</operator><name pos:start="19:43" pos:end="19:51">phys_addr</name></expr></argument>, <argument pos:start="19:54" pos:end="19:57"><expr pos:start="19:54" pos:end="19:57"><name pos:start="19:54" pos:end="19:57">addr</name></expr></argument>, <argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">0</literal></expr></argument>, <argument pos:start="19:63" pos:end="19:69"><expr pos:start="19:63" pos:end="19:69"><name pos:start="19:63" pos:end="19:69">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="19:72" pos:end="19:73">!=</operator> <literal type="number" pos:start="19:75" pos:end="19:75">0</literal></expr>)</condition> <block pos:start="19:78" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:68"><expr pos:start="27:5" pos:end="27:67"><name pos:start="27:5" pos:end="27:11">section</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:67"><name pos:start="27:15" pos:end="27:32">memory_region_find</name><argument_list pos:start="27:33" pos:end="27:67">(<argument pos:start="27:34" pos:end="27:52"><expr pos:start="27:34" pos:end="27:52"><call pos:start="27:34" pos:end="27:52"><name pos:start="27:34" pos:end="27:50">get_system_memory</name><argument_list pos:start="27:51" pos:end="27:52">()</argument_list></call></expr></argument>, <argument pos:start="27:55" pos:end="27:63"><expr pos:start="27:55" pos:end="27:63"><name pos:start="27:55" pos:end="27:63">phys_addr</name></expr></argument>, <argument pos:start="27:66" pos:end="27:66"><expr pos:start="27:66" pos:end="27:66"><literal type="number" pos:start="27:66" pos:end="27:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:23">memory_region_unref</name><argument_list pos:start="29:24" pos:end="29:35">(<argument pos:start="29:25" pos:end="29:34"><expr pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:31">section</name><operator pos:start="29:32" pos:end="29:32">.</operator><name pos:start="29:33" pos:end="29:34">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><operator pos:start="31:9" pos:end="31:9">!</operator><call pos:start="31:10" pos:end="31:32"><name pos:start="31:10" pos:end="31:18">int128_nz</name><argument_list pos:start="31:19" pos:end="31:32">(<argument pos:start="31:20" pos:end="31:31"><expr pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:26">section</name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:31">size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:35" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:21">return <expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:20">phys_addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
