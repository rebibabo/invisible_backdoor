<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9877.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_slice_luma</name><parameter_list pos:start="1:29" pos:end="7:49">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:71"><decl pos:start="1:53" pos:end="1:71"><type pos:start="1:53" pos:end="1:71"><name pos:start="1:53" pos:end="1:64">SliceContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">slice</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:37">uint16_t</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:42">dst</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:58"><decl pos:start="3:45" pos:end="3:58"><type pos:start="3:45" pos:end="3:58"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:58">dst_stride</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:47"><decl pos:start="5:30" pos:end="5:47"><type pos:start="5:30" pos:end="5:47"><specifier pos:start="5:30" pos:end="5:34">const</specifier> <name pos:start="5:36" pos:end="5:42">uint8_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">buf</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:66"><decl pos:start="5:50" pos:end="5:66"><type pos:start="5:50" pos:end="5:66"><name pos:start="5:50" pos:end="5:57">unsigned</name></type> <name pos:start="5:59" pos:end="5:66">buf_size</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:48"><decl pos:start="7:30" pos:end="7:48"><type pos:start="7:30" pos:end="7:48"><specifier pos:start="7:30" pos:end="7:34">const</specifier> <name pos:start="7:36" pos:end="7:42">int16_t</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:48">qmat</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="63:1">{<block_content pos:start="11:5" pos:end="61:13">

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">ProresContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">ctx</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><call pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:20">LOCAL_ALIGNED_16</name><argument_list pos:start="13:21" pos:end="13:47">(<argument pos:start="13:22" pos:end="13:28"><expr pos:start="13:22" pos:end="13:28"><name pos:start="13:22" pos:end="13:28">int16_t</name></expr></argument>, <argument pos:start="13:31" pos:end="13:36"><expr pos:start="13:31" pos:end="13:36"><name pos:start="13:31" pos:end="13:36">blocks</name></expr></argument>, <argument pos:start="13:39" pos:end="13:46"><expr pos:start="13:39" pos:end="13:46"><index pos:start="13:39" pos:end="13:46">[<expr pos:start="13:40" pos:end="13:45"><literal type="number" pos:start="13:40" pos:end="13:40">8</literal><operator pos:start="13:41" pos:end="13:41">*</operator><literal type="number" pos:start="13:42" pos:end="13:42">4</literal><operator pos:start="13:43" pos:end="13:43">*</operator><literal type="number" pos:start="13:44" pos:end="13:45">64</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">int16_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:18">block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">GetBitContext</name></type> <name pos:start="17:19" pos:end="17:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:49"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:48"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:27">blocks_per_slice</name> <init pos:start="19:29" pos:end="19:48">= <expr pos:start="19:31" pos:end="19:48"><name pos:start="19:31" pos:end="19:45"><name pos:start="19:31" pos:end="19:35">slice</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:45">mb_count</name></name><operator pos:start="19:46" pos:end="19:47">&lt;&lt;</operator><literal type="number" pos:start="19:48" pos:end="19:48">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <for pos:start="25:5" pos:end="27:45">for <control pos:start="25:9" pos:end="25:42">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:37"><expr pos:start="25:17" pos:end="25:36"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:36">blocks_per_slice</name></expr>;</condition> <incr pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:39">i</name><operator pos:start="25:40" pos:end="25:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:45"><block_content pos:start="27:9" pos:end="27:45">

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><call pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:17">bdsp</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:29">clear_block</name></name><argument_list pos:start="27:30" pos:end="27:44">(<argument pos:start="27:31" pos:end="27:43"><expr pos:start="27:31" pos:end="27:43"><name pos:start="27:31" pos:end="27:36">blocks</name><operator pos:start="27:37" pos:end="27:37">+</operator><operator pos:start="27:38" pos:end="27:38">(</operator><name pos:start="27:39" pos:end="27:39">i</name><operator pos:start="27:40" pos:end="27:41">&lt;&lt;</operator><literal type="number" pos:start="27:42" pos:end="27:42">6</literal><operator pos:start="27:43" pos:end="27:43">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><call pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:17">init_get_bits</name><argument_list pos:start="31:18" pos:end="31:42">(<argument pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><operator pos:start="31:19" pos:end="31:19">&amp;</operator><name pos:start="31:20" pos:end="31:21">gb</name></expr></argument>, <argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">buf</name></expr></argument>, <argument pos:start="31:29" pos:end="31:41"><expr pos:start="31:29" pos:end="31:41"><name pos:start="31:29" pos:end="31:36">buf_size</name> <operator pos:start="31:38" pos:end="31:39">&lt;&lt;</operator> <literal type="number" pos:start="31:41" pos:end="31:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><call pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:20">decode_dc_coeffs</name><argument_list pos:start="35:21" pos:end="35:51">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:24">gb</name></expr></argument>, <argument pos:start="35:27" pos:end="35:32"><expr pos:start="35:27" pos:end="35:32"><name pos:start="35:27" pos:end="35:32">blocks</name></expr></argument>, <argument pos:start="35:35" pos:end="35:50"><expr pos:start="35:35" pos:end="35:50"><name pos:start="35:35" pos:end="35:50">blocks_per_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:19"><if pos:start="37:5" pos:end="39:19">if <condition pos:start="37:8" pos:end="37:75">(<expr pos:start="37:9" pos:end="37:74"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:12">ret</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:69"><name pos:start="37:16" pos:end="37:31">decode_ac_coeffs</name><argument_list pos:start="37:32" pos:end="37:69">(<argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">avctx</name></expr></argument>, <argument pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:42">gb</name></expr></argument>, <argument pos:start="37:45" pos:end="37:50"><expr pos:start="37:45" pos:end="37:50"><name pos:start="37:45" pos:end="37:50">blocks</name></expr></argument>, <argument pos:start="37:53" pos:end="37:68"><expr pos:start="37:53" pos:end="37:68"><name pos:start="37:53" pos:end="37:68">blocks_per_slice</name></expr></argument>)</argument_list></call><operator pos:start="37:70" pos:end="37:70">)</operator> <operator pos:start="37:72" pos:end="37:72">&lt;</operator> <literal type="number" pos:start="37:74" pos:end="37:74">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:19"><block_content pos:start="39:9" pos:end="39:19">

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:9">block</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:18">blocks</name></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="59:5">for <control pos:start="45:9" pos:end="45:41">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:36"><expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:35"><name pos:start="45:21" pos:end="45:25">slice</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:35">mb_count</name></name></expr>;</condition> <incr pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:38">i</name><operator pos:start="45:39" pos:end="45:40">++</operator></expr></incr>)</control> <block pos:start="45:43" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:18">

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><call pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:11">ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:19">prodsp</name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:28">idct_put</name></name><argument_list pos:start="47:29" pos:end="47:65">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">dst</name></expr></argument>, <argument pos:start="47:35" pos:end="47:44"><expr pos:start="47:35" pos:end="47:44"><name pos:start="47:35" pos:end="47:44">dst_stride</name></expr></argument>, <argument pos:start="47:47" pos:end="47:58"><expr pos:start="47:47" pos:end="47:58"><name pos:start="47:47" pos:end="47:51">block</name><operator pos:start="47:52" pos:end="47:52">+</operator><operator pos:start="47:53" pos:end="47:53">(</operator><literal type="number" pos:start="47:54" pos:end="47:54">0</literal><operator pos:start="47:55" pos:end="47:56">&lt;&lt;</operator><literal type="number" pos:start="47:57" pos:end="47:57">6</literal><operator pos:start="47:58" pos:end="47:58">)</operator></expr></argument>, <argument pos:start="47:61" pos:end="47:64"><expr pos:start="47:61" pos:end="47:64"><name pos:start="47:61" pos:end="47:64">qmat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:81"><expr pos:start="49:9" pos:end="49:80"><call pos:start="49:9" pos:end="49:80"><name pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:11">ctx</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:19">prodsp</name><operator pos:start="49:20" pos:end="49:20">.</operator><name pos:start="49:21" pos:end="49:28">idct_put</name></name><argument_list pos:start="49:29" pos:end="49:80">(<argument pos:start="49:30" pos:end="49:47"><expr pos:start="49:30" pos:end="49:47"><name pos:start="49:30" pos:end="49:32">dst</name>             <operator pos:start="49:46" pos:end="49:46">+</operator><literal type="number" pos:start="49:47" pos:end="49:47">8</literal></expr></argument>, <argument pos:start="49:50" pos:end="49:59"><expr pos:start="49:50" pos:end="49:59"><name pos:start="49:50" pos:end="49:59">dst_stride</name></expr></argument>, <argument pos:start="49:62" pos:end="49:73"><expr pos:start="49:62" pos:end="49:73"><name pos:start="49:62" pos:end="49:66">block</name><operator pos:start="49:67" pos:end="49:67">+</operator><operator pos:start="49:68" pos:end="49:68">(</operator><literal type="number" pos:start="49:69" pos:end="49:69">1</literal><operator pos:start="49:70" pos:end="49:71">&lt;&lt;</operator><literal type="number" pos:start="49:72" pos:end="49:72">6</literal><operator pos:start="49:73" pos:end="49:73">)</operator></expr></argument>, <argument pos:start="49:76" pos:end="49:79"><expr pos:start="49:76" pos:end="49:79"><name pos:start="49:76" pos:end="49:79">qmat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:81"><expr pos:start="51:9" pos:end="51:80"><call pos:start="51:9" pos:end="51:80"><name pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:11">ctx</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:19">prodsp</name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:28">idct_put</name></name><argument_list pos:start="51:29" pos:end="51:80">(<argument pos:start="51:30" pos:end="51:45"><expr pos:start="51:30" pos:end="51:45"><name pos:start="51:30" pos:end="51:32">dst</name><operator pos:start="51:33" pos:end="51:33">+</operator><literal type="number" pos:start="51:34" pos:end="51:34">4</literal><operator pos:start="51:35" pos:end="51:35">*</operator><name pos:start="51:36" pos:end="51:45">dst_stride</name></expr></argument>  , <argument pos:start="51:50" pos:end="51:59"><expr pos:start="51:50" pos:end="51:59"><name pos:start="51:50" pos:end="51:59">dst_stride</name></expr></argument>, <argument pos:start="51:62" pos:end="51:73"><expr pos:start="51:62" pos:end="51:73"><name pos:start="51:62" pos:end="51:66">block</name><operator pos:start="51:67" pos:end="51:67">+</operator><operator pos:start="51:68" pos:end="51:68">(</operator><literal type="number" pos:start="51:69" pos:end="51:69">2</literal><operator pos:start="51:70" pos:end="51:71">&lt;&lt;</operator><literal type="number" pos:start="51:72" pos:end="51:72">6</literal><operator pos:start="51:73" pos:end="51:73">)</operator></expr></argument>, <argument pos:start="51:76" pos:end="51:79"><expr pos:start="51:76" pos:end="51:79"><name pos:start="51:76" pos:end="51:79">qmat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:81"><expr pos:start="53:9" pos:end="53:80"><call pos:start="53:9" pos:end="53:80"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:11">ctx</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:19">prodsp</name><operator pos:start="53:20" pos:end="53:20">.</operator><name pos:start="53:21" pos:end="53:28">idct_put</name></name><argument_list pos:start="53:29" pos:end="53:80">(<argument pos:start="53:30" pos:end="53:47"><expr pos:start="53:30" pos:end="53:47"><name pos:start="53:30" pos:end="53:32">dst</name><operator pos:start="53:33" pos:end="53:33">+</operator><literal type="number" pos:start="53:34" pos:end="53:34">4</literal><operator pos:start="53:35" pos:end="53:35">*</operator><name pos:start="53:36" pos:end="53:45">dst_stride</name><operator pos:start="53:46" pos:end="53:46">+</operator><literal type="number" pos:start="53:47" pos:end="53:47">8</literal></expr></argument>, <argument pos:start="53:50" pos:end="53:59"><expr pos:start="53:50" pos:end="53:59"><name pos:start="53:50" pos:end="53:59">dst_stride</name></expr></argument>, <argument pos:start="53:62" pos:end="53:73"><expr pos:start="53:62" pos:end="53:73"><name pos:start="53:62" pos:end="53:66">block</name><operator pos:start="53:67" pos:end="53:67">+</operator><operator pos:start="53:68" pos:end="53:68">(</operator><literal type="number" pos:start="53:69" pos:end="53:69">3</literal><operator pos:start="53:70" pos:end="53:71">&lt;&lt;</operator><literal type="number" pos:start="53:72" pos:end="53:72">6</literal><operator pos:start="53:73" pos:end="53:73">)</operator></expr></argument>, <argument pos:start="53:76" pos:end="53:79"><expr pos:start="53:76" pos:end="53:79"><name pos:start="53:76" pos:end="53:79">qmat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:13">block</name> <operator pos:start="55:15" pos:end="55:16">+=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">4</literal><operator pos:start="55:19" pos:end="55:19">*</operator><literal type="number" pos:start="55:20" pos:end="55:21">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:11">dst</name> <operator pos:start="57:13" pos:end="57:14">+=</operator> <literal type="number" pos:start="57:16" pos:end="57:17">16</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
