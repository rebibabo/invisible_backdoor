<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10198.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">piix4_pm_machine_ready</name><parameter_list pos:start="1:35" pos:end="1:61">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:43">Notifier</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">n</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:60">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:66"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">PIIX4PMState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:66">= <expr pos:start="5:23" pos:end="5:66"><call pos:start="5:23" pos:end="5:66"><name pos:start="5:23" pos:end="5:34">container_of</name><argument_list pos:start="5:35" pos:end="5:66">(<argument pos:start="5:36" pos:end="5:36"><expr pos:start="5:36" pos:end="5:36"><name pos:start="5:36" pos:end="5:36">n</name></expr></argument>, <argument pos:start="5:39" pos:end="5:50"><expr pos:start="5:39" pos:end="5:50"><name pos:start="5:39" pos:end="5:50">PIIX4PMState</name></expr></argument>, <argument pos:start="5:53" pos:end="5:65"><expr pos:start="5:53" pos:end="5:65"><name pos:start="5:53" pos:end="5:65">machine_ready</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">d</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:29">PCI_DEVICE</name><argument_list pos:start="7:30" pos:end="7:32">(<argument pos:start="7:31" pos:end="7:31"><expr pos:start="7:31" pos:end="7:31"><name pos:start="7:31" pos:end="7:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">io_as</name> <init pos:start="9:25" pos:end="9:49">= <expr pos:start="9:27" pos:end="9:49"><call pos:start="9:27" pos:end="9:49"><name pos:start="9:27" pos:end="9:46">pci_address_space_io</name><argument_list pos:start="9:47" pos:end="9:49">(<argument pos:start="9:48" pos:end="9:48"><expr pos:start="9:48" pos:end="9:48"><name pos:start="9:48" pos:end="9:48">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:12">pci_conf</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:16">d</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:24">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:57"><expr pos:start="17:5" pos:end="19:56"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:12">pci_conf</name><index pos:start="17:13" pos:end="17:18">[<expr pos:start="17:14" pos:end="17:17"><literal type="number" pos:start="17:14" pos:end="17:17">0x5f</literal></expr>]</index></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:25">0x10</literal> <operator pos:start="17:27" pos:end="17:27">|</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><ternary pos:start="19:10" pos:end="19:55"><condition pos:start="19:10" pos:end="19:46"><expr pos:start="19:10" pos:end="19:44"><call pos:start="19:10" pos:end="19:44"><name pos:start="19:10" pos:end="19:30">memory_region_present</name><argument_list pos:start="19:31" pos:end="19:44">(<argument pos:start="19:32" pos:end="19:36"><expr pos:start="19:32" pos:end="19:36"><name pos:start="19:32" pos:end="19:36">io_as</name></expr></argument>, <argument pos:start="19:39" pos:end="19:43"><expr pos:start="19:39" pos:end="19:43"><literal type="number" pos:start="19:39" pos:end="19:43">0x378</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="19:48" pos:end="19:51"> <expr pos:start="19:48" pos:end="19:51"><literal type="number" pos:start="19:48" pos:end="19:51">0x80</literal></expr> </then><else pos:start="19:53" pos:end="19:55">: <expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">0</literal></expr></else></ternary><operator pos:start="19:56" pos:end="19:56">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:12">pci_conf</name><index pos:start="21:13" pos:end="21:18">[<expr pos:start="21:14" pos:end="21:17"><literal type="number" pos:start="21:14" pos:end="21:17">0x63</literal></expr>]</index></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:25">0x60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:57"><expr pos:start="23:5" pos:end="25:56"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:12">pci_conf</name><index pos:start="23:13" pos:end="23:18">[<expr pos:start="23:14" pos:end="23:17"><literal type="number" pos:start="23:14" pos:end="23:17">0x67</literal></expr>]</index></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <operator pos:start="23:22" pos:end="23:22">(</operator><ternary pos:start="23:23" pos:end="23:68"><condition pos:start="23:23" pos:end="23:59"><expr pos:start="23:23" pos:end="23:57"><call pos:start="23:23" pos:end="23:57"><name pos:start="23:23" pos:end="23:43">memory_region_present</name><argument_list pos:start="23:44" pos:end="23:57">(<argument pos:start="23:45" pos:end="23:49"><expr pos:start="23:45" pos:end="23:49"><name pos:start="23:45" pos:end="23:49">io_as</name></expr></argument>, <argument pos:start="23:52" pos:end="23:56"><expr pos:start="23:52" pos:end="23:56"><literal type="number" pos:start="23:52" pos:end="23:56">0x3f8</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="23:61" pos:end="23:64"> <expr pos:start="23:61" pos:end="23:64"><literal type="number" pos:start="23:61" pos:end="23:64">0x08</literal></expr> </then><else pos:start="23:66" pos:end="23:68">: <expr pos:start="23:68" pos:end="23:68"><literal type="number" pos:start="23:68" pos:end="23:68">0</literal></expr></else></ternary><operator pos:start="23:69" pos:end="23:69">)</operator> <operator pos:start="23:71" pos:end="23:71">|</operator>

        <operator pos:start="25:9" pos:end="25:9">(</operator><ternary pos:start="25:10" pos:end="25:55"><condition pos:start="25:10" pos:end="25:46"><expr pos:start="25:10" pos:end="25:44"><call pos:start="25:10" pos:end="25:44"><name pos:start="25:10" pos:end="25:30">memory_region_present</name><argument_list pos:start="25:31" pos:end="25:44">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">io_as</name></expr></argument>, <argument pos:start="25:39" pos:end="25:43"><expr pos:start="25:39" pos:end="25:43"><literal type="number" pos:start="25:39" pos:end="25:43">0x2f8</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="25:48" pos:end="25:51"> <expr pos:start="25:48" pos:end="25:51"><literal type="number" pos:start="25:48" pos:end="25:51">0x90</literal></expr> </then><else pos:start="25:53" pos:end="25:55">: <expr pos:start="25:55" pos:end="25:55"><literal type="number" pos:start="25:55" pos:end="25:55">0</literal></expr></else></ternary><operator pos:start="25:56" pos:end="25:56">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:32">(<expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:31">use_acpi_pci_hotplug</name></name></expr>)</condition> <block pos:start="29:34" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:62">

        <expr_stmt pos:start="31:9" pos:end="31:62"><expr pos:start="31:9" pos:end="31:61"><call pos:start="31:9" pos:end="31:61"><name pos:start="31:9" pos:end="31:24">pci_for_each_bus</name><argument_list pos:start="31:25" pos:end="31:61">(<argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><name pos:start="31:26" pos:end="31:31"><name pos:start="31:26" pos:end="31:26">d</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:31">bus</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:57"><expr pos:start="31:34" pos:end="31:57"><name pos:start="31:34" pos:end="31:57">piix4_update_bus_hotplug</name></expr></argument>, <argument pos:start="31:60" pos:end="31:60"><expr pos:start="31:60" pos:end="31:60"><name pos:start="31:60" pos:end="31:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:44">

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:32">piix4_update_bus_hotplug</name><argument_list pos:start="35:33" pos:end="35:43">(<argument pos:start="35:34" pos:end="35:39"><expr pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:34">d</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:39">bus</name></name></expr></argument>, <argument pos:start="35:42" pos:end="35:42"><expr pos:start="35:42" pos:end="35:42"><name pos:start="35:42" pos:end="35:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
