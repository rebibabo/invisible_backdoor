<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12044.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:7">float64</name> <name pos:start="1:9" pos:end="1:14">HELPER</name></type>(<name pos:start="1:16" pos:end="1:26">sub_cmp_f64</name>)<parameter_list pos:start="1:28" pos:end="1:64">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:36">CPUState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:50">float64</name></type> <name pos:start="1:52" pos:end="1:52">a</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:61">float64</name></type> <name pos:start="1:63" pos:end="1:63">b</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:15">

    <comment type="block" pos:start="5:5" pos:end="5:53">/* ??? This may incorrectly raise exceptions.  */</comment>

    <comment type="block" pos:start="7:5" pos:end="7:46">/* ??? Should flush denormals to zero.  */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">float64</name></type> <name pos:start="9:13" pos:end="9:15">res</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:7">res</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:44"><name pos:start="11:11" pos:end="11:21">float64_sub</name><argument_list pos:start="11:22" pos:end="11:44">(<argument pos:start="11:23" pos:end="11:23"><expr pos:start="11:23" pos:end="11:23"><name pos:start="11:23" pos:end="11:23">a</name></expr></argument>, <argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">b</name></expr></argument>, <argument pos:start="11:29" pos:end="11:43"><expr pos:start="11:29" pos:end="11:43"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">env</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:43">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><call pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:22">float64_is_nan</name><argument_list pos:start="13:23" pos:end="13:27">(<argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:26">res</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:30" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:9">

        <comment type="block" pos:start="15:9" pos:end="15:73">/* +/-inf compares equal against itself, but sub returns nan.  */</comment>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="19:34">(<expr pos:start="17:13" pos:end="19:33"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:30"><name pos:start="17:14" pos:end="17:27">float64_is_nan</name><argument_list pos:start="17:28" pos:end="17:30">(<argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">a</name></expr></argument>)</argument_list></call>

            <operator pos:start="19:13" pos:end="19:14">&amp;&amp;</operator> <operator pos:start="19:16" pos:end="19:16">!</operator><call pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:30">float64_is_nan</name><argument_list pos:start="19:31" pos:end="19:33">(<argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">b</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:36" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:39">

            <expr_stmt pos:start="21:13" pos:end="21:31"><expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:15">res</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:30">float64_zero</name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="25:39"><if pos:start="23:13" pos:end="25:39">if <condition pos:start="23:16" pos:end="23:58">(<expr pos:start="23:17" pos:end="23:57"><call pos:start="23:17" pos:end="23:57"><name pos:start="23:17" pos:end="23:32">float64_lt_quiet</name><argument_list pos:start="23:33" pos:end="23:57">(<argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><name pos:start="23:34" pos:end="23:34">a</name></expr></argument>, <argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:39">res</name></expr></argument>, <argument pos:start="23:42" pos:end="23:56"><expr pos:start="23:42" pos:end="23:56"><operator pos:start="23:42" pos:end="23:42">&amp;</operator><name pos:start="23:43" pos:end="23:56"><name pos:start="23:43" pos:end="23:45">env</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:56">fp_status</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:39"><block_content pos:start="25:17" pos:end="25:39">

                <expr_stmt pos:start="25:17" pos:end="25:39"><expr pos:start="25:17" pos:end="25:38"><name pos:start="25:17" pos:end="25:19">res</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:38"><name pos:start="25:23" pos:end="25:33">float64_chs</name><argument_list pos:start="25:34" pos:end="25:38">(<argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
