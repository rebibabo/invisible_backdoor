<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2312.c" pos:tabs="8"><function pos:start="1:1" pos:end="365:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">cine_read_header</name><parameter_list pos:start="1:28" pos:end="1:51">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="365:1">{<block_content pos:start="5:5" pos:end="363:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:31">= <expr pos:start="5:23" pos:end="5:31"><name pos:start="5:23" pos:end="5:31"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:106"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:24">version</name></decl>, <decl pos:start="9:27" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:27" pos:end="9:37">compression</name></decl>, <decl pos:start="9:40" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:40" pos:end="9:53">offImageHeader</name></decl>, <decl pos:start="9:56" pos:end="9:63"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:56" pos:end="9:63">offSetup</name></decl>, <decl pos:start="9:66" pos:end="9:80"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:66" pos:end="9:80">offImageOffsets</name></decl>, <decl pos:start="9:83" pos:end="9:92"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:83" pos:end="9:92">biBitCount</name></decl>, <decl pos:start="9:95" pos:end="9:100"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:95" pos:end="9:100">length</name></decl>, <decl pos:start="9:103" pos:end="9:105"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:103" pos:end="9:105">CFA</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">vflip</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:21">description</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:6">st</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:41"><name pos:start="19:10" pos:end="19:28">avformat_new_stream</name><argument_list pos:start="19:29" pos:end="19:41">(<argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34">avctx</name></expr></argument>, <argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><name pos:start="19:37" pos:end="19:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">st</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:50"><expr pos:start="25:5" pos:end="25:49"><name pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:16">codecpar</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:28">codec_type</name></name> <operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:49">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:6">st</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:16">codecpar</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:26">codec_id</name></name>   <operator pos:start="27:30" pos:end="27:30">=</operator> <name pos:start="27:32" pos:end="27:51">AV_CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:16">codecpar</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:27">codec_tag</name></name>  <operator pos:start="29:30" pos:end="29:30">=</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:34">/* CINEFILEHEADER structure */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><call pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:13">avio_skip</name><argument_list pos:start="35:14" pos:end="35:20">(<argument pos:start="35:15" pos:end="35:16"><expr pos:start="35:15" pos:end="35:16"><name pos:start="35:15" pos:end="35:16">pb</name></expr></argument>, <argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="35:23" pos:end="35:41">// Type, Headersize</comment>



    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:15">compression</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:31"><name pos:start="39:19" pos:end="39:27">avio_rl16</name><argument_list pos:start="39:28" pos:end="39:31">(<argument pos:start="39:29" pos:end="39:30"><expr pos:start="39:29" pos:end="39:30"><name pos:start="39:29" pos:end="39:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:11">version</name>     <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:31"><name pos:start="41:19" pos:end="41:27">avio_rl16</name><argument_list pos:start="41:28" pos:end="41:31">(<argument pos:start="41:29" pos:end="41:30"><expr pos:start="41:29" pos:end="41:30"><name pos:start="41:29" pos:end="41:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:21">(<expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:15">version</name> <operator pos:start="43:17" pos:end="43:18">!=</operator> <literal type="number" pos:start="43:20" pos:end="43:20">1</literal></expr>)</condition> <block pos:start="43:23" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:35">

        <expr_stmt pos:start="45:9" pos:end="45:68"><expr pos:start="45:9" pos:end="45:67"><call pos:start="45:9" pos:end="45:67"><name pos:start="45:9" pos:end="45:29">avpriv_request_sample</name><argument_list pos:start="45:30" pos:end="45:67">(<argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35">avctx</name></expr></argument>, <argument pos:start="45:38" pos:end="45:57"><expr pos:start="45:38" pos:end="45:57"><literal type="string" pos:start="45:38" pos:end="45:57">"unknown version %i"</literal></expr></argument>, <argument pos:start="45:60" pos:end="45:66"><expr pos:start="45:60" pos:end="45:66"><name pos:start="45:60" pos:end="45:66">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:35">return <expr pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:22"><expr pos:start="53:5" pos:end="53:21"><call pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:13">avio_skip</name><argument_list pos:start="53:14" pos:end="53:21">(<argument pos:start="53:15" pos:end="53:16"><expr pos:start="53:15" pos:end="53:16"><name pos:start="53:15" pos:end="53:16">pb</name></expr></argument>, <argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><literal type="number" pos:start="53:19" pos:end="53:20">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="53:24" pos:end="53:76">// FirstMovieImage, TotalImageCount, FirstImageNumber</comment>



    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:6">st</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:16">duration</name></name>    <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:35"><name pos:start="57:23" pos:end="57:31">avio_rl32</name><argument_list pos:start="57:32" pos:end="57:35">(<argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:18">offImageHeader</name>  <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:35"><name pos:start="59:23" pos:end="59:31">avio_rl32</name><argument_list pos:start="59:32" pos:end="59:35">(<argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:12">offSetup</name>        <operator pos:start="61:21" pos:end="61:21">=</operator> <call pos:start="61:23" pos:end="61:35"><name pos:start="61:23" pos:end="61:31">avio_rl32</name><argument_list pos:start="61:32" pos:end="61:35">(<argument pos:start="61:33" pos:end="61:34"><expr pos:start="61:33" pos:end="61:34"><name pos:start="61:33" pos:end="61:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:19">offImageOffsets</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="63:35"><name pos:start="63:23" pos:end="63:31">avio_rl32</name><argument_list pos:start="63:32" pos:end="63:35">(<argument pos:start="63:33" pos:end="63:34"><expr pos:start="63:33" pos:end="63:34"><name pos:start="63:33" pos:end="63:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:21"><expr pos:start="67:5" pos:end="67:20"><call pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:13">avio_skip</name><argument_list pos:start="67:14" pos:end="67:20">(<argument pos:start="67:15" pos:end="67:16"><expr pos:start="67:15" pos:end="67:16"><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument>, <argument pos:start="67:19" pos:end="67:19"><expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="67:23" pos:end="67:36">// TriggerTime</comment>



    <comment type="block" pos:start="71:5" pos:end="71:36">/* BITMAPINFOHEADER structure */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:44"><expr pos:start="73:5" pos:end="73:43"><call pos:start="73:5" pos:end="73:43"><name pos:start="73:5" pos:end="73:13">avio_seek</name><argument_list pos:start="73:14" pos:end="73:43">(<argument pos:start="73:15" pos:end="73:16"><expr pos:start="73:15" pos:end="73:16"><name pos:start="73:15" pos:end="73:16">pb</name></expr></argument>, <argument pos:start="73:19" pos:end="73:32"><expr pos:start="73:19" pos:end="73:32"><name pos:start="73:19" pos:end="73:32">offImageHeader</name></expr></argument>, <argument pos:start="73:35" pos:end="73:42"><expr pos:start="73:35" pos:end="73:42"><name pos:start="73:35" pos:end="73:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><call pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:13">avio_skip</name><argument_list pos:start="75:14" pos:end="75:20">(<argument pos:start="75:15" pos:end="75:16"><expr pos:start="75:15" pos:end="75:16"><name pos:start="75:15" pos:end="75:16">pb</name></expr></argument>, <argument pos:start="75:19" pos:end="75:19"><expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="75:23" pos:end="75:30">//biSize</comment>

    <expr_stmt pos:start="77:5" pos:end="77:45"><expr pos:start="77:5" pos:end="77:44"><name pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:6">st</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:16">codecpar</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">width</name></name>      <operator pos:start="77:30" pos:end="77:30">=</operator> <call pos:start="77:32" pos:end="77:44"><name pos:start="77:32" pos:end="77:40">avio_rl32</name><argument_list pos:start="77:41" pos:end="77:44">(<argument pos:start="77:42" pos:end="77:43"><expr pos:start="77:42" pos:end="77:43"><name pos:start="77:42" pos:end="77:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:45"><expr pos:start="79:5" pos:end="79:44"><name pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:6">st</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:16">codecpar</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:24">height</name></name>     <operator pos:start="79:30" pos:end="79:30">=</operator> <call pos:start="79:32" pos:end="79:44"><name pos:start="79:32" pos:end="79:40">avio_rl32</name><argument_list pos:start="79:41" pos:end="79:44">(<argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="85:35"><if pos:start="83:5" pos:end="85:35">if <condition pos:start="83:8" pos:end="83:27">(<expr pos:start="83:9" pos:end="83:26"><call pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:17">avio_rl16</name><argument_list pos:start="83:18" pos:end="83:21">(<argument pos:start="83:19" pos:end="83:20"><expr pos:start="83:19" pos:end="83:20"><name pos:start="83:19" pos:end="83:20">pb</name></expr></argument>)</argument_list></call> <operator pos:start="83:23" pos:end="83:24">!=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">1</literal></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:35"><block_content pos:start="85:9" pos:end="85:35"> <comment type="line" pos:start="83:29" pos:end="83:39">// biPlanes</comment>

        <return pos:start="85:9" pos:end="85:35">return <expr pos:start="85:16" pos:end="85:34"><name pos:start="85:16" pos:end="85:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:31"><expr pos:start="89:5" pos:end="89:30"><name pos:start="89:5" pos:end="89:14">biBitCount</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <call pos:start="89:18" pos:end="89:30"><name pos:start="89:18" pos:end="89:26">avio_rl16</name><argument_list pos:start="89:27" pos:end="89:30">(<argument pos:start="89:28" pos:end="89:29"><expr pos:start="89:28" pos:end="89:29"><name pos:start="89:28" pos:end="89:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:84">(<expr pos:start="91:9" pos:end="91:83"><name pos:start="91:9" pos:end="91:18">biBitCount</name> <operator pos:start="91:20" pos:end="91:21">!=</operator> <literal type="number" pos:start="91:23" pos:end="91:23">8</literal> <operator pos:start="91:25" pos:end="91:26">&amp;&amp;</operator> <name pos:start="91:28" pos:end="91:37">biBitCount</name> <operator pos:start="91:39" pos:end="91:40">!=</operator> <literal type="number" pos:start="91:42" pos:end="91:43">16</literal> <operator pos:start="91:45" pos:end="91:46">&amp;&amp;</operator> <name pos:start="91:48" pos:end="91:57">biBitCount</name> <operator pos:start="91:59" pos:end="91:60">!=</operator> <literal type="number" pos:start="91:62" pos:end="91:63">24</literal> <operator pos:start="91:65" pos:end="91:66">&amp;&amp;</operator> <name pos:start="91:68" pos:end="91:77">biBitCount</name> <operator pos:start="91:79" pos:end="91:80">!=</operator> <literal type="number" pos:start="91:82" pos:end="91:83">48</literal></expr>)</condition> <block pos:start="91:86" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:35">

        <expr_stmt pos:start="93:9" pos:end="93:78"><expr pos:start="93:9" pos:end="93:77"><call pos:start="93:9" pos:end="93:77"><name pos:start="93:9" pos:end="93:29">avpriv_request_sample</name><argument_list pos:start="93:30" pos:end="93:77">(<argument pos:start="93:31" pos:end="93:35"><expr pos:start="93:31" pos:end="93:35"><name pos:start="93:31" pos:end="93:35">avctx</name></expr></argument>, <argument pos:start="93:38" pos:end="93:64"><expr pos:start="93:38" pos:end="93:64"><literal type="string" pos:start="93:38" pos:end="93:64">"unsupported biBitCount %i"</literal></expr></argument>, <argument pos:start="93:67" pos:end="93:76"><expr pos:start="93:67" pos:end="93:76"><name pos:start="93:67" pos:end="93:76">biBitCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:35">return <expr pos:start="95:16" pos:end="95:34"><name pos:start="95:16" pos:end="95:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="101:5" pos:end="123:5">switch <condition pos:start="101:12" pos:end="101:26">(<expr pos:start="101:13" pos:end="101:25"><call pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:21">avio_rl32</name><argument_list pos:start="101:22" pos:end="101:25">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:28" pos:end="123:5">{<block_content pos:start="103:5" pos:end="121:35">

    <case pos:start="103:5" pos:end="103:17">case <expr pos:start="103:10" pos:end="103:16"><name pos:start="103:10" pos:end="103:16">BMP_RGB</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:18"><expr pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:13">vflip</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <literal type="number" pos:start="105:17" pos:end="105:17">0</literal></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:15">case <expr pos:start="109:10" pos:end="109:14"><literal type="number" pos:start="109:10" pos:end="109:14">0x100</literal></expr>:</case> <comment type="block" pos:start="109:17" pos:end="109:31">/* BI_PACKED */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:58"><expr pos:start="111:9" pos:end="111:57"><name pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:10">st</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:20">codecpar</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:31">codec_tag</name></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <call pos:start="111:35" pos:end="111:57"><name pos:start="111:35" pos:end="111:39">MKTAG</name><argument_list pos:start="111:40" pos:end="111:57">(<argument pos:start="111:41" pos:end="111:43"><expr pos:start="111:41" pos:end="111:43"><literal type="char" pos:start="111:41" pos:end="111:43">'B'</literal></expr></argument>, <argument pos:start="111:46" pos:end="111:48"><expr pos:start="111:46" pos:end="111:48"><literal type="char" pos:start="111:46" pos:end="111:48">'I'</literal></expr></argument>, <argument pos:start="111:51" pos:end="111:53"><expr pos:start="111:51" pos:end="111:53"><literal type="char" pos:start="111:51" pos:end="111:53">'T'</literal></expr></argument>, <argument pos:start="111:56" pos:end="111:56"><expr pos:start="111:56" pos:end="111:56"><literal type="number" pos:start="111:56" pos:end="111:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:18"><expr pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:13">vflip</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <literal type="number" pos:start="113:17" pos:end="113:17">1</literal></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <default pos:start="117:5" pos:end="117:12">default:</default>

        <expr_stmt pos:start="119:9" pos:end="119:67"><expr pos:start="119:9" pos:end="119:66"><call pos:start="119:9" pos:end="119:66"><name pos:start="119:9" pos:end="119:29">avpriv_request_sample</name><argument_list pos:start="119:30" pos:end="119:66">(<argument pos:start="119:31" pos:end="119:35"><expr pos:start="119:31" pos:end="119:35"><name pos:start="119:31" pos:end="119:35">avctx</name></expr></argument>, <argument pos:start="119:38" pos:end="119:65"><expr pos:start="119:38" pos:end="119:65"><literal type="string" pos:start="119:38" pos:end="119:65">"unknown bitmap compression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:35">return <expr pos:start="121:16" pos:end="121:34"><name pos:start="121:16" pos:end="121:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="127:5" pos:end="127:21"><expr pos:start="127:5" pos:end="127:20"><call pos:start="127:5" pos:end="127:20"><name pos:start="127:5" pos:end="127:13">avio_skip</name><argument_list pos:start="127:14" pos:end="127:20">(<argument pos:start="127:15" pos:end="127:16"><expr pos:start="127:15" pos:end="127:16"><name pos:start="127:15" pos:end="127:16">pb</name></expr></argument>, <argument pos:start="127:19" pos:end="127:19"><expr pos:start="127:19" pos:end="127:19"><literal type="number" pos:start="127:19" pos:end="127:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="127:23" pos:end="127:36">// biSizeImage</comment>



    <comment type="block" pos:start="131:5" pos:end="131:31">/* parse SETUP structure */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:38"><expr pos:start="133:5" pos:end="133:37"><call pos:start="133:5" pos:end="133:37"><name pos:start="133:5" pos:end="133:13">avio_seek</name><argument_list pos:start="133:14" pos:end="133:37">(<argument pos:start="133:15" pos:end="133:16"><expr pos:start="133:15" pos:end="133:16"><name pos:start="133:15" pos:end="133:16">pb</name></expr></argument>, <argument pos:start="133:19" pos:end="133:26"><expr pos:start="133:19" pos:end="133:26"><name pos:start="133:19" pos:end="133:26">offSetup</name></expr></argument>, <argument pos:start="133:29" pos:end="133:36"><expr pos:start="133:29" pos:end="133:36"><name pos:start="133:29" pos:end="133:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:23"><expr pos:start="135:5" pos:end="135:22"><call pos:start="135:5" pos:end="135:22"><name pos:start="135:5" pos:end="135:13">avio_skip</name><argument_list pos:start="135:14" pos:end="135:22">(<argument pos:start="135:15" pos:end="135:16"><expr pos:start="135:15" pos:end="135:16"><name pos:start="135:15" pos:end="135:16">pb</name></expr></argument>, <argument pos:start="135:19" pos:end="135:21"><expr pos:start="135:19" pos:end="135:21"><literal type="number" pos:start="135:19" pos:end="135:21">140</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="135:25" pos:end="135:57">// FrameRatae16 .. descriptionOld</comment>

    <if_stmt pos:start="137:5" pos:end="139:35"><if pos:start="137:5" pos:end="139:35">if <condition pos:start="137:8" pos:end="137:32">(<expr pos:start="137:9" pos:end="137:31"><call pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:17">avio_rl16</name><argument_list pos:start="137:18" pos:end="137:21">(<argument pos:start="137:19" pos:end="137:20"><expr pos:start="137:19" pos:end="137:20"><name pos:start="137:19" pos:end="137:20">pb</name></expr></argument>)</argument_list></call> <operator pos:start="137:23" pos:end="137:24">!=</operator> <literal type="number" pos:start="137:26" pos:end="137:31">0x5453</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:35"><block_content pos:start="139:9" pos:end="139:35">

        <return pos:start="139:9" pos:end="139:35">return <expr pos:start="139:16" pos:end="139:34"><name pos:start="139:16" pos:end="139:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:27"><expr pos:start="141:5" pos:end="141:26"><name pos:start="141:5" pos:end="141:10">length</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <call pos:start="141:14" pos:end="141:26"><name pos:start="141:14" pos:end="141:22">avio_rl16</name><argument_list pos:start="141:23" pos:end="141:26">(<argument pos:start="141:24" pos:end="141:25"><expr pos:start="141:24" pos:end="141:25"><name pos:start="141:24" pos:end="141:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="149:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:24">(<expr pos:start="143:9" pos:end="143:23"><name pos:start="143:9" pos:end="143:14">length</name> <operator pos:start="143:16" pos:end="143:16">&lt;</operator> <literal type="number" pos:start="143:18" pos:end="143:23">0x163C</literal></expr>)</condition> <block pos:start="143:26" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:35">

        <expr_stmt pos:start="145:9" pos:end="145:59"><expr pos:start="145:9" pos:end="145:58"><call pos:start="145:9" pos:end="145:58"><name pos:start="145:9" pos:end="145:29">avpriv_request_sample</name><argument_list pos:start="145:30" pos:end="145:58">(<argument pos:start="145:31" pos:end="145:35"><expr pos:start="145:31" pos:end="145:35"><name pos:start="145:31" pos:end="145:35">avctx</name></expr></argument>, <argument pos:start="145:38" pos:end="145:57"><expr pos:start="145:38" pos:end="145:57"><literal type="string" pos:start="145:38" pos:end="145:57">"short SETUP header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:35">return <expr pos:start="147:16" pos:end="147:34"><name pos:start="147:16" pos:end="147:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:23"><expr pos:start="153:5" pos:end="153:22"><call pos:start="153:5" pos:end="153:22"><name pos:start="153:5" pos:end="153:13">avio_skip</name><argument_list pos:start="153:14" pos:end="153:22">(<argument pos:start="153:15" pos:end="153:16"><expr pos:start="153:15" pos:end="153:16"><name pos:start="153:15" pos:end="153:16">pb</name></expr></argument>, <argument pos:start="153:19" pos:end="153:21"><expr pos:start="153:19" pos:end="153:21"><literal type="number" pos:start="153:19" pos:end="153:21">616</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="153:25" pos:end="153:44">// Binning .. bFlipH</comment>

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:31">(<expr pos:start="155:9" pos:end="155:30"><operator pos:start="155:9" pos:end="155:9">!</operator><call pos:start="155:10" pos:end="155:22"><name pos:start="155:10" pos:end="155:18">avio_rl32</name><argument_list pos:start="155:19" pos:end="155:22">(<argument pos:start="155:20" pos:end="155:21"><expr pos:start="155:20" pos:end="155:21"><name pos:start="155:20" pos:end="155:21">pb</name></expr></argument>)</argument_list></call> <operator pos:start="155:24" pos:end="155:24">^</operator> <name pos:start="155:26" pos:end="155:30">vflip</name></expr>)</condition> <block pos:start="155:33" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:42">

        <expr_stmt pos:start="157:9" pos:end="157:57"><expr pos:start="157:9" pos:end="157:56"><name pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:10">st</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:20">codecpar</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:31">extradata</name></name>  <operator pos:start="157:34" pos:end="157:34">=</operator> <call pos:start="157:36" pos:end="157:56"><name pos:start="157:36" pos:end="157:44">av_strdup</name><argument_list pos:start="157:45" pos:end="157:56">(<argument pos:start="157:46" pos:end="157:55"><expr pos:start="157:46" pos:end="157:55"><literal type="string" pos:start="157:46" pos:end="157:55">"BottomUp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:42"><expr pos:start="159:9" pos:end="159:41"><name pos:start="159:9" pos:end="159:36"><name pos:start="159:9" pos:end="159:10">st</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:20">codecpar</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:36">extradata_size</name></name>  <operator pos:start="159:39" pos:end="159:39">=</operator> <literal type="number" pos:start="159:41" pos:end="159:41">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:21"><expr pos:start="165:5" pos:end="165:20"><call pos:start="165:5" pos:end="165:20"><name pos:start="165:5" pos:end="165:13">avio_skip</name><argument_list pos:start="165:14" pos:end="165:20">(<argument pos:start="165:15" pos:end="165:16"><expr pos:start="165:15" pos:end="165:16"><name pos:start="165:15" pos:end="165:16">pb</name></expr></argument>, <argument pos:start="165:19" pos:end="165:19"><expr pos:start="165:19" pos:end="165:19"><literal type="number" pos:start="165:19" pos:end="165:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="165:23" pos:end="165:29">// Grid</comment>



    <expr_stmt pos:start="169:5" pos:end="169:50"><expr pos:start="169:5" pos:end="169:49"><call pos:start="169:5" pos:end="169:49"><name pos:start="169:5" pos:end="169:23">avpriv_set_pts_info</name><argument_list pos:start="169:24" pos:end="169:49">(<argument pos:start="169:25" pos:end="169:26"><expr pos:start="169:25" pos:end="169:26"><name pos:start="169:25" pos:end="169:26">st</name></expr></argument>, <argument pos:start="169:29" pos:end="169:30"><expr pos:start="169:29" pos:end="169:30"><literal type="number" pos:start="169:29" pos:end="169:30">64</literal></expr></argument>, <argument pos:start="169:33" pos:end="169:33"><expr pos:start="169:33" pos:end="169:33"><literal type="number" pos:start="169:33" pos:end="169:33">1</literal></expr></argument>, <argument pos:start="169:36" pos:end="169:48"><expr pos:start="169:36" pos:end="169:48"><call pos:start="169:36" pos:end="169:48"><name pos:start="169:36" pos:end="169:44">avio_rl32</name><argument_list pos:start="169:45" pos:end="169:48">(<argument pos:start="169:46" pos:end="169:47"><expr pos:start="169:46" pos:end="169:47"><name pos:start="169:46" pos:end="169:47">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:22"><expr pos:start="173:5" pos:end="173:21"><call pos:start="173:5" pos:end="173:21"><name pos:start="173:5" pos:end="173:13">avio_skip</name><argument_list pos:start="173:14" pos:end="173:21">(<argument pos:start="173:15" pos:end="173:16"><expr pos:start="173:15" pos:end="173:16"><name pos:start="173:15" pos:end="173:16">pb</name></expr></argument>, <argument pos:start="173:19" pos:end="173:20"><expr pos:start="173:19" pos:end="173:20"><literal type="number" pos:start="173:19" pos:end="173:20">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="173:24" pos:end="173:49">// Shutter .. bEnableColor</comment>



    <expr_stmt pos:start="177:5" pos:end="177:72"><expr pos:start="177:5" pos:end="177:71"><call pos:start="177:5" pos:end="177:71"><name pos:start="177:5" pos:end="177:20">set_metadata_int</name><argument_list pos:start="177:21" pos:end="177:71">(<argument pos:start="177:22" pos:end="177:34"><expr pos:start="177:22" pos:end="177:34"><operator pos:start="177:22" pos:end="177:22">&amp;</operator><name pos:start="177:23" pos:end="177:34"><name pos:start="177:23" pos:end="177:24">st</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:34">metadata</name></name></expr></argument>, <argument pos:start="177:37" pos:end="177:52"><expr pos:start="177:37" pos:end="177:52"><literal type="string" pos:start="177:37" pos:end="177:52">"camera_version"</literal></expr></argument>, <argument pos:start="177:55" pos:end="177:67"><expr pos:start="177:55" pos:end="177:67"><call pos:start="177:55" pos:end="177:67"><name pos:start="177:55" pos:end="177:63">avio_rl32</name><argument_list pos:start="177:64" pos:end="177:67">(<argument pos:start="177:65" pos:end="177:66"><expr pos:start="177:65" pos:end="177:66"><name pos:start="177:65" pos:end="177:66">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:70" pos:end="177:70"><expr pos:start="177:70" pos:end="177:70"><literal type="number" pos:start="177:70" pos:end="177:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:74"><expr pos:start="179:5" pos:end="179:73"><call pos:start="179:5" pos:end="179:73"><name pos:start="179:5" pos:end="179:20">set_metadata_int</name><argument_list pos:start="179:21" pos:end="179:73">(<argument pos:start="179:22" pos:end="179:34"><expr pos:start="179:22" pos:end="179:34"><operator pos:start="179:22" pos:end="179:22">&amp;</operator><name pos:start="179:23" pos:end="179:34"><name pos:start="179:23" pos:end="179:24">st</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:34">metadata</name></name></expr></argument>, <argument pos:start="179:37" pos:end="179:54"><expr pos:start="179:37" pos:end="179:54"><literal type="string" pos:start="179:37" pos:end="179:54">"firmware_version"</literal></expr></argument>, <argument pos:start="179:57" pos:end="179:69"><expr pos:start="179:57" pos:end="179:69"><call pos:start="179:57" pos:end="179:69"><name pos:start="179:57" pos:end="179:65">avio_rl32</name><argument_list pos:start="179:66" pos:end="179:69">(<argument pos:start="179:67" pos:end="179:68"><expr pos:start="179:67" pos:end="179:68"><name pos:start="179:67" pos:end="179:68">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:72" pos:end="179:72"><expr pos:start="179:72" pos:end="179:72"><literal type="number" pos:start="179:72" pos:end="179:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:74"><expr pos:start="181:5" pos:end="181:73"><call pos:start="181:5" pos:end="181:73"><name pos:start="181:5" pos:end="181:20">set_metadata_int</name><argument_list pos:start="181:21" pos:end="181:73">(<argument pos:start="181:22" pos:end="181:34"><expr pos:start="181:22" pos:end="181:34"><operator pos:start="181:22" pos:end="181:22">&amp;</operator><name pos:start="181:23" pos:end="181:34"><name pos:start="181:23" pos:end="181:24">st</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:34">metadata</name></name></expr></argument>, <argument pos:start="181:37" pos:end="181:54"><expr pos:start="181:37" pos:end="181:54"><literal type="string" pos:start="181:37" pos:end="181:54">"software_version"</literal></expr></argument>, <argument pos:start="181:57" pos:end="181:69"><expr pos:start="181:57" pos:end="181:69"><call pos:start="181:57" pos:end="181:69"><name pos:start="181:57" pos:end="181:65">avio_rl32</name><argument_list pos:start="181:66" pos:end="181:69">(<argument pos:start="181:67" pos:end="181:68"><expr pos:start="181:67" pos:end="181:68"><name pos:start="181:67" pos:end="181:68">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:72" pos:end="181:72"><expr pos:start="181:72" pos:end="181:72"><literal type="number" pos:start="181:72" pos:end="181:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:76"><expr pos:start="183:5" pos:end="183:75"><call pos:start="183:5" pos:end="183:75"><name pos:start="183:5" pos:end="183:20">set_metadata_int</name><argument_list pos:start="183:21" pos:end="183:75">(<argument pos:start="183:22" pos:end="183:34"><expr pos:start="183:22" pos:end="183:34"><operator pos:start="183:22" pos:end="183:22">&amp;</operator><name pos:start="183:23" pos:end="183:34"><name pos:start="183:23" pos:end="183:24">st</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:34">metadata</name></name></expr></argument>, <argument pos:start="183:37" pos:end="183:56"><expr pos:start="183:37" pos:end="183:56"><literal type="string" pos:start="183:37" pos:end="183:56">"recording_timezone"</literal></expr></argument>, <argument pos:start="183:59" pos:end="183:71"><expr pos:start="183:59" pos:end="183:71"><call pos:start="183:59" pos:end="183:71"><name pos:start="183:59" pos:end="183:67">avio_rl32</name><argument_list pos:start="183:68" pos:end="183:71">(<argument pos:start="183:69" pos:end="183:70"><expr pos:start="183:69" pos:end="183:70"><name pos:start="183:69" pos:end="183:70">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:74" pos:end="183:74"><expr pos:start="183:74" pos:end="183:74"><literal type="number" pos:start="183:74" pos:end="183:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:24"><expr pos:start="187:5" pos:end="187:23"><name pos:start="187:5" pos:end="187:7">CFA</name> <operator pos:start="187:9" pos:end="187:9">=</operator> <call pos:start="187:11" pos:end="187:23"><name pos:start="187:11" pos:end="187:19">avio_rl32</name><argument_list pos:start="187:20" pos:end="187:23">(<argument pos:start="187:21" pos:end="187:22"><expr pos:start="187:21" pos:end="187:22"><name pos:start="187:21" pos:end="187:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:68"><expr pos:start="191:5" pos:end="191:67"><call pos:start="191:5" pos:end="191:67"><name pos:start="191:5" pos:end="191:20">set_metadata_int</name><argument_list pos:start="191:21" pos:end="191:67">(<argument pos:start="191:22" pos:end="191:34"><expr pos:start="191:22" pos:end="191:34"><operator pos:start="191:22" pos:end="191:22">&amp;</operator><name pos:start="191:23" pos:end="191:34"><name pos:start="191:23" pos:end="191:24">st</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:34">metadata</name></name></expr></argument>, <argument pos:start="191:37" pos:end="191:48"><expr pos:start="191:37" pos:end="191:48"><literal type="string" pos:start="191:37" pos:end="191:48">"brightness"</literal></expr></argument>, <argument pos:start="191:51" pos:end="191:63"><expr pos:start="191:51" pos:end="191:63"><call pos:start="191:51" pos:end="191:63"><name pos:start="191:51" pos:end="191:59">avio_rl32</name><argument_list pos:start="191:60" pos:end="191:63">(<argument pos:start="191:61" pos:end="191:62"><expr pos:start="191:61" pos:end="191:62"><name pos:start="191:61" pos:end="191:62">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="191:66" pos:end="191:66"><expr pos:start="191:66" pos:end="191:66"><literal type="number" pos:start="191:66" pos:end="191:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:66"><expr pos:start="193:5" pos:end="193:65"><call pos:start="193:5" pos:end="193:65"><name pos:start="193:5" pos:end="193:20">set_metadata_int</name><argument_list pos:start="193:21" pos:end="193:65">(<argument pos:start="193:22" pos:end="193:34"><expr pos:start="193:22" pos:end="193:34"><operator pos:start="193:22" pos:end="193:22">&amp;</operator><name pos:start="193:23" pos:end="193:34"><name pos:start="193:23" pos:end="193:24">st</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:34">metadata</name></name></expr></argument>, <argument pos:start="193:37" pos:end="193:46"><expr pos:start="193:37" pos:end="193:46"><literal type="string" pos:start="193:37" pos:end="193:46">"contrast"</literal></expr></argument>, <argument pos:start="193:49" pos:end="193:61"><expr pos:start="193:49" pos:end="193:61"><call pos:start="193:49" pos:end="193:61"><name pos:start="193:49" pos:end="193:57">avio_rl32</name><argument_list pos:start="193:58" pos:end="193:61">(<argument pos:start="193:59" pos:end="193:60"><expr pos:start="193:59" pos:end="193:60"><name pos:start="193:59" pos:end="193:60">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="193:64" pos:end="193:64"><expr pos:start="193:64" pos:end="193:64"><literal type="number" pos:start="193:64" pos:end="193:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:63"><expr pos:start="195:5" pos:end="195:62"><call pos:start="195:5" pos:end="195:62"><name pos:start="195:5" pos:end="195:20">set_metadata_int</name><argument_list pos:start="195:21" pos:end="195:62">(<argument pos:start="195:22" pos:end="195:34"><expr pos:start="195:22" pos:end="195:34"><operator pos:start="195:22" pos:end="195:22">&amp;</operator><name pos:start="195:23" pos:end="195:34"><name pos:start="195:23" pos:end="195:24">st</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:34">metadata</name></name></expr></argument>, <argument pos:start="195:37" pos:end="195:43"><expr pos:start="195:37" pos:end="195:43"><literal type="string" pos:start="195:37" pos:end="195:43">"gamma"</literal></expr></argument>, <argument pos:start="195:46" pos:end="195:58"><expr pos:start="195:46" pos:end="195:58"><call pos:start="195:46" pos:end="195:58"><name pos:start="195:46" pos:end="195:54">avio_rl32</name><argument_list pos:start="195:55" pos:end="195:58">(<argument pos:start="195:56" pos:end="195:57"><expr pos:start="195:56" pos:end="195:57"><name pos:start="195:56" pos:end="195:57">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="195:61" pos:end="195:61"><expr pos:start="195:61" pos:end="195:61"><literal type="number" pos:start="195:61" pos:end="195:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:27"><expr pos:start="199:5" pos:end="199:26"><call pos:start="199:5" pos:end="199:26"><name pos:start="199:5" pos:end="199:13">avio_skip</name><argument_list pos:start="199:14" pos:end="199:26">(<argument pos:start="199:15" pos:end="199:16"><expr pos:start="199:15" pos:end="199:16"><name pos:start="199:15" pos:end="199:16">pb</name></expr></argument>, <argument pos:start="199:19" pos:end="199:25"><expr pos:start="199:19" pos:end="199:25"><literal type="number" pos:start="199:19" pos:end="199:22">12</literal> <operator pos:start="199:22" pos:end="199:22">+</operator> <literal type="number" pos:start="199:24" pos:end="199:25">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="199:29" pos:end="199:55">// Reserved1 .. AutoExpRect</comment>

    <expr_stmt pos:start="201:5" pos:end="201:85"><expr pos:start="201:5" pos:end="201:84"><call pos:start="201:5" pos:end="201:84"><name pos:start="201:5" pos:end="201:22">set_metadata_float</name><argument_list pos:start="201:23" pos:end="201:84">(<argument pos:start="201:24" pos:end="201:36"><expr pos:start="201:24" pos:end="201:36"><operator pos:start="201:24" pos:end="201:24">&amp;</operator><name pos:start="201:25" pos:end="201:36"><name pos:start="201:25" pos:end="201:26">st</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:36">metadata</name></name></expr></argument>, <argument pos:start="201:39" pos:end="201:51"><expr pos:start="201:39" pos:end="201:51"><literal type="string" pos:start="201:39" pos:end="201:51">"wbgain[0].r"</literal></expr></argument>, <argument pos:start="201:54" pos:end="201:80"><expr pos:start="201:54" pos:end="201:80"><call pos:start="201:54" pos:end="201:80"><name pos:start="201:54" pos:end="201:65">av_int2float</name><argument_list pos:start="201:66" pos:end="201:80">(<argument pos:start="201:67" pos:end="201:79"><expr pos:start="201:67" pos:end="201:79"><call pos:start="201:67" pos:end="201:79"><name pos:start="201:67" pos:end="201:75">avio_rl32</name><argument_list pos:start="201:76" pos:end="201:79">(<argument pos:start="201:77" pos:end="201:78"><expr pos:start="201:77" pos:end="201:78"><name pos:start="201:77" pos:end="201:78">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="201:83" pos:end="201:83"><expr pos:start="201:83" pos:end="201:83"><literal type="number" pos:start="201:83" pos:end="201:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:85"><expr pos:start="203:5" pos:end="203:84"><call pos:start="203:5" pos:end="203:84"><name pos:start="203:5" pos:end="203:22">set_metadata_float</name><argument_list pos:start="203:23" pos:end="203:84">(<argument pos:start="203:24" pos:end="203:36"><expr pos:start="203:24" pos:end="203:36"><operator pos:start="203:24" pos:end="203:24">&amp;</operator><name pos:start="203:25" pos:end="203:36"><name pos:start="203:25" pos:end="203:26">st</name><operator pos:start="203:27" pos:end="203:28">-&gt;</operator><name pos:start="203:29" pos:end="203:36">metadata</name></name></expr></argument>, <argument pos:start="203:39" pos:end="203:51"><expr pos:start="203:39" pos:end="203:51"><literal type="string" pos:start="203:39" pos:end="203:51">"wbgain[0].b"</literal></expr></argument>, <argument pos:start="203:54" pos:end="203:80"><expr pos:start="203:54" pos:end="203:80"><call pos:start="203:54" pos:end="203:80"><name pos:start="203:54" pos:end="203:65">av_int2float</name><argument_list pos:start="203:66" pos:end="203:80">(<argument pos:start="203:67" pos:end="203:79"><expr pos:start="203:67" pos:end="203:79"><call pos:start="203:67" pos:end="203:79"><name pos:start="203:67" pos:end="203:75">avio_rl32</name><argument_list pos:start="203:76" pos:end="203:79">(<argument pos:start="203:77" pos:end="203:78"><expr pos:start="203:77" pos:end="203:78"><name pos:start="203:77" pos:end="203:78">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:83" pos:end="203:83"><expr pos:start="203:83" pos:end="203:83"><literal type="number" pos:start="203:83" pos:end="203:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:22"><expr pos:start="205:5" pos:end="205:21"><call pos:start="205:5" pos:end="205:21"><name pos:start="205:5" pos:end="205:13">avio_skip</name><argument_list pos:start="205:14" pos:end="205:21">(<argument pos:start="205:15" pos:end="205:16"><expr pos:start="205:15" pos:end="205:16"><name pos:start="205:15" pos:end="205:16">pb</name></expr></argument>, <argument pos:start="205:19" pos:end="205:20"><expr pos:start="205:19" pos:end="205:20"><literal type="number" pos:start="205:19" pos:end="205:20">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="205:24" pos:end="205:44">// WBGain[1].. WBView</comment>



    <expr_stmt pos:start="209:5" pos:end="209:56"><expr pos:start="209:5" pos:end="209:55"><name pos:start="209:5" pos:end="209:39"><name pos:start="209:5" pos:end="209:6">st</name><operator pos:start="209:7" pos:end="209:8">-&gt;</operator><name pos:start="209:9" pos:end="209:16">codecpar</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:39">bits_per_coded_sample</name></name> <operator pos:start="209:41" pos:end="209:41">=</operator> <call pos:start="209:43" pos:end="209:55"><name pos:start="209:43" pos:end="209:51">avio_rl32</name><argument_list pos:start="209:52" pos:end="209:55">(<argument pos:start="209:53" pos:end="209:54"><expr pos:start="209:53" pos:end="209:54"><name pos:start="209:53" pos:end="209:54">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="213:5" pos:end="297:5"><if pos:start="213:5" pos:end="239:5">if <condition pos:start="213:8" pos:end="213:30">(<expr pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:19">compression</name> <operator pos:start="213:21" pos:end="213:22">==</operator> <name pos:start="213:24" pos:end="213:29">CC_RGB</name></expr>)</condition> <block pos:start="213:32" pos:end="239:5">{<block_content pos:start="215:9" pos:end="237:9">

        <if_stmt pos:start="215:9" pos:end="237:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:28">(<expr pos:start="215:13" pos:end="215:27"><name pos:start="215:13" pos:end="215:22">biBitCount</name> <operator pos:start="215:24" pos:end="215:25">==</operator> <literal type="number" pos:start="215:27" pos:end="215:27">8</literal></expr>)</condition> <block pos:start="215:30" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:52">

            <expr_stmt pos:start="217:13" pos:end="217:52"><expr pos:start="217:13" pos:end="217:51"><name pos:start="217:13" pos:end="217:32"><name pos:start="217:13" pos:end="217:14">st</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:24">codecpar</name><operator pos:start="217:25" pos:end="217:26">-&gt;</operator><name pos:start="217:27" pos:end="217:32">format</name></name> <operator pos:start="217:34" pos:end="217:34">=</operator> <name pos:start="217:36" pos:end="217:51">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="219:11" pos:end="223:9">else if <condition pos:start="219:19" pos:end="219:36">(<expr pos:start="219:20" pos:end="219:35"><name pos:start="219:20" pos:end="219:29">biBitCount</name> <operator pos:start="219:31" pos:end="219:32">==</operator> <literal type="number" pos:start="219:34" pos:end="219:35">16</literal></expr>)</condition> <block pos:start="219:38" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:55">

            <expr_stmt pos:start="221:13" pos:end="221:55"><expr pos:start="221:13" pos:end="221:54"><name pos:start="221:13" pos:end="221:32"><name pos:start="221:13" pos:end="221:14">st</name><operator pos:start="221:15" pos:end="221:16">-&gt;</operator><name pos:start="221:17" pos:end="221:24">codecpar</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:32">format</name></name> <operator pos:start="221:34" pos:end="221:34">=</operator> <name pos:start="221:36" pos:end="221:54">AV_PIX_FMT_GRAY16LE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="223:11" pos:end="227:9">else if <condition pos:start="223:19" pos:end="223:36">(<expr pos:start="223:20" pos:end="223:35"><name pos:start="223:20" pos:end="223:29">biBitCount</name> <operator pos:start="223:31" pos:end="223:32">==</operator> <literal type="number" pos:start="223:34" pos:end="223:35">24</literal></expr>)</condition> <block pos:start="223:38" pos:end="227:9">{<block_content pos:start="225:13" pos:end="225:52">

            <expr_stmt pos:start="225:13" pos:end="225:52"><expr pos:start="225:13" pos:end="225:51"><name pos:start="225:13" pos:end="225:32"><name pos:start="225:13" pos:end="225:14">st</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:24">codecpar</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:32">format</name></name> <operator pos:start="225:34" pos:end="225:34">=</operator> <name pos:start="225:36" pos:end="225:51">AV_PIX_FMT_BGR24</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="227:11" pos:end="231:9">else if <condition pos:start="227:19" pos:end="227:36">(<expr pos:start="227:20" pos:end="227:35"><name pos:start="227:20" pos:end="227:29">biBitCount</name> <operator pos:start="227:31" pos:end="227:32">==</operator> <literal type="number" pos:start="227:34" pos:end="227:35">48</literal></expr>)</condition> <block pos:start="227:38" pos:end="231:9">{<block_content pos:start="229:13" pos:end="229:54">

            <expr_stmt pos:start="229:13" pos:end="229:54"><expr pos:start="229:13" pos:end="229:53"><name pos:start="229:13" pos:end="229:32"><name pos:start="229:13" pos:end="229:14">st</name><operator pos:start="229:15" pos:end="229:16">-&gt;</operator><name pos:start="229:17" pos:end="229:24">codecpar</name><operator pos:start="229:25" pos:end="229:26">-&gt;</operator><name pos:start="229:27" pos:end="229:32">format</name></name> <operator pos:start="229:34" pos:end="229:34">=</operator> <name pos:start="229:36" pos:end="229:53">AV_PIX_FMT_BGR48LE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="231:11" pos:end="237:9">else <block pos:start="231:16" pos:end="237:9">{<block_content pos:start="233:13" pos:end="235:39">

            <expr_stmt pos:start="233:13" pos:end="233:82"><expr pos:start="233:13" pos:end="233:81"><call pos:start="233:13" pos:end="233:81"><name pos:start="233:13" pos:end="233:33">avpriv_request_sample</name><argument_list pos:start="233:34" pos:end="233:81">(<argument pos:start="233:35" pos:end="233:39"><expr pos:start="233:35" pos:end="233:39"><name pos:start="233:35" pos:end="233:39">avctx</name></expr></argument>, <argument pos:start="233:42" pos:end="233:68"><expr pos:start="233:42" pos:end="233:68"><literal type="string" pos:start="233:42" pos:end="233:68">"unsupported biBitCount %i"</literal></expr></argument>, <argument pos:start="233:71" pos:end="233:80"><expr pos:start="233:71" pos:end="233:80"><name pos:start="233:71" pos:end="233:80">biBitCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="235:13" pos:end="235:39">return <expr pos:start="235:20" pos:end="235:38"><name pos:start="235:20" pos:end="235:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="239:7" pos:end="291:5">else if <condition pos:start="239:15" pos:end="239:39">(<expr pos:start="239:16" pos:end="239:38"><name pos:start="239:16" pos:end="239:26">compression</name> <operator pos:start="239:28" pos:end="239:29">==</operator> <name pos:start="239:31" pos:end="239:38">CC_UNINT</name></expr>)</condition> <block pos:start="239:41" pos:end="291:5">{<block_content pos:start="241:9" pos:end="289:9">

        <switch pos:start="241:9" pos:end="289:9">switch <condition pos:start="241:16" pos:end="241:31">(<expr pos:start="241:17" pos:end="241:30"><name pos:start="241:17" pos:end="241:19">CFA</name> <operator pos:start="241:21" pos:end="241:21">&amp;</operator> <literal type="number" pos:start="241:23" pos:end="241:30">0xFFFFFF</literal></expr>)</condition> <block pos:start="241:33" pos:end="289:9">{<block_content pos:start="243:9" pos:end="287:39">

        <case pos:start="243:9" pos:end="243:23">case <expr pos:start="243:14" pos:end="243:22"><name pos:start="243:14" pos:end="243:22">CFA_BAYER</name></expr>:</case>

            <if_stmt pos:start="245:13" pos:end="259:13"><if pos:start="245:13" pos:end="249:13">if <condition pos:start="245:16" pos:end="245:32">(<expr pos:start="245:17" pos:end="245:31"><name pos:start="245:17" pos:end="245:26">biBitCount</name> <operator pos:start="245:28" pos:end="245:29">==</operator> <literal type="number" pos:start="245:31" pos:end="245:31">8</literal></expr>)</condition> <block pos:start="245:34" pos:end="249:13">{<block_content pos:start="247:17" pos:end="247:62">

                <expr_stmt pos:start="247:17" pos:end="247:62"><expr pos:start="247:17" pos:end="247:61"><name pos:start="247:17" pos:end="247:36"><name pos:start="247:17" pos:end="247:18">st</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:28">codecpar</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:36">format</name></name> <operator pos:start="247:38" pos:end="247:38">=</operator> <name pos:start="247:40" pos:end="247:61">AV_PIX_FMT_BAYER_GBRG8</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="249:15" pos:end="253:13">else if <condition pos:start="249:23" pos:end="249:40">(<expr pos:start="249:24" pos:end="249:39"><name pos:start="249:24" pos:end="249:33">biBitCount</name> <operator pos:start="249:35" pos:end="249:36">==</operator> <literal type="number" pos:start="249:38" pos:end="249:39">16</literal></expr>)</condition> <block pos:start="249:42" pos:end="253:13">{<block_content pos:start="251:17" pos:end="251:65">

                <expr_stmt pos:start="251:17" pos:end="251:65"><expr pos:start="251:17" pos:end="251:64"><name pos:start="251:17" pos:end="251:36"><name pos:start="251:17" pos:end="251:18">st</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:28">codecpar</name><operator pos:start="251:29" pos:end="251:30">-&gt;</operator><name pos:start="251:31" pos:end="251:36">format</name></name> <operator pos:start="251:38" pos:end="251:38">=</operator> <name pos:start="251:40" pos:end="251:64">AV_PIX_FMT_BAYER_GBRG16LE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="253:15" pos:end="259:13">else <block pos:start="253:20" pos:end="259:13">{<block_content pos:start="255:17" pos:end="257:43">

                <expr_stmt pos:start="255:17" pos:end="255:86"><expr pos:start="255:17" pos:end="255:85"><call pos:start="255:17" pos:end="255:85"><name pos:start="255:17" pos:end="255:37">avpriv_request_sample</name><argument_list pos:start="255:38" pos:end="255:85">(<argument pos:start="255:39" pos:end="255:43"><expr pos:start="255:39" pos:end="255:43"><name pos:start="255:39" pos:end="255:43">avctx</name></expr></argument>, <argument pos:start="255:46" pos:end="255:72"><expr pos:start="255:46" pos:end="255:72"><literal type="string" pos:start="255:46" pos:end="255:72">"unsupported biBitCount %i"</literal></expr></argument>, <argument pos:start="255:75" pos:end="255:84"><expr pos:start="255:75" pos:end="255:84"><name pos:start="255:75" pos:end="255:84">biBitCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="257:17" pos:end="257:43">return <expr pos:start="257:24" pos:end="257:42"><name pos:start="257:24" pos:end="257:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

            <break pos:start="261:13" pos:end="261:18">break;</break>

        <case pos:start="263:9" pos:end="263:27">case <expr pos:start="263:14" pos:end="263:26"><name pos:start="263:14" pos:end="263:26">CFA_BAYERFLIP</name></expr>:</case>

            <if_stmt pos:start="265:13" pos:end="279:13"><if pos:start="265:13" pos:end="269:13">if <condition pos:start="265:16" pos:end="265:32">(<expr pos:start="265:17" pos:end="265:31"><name pos:start="265:17" pos:end="265:26">biBitCount</name> <operator pos:start="265:28" pos:end="265:29">==</operator> <literal type="number" pos:start="265:31" pos:end="265:31">8</literal></expr>)</condition> <block pos:start="265:34" pos:end="269:13">{<block_content pos:start="267:17" pos:end="267:62">

                <expr_stmt pos:start="267:17" pos:end="267:62"><expr pos:start="267:17" pos:end="267:61"><name pos:start="267:17" pos:end="267:36"><name pos:start="267:17" pos:end="267:18">st</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:28">codecpar</name><operator pos:start="267:29" pos:end="267:30">-&gt;</operator><name pos:start="267:31" pos:end="267:36">format</name></name> <operator pos:start="267:38" pos:end="267:38">=</operator> <name pos:start="267:40" pos:end="267:61">AV_PIX_FMT_BAYER_RGGB8</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="269:15" pos:end="273:13">else if <condition pos:start="269:23" pos:end="269:40">(<expr pos:start="269:24" pos:end="269:39"><name pos:start="269:24" pos:end="269:33">biBitCount</name> <operator pos:start="269:35" pos:end="269:36">==</operator> <literal type="number" pos:start="269:38" pos:end="269:39">16</literal></expr>)</condition> <block pos:start="269:42" pos:end="273:13">{<block_content pos:start="271:17" pos:end="271:65">

                <expr_stmt pos:start="271:17" pos:end="271:65"><expr pos:start="271:17" pos:end="271:64"><name pos:start="271:17" pos:end="271:36"><name pos:start="271:17" pos:end="271:18">st</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:28">codecpar</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:36">format</name></name> <operator pos:start="271:38" pos:end="271:38">=</operator> <name pos:start="271:40" pos:end="271:64">AV_PIX_FMT_BAYER_RGGB16LE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="273:15" pos:end="279:13">else <block pos:start="273:20" pos:end="279:13">{<block_content pos:start="275:17" pos:end="277:43">

                <expr_stmt pos:start="275:17" pos:end="275:86"><expr pos:start="275:17" pos:end="275:85"><call pos:start="275:17" pos:end="275:85"><name pos:start="275:17" pos:end="275:37">avpriv_request_sample</name><argument_list pos:start="275:38" pos:end="275:85">(<argument pos:start="275:39" pos:end="275:43"><expr pos:start="275:39" pos:end="275:43"><name pos:start="275:39" pos:end="275:43">avctx</name></expr></argument>, <argument pos:start="275:46" pos:end="275:72"><expr pos:start="275:46" pos:end="275:72"><literal type="string" pos:start="275:46" pos:end="275:72">"unsupported biBitCount %i"</literal></expr></argument>, <argument pos:start="275:75" pos:end="275:84"><expr pos:start="275:75" pos:end="275:84"><name pos:start="275:75" pos:end="275:84">biBitCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="277:17" pos:end="277:43">return <expr pos:start="277:24" pos:end="277:42"><name pos:start="277:24" pos:end="277:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

            <break pos:start="281:13" pos:end="281:18">break;</break>

        <default pos:start="283:9" pos:end="283:16">default:</default>

           <expr_stmt pos:start="285:12" pos:end="285:98"><expr pos:start="285:12" pos:end="285:97"><call pos:start="285:12" pos:end="285:97"><name pos:start="285:12" pos:end="285:32">avpriv_request_sample</name><argument_list pos:start="285:33" pos:end="285:97">(<argument pos:start="285:34" pos:end="285:38"><expr pos:start="285:34" pos:end="285:38"><name pos:start="285:34" pos:end="285:38">avctx</name></expr></argument>, <argument pos:start="285:41" pos:end="285:80"><expr pos:start="285:41" pos:end="285:80"><literal type="string" pos:start="285:41" pos:end="285:80">"unsupported Color Field Array (CFA) %i"</literal></expr></argument>, <argument pos:start="285:83" pos:end="285:96"><expr pos:start="285:83" pos:end="285:96"><name pos:start="285:83" pos:end="285:85">CFA</name> <operator pos:start="285:87" pos:end="285:87">&amp;</operator> <literal type="number" pos:start="285:89" pos:end="285:96">0xFFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="287:13" pos:end="287:39">return <expr pos:start="287:20" pos:end="287:38"><name pos:start="287:20" pos:end="287:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="291:7" pos:end="297:5">else <block pos:start="291:12" pos:end="297:5">{<block_content pos:start="293:9" pos:end="295:35"> <comment type="line" pos:start="291:14" pos:end="291:22">//CC_LEAD</comment>

        <expr_stmt pos:start="293:9" pos:end="293:80"><expr pos:start="293:9" pos:end="293:79"><call pos:start="293:9" pos:end="293:79"><name pos:start="293:9" pos:end="293:29">avpriv_request_sample</name><argument_list pos:start="293:30" pos:end="293:79">(<argument pos:start="293:31" pos:end="293:35"><expr pos:start="293:31" pos:end="293:35"><name pos:start="293:31" pos:end="293:35">avctx</name></expr></argument>, <argument pos:start="293:38" pos:end="293:65"><expr pos:start="293:38" pos:end="293:65"><literal type="string" pos:start="293:38" pos:end="293:65">"unsupported compression %i"</literal></expr></argument>, <argument pos:start="293:68" pos:end="293:78"><expr pos:start="293:68" pos:end="293:78"><name pos:start="293:68" pos:end="293:78">compression</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="295:9" pos:end="295:35">return <expr pos:start="295:16" pos:end="295:34"><name pos:start="295:16" pos:end="295:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:23"><expr pos:start="301:5" pos:end="301:22"><call pos:start="301:5" pos:end="301:22"><name pos:start="301:5" pos:end="301:13">avio_skip</name><argument_list pos:start="301:14" pos:end="301:22">(<argument pos:start="301:15" pos:end="301:16"><expr pos:start="301:15" pos:end="301:16"><name pos:start="301:15" pos:end="301:16">pb</name></expr></argument>, <argument pos:start="301:19" pos:end="301:21"><expr pos:start="301:19" pos:end="301:21"><literal type="number" pos:start="301:19" pos:end="301:21">668</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="301:25" pos:end="301:46">// Conv8Min ... Sensor</comment>



    <expr_stmt pos:start="305:5" pos:end="305:68"><expr pos:start="305:5" pos:end="305:67"><call pos:start="305:5" pos:end="305:67"><name pos:start="305:5" pos:end="305:20">set_metadata_int</name><argument_list pos:start="305:21" pos:end="305:67">(<argument pos:start="305:22" pos:end="305:34"><expr pos:start="305:22" pos:end="305:34"><operator pos:start="305:22" pos:end="305:22">&amp;</operator><name pos:start="305:23" pos:end="305:34"><name pos:start="305:23" pos:end="305:24">st</name><operator pos:start="305:25" pos:end="305:26">-&gt;</operator><name pos:start="305:27" pos:end="305:34">metadata</name></name></expr></argument>, <argument pos:start="305:37" pos:end="305:48"><expr pos:start="305:37" pos:end="305:48"><literal type="string" pos:start="305:37" pos:end="305:48">"shutter_ns"</literal></expr></argument>, <argument pos:start="305:51" pos:end="305:63"><expr pos:start="305:51" pos:end="305:63"><call pos:start="305:51" pos:end="305:63"><name pos:start="305:51" pos:end="305:59">avio_rl32</name><argument_list pos:start="305:60" pos:end="305:63">(<argument pos:start="305:61" pos:end="305:62"><expr pos:start="305:61" pos:end="305:62"><name pos:start="305:61" pos:end="305:62">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="305:66" pos:end="305:66"><expr pos:start="305:66" pos:end="305:66"><literal type="number" pos:start="305:66" pos:end="305:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="309:5" pos:end="314:0"><expr pos:start="309:5" pos:end="309:21"><call pos:start="309:5" pos:end="309:21"><name pos:start="309:5" pos:end="309:13">avio_skip</name><argument_list pos:start="309:14" pos:end="309:21">(<argument pos:start="309:15" pos:end="309:16"><expr pos:start="309:15" pos:end="309:16"><name pos:start="309:15" pos:end="309:16">pb</name></expr></argument>, <argument pos:start="309:19" pos:end="309:20"><expr pos:start="309:19" pos:end="309:20"><literal type="number" pos:start="309:19" pos:end="309:20">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="309:24" pos:end="309:54">// EDRShutterNs ... ImHeightAcq</comment>



<cpp:define pos:start="313:1" pos:end="313:29">#<cpp:directive pos:start="313:2" pos:end="313:7">define</cpp:directive> <cpp:macro pos:start="313:9" pos:end="313:24"><name pos:start="313:9" pos:end="313:24">DESCRIPTION_SIZE</name></cpp:macro> <cpp:value pos:start="313:26" pos:end="313:29">4096</cpp:value></cpp:define>

    <expr_stmt pos:start="315:5" pos:end="315:50"><expr pos:start="315:5" pos:end="315:49"><name pos:start="315:5" pos:end="315:15">description</name> <operator pos:start="315:17" pos:end="315:17">=</operator> <call pos:start="315:19" pos:end="315:49"><name pos:start="315:19" pos:end="315:27">av_malloc</name><argument_list pos:start="315:28" pos:end="315:49">(<argument pos:start="315:29" pos:end="315:48"><expr pos:start="315:29" pos:end="315:48"><name pos:start="315:29" pos:end="315:44">DESCRIPTION_SIZE</name> <operator pos:start="315:46" pos:end="315:46">+</operator> <literal type="number" pos:start="315:48" pos:end="315:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="317:5" pos:end="319:31"><if pos:start="317:5" pos:end="319:31">if <condition pos:start="317:8" pos:end="317:21">(<expr pos:start="317:9" pos:end="317:20"><operator pos:start="317:9" pos:end="317:9">!</operator><name pos:start="317:10" pos:end="317:20">description</name></expr>)</condition><block type="pseudo" pos:start="319:9" pos:end="319:31"><block_content pos:start="319:9" pos:end="319:31">

        <return pos:start="319:9" pos:end="319:31">return <expr pos:start="319:16" pos:end="319:30"><call pos:start="319:16" pos:end="319:30"><name pos:start="319:16" pos:end="319:22">AVERROR</name><argument_list pos:start="319:23" pos:end="319:30">(<argument pos:start="319:24" pos:end="319:29"><expr pos:start="319:24" pos:end="319:29"><name pos:start="319:24" pos:end="319:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:78"><expr pos:start="321:5" pos:end="321:77"><name pos:start="321:5" pos:end="321:5">i</name> <operator pos:start="321:7" pos:end="321:7">=</operator> <call pos:start="321:9" pos:end="321:77"><name pos:start="321:9" pos:end="321:20">avio_get_str</name><argument_list pos:start="321:21" pos:end="321:77">(<argument pos:start="321:22" pos:end="321:23"><expr pos:start="321:22" pos:end="321:23"><name pos:start="321:22" pos:end="321:23">pb</name></expr></argument>, <argument pos:start="321:26" pos:end="321:41"><expr pos:start="321:26" pos:end="321:41"><name pos:start="321:26" pos:end="321:41">DESCRIPTION_SIZE</name></expr></argument>, <argument pos:start="321:44" pos:end="321:54"><expr pos:start="321:44" pos:end="321:54"><name pos:start="321:44" pos:end="321:54">description</name></expr></argument>, <argument pos:start="321:57" pos:end="321:76"><expr pos:start="321:57" pos:end="321:76"><name pos:start="321:57" pos:end="321:72">DESCRIPTION_SIZE</name> <operator pos:start="321:74" pos:end="321:74">+</operator> <literal type="number" pos:start="321:76" pos:end="321:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="323:5" pos:end="325:44"><if pos:start="323:5" pos:end="325:44">if <condition pos:start="323:8" pos:end="323:29">(<expr pos:start="323:9" pos:end="323:28"><name pos:start="323:9" pos:end="323:9">i</name> <operator pos:start="323:11" pos:end="323:11">&lt;</operator> <name pos:start="323:13" pos:end="323:28">DESCRIPTION_SIZE</name></expr>)</condition><block type="pseudo" pos:start="325:9" pos:end="325:44"><block_content pos:start="325:9" pos:end="325:44">

        <expr_stmt pos:start="325:9" pos:end="325:44"><expr pos:start="325:9" pos:end="325:43"><call pos:start="325:9" pos:end="325:43"><name pos:start="325:9" pos:end="325:17">avio_skip</name><argument_list pos:start="325:18" pos:end="325:43">(<argument pos:start="325:19" pos:end="325:20"><expr pos:start="325:19" pos:end="325:20"><name pos:start="325:19" pos:end="325:20">pb</name></expr></argument>, <argument pos:start="325:23" pos:end="325:42"><expr pos:start="325:23" pos:end="325:42"><name pos:start="325:23" pos:end="325:38">DESCRIPTION_SIZE</name> <operator pos:start="325:40" pos:end="325:40">-</operator> <name pos:start="325:42" pos:end="325:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="327:5" pos:end="333:29"><if pos:start="327:5" pos:end="329:88">if <condition pos:start="327:8" pos:end="327:23">(<expr pos:start="327:9" pos:end="327:22"><name pos:start="327:9" pos:end="327:22"><name pos:start="327:9" pos:end="327:19">description</name><index pos:start="327:20" pos:end="327:22">[<expr pos:start="327:21" pos:end="327:21"><literal type="number" pos:start="327:21" pos:end="327:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="329:9" pos:end="329:88"><block_content pos:start="329:9" pos:end="329:88">

        <expr_stmt pos:start="329:9" pos:end="329:88"><expr pos:start="329:9" pos:end="329:87"><call pos:start="329:9" pos:end="329:87"><name pos:start="329:9" pos:end="329:19">av_dict_set</name><argument_list pos:start="329:20" pos:end="329:87">(<argument pos:start="329:21" pos:end="329:33"><expr pos:start="329:21" pos:end="329:33"><operator pos:start="329:21" pos:end="329:21">&amp;</operator><name pos:start="329:22" pos:end="329:33"><name pos:start="329:22" pos:end="329:23">st</name><operator pos:start="329:24" pos:end="329:25">-&gt;</operator><name pos:start="329:26" pos:end="329:33">metadata</name></name></expr></argument>, <argument pos:start="329:36" pos:end="329:48"><expr pos:start="329:36" pos:end="329:48"><literal type="string" pos:start="329:36" pos:end="329:48">"description"</literal></expr></argument>, <argument pos:start="329:51" pos:end="329:61"><expr pos:start="329:51" pos:end="329:61"><name pos:start="329:51" pos:end="329:61">description</name></expr></argument>, <argument pos:start="329:64" pos:end="329:86"><expr pos:start="329:64" pos:end="329:86"><name pos:start="329:64" pos:end="329:86">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="331:5" pos:end="333:29">else<block type="pseudo" pos:start="333:9" pos:end="333:29"><block_content pos:start="333:9" pos:end="333:29">

        <expr_stmt pos:start="333:9" pos:end="333:29"><expr pos:start="333:9" pos:end="333:28"><call pos:start="333:9" pos:end="333:28"><name pos:start="333:9" pos:end="333:15">av_free</name><argument_list pos:start="333:16" pos:end="333:28">(<argument pos:start="333:17" pos:end="333:27"><expr pos:start="333:17" pos:end="333:27"><name pos:start="333:17" pos:end="333:27">description</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="337:5" pos:end="337:24"><expr pos:start="337:5" pos:end="337:23"><call pos:start="337:5" pos:end="337:23"><name pos:start="337:5" pos:end="337:13">avio_skip</name><argument_list pos:start="337:14" pos:end="337:23">(<argument pos:start="337:15" pos:end="337:16"><expr pos:start="337:15" pos:end="337:16"><name pos:start="337:15" pos:end="337:16">pb</name></expr></argument>, <argument pos:start="337:19" pos:end="337:22"><expr pos:start="337:19" pos:end="337:22"><literal type="number" pos:start="337:19" pos:end="337:22">1176</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="337:26" pos:end="337:49">// RisingEdge ... cmUser</comment>



    <expr_stmt pos:start="341:5" pos:end="341:69"><expr pos:start="341:5" pos:end="341:68"><call pos:start="341:5" pos:end="341:68"><name pos:start="341:5" pos:end="341:20">set_metadata_int</name><argument_list pos:start="341:21" pos:end="341:68">(<argument pos:start="341:22" pos:end="341:34"><expr pos:start="341:22" pos:end="341:34"><operator pos:start="341:22" pos:end="341:22">&amp;</operator><name pos:start="341:23" pos:end="341:34"><name pos:start="341:23" pos:end="341:24">st</name><operator pos:start="341:25" pos:end="341:26">-&gt;</operator><name pos:start="341:27" pos:end="341:34">metadata</name></name></expr></argument>, <argument pos:start="341:37" pos:end="341:49"><expr pos:start="341:37" pos:end="341:49"><literal type="string" pos:start="341:37" pos:end="341:49">"enable_crop"</literal></expr></argument>, <argument pos:start="341:52" pos:end="341:64"><expr pos:start="341:52" pos:end="341:64"><call pos:start="341:52" pos:end="341:64"><name pos:start="341:52" pos:end="341:60">avio_rl32</name><argument_list pos:start="341:61" pos:end="341:64">(<argument pos:start="341:62" pos:end="341:63"><expr pos:start="341:62" pos:end="341:63"><name pos:start="341:62" pos:end="341:63">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="341:67" pos:end="341:67"><expr pos:start="341:67" pos:end="341:67"><literal type="number" pos:start="341:67" pos:end="341:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:67"><expr pos:start="343:5" pos:end="343:66"><call pos:start="343:5" pos:end="343:66"><name pos:start="343:5" pos:end="343:20">set_metadata_int</name><argument_list pos:start="343:21" pos:end="343:66">(<argument pos:start="343:22" pos:end="343:34"><expr pos:start="343:22" pos:end="343:34"><operator pos:start="343:22" pos:end="343:22">&amp;</operator><name pos:start="343:23" pos:end="343:34"><name pos:start="343:23" pos:end="343:24">st</name><operator pos:start="343:25" pos:end="343:26">-&gt;</operator><name pos:start="343:27" pos:end="343:34">metadata</name></name></expr></argument>, <argument pos:start="343:37" pos:end="343:47"><expr pos:start="343:37" pos:end="343:47"><literal type="string" pos:start="343:37" pos:end="343:47">"crop_left"</literal></expr></argument>, <argument pos:start="343:50" pos:end="343:62"><expr pos:start="343:50" pos:end="343:62"><call pos:start="343:50" pos:end="343:62"><name pos:start="343:50" pos:end="343:58">avio_rl32</name><argument_list pos:start="343:59" pos:end="343:62">(<argument pos:start="343:60" pos:end="343:61"><expr pos:start="343:60" pos:end="343:61"><name pos:start="343:60" pos:end="343:61">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="343:65" pos:end="343:65"><expr pos:start="343:65" pos:end="343:65"><literal type="number" pos:start="343:65" pos:end="343:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:66"><expr pos:start="345:5" pos:end="345:65"><call pos:start="345:5" pos:end="345:65"><name pos:start="345:5" pos:end="345:20">set_metadata_int</name><argument_list pos:start="345:21" pos:end="345:65">(<argument pos:start="345:22" pos:end="345:34"><expr pos:start="345:22" pos:end="345:34"><operator pos:start="345:22" pos:end="345:22">&amp;</operator><name pos:start="345:23" pos:end="345:34"><name pos:start="345:23" pos:end="345:24">st</name><operator pos:start="345:25" pos:end="345:26">-&gt;</operator><name pos:start="345:27" pos:end="345:34">metadata</name></name></expr></argument>, <argument pos:start="345:37" pos:end="345:46"><expr pos:start="345:37" pos:end="345:46"><literal type="string" pos:start="345:37" pos:end="345:46">"crop_top"</literal></expr></argument>, <argument pos:start="345:49" pos:end="345:61"><expr pos:start="345:49" pos:end="345:61"><call pos:start="345:49" pos:end="345:61"><name pos:start="345:49" pos:end="345:57">avio_rl32</name><argument_list pos:start="345:58" pos:end="345:61">(<argument pos:start="345:59" pos:end="345:60"><expr pos:start="345:59" pos:end="345:60"><name pos:start="345:59" pos:end="345:60">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="345:64" pos:end="345:64"><expr pos:start="345:64" pos:end="345:64"><literal type="number" pos:start="345:64" pos:end="345:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:68"><expr pos:start="347:5" pos:end="347:67"><call pos:start="347:5" pos:end="347:67"><name pos:start="347:5" pos:end="347:20">set_metadata_int</name><argument_list pos:start="347:21" pos:end="347:67">(<argument pos:start="347:22" pos:end="347:34"><expr pos:start="347:22" pos:end="347:34"><operator pos:start="347:22" pos:end="347:22">&amp;</operator><name pos:start="347:23" pos:end="347:34"><name pos:start="347:23" pos:end="347:24">st</name><operator pos:start="347:25" pos:end="347:26">-&gt;</operator><name pos:start="347:27" pos:end="347:34">metadata</name></name></expr></argument>, <argument pos:start="347:37" pos:end="347:48"><expr pos:start="347:37" pos:end="347:48"><literal type="string" pos:start="347:37" pos:end="347:48">"crop_right"</literal></expr></argument>, <argument pos:start="347:51" pos:end="347:63"><expr pos:start="347:51" pos:end="347:63"><call pos:start="347:51" pos:end="347:63"><name pos:start="347:51" pos:end="347:59">avio_rl32</name><argument_list pos:start="347:60" pos:end="347:63">(<argument pos:start="347:61" pos:end="347:62"><expr pos:start="347:61" pos:end="347:62"><name pos:start="347:61" pos:end="347:62">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="347:66" pos:end="347:66"><expr pos:start="347:66" pos:end="347:66"><literal type="number" pos:start="347:66" pos:end="347:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:69"><expr pos:start="349:5" pos:end="349:68"><call pos:start="349:5" pos:end="349:68"><name pos:start="349:5" pos:end="349:20">set_metadata_int</name><argument_list pos:start="349:21" pos:end="349:68">(<argument pos:start="349:22" pos:end="349:34"><expr pos:start="349:22" pos:end="349:34"><operator pos:start="349:22" pos:end="349:22">&amp;</operator><name pos:start="349:23" pos:end="349:34"><name pos:start="349:23" pos:end="349:24">st</name><operator pos:start="349:25" pos:end="349:26">-&gt;</operator><name pos:start="349:27" pos:end="349:34">metadata</name></name></expr></argument>, <argument pos:start="349:37" pos:end="349:49"><expr pos:start="349:37" pos:end="349:49"><literal type="string" pos:start="349:37" pos:end="349:49">"crop_bottom"</literal></expr></argument>, <argument pos:start="349:52" pos:end="349:64"><expr pos:start="349:52" pos:end="349:64"><call pos:start="349:52" pos:end="349:64"><name pos:start="349:52" pos:end="349:60">avio_rl32</name><argument_list pos:start="349:61" pos:end="349:64">(<argument pos:start="349:62" pos:end="349:63"><expr pos:start="349:62" pos:end="349:63"><name pos:start="349:62" pos:end="349:63">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="349:67" pos:end="349:67"><expr pos:start="349:67" pos:end="349:67"><literal type="number" pos:start="349:67" pos:end="349:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="353:5" pos:end="353:29">/* parse image offsets */</comment>

    <expr_stmt pos:start="355:5" pos:end="355:45"><expr pos:start="355:5" pos:end="355:44"><call pos:start="355:5" pos:end="355:44"><name pos:start="355:5" pos:end="355:13">avio_seek</name><argument_list pos:start="355:14" pos:end="355:44">(<argument pos:start="355:15" pos:end="355:16"><expr pos:start="355:15" pos:end="355:16"><name pos:start="355:15" pos:end="355:16">pb</name></expr></argument>, <argument pos:start="355:19" pos:end="355:33"><expr pos:start="355:19" pos:end="355:33"><name pos:start="355:19" pos:end="355:33">offImageOffsets</name></expr></argument>, <argument pos:start="355:36" pos:end="355:43"><expr pos:start="355:36" pos:end="355:43"><name pos:start="355:36" pos:end="355:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="357:5" pos:end="359:73">for <control pos:start="357:9" pos:end="357:38">(<init pos:start="357:10" pos:end="357:15"><expr pos:start="357:10" pos:end="357:14"><name pos:start="357:10" pos:end="357:10">i</name> <operator pos:start="357:12" pos:end="357:12">=</operator> <literal type="number" pos:start="357:14" pos:end="357:14">0</literal></expr>;</init> <condition pos:start="357:17" pos:end="357:33"><expr pos:start="357:17" pos:end="357:32"><name pos:start="357:17" pos:end="357:17">i</name> <operator pos:start="357:19" pos:end="357:19">&lt;</operator> <name pos:start="357:21" pos:end="357:32"><name pos:start="357:21" pos:end="357:22">st</name><operator pos:start="357:23" pos:end="357:24">-&gt;</operator><name pos:start="357:25" pos:end="357:32">duration</name></name></expr>;</condition> <incr pos:start="357:35" pos:end="357:37"><expr pos:start="357:35" pos:end="357:37"><name pos:start="357:35" pos:end="357:35">i</name><operator pos:start="357:36" pos:end="357:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="359:9" pos:end="359:73"><block_content pos:start="359:9" pos:end="359:73">

        <expr_stmt pos:start="359:9" pos:end="359:73"><expr pos:start="359:9" pos:end="359:72"><call pos:start="359:9" pos:end="359:72"><name pos:start="359:9" pos:end="359:26">av_add_index_entry</name><argument_list pos:start="359:27" pos:end="359:72">(<argument pos:start="359:28" pos:end="359:29"><expr pos:start="359:28" pos:end="359:29"><name pos:start="359:28" pos:end="359:29">st</name></expr></argument>, <argument pos:start="359:32" pos:end="359:44"><expr pos:start="359:32" pos:end="359:44"><call pos:start="359:32" pos:end="359:44"><name pos:start="359:32" pos:end="359:40">avio_rl64</name><argument_list pos:start="359:41" pos:end="359:44">(<argument pos:start="359:42" pos:end="359:43"><expr pos:start="359:42" pos:end="359:43"><name pos:start="359:42" pos:end="359:43">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="359:47" pos:end="359:47"><expr pos:start="359:47" pos:end="359:47"><name pos:start="359:47" pos:end="359:47">i</name></expr></argument>, <argument pos:start="359:50" pos:end="359:50"><expr pos:start="359:50" pos:end="359:50"><literal type="number" pos:start="359:50" pos:end="359:50">0</literal></expr></argument>, <argument pos:start="359:53" pos:end="359:53"><expr pos:start="359:53" pos:end="359:53"><literal type="number" pos:start="359:53" pos:end="359:53">0</literal></expr></argument>, <argument pos:start="359:56" pos:end="359:71"><expr pos:start="359:56" pos:end="359:71"><name pos:start="359:56" pos:end="359:71">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <return pos:start="363:5" pos:end="363:13">return <expr pos:start="363:12" pos:end="363:12"><literal type="number" pos:start="363:12" pos:end="363:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
