<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2004.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:46">mpeg_decode_quant_matrix_extension</name><parameter_list pos:start="1:47" pos:end="1:65">(<parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:61">MpegEncContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">v</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:11">dprintf</name><argument_list pos:start="9:12" pos:end="9:33">(<argument pos:start="9:13" pos:end="9:32"><expr pos:start="9:13" pos:end="9:32"><literal type="string" pos:start="9:13" pos:end="9:32">"matrix extension\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="27:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><call pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:17">get_bits1</name><argument_list pos:start="13:18" pos:end="13:25">(<argument pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:24"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:28" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:9">

        <for pos:start="15:9" pos:end="25:9">for<control pos:start="15:12" pos:end="15:25">(<init pos:start="15:13" pos:end="15:16"><expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:13">i</name><operator pos:start="15:14" pos:end="15:14">=</operator><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>;</init><condition pos:start="15:17" pos:end="15:21"><expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:17">i</name><operator pos:start="15:18" pos:end="15:18">&lt;</operator><literal type="number" pos:start="15:19" pos:end="15:20">64</literal></expr>;</condition><incr pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><name pos:start="15:22" pos:end="15:22">i</name><operator pos:start="15:23" pos:end="15:24">++</operator></expr></incr>)</control> <block pos:start="15:27" pos:end="25:9">{<block_content pos:start="17:13" pos:end="23:42">

            <expr_stmt pos:start="17:13" pos:end="17:36"><expr pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:13">v</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:35"><name pos:start="17:17" pos:end="17:24">get_bits</name><argument_list pos:start="17:25" pos:end="17:35">(<argument pos:start="17:26" pos:end="17:31"><expr pos:start="17:26" pos:end="17:31"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:31">gb</name></name></expr></argument>, <argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:33"><expr pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:13">j</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:29">zigzag_direct</name><index pos:start="19:30" pos:end="19:32">[<expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:35"><expr pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:27">intra_matrix</name><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">j</name></expr>]</index></name> <operator pos:start="21:32" pos:end="21:32">=</operator> <name pos:start="21:34" pos:end="21:34">v</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:42"><expr pos:start="23:13" pos:end="23:41"><name pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:34">chroma_intra_matrix</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">j</name></expr>]</index></name> <operator pos:start="23:39" pos:end="23:39">=</operator> <name pos:start="23:41" pos:end="23:41">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="43:5"><if pos:start="29:5" pos:end="43:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><call pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17">get_bits1</name><argument_list pos:start="29:18" pos:end="29:25">(<argument pos:start="29:19" pos:end="29:24"><expr pos:start="29:19" pos:end="29:24"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:28" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:9">

        <for pos:start="31:9" pos:end="41:9">for<control pos:start="31:12" pos:end="31:25">(<init pos:start="31:13" pos:end="31:16"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:13">i</name><operator pos:start="31:14" pos:end="31:14">=</operator><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>;</init><condition pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><literal type="number" pos:start="31:19" pos:end="31:20">64</literal></expr>;</condition><incr pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:22">i</name><operator pos:start="31:23" pos:end="31:24">++</operator></expr></incr>)</control> <block pos:start="31:27" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:46">

            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:13">v</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:24">get_bits</name><argument_list pos:start="33:25" pos:end="33:35">(<argument pos:start="33:26" pos:end="33:31"><expr pos:start="33:26" pos:end="33:31"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:31">gb</name></name></expr></argument>, <argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:13">j</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:29">zigzag_direct</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:31">non_intra_matrix</name><index pos:start="37:32" pos:end="37:34">[<expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">j</name></expr>]</index></name> <operator pos:start="37:36" pos:end="37:36">=</operator> <name pos:start="37:38" pos:end="37:38">v</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:46"><expr pos:start="39:13" pos:end="39:45"><name pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:38">chroma_non_intra_matrix</name><index pos:start="39:39" pos:end="39:41">[<expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">j</name></expr>]</index></name> <operator pos:start="39:43" pos:end="39:43">=</operator> <name pos:start="39:45" pos:end="39:45">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:26">(<expr pos:start="45:9" pos:end="45:25"><call pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:17">get_bits1</name><argument_list pos:start="45:18" pos:end="45:25">(<argument pos:start="45:19" pos:end="45:24"><expr pos:start="45:19" pos:end="45:24"><operator pos:start="45:19" pos:end="45:19">&amp;</operator><name pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:28" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <for pos:start="47:9" pos:end="55:9">for<control pos:start="47:12" pos:end="47:25">(<init pos:start="47:13" pos:end="47:16"><expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:13">i</name><operator pos:start="47:14" pos:end="47:14">=</operator><literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</init><condition pos:start="47:17" pos:end="47:21"><expr pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:17">i</name><operator pos:start="47:18" pos:end="47:18">&lt;</operator><literal type="number" pos:start="47:19" pos:end="47:20">64</literal></expr>;</condition><incr pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:22">i</name><operator pos:start="47:23" pos:end="47:24">++</operator></expr></incr>)</control> <block pos:start="47:27" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:42">

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:13">v</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:24">get_bits</name><argument_list pos:start="49:25" pos:end="49:35">(<argument pos:start="49:26" pos:end="49:31"><expr pos:start="49:26" pos:end="49:31"><operator pos:start="49:26" pos:end="49:26">&amp;</operator><name pos:start="49:27" pos:end="49:31"><name pos:start="49:27" pos:end="49:27">s</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:31">gb</name></name></expr></argument>, <argument pos:start="49:34" pos:end="49:34"><expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:13">j</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:29">zigzag_direct</name><index pos:start="51:30" pos:end="51:32">[<expr pos:start="51:31" pos:end="51:31"><name pos:start="51:31" pos:end="51:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:34">chroma_intra_matrix</name><index pos:start="53:35" pos:end="53:37">[<expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">j</name></expr>]</index></name> <operator pos:start="53:39" pos:end="53:39">=</operator> <name pos:start="53:41" pos:end="53:41">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="71:5"><if pos:start="59:5" pos:end="71:5">if <condition pos:start="59:8" pos:end="59:26">(<expr pos:start="59:9" pos:end="59:25"><call pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:17">get_bits1</name><argument_list pos:start="59:18" pos:end="59:25">(<argument pos:start="59:19" pos:end="59:24"><expr pos:start="59:19" pos:end="59:24"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:24"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:28" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:9">

        <for pos:start="61:9" pos:end="69:9">for<control pos:start="61:12" pos:end="61:25">(<init pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:13">i</name><operator pos:start="61:14" pos:end="61:14">=</operator><literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>;</init><condition pos:start="61:17" pos:end="61:21"><expr pos:start="61:17" pos:end="61:20"><name pos:start="61:17" pos:end="61:17">i</name><operator pos:start="61:18" pos:end="61:18">&lt;</operator><literal type="number" pos:start="61:19" pos:end="61:20">64</literal></expr>;</condition><incr pos:start="61:22" pos:end="61:24"><expr pos:start="61:22" pos:end="61:24"><name pos:start="61:22" pos:end="61:22">i</name><operator pos:start="61:23" pos:end="61:24">++</operator></expr></incr>)</control> <block pos:start="61:27" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:46">

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:13">v</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <call pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:24">get_bits</name><argument_list pos:start="63:25" pos:end="63:35">(<argument pos:start="63:26" pos:end="63:31"><expr pos:start="63:26" pos:end="63:31"><operator pos:start="63:26" pos:end="63:26">&amp;</operator><name pos:start="63:27" pos:end="63:31"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:31">gb</name></name></expr></argument>, <argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><literal type="number" pos:start="63:34" pos:end="63:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:33"><expr pos:start="65:13" pos:end="65:32"><name pos:start="65:13" pos:end="65:13">j</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:29">zigzag_direct</name><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:46"><expr pos:start="67:13" pos:end="67:45"><name pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:38">chroma_non_intra_matrix</name><index pos:start="67:39" pos:end="67:41">[<expr pos:start="67:40" pos:end="67:40"><name pos:start="67:40" pos:end="67:40">j</name></expr>]</index></name> <operator pos:start="67:43" pos:end="67:43">=</operator> <name pos:start="67:45" pos:end="67:45">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
