<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20651.c" pos:tabs="8"><function pos:start="1:1" pos:end="102:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:42">gen_op_arith_add</name><parameter_list pos:start="1:43" pos:end="3:86">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:55">DisasContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">ctx</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:70"><decl pos:start="1:63" pos:end="1:70"><type pos:start="1:63" pos:end="1:70"><name pos:start="1:63" pos:end="1:66">TCGv</name></type> <name pos:start="1:68" pos:end="1:70">ret</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:81"><decl pos:start="1:73" pos:end="1:81"><type pos:start="1:73" pos:end="1:81"><name pos:start="1:73" pos:end="1:76">TCGv</name></type> <name pos:start="1:78" pos:end="1:81">arg1</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:92"><decl pos:start="1:84" pos:end="1:92"><type pos:start="1:84" pos:end="1:92"><name pos:start="1:84" pos:end="1:87">TCGv</name></type> <name pos:start="1:89" pos:end="1:92">arg2</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:53"><decl pos:start="3:44" pos:end="3:53"><type pos:start="3:44" pos:end="3:53"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:53">add_ca</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:69"><decl pos:start="3:56" pos:end="3:69"><type pos:start="3:56" pos:end="3:69"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:69">compute_ca</name></decl></parameter>, <parameter pos:start="3:72" pos:end="3:85"><decl pos:start="3:72" pos:end="3:85"><type pos:start="3:72" pos:end="3:85"><name pos:start="3:72" pos:end="3:74">int</name></type> <name pos:start="3:76" pos:end="3:85">compute_ov</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="102:1">{<block_content pos:start="7:5" pos:end="100:5">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:11">t0</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:14" pos:end="7:15">t1</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="20:5"><if pos:start="11:5" pos:end="20:5">if <condition pos:start="11:8" pos:end="13:58">(<expr pos:start="11:9" pos:end="13:57"><operator pos:start="11:9" pos:end="11:9">(</operator><operator pos:start="11:10" pos:end="11:10">!</operator><name pos:start="11:11" pos:end="11:20">compute_ca</name> <operator pos:start="11:22" pos:end="11:23">&amp;&amp;</operator> <operator pos:start="11:25" pos:end="11:25">!</operator><name pos:start="11:26" pos:end="11:35">compute_ov</name><operator pos:start="11:36" pos:end="11:36">)</operator> <operator pos:start="11:38" pos:end="11:39">||</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><operator pos:start="13:10" pos:end="13:10">!</operator><call pos:start="13:11" pos:end="13:30"><name pos:start="13:11" pos:end="13:20">TCGV_EQUAL</name><argument_list pos:start="13:21" pos:end="13:30">(<argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:24">ret</name></expr></argument>,<argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">arg1</name></expr></argument>)</argument_list></call> <operator pos:start="13:32" pos:end="13:33">&amp;&amp;</operator> <operator pos:start="13:35" pos:end="13:35">!</operator><call pos:start="13:36" pos:end="13:56"><name pos:start="13:36" pos:end="13:45">TCGV_EQUAL</name><argument_list pos:start="13:46" pos:end="13:56">(<argument pos:start="13:47" pos:end="13:49"><expr pos:start="13:47" pos:end="13:49"><name pos:start="13:47" pos:end="13:49">ret</name></expr></argument>, <argument pos:start="13:52" pos:end="13:55"><expr pos:start="13:52" pos:end="13:55"><name pos:start="13:52" pos:end="13:55">arg2</name></expr></argument>)</argument_list></call><operator pos:start="13:57" pos:end="13:57">)</operator></expr>)</condition>  <block pos:start="13:61" pos:end="20:5">{<block_content pos:start="15:9" pos:end="18:34">

        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">t0</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:16">ret</name></expr>;</expr_stmt>


        <expr_stmt pos:start="18:9" pos:end="18:34"><expr pos:start="18:9" pos:end="18:33"><name pos:start="18:9" pos:end="18:10">t0</name> <operator pos:start="18:12" pos:end="18:12">=</operator> <call pos:start="18:14" pos:end="18:33"><name pos:start="18:14" pos:end="18:31">tcg_temp_local_new</name><argument_list pos:start="18:32" pos:end="18:33">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="24:5" pos:end="34:5"><if pos:start="24:5" pos:end="34:5">if <condition pos:start="24:8" pos:end="24:15">(<expr pos:start="24:9" pos:end="24:14"><name pos:start="24:9" pos:end="24:14">add_ca</name></expr>)</condition> <block pos:start="24:17" pos:end="34:5">{<block_content pos:start="26:9" pos:end="30:40">

        <expr_stmt pos:start="26:9" pos:end="26:34"><expr pos:start="26:9" pos:end="26:33"><name pos:start="26:9" pos:end="26:10">t1</name> <operator pos:start="26:12" pos:end="26:12">=</operator> <call pos:start="26:14" pos:end="26:33"><name pos:start="26:14" pos:end="26:31">tcg_temp_local_new</name><argument_list pos:start="26:32" pos:end="26:33">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="28:9" pos:end="28:52"><expr pos:start="28:9" pos:end="28:51"><call pos:start="28:9" pos:end="28:51"><name pos:start="28:9" pos:end="28:23">tcg_gen_andi_tl</name><argument_list pos:start="28:24" pos:end="28:51">(<argument pos:start="28:25" pos:end="28:26"><expr pos:start="28:25" pos:end="28:26"><name pos:start="28:25" pos:end="28:26">t1</name></expr></argument>, <argument pos:start="28:29" pos:end="28:35"><expr pos:start="28:29" pos:end="28:35"><name pos:start="28:29" pos:end="28:35">cpu_xer</name></expr></argument>, <argument pos:start="28:38" pos:end="28:50"><expr pos:start="28:38" pos:end="28:50"><operator pos:start="28:38" pos:end="28:38">(</operator><literal type="number" pos:start="28:39" pos:end="28:39">1</literal> <operator pos:start="28:41" pos:end="28:42">&lt;&lt;</operator> <name pos:start="28:44" pos:end="28:49">XER_CA</name><operator pos:start="28:50" pos:end="28:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="30:9" pos:end="30:40"><expr pos:start="30:9" pos:end="30:39"><call pos:start="30:9" pos:end="30:39"><name pos:start="30:9" pos:end="30:23">tcg_gen_shri_tl</name><argument_list pos:start="30:24" pos:end="30:39">(<argument pos:start="30:25" pos:end="30:26"><expr pos:start="30:25" pos:end="30:26"><name pos:start="30:25" pos:end="30:26">t1</name></expr></argument>, <argument pos:start="30:29" pos:end="30:30"><expr pos:start="30:29" pos:end="30:30"><name pos:start="30:29" pos:end="30:30">t1</name></expr></argument>, <argument pos:start="30:33" pos:end="30:38"><expr pos:start="30:33" pos:end="30:38"><name pos:start="30:33" pos:end="30:38">XER_CA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="38:5" pos:end="56:5"><if pos:start="38:5" pos:end="44:5">if <condition pos:start="38:8" pos:end="38:33">(<expr pos:start="38:9" pos:end="38:32"><name pos:start="38:9" pos:end="38:18">compute_ca</name> <operator pos:start="38:20" pos:end="38:21">&amp;&amp;</operator> <name pos:start="38:23" pos:end="38:32">compute_ov</name></expr>)</condition> <block pos:start="38:35" pos:end="44:5">{<block_content pos:start="42:9" pos:end="42:76">

        <comment type="block" pos:start="40:9" pos:end="40:69">/* Start with XER CA and OV disabled, the most likely case */</comment>

        <expr_stmt pos:start="42:9" pos:end="42:76"><expr pos:start="42:9" pos:end="42:75"><call pos:start="42:9" pos:end="42:75"><name pos:start="42:9" pos:end="42:23">tcg_gen_andi_tl</name><argument_list pos:start="42:24" pos:end="42:75">(<argument pos:start="42:25" pos:end="42:31"><expr pos:start="42:25" pos:end="42:31"><name pos:start="42:25" pos:end="42:31">cpu_xer</name></expr></argument>, <argument pos:start="42:34" pos:end="42:40"><expr pos:start="42:34" pos:end="42:40"><name pos:start="42:34" pos:end="42:40">cpu_xer</name></expr></argument>, <argument pos:start="42:43" pos:end="42:74"><expr pos:start="42:43" pos:end="42:74"><operator pos:start="42:43" pos:end="42:43">~</operator><operator pos:start="42:44" pos:end="42:44">(</operator><operator pos:start="42:45" pos:end="42:45">(</operator><literal type="number" pos:start="42:46" pos:end="42:46">1</literal> <operator pos:start="42:48" pos:end="42:49">&lt;&lt;</operator> <name pos:start="42:51" pos:end="42:56">XER_CA</name><operator pos:start="42:57" pos:end="42:57">)</operator> <operator pos:start="42:59" pos:end="42:59">|</operator> <operator pos:start="42:61" pos:end="42:61">(</operator><literal type="number" pos:start="42:62" pos:end="42:62">1</literal> <operator pos:start="42:64" pos:end="42:65">&lt;&lt;</operator> <name pos:start="42:67" pos:end="42:72">XER_OV</name><operator pos:start="42:73" pos:end="42:73">)</operator><operator pos:start="42:74" pos:end="42:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="44:7" pos:end="50:5">else if <condition pos:start="44:15" pos:end="44:26">(<expr pos:start="44:16" pos:end="44:25"><name pos:start="44:16" pos:end="44:25">compute_ca</name></expr>)</condition> <block pos:start="44:28" pos:end="50:5">{<block_content pos:start="48:9" pos:end="48:58">

        <comment type="block" pos:start="46:9" pos:end="46:62">/* Start with XER CA disabled, the most likely case */</comment>

        <expr_stmt pos:start="48:9" pos:end="48:58"><expr pos:start="48:9" pos:end="48:57"><call pos:start="48:9" pos:end="48:57"><name pos:start="48:9" pos:end="48:23">tcg_gen_andi_tl</name><argument_list pos:start="48:24" pos:end="48:57">(<argument pos:start="48:25" pos:end="48:31"><expr pos:start="48:25" pos:end="48:31"><name pos:start="48:25" pos:end="48:31">cpu_xer</name></expr></argument>, <argument pos:start="48:34" pos:end="48:40"><expr pos:start="48:34" pos:end="48:40"><name pos:start="48:34" pos:end="48:40">cpu_xer</name></expr></argument>, <argument pos:start="48:43" pos:end="48:56"><expr pos:start="48:43" pos:end="48:56"><operator pos:start="48:43" pos:end="48:43">~</operator><operator pos:start="48:44" pos:end="48:44">(</operator><literal type="number" pos:start="48:45" pos:end="48:45">1</literal> <operator pos:start="48:47" pos:end="48:48">&lt;&lt;</operator> <name pos:start="48:50" pos:end="48:55">XER_CA</name><operator pos:start="48:56" pos:end="48:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="50:7" pos:end="56:5">else if <condition pos:start="50:15" pos:end="50:26">(<expr pos:start="50:16" pos:end="50:25"><name pos:start="50:16" pos:end="50:25">compute_ov</name></expr>)</condition> <block pos:start="50:28" pos:end="56:5">{<block_content pos:start="54:9" pos:end="54:58">

        <comment type="block" pos:start="52:9" pos:end="52:62">/* Start with XER OV disabled, the most likely case */</comment>

        <expr_stmt pos:start="54:9" pos:end="54:58"><expr pos:start="54:9" pos:end="54:57"><call pos:start="54:9" pos:end="54:57"><name pos:start="54:9" pos:end="54:23">tcg_gen_andi_tl</name><argument_list pos:start="54:24" pos:end="54:57">(<argument pos:start="54:25" pos:end="54:31"><expr pos:start="54:25" pos:end="54:31"><name pos:start="54:25" pos:end="54:31">cpu_xer</name></expr></argument>, <argument pos:start="54:34" pos:end="54:40"><expr pos:start="54:34" pos:end="54:40"><name pos:start="54:34" pos:end="54:40">cpu_xer</name></expr></argument>, <argument pos:start="54:43" pos:end="54:56"><expr pos:start="54:43" pos:end="54:56"><operator pos:start="54:43" pos:end="54:43">~</operator><operator pos:start="54:44" pos:end="54:44">(</operator><literal type="number" pos:start="54:45" pos:end="54:45">1</literal> <operator pos:start="54:47" pos:end="54:48">&lt;&lt;</operator> <name pos:start="54:50" pos:end="54:55">XER_OV</name><operator pos:start="54:56" pos:end="54:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="60:5" pos:end="60:35"><expr pos:start="60:5" pos:end="60:34"><call pos:start="60:5" pos:end="60:34"><name pos:start="60:5" pos:end="60:18">tcg_gen_add_tl</name><argument_list pos:start="60:19" pos:end="60:34">(<argument pos:start="60:20" pos:end="60:21"><expr pos:start="60:20" pos:end="60:21"><name pos:start="60:20" pos:end="60:21">t0</name></expr></argument>, <argument pos:start="60:24" pos:end="60:27"><expr pos:start="60:24" pos:end="60:27"><name pos:start="60:24" pos:end="60:27">arg1</name></expr></argument>, <argument pos:start="60:30" pos:end="60:33"><expr pos:start="60:30" pos:end="60:33"><name pos:start="60:30" pos:end="60:33">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="64:5" pos:end="68:5"><if pos:start="64:5" pos:end="68:5">if <condition pos:start="64:8" pos:end="64:19">(<expr pos:start="64:9" pos:end="64:18"><name pos:start="64:9" pos:end="64:18">compute_ca</name></expr>)</condition> <block pos:start="64:21" pos:end="68:5">{<block_content pos:start="66:9" pos:end="66:50">

        <expr_stmt pos:start="66:9" pos:end="66:50"><expr pos:start="66:9" pos:end="66:49"><call pos:start="66:9" pos:end="66:49"><name pos:start="66:9" pos:end="66:31">gen_op_arith_compute_ca</name><argument_list pos:start="66:32" pos:end="66:49">(<argument pos:start="66:33" pos:end="66:35"><expr pos:start="66:33" pos:end="66:35"><name pos:start="66:33" pos:end="66:35">ctx</name></expr></argument>, <argument pos:start="66:38" pos:end="66:39"><expr pos:start="66:38" pos:end="66:39"><name pos:start="66:38" pos:end="66:39">t0</name></expr></argument>, <argument pos:start="66:42" pos:end="66:45"><expr pos:start="66:42" pos:end="66:45"><name pos:start="66:42" pos:end="66:45">arg1</name></expr></argument>, <argument pos:start="66:48" pos:end="66:48"><expr pos:start="66:48" pos:end="66:48"><literal type="number" pos:start="66:48" pos:end="66:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="70:5" pos:end="78:5"><if pos:start="70:5" pos:end="78:5">if <condition pos:start="70:8" pos:end="70:15">(<expr pos:start="70:9" pos:end="70:14"><name pos:start="70:9" pos:end="70:14">add_ca</name></expr>)</condition> <block pos:start="70:17" pos:end="78:5">{<block_content pos:start="72:9" pos:end="76:26">

        <expr_stmt pos:start="72:9" pos:end="72:35"><expr pos:start="72:9" pos:end="72:34"><call pos:start="72:9" pos:end="72:34"><name pos:start="72:9" pos:end="72:22">tcg_gen_add_tl</name><argument_list pos:start="72:23" pos:end="72:34">(<argument pos:start="72:24" pos:end="72:25"><expr pos:start="72:24" pos:end="72:25"><name pos:start="72:24" pos:end="72:25">t0</name></expr></argument>, <argument pos:start="72:28" pos:end="72:29"><expr pos:start="72:28" pos:end="72:29"><name pos:start="72:28" pos:end="72:29">t0</name></expr></argument>, <argument pos:start="72:32" pos:end="72:33"><expr pos:start="72:32" pos:end="72:33"><name pos:start="72:32" pos:end="72:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="74:9" pos:end="74:48"><expr pos:start="74:9" pos:end="74:47"><call pos:start="74:9" pos:end="74:47"><name pos:start="74:9" pos:end="74:31">gen_op_arith_compute_ca</name><argument_list pos:start="74:32" pos:end="74:47">(<argument pos:start="74:33" pos:end="74:35"><expr pos:start="74:33" pos:end="74:35"><name pos:start="74:33" pos:end="74:35">ctx</name></expr></argument>, <argument pos:start="74:38" pos:end="74:39"><expr pos:start="74:38" pos:end="74:39"><name pos:start="74:38" pos:end="74:39">t0</name></expr></argument>, <argument pos:start="74:42" pos:end="74:43"><expr pos:start="74:42" pos:end="74:43"><name pos:start="74:42" pos:end="74:43">t1</name></expr></argument>, <argument pos:start="74:46" pos:end="74:46"><expr pos:start="74:46" pos:end="74:46"><literal type="number" pos:start="74:46" pos:end="74:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="76:9" pos:end="76:26"><expr pos:start="76:9" pos:end="76:25"><call pos:start="76:9" pos:end="76:25"><name pos:start="76:9" pos:end="76:21">tcg_temp_free</name><argument_list pos:start="76:22" pos:end="76:25">(<argument pos:start="76:23" pos:end="76:24"><expr pos:start="76:23" pos:end="76:24"><name pos:start="76:23" pos:end="76:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="80:5" pos:end="84:5"><if pos:start="80:5" pos:end="84:5">if <condition pos:start="80:8" pos:end="80:19">(<expr pos:start="80:9" pos:end="80:18"><name pos:start="80:9" pos:end="80:18">compute_ov</name></expr>)</condition> <block pos:start="80:21" pos:end="84:5">{<block_content pos:start="82:9" pos:end="82:56">

        <expr_stmt pos:start="82:9" pos:end="82:56"><expr pos:start="82:9" pos:end="82:55"><call pos:start="82:9" pos:end="82:55"><name pos:start="82:9" pos:end="82:31">gen_op_arith_compute_ov</name><argument_list pos:start="82:32" pos:end="82:55">(<argument pos:start="82:33" pos:end="82:35"><expr pos:start="82:33" pos:end="82:35"><name pos:start="82:33" pos:end="82:35">ctx</name></expr></argument>, <argument pos:start="82:38" pos:end="82:39"><expr pos:start="82:38" pos:end="82:39"><name pos:start="82:38" pos:end="82:39">t0</name></expr></argument>, <argument pos:start="82:42" pos:end="82:45"><expr pos:start="82:42" pos:end="82:45"><name pos:start="82:42" pos:end="82:45">arg1</name></expr></argument>, <argument pos:start="82:48" pos:end="82:51"><expr pos:start="82:48" pos:end="82:51"><name pos:start="82:48" pos:end="82:51">arg2</name></expr></argument>, <argument pos:start="82:54" pos:end="82:54"><expr pos:start="82:54" pos:end="82:54"><literal type="number" pos:start="82:54" pos:end="82:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="88:5" pos:end="90:29"><if pos:start="88:5" pos:end="90:29">if <condition pos:start="88:8" pos:end="88:39">(<expr pos:start="88:9" pos:end="88:38"><call pos:start="88:9" pos:end="88:38"><name pos:start="88:9" pos:end="88:16">unlikely</name><argument_list pos:start="88:17" pos:end="88:38">(<argument pos:start="88:18" pos:end="88:37"><expr pos:start="88:18" pos:end="88:37"><call pos:start="88:18" pos:end="88:32"><name pos:start="88:18" pos:end="88:19">Rc</name><argument_list pos:start="88:20" pos:end="88:32">(<argument pos:start="88:21" pos:end="88:31"><expr pos:start="88:21" pos:end="88:31"><name pos:start="88:21" pos:end="88:31"><name pos:start="88:21" pos:end="88:23">ctx</name><operator pos:start="88:24" pos:end="88:25">-&gt;</operator><name pos:start="88:26" pos:end="88:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="88:34" pos:end="88:35">!=</operator> <literal type="number" pos:start="88:37" pos:end="88:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="90:9" pos:end="90:29"><block_content pos:start="90:9" pos:end="90:29">

        <expr_stmt pos:start="90:9" pos:end="90:29"><expr pos:start="90:9" pos:end="90:28"><call pos:start="90:9" pos:end="90:28"><name pos:start="90:9" pos:end="90:19">gen_set_Rc0</name><argument_list pos:start="90:20" pos:end="90:28">(<argument pos:start="90:21" pos:end="90:23"><expr pos:start="90:21" pos:end="90:23"><name pos:start="90:21" pos:end="90:23">ctx</name></expr></argument>, <argument pos:start="90:26" pos:end="90:27"><expr pos:start="90:26" pos:end="90:27"><name pos:start="90:26" pos:end="90:27">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="94:5" pos:end="100:5"><if pos:start="94:5" pos:end="100:5">if <condition pos:start="94:8" pos:end="94:29">(<expr pos:start="94:9" pos:end="94:28"><operator pos:start="94:9" pos:end="94:9">!</operator><call pos:start="94:10" pos:end="94:28"><name pos:start="94:10" pos:end="94:19">TCGV_EQUAL</name><argument_list pos:start="94:20" pos:end="94:28">(<argument pos:start="94:21" pos:end="94:22"><expr pos:start="94:21" pos:end="94:22"><name pos:start="94:21" pos:end="94:22">t0</name></expr></argument>, <argument pos:start="94:25" pos:end="94:27"><expr pos:start="94:25" pos:end="94:27"><name pos:start="94:25" pos:end="94:27">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="94:31" pos:end="100:5">{<block_content pos:start="96:9" pos:end="98:26">

        <expr_stmt pos:start="96:9" pos:end="96:32"><expr pos:start="96:9" pos:end="96:31"><call pos:start="96:9" pos:end="96:31"><name pos:start="96:9" pos:end="96:22">tcg_gen_mov_tl</name><argument_list pos:start="96:23" pos:end="96:31">(<argument pos:start="96:24" pos:end="96:26"><expr pos:start="96:24" pos:end="96:26"><name pos:start="96:24" pos:end="96:26">ret</name></expr></argument>, <argument pos:start="96:29" pos:end="96:30"><expr pos:start="96:29" pos:end="96:30"><name pos:start="96:29" pos:end="96:30">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="98:9" pos:end="98:26"><expr pos:start="98:9" pos:end="98:25"><call pos:start="98:9" pos:end="98:25"><name pos:start="98:9" pos:end="98:21">tcg_temp_free</name><argument_list pos:start="98:22" pos:end="98:25">(<argument pos:start="98:23" pos:end="98:24"><expr pos:start="98:23" pos:end="98:24"><name pos:start="98:23" pos:end="98:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
