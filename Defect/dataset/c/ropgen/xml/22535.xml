<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22535.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_str</name><parameter_list pos:start="1:19" pos:end="1:63">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:32">ByteIOContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">bc</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">string</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:62">maxlen</name></decl></parameter>)</parameter_list><block pos:start="1:64" pos:end="35:1">{<block_content pos:start="3:5" pos:end="33:17">

    <decl_stmt pos:start="3:5" pos:end="3:23"><decl pos:start="3:5" pos:end="3:22"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:11">len</name><init pos:start="3:12" pos:end="3:22">= <expr pos:start="3:14" pos:end="3:22"><call pos:start="3:14" pos:end="3:22"><name pos:start="3:14" pos:end="3:18">get_v</name><argument_list pos:start="3:19" pos:end="3:22">(<argument pos:start="3:20" pos:end="3:21"><expr pos:start="3:20" pos:end="3:21"><name pos:start="3:20" pos:end="3:21">bc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    

    <if_stmt pos:start="7:5" pos:end="9:51"><if pos:start="7:5" pos:end="9:51">if<condition pos:start="7:7" pos:end="7:21">(<expr pos:start="7:8" pos:end="7:20"><name pos:start="7:8" pos:end="7:10">len</name> <operator pos:start="7:12" pos:end="7:13">&amp;&amp;</operator> <name pos:start="7:15" pos:end="7:20">maxlen</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:51"><block_content pos:start="9:9" pos:end="9:51">

        <expr_stmt pos:start="9:9" pos:end="9:51"><expr pos:start="9:9" pos:end="9:50"><call pos:start="9:9" pos:end="9:50"><name pos:start="9:9" pos:end="9:18">get_buffer</name><argument_list pos:start="9:19" pos:end="9:50">(<argument pos:start="9:20" pos:end="9:21"><expr pos:start="9:20" pos:end="9:21"><name pos:start="9:20" pos:end="9:21">bc</name></expr></argument>, <argument pos:start="9:24" pos:end="9:29"><expr pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:29">string</name></expr></argument>, <argument pos:start="9:32" pos:end="9:49"><expr pos:start="9:32" pos:end="9:49"><call pos:start="9:32" pos:end="9:49"><name pos:start="9:32" pos:end="9:36">FFMIN</name><argument_list pos:start="9:37" pos:end="9:49">(<argument pos:start="9:38" pos:end="9:40"><expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:40">len</name></expr></argument>, <argument pos:start="9:43" pos:end="9:48"><expr pos:start="9:43" pos:end="9:48"><name pos:start="9:43" pos:end="9:48">maxlen</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="11:5" pos:end="17:5">while<condition pos:start="11:10" pos:end="11:23">(<expr pos:start="11:11" pos:end="11:22"><name pos:start="11:11" pos:end="11:13">len</name> <operator pos:start="11:15" pos:end="11:15">&gt;</operator> <name pos:start="11:17" pos:end="11:22">maxlen</name></expr>)</condition><block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:14">

        <expr_stmt pos:start="13:9" pos:end="13:21"><expr pos:start="13:9" pos:end="13:20"><call pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:16">get_byte</name><argument_list pos:start="13:17" pos:end="13:20">(<argument pos:start="13:18" pos:end="13:19"><expr pos:start="13:18" pos:end="13:19"><name pos:start="13:18" pos:end="13:19">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:14"><expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:11">len</name><operator pos:start="15:12" pos:end="15:13">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="21:5" pos:end="23:40"><if pos:start="21:5" pos:end="23:40">if<condition pos:start="21:7" pos:end="21:14">(<expr pos:start="21:8" pos:end="21:13"><name pos:start="21:8" pos:end="21:13">maxlen</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:40"><block_content pos:start="23:9" pos:end="23:40">

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:14">string</name><index pos:start="23:15" pos:end="23:36">[<expr pos:start="23:16" pos:end="23:35"><call pos:start="23:16" pos:end="23:35"><name pos:start="23:16" pos:end="23:20">FFMIN</name><argument_list pos:start="23:21" pos:end="23:35">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">len</name></expr></argument>, <argument pos:start="23:27" pos:end="23:34"><expr pos:start="23:27" pos:end="23:34"><name pos:start="23:27" pos:end="23:32">maxlen</name><operator pos:start="23:33" pos:end="23:33">-</operator><literal type="number" pos:start="23:34" pos:end="23:34">1</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="23:37" pos:end="23:37">=</operator> <literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <if_stmt pos:start="27:5" pos:end="33:17"><if pos:start="27:5" pos:end="29:18">if<condition pos:start="27:7" pos:end="27:21">(<expr pos:start="27:8" pos:end="27:20"><name pos:start="27:8" pos:end="27:13">maxlen</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <name pos:start="27:18" pos:end="27:20">len</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if>

    <else pos:start="31:5" pos:end="33:17">else<block type="pseudo" pos:start="33:9" pos:end="33:17"><block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
