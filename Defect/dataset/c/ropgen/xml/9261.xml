<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9261.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">pointer_event</name><parameter_list pos:start="1:26" pos:end="1:70">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:34">VncState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">vs</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:55">button_mask</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:62"><decl pos:start="1:58" pos:end="1:62"><type pos:start="1:58" pos:end="1:62"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:62">x</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:69"><decl pos:start="1:65" pos:end="1:69"><type pos:start="1:65" pos:end="1:69"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:69">y</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:28">

    <decl_stmt pos:start="5:5" pos:end="17:6"><decl pos:start="5:5" pos:end="17:5"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:19">uint32_t</name></type> <name pos:start="5:21" pos:end="5:43"><name pos:start="5:21" pos:end="5:24">bmap</name><index pos:start="5:25" pos:end="5:43">[<expr pos:start="5:26" pos:end="5:42"><name pos:start="5:26" pos:end="5:42">INPUT_BUTTON__MAX</name></expr>]</index></name> <init pos:start="5:45" pos:end="17:5">= <expr pos:start="5:47" pos:end="17:5"><block pos:start="5:47" pos:end="17:5">{

        <expr pos:start="7:9" pos:end="7:40"><index pos:start="7:9" pos:end="7:27">[<expr pos:start="7:10" pos:end="7:26"><name pos:start="7:10" pos:end="7:26">INPUT_BUTTON_LEFT</name></expr>]</index>       <operator pos:start="7:35" pos:end="7:35">=</operator> <literal type="number" pos:start="7:37" pos:end="7:40">0x01</literal></expr>,

        <expr pos:start="9:9" pos:end="9:40"><index pos:start="9:9" pos:end="9:29">[<expr pos:start="9:10" pos:end="9:28"><name pos:start="9:10" pos:end="9:28">INPUT_BUTTON_MIDDLE</name></expr>]</index>     <operator pos:start="9:35" pos:end="9:35">=</operator> <literal type="number" pos:start="9:37" pos:end="9:40">0x02</literal></expr>,

        <expr pos:start="11:9" pos:end="11:40"><index pos:start="11:9" pos:end="11:28">[<expr pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:27">INPUT_BUTTON_RIGHT</name></expr>]</index>      <operator pos:start="11:35" pos:end="11:35">=</operator> <literal type="number" pos:start="11:37" pos:end="11:40">0x04</literal></expr>,

        <expr pos:start="13:9" pos:end="13:40"><index pos:start="13:9" pos:end="13:31">[<expr pos:start="13:10" pos:end="13:30"><name pos:start="13:10" pos:end="13:30">INPUT_BUTTON_WHEEL_UP</name></expr>]</index>   <operator pos:start="13:35" pos:end="13:35">=</operator> <literal type="number" pos:start="13:37" pos:end="13:40">0x08</literal></expr>,

        <expr pos:start="15:9" pos:end="15:40"><index pos:start="15:9" pos:end="15:33">[<expr pos:start="15:10" pos:end="15:32"><name pos:start="15:10" pos:end="15:32">INPUT_BUTTON_WHEEL_DOWN</name></expr>]</index> <operator pos:start="15:35" pos:end="15:35">=</operator> <literal type="number" pos:start="15:37" pos:end="15:40">0x10</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:39"><decl pos:start="19:5" pos:end="19:38"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">QemuConsole</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:20">con</name> <init pos:start="19:22" pos:end="19:38">= <expr pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:25">vs</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">vd</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:34">dcl</name><operator pos:start="19:35" pos:end="19:35">.</operator><name pos:start="19:36" pos:end="19:38">con</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:55"><decl pos:start="21:5" pos:end="21:54"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">width</name> <init pos:start="21:15" pos:end="21:54">= <expr pos:start="21:17" pos:end="21:54"><call pos:start="21:17" pos:end="21:54"><name pos:start="21:17" pos:end="21:38">pixman_image_get_width</name><argument_list pos:start="21:39" pos:end="21:54">(<argument pos:start="21:40" pos:end="21:53"><expr pos:start="21:40" pos:end="21:53"><name pos:start="21:40" pos:end="21:53"><name pos:start="21:40" pos:end="21:41">vs</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:45">vd</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:53">server</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:57"><decl pos:start="23:5" pos:end="23:56"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:14">height</name> <init pos:start="23:16" pos:end="23:56">= <expr pos:start="23:18" pos:end="23:56"><call pos:start="23:18" pos:end="23:56"><name pos:start="23:18" pos:end="23:40">pixman_image_get_height</name><argument_list pos:start="23:41" pos:end="23:56">(<argument pos:start="23:42" pos:end="23:55"><expr pos:start="23:42" pos:end="23:55"><name pos:start="23:42" pos:end="23:55"><name pos:start="23:42" pos:end="23:43">vs</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:47">vd</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:55">server</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:38">(<expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:10">vs</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:22">last_bmask</name></name> <operator pos:start="27:24" pos:end="27:25">!=</operator> <name pos:start="27:27" pos:end="27:37">button_mask</name></expr>)</condition> <block pos:start="27:40" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:37">

        <expr_stmt pos:start="29:9" pos:end="29:74"><expr pos:start="29:9" pos:end="29:73"><call pos:start="29:9" pos:end="29:73"><name pos:start="29:9" pos:end="29:33">qemu_input_update_buttons</name><argument_list pos:start="29:34" pos:end="29:73">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">con</name></expr></argument>, <argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:43">bmap</name></expr></argument>, <argument pos:start="29:46" pos:end="29:59"><expr pos:start="29:46" pos:end="29:59"><name pos:start="29:46" pos:end="29:59"><name pos:start="29:46" pos:end="29:47">vs</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:59">last_bmask</name></name></expr></argument>, <argument pos:start="29:62" pos:end="29:72"><expr pos:start="29:62" pos:end="29:72"><name pos:start="29:62" pos:end="29:72">button_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:10">vs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:22">last_bmask</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:36">button_mask</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="63:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:10">vs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:20">absolute</name></name></expr>)</condition> <block pos:start="37:23" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:59">

        <expr_stmt pos:start="39:9" pos:end="39:58"><expr pos:start="39:9" pos:end="39:57"><call pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:28">qemu_input_queue_abs</name><argument_list pos:start="39:29" pos:end="39:57">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">con</name></expr></argument>, <argument pos:start="39:35" pos:end="39:46"><expr pos:start="39:35" pos:end="39:46"><name pos:start="39:35" pos:end="39:46">INPUT_AXIS_X</name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><name pos:start="39:49" pos:end="39:49">x</name></expr></argument>, <argument pos:start="39:52" pos:end="39:56"><expr pos:start="39:52" pos:end="39:56"><name pos:start="39:52" pos:end="39:56">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:28">qemu_input_queue_abs</name><argument_list pos:start="41:29" pos:end="41:58">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">con</name></expr></argument>, <argument pos:start="41:35" pos:end="41:46"><expr pos:start="41:35" pos:end="41:46"><name pos:start="41:35" pos:end="41:46">INPUT_AXIS_Y</name></expr></argument>, <argument pos:start="41:49" pos:end="41:49"><expr pos:start="41:49" pos:end="41:49"><name pos:start="41:49" pos:end="41:49">y</name></expr></argument>, <argument pos:start="41:52" pos:end="41:57"><expr pos:start="41:52" pos:end="41:57"><name pos:start="41:52" pos:end="41:57">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="49:5">else if <condition pos:start="43:15" pos:end="43:68">(<expr pos:start="43:16" pos:end="43:67"><call pos:start="43:16" pos:end="43:67"><name pos:start="43:16" pos:end="43:30">vnc_has_feature</name><argument_list pos:start="43:31" pos:end="43:67">(<argument pos:start="43:32" pos:end="43:33"><expr pos:start="43:32" pos:end="43:33"><name pos:start="43:32" pos:end="43:33">vs</name></expr></argument>, <argument pos:start="43:36" pos:end="43:66"><expr pos:start="43:36" pos:end="43:66"><name pos:start="43:36" pos:end="43:66">VNC_FEATURE_POINTER_TYPE_CHANGE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:70" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:60">

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><call pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:28">qemu_input_queue_rel</name><argument_list pos:start="45:29" pos:end="45:59">(<argument pos:start="45:30" pos:end="45:32"><expr pos:start="45:30" pos:end="45:32"><name pos:start="45:30" pos:end="45:32">con</name></expr></argument>, <argument pos:start="45:35" pos:end="45:46"><expr pos:start="45:35" pos:end="45:46"><name pos:start="45:35" pos:end="45:46">INPUT_AXIS_X</name></expr></argument>, <argument pos:start="45:49" pos:end="45:58"><expr pos:start="45:49" pos:end="45:58"><name pos:start="45:49" pos:end="45:49">x</name> <operator pos:start="45:51" pos:end="45:51">-</operator> <literal type="number" pos:start="45:53" pos:end="45:58">0x7FFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:28">qemu_input_queue_rel</name><argument_list pos:start="47:29" pos:end="47:59">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">con</name></expr></argument>, <argument pos:start="47:35" pos:end="47:46"><expr pos:start="47:35" pos:end="47:46"><name pos:start="47:35" pos:end="47:46">INPUT_AXIS_Y</name></expr></argument>, <argument pos:start="47:49" pos:end="47:58"><expr pos:start="47:49" pos:end="47:58"><name pos:start="47:49" pos:end="47:49">y</name> <operator pos:start="47:51" pos:end="47:51">-</operator> <literal type="number" pos:start="47:53" pos:end="47:58">0x7FFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="63:5">else <block pos:start="49:12" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:23">

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:14">vs</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:22">last_x</name></name> <operator pos:start="51:24" pos:end="51:25">!=</operator> <operator pos:start="51:27" pos:end="51:27">-</operator><literal type="number" pos:start="51:28" pos:end="51:28">1</literal></expr>)</condition> <block pos:start="51:31" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:68">

            <expr_stmt pos:start="53:13" pos:end="53:68"><expr pos:start="53:13" pos:end="53:67"><call pos:start="53:13" pos:end="53:67"><name pos:start="53:13" pos:end="53:32">qemu_input_queue_rel</name><argument_list pos:start="53:33" pos:end="53:67">(<argument pos:start="53:34" pos:end="53:36"><expr pos:start="53:34" pos:end="53:36"><name pos:start="53:34" pos:end="53:36">con</name></expr></argument>, <argument pos:start="53:39" pos:end="53:50"><expr pos:start="53:39" pos:end="53:50"><name pos:start="53:39" pos:end="53:50">INPUT_AXIS_X</name></expr></argument>, <argument pos:start="53:53" pos:end="53:66"><expr pos:start="53:53" pos:end="53:66"><name pos:start="53:53" pos:end="53:53">x</name> <operator pos:start="53:55" pos:end="53:55">-</operator> <name pos:start="53:57" pos:end="53:66"><name pos:start="53:57" pos:end="53:58">vs</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:66">last_x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:68"><expr pos:start="55:13" pos:end="55:67"><call pos:start="55:13" pos:end="55:67"><name pos:start="55:13" pos:end="55:32">qemu_input_queue_rel</name><argument_list pos:start="55:33" pos:end="55:67">(<argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:36">con</name></expr></argument>, <argument pos:start="55:39" pos:end="55:50"><expr pos:start="55:39" pos:end="55:50"><name pos:start="55:39" pos:end="55:50">INPUT_AXIS_Y</name></expr></argument>, <argument pos:start="55:53" pos:end="55:66"><expr pos:start="55:53" pos:end="55:66"><name pos:start="55:53" pos:end="55:53">y</name> <operator pos:start="55:55" pos:end="55:55">-</operator> <name pos:start="55:57" pos:end="55:66"><name pos:start="55:57" pos:end="55:58">vs</name><operator pos:start="55:59" pos:end="55:60">-&gt;</operator><name pos:start="55:61" pos:end="55:66">last_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:10">vs</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:18">last_x</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:22">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:23"><expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:10">vs</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:18">last_y</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:22">y</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><call pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:25">qemu_input_event_sync</name><argument_list pos:start="65:26" pos:end="65:27">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
