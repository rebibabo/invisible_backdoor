<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10548.c" pos:tabs="8"><function pos:start="1:1" pos:end="369:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">ff_img_read_header</name><parameter_list pos:start="1:23" pos:end="1:43">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="369:1">{<block_content pos:start="5:5" pos:end="367:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VideoDemuxData</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:37">= <expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:26">s1</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">first_index</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">1</literal></expr></init></decl>, <decl pos:start="7:26" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:35">last_index</name> <init pos:start="7:37" pos:end="7:39">= <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:22">AVPixelFormat</name></name></type> <name pos:start="11:24" pos:end="11:30">pix_fmt</name> <init pos:start="11:32" pos:end="11:48">= <expr pos:start="11:34" pos:end="11:48"><name pos:start="11:34" pos:end="11:48">AV_PIX_FMT_NONE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:6">s1</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:17">ctx_flags</name></name> <operator pos:start="15:19" pos:end="15:20">|=</operator> <name pos:start="15:22" pos:end="15:38">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:6">st</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:38"><name pos:start="19:10" pos:end="19:28">avformat_new_stream</name><argument_list pos:start="19:29" pos:end="19:38">(<argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">s1</name></expr></argument>, <argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">st</name></expr>)</condition> <block pos:start="21:14" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="31:71">(<expr pos:start="29:9" pos:end="31:70"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:23">pixel_format</name></name> <operator pos:start="29:25" pos:end="29:26">&amp;&amp;</operator>

        <operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:16">pix_fmt</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:50"><name pos:start="31:20" pos:end="31:33">av_get_pix_fmt</name><argument_list pos:start="31:34" pos:end="31:50">(<argument pos:start="31:35" pos:end="31:49"><expr pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:49">pixel_format</name></name></expr></argument>)</argument_list></call><operator pos:start="31:51" pos:end="31:51">)</operator> <operator pos:start="31:53" pos:end="31:54">==</operator> <name pos:start="31:56" pos:end="31:70">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="31:73" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:31">

        <expr_stmt pos:start="33:9" pos:end="35:32"><expr pos:start="33:9" pos:end="35:31"><call pos:start="33:9" pos:end="35:31"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:31">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">s1</name></expr></argument>, <argument pos:start="33:20" pos:end="33:31"><expr pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:34" pos:end="33:62"><expr pos:start="33:34" pos:end="33:62"><literal type="string" pos:start="33:34" pos:end="33:62">"No such pixel format: %s.\n"</literal></expr></argument>,

               <argument pos:start="35:16" pos:end="35:30"><expr pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:30">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:55"><expr pos:start="43:5" pos:end="43:54"><call pos:start="43:5" pos:end="43:54"><name pos:start="43:5" pos:end="43:14">av_strlcpy</name><argument_list pos:start="43:15" pos:end="43:54">(<argument pos:start="43:16" pos:end="43:22"><expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:22">path</name></name></expr></argument>, <argument pos:start="43:25" pos:end="43:36"><expr pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:26">s1</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:36">filename</name></name></expr></argument>, <argument pos:start="43:39" pos:end="43:53"><expr pos:start="43:39" pos:end="43:53"><sizeof pos:start="43:39" pos:end="43:53">sizeof<argument_list pos:start="43:45" pos:end="43:53">(<argument pos:start="43:46" pos:end="43:52"><expr pos:start="43:46" pos:end="43:52"><name pos:start="43:46" pos:end="43:52"><name pos:start="43:46" pos:end="43:46">s</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:52">path</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:17">img_number</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">img_count</name></name>  <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:21">/* find format */</comment>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="55:23">if <condition pos:start="53:8" pos:end="53:42">(<expr pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:10">s1</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:19">iformat</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:26">flags</name></name> <operator pos:start="53:28" pos:end="53:28">&amp;</operator> <name pos:start="53:30" pos:end="53:41">AVFMT_NOFILE</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:23"><block_content pos:start="55:9" pos:end="55:23">

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">is_pipe</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="57:5" pos:end="63:5">else <block pos:start="57:10" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:47">

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:18">is_pipe</name></name>       <operator pos:start="59:26" pos:end="59:26">=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:24">need_parsing</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:46">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="85:72"><if pos:start="67:5" pos:end="79:5">if <condition pos:start="67:8" pos:end="67:29">(<expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:23">ts_from_file</name></name> <operator pos:start="67:25" pos:end="67:26">==</operator> <literal type="number" pos:start="67:28" pos:end="67:28">2</literal></expr>)</condition> <block pos:start="67:31" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:51">

<cpp:if pos:start="69:1" pos:end="69:37">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:37"><operator pos:start="69:5" pos:end="69:5">!</operator><name pos:start="69:6" pos:end="69:37">HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC</name></expr></cpp:if>

        <expr_stmt pos:start="71:9" pos:end="71:105"><expr pos:start="71:9" pos:end="71:104"><call pos:start="71:9" pos:end="71:104"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:104">(<argument pos:start="71:16" pos:end="71:17"><expr pos:start="71:16" pos:end="71:17"><name pos:start="71:16" pos:end="71:17">s1</name></expr></argument>, <argument pos:start="71:20" pos:end="71:31"><expr pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:34" pos:end="71:103"><expr pos:start="71:34" pos:end="71:103"><literal type="string" pos:start="71:34" pos:end="71:103">"POSIX.1-2008 not supported, nanosecond file timestamps unavailable\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="76:0">return <expr pos:start="73:16" pos:end="73:30"><call pos:start="73:16" pos:end="73:30"><name pos:start="73:16" pos:end="73:22">AVERROR</name><argument_list pos:start="73:23" pos:end="73:30">(<argument pos:start="73:24" pos:end="73:29"><expr pos:start="73:24" pos:end="73:29"><name pos:start="73:24" pos:end="73:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="77:9" pos:end="77:51"><expr pos:start="77:9" pos:end="77:50"><call pos:start="77:9" pos:end="77:50"><name pos:start="77:9" pos:end="77:27">avpriv_set_pts_info</name><argument_list pos:start="77:28" pos:end="77:50">(<argument pos:start="77:29" pos:end="77:30"><expr pos:start="77:29" pos:end="77:30"><name pos:start="77:29" pos:end="77:30">st</name></expr></argument>, <argument pos:start="77:33" pos:end="77:34"><expr pos:start="77:33" pos:end="77:34"><literal type="number" pos:start="77:33" pos:end="77:34">64</literal></expr></argument>, <argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><literal type="number" pos:start="77:37" pos:end="77:37">1</literal></expr></argument>, <argument pos:start="77:40" pos:end="77:49"><expr pos:start="77:40" pos:end="77:49"><literal type="number" pos:start="77:40" pos:end="77:49">1000000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="81:42">else if <condition pos:start="79:15" pos:end="79:31">(<expr pos:start="79:16" pos:end="79:30"><name pos:start="79:16" pos:end="79:30"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:30">ts_from_file</name></name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:42"><block_content pos:start="81:9" pos:end="81:42">

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><call pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:27">avpriv_set_pts_info</name><argument_list pos:start="81:28" pos:end="81:41">(<argument pos:start="81:29" pos:end="81:30"><expr pos:start="81:29" pos:end="81:30"><name pos:start="81:29" pos:end="81:30">st</name></expr></argument>, <argument pos:start="81:33" pos:end="81:34"><expr pos:start="81:33" pos:end="81:34"><literal type="number" pos:start="81:33" pos:end="81:34">64</literal></expr></argument>, <argument pos:start="81:37" pos:end="81:37"><expr pos:start="81:37" pos:end="81:37"><literal type="number" pos:start="81:37" pos:end="81:37">1</literal></expr></argument>, <argument pos:start="81:40" pos:end="81:40"><expr pos:start="81:40" pos:end="81:40"><literal type="number" pos:start="81:40" pos:end="81:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="83:5" pos:end="85:72">else<block type="pseudo" pos:start="85:9" pos:end="85:72"><block_content pos:start="85:9" pos:end="85:72">

        <expr_stmt pos:start="85:9" pos:end="85:72"><expr pos:start="85:9" pos:end="85:71"><call pos:start="85:9" pos:end="85:71"><name pos:start="85:9" pos:end="85:27">avpriv_set_pts_info</name><argument_list pos:start="85:28" pos:end="85:71">(<argument pos:start="85:29" pos:end="85:30"><expr pos:start="85:29" pos:end="85:30"><name pos:start="85:29" pos:end="85:30">st</name></expr></argument>, <argument pos:start="85:33" pos:end="85:34"><expr pos:start="85:33" pos:end="85:34"><literal type="number" pos:start="85:33" pos:end="85:34">64</literal></expr></argument>, <argument pos:start="85:37" pos:end="85:52"><expr pos:start="85:37" pos:end="85:52"><name pos:start="85:37" pos:end="85:52"><name pos:start="85:37" pos:end="85:37">s</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:48">framerate</name><operator pos:start="85:49" pos:end="85:49">.</operator><name pos:start="85:50" pos:end="85:52">den</name></name></expr></argument>, <argument pos:start="85:55" pos:end="85:70"><expr pos:start="85:55" pos:end="85:70"><name pos:start="85:55" pos:end="85:70"><name pos:start="85:55" pos:end="85:55">s</name><operator pos:start="85:56" pos:end="85:57">-&gt;</operator><name pos:start="85:58" pos:end="85:66">framerate</name><operator pos:start="85:67" pos:end="85:67">.</operator><name pos:start="85:68" pos:end="85:70">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:30">(<expr pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:16"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:16">width</name></name> <operator pos:start="89:18" pos:end="89:19">&amp;&amp;</operator> <name pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:29">height</name></name></expr>)</condition> <block pos:start="89:32" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:38">

        <expr_stmt pos:start="91:9" pos:end="91:37"><expr pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:17">codec</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:24">width</name></name>  <operator pos:start="91:27" pos:end="91:27">=</operator> <name pos:start="91:29" pos:end="91:36"><name pos:start="91:29" pos:end="91:29">s</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:36">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:10">st</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:17">codec</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:25">height</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:37"><name pos:start="93:29" pos:end="93:29">s</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:37">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="243:5"><if pos:start="99:5" pos:end="243:5">if <condition pos:start="99:8" pos:end="99:20">(<expr pos:start="99:9" pos:end="99:19"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:19"><name pos:start="99:10" pos:end="99:10">s</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:19">is_pipe</name></name></expr>)</condition> <block pos:start="99:22" pos:end="243:5">{<block_content pos:start="101:9" pos:end="241:9">

        <if_stmt pos:start="101:9" pos:end="167:9"><if pos:start="101:9" pos:end="167:9">if <condition pos:start="101:12" pos:end="101:48">(<expr pos:start="101:13" pos:end="101:47"><name pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:27">pattern_type</name></name> <operator pos:start="101:29" pos:end="101:30">==</operator> <name pos:start="101:32" pos:end="101:47">PT_GLOB_SEQUENCE</name></expr>)</condition> <block pos:start="101:50" pos:end="167:9">{<block_content pos:start="103:9" pos:end="165:9">

        <expr_stmt pos:start="103:9" pos:end="103:39"><expr pos:start="103:9" pos:end="103:38"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:19">use_glob</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:38"><name pos:start="103:23" pos:end="103:29">is_glob</name><argument_list pos:start="103:30" pos:end="103:38">(<argument pos:start="103:31" pos:end="103:37"><expr pos:start="103:31" pos:end="103:37"><name pos:start="103:31" pos:end="103:37"><name pos:start="103:31" pos:end="103:31">s</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="165:9"><if pos:start="105:9" pos:end="165:9">if <condition pos:start="105:12" pos:end="105:24">(<expr pos:start="105:13" pos:end="105:23"><name pos:start="105:13" pos:end="105:23"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:23">use_glob</name></name></expr>)</condition> <block pos:start="105:26" pos:end="165:9">{<block_content pos:start="109:13" pos:end="164:0">

<cpp:if pos:start="107:1" pos:end="107:13">#<cpp:directive pos:start="107:2" pos:end="107:3">if</cpp:directive> <expr pos:start="107:5" pos:end="107:13"><name pos:start="107:5" pos:end="107:13">HAVE_GLOB</name></expr></cpp:if>

            <decl_stmt pos:start="109:13" pos:end="109:40"><decl pos:start="109:13" pos:end="109:29"><type pos:start="109:13" pos:end="109:18"><name pos:start="109:13" pos:end="109:16">char</name> <modifier pos:start="109:18" pos:end="109:18">*</modifier></type><name pos:start="109:19" pos:end="109:19">p</name> <init pos:start="109:21" pos:end="109:29">= <expr pos:start="109:23" pos:end="109:29"><name pos:start="109:23" pos:end="109:29"><name pos:start="109:23" pos:end="109:23">s</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:29">path</name></name></expr></init></decl>, <decl pos:start="109:32" pos:end="109:33"><type ref="prev" pos:start="109:13" pos:end="109:18"><modifier pos:start="109:32" pos:end="109:32">*</modifier></type><name pos:start="109:33" pos:end="109:33">q</name></decl>, <decl pos:start="109:36" pos:end="109:39"><type ref="prev" pos:start="109:13" pos:end="109:18"><modifier pos:start="109:36" pos:end="109:36">*</modifier></type><name pos:start="109:37" pos:end="109:39">dup</name></decl>;</decl_stmt>

            <decl_stmt pos:start="111:13" pos:end="114:0"><decl pos:start="111:13" pos:end="111:20"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:20">gerr</name></decl>;</decl_stmt>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>



            <expr_stmt pos:start="117:13" pos:end="122:0"><expr pos:start="117:13" pos:end="119:55"><call pos:start="117:13" pos:end="119:55"><name pos:start="117:13" pos:end="117:18">av_log</name><argument_list pos:start="117:19" pos:end="119:55">(<argument pos:start="117:20" pos:end="117:21"><expr pos:start="117:20" pos:end="117:21"><name pos:start="117:20" pos:end="117:21">s1</name></expr></argument>, <argument pos:start="117:24" pos:end="117:37"><expr pos:start="117:24" pos:end="117:37"><name pos:start="117:24" pos:end="117:37">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="117:40" pos:end="119:54"><expr pos:start="117:40" pos:end="119:54"><literal type="string" pos:start="117:40" pos:end="117:85">"Pattern type 'glob_sequence' is deprecated: "</literal>

                   <literal type="string" pos:start="119:20" pos:end="119:54">"use pattern_type 'glob' instead\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="121:1" pos:end="121:13">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:13"><name pos:start="121:5" pos:end="121:13">HAVE_GLOB</name></expr></cpp:if>

            <expr_stmt pos:start="123:13" pos:end="123:35"><expr pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:15">dup</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <name pos:start="123:19" pos:end="123:19">q</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:31">av_strdup</name><argument_list pos:start="123:32" pos:end="123:34">(<argument pos:start="123:33" pos:end="123:33"><expr pos:start="123:33" pos:end="123:33"><name pos:start="123:33" pos:end="123:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="125:13" pos:end="143:13">while <condition pos:start="125:19" pos:end="125:22">(<expr pos:start="125:20" pos:end="125:21"><operator pos:start="125:20" pos:end="125:20">*</operator><name pos:start="125:21" pos:end="125:21">q</name></expr>)</condition> <block pos:start="125:24" pos:end="143:13">{<block_content pos:start="129:17" pos:end="141:28">

                <comment type="block" pos:start="127:17" pos:end="127:74">/* Do we have room for the next char and a \ insertion? */</comment>

                <if_stmt pos:start="129:17" pos:end="131:24"><if pos:start="129:17" pos:end="131:24">if <condition pos:start="129:20" pos:end="129:59">(<expr pos:start="129:21" pos:end="129:58"><operator pos:start="129:21" pos:end="129:21">(</operator><name pos:start="129:22" pos:end="129:22">p</name> <operator pos:start="129:24" pos:end="129:24">-</operator> <name pos:start="129:26" pos:end="129:32"><name pos:start="129:26" pos:end="129:26">s</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:32">path</name></name><operator pos:start="129:33" pos:end="129:33">)</operator> <operator pos:start="129:35" pos:end="129:36">&gt;=</operator> <operator pos:start="129:38" pos:end="129:38">(</operator><sizeof pos:start="129:39" pos:end="129:53">sizeof<argument_list pos:start="129:45" pos:end="129:53">(<argument pos:start="129:46" pos:end="129:52"><expr pos:start="129:46" pos:end="129:52"><name pos:start="129:46" pos:end="129:52"><name pos:start="129:46" pos:end="129:46">s</name><operator pos:start="129:47" pos:end="129:48">-&gt;</operator><name pos:start="129:49" pos:end="129:52">path</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="129:55" pos:end="129:55">-</operator> <literal type="number" pos:start="129:57" pos:end="129:57">2</literal><operator pos:start="129:58" pos:end="129:58">)</operator></expr>)</condition><block type="pseudo" pos:start="131:19" pos:end="131:24"><block_content pos:start="131:19" pos:end="131:24">

                  <break pos:start="131:19" pos:end="131:24">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="133:17" pos:end="139:32"><if pos:start="133:17" pos:end="135:24">if <condition pos:start="133:20" pos:end="133:58">(<expr pos:start="133:21" pos:end="133:57"><operator pos:start="133:21" pos:end="133:21">*</operator><name pos:start="133:22" pos:end="133:22">q</name> <operator pos:start="133:24" pos:end="133:25">==</operator> <literal type="char" pos:start="133:27" pos:end="133:29">'%'</literal> <operator pos:start="133:31" pos:end="133:32">&amp;&amp;</operator> <call pos:start="133:34" pos:end="133:57"><name pos:start="133:34" pos:end="133:39">strspn</name><argument_list pos:start="133:40" pos:end="133:57">(<argument pos:start="133:41" pos:end="133:45"><expr pos:start="133:41" pos:end="133:45"><name pos:start="133:41" pos:end="133:41">q</name> <operator pos:start="133:43" pos:end="133:43">+</operator> <literal type="number" pos:start="133:45" pos:end="133:45">1</literal></expr></argument>, <argument pos:start="133:48" pos:end="133:56"><expr pos:start="133:48" pos:end="133:56"><literal type="string" pos:start="133:48" pos:end="133:56">"%*?[]{}"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:24"><block_content pos:start="135:21" pos:end="135:24">

                    <expr_stmt pos:start="135:21" pos:end="135:24"><expr pos:start="135:21" pos:end="135:23"><operator pos:start="135:21" pos:end="135:22">++</operator><name pos:start="135:23" pos:end="135:23">q</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="137:17" pos:end="139:32">else if <condition pos:start="137:25" pos:end="137:47">(<expr pos:start="137:26" pos:end="137:46"><call pos:start="137:26" pos:end="137:46"><name pos:start="137:26" pos:end="137:31">strspn</name><argument_list pos:start="137:32" pos:end="137:46">(<argument pos:start="137:33" pos:end="137:33"><expr pos:start="137:33" pos:end="137:33"><name pos:start="137:33" pos:end="137:33">q</name></expr></argument>, <argument pos:start="137:36" pos:end="137:45"><expr pos:start="137:36" pos:end="137:45"><literal type="string" pos:start="137:36" pos:end="137:45">"\\*?[]{}"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:32"><block_content pos:start="139:21" pos:end="139:32">

                    <expr_stmt pos:start="139:21" pos:end="139:32"><expr pos:start="139:21" pos:end="139:31"><operator pos:start="139:21" pos:end="139:21">*</operator><name pos:start="139:22" pos:end="139:22">p</name><operator pos:start="139:23" pos:end="139:24">++</operator> <operator pos:start="139:26" pos:end="139:26">=</operator> <literal type="char" pos:start="139:28" pos:end="139:31">'\\'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:28"><expr pos:start="141:17" pos:end="141:27"><operator pos:start="141:17" pos:end="141:17">*</operator><name pos:start="141:18" pos:end="141:18">p</name><operator pos:start="141:19" pos:end="141:20">++</operator> <operator pos:start="141:22" pos:end="141:22">=</operator> <operator pos:start="141:24" pos:end="141:24">*</operator><name pos:start="141:25" pos:end="141:25">q</name><operator pos:start="141:26" pos:end="141:27">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="145:13" pos:end="145:19"><expr pos:start="145:13" pos:end="145:18"><operator pos:start="145:13" pos:end="145:13">*</operator><name pos:start="145:14" pos:end="145:14">p</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:25"><expr pos:start="147:13" pos:end="147:24"><call pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:19">av_free</name><argument_list pos:start="147:20" pos:end="147:24">(<argument pos:start="147:21" pos:end="147:23"><expr pos:start="147:21" pos:end="147:23"><name pos:start="147:21" pos:end="147:23">dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="151:13" pos:end="151:92"><expr pos:start="151:13" pos:end="151:91"><name pos:start="151:13" pos:end="151:16">gerr</name> <operator pos:start="151:18" pos:end="151:18">=</operator> <call pos:start="151:20" pos:end="151:91"><name pos:start="151:20" pos:end="151:23">glob</name><argument_list pos:start="151:24" pos:end="151:91">(<argument pos:start="151:25" pos:end="151:31"><expr pos:start="151:25" pos:end="151:31"><name pos:start="151:25" pos:end="151:31"><name pos:start="151:25" pos:end="151:25">s</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:31">path</name></name></expr></argument>, <argument pos:start="151:34" pos:end="151:69"><expr pos:start="151:34" pos:end="151:69"><name pos:start="151:34" pos:end="151:45">GLOB_NOCHECK</name><operator pos:start="151:46" pos:end="151:46">|</operator><name pos:start="151:47" pos:end="151:56">GLOB_BRACE</name><operator pos:start="151:57" pos:end="151:57">|</operator><name pos:start="151:58" pos:end="151:69">GLOB_NOMAGIC</name></expr></argument>, <argument pos:start="151:72" pos:end="151:75"><expr pos:start="151:72" pos:end="151:75"><name pos:start="151:72" pos:end="151:75">NULL</name></expr></argument>, <argument pos:start="151:78" pos:end="151:90"><expr pos:start="151:78" pos:end="151:90"><operator pos:start="151:78" pos:end="151:78">&amp;</operator><name pos:start="151:79" pos:end="151:90"><name pos:start="151:79" pos:end="151:79">s</name><operator pos:start="151:80" pos:end="151:81">-&gt;</operator><name pos:start="151:82" pos:end="151:90">globstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="157:13"><if pos:start="153:13" pos:end="157:13">if <condition pos:start="153:16" pos:end="153:26">(<expr pos:start="153:17" pos:end="153:25"><name pos:start="153:17" pos:end="153:20">gerr</name> <operator pos:start="153:22" pos:end="153:23">!=</operator> <literal type="number" pos:start="153:25" pos:end="153:25">0</literal></expr>)</condition> <block pos:start="153:28" pos:end="157:13">{<block_content pos:start="155:17" pos:end="155:39">

                <return pos:start="155:17" pos:end="155:39">return <expr pos:start="155:24" pos:end="155:38"><call pos:start="155:24" pos:end="155:38"><name pos:start="155:24" pos:end="155:30">AVERROR</name><argument_list pos:start="155:31" pos:end="155:38">(<argument pos:start="155:32" pos:end="155:37"><expr pos:start="155:32" pos:end="155:37"><name pos:start="155:32" pos:end="155:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:28"><expr pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:23">first_index</name> <operator pos:start="159:25" pos:end="159:25">=</operator> <literal type="number" pos:start="159:27" pos:end="159:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="164:0"><expr pos:start="161:13" pos:end="161:50"><name pos:start="161:13" pos:end="161:22">last_index</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <name pos:start="161:26" pos:end="161:46"><name pos:start="161:26" pos:end="161:26">s</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:37">globstate</name><operator pos:start="161:38" pos:end="161:38">.</operator><name pos:start="161:39" pos:end="161:46">gl_pathc</name></name> <operator pos:start="161:48" pos:end="161:48">-</operator> <literal type="number" pos:start="161:50" pos:end="161:50">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="225:9"><if pos:start="169:9" pos:end="185:9">if <condition pos:start="169:12" pos:end="169:100">(<expr pos:start="169:13" pos:end="169:99"><operator pos:start="169:13" pos:end="169:13">(</operator><name pos:start="169:14" pos:end="169:28"><name pos:start="169:14" pos:end="169:14">s</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:28">pattern_type</name></name> <operator pos:start="169:30" pos:end="169:31">==</operator> <name pos:start="169:33" pos:end="169:48">PT_GLOB_SEQUENCE</name> <operator pos:start="169:50" pos:end="169:51">&amp;&amp;</operator> <operator pos:start="169:53" pos:end="169:53">!</operator><name pos:start="169:54" pos:end="169:64"><name pos:start="169:54" pos:end="169:54">s</name><operator pos:start="169:55" pos:end="169:56">-&gt;</operator><name pos:start="169:57" pos:end="169:64">use_glob</name></name><operator pos:start="169:65" pos:end="169:65">)</operator> <operator pos:start="169:67" pos:end="169:68">||</operator> <name pos:start="169:70" pos:end="169:84"><name pos:start="169:70" pos:end="169:70">s</name><operator pos:start="169:71" pos:end="169:72">-&gt;</operator><name pos:start="169:73" pos:end="169:84">pattern_type</name></name> <operator pos:start="169:86" pos:end="169:87">==</operator> <name pos:start="169:89" pos:end="169:99">PT_SEQUENCE</name></expr>)</condition> <block pos:start="169:102" pos:end="185:9">{<block_content pos:start="171:13" pos:end="183:13">

            <if_stmt pos:start="171:13" pos:end="183:13"><if pos:start="171:13" pos:end="183:13">if <condition pos:start="171:16" pos:end="173:77">(<expr pos:start="171:17" pos:end="173:76"><call pos:start="171:17" pos:end="173:72"><name pos:start="171:17" pos:end="171:32">find_image_range</name><argument_list pos:start="171:33" pos:end="173:72">(<argument pos:start="171:34" pos:end="171:45"><expr pos:start="171:34" pos:end="171:45"><operator pos:start="171:34" pos:end="171:34">&amp;</operator><name pos:start="171:35" pos:end="171:45">first_index</name></expr></argument>, <argument pos:start="171:48" pos:end="171:58"><expr pos:start="171:48" pos:end="171:58"><operator pos:start="171:48" pos:end="171:48">&amp;</operator><name pos:start="171:49" pos:end="171:58">last_index</name></expr></argument>, <argument pos:start="171:61" pos:end="171:67"><expr pos:start="171:61" pos:end="171:67"><name pos:start="171:61" pos:end="171:67"><name pos:start="171:61" pos:end="171:61">s</name><operator pos:start="171:62" pos:end="171:63">-&gt;</operator><name pos:start="171:64" pos:end="171:67">path</name></name></expr></argument>,

                                 <argument pos:start="173:34" pos:end="173:48"><expr pos:start="173:34" pos:end="173:48"><name pos:start="173:34" pos:end="173:48"><name pos:start="173:34" pos:end="173:34">s</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:48">start_number</name></name></expr></argument>, <argument pos:start="173:51" pos:end="173:71"><expr pos:start="173:51" pos:end="173:71"><name pos:start="173:51" pos:end="173:71"><name pos:start="173:51" pos:end="173:51">s</name><operator pos:start="173:52" pos:end="173:53">-&gt;</operator><name pos:start="173:54" pos:end="173:71">start_number_range</name></name></expr></argument>)</argument_list></call> <operator pos:start="173:74" pos:end="173:74">&lt;</operator> <literal type="number" pos:start="173:76" pos:end="173:76">0</literal></expr>)</condition> <block pos:start="173:79" pos:end="183:13">{<block_content pos:start="175:17" pos:end="181:39">

                <expr_stmt pos:start="175:17" pos:end="179:94"><expr pos:start="175:17" pos:end="179:93"><call pos:start="175:17" pos:end="179:93"><name pos:start="175:17" pos:end="175:22">av_log</name><argument_list pos:start="175:23" pos:end="179:93">(<argument pos:start="175:24" pos:end="175:25"><expr pos:start="175:24" pos:end="175:25"><name pos:start="175:24" pos:end="175:25">s1</name></expr></argument>, <argument pos:start="175:28" pos:end="175:39"><expr pos:start="175:28" pos:end="175:39"><name pos:start="175:28" pos:end="175:39">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="177:24" pos:end="177:89"><expr pos:start="177:24" pos:end="177:89"><literal type="string" pos:start="177:24" pos:end="177:89">"Could find no file with path '%s' and index in the range %d-%d\n"</literal></expr></argument>,

                       <argument pos:start="179:24" pos:end="179:30"><expr pos:start="179:24" pos:end="179:30"><name pos:start="179:24" pos:end="179:30"><name pos:start="179:24" pos:end="179:24">s</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:30">path</name></name></expr></argument>, <argument pos:start="179:33" pos:end="179:47"><expr pos:start="179:33" pos:end="179:47"><name pos:start="179:33" pos:end="179:47"><name pos:start="179:33" pos:end="179:33">s</name><operator pos:start="179:34" pos:end="179:35">-&gt;</operator><name pos:start="179:36" pos:end="179:47">start_number</name></name></expr></argument>, <argument pos:start="179:50" pos:end="179:92"><expr pos:start="179:50" pos:end="179:92"><name pos:start="179:50" pos:end="179:64"><name pos:start="179:50" pos:end="179:50">s</name><operator pos:start="179:51" pos:end="179:52">-&gt;</operator><name pos:start="179:53" pos:end="179:64">start_number</name></name> <operator pos:start="179:66" pos:end="179:66">+</operator> <name pos:start="179:68" pos:end="179:88"><name pos:start="179:68" pos:end="179:68">s</name><operator pos:start="179:69" pos:end="179:70">-&gt;</operator><name pos:start="179:71" pos:end="179:88">start_number_range</name></name> <operator pos:start="179:90" pos:end="179:90">-</operator> <literal type="number" pos:start="179:92" pos:end="179:92">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="181:17" pos:end="181:39">return <expr pos:start="181:24" pos:end="181:38"><call pos:start="181:24" pos:end="181:38"><name pos:start="181:24" pos:end="181:30">AVERROR</name><argument_list pos:start="181:31" pos:end="181:38">(<argument pos:start="181:32" pos:end="181:37"><expr pos:start="181:32" pos:end="181:37"><name pos:start="181:32" pos:end="181:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="185:11" pos:end="217:9">else if <condition pos:start="185:19" pos:end="185:46">(<expr pos:start="185:20" pos:end="185:45"><name pos:start="185:20" pos:end="185:34"><name pos:start="185:20" pos:end="185:20">s</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:34">pattern_type</name></name> <operator pos:start="185:36" pos:end="185:37">==</operator> <name pos:start="185:39" pos:end="185:45">PT_GLOB</name></expr>)</condition> <block pos:start="185:48" pos:end="217:9">{<block_content pos:start="189:13" pos:end="216:0">

<cpp:if pos:start="187:1" pos:end="187:13">#<cpp:directive pos:start="187:2" pos:end="187:3">if</cpp:directive> <expr pos:start="187:5" pos:end="187:13"><name pos:start="187:5" pos:end="187:13">HAVE_GLOB</name></expr></cpp:if>

            <decl_stmt pos:start="189:13" pos:end="189:21"><decl pos:start="189:13" pos:end="189:20"><type pos:start="189:13" pos:end="189:15"><name pos:start="189:13" pos:end="189:15">int</name></type> <name pos:start="189:17" pos:end="189:20">gerr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:92"><expr pos:start="191:13" pos:end="191:91"><name pos:start="191:13" pos:end="191:16">gerr</name> <operator pos:start="191:18" pos:end="191:18">=</operator> <call pos:start="191:20" pos:end="191:91"><name pos:start="191:20" pos:end="191:23">glob</name><argument_list pos:start="191:24" pos:end="191:91">(<argument pos:start="191:25" pos:end="191:31"><expr pos:start="191:25" pos:end="191:31"><name pos:start="191:25" pos:end="191:31"><name pos:start="191:25" pos:end="191:25">s</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:31">path</name></name></expr></argument>, <argument pos:start="191:34" pos:end="191:69"><expr pos:start="191:34" pos:end="191:69"><name pos:start="191:34" pos:end="191:45">GLOB_NOCHECK</name><operator pos:start="191:46" pos:end="191:46">|</operator><name pos:start="191:47" pos:end="191:56">GLOB_BRACE</name><operator pos:start="191:57" pos:end="191:57">|</operator><name pos:start="191:58" pos:end="191:69">GLOB_NOMAGIC</name></expr></argument>, <argument pos:start="191:72" pos:end="191:75"><expr pos:start="191:72" pos:end="191:75"><name pos:start="191:72" pos:end="191:75">NULL</name></expr></argument>, <argument pos:start="191:78" pos:end="191:90"><expr pos:start="191:78" pos:end="191:90"><operator pos:start="191:78" pos:end="191:78">&amp;</operator><name pos:start="191:79" pos:end="191:90"><name pos:start="191:79" pos:end="191:79">s</name><operator pos:start="191:80" pos:end="191:81">-&gt;</operator><name pos:start="191:82" pos:end="191:90">globstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="193:13" pos:end="197:13"><if pos:start="193:13" pos:end="197:13">if <condition pos:start="193:16" pos:end="193:26">(<expr pos:start="193:17" pos:end="193:25"><name pos:start="193:17" pos:end="193:20">gerr</name> <operator pos:start="193:22" pos:end="193:23">!=</operator> <literal type="number" pos:start="193:25" pos:end="193:25">0</literal></expr>)</condition> <block pos:start="193:28" pos:end="197:13">{<block_content pos:start="195:17" pos:end="195:39">

                <return pos:start="195:17" pos:end="195:39">return <expr pos:start="195:24" pos:end="195:38"><call pos:start="195:24" pos:end="195:38"><name pos:start="195:24" pos:end="195:30">AVERROR</name><argument_list pos:start="195:31" pos:end="195:38">(<argument pos:start="195:32" pos:end="195:37"><expr pos:start="195:32" pos:end="195:37"><name pos:start="195:32" pos:end="195:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:28"><expr pos:start="199:13" pos:end="199:27"><name pos:start="199:13" pos:end="199:23">first_index</name> <operator pos:start="199:25" pos:end="199:25">=</operator> <literal type="number" pos:start="199:27" pos:end="199:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:51"><expr pos:start="201:13" pos:end="201:50"><name pos:start="201:13" pos:end="201:22">last_index</name> <operator pos:start="201:24" pos:end="201:24">=</operator> <name pos:start="201:26" pos:end="201:46"><name pos:start="201:26" pos:end="201:26">s</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:37">globstate</name><operator pos:start="201:38" pos:end="201:38">.</operator><name pos:start="201:39" pos:end="201:46">gl_pathc</name></name> <operator pos:start="201:48" pos:end="201:48">-</operator> <literal type="number" pos:start="201:50" pos:end="201:50">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="206:0"><expr pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:23"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:23">use_glob</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <literal type="number" pos:start="203:27" pos:end="203:27">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="205:1" pos:end="205:5">#<cpp:directive pos:start="205:2" pos:end="205:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="207:13" pos:end="211:67"><expr pos:start="207:13" pos:end="211:66"><call pos:start="207:13" pos:end="211:66"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="211:66">(<argument pos:start="207:20" pos:end="207:21"><expr pos:start="207:20" pos:end="207:21"><name pos:start="207:20" pos:end="207:21">s1</name></expr></argument>, <argument pos:start="207:24" pos:end="207:35"><expr pos:start="207:24" pos:end="207:35"><name pos:start="207:24" pos:end="207:35">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="209:20" pos:end="211:65"><expr pos:start="209:20" pos:end="211:65"><literal type="string" pos:start="209:20" pos:end="209:67">"Pattern type 'glob' was selected but globbing "</literal>

                   <literal type="string" pos:start="211:20" pos:end="211:65">"is not supported by this libavformat build\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="213:13" pos:end="216:0">return <expr pos:start="213:20" pos:end="213:34"><call pos:start="213:20" pos:end="213:34"><name pos:start="213:20" pos:end="213:26">AVERROR</name><argument_list pos:start="213:27" pos:end="213:34">(<argument pos:start="213:28" pos:end="213:33"><expr pos:start="213:28" pos:end="213:33"><name pos:start="213:28" pos:end="213:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="215:1" pos:end="215:6">#<cpp:directive pos:start="215:2" pos:end="215:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <if type="elseif" pos:start="217:11" pos:end="225:9">else if <condition pos:start="217:19" pos:end="217:85">(<expr pos:start="217:20" pos:end="217:84"><name pos:start="217:20" pos:end="217:34"><name pos:start="217:20" pos:end="217:20">s</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:34">pattern_type</name></name> <operator pos:start="217:36" pos:end="217:37">!=</operator> <name pos:start="217:39" pos:end="217:54">PT_GLOB_SEQUENCE</name> <operator pos:start="217:56" pos:end="217:57">&amp;&amp;</operator> <name pos:start="217:59" pos:end="217:73"><name pos:start="217:59" pos:end="217:59">s</name><operator pos:start="217:60" pos:end="217:61">-&gt;</operator><name pos:start="217:62" pos:end="217:73">pattern_type</name></name> <operator pos:start="217:75" pos:end="217:76">!=</operator> <name pos:start="217:78" pos:end="217:84">PT_NONE</name></expr>)</condition> <block pos:start="217:87" pos:end="225:9">{<block_content pos:start="219:13" pos:end="223:35">

            <expr_stmt pos:start="219:13" pos:end="221:84"><expr pos:start="219:13" pos:end="221:83"><call pos:start="219:13" pos:end="221:83"><name pos:start="219:13" pos:end="219:18">av_log</name><argument_list pos:start="219:19" pos:end="221:83">(<argument pos:start="219:20" pos:end="219:21"><expr pos:start="219:20" pos:end="219:21"><name pos:start="219:20" pos:end="219:21">s1</name></expr></argument>, <argument pos:start="219:24" pos:end="219:35"><expr pos:start="219:24" pos:end="219:35"><name pos:start="219:24" pos:end="219:35">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="221:20" pos:end="221:65"><expr pos:start="221:20" pos:end="221:65"><literal type="string" pos:start="221:20" pos:end="221:65">"Unknown value '%d' for pattern_type option\n"</literal></expr></argument>, <argument pos:start="221:68" pos:end="221:82"><expr pos:start="221:68" pos:end="221:82"><name pos:start="221:68" pos:end="221:82"><name pos:start="221:68" pos:end="221:68">s</name><operator pos:start="221:69" pos:end="221:70">-&gt;</operator><name pos:start="221:71" pos:end="221:82">pattern_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="223:13" pos:end="223:35">return <expr pos:start="223:20" pos:end="223:34"><call pos:start="223:20" pos:end="223:34"><name pos:start="223:20" pos:end="223:26">AVERROR</name><argument_list pos:start="223:27" pos:end="223:34">(<argument pos:start="223:28" pos:end="223:33"><expr pos:start="223:28" pos:end="223:33"><name pos:start="223:28" pos:end="223:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:36"><expr pos:start="227:9" pos:end="227:35"><name pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:20">img_first</name></name>  <operator pos:start="227:23" pos:end="227:23">=</operator> <name pos:start="227:25" pos:end="227:35">first_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:35"><expr pos:start="229:9" pos:end="229:34"><name pos:start="229:9" pos:end="229:19"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:19">img_last</name></name>   <operator pos:start="229:23" pos:end="229:23">=</operator> <name pos:start="229:25" pos:end="229:34">last_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:36"><expr pos:start="231:9" pos:end="231:35"><name pos:start="231:9" pos:end="231:21"><name pos:start="231:9" pos:end="231:9">s</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:21">img_number</name></name> <operator pos:start="231:23" pos:end="231:23">=</operator> <name pos:start="231:25" pos:end="231:35">first_index</name></expr>;</expr_stmt>

        <comment type="block" pos:start="233:9" pos:end="233:30">/* compute duration */</comment>

        <if_stmt pos:start="235:9" pos:end="241:9"><if pos:start="235:9" pos:end="241:9">if <condition pos:start="235:12" pos:end="235:29">(<expr pos:start="235:13" pos:end="235:28"><operator pos:start="235:13" pos:end="235:13">!</operator><name pos:start="235:14" pos:end="235:28"><name pos:start="235:14" pos:end="235:14">s</name><operator pos:start="235:15" pos:end="235:16">-&gt;</operator><name pos:start="235:17" pos:end="235:28">ts_from_file</name></name></expr>)</condition> <block pos:start="235:31" pos:end="241:9">{<block_content pos:start="237:13" pos:end="239:58">

            <expr_stmt pos:start="237:13" pos:end="237:31"><expr pos:start="237:13" pos:end="237:30"><name pos:start="237:13" pos:end="237:26"><name pos:start="237:13" pos:end="237:14">st</name><operator pos:start="237:15" pos:end="237:16">-&gt;</operator><name pos:start="237:17" pos:end="237:26">start_time</name></name> <operator pos:start="237:28" pos:end="237:28">=</operator> <literal type="number" pos:start="237:30" pos:end="237:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:58"><expr pos:start="239:13" pos:end="239:57"><name pos:start="239:13" pos:end="239:24"><name pos:start="239:13" pos:end="239:14">st</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:24">duration</name></name>   <operator pos:start="239:28" pos:end="239:28">=</operator> <name pos:start="239:30" pos:end="239:39">last_index</name> <operator pos:start="239:41" pos:end="239:41">-</operator> <name pos:start="239:43" pos:end="239:53">first_index</name> <operator pos:start="239:55" pos:end="239:55">+</operator> <literal type="number" pos:start="239:57" pos:end="239:57">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="247:5" pos:end="357:5"><if pos:start="247:5" pos:end="253:5">if <condition pos:start="247:8" pos:end="247:27">(<expr pos:start="247:9" pos:end="247:26"><name pos:start="247:9" pos:end="247:26"><name pos:start="247:9" pos:end="247:10">s1</name><operator pos:start="247:11" pos:end="247:12">-&gt;</operator><name pos:start="247:13" pos:end="247:26">video_codec_id</name></name></expr>)</condition> <block pos:start="247:29" pos:end="253:5">{<block_content pos:start="249:9" pos:end="251:51">

        <expr_stmt pos:start="249:9" pos:end="249:51"><expr pos:start="249:9" pos:end="249:50"><name pos:start="249:9" pos:end="249:29"><name pos:start="249:9" pos:end="249:10">st</name><operator pos:start="249:11" pos:end="249:12">-&gt;</operator><name pos:start="249:13" pos:end="249:17">codec</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:29">codec_type</name></name> <operator pos:start="249:31" pos:end="249:31">=</operator> <name pos:start="249:33" pos:end="249:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:51"><expr pos:start="251:9" pos:end="251:50"><name pos:start="251:9" pos:end="251:27"><name pos:start="251:9" pos:end="251:10">st</name><operator pos:start="251:11" pos:end="251:12">-&gt;</operator><name pos:start="251:13" pos:end="251:17">codec</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:27">codec_id</name></name>   <operator pos:start="251:31" pos:end="251:31">=</operator> <name pos:start="251:33" pos:end="251:50"><name pos:start="251:33" pos:end="251:34">s1</name><operator pos:start="251:35" pos:end="251:36">-&gt;</operator><name pos:start="251:37" pos:end="251:50">video_codec_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="253:7" pos:end="259:5">else if <condition pos:start="253:15" pos:end="253:34">(<expr pos:start="253:16" pos:end="253:33"><name pos:start="253:16" pos:end="253:33"><name pos:start="253:16" pos:end="253:17">s1</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:33">audio_codec_id</name></name></expr>)</condition> <block pos:start="253:36" pos:end="259:5">{<block_content pos:start="255:9" pos:end="257:51">

        <expr_stmt pos:start="255:9" pos:end="255:51"><expr pos:start="255:9" pos:end="255:50"><name pos:start="255:9" pos:end="255:29"><name pos:start="255:9" pos:end="255:10">st</name><operator pos:start="255:11" pos:end="255:12">-&gt;</operator><name pos:start="255:13" pos:end="255:17">codec</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:29">codec_type</name></name> <operator pos:start="255:31" pos:end="255:31">=</operator> <name pos:start="255:33" pos:end="255:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:51"><expr pos:start="257:9" pos:end="257:50"><name pos:start="257:9" pos:end="257:27"><name pos:start="257:9" pos:end="257:10">st</name><operator pos:start="257:11" pos:end="257:12">-&gt;</operator><name pos:start="257:13" pos:end="257:17">codec</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:27">codec_id</name></name>   <operator pos:start="257:31" pos:end="257:31">=</operator> <name pos:start="257:33" pos:end="257:50"><name pos:start="257:33" pos:end="257:34">s1</name><operator pos:start="257:35" pos:end="257:36">-&gt;</operator><name pos:start="257:37" pos:end="257:50">audio_codec_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="259:7" pos:end="265:5">else if <condition pos:start="259:15" pos:end="259:41">(<expr pos:start="259:16" pos:end="259:40"><name pos:start="259:16" pos:end="259:40"><name pos:start="259:16" pos:end="259:17">s1</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:26">iformat</name><operator pos:start="259:27" pos:end="259:28">-&gt;</operator><name pos:start="259:29" pos:end="259:40">raw_codec_id</name></name></expr>)</condition> <block pos:start="259:43" pos:end="265:5">{<block_content pos:start="261:9" pos:end="263:58">

        <expr_stmt pos:start="261:9" pos:end="261:51"><expr pos:start="261:9" pos:end="261:50"><name pos:start="261:9" pos:end="261:29"><name pos:start="261:9" pos:end="261:10">st</name><operator pos:start="261:11" pos:end="261:12">-&gt;</operator><name pos:start="261:13" pos:end="261:17">codec</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:29">codec_type</name></name> <operator pos:start="261:31" pos:end="261:31">=</operator> <name pos:start="261:33" pos:end="261:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:58"><expr pos:start="263:9" pos:end="263:57"><name pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:10">st</name><operator pos:start="263:11" pos:end="263:12">-&gt;</operator><name pos:start="263:13" pos:end="263:17">codec</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:27">codec_id</name></name>   <operator pos:start="263:31" pos:end="263:31">=</operator> <name pos:start="263:33" pos:end="263:57"><name pos:start="263:33" pos:end="263:34">s1</name><operator pos:start="263:35" pos:end="263:36">-&gt;</operator><name pos:start="263:37" pos:end="263:43">iformat</name><operator pos:start="263:44" pos:end="263:45">-&gt;</operator><name pos:start="263:46" pos:end="263:57">raw_codec_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="357:5">else <block pos:start="265:12" pos:end="357:5">{<block_content pos:start="267:9" pos:end="355:51">

        <decl_stmt pos:start="267:9" pos:end="267:48"><decl pos:start="267:9" pos:end="267:47"><type pos:start="267:9" pos:end="267:20"><specifier pos:start="267:9" pos:end="267:13">const</specifier> <name pos:start="267:15" pos:end="267:18">char</name> <modifier pos:start="267:20" pos:end="267:20">*</modifier></type><name pos:start="267:21" pos:end="267:23">str</name> <init pos:start="267:25" pos:end="267:47">= <expr pos:start="267:27" pos:end="267:47"><call pos:start="267:27" pos:end="267:47"><name pos:start="267:27" pos:end="267:33">strrchr</name><argument_list pos:start="267:34" pos:end="267:47">(<argument pos:start="267:35" pos:end="267:41"><expr pos:start="267:35" pos:end="267:41"><name pos:start="267:35" pos:end="267:41"><name pos:start="267:35" pos:end="267:35">s</name><operator pos:start="267:36" pos:end="267:37">-&gt;</operator><name pos:start="267:38" pos:end="267:41">path</name></name></expr></argument>, <argument pos:start="267:44" pos:end="267:46"><expr pos:start="267:44" pos:end="267:46"><literal type="char" pos:start="267:44" pos:end="267:46">'.'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:68"><expr pos:start="269:9" pos:end="269:67"><name pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:23">split_planes</name></name>       <operator pos:start="269:31" pos:end="269:31">=</operator> <name pos:start="269:33" pos:end="269:35">str</name> <operator pos:start="269:37" pos:end="269:38">&amp;&amp;</operator> <operator pos:start="269:40" pos:end="269:40">!</operator><call pos:start="269:41" pos:end="269:67"><name pos:start="269:41" pos:end="269:53">av_strcasecmp</name><argument_list pos:start="269:54" pos:end="269:67">(<argument pos:start="269:55" pos:end="269:61"><expr pos:start="269:55" pos:end="269:61"><name pos:start="269:55" pos:end="269:57">str</name> <operator pos:start="269:59" pos:end="269:59">+</operator> <literal type="number" pos:start="269:61" pos:end="269:61">1</literal></expr></argument>, <argument pos:start="269:64" pos:end="269:66"><expr pos:start="269:64" pos:end="269:66"><literal type="string" pos:start="269:64" pos:end="269:66">"y"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:51"><expr pos:start="271:9" pos:end="271:50"><name pos:start="271:9" pos:end="271:29"><name pos:start="271:9" pos:end="271:10">st</name><operator pos:start="271:11" pos:end="271:12">-&gt;</operator><name pos:start="271:13" pos:end="271:17">codec</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:29">codec_type</name></name> <operator pos:start="271:31" pos:end="271:31">=</operator> <name pos:start="271:33" pos:end="271:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <if_stmt pos:start="273:9" pos:end="343:9"><if pos:start="273:9" pos:end="343:9">if <condition pos:start="273:12" pos:end="273:19">(<expr pos:start="273:13" pos:end="273:18"><name pos:start="273:13" pos:end="273:18"><name pos:start="273:13" pos:end="273:14">s1</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:18">pb</name></name></expr>)</condition> <block pos:start="273:21" pos:end="343:9">{<block_content pos:start="275:13" pos:end="341:86">

            <decl_stmt pos:start="275:13" pos:end="275:41"><decl pos:start="275:13" pos:end="275:40"><type pos:start="275:13" pos:end="275:15"><name pos:start="275:13" pos:end="275:15">int</name></type> <name pos:start="275:17" pos:end="275:33">probe_buffer_size</name> <init pos:start="275:35" pos:end="275:40">= <expr pos:start="275:37" pos:end="275:40"><literal type="number" pos:start="275:37" pos:end="275:40">2048</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="277:13" pos:end="277:95"><decl pos:start="277:13" pos:end="277:94"><type pos:start="277:13" pos:end="277:21"><name pos:start="277:13" pos:end="277:19">uint8_t</name> <modifier pos:start="277:21" pos:end="277:21">*</modifier></type><name pos:start="277:22" pos:end="277:33">probe_buffer</name> <init pos:start="277:35" pos:end="277:94">= <expr pos:start="277:37" pos:end="277:94"><call pos:start="277:37" pos:end="277:94"><name pos:start="277:37" pos:end="277:46">av_realloc</name><argument_list pos:start="277:47" pos:end="277:94">(<argument pos:start="277:48" pos:end="277:51"><expr pos:start="277:48" pos:end="277:51"><name pos:start="277:48" pos:end="277:51">NULL</name></expr></argument>, <argument pos:start="277:54" pos:end="277:93"><expr pos:start="277:54" pos:end="277:93"><name pos:start="277:54" pos:end="277:70">probe_buffer_size</name> <operator pos:start="277:72" pos:end="277:72">+</operator> <name pos:start="277:74" pos:end="277:93">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="279:13" pos:end="279:38"><decl pos:start="279:13" pos:end="279:37"><type pos:start="279:13" pos:end="279:27"><name pos:start="279:13" pos:end="279:25">AVInputFormat</name> <modifier pos:start="279:27" pos:end="279:27">*</modifier></type><name pos:start="279:28" pos:end="279:30">fmt</name> <init pos:start="279:32" pos:end="279:37">= <expr pos:start="279:34" pos:end="279:37"><name pos:start="279:34" pos:end="279:37">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="281:13" pos:end="281:35"><decl pos:start="281:13" pos:end="281:34"><type pos:start="281:13" pos:end="281:23"><name pos:start="281:13" pos:end="281:23">AVProbeData</name></type> <name pos:start="281:25" pos:end="281:26">pd</name> <init pos:start="281:28" pos:end="281:34">= <expr pos:start="281:30" pos:end="281:34"><block pos:start="281:30" pos:end="281:34">{ <expr pos:start="281:32" pos:end="281:32"><literal type="number" pos:start="281:32" pos:end="281:32">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="285:13" pos:end="287:39"><if pos:start="285:13" pos:end="287:39">if <condition pos:start="285:16" pos:end="285:30">(<expr pos:start="285:17" pos:end="285:29"><operator pos:start="285:17" pos:end="285:17">!</operator><name pos:start="285:18" pos:end="285:29">probe_buffer</name></expr>)</condition><block type="pseudo" pos:start="287:17" pos:end="287:39"><block_content pos:start="287:17" pos:end="287:39">

                <return pos:start="287:17" pos:end="287:39">return <expr pos:start="287:24" pos:end="287:38"><call pos:start="287:24" pos:end="287:38"><name pos:start="287:24" pos:end="287:30">AVERROR</name><argument_list pos:start="287:31" pos:end="287:38">(<argument pos:start="287:32" pos:end="287:37"><expr pos:start="287:32" pos:end="287:37"><name pos:start="287:32" pos:end="287:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="291:13" pos:end="291:83"><expr pos:start="291:13" pos:end="291:82"><name pos:start="291:13" pos:end="291:29">probe_buffer_size</name> <operator pos:start="291:31" pos:end="291:31">=</operator> <call pos:start="291:33" pos:end="291:82"><name pos:start="291:33" pos:end="291:41">avio_read</name><argument_list pos:start="291:42" pos:end="291:82">(<argument pos:start="291:43" pos:end="291:48"><expr pos:start="291:43" pos:end="291:48"><name pos:start="291:43" pos:end="291:48"><name pos:start="291:43" pos:end="291:44">s1</name><operator pos:start="291:45" pos:end="291:46">-&gt;</operator><name pos:start="291:47" pos:end="291:48">pb</name></name></expr></argument>, <argument pos:start="291:51" pos:end="291:62"><expr pos:start="291:51" pos:end="291:62"><name pos:start="291:51" pos:end="291:62">probe_buffer</name></expr></argument>, <argument pos:start="291:65" pos:end="291:81"><expr pos:start="291:65" pos:end="291:81"><name pos:start="291:65" pos:end="291:81">probe_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="299:13"><if pos:start="293:13" pos:end="299:13">if <condition pos:start="293:16" pos:end="293:38">(<expr pos:start="293:17" pos:end="293:37"><name pos:start="293:17" pos:end="293:33">probe_buffer_size</name> <operator pos:start="293:35" pos:end="293:35">&lt;</operator> <literal type="number" pos:start="293:37" pos:end="293:37">0</literal></expr>)</condition> <block pos:start="293:40" pos:end="299:13">{<block_content pos:start="295:17" pos:end="297:41">

                <expr_stmt pos:start="295:17" pos:end="295:38"><expr pos:start="295:17" pos:end="295:37"><call pos:start="295:17" pos:end="295:37"><name pos:start="295:17" pos:end="295:23">av_free</name><argument_list pos:start="295:24" pos:end="295:37">(<argument pos:start="295:25" pos:end="295:36"><expr pos:start="295:25" pos:end="295:36"><name pos:start="295:25" pos:end="295:36">probe_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="297:17" pos:end="297:41">return <expr pos:start="297:24" pos:end="297:40"><name pos:start="297:24" pos:end="297:40">probe_buffer_size</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:78"><expr pos:start="301:13" pos:end="301:77"><call pos:start="301:13" pos:end="301:77"><name pos:start="301:13" pos:end="301:18">memset</name><argument_list pos:start="301:19" pos:end="301:77">(<argument pos:start="301:20" pos:end="301:51"><expr pos:start="301:20" pos:end="301:51"><name pos:start="301:20" pos:end="301:31">probe_buffer</name> <operator pos:start="301:33" pos:end="301:33">+</operator> <name pos:start="301:35" pos:end="301:51">probe_buffer_size</name></expr></argument>, <argument pos:start="301:54" pos:end="301:54"><expr pos:start="301:54" pos:end="301:54"><literal type="number" pos:start="301:54" pos:end="301:54">0</literal></expr></argument>, <argument pos:start="301:57" pos:end="301:76"><expr pos:start="301:57" pos:end="301:76"><name pos:start="301:57" pos:end="301:76">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="305:13" pos:end="305:34"><expr pos:start="305:13" pos:end="305:33"><name pos:start="305:13" pos:end="305:18"><name pos:start="305:13" pos:end="305:14">pd</name><operator pos:start="305:15" pos:end="305:15">.</operator><name pos:start="305:16" pos:end="305:18">buf</name></name> <operator pos:start="305:20" pos:end="305:20">=</operator> <name pos:start="305:22" pos:end="305:33">probe_buffer</name></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:44"><expr pos:start="307:13" pos:end="307:43"><name pos:start="307:13" pos:end="307:23"><name pos:start="307:13" pos:end="307:14">pd</name><operator pos:start="307:15" pos:end="307:15">.</operator><name pos:start="307:16" pos:end="307:23">buf_size</name></name> <operator pos:start="307:25" pos:end="307:25">=</operator> <name pos:start="307:27" pos:end="307:43">probe_buffer_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:39"><expr pos:start="309:13" pos:end="309:38"><name pos:start="309:13" pos:end="309:23"><name pos:start="309:13" pos:end="309:14">pd</name><operator pos:start="309:15" pos:end="309:15">.</operator><name pos:start="309:16" pos:end="309:23">filename</name></name> <operator pos:start="309:25" pos:end="309:25">=</operator> <name pos:start="309:27" pos:end="309:38"><name pos:start="309:27" pos:end="309:28">s1</name><operator pos:start="309:29" pos:end="309:30">-&gt;</operator><name pos:start="309:31" pos:end="309:38">filename</name></name></expr>;</expr_stmt>



            <while pos:start="313:13" pos:end="333:13">while <condition pos:start="313:19" pos:end="313:48">(<expr pos:start="313:20" pos:end="313:47"><operator pos:start="313:20" pos:end="313:20">(</operator><name pos:start="313:21" pos:end="313:23">fmt</name> <operator pos:start="313:25" pos:end="313:25">=</operator> <call pos:start="313:27" pos:end="313:46"><name pos:start="313:27" pos:end="313:41">av_iformat_next</name><argument_list pos:start="313:42" pos:end="313:46">(<argument pos:start="313:43" pos:end="313:45"><expr pos:start="313:43" pos:end="313:45"><name pos:start="313:43" pos:end="313:45">fmt</name></expr></argument>)</argument_list></call><operator pos:start="313:47" pos:end="313:47">)</operator></expr>)</condition> <block pos:start="313:50" pos:end="333:13">{<block_content pos:start="315:17" pos:end="331:17">

                <if_stmt pos:start="315:17" pos:end="323:29"><if pos:start="315:17" pos:end="323:29">if <condition pos:start="315:20" pos:end="321:39">(<expr pos:start="315:21" pos:end="321:38"><name pos:start="315:21" pos:end="315:36"><name pos:start="315:21" pos:end="315:23">fmt</name><operator pos:start="315:24" pos:end="315:25">-&gt;</operator><name pos:start="315:26" pos:end="315:36">read_header</name></name> <operator pos:start="315:38" pos:end="315:39">!=</operator> <name pos:start="315:41" pos:end="315:58">ff_img_read_header</name> <operator pos:start="315:60" pos:end="315:61">||</operator>

                    <operator pos:start="317:21" pos:end="317:21">!</operator><name pos:start="317:22" pos:end="317:36"><name pos:start="317:22" pos:end="317:24">fmt</name><operator pos:start="317:25" pos:end="317:26">-&gt;</operator><name pos:start="317:27" pos:end="317:36">read_probe</name></name> <operator pos:start="317:38" pos:end="317:39">||</operator>

                    <operator pos:start="319:21" pos:end="319:21">(</operator><name pos:start="319:22" pos:end="319:31"><name pos:start="319:22" pos:end="319:24">fmt</name><operator pos:start="319:25" pos:end="319:26">-&gt;</operator><name pos:start="319:27" pos:end="319:31">flags</name></name> <operator pos:start="319:33" pos:end="319:33">&amp;</operator> <name pos:start="319:35" pos:end="319:46">AVFMT_NOFILE</name><operator pos:start="319:47" pos:end="319:47">)</operator> <operator pos:start="319:49" pos:end="319:50">||</operator>

                    <operator pos:start="321:21" pos:end="321:21">!</operator><name pos:start="321:22" pos:end="321:38"><name pos:start="321:22" pos:end="321:24">fmt</name><operator pos:start="321:25" pos:end="321:26">-&gt;</operator><name pos:start="321:27" pos:end="321:38">raw_codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="323:21" pos:end="323:29"><block_content pos:start="323:21" pos:end="323:29">

                    <continue pos:start="323:21" pos:end="323:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="325:17" pos:end="331:17"><if pos:start="325:17" pos:end="331:17">if <condition pos:start="325:20" pos:end="325:45">(<expr pos:start="325:21" pos:end="325:44"><call pos:start="325:21" pos:end="325:40"><name pos:start="325:21" pos:end="325:35"><name pos:start="325:21" pos:end="325:23">fmt</name><operator pos:start="325:24" pos:end="325:25">-&gt;</operator><name pos:start="325:26" pos:end="325:35">read_probe</name></name><argument_list pos:start="325:36" pos:end="325:40">(<argument pos:start="325:37" pos:end="325:39"><expr pos:start="325:37" pos:end="325:39"><operator pos:start="325:37" pos:end="325:37">&amp;</operator><name pos:start="325:38" pos:end="325:39">pd</name></expr></argument>)</argument_list></call> <operator pos:start="325:42" pos:end="325:42">&gt;</operator> <literal type="number" pos:start="325:44" pos:end="325:44">0</literal></expr>)</condition> <block pos:start="325:47" pos:end="331:17">{<block_content pos:start="327:21" pos:end="329:26">

                    <expr_stmt pos:start="327:21" pos:end="327:60"><expr pos:start="327:21" pos:end="327:59"><name pos:start="327:21" pos:end="327:39"><name pos:start="327:21" pos:end="327:22">st</name><operator pos:start="327:23" pos:end="327:24">-&gt;</operator><name pos:start="327:25" pos:end="327:29">codec</name><operator pos:start="327:30" pos:end="327:31">-&gt;</operator><name pos:start="327:32" pos:end="327:39">codec_id</name></name> <operator pos:start="327:41" pos:end="327:41">=</operator> <name pos:start="327:43" pos:end="327:59"><name pos:start="327:43" pos:end="327:45">fmt</name><operator pos:start="327:46" pos:end="327:47">-&gt;</operator><name pos:start="327:48" pos:end="327:59">raw_codec_id</name></name></expr>;</expr_stmt>

                    <break pos:start="329:21" pos:end="329:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <if_stmt pos:start="335:13" pos:end="341:86"><if pos:start="335:13" pos:end="339:13">if <condition pos:start="335:16" pos:end="335:49">(<expr pos:start="335:17" pos:end="335:48"><name pos:start="335:17" pos:end="335:25"><name pos:start="335:17" pos:end="335:18">s1</name><operator pos:start="335:19" pos:end="335:20">-&gt;</operator><name pos:start="335:21" pos:end="335:25">flags</name></name> <operator pos:start="335:27" pos:end="335:27">&amp;</operator> <name pos:start="335:29" pos:end="335:48">AVFMT_FLAG_CUSTOM_IO</name></expr>)</condition> <block pos:start="335:51" pos:end="339:13">{<block_content pos:start="337:17" pos:end="337:47">

                <expr_stmt pos:start="337:17" pos:end="337:47"><expr pos:start="337:17" pos:end="337:46"><call pos:start="337:17" pos:end="337:46"><name pos:start="337:17" pos:end="337:25">avio_seek</name><argument_list pos:start="337:26" pos:end="337:46">(<argument pos:start="337:27" pos:end="337:32"><expr pos:start="337:27" pos:end="337:32"><name pos:start="337:27" pos:end="337:32"><name pos:start="337:27" pos:end="337:28">s1</name><operator pos:start="337:29" pos:end="337:30">-&gt;</operator><name pos:start="337:31" pos:end="337:32">pb</name></name></expr></argument>, <argument pos:start="337:35" pos:end="337:35"><expr pos:start="337:35" pos:end="337:35"><literal type="number" pos:start="337:35" pos:end="337:35">0</literal></expr></argument>, <argument pos:start="337:38" pos:end="337:45"><expr pos:start="337:38" pos:end="337:45"><name pos:start="337:38" pos:end="337:45">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="339:15" pos:end="341:86">else<block type="pseudo" pos:start="341:17" pos:end="341:86"><block_content pos:start="341:17" pos:end="341:86">

                <expr_stmt pos:start="341:17" pos:end="341:86"><expr pos:start="341:17" pos:end="341:85"><call pos:start="341:17" pos:end="341:85"><name pos:start="341:17" pos:end="341:43">ffio_rewind_with_probe_data</name><argument_list pos:start="341:44" pos:end="341:85">(<argument pos:start="341:45" pos:end="341:50"><expr pos:start="341:45" pos:end="341:50"><name pos:start="341:45" pos:end="341:50"><name pos:start="341:45" pos:end="341:46">s1</name><operator pos:start="341:47" pos:end="341:48">-&gt;</operator><name pos:start="341:49" pos:end="341:50">pb</name></name></expr></argument>, <argument pos:start="341:53" pos:end="341:65"><expr pos:start="341:53" pos:end="341:65"><operator pos:start="341:53" pos:end="341:53">&amp;</operator><name pos:start="341:54" pos:end="341:65">probe_buffer</name></expr></argument>, <argument pos:start="341:68" pos:end="341:84"><expr pos:start="341:68" pos:end="341:84"><name pos:start="341:68" pos:end="341:84">probe_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="345:9" pos:end="347:65"><if pos:start="345:9" pos:end="347:65">if <condition pos:start="345:12" pos:end="345:52">(<expr pos:start="345:13" pos:end="345:51"><name pos:start="345:13" pos:end="345:31"><name pos:start="345:13" pos:end="345:14">st</name><operator pos:start="345:15" pos:end="345:16">-&gt;</operator><name pos:start="345:17" pos:end="345:21">codec</name><operator pos:start="345:22" pos:end="345:23">-&gt;</operator><name pos:start="345:24" pos:end="345:31">codec_id</name></name> <operator pos:start="345:33" pos:end="345:34">==</operator> <name pos:start="345:36" pos:end="345:51">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="347:13" pos:end="347:65"><block_content pos:start="347:13" pos:end="347:65">

            <expr_stmt pos:start="347:13" pos:end="347:65"><expr pos:start="347:13" pos:end="347:64"><name pos:start="347:13" pos:end="347:31"><name pos:start="347:13" pos:end="347:14">st</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:21">codec</name><operator pos:start="347:22" pos:end="347:23">-&gt;</operator><name pos:start="347:24" pos:end="347:31">codec_id</name></name> <operator pos:start="347:33" pos:end="347:33">=</operator> <call pos:start="347:35" pos:end="347:64"><name pos:start="347:35" pos:end="347:55">ff_guess_image2_codec</name><argument_list pos:start="347:56" pos:end="347:64">(<argument pos:start="347:57" pos:end="347:63"><expr pos:start="347:57" pos:end="347:63"><name pos:start="347:57" pos:end="347:63"><name pos:start="347:57" pos:end="347:57">s</name><operator pos:start="347:58" pos:end="347:59">-&gt;</operator><name pos:start="347:60" pos:end="347:63">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="349:9" pos:end="351:52"><if pos:start="349:9" pos:end="351:52">if <condition pos:start="349:12" pos:end="349:53">(<expr pos:start="349:13" pos:end="349:52"><name pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:14">st</name><operator pos:start="349:15" pos:end="349:16">-&gt;</operator><name pos:start="349:17" pos:end="349:21">codec</name><operator pos:start="349:22" pos:end="349:23">-&gt;</operator><name pos:start="349:24" pos:end="349:31">codec_id</name></name> <operator pos:start="349:33" pos:end="349:34">==</operator> <name pos:start="349:36" pos:end="349:52">AV_CODEC_ID_LJPEG</name></expr>)</condition><block type="pseudo" pos:start="351:13" pos:end="351:52"><block_content pos:start="351:13" pos:end="351:52">

            <expr_stmt pos:start="351:13" pos:end="351:52"><expr pos:start="351:13" pos:end="351:51"><name pos:start="351:13" pos:end="351:31"><name pos:start="351:13" pos:end="351:14">st</name><operator pos:start="351:15" pos:end="351:16">-&gt;</operator><name pos:start="351:17" pos:end="351:21">codec</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:31">codec_id</name></name> <operator pos:start="351:33" pos:end="351:33">=</operator> <name pos:start="351:35" pos:end="351:51">AV_CODEC_ID_MJPEG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="353:9" pos:end="355:51"><if pos:start="353:9" pos:end="355:51">if <condition pos:start="353:12" pos:end="353:57">(<expr pos:start="353:13" pos:end="353:56"><name pos:start="353:13" pos:end="353:31"><name pos:start="353:13" pos:end="353:14">st</name><operator pos:start="353:15" pos:end="353:16">-&gt;</operator><name pos:start="353:17" pos:end="353:21">codec</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:31">codec_id</name></name> <operator pos:start="353:33" pos:end="353:34">==</operator> <name pos:start="353:36" pos:end="353:56">AV_CODEC_ID_ALIAS_PIX</name></expr>)</condition><block type="pseudo" pos:start="355:13" pos:end="355:51"><block_content pos:start="355:13" pos:end="355:51"> <comment type="line" pos:start="353:59" pos:end="353:104">// we cannot distingiush this from BRENDER_PIX</comment>

            <expr_stmt pos:start="355:13" pos:end="355:51"><expr pos:start="355:13" pos:end="355:50"><name pos:start="355:13" pos:end="355:31"><name pos:start="355:13" pos:end="355:14">st</name><operator pos:start="355:15" pos:end="355:16">-&gt;</operator><name pos:start="355:17" pos:end="355:21">codec</name><operator pos:start="355:22" pos:end="355:23">-&gt;</operator><name pos:start="355:24" pos:end="355:31">codec_id</name></name> <operator pos:start="355:33" pos:end="355:33">=</operator> <name pos:start="355:35" pos:end="355:50">AV_CODEC_ID_NONE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="359:5" pos:end="363:37"><if pos:start="359:5" pos:end="363:37">if <condition pos:start="359:8" pos:end="361:35">(<expr pos:start="359:9" pos:end="361:34"><name pos:start="359:9" pos:end="359:29"><name pos:start="359:9" pos:end="359:10">st</name><operator pos:start="359:11" pos:end="359:12">-&gt;</operator><name pos:start="359:13" pos:end="359:17">codec</name><operator pos:start="359:18" pos:end="359:19">-&gt;</operator><name pos:start="359:20" pos:end="359:29">codec_type</name></name> <operator pos:start="359:31" pos:end="359:32">==</operator> <name pos:start="359:34" pos:end="359:51">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="359:53" pos:end="359:54">&amp;&amp;</operator>

        <name pos:start="361:9" pos:end="361:15">pix_fmt</name> <operator pos:start="361:17" pos:end="361:18">!=</operator> <name pos:start="361:20" pos:end="361:34">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="363:9" pos:end="363:37"><block_content pos:start="363:9" pos:end="363:37">

        <expr_stmt pos:start="363:9" pos:end="363:37"><expr pos:start="363:9" pos:end="363:36"><name pos:start="363:9" pos:end="363:26"><name pos:start="363:9" pos:end="363:10">st</name><operator pos:start="363:11" pos:end="363:12">-&gt;</operator><name pos:start="363:13" pos:end="363:17">codec</name><operator pos:start="363:18" pos:end="363:19">-&gt;</operator><name pos:start="363:20" pos:end="363:26">pix_fmt</name></name> <operator pos:start="363:28" pos:end="363:28">=</operator> <name pos:start="363:30" pos:end="363:36">pix_fmt</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="367:5" pos:end="367:13">return <expr pos:start="367:12" pos:end="367:12"><literal type="number" pos:start="367:12" pos:end="367:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
