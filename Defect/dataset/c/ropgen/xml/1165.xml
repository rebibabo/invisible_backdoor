<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1165.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">mcf_fec_do_tx</name><parameter_list pos:start="1:26" pos:end="1:43">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:39">mcf_fec_state</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:28">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">mcf_fec_bd</name></type> <name pos:start="7:16" pos:end="7:17">bd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">frame_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:17">frame</name><index pos:start="13:18" pos:end="13:37">[<expr pos:start="13:19" pos:end="13:36"><name pos:start="13:19" pos:end="13:36">FEC_MAX_FRAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">ptr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><call pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="19:22">(<argument pos:start="19:13" pos:end="19:21"><expr pos:start="19:13" pos:end="19:21"><literal type="string" pos:start="19:13" pos:end="19:21">"do_tx\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:16"><expr pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:7">ptr</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:15">frame</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14">frame_size</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:8">addr</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <name pos:start="25:12" pos:end="25:27"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:27">tx_descriptor</name></name></expr>;</expr_stmt>

    <while pos:start="27:5" pos:end="95:5">while <condition pos:start="27:11" pos:end="27:13">(<expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">1</literal></expr>)</condition> <block pos:start="27:15" pos:end="95:5">{<block_content pos:start="29:9" pos:end="93:9">

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><call pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:23">mcf_fec_read_bd</name><argument_list pos:start="29:24" pos:end="29:34">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:27">bd</name></expr></argument>, <argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:52"><expr pos:start="31:9" pos:end="33:51"><call pos:start="31:9" pos:end="33:51"><name pos:start="31:9" pos:end="31:15">DPRINTF</name><argument_list pos:start="31:16" pos:end="33:51">(<argument pos:start="31:17" pos:end="31:56"><expr pos:start="31:17" pos:end="31:56"><literal type="string" pos:start="31:17" pos:end="31:56">"tx_bd %x flags %04x len %d data %08x\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">addr</name></expr></argument>, <argument pos:start="33:23" pos:end="33:30"><expr pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:24">bd</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:30">flags</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:41"><expr pos:start="33:33" pos:end="33:41"><name pos:start="33:33" pos:end="33:41"><name pos:start="33:33" pos:end="33:34">bd</name><operator pos:start="33:35" pos:end="33:35">.</operator><name pos:start="33:36" pos:end="33:41">length</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:50"><expr pos:start="33:44" pos:end="33:50"><name pos:start="33:44" pos:end="33:50"><name pos:start="33:44" pos:end="33:45">bd</name><operator pos:start="33:46" pos:end="33:46">.</operator><name pos:start="33:47" pos:end="33:50">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:39">(<expr pos:start="35:13" pos:end="35:38"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:15">bd</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:21">flags</name></name> <operator pos:start="35:23" pos:end="35:23">&amp;</operator> <name pos:start="35:25" pos:end="35:32">FEC_BD_R</name><operator pos:start="35:33" pos:end="35:33">)</operator> <operator pos:start="35:35" pos:end="35:36">==</operator> <literal type="number" pos:start="35:38" pos:end="35:38">0</literal></expr>)</condition> <block pos:start="35:41" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:18">

            <comment type="block" pos:start="37:13" pos:end="37:54">/* Run out of descriptors to transmit.  */</comment>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:11">len</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:23"><name pos:start="43:15" pos:end="43:16">bd</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:23">length</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:50">(<expr pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:22">frame_size</name> <operator pos:start="45:24" pos:end="45:24">+</operator> <name pos:start="45:26" pos:end="45:28">len</name> <operator pos:start="45:30" pos:end="45:30">&gt;</operator> <name pos:start="45:32" pos:end="45:49">FEC_MAX_FRAME_SIZE</name></expr>)</condition> <block pos:start="45:52" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:35">

            <expr_stmt pos:start="47:13" pos:end="47:50"><expr pos:start="47:13" pos:end="47:49"><name pos:start="47:13" pos:end="47:15">len</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:36">FEC_MAX_FRAME_SIZE</name> <operator pos:start="47:38" pos:end="47:38">-</operator> <name pos:start="47:40" pos:end="47:49">frame_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">eir</name></name> <operator pos:start="49:20" pos:end="49:21">|=</operator> <name pos:start="49:23" pos:end="49:34">FEC_INT_BABT</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><call pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:32">cpu_physical_memory_read</name><argument_list pos:start="53:33" pos:end="53:51">(<argument pos:start="53:34" pos:end="53:40"><expr pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:35">bd</name><operator pos:start="53:36" pos:end="53:36">.</operator><name pos:start="53:37" pos:end="53:40">data</name></name></expr></argument>, <argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">ptr</name></expr></argument>, <argument pos:start="53:48" pos:end="53:50"><expr pos:start="53:48" pos:end="53:50"><name pos:start="53:48" pos:end="53:50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">ptr</name> <operator pos:start="55:13" pos:end="55:14">+=</operator> <name pos:start="55:16" pos:end="55:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:18">frame_size</name> <operator pos:start="57:20" pos:end="57:21">+=</operator> <name pos:start="57:23" pos:end="57:25">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="73:9"><if pos:start="59:9" pos:end="73:9">if <condition pos:start="59:12" pos:end="59:32">(<expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:14">bd</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:20">flags</name></name> <operator pos:start="59:22" pos:end="59:22">&amp;</operator> <name pos:start="59:24" pos:end="59:31">FEC_BD_L</name></expr>)</condition> <block pos:start="59:34" pos:end="73:9">{<block_content pos:start="63:13" pos:end="71:34">

            <comment type="block" pos:start="61:13" pos:end="61:40">/* Last buffer in frame.  */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><call pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:19">DPRINTF</name><argument_list pos:start="63:20" pos:end="63:39">(<argument pos:start="63:21" pos:end="63:38"><expr pos:start="63:21" pos:end="63:38"><literal type="string" pos:start="63:21" pos:end="63:38">"Sending packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:65"><expr pos:start="65:13" pos:end="65:64"><call pos:start="65:13" pos:end="65:64"><name pos:start="65:13" pos:end="65:28">qemu_send_packet</name><argument_list pos:start="65:29" pos:end="65:64">(<argument pos:start="65:30" pos:end="65:51"><expr pos:start="65:30" pos:end="65:51"><call pos:start="65:30" pos:end="65:51"><name pos:start="65:30" pos:end="65:43">qemu_get_queue</name><argument_list pos:start="65:44" pos:end="65:51">(<argument pos:start="65:45" pos:end="65:50"><expr pos:start="65:45" pos:end="65:50"><name pos:start="65:45" pos:end="65:50"><name pos:start="65:45" pos:end="65:45">s</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:50">nic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:54" pos:end="65:58"><expr pos:start="65:54" pos:end="65:58"><name pos:start="65:54" pos:end="65:58">frame</name></expr></argument>, <argument pos:start="65:61" pos:end="65:63"><expr pos:start="65:61" pos:end="65:63"><name pos:start="65:61" pos:end="65:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:24"><expr pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:15">ptr</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:23">frame</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:27"><expr pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:22">frame_size</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:18">eir</name></name> <operator pos:start="71:20" pos:end="71:21">|=</operator> <name pos:start="71:23" pos:end="71:33">FEC_INT_TXF</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:14">eir</name></name> <operator pos:start="75:16" pos:end="75:17">|=</operator> <name pos:start="75:19" pos:end="75:29">FEC_INT_TXB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:10">bd</name><operator pos:start="77:11" pos:end="77:11">.</operator><name pos:start="77:12" pos:end="77:16">flags</name></name> <operator pos:start="77:18" pos:end="77:19">&amp;=</operator> <operator pos:start="77:21" pos:end="77:21">~</operator><name pos:start="77:22" pos:end="77:29">FEC_BD_R</name></expr>;</expr_stmt>

        <comment type="block" pos:start="79:9" pos:end="79:50">/* Write back the modified descriptor.  */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><call pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:24">mcf_fec_write_bd</name><argument_list pos:start="81:25" pos:end="81:35">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><operator pos:start="81:26" pos:end="81:26">&amp;</operator><name pos:start="81:27" pos:end="81:28">bd</name></expr></argument>, <argument pos:start="81:31" pos:end="81:34"><expr pos:start="81:31" pos:end="81:34"><name pos:start="81:31" pos:end="81:34">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:46">/* Advance to the next descriptor.  */</comment>

        <if_stmt pos:start="85:9" pos:end="93:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:39">(<expr pos:start="85:13" pos:end="85:38"><operator pos:start="85:13" pos:end="85:13">(</operator><name pos:start="85:14" pos:end="85:21"><name pos:start="85:14" pos:end="85:15">bd</name><operator pos:start="85:16" pos:end="85:16">.</operator><name pos:start="85:17" pos:end="85:21">flags</name></name> <operator pos:start="85:23" pos:end="85:23">&amp;</operator> <name pos:start="85:25" pos:end="85:32">FEC_BD_W</name><operator pos:start="85:33" pos:end="85:33">)</operator> <operator pos:start="85:35" pos:end="85:36">!=</operator> <literal type="number" pos:start="85:38" pos:end="85:38">0</literal></expr>)</condition> <block pos:start="85:41" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:28">

            <expr_stmt pos:start="87:13" pos:end="87:28"><expr pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:16">addr</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:27">etdsr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="93:9">else <block pos:start="89:16" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:22">

            <expr_stmt pos:start="91:13" pos:end="91:22"><expr pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:16">addr</name> <operator pos:start="91:18" pos:end="91:19">+=</operator> <literal type="number" pos:start="91:21" pos:end="91:21">8</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:20">tx_descriptor</name></name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:27">addr</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
