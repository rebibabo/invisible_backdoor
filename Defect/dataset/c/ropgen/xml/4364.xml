<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4364.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">ir2_decode_plane_inter</name><parameter_list pos:start="1:34" pos:end="3:66">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:44">Ir2Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:60"><decl pos:start="1:52" pos:end="1:60"><type pos:start="1:52" pos:end="1:60"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:60">width</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:72"><decl pos:start="1:63" pos:end="1:72"><type pos:start="1:63" pos:end="1:72"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:72">height</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:86"><decl pos:start="1:75" pos:end="1:86"><type pos:start="1:75" pos:end="1:86"><name pos:start="1:75" pos:end="1:81">uint8_t</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">dst</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:43">pitch</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:65"><decl pos:start="3:46" pos:end="3:65"><type pos:start="3:46" pos:end="3:65"><specifier pos:start="3:46" pos:end="3:50">const</specifier> <name pos:start="3:52" pos:end="3:58">uint8_t</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">table</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="66:1">{<block_content pos:start="7:5" pos:end="64:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">out</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">t</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="62:5"><if pos:start="17:5" pos:end="62:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:13">width</name> <operator pos:start="17:15" pos:end="17:15">&amp;</operator> <literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>)</condition><block type="pseudo" pos:start="22:5" pos:end="62:5"><block_content pos:start="22:5" pos:end="62:5">




    <for pos:start="22:5" pos:end="62:5">for <control pos:start="22:9" pos:end="22:32">(<init pos:start="22:10" pos:end="22:15"><expr pos:start="22:10" pos:end="22:14"><name pos:start="22:10" pos:end="22:10">j</name> <operator pos:start="22:12" pos:end="22:12">=</operator> <literal type="number" pos:start="22:14" pos:end="22:14">0</literal></expr>;</init> <condition pos:start="22:17" pos:end="22:27"><expr pos:start="22:17" pos:end="22:26"><name pos:start="22:17" pos:end="22:17">j</name> <operator pos:start="22:19" pos:end="22:19">&lt;</operator> <name pos:start="22:21" pos:end="22:26">height</name></expr>;</condition> <incr pos:start="22:29" pos:end="22:31"><expr pos:start="22:29" pos:end="22:31"><name pos:start="22:29" pos:end="22:29">j</name><operator pos:start="22:30" pos:end="22:31">++</operator></expr></incr>)</control> <block pos:start="22:34" pos:end="62:5">{<block_content pos:start="24:9" pos:end="60:21">

        <expr_stmt pos:start="24:9" pos:end="24:16"><expr pos:start="24:9" pos:end="24:15"><name pos:start="24:9" pos:end="24:11">out</name> <operator pos:start="24:13" pos:end="24:13">=</operator> <literal type="number" pos:start="24:15" pos:end="24:15">0</literal></expr>;</expr_stmt>



        <while pos:start="28:9" pos:end="58:9">while <condition pos:start="28:15" pos:end="28:27">(<expr pos:start="28:16" pos:end="28:26"><name pos:start="28:16" pos:end="28:18">out</name> <operator pos:start="28:20" pos:end="28:20">&lt;</operator> <name pos:start="28:22" pos:end="28:26">width</name></expr>)</condition> <block pos:start="28:29" pos:end="58:9">{<block_content pos:start="30:13" pos:end="56:13">

            <expr_stmt pos:start="30:13" pos:end="30:39"><expr pos:start="30:13" pos:end="30:38"><name pos:start="30:13" pos:end="30:13">c</name> <operator pos:start="30:15" pos:end="30:15">=</operator> <call pos:start="30:17" pos:end="30:38"><name pos:start="30:17" pos:end="30:28">ir2_get_code</name><argument_list pos:start="30:29" pos:end="30:38">(<argument pos:start="30:30" pos:end="30:37"><expr pos:start="30:30" pos:end="30:37"><operator pos:start="30:30" pos:end="30:30">&amp;</operator><name pos:start="30:31" pos:end="30:37"><name pos:start="30:31" pos:end="30:33">ctx</name><operator pos:start="30:34" pos:end="30:35">-&gt;</operator><name pos:start="30:36" pos:end="30:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="32:13" pos:end="56:13"><if pos:start="32:13" pos:end="38:13">if <condition pos:start="32:16" pos:end="32:26">(<expr pos:start="32:17" pos:end="32:25"><name pos:start="32:17" pos:end="32:17">c</name> <operator pos:start="32:19" pos:end="32:20">&gt;=</operator> <literal type="number" pos:start="32:22" pos:end="32:25">0x80</literal></expr>)</condition> <block pos:start="32:28" pos:end="38:13">{<block_content pos:start="34:17" pos:end="36:29"> <comment type="block" pos:start="32:30" pos:end="32:49">/* we have a skip */</comment>

                <expr_stmt pos:start="34:17" pos:end="34:28"><expr pos:start="34:17" pos:end="34:27"><name pos:start="34:17" pos:end="34:17">c</name>   <operator pos:start="34:21" pos:end="34:22">-=</operator> <literal type="number" pos:start="34:24" pos:end="34:27">0x7F</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="36:17" pos:end="36:29"><expr pos:start="36:17" pos:end="36:28"><name pos:start="36:17" pos:end="36:19">out</name> <operator pos:start="36:21" pos:end="36:22">+=</operator> <name pos:start="36:24" pos:end="36:24">c</name> <operator pos:start="36:26" pos:end="36:26">*</operator> <literal type="number" pos:start="36:28" pos:end="36:28">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="38:15" pos:end="56:13">else <block pos:start="38:20" pos:end="56:13">{<block_content pos:start="40:17" pos:end="54:22"> <comment type="block" pos:start="38:22" pos:end="38:52">/* add two deltas from table */</comment>

                <expr_stmt pos:start="40:17" pos:end="40:70"><expr pos:start="40:17" pos:end="40:69"><name pos:start="40:17" pos:end="40:17">t</name>        <operator pos:start="40:26" pos:end="40:26">=</operator> <name pos:start="40:28" pos:end="40:35"><name pos:start="40:28" pos:end="40:30">dst</name><index pos:start="40:31" pos:end="40:35">[<expr pos:start="40:32" pos:end="40:34"><name pos:start="40:32" pos:end="40:34">out</name></expr>]</index></name> <operator pos:start="40:37" pos:end="40:37">+</operator> <operator pos:start="40:39" pos:end="40:39">(</operator><operator pos:start="40:40" pos:end="40:40">(</operator><operator pos:start="40:41" pos:end="40:41">(</operator><name pos:start="40:42" pos:end="40:53"><name pos:start="40:42" pos:end="40:46">table</name><index pos:start="40:47" pos:end="40:53">[<expr pos:start="40:48" pos:end="40:52"><name pos:start="40:48" pos:end="40:48">c</name> <operator pos:start="40:50" pos:end="40:50">*</operator> <literal type="number" pos:start="40:52" pos:end="40:52">2</literal></expr>]</index></name> <operator pos:start="40:55" pos:end="40:55">-</operator> <literal type="number" pos:start="40:57" pos:end="40:59">128</literal><operator pos:start="40:60" pos:end="40:60">)</operator><operator pos:start="40:61" pos:end="40:61">*</operator><literal type="number" pos:start="40:62" pos:end="40:62">3</literal><operator pos:start="40:63" pos:end="40:63">)</operator> <operator pos:start="40:65" pos:end="40:66">&gt;&gt;</operator> <literal type="number" pos:start="40:68" pos:end="40:68">2</literal><operator pos:start="40:69" pos:end="40:69">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="42:17" pos:end="42:44"><expr pos:start="42:17" pos:end="42:43"><name pos:start="42:17" pos:end="42:17">t</name>        <operator pos:start="42:26" pos:end="42:26">=</operator> <call pos:start="42:28" pos:end="42:43"><name pos:start="42:28" pos:end="42:40">av_clip_uint8</name><argument_list pos:start="42:41" pos:end="42:43">(<argument pos:start="42:42" pos:end="42:42"><expr pos:start="42:42" pos:end="42:42"><name pos:start="42:42" pos:end="42:42">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="44:17" pos:end="44:29"><expr pos:start="44:17" pos:end="44:28"><name pos:start="44:17" pos:end="44:24"><name pos:start="44:17" pos:end="44:19">dst</name><index pos:start="44:20" pos:end="44:24">[<expr pos:start="44:21" pos:end="44:23"><name pos:start="44:21" pos:end="44:23">out</name></expr>]</index></name> <operator pos:start="44:26" pos:end="44:26">=</operator> <name pos:start="44:28" pos:end="44:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="46:17" pos:end="46:22"><expr pos:start="46:17" pos:end="46:21"><name pos:start="46:17" pos:end="46:19">out</name><operator pos:start="46:20" pos:end="46:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="48:17" pos:end="48:76"><expr pos:start="48:17" pos:end="48:75"><name pos:start="48:17" pos:end="48:17">t</name>        <operator pos:start="48:26" pos:end="48:26">=</operator> <name pos:start="48:28" pos:end="48:35"><name pos:start="48:28" pos:end="48:30">dst</name><index pos:start="48:31" pos:end="48:35">[<expr pos:start="48:32" pos:end="48:34"><name pos:start="48:32" pos:end="48:34">out</name></expr>]</index></name> <operator pos:start="48:37" pos:end="48:37">+</operator> <operator pos:start="48:39" pos:end="48:39">(</operator><operator pos:start="48:40" pos:end="48:40">(</operator><operator pos:start="48:41" pos:end="48:41">(</operator><name pos:start="48:42" pos:end="48:59"><name pos:start="48:42" pos:end="48:46">table</name><index pos:start="48:47" pos:end="48:59">[<expr pos:start="48:48" pos:end="48:58"><operator pos:start="48:48" pos:end="48:48">(</operator><name pos:start="48:49" pos:end="48:49">c</name> <operator pos:start="48:51" pos:end="48:51">*</operator> <literal type="number" pos:start="48:53" pos:end="48:53">2</literal><operator pos:start="48:54" pos:end="48:54">)</operator> <operator pos:start="48:56" pos:end="48:56">+</operator> <literal type="number" pos:start="48:58" pos:end="48:58">1</literal></expr>]</index></name> <operator pos:start="48:61" pos:end="48:61">-</operator> <literal type="number" pos:start="48:63" pos:end="48:65">128</literal><operator pos:start="48:66" pos:end="48:66">)</operator><operator pos:start="48:67" pos:end="48:67">*</operator><literal type="number" pos:start="48:68" pos:end="48:68">3</literal><operator pos:start="48:69" pos:end="48:69">)</operator> <operator pos:start="48:71" pos:end="48:72">&gt;&gt;</operator> <literal type="number" pos:start="48:74" pos:end="48:74">2</literal><operator pos:start="48:75" pos:end="48:75">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="50:17" pos:end="50:44"><expr pos:start="50:17" pos:end="50:43"><name pos:start="50:17" pos:end="50:17">t</name>        <operator pos:start="50:26" pos:end="50:26">=</operator> <call pos:start="50:28" pos:end="50:43"><name pos:start="50:28" pos:end="50:40">av_clip_uint8</name><argument_list pos:start="50:41" pos:end="50:43">(<argument pos:start="50:42" pos:end="50:42"><expr pos:start="50:42" pos:end="50:42"><name pos:start="50:42" pos:end="50:42">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="52:17" pos:end="52:29"><expr pos:start="52:17" pos:end="52:28"><name pos:start="52:17" pos:end="52:24"><name pos:start="52:17" pos:end="52:19">dst</name><index pos:start="52:20" pos:end="52:24">[<expr pos:start="52:21" pos:end="52:23"><name pos:start="52:21" pos:end="52:23">out</name></expr>]</index></name> <operator pos:start="52:26" pos:end="52:26">=</operator> <name pos:start="52:28" pos:end="52:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="54:17" pos:end="54:22"><expr pos:start="54:17" pos:end="54:21"><name pos:start="54:17" pos:end="54:19">out</name><operator pos:start="54:20" pos:end="54:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="60:9" pos:end="60:21"><expr pos:start="60:9" pos:end="60:20"><name pos:start="60:9" pos:end="60:11">dst</name> <operator pos:start="60:13" pos:end="60:14">+=</operator> <name pos:start="60:16" pos:end="60:20">pitch</name></expr>;</expr_stmt>

    </block_content>}</block></for></block_content></block></if></if_stmt>

    <return pos:start="64:5" pos:end="64:13">return <expr pos:start="64:12" pos:end="64:12"><literal type="number" pos:start="64:12" pos:end="64:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
