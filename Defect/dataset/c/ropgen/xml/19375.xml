<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19375.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">sm501_draw_crt</name><parameter_list pos:start="1:27" pos:end="1:41">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:37">SM501State</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="235:1">{<block_content pos:start="5:5" pos:end="233:5">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">DisplaySurface</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:27">surface</name> <init pos:start="5:29" pos:end="5:58">= <expr pos:start="5:31" pos:end="5:58"><call pos:start="5:31" pos:end="5:58"><name pos:start="5:31" pos:end="5:50">qemu_console_surface</name><argument_list pos:start="5:51" pos:end="5:58">(<argument pos:start="5:52" pos:end="5:57"><expr pos:start="5:52" pos:end="5:57"><name pos:start="5:52" pos:end="5:57"><name pos:start="5:52" pos:end="5:52">s</name><operator pos:start="5:53" pos:end="5:54">-&gt;</operator><name pos:start="5:55" pos:end="5:57">con</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">y</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">c_x</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">c_y</name> <init pos:start="7:25" pos:end="7:27">= <expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">hwc_src</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>, <decl pos:start="9:30" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:33">src</name> <init pos:start="9:35" pos:end="9:48">= <expr pos:start="9:37" pos:end="9:48"><name pos:start="9:37" pos:end="9:48"><name pos:start="9:37" pos:end="9:37">s</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:48">local_mem</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">width</name> <init pos:start="11:15" pos:end="11:31">= <expr pos:start="11:17" pos:end="11:31"><call pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:25">get_width</name><argument_list pos:start="11:26" pos:end="11:31">(<argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><name pos:start="11:27" pos:end="11:27">s</name></expr></argument>, <argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">height</name> <init pos:start="13:16" pos:end="13:33">= <expr pos:start="13:18" pos:end="13:33"><call pos:start="13:18" pos:end="13:33"><name pos:start="13:18" pos:end="13:27">get_height</name><argument_list pos:start="13:28" pos:end="13:33">(<argument pos:start="13:29" pos:end="13:29"><expr pos:start="13:29" pos:end="13:29"><name pos:start="13:29" pos:end="13:29">s</name></expr></argument>, <argument pos:start="13:32" pos:end="13:32"><expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">src_bpp</name> <init pos:start="15:17" pos:end="15:31">= <expr pos:start="15:19" pos:end="15:31"><call pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:25">get_bpp</name><argument_list pos:start="15:26" pos:end="15:31">(<argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">s</name></expr></argument>, <argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:51"><decl pos:start="17:5" pos:end="17:50"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">dst_bpp</name> <init pos:start="17:17" pos:end="17:50">= <expr pos:start="17:19" pos:end="17:50"><call pos:start="17:19" pos:end="17:50"><name pos:start="17:19" pos:end="17:41">surface_bytes_per_pixel</name><argument_list pos:start="17:42" pos:end="17:50">(<argument pos:start="17:43" pos:end="17:49"><expr pos:start="17:43" pos:end="17:49"><name pos:start="17:43" pos:end="17:49">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="21:75"><decl pos:start="19:5" pos:end="21:74"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">uint32_t</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:21">palette</name> <init pos:start="19:23" pos:end="21:74">= <expr pos:start="19:25" pos:end="21:74"><operator pos:start="19:25" pos:end="19:25">(</operator><name pos:start="19:26" pos:end="19:33">uint32_t</name> <operator pos:start="19:35" pos:end="19:35">*</operator><operator pos:start="19:36" pos:end="19:36">)</operator><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="21:74"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:50">dc_palette</name><index pos:start="19:51" pos:end="21:74">[<expr pos:start="19:52" pos:end="21:73"><name pos:start="19:52" pos:end="19:71">SM501_DC_CRT_PALETTE</name> <operator pos:start="19:73" pos:end="19:73">-</operator>

                                                   <name pos:start="21:52" pos:end="21:73">SM501_DC_PANEL_PALETTE</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:30"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">uint8_t</name></type> <name pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:23">hwc_palette</name><index pos:start="23:24" pos:end="23:30">[<expr pos:start="23:25" pos:end="23:29"><literal type="number" pos:start="23:25" pos:end="23:25">3</literal> <operator pos:start="23:27" pos:end="23:27">*</operator> <literal type="number" pos:start="23:29" pos:end="23:29">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:50"><decl pos:start="25:5" pos:end="25:49"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:22">ds_depth_index</name> <init pos:start="25:24" pos:end="25:49">= <expr pos:start="25:26" pos:end="25:49"><call pos:start="25:26" pos:end="25:49"><name pos:start="25:26" pos:end="25:40">get_depth_index</name><argument_list pos:start="25:41" pos:end="25:49">(<argument pos:start="25:42" pos:end="25:48"><expr pos:start="25:42" pos:end="25:48"><name pos:start="25:42" pos:end="25:48">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:37"><decl pos:start="27:5" pos:end="27:36"><type pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:18">draw_line_func</name> <modifier pos:start="27:20" pos:end="27:20">*</modifier></type><name pos:start="27:21" pos:end="27:29">draw_line</name> <init pos:start="27:31" pos:end="27:36">= <expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:45"><decl pos:start="29:5" pos:end="29:44"><type pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:22">draw_hwc_line_func</name> <modifier pos:start="29:24" pos:end="29:24">*</modifier></type><name pos:start="29:25" pos:end="29:37">draw_hwc_line</name> <init pos:start="29:39" pos:end="29:44">= <expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:24"><decl pos:start="31:5" pos:end="31:23"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:19">full_update</name> <init pos:start="31:21" pos:end="31:23">= <expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:21"><decl pos:start="33:5" pos:end="33:20"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:15">y_start</name> <init pos:start="33:17" pos:end="33:20">= <expr pos:start="33:19" pos:end="33:20"><operator pos:start="33:19" pos:end="33:19">-</operator><literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:30"><decl pos:start="35:5" pos:end="35:29"><type pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:14">ram_addr_t</name></type> <name pos:start="35:16" pos:end="35:23">page_min</name> <init pos:start="35:25" pos:end="35:29">= <expr pos:start="35:27" pos:end="35:29"><operator pos:start="35:27" pos:end="35:27">~</operator><literal type="number" pos:start="35:28" pos:end="35:29">0l</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:29"><decl pos:start="37:5" pos:end="37:28"><type pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:14">ram_addr_t</name></type> <name pos:start="37:16" pos:end="37:23">page_max</name> <init pos:start="37:25" pos:end="37:28">= <expr pos:start="37:27" pos:end="37:28"><literal type="number" pos:start="37:27" pos:end="37:28">0l</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:26"><decl pos:start="39:5" pos:end="39:25"><type pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:14">ram_addr_t</name></type> <name pos:start="39:16" pos:end="39:21">offset</name> <init pos:start="39:23" pos:end="39:25">= <expr pos:start="39:25" pos:end="39:25"><literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:35">/* choose draw_line function */</comment>

    <switch pos:start="45:5" pos:end="75:5">switch <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:19">src_bpp</name></expr>)</condition> <block pos:start="45:22" pos:end="75:5">{<block_content pos:start="47:5" pos:end="73:14">

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">1</literal></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:53"><expr pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:17">draw_line</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:52"><name pos:start="49:21" pos:end="49:36">draw_line8_funcs</name><index pos:start="49:37" pos:end="49:52">[<expr pos:start="49:38" pos:end="49:51"><name pos:start="49:38" pos:end="49:51">ds_depth_index</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">2</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:54"><expr pos:start="55:9" pos:end="55:53"><name pos:start="55:9" pos:end="55:17">draw_line</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:53"><name pos:start="55:21" pos:end="55:37">draw_line16_funcs</name><index pos:start="55:38" pos:end="55:53">[<expr pos:start="55:39" pos:end="55:52"><name pos:start="55:39" pos:end="55:52">ds_depth_index</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:11">case <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">4</literal></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:17">draw_line</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:53"><name pos:start="61:21" pos:end="61:37">draw_line32_funcs</name><index pos:start="61:38" pos:end="61:53">[<expr pos:start="61:39" pos:end="61:52"><name pos:start="61:39" pos:end="61:52">ds_depth_index</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="69:34"><expr pos:start="67:9" pos:end="69:33"><call pos:start="67:9" pos:end="69:33"><name pos:start="67:9" pos:end="67:14">printf</name><argument_list pos:start="67:15" pos:end="69:33">(<argument pos:start="67:16" pos:end="67:62"><expr pos:start="67:16" pos:end="67:62"><literal type="string" pos:start="67:16" pos:end="67:62">"sm501 draw crt : invalid DC_CRT_CONTROL=%x.\n"</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:32"><expr pos:start="69:16" pos:end="69:32"><name pos:start="69:16" pos:end="69:32"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:32">dc_crt_control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:16"><expr pos:start="71:9" pos:end="71:15"><call pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:13">abort</name><argument_list pos:start="71:14" pos:end="71:15">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="79:5" pos:end="79:40">/* set up to draw hardware cursor */</comment>

    <if_stmt pos:start="81:5" pos:end="95:5"><if pos:start="81:5" pos:end="95:5">if <condition pos:start="81:8" pos:end="81:29">(<expr pos:start="81:9" pos:end="81:28"><call pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:22">is_hwc_enabled</name><argument_list pos:start="81:23" pos:end="81:28">(<argument pos:start="81:24" pos:end="81:24"><expr pos:start="81:24" pos:end="81:24"><name pos:start="81:24" pos:end="81:24">s</name></expr></argument>, <argument pos:start="81:27" pos:end="81:27"><expr pos:start="81:27" pos:end="81:27"><literal type="number" pos:start="81:27" pos:end="81:27">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:31" pos:end="95:5">{<block_content pos:start="85:9" pos:end="93:43">

        <comment type="block" pos:start="83:9" pos:end="83:46">/* choose cursor draw line function */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:60"><expr pos:start="85:9" pos:end="85:59"><name pos:start="85:9" pos:end="85:21">draw_hwc_line</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <name pos:start="85:25" pos:end="85:59"><name pos:start="85:25" pos:end="85:43">draw_hwc_line_funcs</name><index pos:start="85:44" pos:end="85:59">[<expr pos:start="85:45" pos:end="85:58"><name pos:start="85:45" pos:end="85:58">ds_depth_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:15">hwc_src</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:39"><name pos:start="87:19" pos:end="87:33">get_hwc_address</name><argument_list pos:start="87:34" pos:end="87:39">(<argument pos:start="87:35" pos:end="87:35"><expr pos:start="87:35" pos:end="87:35"><name pos:start="87:35" pos:end="87:35">s</name></expr></argument>, <argument pos:start="87:38" pos:end="87:38"><expr pos:start="87:38" pos:end="87:38"><literal type="number" pos:start="87:38" pos:end="87:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:30"><expr pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:11">c_x</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:29"><name pos:start="89:15" pos:end="89:23">get_hwc_x</name><argument_list pos:start="89:24" pos:end="89:29">(<argument pos:start="89:25" pos:end="89:25"><expr pos:start="89:25" pos:end="89:25"><name pos:start="89:25" pos:end="89:25">s</name></expr></argument>, <argument pos:start="89:28" pos:end="89:28"><expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:11">c_y</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:29"><name pos:start="91:15" pos:end="91:23">get_hwc_y</name><argument_list pos:start="91:24" pos:end="91:29">(<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">s</name></expr></argument>, <argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><literal type="number" pos:start="91:28" pos:end="91:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><call pos:start="93:9" pos:end="93:42"><name pos:start="93:9" pos:end="93:23">get_hwc_palette</name><argument_list pos:start="93:24" pos:end="93:42">(<argument pos:start="93:25" pos:end="93:25"><expr pos:start="93:25" pos:end="93:25"><name pos:start="93:25" pos:end="93:25">s</name></expr></argument>, <argument pos:start="93:28" pos:end="93:28"><expr pos:start="93:28" pos:end="93:28"><literal type="number" pos:start="93:28" pos:end="93:28">1</literal></expr></argument>, <argument pos:start="93:31" pos:end="93:41"><expr pos:start="93:31" pos:end="93:41"><name pos:start="93:31" pos:end="93:41">hwc_palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:29">/* adjust console size */</comment>

    <if_stmt pos:start="101:5" pos:end="113:5"><if pos:start="101:5" pos:end="113:5">if <condition pos:start="101:8" pos:end="101:59">(<expr pos:start="101:9" pos:end="101:58"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:21">last_width</name></name> <operator pos:start="101:23" pos:end="101:24">!=</operator> <name pos:start="101:26" pos:end="101:30">width</name> <operator pos:start="101:32" pos:end="101:33">||</operator> <name pos:start="101:35" pos:end="101:48"><name pos:start="101:35" pos:end="101:35">s</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:48">last_height</name></name> <operator pos:start="101:50" pos:end="101:51">!=</operator> <name pos:start="101:53" pos:end="101:58">height</name></expr>)</condition> <block pos:start="101:61" pos:end="113:5">{<block_content pos:start="103:9" pos:end="111:24">

        <expr_stmt pos:start="103:9" pos:end="103:51"><expr pos:start="103:9" pos:end="103:50"><call pos:start="103:9" pos:end="103:50"><name pos:start="103:9" pos:end="103:27">qemu_console_resize</name><argument_list pos:start="103:28" pos:end="103:50">(<argument pos:start="103:29" pos:end="103:34"><expr pos:start="103:29" pos:end="103:34"><name pos:start="103:29" pos:end="103:34"><name pos:start="103:29" pos:end="103:29">s</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:34">con</name></name></expr></argument>, <argument pos:start="103:37" pos:end="103:41"><expr pos:start="103:37" pos:end="103:41"><name pos:start="103:37" pos:end="103:41">width</name></expr></argument>, <argument pos:start="103:44" pos:end="103:49"><expr pos:start="103:44" pos:end="103:49"><name pos:start="103:44" pos:end="103:49">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:47"><expr pos:start="105:9" pos:end="105:46"><name pos:start="105:9" pos:end="105:15">surface</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <call pos:start="105:19" pos:end="105:46"><name pos:start="105:19" pos:end="105:38">qemu_console_surface</name><argument_list pos:start="105:39" pos:end="105:46">(<argument pos:start="105:40" pos:end="105:45"><expr pos:start="105:40" pos:end="105:45"><name pos:start="105:40" pos:end="105:45"><name pos:start="105:40" pos:end="105:40">s</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:45">con</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:21">last_width</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:29">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:32"><expr pos:start="109:9" pos:end="109:31"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:22">last_height</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:31">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:24"><expr pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:19">full_update</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <literal type="number" pos:start="111:23" pos:end="111:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:48">/* draw each line according to conditions */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:58"><expr pos:start="119:5" pos:end="119:57"><call pos:start="119:5" pos:end="119:57"><name pos:start="119:5" pos:end="119:35">memory_region_sync_dirty_bitmap</name><argument_list pos:start="119:36" pos:end="119:57">(<argument pos:start="119:37" pos:end="119:56"><expr pos:start="119:37" pos:end="119:56"><operator pos:start="119:37" pos:end="119:37">&amp;</operator><name pos:start="119:38" pos:end="119:56"><name pos:start="119:38" pos:end="119:38">s</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:56">local_mem_region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="121:5" pos:end="209:5">for <control pos:start="121:9" pos:end="121:32">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">y</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:27"><expr pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:17">y</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <name pos:start="121:21" pos:end="121:26">height</name></expr>;</condition> <incr pos:start="121:29" pos:end="121:31"><expr pos:start="121:29" pos:end="121:31"><name pos:start="121:29" pos:end="121:29">y</name><operator pos:start="121:30" pos:end="121:31">++</operator></expr></incr>)</control> <block pos:start="121:34" pos:end="209:5">{<block_content pos:start="123:9" pos:end="207:34">

        <decl_stmt pos:start="123:9" pos:end="123:31"><decl pos:start="123:9" pos:end="123:18"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:18">update</name></decl>, <decl pos:start="123:21" pos:end="123:30"><type ref="prev" pos:start="123:9" pos:end="123:11"/><name pos:start="123:21" pos:end="123:30">update_hwc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:34"><decl pos:start="125:9" pos:end="125:33"><type pos:start="125:9" pos:end="125:18"><name pos:start="125:9" pos:end="125:18">ram_addr_t</name></type> <name pos:start="125:20" pos:end="125:24">page0</name> <init pos:start="125:26" pos:end="125:33">= <expr pos:start="125:28" pos:end="125:33"><name pos:start="125:28" pos:end="125:33">offset</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:56"><decl pos:start="127:9" pos:end="127:55"><type pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:18">ram_addr_t</name></type> <name pos:start="127:20" pos:end="127:24">page1</name> <init pos:start="127:26" pos:end="127:55">= <expr pos:start="127:28" pos:end="127:55"><name pos:start="127:28" pos:end="127:33">offset</name> <operator pos:start="127:35" pos:end="127:35">+</operator> <name pos:start="127:37" pos:end="127:41">width</name> <operator pos:start="127:43" pos:end="127:43">*</operator> <name pos:start="127:45" pos:end="127:51">src_bpp</name> <operator pos:start="127:53" pos:end="127:53">-</operator> <literal type="number" pos:start="127:55" pos:end="127:55">1</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="131:9" pos:end="131:76">/* check if hardware cursor is enabled and we're within its range */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:77"><expr pos:start="133:9" pos:end="133:76"><name pos:start="133:9" pos:end="133:18">update_hwc</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <name pos:start="133:22" pos:end="133:34">draw_hwc_line</name> <operator pos:start="133:36" pos:end="133:37">&amp;&amp;</operator> <name pos:start="133:39" pos:end="133:41">c_y</name> <operator pos:start="133:43" pos:end="133:44">&lt;=</operator> <name pos:start="133:46" pos:end="133:46">y</name> <operator pos:start="133:48" pos:end="133:49">&amp;&amp;</operator> <name pos:start="133:51" pos:end="133:51">y</name> <operator pos:start="133:53" pos:end="133:53">&lt;</operator> <name pos:start="133:55" pos:end="133:57">c_y</name> <operator pos:start="133:59" pos:end="133:59">+</operator> <name pos:start="133:61" pos:end="133:76">SM501_HWC_HEIGHT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:43"><expr pos:start="135:9" pos:end="135:42"><name pos:start="135:9" pos:end="135:14">update</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <name pos:start="135:18" pos:end="135:28">full_update</name> <operator pos:start="135:30" pos:end="135:31">||</operator> <name pos:start="135:33" pos:end="135:42">update_hwc</name></expr>;</expr_stmt>

        <comment type="block" pos:start="137:9" pos:end="137:45">/* check dirty flags for each line */</comment>

        <expr_stmt pos:start="139:9" pos:end="141:75"><expr pos:start="139:9" pos:end="141:74"><name pos:start="139:9" pos:end="139:14">update</name> <operator pos:start="139:16" pos:end="139:17">|=</operator> <call pos:start="139:19" pos:end="141:74"><name pos:start="139:19" pos:end="139:41">memory_region_get_dirty</name><argument_list pos:start="139:42" pos:end="141:74">(<argument pos:start="139:43" pos:end="139:62"><expr pos:start="139:43" pos:end="139:62"><operator pos:start="139:43" pos:end="139:43">&amp;</operator><name pos:start="139:44" pos:end="139:62"><name pos:start="139:44" pos:end="139:44">s</name><operator pos:start="139:45" pos:end="139:46">-&gt;</operator><name pos:start="139:47" pos:end="139:62">local_mem_region</name></name></expr></argument>, <argument pos:start="139:65" pos:end="139:69"><expr pos:start="139:65" pos:end="139:69"><name pos:start="139:65" pos:end="139:69">page0</name></expr></argument>,

                                          <argument pos:start="141:43" pos:end="141:55"><expr pos:start="141:43" pos:end="141:55"><name pos:start="141:43" pos:end="141:47">page1</name> <operator pos:start="141:49" pos:end="141:49">-</operator> <name pos:start="141:51" pos:end="141:55">page0</name></expr></argument>, <argument pos:start="141:58" pos:end="141:73"><expr pos:start="141:58" pos:end="141:73"><name pos:start="141:58" pos:end="141:73">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="145:9" pos:end="145:41">/* draw line and change status */</comment>

        <if_stmt pos:start="147:9" pos:end="201:9"><if pos:start="147:9" pos:end="189:9">if <condition pos:start="147:12" pos:end="147:19">(<expr pos:start="147:13" pos:end="147:18"><name pos:start="147:13" pos:end="147:18">update</name></expr>)</condition> <block pos:start="147:21" pos:end="189:9">{<block_content pos:start="149:13" pos:end="187:13">

            <decl_stmt pos:start="149:13" pos:end="149:47"><decl pos:start="149:13" pos:end="149:46"><type pos:start="149:13" pos:end="149:21"><name pos:start="149:13" pos:end="149:19">uint8_t</name> <modifier pos:start="149:21" pos:end="149:21">*</modifier></type><name pos:start="149:22" pos:end="149:22">d</name> <init pos:start="149:24" pos:end="149:46">= <expr pos:start="149:26" pos:end="149:46"><call pos:start="149:26" pos:end="149:46"><name pos:start="149:26" pos:end="149:37">surface_data</name><argument_list pos:start="149:38" pos:end="149:46">(<argument pos:start="149:39" pos:end="149:45"><expr pos:start="149:39" pos:end="149:45"><name pos:start="149:39" pos:end="149:45">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:38"><expr pos:start="151:13" pos:end="151:37"><name pos:start="151:13" pos:end="151:13">d</name> <operator pos:start="151:15" pos:end="151:16">+=</operator>  <name pos:start="151:19" pos:end="151:19">y</name> <operator pos:start="151:21" pos:end="151:21">*</operator> <name pos:start="151:23" pos:end="151:27">width</name> <operator pos:start="151:29" pos:end="151:29">*</operator> <name pos:start="151:31" pos:end="151:37">dst_bpp</name></expr>;</expr_stmt>



            <comment type="block" pos:start="155:13" pos:end="155:37">/* draw graphics layer */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><call pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:21">draw_line</name><argument_list pos:start="157:22" pos:end="157:45">(<argument pos:start="157:23" pos:end="157:23"><expr pos:start="157:23" pos:end="157:23"><name pos:start="157:23" pos:end="157:23">d</name></expr></argument>, <argument pos:start="157:26" pos:end="157:28"><expr pos:start="157:26" pos:end="157:28"><name pos:start="157:26" pos:end="157:28">src</name></expr></argument>, <argument pos:start="157:31" pos:end="157:35"><expr pos:start="157:31" pos:end="157:35"><name pos:start="157:31" pos:end="157:35">width</name></expr></argument>, <argument pos:start="157:38" pos:end="157:44"><expr pos:start="157:38" pos:end="157:44"><name pos:start="157:38" pos:end="157:44">palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="161:13" pos:end="161:38">/* draw hardware cursor */</comment>

            <if_stmt pos:start="163:13" pos:end="167:13"><if pos:start="163:13" pos:end="167:13">if <condition pos:start="163:16" pos:end="163:27">(<expr pos:start="163:17" pos:end="163:26"><name pos:start="163:17" pos:end="163:26">update_hwc</name></expr>)</condition> <block pos:start="163:29" pos:end="167:13">{<block_content pos:start="165:17" pos:end="165:76">

                <expr_stmt pos:start="165:17" pos:end="165:76"><expr pos:start="165:17" pos:end="165:75"><call pos:start="165:17" pos:end="165:75"><name pos:start="165:17" pos:end="165:29">draw_hwc_line</name><argument_list pos:start="165:30" pos:end="165:75">(<argument pos:start="165:31" pos:end="165:31"><expr pos:start="165:31" pos:end="165:31"><name pos:start="165:31" pos:end="165:31">d</name></expr></argument>, <argument pos:start="165:34" pos:end="165:40"><expr pos:start="165:34" pos:end="165:40"><name pos:start="165:34" pos:end="165:40">hwc_src</name></expr></argument>, <argument pos:start="165:43" pos:end="165:47"><expr pos:start="165:43" pos:end="165:47"><name pos:start="165:43" pos:end="165:47">width</name></expr></argument>, <argument pos:start="165:50" pos:end="165:60"><expr pos:start="165:50" pos:end="165:60"><name pos:start="165:50" pos:end="165:60">hwc_palette</name></expr></argument>, <argument pos:start="165:63" pos:end="165:65"><expr pos:start="165:63" pos:end="165:65"><name pos:start="165:63" pos:end="165:65">c_x</name></expr></argument>, <argument pos:start="165:68" pos:end="165:74"><expr pos:start="165:68" pos:end="165:74"><name pos:start="165:68" pos:end="165:68">y</name> <operator pos:start="165:70" pos:end="165:70">-</operator> <name pos:start="165:72" pos:end="165:74">c_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="171:13" pos:end="175:13"><if pos:start="171:13" pos:end="175:13">if <condition pos:start="171:16" pos:end="171:28">(<expr pos:start="171:17" pos:end="171:27"><name pos:start="171:17" pos:end="171:23">y_start</name> <operator pos:start="171:25" pos:end="171:25">&lt;</operator> <literal type="number" pos:start="171:27" pos:end="171:27">0</literal></expr>)</condition> <block pos:start="171:30" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:28">

                <expr_stmt pos:start="173:17" pos:end="173:28"><expr pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:23">y_start</name> <operator pos:start="173:25" pos:end="173:25">=</operator> <name pos:start="173:27" pos:end="173:27">y</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="177:13" pos:end="181:13"><if pos:start="177:13" pos:end="181:13">if <condition pos:start="177:16" pos:end="177:33">(<expr pos:start="177:17" pos:end="177:32"><name pos:start="177:17" pos:end="177:21">page0</name> <operator pos:start="177:23" pos:end="177:23">&lt;</operator> <name pos:start="177:25" pos:end="177:32">page_min</name></expr>)</condition> <block pos:start="177:35" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:33">

                <expr_stmt pos:start="179:17" pos:end="179:33"><expr pos:start="179:17" pos:end="179:32"><name pos:start="179:17" pos:end="179:24">page_min</name> <operator pos:start="179:26" pos:end="179:26">=</operator> <name pos:start="179:28" pos:end="179:32">page0</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="187:13"><if pos:start="183:13" pos:end="187:13">if <condition pos:start="183:16" pos:end="183:33">(<expr pos:start="183:17" pos:end="183:32"><name pos:start="183:17" pos:end="183:21">page1</name> <operator pos:start="183:23" pos:end="183:23">&gt;</operator> <name pos:start="183:25" pos:end="183:32">page_max</name></expr>)</condition> <block pos:start="183:35" pos:end="187:13">{<block_content pos:start="185:17" pos:end="185:33">

                <expr_stmt pos:start="185:17" pos:end="185:33"><expr pos:start="185:17" pos:end="185:32"><name pos:start="185:17" pos:end="185:24">page_max</name> <operator pos:start="185:26" pos:end="185:26">=</operator> <name pos:start="185:28" pos:end="185:32">page1</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="189:11" pos:end="201:9">else <block pos:start="189:16" pos:end="201:9">{<block_content pos:start="191:13" pos:end="199:13">

            <if_stmt pos:start="191:13" pos:end="199:13"><if pos:start="191:13" pos:end="199:13">if <condition pos:start="191:16" pos:end="191:29">(<expr pos:start="191:17" pos:end="191:28"><name pos:start="191:17" pos:end="191:23">y_start</name> <operator pos:start="191:25" pos:end="191:26">&gt;=</operator> <literal type="number" pos:start="191:28" pos:end="191:28">0</literal></expr>)</condition> <block pos:start="191:31" pos:end="199:13">{<block_content pos:start="195:17" pos:end="197:29">

                <comment type="block" pos:start="193:17" pos:end="193:38">/* flush to display */</comment>

                <expr_stmt pos:start="195:17" pos:end="195:71"><expr pos:start="195:17" pos:end="195:70"><call pos:start="195:17" pos:end="195:70"><name pos:start="195:17" pos:end="195:30">dpy_gfx_update</name><argument_list pos:start="195:31" pos:end="195:70">(<argument pos:start="195:32" pos:end="195:37"><expr pos:start="195:32" pos:end="195:37"><name pos:start="195:32" pos:end="195:37"><name pos:start="195:32" pos:end="195:32">s</name><operator pos:start="195:33" pos:end="195:34">-&gt;</operator><name pos:start="195:35" pos:end="195:37">con</name></name></expr></argument>, <argument pos:start="195:40" pos:end="195:40"><expr pos:start="195:40" pos:end="195:40"><literal type="number" pos:start="195:40" pos:end="195:40">0</literal></expr></argument>, <argument pos:start="195:43" pos:end="195:49"><expr pos:start="195:43" pos:end="195:49"><name pos:start="195:43" pos:end="195:49">y_start</name></expr></argument>, <argument pos:start="195:52" pos:end="195:56"><expr pos:start="195:52" pos:end="195:56"><name pos:start="195:52" pos:end="195:56">width</name></expr></argument>, <argument pos:start="195:59" pos:end="195:69"><expr pos:start="195:59" pos:end="195:69"><name pos:start="195:59" pos:end="195:59">y</name> <operator pos:start="195:61" pos:end="195:61">-</operator> <name pos:start="195:63" pos:end="195:69">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:29"><expr pos:start="197:17" pos:end="197:28"><name pos:start="197:17" pos:end="197:23">y_start</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <operator pos:start="197:27" pos:end="197:27">-</operator><literal type="number" pos:start="197:28" pos:end="197:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:31"><expr pos:start="205:9" pos:end="205:30"><name pos:start="205:9" pos:end="205:11">src</name> <operator pos:start="205:13" pos:end="205:14">+=</operator> <name pos:start="205:16" pos:end="205:20">width</name> <operator pos:start="205:22" pos:end="205:22">*</operator> <name pos:start="205:24" pos:end="205:30">src_bpp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:34"><expr pos:start="207:9" pos:end="207:33"><name pos:start="207:9" pos:end="207:14">offset</name> <operator pos:start="207:16" pos:end="207:17">+=</operator> <name pos:start="207:19" pos:end="207:23">width</name> <operator pos:start="207:25" pos:end="207:25">*</operator> <name pos:start="207:27" pos:end="207:33">src_bpp</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="213:5" pos:end="213:35">/* complete flush to display */</comment>

    <if_stmt pos:start="215:5" pos:end="219:5"><if pos:start="215:5" pos:end="219:5">if <condition pos:start="215:8" pos:end="215:21">(<expr pos:start="215:9" pos:end="215:20"><name pos:start="215:9" pos:end="215:15">y_start</name> <operator pos:start="215:17" pos:end="215:18">&gt;=</operator> <literal type="number" pos:start="215:20" pos:end="215:20">0</literal></expr>)</condition> <block pos:start="215:23" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:63">

        <expr_stmt pos:start="217:9" pos:end="217:63"><expr pos:start="217:9" pos:end="217:62"><call pos:start="217:9" pos:end="217:62"><name pos:start="217:9" pos:end="217:22">dpy_gfx_update</name><argument_list pos:start="217:23" pos:end="217:62">(<argument pos:start="217:24" pos:end="217:29"><expr pos:start="217:24" pos:end="217:29"><name pos:start="217:24" pos:end="217:29"><name pos:start="217:24" pos:end="217:24">s</name><operator pos:start="217:25" pos:end="217:26">-&gt;</operator><name pos:start="217:27" pos:end="217:29">con</name></name></expr></argument>, <argument pos:start="217:32" pos:end="217:32"><expr pos:start="217:32" pos:end="217:32"><literal type="number" pos:start="217:32" pos:end="217:32">0</literal></expr></argument>, <argument pos:start="217:35" pos:end="217:41"><expr pos:start="217:35" pos:end="217:41"><name pos:start="217:35" pos:end="217:41">y_start</name></expr></argument>, <argument pos:start="217:44" pos:end="217:48"><expr pos:start="217:44" pos:end="217:48"><name pos:start="217:44" pos:end="217:48">width</name></expr></argument>, <argument pos:start="217:51" pos:end="217:61"><expr pos:start="217:51" pos:end="217:61"><name pos:start="217:51" pos:end="217:51">y</name> <operator pos:start="217:53" pos:end="217:53">-</operator> <name pos:start="217:55" pos:end="217:61">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="223:5" pos:end="223:27">/* clear dirty flags */</comment>

    <if_stmt pos:start="225:5" pos:end="233:5"><if pos:start="225:5" pos:end="233:5">if <condition pos:start="225:8" pos:end="225:24">(<expr pos:start="225:9" pos:end="225:23"><name pos:start="225:9" pos:end="225:16">page_min</name> <operator pos:start="225:18" pos:end="225:19">!=</operator> <operator pos:start="225:21" pos:end="225:21">~</operator><literal type="number" pos:start="225:22" pos:end="225:23">0l</literal></expr>)</condition> <block pos:start="225:26" pos:end="233:5">{<block_content pos:start="227:9" pos:end="231:52">

        <expr_stmt pos:start="227:9" pos:end="231:52"><expr pos:start="227:9" pos:end="231:51"><call pos:start="227:9" pos:end="231:51"><name pos:start="227:9" pos:end="227:33">memory_region_reset_dirty</name><argument_list pos:start="227:34" pos:end="231:51">(<argument pos:start="227:35" pos:end="227:54"><expr pos:start="227:35" pos:end="227:54"><operator pos:start="227:35" pos:end="227:35">&amp;</operator><name pos:start="227:36" pos:end="227:54"><name pos:start="227:36" pos:end="227:36">s</name><operator pos:start="227:37" pos:end="227:38">-&gt;</operator><name pos:start="227:39" pos:end="227:54">local_mem_region</name></name></expr></argument>,

                                  <argument pos:start="229:35" pos:end="229:42"><expr pos:start="229:35" pos:end="229:42"><name pos:start="229:35" pos:end="229:42">page_min</name></expr></argument>, <argument pos:start="229:45" pos:end="229:71"><expr pos:start="229:45" pos:end="229:71"><name pos:start="229:45" pos:end="229:52">page_max</name> <operator pos:start="229:54" pos:end="229:54">+</operator> <name pos:start="229:56" pos:end="229:71">TARGET_PAGE_SIZE</name></expr></argument>,

                                  <argument pos:start="231:35" pos:end="231:50"><expr pos:start="231:35" pos:end="231:50"><name pos:start="231:35" pos:end="231:50">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
