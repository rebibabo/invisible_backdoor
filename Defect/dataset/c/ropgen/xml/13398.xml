<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13398.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">qemu_socket</name><parameter_list pos:start="1:16" pos:end="1:51">(<parameter pos:start="1:17" pos:end="1:26"><decl pos:start="1:17" pos:end="1:26"><type pos:start="1:17" pos:end="1:26"><name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:26">domain</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:36"><decl pos:start="1:29" pos:end="1:36"><type pos:start="1:29" pos:end="1:36"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:36">type</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:50">protocol</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:15">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="9:1" pos:end="9:19">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:19">SOCK_CLOEXEC</name></cpp:ifdef>

    <expr_stmt pos:start="11:5" pos:end="14:0"><expr pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:55"><name pos:start="11:11" pos:end="11:16">socket</name><argument_list pos:start="11:17" pos:end="11:55">(<argument pos:start="11:18" pos:end="11:23"><expr pos:start="11:18" pos:end="11:23"><name pos:start="11:18" pos:end="11:23">domain</name></expr></argument>, <argument pos:start="11:26" pos:end="11:44"><expr pos:start="11:26" pos:end="11:44"><name pos:start="11:26" pos:end="11:29">type</name> <operator pos:start="11:31" pos:end="11:31">|</operator> <name pos:start="11:33" pos:end="11:44">SOCK_CLOEXEC</name></expr></argument>, <argument pos:start="11:47" pos:end="11:54"><expr pos:start="11:47" pos:end="11:54"><name pos:start="11:47" pos:end="11:54">protocol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:40"><name pos:start="15:11" pos:end="15:16">socket</name><argument_list pos:start="15:17" pos:end="15:40">(<argument pos:start="15:18" pos:end="15:23"><expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:23">domain</name></expr></argument>, <argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">type</name></expr></argument>, <argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><name pos:start="15:32" pos:end="15:39">protocol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="24:0"><if pos:start="17:5" pos:end="24:0">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:14">&gt;=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>)</condition> <block pos:start="17:19" pos:end="24:0">{<block_content pos:start="19:9" pos:end="19:30">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:24">qemu_set_cloexec</name><argument_list pos:start="19:25" pos:end="19:29">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <return pos:start="27:5" pos:end="27:15">return <expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
