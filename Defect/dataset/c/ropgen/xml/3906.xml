<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3906.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">opt_default</name><parameter_list pos:start="1:16" pos:end="1:63">(<parameter pos:start="1:17" pos:end="1:28"><decl pos:start="1:17" pos:end="1:28"><type pos:start="1:17" pos:end="1:28"><name pos:start="1:17" pos:end="1:20">void</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:28">optctx</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">opt</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:36">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">AVOption</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">o</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">consumed</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:26"><name pos:start="9:10" pos:end="9:21">opt_stripped</name><index pos:start="9:22" pos:end="9:26">[<expr pos:start="9:23" pos:end="9:25"><literal type="number" pos:start="9:23" pos:end="9:25">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">AVClass</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">cc</name> <init pos:start="13:23" pos:end="13:43">= <expr pos:start="13:25" pos:end="13:43"><call pos:start="13:25" pos:end="13:43"><name pos:start="13:25" pos:end="13:41">avcodec_get_class</name><argument_list pos:start="13:42" pos:end="13:43">()</argument_list></call></expr></init></decl>, <decl pos:start="13:46" pos:end="13:71"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:46" pos:end="13:46">*</modifier></type><name pos:start="13:47" pos:end="13:48">fc</name> <init pos:start="13:50" pos:end="13:71">= <expr pos:start="13:52" pos:end="13:71"><call pos:start="13:52" pos:end="13:71"><name pos:start="13:52" pos:end="13:69">avformat_get_class</name><argument_list pos:start="13:70" pos:end="13:71">()</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="15:1" pos:end="15:21">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:21">CONFIG_AVRESAMPLE</name></expr></cpp:if>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:46"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">AVClass</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:21">rc</name> <init pos:start="17:23" pos:end="17:46">= <expr pos:start="17:25" pos:end="17:46"><call pos:start="17:25" pos:end="17:46"><name pos:start="17:25" pos:end="17:44">avresample_get_class</name><argument_list pos:start="17:45" pos:end="17:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">AVClass</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:21">sc</name></decl>, <decl pos:start="21:24" pos:end="21:33"><type ref="prev" pos:start="21:5" pos:end="21:19"><modifier pos:start="21:24" pos:end="21:24">*</modifier></type><name pos:start="21:25" pos:end="21:33">swr_class</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:39"><if pos:start="25:5" pos:end="27:39">if <condition pos:start="25:8" pos:end="25:56">(<expr pos:start="25:9" pos:end="25:55"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:29"><name pos:start="25:10" pos:end="25:15">strcmp</name><argument_list pos:start="25:16" pos:end="25:29">(<argument pos:start="25:17" pos:end="25:19"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">opt</name></expr></argument>, <argument pos:start="25:22" pos:end="25:28"><expr pos:start="25:22" pos:end="25:28"><literal type="string" pos:start="25:22" pos:end="25:28">"debug"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:31" pos:end="25:32">||</operator> <operator pos:start="25:34" pos:end="25:34">!</operator><call pos:start="25:35" pos:end="25:55"><name pos:start="25:35" pos:end="25:40">strcmp</name><argument_list pos:start="25:41" pos:end="25:55">(<argument pos:start="25:42" pos:end="25:44"><expr pos:start="25:42" pos:end="25:44"><name pos:start="25:42" pos:end="25:44">opt</name></expr></argument>, <argument pos:start="25:47" pos:end="25:54"><expr pos:start="25:47" pos:end="25:54"><literal type="string" pos:start="25:47" pos:end="25:54">"fdebug"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:39"><block_content pos:start="27:9" pos:end="27:39">

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><call pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:24">av_log_set_level</name><argument_list pos:start="27:25" pos:end="27:38">(<argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:30"><if pos:start="31:5" pos:end="33:30">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><operator pos:start="31:9" pos:end="31:9">!</operator><operator pos:start="31:10" pos:end="31:10">(</operator><name pos:start="31:11" pos:end="31:11">p</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:30"><name pos:start="31:15" pos:end="31:20">strchr</name><argument_list pos:start="31:21" pos:end="31:30">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">opt</name></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><literal type="char" pos:start="31:27" pos:end="31:29">':'</literal></expr></argument>)</argument_list></call><operator pos:start="31:31" pos:end="31:31">)</operator></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:30"><block_content pos:start="33:9" pos:end="33:30">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:9">p</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:15">opt</name> <operator pos:start="33:17" pos:end="33:17">+</operator> <call pos:start="33:19" pos:end="33:29"><name pos:start="33:19" pos:end="33:24">strlen</name><argument_list pos:start="33:25" pos:end="33:29">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:76"><expr pos:start="35:5" pos:end="35:75"><call pos:start="35:5" pos:end="35:75"><name pos:start="35:5" pos:end="35:14">av_strlcpy</name><argument_list pos:start="35:15" pos:end="35:75">(<argument pos:start="35:16" pos:end="35:27"><expr pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:27">opt_stripped</name></expr></argument>, <argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">opt</name></expr></argument>, <argument pos:start="35:35" pos:end="35:74"><expr pos:start="35:35" pos:end="35:74"><call pos:start="35:35" pos:end="35:74"><name pos:start="35:35" pos:end="35:39">FFMIN</name><argument_list pos:start="35:40" pos:end="35:74">(<argument pos:start="35:41" pos:end="35:60"><expr pos:start="35:41" pos:end="35:60"><sizeof pos:start="35:41" pos:end="35:60">sizeof<argument_list pos:start="35:47" pos:end="35:60">(<argument pos:start="35:48" pos:end="35:59"><expr pos:start="35:48" pos:end="35:59"><name pos:start="35:48" pos:end="35:59">opt_stripped</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:63" pos:end="35:73"><expr pos:start="35:63" pos:end="35:73"><name pos:start="35:63" pos:end="35:63">p</name> <operator pos:start="35:65" pos:end="35:65">-</operator> <name pos:start="35:67" pos:end="35:69">opt</name> <operator pos:start="35:71" pos:end="35:71">+</operator> <literal type="number" pos:start="35:73" pos:end="35:73">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="45:72">(<expr pos:start="39:9" pos:end="45:71"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:10">o</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="41:73"><name pos:start="39:14" pos:end="39:21">opt_find</name><argument_list pos:start="39:22" pos:end="41:73">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:25">cc</name></expr></argument>, <argument pos:start="39:28" pos:end="39:39"><expr pos:start="39:28" pos:end="39:39"><name pos:start="39:28" pos:end="39:39">opt_stripped</name></expr></argument>, <argument pos:start="39:42" pos:end="39:45"><expr pos:start="39:42" pos:end="39:45"><name pos:start="39:42" pos:end="39:45">NULL</name></expr></argument>, <argument pos:start="39:48" pos:end="39:48"><expr pos:start="39:48" pos:end="39:48"><literal type="number" pos:start="39:48" pos:end="39:48">0</literal></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:72"><expr pos:start="41:26" pos:end="41:72"><name pos:start="41:26" pos:end="41:47">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="41:49" pos:end="41:49">|</operator> <name pos:start="41:51" pos:end="41:72">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="41:74" pos:end="41:74">)</operator> <operator pos:start="41:76" pos:end="41:77">||</operator>

        <operator pos:start="43:9" pos:end="43:9">(</operator><operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:16"><name pos:start="43:11" pos:end="43:13">opt</name><index pos:start="43:14" pos:end="43:16">[<expr pos:start="43:15" pos:end="43:15"><literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>]</index></name> <operator pos:start="43:18" pos:end="43:19">==</operator> <literal type="char" pos:start="43:21" pos:end="43:23">'v'</literal> <operator pos:start="43:25" pos:end="43:26">||</operator> <name pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:30">opt</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><literal type="number" pos:start="43:32" pos:end="43:32">0</literal></expr>]</index></name> <operator pos:start="43:35" pos:end="43:36">==</operator> <literal type="char" pos:start="43:38" pos:end="43:40">'a'</literal> <operator pos:start="43:42" pos:end="43:43">||</operator> <name pos:start="43:45" pos:end="43:50"><name pos:start="43:45" pos:end="43:47">opt</name><index pos:start="43:48" pos:end="43:50">[<expr pos:start="43:49" pos:end="43:49"><literal type="number" pos:start="43:49" pos:end="43:49">0</literal></expr>]</index></name> <operator pos:start="43:52" pos:end="43:53">==</operator> <literal type="char" pos:start="43:55" pos:end="43:57">'s'</literal><operator pos:start="43:58" pos:end="43:58">)</operator> <operator pos:start="43:60" pos:end="43:61">&amp;&amp;</operator>

         <operator pos:start="45:10" pos:end="45:10">(</operator><name pos:start="45:11" pos:end="45:11">o</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:69"><name pos:start="45:15" pos:end="45:22">opt_find</name><argument_list pos:start="45:23" pos:end="45:69">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><operator pos:start="45:24" pos:end="45:24">&amp;</operator><name pos:start="45:25" pos:end="45:26">cc</name></expr></argument>, <argument pos:start="45:29" pos:end="45:35"><expr pos:start="45:29" pos:end="45:35"><name pos:start="45:29" pos:end="45:31">opt</name> <operator pos:start="45:33" pos:end="45:33">+</operator> <literal type="number" pos:start="45:35" pos:end="45:35">1</literal></expr></argument>, <argument pos:start="45:38" pos:end="45:41"><expr pos:start="45:38" pos:end="45:41"><name pos:start="45:38" pos:end="45:41">NULL</name></expr></argument>, <argument pos:start="45:44" pos:end="45:44"><expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">0</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:68"><expr pos:start="45:47" pos:end="45:68"><name pos:start="45:47" pos:end="45:68">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="45:70" pos:end="45:70">)</operator><operator pos:start="45:71" pos:end="45:71">)</operator></expr>)</condition> <block pos:start="45:74" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:21">

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><call pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:19">av_dict_set</name><argument_list pos:start="47:20" pos:end="47:49">(<argument pos:start="47:21" pos:end="47:31"><expr pos:start="47:21" pos:end="47:31"><operator pos:start="47:21" pos:end="47:21">&amp;</operator><name pos:start="47:22" pos:end="47:31">codec_opts</name></expr></argument>, <argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">opt</name></expr></argument>, <argument pos:start="47:39" pos:end="47:41"><expr pos:start="47:39" pos:end="47:41"><name pos:start="47:39" pos:end="47:41">arg</name></expr></argument>, <argument pos:start="47:44" pos:end="47:48"><expr pos:start="47:44" pos:end="47:48"><name pos:start="47:44" pos:end="47:48">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:16">consumed</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="68:0"><if pos:start="53:5" pos:end="68:0">if <condition pos:start="53:8" pos:end="55:75">(<expr pos:start="53:9" pos:end="55:74"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:10">o</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="55:73"><name pos:start="53:14" pos:end="53:21">opt_find</name><argument_list pos:start="53:22" pos:end="55:73">(<argument pos:start="53:23" pos:end="53:25"><expr pos:start="53:23" pos:end="53:25"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:25">fc</name></expr></argument>, <argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:30">opt</name></expr></argument>, <argument pos:start="53:33" pos:end="53:36"><expr pos:start="53:33" pos:end="53:36"><name pos:start="53:33" pos:end="53:36">NULL</name></expr></argument>, <argument pos:start="53:39" pos:end="53:39"><expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">0</literal></expr></argument>,

                         <argument pos:start="55:26" pos:end="55:72"><expr pos:start="55:26" pos:end="55:72"><name pos:start="55:26" pos:end="55:47">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="55:49" pos:end="55:49">|</operator> <name pos:start="55:51" pos:end="55:72">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="55:74" pos:end="55:74">)</operator></expr>)</condition> <block pos:start="55:77" pos:end="68:0">{<block_content pos:start="57:9" pos:end="63:21">

        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><call pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:19">av_dict_set</name><argument_list pos:start="57:20" pos:end="57:50">(<argument pos:start="57:21" pos:end="57:32"><expr pos:start="57:21" pos:end="57:32"><operator pos:start="57:21" pos:end="57:21">&amp;</operator><name pos:start="57:22" pos:end="57:32">format_opts</name></expr></argument>, <argument pos:start="57:35" pos:end="57:37"><expr pos:start="57:35" pos:end="57:37"><name pos:start="57:35" pos:end="57:37">opt</name></expr></argument>, <argument pos:start="57:40" pos:end="57:42"><expr pos:start="57:40" pos:end="57:42"><name pos:start="57:40" pos:end="57:42">arg</name></expr></argument>, <argument pos:start="57:45" pos:end="57:49"><expr pos:start="57:45" pos:end="57:49"><name pos:start="57:45" pos:end="57:49">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:99"><if pos:start="59:9" pos:end="61:99">if <condition pos:start="59:12" pos:end="59:21">(<expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:20">consumed</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:99"><block_content pos:start="61:13" pos:end="61:99">

            <expr_stmt pos:start="61:13" pos:end="61:99"><expr pos:start="61:13" pos:end="61:98"><call pos:start="61:13" pos:end="61:98"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:98">(<argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">NULL</name></expr></argument>, <argument pos:start="61:26" pos:end="61:39"><expr pos:start="61:26" pos:end="61:39"><name pos:start="61:26" pos:end="61:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="61:42" pos:end="61:92"><expr pos:start="61:42" pos:end="61:92"><literal type="string" pos:start="61:42" pos:end="61:92">"Routing option %s to both codec and muxer layer\n"</literal></expr></argument>, <argument pos:start="61:95" pos:end="61:97"><expr pos:start="61:95" pos:end="61:97"><name pos:start="61:95" pos:end="61:97">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:16">consumed</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="67:1" pos:end="67:18">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:18">CONFIG_SWSCALE</name></expr></cpp:if>

    <expr_stmt pos:start="69:5" pos:end="69:25"><expr pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:6">sc</name> <operator pos:start="69:8" pos:end="69:8">=</operator> <call pos:start="69:10" pos:end="69:24"><name pos:start="69:10" pos:end="69:22">sws_get_class</name><argument_list pos:start="69:23" pos:end="69:24">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="112:0"><if pos:start="71:5" pos:end="112:0">if <condition pos:start="71:8" pos:end="73:75">(<expr pos:start="71:9" pos:end="73:74"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:17">consumed</name> <operator pos:start="71:19" pos:end="71:20">&amp;&amp;</operator> <operator pos:start="71:22" pos:end="71:22">(</operator><name pos:start="71:23" pos:end="71:23">o</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="73:73"><name pos:start="71:27" pos:end="71:34">opt_find</name><argument_list pos:start="71:35" pos:end="73:73">(<argument pos:start="71:36" pos:end="71:38"><expr pos:start="71:36" pos:end="71:38"><operator pos:start="71:36" pos:end="71:36">&amp;</operator><name pos:start="71:37" pos:end="71:38">sc</name></expr></argument>, <argument pos:start="71:41" pos:end="71:43"><expr pos:start="71:41" pos:end="71:43"><name pos:start="71:41" pos:end="71:43">opt</name></expr></argument>, <argument pos:start="71:46" pos:end="71:49"><expr pos:start="71:46" pos:end="71:49"><name pos:start="71:46" pos:end="71:49">NULL</name></expr></argument>, <argument pos:start="71:52" pos:end="71:52"><expr pos:start="71:52" pos:end="71:52"><literal type="number" pos:start="71:52" pos:end="71:52">0</literal></expr></argument>,

                         <argument pos:start="73:26" pos:end="73:72"><expr pos:start="73:26" pos:end="73:72"><name pos:start="73:26" pos:end="73:47">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="73:49" pos:end="73:49">|</operator> <name pos:start="73:51" pos:end="73:72">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="73:74" pos:end="73:74">)</operator></expr>)</condition> <block pos:start="73:77" pos:end="112:0">{<block_content pos:start="75:9" pos:end="107:21">

        <decl_stmt pos:start="75:9" pos:end="75:53"><decl pos:start="75:9" pos:end="75:52"><type pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:14">struct</name> <name pos:start="75:16" pos:end="75:25">SwsContext</name></name> <modifier pos:start="75:27" pos:end="75:27">*</modifier></type><name pos:start="75:28" pos:end="75:30">sws</name> <init pos:start="75:32" pos:end="75:52">= <expr pos:start="75:34" pos:end="75:52"><call pos:start="75:34" pos:end="75:52"><name pos:start="75:34" pos:end="75:50">sws_alloc_context</name><argument_list pos:start="75:51" pos:end="75:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:47"><decl pos:start="77:9" pos:end="77:46"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:15">ret</name> <init pos:start="77:17" pos:end="77:46">= <expr pos:start="77:19" pos:end="77:46"><call pos:start="77:19" pos:end="77:46"><name pos:start="77:19" pos:end="77:28">av_opt_set</name><argument_list pos:start="77:29" pos:end="77:46">(<argument pos:start="77:30" pos:end="77:32"><expr pos:start="77:30" pos:end="77:32"><name pos:start="77:30" pos:end="77:32">sws</name></expr></argument>, <argument pos:start="77:35" pos:end="77:37"><expr pos:start="77:35" pos:end="77:37"><name pos:start="77:35" pos:end="77:37">opt</name></expr></argument>, <argument pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:42">arg</name></expr></argument>, <argument pos:start="77:45" pos:end="77:45"><expr pos:start="77:45" pos:end="77:45"><literal type="number" pos:start="77:45" pos:end="77:45">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><call pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:23">sws_freeContext</name><argument_list pos:start="79:24" pos:end="79:28">(<argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><name pos:start="79:25" pos:end="79:27">sws</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="91:9"><if pos:start="81:9" pos:end="91:9">if <condition pos:start="81:12" pos:end="85:69">(<expr pos:start="81:13" pos:end="85:68"><operator pos:start="81:13" pos:end="81:13">!</operator><call pos:start="81:14" pos:end="81:32"><name pos:start="81:14" pos:end="81:19">strcmp</name><argument_list pos:start="81:20" pos:end="81:32">(<argument pos:start="81:21" pos:end="81:23"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">opt</name></expr></argument>, <argument pos:start="81:26" pos:end="81:31"><expr pos:start="81:26" pos:end="81:31"><literal type="string" pos:start="81:26" pos:end="81:31">"srcw"</literal></expr></argument>)</argument_list></call> <operator pos:start="81:34" pos:end="81:35">||</operator> <operator pos:start="81:37" pos:end="81:37">!</operator><call pos:start="81:38" pos:end="81:56"><name pos:start="81:38" pos:end="81:43">strcmp</name><argument_list pos:start="81:44" pos:end="81:56">(<argument pos:start="81:45" pos:end="81:47"><expr pos:start="81:45" pos:end="81:47"><name pos:start="81:45" pos:end="81:47">opt</name></expr></argument>, <argument pos:start="81:50" pos:end="81:55"><expr pos:start="81:50" pos:end="81:55"><literal type="string" pos:start="81:50" pos:end="81:55">"srch"</literal></expr></argument>)</argument_list></call> <operator pos:start="81:58" pos:end="81:59">||</operator>

            <operator pos:start="83:13" pos:end="83:13">!</operator><call pos:start="83:14" pos:end="83:32"><name pos:start="83:14" pos:end="83:19">strcmp</name><argument_list pos:start="83:20" pos:end="83:32">(<argument pos:start="83:21" pos:end="83:23"><expr pos:start="83:21" pos:end="83:23"><name pos:start="83:21" pos:end="83:23">opt</name></expr></argument>, <argument pos:start="83:26" pos:end="83:31"><expr pos:start="83:26" pos:end="83:31"><literal type="string" pos:start="83:26" pos:end="83:31">"dstw"</literal></expr></argument>)</argument_list></call> <operator pos:start="83:34" pos:end="83:35">||</operator> <operator pos:start="83:37" pos:end="83:37">!</operator><call pos:start="83:38" pos:end="83:56"><name pos:start="83:38" pos:end="83:43">strcmp</name><argument_list pos:start="83:44" pos:end="83:56">(<argument pos:start="83:45" pos:end="83:47"><expr pos:start="83:45" pos:end="83:47"><name pos:start="83:45" pos:end="83:47">opt</name></expr></argument>, <argument pos:start="83:50" pos:end="83:55"><expr pos:start="83:50" pos:end="83:55"><literal type="string" pos:start="83:50" pos:end="83:55">"dsth"</literal></expr></argument>)</argument_list></call> <operator pos:start="83:58" pos:end="83:59">||</operator>

            <operator pos:start="85:13" pos:end="85:13">!</operator><call pos:start="85:14" pos:end="85:38"><name pos:start="85:14" pos:end="85:19">strcmp</name><argument_list pos:start="85:20" pos:end="85:38">(<argument pos:start="85:21" pos:end="85:23"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">opt</name></expr></argument>, <argument pos:start="85:26" pos:end="85:37"><expr pos:start="85:26" pos:end="85:37"><literal type="string" pos:start="85:26" pos:end="85:37">"src_format"</literal></expr></argument>)</argument_list></call> <operator pos:start="85:40" pos:end="85:41">||</operator> <operator pos:start="85:43" pos:end="85:43">!</operator><call pos:start="85:44" pos:end="85:68"><name pos:start="85:44" pos:end="85:49">strcmp</name><argument_list pos:start="85:50" pos:end="85:68">(<argument pos:start="85:51" pos:end="85:53"><expr pos:start="85:51" pos:end="85:53"><name pos:start="85:51" pos:end="85:53">opt</name></expr></argument>, <argument pos:start="85:56" pos:end="85:67"><expr pos:start="85:56" pos:end="85:67"><literal type="string" pos:start="85:56" pos:end="85:67">"dst_format"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:71" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:35">

            <expr_stmt pos:start="87:13" pos:end="87:149"><expr pos:start="87:13" pos:end="87:148"><call pos:start="87:13" pos:end="87:148"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:148">(<argument pos:start="87:20" pos:end="87:23"><expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">NULL</name></expr></argument>, <argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:40" pos:end="87:147"><expr pos:start="87:40" pos:end="87:147"><literal type="string" pos:start="87:40" pos:end="87:147">"Directly using swscale dimensions/format options is not supported, please use the -s or -pix_fmt options\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:35">return <expr pos:start="89:20" pos:end="89:34"><call pos:start="89:20" pos:end="89:34"><name pos:start="89:20" pos:end="89:26">AVERROR</name><argument_list pos:start="89:27" pos:end="89:34">(<argument pos:start="89:28" pos:end="89:33"><expr pos:start="89:28" pos:end="89:33"><name pos:start="89:28" pos:end="89:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:17">&lt;</operator> <literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr>)</condition> <block pos:start="93:22" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:23">

            <expr_stmt pos:start="95:13" pos:end="95:74"><expr pos:start="95:13" pos:end="95:73"><call pos:start="95:13" pos:end="95:73"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="95:73">(<argument pos:start="95:20" pos:end="95:23"><expr pos:start="95:20" pos:end="95:23"><name pos:start="95:20" pos:end="95:23">NULL</name></expr></argument>, <argument pos:start="95:26" pos:end="95:37"><expr pos:start="95:26" pos:end="95:37"><name pos:start="95:26" pos:end="95:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:40" pos:end="95:67"><expr pos:start="95:40" pos:end="95:67"><literal type="string" pos:start="95:40" pos:end="95:67">"Error setting option %s.\n"</literal></expr></argument>, <argument pos:start="95:70" pos:end="95:72"><expr pos:start="95:70" pos:end="95:72"><name pos:start="95:70" pos:end="95:72">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:23">return <expr pos:start="97:20" pos:end="97:22"><name pos:start="97:20" pos:end="97:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:48"><expr pos:start="103:9" pos:end="103:47"><call pos:start="103:9" pos:end="103:47"><name pos:start="103:9" pos:end="103:19">av_dict_set</name><argument_list pos:start="103:20" pos:end="103:47">(<argument pos:start="103:21" pos:end="103:29"><expr pos:start="103:21" pos:end="103:29"><operator pos:start="103:21" pos:end="103:21">&amp;</operator><name pos:start="103:22" pos:end="103:29">sws_dict</name></expr></argument>, <argument pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><name pos:start="103:32" pos:end="103:34">opt</name></expr></argument>, <argument pos:start="103:37" pos:end="103:39"><expr pos:start="103:37" pos:end="103:39"><name pos:start="103:37" pos:end="103:39">arg</name></expr></argument>, <argument pos:start="103:42" pos:end="103:46"><expr pos:start="103:42" pos:end="103:46"><name pos:start="103:42" pos:end="103:46">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:21"><expr pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:16">consumed</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <literal type="number" pos:start="107:20" pos:end="107:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:else pos:start="111:1" pos:end="111:5">#<cpp:directive pos:start="111:2" pos:end="111:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="113:5" pos:end="124:0"><if pos:start="113:5" pos:end="124:0">if <condition pos:start="113:8" pos:end="113:47">(<expr pos:start="113:9" pos:end="113:46"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:17">consumed</name> <operator pos:start="113:19" pos:end="113:20">&amp;&amp;</operator> <operator pos:start="113:22" pos:end="113:22">!</operator><call pos:start="113:23" pos:end="113:46"><name pos:start="113:23" pos:end="113:28">strcmp</name><argument_list pos:start="113:29" pos:end="113:46">(<argument pos:start="113:30" pos:end="113:32"><expr pos:start="113:30" pos:end="113:32"><name pos:start="113:30" pos:end="113:32">opt</name></expr></argument>, <argument pos:start="113:35" pos:end="113:45"><expr pos:start="113:35" pos:end="113:45"><literal type="string" pos:start="113:35" pos:end="113:45">"sws_flags"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:49" pos:end="124:0">{<block_content pos:start="115:9" pos:end="117:21">

        <expr_stmt pos:start="115:9" pos:end="115:92"><expr pos:start="115:9" pos:end="115:91"><call pos:start="115:9" pos:end="115:91"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="115:91">(<argument pos:start="115:16" pos:end="115:19"><expr pos:start="115:16" pos:end="115:19"><name pos:start="115:16" pos:end="115:19">NULL</name></expr></argument>, <argument pos:start="115:22" pos:end="115:35"><expr pos:start="115:22" pos:end="115:35"><name pos:start="115:22" pos:end="115:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="115:38" pos:end="115:80"><expr pos:start="115:38" pos:end="115:80"><literal type="string" pos:start="115:38" pos:end="115:80">"Ignoring %s %s, due to disabled swscale\n"</literal></expr></argument>, <argument pos:start="115:83" pos:end="115:85"><expr pos:start="115:83" pos:end="115:85"><name pos:start="115:83" pos:end="115:85">opt</name></expr></argument>, <argument pos:start="115:88" pos:end="115:90"><expr pos:start="115:88" pos:end="115:90"><name pos:start="115:88" pos:end="115:90">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:21"><expr pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:16">consumed</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <literal type="number" pos:start="117:20" pos:end="117:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="123:1" pos:end="123:21">#<cpp:directive pos:start="123:2" pos:end="123:3">if</cpp:directive> <expr pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:21">CONFIG_SWRESAMPLE</name></expr></cpp:if>

    <expr_stmt pos:start="125:5" pos:end="125:32"><expr pos:start="125:5" pos:end="125:31"><name pos:start="125:5" pos:end="125:13">swr_class</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <call pos:start="125:17" pos:end="125:31"><name pos:start="125:17" pos:end="125:29">swr_get_class</name><argument_list pos:start="125:30" pos:end="125:31">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="154:0"><if pos:start="127:5" pos:end="154:0">if <condition pos:start="127:8" pos:end="129:86">(<expr pos:start="127:9" pos:end="129:85"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:17">consumed</name> <operator pos:start="127:19" pos:end="127:20">&amp;&amp;</operator> <operator pos:start="127:22" pos:end="127:22">(</operator><name pos:start="127:23" pos:end="127:23">o</name><operator pos:start="127:24" pos:end="127:24">=</operator><call pos:start="127:25" pos:end="129:84"><name pos:start="127:25" pos:end="127:32">opt_find</name><argument_list pos:start="127:33" pos:end="129:84">(<argument pos:start="127:34" pos:end="127:43"><expr pos:start="127:34" pos:end="127:43"><operator pos:start="127:34" pos:end="127:34">&amp;</operator><name pos:start="127:35" pos:end="127:43">swr_class</name></expr></argument>, <argument pos:start="127:46" pos:end="127:48"><expr pos:start="127:46" pos:end="127:48"><name pos:start="127:46" pos:end="127:48">opt</name></expr></argument>, <argument pos:start="127:51" pos:end="127:54"><expr pos:start="127:51" pos:end="127:54"><name pos:start="127:51" pos:end="127:54">NULL</name></expr></argument>, <argument pos:start="127:57" pos:end="127:57"><expr pos:start="127:57" pos:end="127:57"><literal type="number" pos:start="127:57" pos:end="127:57">0</literal></expr></argument>,

                                    <argument pos:start="129:37" pos:end="129:83"><expr pos:start="129:37" pos:end="129:83"><name pos:start="129:37" pos:end="129:58">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="129:60" pos:end="129:60">|</operator> <name pos:start="129:62" pos:end="129:83">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="129:85" pos:end="129:85">)</operator></expr>)</condition> <block pos:start="129:88" pos:end="154:0">{<block_content pos:start="131:9" pos:end="147:21">

        <decl_stmt pos:start="131:9" pos:end="131:45"><decl pos:start="131:9" pos:end="131:44"><type pos:start="131:9" pos:end="131:27"><name pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:14">struct</name> <name pos:start="131:16" pos:end="131:25">SwrContext</name></name> <modifier pos:start="131:27" pos:end="131:27">*</modifier></type><name pos:start="131:28" pos:end="131:30">swr</name> <init pos:start="131:32" pos:end="131:44">= <expr pos:start="131:34" pos:end="131:44"><call pos:start="131:34" pos:end="131:44"><name pos:start="131:34" pos:end="131:42">swr_alloc</name><argument_list pos:start="131:43" pos:end="131:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:47"><decl pos:start="133:9" pos:end="133:46"><type pos:start="133:9" pos:end="133:11"><name pos:start="133:9" pos:end="133:11">int</name></type> <name pos:start="133:13" pos:end="133:15">ret</name> <init pos:start="133:17" pos:end="133:46">= <expr pos:start="133:19" pos:end="133:46"><call pos:start="133:19" pos:end="133:46"><name pos:start="133:19" pos:end="133:28">av_opt_set</name><argument_list pos:start="133:29" pos:end="133:46">(<argument pos:start="133:30" pos:end="133:32"><expr pos:start="133:30" pos:end="133:32"><name pos:start="133:30" pos:end="133:32">swr</name></expr></argument>, <argument pos:start="133:35" pos:end="133:37"><expr pos:start="133:35" pos:end="133:37"><name pos:start="133:35" pos:end="133:37">opt</name></expr></argument>, <argument pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:42">arg</name></expr></argument>, <argument pos:start="133:45" pos:end="133:45"><expr pos:start="133:45" pos:end="133:45"><literal type="number" pos:start="133:45" pos:end="133:45">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:23"><expr pos:start="135:9" pos:end="135:22"><call pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:16">swr_free</name><argument_list pos:start="135:17" pos:end="135:22">(<argument pos:start="135:18" pos:end="135:21"><expr pos:start="135:18" pos:end="135:21"><operator pos:start="135:18" pos:end="135:18">&amp;</operator><name pos:start="135:19" pos:end="135:21">swr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if <condition pos:start="137:12" pos:end="137:20">(<expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">&lt;</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>)</condition> <block pos:start="137:22" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:23">

            <expr_stmt pos:start="139:13" pos:end="139:74"><expr pos:start="139:13" pos:end="139:73"><call pos:start="139:13" pos:end="139:73"><name pos:start="139:13" pos:end="139:18">av_log</name><argument_list pos:start="139:19" pos:end="139:73">(<argument pos:start="139:20" pos:end="139:23"><expr pos:start="139:20" pos:end="139:23"><name pos:start="139:20" pos:end="139:23">NULL</name></expr></argument>, <argument pos:start="139:26" pos:end="139:37"><expr pos:start="139:26" pos:end="139:37"><name pos:start="139:26" pos:end="139:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:40" pos:end="139:67"><expr pos:start="139:40" pos:end="139:67"><literal type="string" pos:start="139:40" pos:end="139:67">"Error setting option %s.\n"</literal></expr></argument>, <argument pos:start="139:70" pos:end="139:72"><expr pos:start="139:70" pos:end="139:72"><name pos:start="139:70" pos:end="139:72">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="141:13" pos:end="141:23">return <expr pos:start="141:20" pos:end="141:22"><name pos:start="141:20" pos:end="141:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:48"><expr pos:start="145:9" pos:end="145:47"><call pos:start="145:9" pos:end="145:47"><name pos:start="145:9" pos:end="145:19">av_dict_set</name><argument_list pos:start="145:20" pos:end="145:47">(<argument pos:start="145:21" pos:end="145:29"><expr pos:start="145:21" pos:end="145:29"><operator pos:start="145:21" pos:end="145:21">&amp;</operator><name pos:start="145:22" pos:end="145:29">swr_opts</name></expr></argument>, <argument pos:start="145:32" pos:end="145:34"><expr pos:start="145:32" pos:end="145:34"><name pos:start="145:32" pos:end="145:34">opt</name></expr></argument>, <argument pos:start="145:37" pos:end="145:39"><expr pos:start="145:37" pos:end="145:39"><name pos:start="145:37" pos:end="145:39">arg</name></expr></argument>, <argument pos:start="145:42" pos:end="145:46"><expr pos:start="145:42" pos:end="145:46"><name pos:start="145:42" pos:end="145:46">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:21"><expr pos:start="147:9" pos:end="147:20"><name pos:start="147:9" pos:end="147:16">consumed</name> <operator pos:start="147:18" pos:end="147:18">=</operator> <literal type="number" pos:start="147:20" pos:end="147:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="153:1" pos:end="153:21">#<cpp:directive pos:start="153:2" pos:end="153:3">if</cpp:directive> <expr pos:start="153:5" pos:end="153:21"><name pos:start="153:5" pos:end="153:21">CONFIG_AVRESAMPLE</name></expr></cpp:if>

    <if_stmt pos:start="155:5" pos:end="166:0"><if pos:start="155:5" pos:end="166:0">if <condition pos:start="155:8" pos:end="157:73">(<expr pos:start="155:9" pos:end="157:72"><operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:10">o</name><operator pos:start="155:11" pos:end="155:11">=</operator><call pos:start="155:12" pos:end="157:71"><name pos:start="155:12" pos:end="155:19">opt_find</name><argument_list pos:start="155:20" pos:end="157:71">(<argument pos:start="155:21" pos:end="155:23"><expr pos:start="155:21" pos:end="155:23"><operator pos:start="155:21" pos:end="155:21">&amp;</operator><name pos:start="155:22" pos:end="155:23">rc</name></expr></argument>, <argument pos:start="155:26" pos:end="155:28"><expr pos:start="155:26" pos:end="155:28"><name pos:start="155:26" pos:end="155:28">opt</name></expr></argument>, <argument pos:start="155:31" pos:end="155:34"><expr pos:start="155:31" pos:end="155:34"><name pos:start="155:31" pos:end="155:34">NULL</name></expr></argument>, <argument pos:start="155:37" pos:end="155:37"><expr pos:start="155:37" pos:end="155:37"><literal type="number" pos:start="155:37" pos:end="155:37">0</literal></expr></argument>,

                       <argument pos:start="157:24" pos:end="157:70"><expr pos:start="157:24" pos:end="157:70"><name pos:start="157:24" pos:end="157:45">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="157:47" pos:end="157:47">|</operator> <name pos:start="157:49" pos:end="157:70">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="157:72" pos:end="157:72">)</operator></expr>)</condition> <block pos:start="157:75" pos:end="166:0">{<block_content pos:start="159:9" pos:end="161:21">

        <expr_stmt pos:start="159:9" pos:end="159:53"><expr pos:start="159:9" pos:end="159:52"><call pos:start="159:9" pos:end="159:52"><name pos:start="159:9" pos:end="159:19">av_dict_set</name><argument_list pos:start="159:20" pos:end="159:52">(<argument pos:start="159:21" pos:end="159:34"><expr pos:start="159:21" pos:end="159:34"><operator pos:start="159:21" pos:end="159:21">&amp;</operator><name pos:start="159:22" pos:end="159:34">resample_opts</name></expr></argument>, <argument pos:start="159:37" pos:end="159:39"><expr pos:start="159:37" pos:end="159:39"><name pos:start="159:37" pos:end="159:39">opt</name></expr></argument>, <argument pos:start="159:42" pos:end="159:44"><expr pos:start="159:42" pos:end="159:44"><name pos:start="159:42" pos:end="159:44">arg</name></expr></argument>, <argument pos:start="159:47" pos:end="159:51"><expr pos:start="159:47" pos:end="159:51"><name pos:start="159:47" pos:end="159:51">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:21"><expr pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:16">consumed</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <literal type="number" pos:start="161:20" pos:end="161:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="169:5" pos:end="171:17"><if pos:start="169:5" pos:end="171:17">if <condition pos:start="169:8" pos:end="169:17">(<expr pos:start="169:9" pos:end="169:16"><name pos:start="169:9" pos:end="169:16">consumed</name></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:17"><block_content pos:start="171:9" pos:end="171:17">

        <return pos:start="171:9" pos:end="171:17">return <expr pos:start="171:16" pos:end="171:16"><literal type="number" pos:start="171:16" pos:end="171:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="173:5" pos:end="173:36">return <expr pos:start="173:12" pos:end="173:35"><name pos:start="173:12" pos:end="173:35">AVERROR_OPTION_NOT_FOUND</name></expr>;</return>

</block_content>}</block></function>
</unit>
