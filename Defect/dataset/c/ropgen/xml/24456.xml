<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24456.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:40"><name pos:start="1:1" pos:end="1:24">pvscsi_update_irq_status</name><argument_list pos:start="1:25" pos:end="1:40">(<argument pos:start="1:26" pos:end="1:39">PVSCSIState *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:35">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name> <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><call pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:29">PCI_DEVICE</name><argument_list pos:start="5:30" pos:end="5:32">(<argument pos:start="5:31" pos:end="5:31"><expr pos:start="5:31" pos:end="5:31"><name pos:start="5:31" pos:end="5:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:74"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:21">should_raise</name> <init pos:start="7:23" pos:end="7:74">= <expr pos:start="7:25" pos:end="7:74"><name pos:start="7:25" pos:end="7:48"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:48">reg_interrupt_enabled</name></name> <operator pos:start="7:50" pos:end="7:50">&amp;</operator> <name pos:start="7:52" pos:end="7:74"><name pos:start="7:52" pos:end="7:52">s</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:74">reg_interrupt_status</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:59"><expr pos:start="11:5" pos:end="13:58"><call pos:start="11:5" pos:end="13:58"><name pos:start="11:5" pos:end="11:33">trace_pvscsi_update_irq_level</name><argument_list pos:start="11:34" pos:end="13:58">(<argument pos:start="11:35" pos:end="11:46"><expr pos:start="11:35" pos:end="11:46"><name pos:start="11:35" pos:end="11:46">should_raise</name></expr></argument>, <argument pos:start="11:49" pos:end="11:72"><expr pos:start="11:49" pos:end="11:72"><name pos:start="11:49" pos:end="11:72"><name pos:start="11:49" pos:end="11:49">s</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:72">reg_interrupt_enabled</name></name></expr></argument>,

                                  <argument pos:start="13:35" pos:end="13:57"><expr pos:start="13:35" pos:end="13:57"><name pos:start="13:35" pos:end="13:57"><name pos:start="13:35" pos:end="13:35">s</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:57">reg_interrupt_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:19">msi_used</name></name> <operator pos:start="17:21" pos:end="17:22">&amp;&amp;</operator> <call pos:start="17:24" pos:end="17:37"><name pos:start="17:24" pos:end="17:34">msi_enabled</name><argument_list pos:start="17:35" pos:end="17:37">(<argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><name pos:start="17:36" pos:end="17:36">d</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:40" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:15">

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:25">(<expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:24">should_raise</name></expr>)</condition> <block pos:start="19:27" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:52">

            <expr_stmt pos:start="21:13" pos:end="21:42"><expr pos:start="21:13" pos:end="21:41"><call pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:39">trace_pvscsi_update_irq_msi</name><argument_list pos:start="21:40" pos:end="21:41">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:52"><expr pos:start="23:13" pos:end="23:51"><call pos:start="23:13" pos:end="23:51"><name pos:start="23:13" pos:end="23:22">msi_notify</name><argument_list pos:start="23:23" pos:end="23:51">(<argument pos:start="23:24" pos:end="23:24"><expr pos:start="23:24" pos:end="23:24"><name pos:start="23:24" pos:end="23:24">d</name></expr></argument>, <argument pos:start="23:27" pos:end="23:50"><expr pos:start="23:27" pos:end="23:50"><name pos:start="23:27" pos:end="23:50">PVSCSI_VECTOR_COMPLETION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:15">pci_set_irq</name><argument_list pos:start="33:16" pos:end="33:34">(<argument pos:start="33:17" pos:end="33:17"><expr pos:start="33:17" pos:end="33:17"><name pos:start="33:17" pos:end="33:17">d</name></expr></argument>, <argument pos:start="33:20" pos:end="33:33"><expr pos:start="33:20" pos:end="33:33"><operator pos:start="33:20" pos:end="33:20">!</operator><operator pos:start="33:21" pos:end="33:21">!</operator><name pos:start="33:22" pos:end="33:33">should_raise</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
