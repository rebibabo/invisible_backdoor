<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22823.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">pps_range_extensions</name><parameter_list pos:start="1:32" pos:end="3:59">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:45">GetBitContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">gb</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:72"><name pos:start="1:52" pos:end="1:65">AVCodecContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">avctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:39">HEVCPPS</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">pps</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:58"><decl pos:start="3:47" pos:end="3:58"><type pos:start="3:47" pos:end="3:58"><name pos:start="3:47" pos:end="3:53">HEVCSPS</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:58">sps</name></decl></parameter>)</parameter_list> <block pos:start="3:61" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:14">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:41">(<expr pos:start="9:9" pos:end="9:40"><name pos:start="9:9" pos:end="9:40"><name pos:start="9:9" pos:end="9:11">pps</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:40">transform_skip_enabled_flag</name></name></expr>)</condition> <block pos:start="9:43" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:77">

        <expr_stmt pos:start="11:9" pos:end="11:77"><expr pos:start="11:9" pos:end="11:76"><name pos:start="11:9" pos:end="11:47"><name pos:start="11:9" pos:end="11:11">pps</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:47">log2_max_transform_skip_block_size</name></name> <operator pos:start="11:49" pos:end="11:49">=</operator> <call pos:start="11:51" pos:end="11:72"><name pos:start="11:51" pos:end="11:68">get_ue_golomb_long</name><argument_list pos:start="11:69" pos:end="11:72">(<argument pos:start="11:70" pos:end="11:71"><expr pos:start="11:70" pos:end="11:71"><name pos:start="11:70" pos:end="11:71">gb</name></expr></argument>)</argument_list></call> <operator pos:start="11:74" pos:end="11:74">+</operator> <literal type="number" pos:start="11:76" pos:end="11:76">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:65"><expr pos:start="15:5" pos:end="15:64"><name pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:7">pps</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:48">cross_component_prediction_enabled_flag</name></name> <operator pos:start="15:50" pos:end="15:50">=</operator> <call pos:start="15:52" pos:end="15:64"><name pos:start="15:52" pos:end="15:60">get_bits1</name><argument_list pos:start="15:61" pos:end="15:64">(<argument pos:start="15:62" pos:end="15:63"><expr pos:start="15:62" pos:end="15:63"><name pos:start="15:62" pos:end="15:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:7">pps</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:43">chroma_qp_offset_list_enabled_flag</name></name> <operator pos:start="17:45" pos:end="17:45">=</operator> <call pos:start="17:47" pos:end="17:59"><name pos:start="17:47" pos:end="17:55">get_bits1</name><argument_list pos:start="17:56" pos:end="17:59">(<argument pos:start="17:57" pos:end="17:58"><expr pos:start="17:57" pos:end="17:58"><name pos:start="17:57" pos:end="17:58">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="59:5"><if pos:start="19:5" pos:end="59:5">if <condition pos:start="19:8" pos:end="19:48">(<expr pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:11">pps</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:47">chroma_qp_offset_list_enabled_flag</name></name></expr>)</condition> <block pos:start="19:50" pos:end="59:5">{<block_content pos:start="21:9" pos:end="57:9">

        <expr_stmt pos:start="21:9" pos:end="21:69"><expr pos:start="21:9" pos:end="21:68"><name pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:11">pps</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:43">diff_cu_chroma_qp_offset_depth</name></name> <operator pos:start="21:45" pos:end="21:45">=</operator> <call pos:start="21:47" pos:end="21:68"><name pos:start="21:47" pos:end="21:64">get_ue_golomb_long</name><argument_list pos:start="21:65" pos:end="21:68">(<argument pos:start="21:66" pos:end="21:67"><expr pos:start="21:66" pos:end="21:67"><name pos:start="21:66" pos:end="21:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:71"><expr pos:start="23:9" pos:end="23:70"><name pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:11">pps</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:45">chroma_qp_offset_list_len_minus1</name></name> <operator pos:start="23:47" pos:end="23:47">=</operator> <call pos:start="23:49" pos:end="23:70"><name pos:start="23:49" pos:end="23:66">get_ue_golomb_long</name><argument_list pos:start="23:67" pos:end="23:70">(<argument pos:start="23:68" pos:end="23:69"><expr pos:start="23:68" pos:end="23:69"><name pos:start="23:68" pos:end="23:69">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:96">(<expr pos:start="25:13" pos:end="25:95"><name pos:start="25:13" pos:end="25:49"><name pos:start="25:13" pos:end="25:15">pps</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:49">chroma_qp_offset_list_len_minus1</name></name> <operator pos:start="25:51" pos:end="25:52">&amp;&amp;</operator> <name pos:start="25:54" pos:end="25:90"><name pos:start="25:54" pos:end="25:56">pps</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:90">chroma_qp_offset_list_len_minus1</name></name> <operator pos:start="25:92" pos:end="25:93">&gt;=</operator> <literal type="number" pos:start="25:95" pos:end="25:95">5</literal></expr>)</condition> <block pos:start="25:98" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:39">

            <expr_stmt pos:start="27:13" pos:end="29:87"><expr pos:start="27:13" pos:end="29:86"><call pos:start="27:13" pos:end="29:86"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="29:86">(<argument pos:start="27:20" pos:end="27:24"><expr pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:24">avctx</name></expr></argument>, <argument pos:start="27:27" pos:end="27:38"><expr pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:85"><expr pos:start="29:20" pos:end="29:85"><literal type="string" pos:start="29:20" pos:end="29:85">"chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:39">return <expr pos:start="31:20" pos:end="31:38"><name pos:start="31:20" pos:end="31:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="35:9" pos:end="57:9">for <control pos:start="35:13" pos:end="35:68">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:63"><expr pos:start="35:21" pos:end="35:62"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:24">&lt;=</operator> <name pos:start="35:26" pos:end="35:62"><name pos:start="35:26" pos:end="35:28">pps</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:62">chroma_qp_offset_list_len_minus1</name></name></expr>;</condition> <incr pos:start="35:65" pos:end="35:67"><expr pos:start="35:65" pos:end="35:67"><name pos:start="35:65" pos:end="35:65">i</name><operator pos:start="35:66" pos:end="35:67">++</operator></expr></incr>)</control> <block pos:start="35:70" pos:end="57:9">{<block_content pos:start="37:13" pos:end="55:13">

            <expr_stmt pos:start="37:13" pos:end="37:63"><expr pos:start="37:13" pos:end="37:62"><name pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:15">pps</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:34">cb_qp_offset_list</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">i</name></expr>]</index></name> <operator pos:start="37:39" pos:end="37:39">=</operator> <call pos:start="37:41" pos:end="37:62"><name pos:start="37:41" pos:end="37:58">get_se_golomb_long</name><argument_list pos:start="37:59" pos:end="37:62">(<argument pos:start="37:60" pos:end="37:61"><expr pos:start="37:60" pos:end="37:61"><name pos:start="37:60" pos:end="37:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:42">(<expr pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:19">pps</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:38">cb_qp_offset_list</name><index pos:start="39:39" pos:end="39:41">[<expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">i</name></expr>]</index></name></expr>)</condition> <block pos:start="39:44" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:62">

                <expr_stmt pos:start="41:17" pos:end="43:62"><expr pos:start="41:17" pos:end="43:61"><call pos:start="41:17" pos:end="43:61"><name pos:start="41:17" pos:end="41:22">av_log</name><argument_list pos:start="41:23" pos:end="43:61">(<argument pos:start="41:24" pos:end="41:28"><expr pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:28">avctx</name></expr></argument>, <argument pos:start="41:31" pos:end="41:44"><expr pos:start="41:31" pos:end="41:44"><name pos:start="41:31" pos:end="41:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:60"><expr pos:start="43:24" pos:end="43:60"><literal type="string" pos:start="43:24" pos:end="43:60">"cb_qp_offset_list not tested yet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:63"><expr pos:start="47:13" pos:end="47:62"><name pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:15">pps</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:34">cr_qp_offset_list</name><index pos:start="47:35" pos:end="47:37">[<expr pos:start="47:36" pos:end="47:36"><name pos:start="47:36" pos:end="47:36">i</name></expr>]</index></name> <operator pos:start="47:39" pos:end="47:39">=</operator> <call pos:start="47:41" pos:end="47:62"><name pos:start="47:41" pos:end="47:58">get_se_golomb_long</name><argument_list pos:start="47:59" pos:end="47:62">(<argument pos:start="47:60" pos:end="47:61"><expr pos:start="47:60" pos:end="47:61"><name pos:start="47:60" pos:end="47:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="55:13"><if pos:start="49:13" pos:end="55:13">if <condition pos:start="49:16" pos:end="49:42">(<expr pos:start="49:17" pos:end="49:41"><name pos:start="49:17" pos:end="49:41"><name pos:start="49:17" pos:end="49:19">pps</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:38">cr_qp_offset_list</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">i</name></expr>]</index></name></expr>)</condition> <block pos:start="49:44" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:62">

                <expr_stmt pos:start="51:17" pos:end="53:62"><expr pos:start="51:17" pos:end="53:61"><call pos:start="51:17" pos:end="53:61"><name pos:start="51:17" pos:end="51:22">av_log</name><argument_list pos:start="51:23" pos:end="53:61">(<argument pos:start="51:24" pos:end="51:28"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:28">avctx</name></expr></argument>, <argument pos:start="51:31" pos:end="51:44"><expr pos:start="51:31" pos:end="51:44"><name pos:start="51:31" pos:end="51:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="53:24" pos:end="53:60"><expr pos:start="53:24" pos:end="53:60"><literal type="string" pos:start="53:24" pos:end="53:60">"cb_qp_offset_list not tested yet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:61"><expr pos:start="61:5" pos:end="61:60"><name pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:7">pps</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:35">log2_sao_offset_scale_luma</name></name> <operator pos:start="61:37" pos:end="61:37">=</operator> <call pos:start="61:39" pos:end="61:60"><name pos:start="61:39" pos:end="61:56">get_ue_golomb_long</name><argument_list pos:start="61:57" pos:end="61:60">(<argument pos:start="61:58" pos:end="61:59"><expr pos:start="61:58" pos:end="61:59"><name pos:start="61:58" pos:end="61:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:63"><expr pos:start="63:5" pos:end="63:62"><name pos:start="63:5" pos:end="63:37"><name pos:start="63:5" pos:end="63:7">pps</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:37">log2_sao_offset_scale_chroma</name></name> <operator pos:start="63:39" pos:end="63:39">=</operator> <call pos:start="63:41" pos:end="63:62"><name pos:start="63:41" pos:end="63:58">get_ue_golomb_long</name><argument_list pos:start="63:59" pos:end="63:62">(<argument pos:start="63:60" pos:end="63:61"><expr pos:start="63:60" pos:end="63:61"><name pos:start="63:60" pos:end="63:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:14">return<expr pos:start="67:11" pos:end="67:13"><operator pos:start="67:11" pos:end="67:11">(</operator><literal type="number" pos:start="67:12" pos:end="67:12">0</literal><operator pos:start="67:13" pos:end="67:13">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
