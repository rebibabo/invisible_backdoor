<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15218.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">gif_image_write_header</name><parameter_list pos:start="1:34" pos:end="3:75">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:47">ByteIOContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">pb</name></decl></parameter>, 

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:43">width</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:55"><decl pos:start="3:46" pos:end="3:55"><type pos:start="3:46" pos:end="3:55"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:55">height</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:74"><decl pos:start="3:58" pos:end="3:74"><type pos:start="3:58" pos:end="3:74"><name pos:start="3:58" pos:end="3:65">uint32_t</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:74">palette</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:11">put_tag</name><argument_list pos:start="13:12" pos:end="13:22">(<argument pos:start="13:13" pos:end="13:14"><expr pos:start="13:13" pos:end="13:14"><name pos:start="13:13" pos:end="13:14">pb</name></expr></argument>, <argument pos:start="13:17" pos:end="13:21"><expr pos:start="13:17" pos:end="13:21"><literal type="string" pos:start="13:17" pos:end="13:21">"GIF"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:11">put_tag</name><argument_list pos:start="15:12" pos:end="15:22">(<argument pos:start="15:13" pos:end="15:14"><expr pos:start="15:13" pos:end="15:14"><name pos:start="15:13" pos:end="15:14">pb</name></expr></argument>, <argument pos:start="15:17" pos:end="15:21"><expr pos:start="15:17" pos:end="15:21"><literal type="string" pos:start="15:17" pos:end="15:21">"89a"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><call pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:12">put_le16</name><argument_list pos:start="17:13" pos:end="17:23">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">pb</name></expr></argument>, <argument pos:start="17:18" pos:end="17:22"><expr pos:start="17:18" pos:end="17:22"><name pos:start="17:18" pos:end="17:22">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><call pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:12">put_le16</name><argument_list pos:start="19:13" pos:end="19:24">(<argument pos:start="19:14" pos:end="19:15"><expr pos:start="19:14" pos:end="19:15"><name pos:start="19:14" pos:end="19:15">pb</name></expr></argument>, <argument pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:23">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><call pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:12">put_byte</name><argument_list pos:start="23:13" pos:end="23:22">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><name pos:start="23:14" pos:end="23:15">pb</name></expr></argument>, <argument pos:start="23:18" pos:end="23:21"><expr pos:start="23:18" pos:end="23:21"><literal type="number" pos:start="23:18" pos:end="23:21">0xf7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:25" pos:end="23:61">/* flags: global clut, 256 entries */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><call pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:12">put_byte</name><argument_list pos:start="25:13" pos:end="25:22">(<argument pos:start="25:14" pos:end="25:15"><expr pos:start="25:14" pos:end="25:15"><name pos:start="25:14" pos:end="25:15">pb</name></expr></argument>, <argument pos:start="25:18" pos:end="25:21"><expr pos:start="25:18" pos:end="25:21"><literal type="number" pos:start="25:18" pos:end="25:21">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:25" pos:end="25:52">/* background color index */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><call pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:12">put_byte</name><argument_list pos:start="27:13" pos:end="27:19">(<argument pos:start="27:14" pos:end="27:15"><expr pos:start="27:14" pos:end="27:15"><name pos:start="27:14" pos:end="27:15">pb</name></expr></argument>, <argument pos:start="27:18" pos:end="27:18"><expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:22" pos:end="27:39">/* aspect ratio */</comment>



    <comment type="block" pos:start="31:5" pos:end="31:28">/* the global palette */</comment>

    <if_stmt pos:start="33:5" pos:end="64:0"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:16">palette</name></expr>)</condition> <block pos:start="33:19" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:28">

        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><call pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:18">put_buffer</name><argument_list pos:start="35:19" pos:end="35:56">(<argument pos:start="35:20" pos:end="35:21"><expr pos:start="35:20" pos:end="35:21"><name pos:start="35:20" pos:end="35:21">pb</name></expr></argument>, <argument pos:start="35:24" pos:end="35:48"><expr pos:start="35:24" pos:end="35:48"><operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:32">unsigned</name> <name pos:start="35:34" pos:end="35:37">char</name> <operator pos:start="35:39" pos:end="35:39">*</operator><operator pos:start="35:40" pos:end="35:40">)</operator><name pos:start="35:41" pos:end="35:48">gif_clut</name></expr></argument>, <argument pos:start="35:51" pos:end="35:55"><expr pos:start="35:51" pos:end="35:55"><literal type="number" pos:start="35:51" pos:end="35:53">216</literal><operator pos:start="35:54" pos:end="35:54">*</operator><literal type="number" pos:start="35:55" pos:end="35:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="39:28">for<control pos:start="37:12" pos:end="37:36">(<init pos:start="37:13" pos:end="37:16"><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:13">i</name><operator pos:start="37:14" pos:end="37:14">=</operator><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</init><condition pos:start="37:17" pos:end="37:32"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:17">i</name><operator pos:start="37:18" pos:end="37:18">&lt;</operator><operator pos:start="37:19" pos:end="37:19">(</operator><operator pos:start="37:20" pos:end="37:20">(</operator><literal type="number" pos:start="37:21" pos:end="37:24">256</literal><operator pos:start="37:24" pos:end="37:24">-</operator><literal type="number" pos:start="37:25" pos:end="37:27">216</literal><operator pos:start="37:28" pos:end="37:28">)</operator><operator pos:start="37:29" pos:end="37:29">*</operator><literal type="number" pos:start="37:30" pos:end="37:30">3</literal><operator pos:start="37:31" pos:end="37:31">)</operator></expr>;</condition><incr pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:33">i</name><operator pos:start="37:34" pos:end="37:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:28"><block_content pos:start="39:13" pos:end="39:28">

            <expr_stmt pos:start="39:13" pos:end="39:28"><expr pos:start="39:13" pos:end="39:27"><call pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:20">put_byte</name><argument_list pos:start="39:21" pos:end="39:27">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">pb</name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="64:0">else <block pos:start="41:12" pos:end="64:0">{<block_content pos:start="43:9" pos:end="53:9">

        <for pos:start="43:9" pos:end="53:9">for<control pos:start="43:12" pos:end="43:26">(<init pos:start="43:13" pos:end="43:16"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:13">i</name><operator pos:start="43:14" pos:end="43:14">=</operator><literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>;</init><condition pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:17">i</name><operator pos:start="43:18" pos:end="43:18">&lt;</operator><literal type="number" pos:start="43:19" pos:end="43:21">256</literal></expr>;</condition><incr pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:23">i</name><operator pos:start="43:24" pos:end="43:25">++</operator></expr></incr>)</control> <block pos:start="43:28" pos:end="53:9">{<block_content pos:start="45:13" pos:end="51:37">

            <expr_stmt pos:start="45:13" pos:end="45:27"><expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:13">v</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:23">palette</name><index pos:start="45:24" pos:end="45:26">[<expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:43"><expr pos:start="47:13" pos:end="47:42"><call pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:20">put_byte</name><argument_list pos:start="47:21" pos:end="47:42">(<argument pos:start="47:22" pos:end="47:23"><expr pos:start="47:22" pos:end="47:23"><name pos:start="47:22" pos:end="47:23">pb</name></expr></argument>, <argument pos:start="47:26" pos:end="47:41"><expr pos:start="47:26" pos:end="47:41"><operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:27">v</name> <operator pos:start="47:29" pos:end="47:30">&gt;&gt;</operator> <literal type="number" pos:start="47:32" pos:end="47:33">16</literal><operator pos:start="47:34" pos:end="47:34">)</operator> <operator pos:start="47:36" pos:end="47:36">&amp;</operator> <literal type="number" pos:start="47:38" pos:end="47:41">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><call pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:20">put_byte</name><argument_list pos:start="49:21" pos:end="49:41">(<argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><name pos:start="49:22" pos:end="49:23">pb</name></expr></argument>, <argument pos:start="49:26" pos:end="49:40"><expr pos:start="49:26" pos:end="49:40"><operator pos:start="49:26" pos:end="49:26">(</operator><name pos:start="49:27" pos:end="49:27">v</name> <operator pos:start="49:29" pos:end="49:30">&gt;&gt;</operator> <literal type="number" pos:start="49:32" pos:end="49:32">8</literal><operator pos:start="49:33" pos:end="49:33">)</operator> <operator pos:start="49:35" pos:end="49:35">&amp;</operator> <literal type="number" pos:start="49:37" pos:end="49:40">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:37"><expr pos:start="51:13" pos:end="51:36"><call pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:20">put_byte</name><argument_list pos:start="51:21" pos:end="51:36">(<argument pos:start="51:22" pos:end="51:23"><expr pos:start="51:22" pos:end="51:23"><name pos:start="51:22" pos:end="51:23">pb</name></expr></argument>, <argument pos:start="51:26" pos:end="51:35"><expr pos:start="51:26" pos:end="51:35"><operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:27">v</name><operator pos:start="51:28" pos:end="51:28">)</operator> <operator pos:start="51:30" pos:end="51:30">&amp;</operator> <literal type="number" pos:start="51:32" pos:end="51:35">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:38">/* application extension header */</comment>

    <comment type="block" pos:start="61:5" pos:end="61:53">/* XXX: not really sure what to put in here... */</comment>

<cpp:ifdef pos:start="63:1" pos:end="63:25">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:25">GIF_ADD_APP_HEADER</name></cpp:ifdef>

    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><call pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:12">put_byte</name><argument_list pos:start="65:13" pos:end="65:22">(<argument pos:start="65:14" pos:end="65:15"><expr pos:start="65:14" pos:end="65:15"><name pos:start="65:14" pos:end="65:15">pb</name></expr></argument>, <argument pos:start="65:18" pos:end="65:21"><expr pos:start="65:18" pos:end="65:21"><literal type="number" pos:start="65:18" pos:end="65:21">0x21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:23"><expr pos:start="67:5" pos:end="67:22"><call pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:12">put_byte</name><argument_list pos:start="67:13" pos:end="67:22">(<argument pos:start="67:14" pos:end="67:15"><expr pos:start="67:14" pos:end="67:15"><name pos:start="67:14" pos:end="67:15">pb</name></expr></argument>, <argument pos:start="67:18" pos:end="67:21"><expr pos:start="67:18" pos:end="67:21"><literal type="number" pos:start="67:18" pos:end="67:21">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:23"><expr pos:start="69:5" pos:end="69:22"><call pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:12">put_byte</name><argument_list pos:start="69:13" pos:end="69:22">(<argument pos:start="69:14" pos:end="69:15"><expr pos:start="69:14" pos:end="69:15"><name pos:start="69:14" pos:end="69:15">pb</name></expr></argument>, <argument pos:start="69:18" pos:end="69:21"><expr pos:start="69:18" pos:end="69:21"><literal type="number" pos:start="69:18" pos:end="69:21">0x0b</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><call pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:11">put_tag</name><argument_list pos:start="71:12" pos:end="71:30">(<argument pos:start="71:13" pos:end="71:14"><expr pos:start="71:13" pos:end="71:14"><name pos:start="71:13" pos:end="71:14">pb</name></expr></argument>, <argument pos:start="71:17" pos:end="71:29"><expr pos:start="71:17" pos:end="71:29"><literal type="string" pos:start="71:17" pos:end="71:29">"NETSCAPE2.0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:23"><expr pos:start="73:5" pos:end="73:22"><call pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:12">put_byte</name><argument_list pos:start="73:13" pos:end="73:22">(<argument pos:start="73:14" pos:end="73:15"><expr pos:start="73:14" pos:end="73:15"><name pos:start="73:14" pos:end="73:15">pb</name></expr></argument>, <argument pos:start="73:18" pos:end="73:21"><expr pos:start="73:18" pos:end="73:21"><literal type="number" pos:start="73:18" pos:end="73:21">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><call pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:12">put_byte</name><argument_list pos:start="75:13" pos:end="75:22">(<argument pos:start="75:14" pos:end="75:15"><expr pos:start="75:14" pos:end="75:15"><name pos:start="75:14" pos:end="75:15">pb</name></expr></argument>, <argument pos:start="75:18" pos:end="75:21"><expr pos:start="75:18" pos:end="75:21"><literal type="number" pos:start="75:18" pos:end="75:21">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:12">put_byte</name><argument_list pos:start="77:13" pos:end="77:22">(<argument pos:start="77:14" pos:end="77:15"><expr pos:start="77:14" pos:end="77:15"><name pos:start="77:14" pos:end="77:15">pb</name></expr></argument>, <argument pos:start="77:18" pos:end="77:21"><expr pos:start="77:18" pos:end="77:21"><literal type="number" pos:start="77:18" pos:end="77:21">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="82:0"><expr pos:start="79:5" pos:end="79:22"><call pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:12">put_byte</name><argument_list pos:start="79:13" pos:end="79:22">(<argument pos:start="79:14" pos:end="79:15"><expr pos:start="79:14" pos:end="79:15"><name pos:start="79:14" pos:end="79:15">pb</name></expr></argument>, <argument pos:start="79:18" pos:end="79:21"><expr pos:start="79:18" pos:end="79:21"><literal type="number" pos:start="79:18" pos:end="79:21">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
