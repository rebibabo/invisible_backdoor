<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20789.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:5">const</specifier> <name pos:start="1:7" pos:end="1:13">uint8_t</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:37">avpriv_find_start_code</name><parameter_list pos:start="1:38" pos:end="5:66">(<parameter pos:start="1:39" pos:end="1:66"><decl pos:start="1:39" pos:end="1:66"><type pos:start="1:39" pos:end="1:66"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><name pos:start="1:54" pos:end="1:64">av_restrict</name></type> <name pos:start="1:66" pos:end="1:66">p</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:56"><decl pos:start="3:39" pos:end="3:56"><type pos:start="3:39" pos:end="3:56"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:51">uint8_t</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">end</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:65"><decl pos:start="5:39" pos:end="5:65"><type pos:start="5:39" pos:end="5:65"><name pos:start="5:39" pos:end="5:46">uint32_t</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier><name pos:start="5:49" pos:end="5:59">av_restrict</name></type> <name pos:start="5:61" pos:end="5:65">state</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="63:1">{<block_content pos:start="9:5" pos:end="61:17">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><call pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:20">(<argument pos:start="13:12" pos:end="13:19"><expr pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:12">p</name> <operator pos:start="13:14" pos:end="13:15">&lt;=</operator> <name pos:start="13:17" pos:end="13:19">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:19"><if pos:start="15:5" pos:end="17:19">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">p</name> <operator pos:start="15:11" pos:end="15:12">&gt;=</operator> <name pos:start="15:14" pos:end="15:16">end</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">end</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="21:5" pos:end="31:5">for <control pos:start="21:9" pos:end="21:27">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:21">3</literal></expr>;</condition> <incr pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:24">i</name><operator pos:start="21:25" pos:end="21:26">++</operator></expr></incr>)</control> <block pos:start="21:29" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:21">

        <decl_stmt pos:start="23:9" pos:end="23:35"><decl pos:start="23:9" pos:end="23:34"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint32_t</name></type> <name pos:start="23:18" pos:end="23:20">tmp</name> <init pos:start="23:22" pos:end="23:34">= <expr pos:start="23:24" pos:end="23:34"><operator pos:start="23:24" pos:end="23:24">*</operator><name pos:start="23:25" pos:end="23:29">state</name> <operator pos:start="23:31" pos:end="23:32">&lt;&lt;</operator> <literal type="number" pos:start="23:34" pos:end="23:34">8</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:14">state</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:20">tmp</name> <operator pos:start="25:22" pos:end="25:22">+</operator> <operator pos:start="25:24" pos:end="25:24">*</operator><operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:26">p</name><operator pos:start="25:27" pos:end="25:28">++</operator><operator pos:start="25:29" pos:end="25:29">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:37">(<expr pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:15">tmp</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <literal type="number" pos:start="27:20" pos:end="27:24">0x100</literal> <operator pos:start="27:26" pos:end="27:27">||</operator> <name pos:start="27:29" pos:end="27:29">p</name> <operator pos:start="27:31" pos:end="27:32">==</operator> <name pos:start="27:34" pos:end="27:36">end</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">p</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <while pos:start="35:5" pos:end="51:5">while <condition pos:start="35:11" pos:end="35:19">(<expr pos:start="35:12" pos:end="35:18"><name pos:start="35:12" pos:end="35:12">p</name> <operator pos:start="35:14" pos:end="35:14">&lt;</operator> <name pos:start="35:16" pos:end="35:18">end</name></expr>)</condition> <block pos:start="35:21" pos:end="51:5">{<block_content pos:start="37:9" pos:end="49:9">

        <if_stmt pos:start="37:9" pos:end="49:9"><if pos:start="37:9" pos:end="37:41">if      <condition pos:start="37:17" pos:end="37:33">(<expr pos:start="37:18" pos:end="37:26"><name pos:start="37:18" pos:end="37:22"><name pos:start="37:18" pos:end="37:18">p</name><index pos:start="37:19" pos:end="37:22">[<expr pos:start="37:20" pos:end="37:21"><operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>]</index></name> <operator pos:start="37:24" pos:end="37:24">&gt;</operator> <literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>      )</condition><block type="pseudo" pos:start="37:35" pos:end="37:41"><block_content pos:start="37:35" pos:end="37:41"> <expr_stmt pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:40"><name pos:start="37:35" pos:end="37:35">p</name> <operator pos:start="37:37" pos:end="37:38">+=</operator> <literal type="number" pos:start="37:40" pos:end="37:40">3</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="39:9" pos:end="39:41">else if <condition pos:start="39:17" pos:end="39:33">(<expr pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:18">p</name><index pos:start="39:19" pos:end="39:22">[<expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">2</literal></expr>]</index></name></expr>          )</condition><block type="pseudo" pos:start="39:35" pos:end="39:41"><block_content pos:start="39:35" pos:end="39:41"> <expr_stmt pos:start="39:35" pos:end="39:41"><expr pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:35">p</name> <operator pos:start="39:37" pos:end="39:38">+=</operator> <literal type="number" pos:start="39:40" pos:end="39:40">2</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="41:9" pos:end="41:38">else if <condition pos:start="41:17" pos:end="41:33">(<expr pos:start="41:18" pos:end="41:32"><name pos:start="41:18" pos:end="41:22"><name pos:start="41:18" pos:end="41:18">p</name><index pos:start="41:19" pos:end="41:22">[<expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">3</literal></expr>]</index></name><operator pos:start="41:23" pos:end="41:23">|</operator><operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:25">p</name><index pos:start="41:26" pos:end="41:29">[<expr pos:start="41:27" pos:end="41:28"><operator pos:start="41:27" pos:end="41:27">-</operator><literal type="number" pos:start="41:28" pos:end="41:28">1</literal></expr>]</index></name><operator pos:start="41:30" pos:end="41:30">-</operator><literal type="number" pos:start="41:31" pos:end="41:31">1</literal><operator pos:start="41:32" pos:end="41:32">)</operator></expr>)</condition><block type="pseudo" pos:start="41:35" pos:end="41:38"><block_content pos:start="41:35" pos:end="41:38"> <expr_stmt pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:35">p</name><operator pos:start="41:36" pos:end="41:37">++</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="43:9" pos:end="49:9">else <block pos:start="43:14" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:18">

            <expr_stmt pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">p</name><operator pos:start="45:14" pos:end="45:15">++</operator></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:5">p</name> <operator pos:start="55:7" pos:end="55:7">=</operator> <call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:13">FFMIN</name><argument_list pos:start="55:14" pos:end="55:21">(<argument pos:start="55:15" pos:end="55:15"><expr pos:start="55:15" pos:end="55:15"><name pos:start="55:15" pos:end="55:15">p</name></expr></argument>, <argument pos:start="55:18" pos:end="55:20"><expr pos:start="55:18" pos:end="55:20"><name pos:start="55:18" pos:end="55:20">end</name></expr></argument>)</argument_list></call> <operator pos:start="55:23" pos:end="55:23">-</operator> <literal type="number" pos:start="55:25" pos:end="55:25">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><operator pos:start="57:5" pos:end="57:5">*</operator><name pos:start="57:6" pos:end="57:10">state</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:23"><name pos:start="57:14" pos:end="57:20">AV_RB32</name><argument_list pos:start="57:21" pos:end="57:23">(<argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:17">return <expr pos:start="61:12" pos:end="61:16"><name pos:start="61:12" pos:end="61:12">p</name> <operator pos:start="61:14" pos:end="61:14">+</operator> <literal type="number" pos:start="61:16" pos:end="61:16">4</literal></expr>;</return>

</block_content>}</block></function>
</unit>
