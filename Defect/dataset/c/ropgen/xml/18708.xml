<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18708.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:39">qemu_savevm_state_complete_precopy</name><parameter_list pos:start="1:40" pos:end="1:72">(<parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:48">QEMUFile</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">f</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:57">bool</name></type> <name pos:start="1:59" pos:end="1:71">iterable_only</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="173:1">{<block_content pos:start="5:5" pos:end="171:19">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">QJSON</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:17">vmdesc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">vmdesc_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">SaveStateEntry</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">se</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:20">in_postcopy</name> <init pos:start="13:22" pos:end="13:46">= <expr pos:start="13:24" pos:end="13:46"><call pos:start="13:24" pos:end="13:46"><name pos:start="13:24" pos:end="13:44">migration_in_postcopy</name><argument_list pos:start="13:45" pos:end="13:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:39">trace_savevm_state_complete_precopy</name><argument_list pos:start="17:40" pos:end="17:41">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:30">cpu_synchronize_all_states</name><argument_list pos:start="21:31" pos:end="21:32">()</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:18">QTAILQ_FOREACH</name><argument_list pos:start="25:19" pos:end="25:53">(<argument pos:start="25:20" pos:end="25:21">se</argument>, <argument pos:start="25:24" pos:end="25:45">&amp;savevm_state.handlers</argument>, <argument pos:start="25:48" pos:end="25:52">entry</argument>)</argument_list></macro> <block pos:start="25:55" pos:end="73:5">{<block_content pos:start="27:9" pos:end="71:9">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="33:49">(<expr pos:start="27:13" pos:end="33:48"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:20"><name pos:start="27:14" pos:end="27:15">se</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:20">ops</name></name> <operator pos:start="27:22" pos:end="27:23">||</operator>

            <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:24">in_postcopy</name> <operator pos:start="29:26" pos:end="29:27">&amp;&amp;</operator> <name pos:start="29:29" pos:end="29:64"><name pos:start="29:29" pos:end="29:30">se</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:35">ops</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:64">save_live_complete_postcopy</name></name><operator pos:start="29:65" pos:end="29:65">)</operator> <operator pos:start="29:67" pos:end="29:68">||</operator>

            <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:24">in_postcopy</name> <operator pos:start="31:26" pos:end="31:27">&amp;&amp;</operator> <operator pos:start="31:29" pos:end="31:29">!</operator><name pos:start="31:30" pos:end="31:42">iterable_only</name><operator pos:start="31:43" pos:end="31:43">)</operator> <operator pos:start="31:45" pos:end="31:46">||</operator>

            <operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:48"><name pos:start="33:14" pos:end="33:15">se</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:20">ops</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:48">save_live_complete_precopy</name></name></expr>)</condition> <block pos:start="33:51" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:42">(<expr pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:14">se</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:19">ops</name></name> <operator pos:start="41:21" pos:end="41:22">&amp;&amp;</operator> <name pos:start="41:24" pos:end="41:41"><name pos:start="41:24" pos:end="41:25">se</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:30">ops</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:41">is_active</name></name></expr>)</condition> <block pos:start="41:44" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:13">

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:48">(<expr pos:start="43:17" pos:end="43:47"><operator pos:start="43:17" pos:end="43:17">!</operator><call pos:start="43:18" pos:end="43:47"><name pos:start="43:18" pos:end="43:35"><name pos:start="43:18" pos:end="43:19">se</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:24">ops</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:35">is_active</name></name><argument_list pos:start="43:36" pos:end="43:47">(<argument pos:start="43:37" pos:end="43:46"><expr pos:start="43:37" pos:end="43:46"><name pos:start="43:37" pos:end="43:46"><name pos:start="43:37" pos:end="43:38">se</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:46">opaque</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:50" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:25">

                <continue pos:start="45:17" pos:end="45:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:62"><expr pos:start="51:9" pos:end="51:61"><call pos:start="51:9" pos:end="51:61"><name pos:start="51:9" pos:end="51:34">trace_savevm_section_start</name><argument_list pos:start="51:35" pos:end="51:61">(<argument pos:start="51:36" pos:end="51:44"><expr pos:start="51:36" pos:end="51:44"><name pos:start="51:36" pos:end="51:44"><name pos:start="51:36" pos:end="51:37">se</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:44">idstr</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:60"><expr pos:start="51:47" pos:end="51:60"><name pos:start="51:47" pos:end="51:60"><name pos:start="51:47" pos:end="51:48">se</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:60">section_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><call pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:27">save_section_header</name><argument_list pos:start="55:28" pos:end="55:55">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">f</name></expr></argument>, <argument pos:start="55:32" pos:end="55:33"><expr pos:start="55:32" pos:end="55:33"><name pos:start="55:32" pos:end="55:33">se</name></expr></argument>, <argument pos:start="55:36" pos:end="55:54"><expr pos:start="55:36" pos:end="55:54"><name pos:start="55:36" pos:end="55:54">QEMU_VM_SECTION_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:65"><expr pos:start="59:9" pos:end="59:64"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:64"><name pos:start="59:15" pos:end="59:49"><name pos:start="59:15" pos:end="59:16">se</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:21">ops</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:49">save_live_complete_precopy</name></name><argument_list pos:start="59:50" pos:end="59:64">(<argument pos:start="59:51" pos:end="59:51"><expr pos:start="59:51" pos:end="59:51"><name pos:start="59:51" pos:end="59:51">f</name></expr></argument>, <argument pos:start="59:54" pos:end="59:63"><expr pos:start="59:54" pos:end="59:63"><name pos:start="59:54" pos:end="59:63"><name pos:start="59:54" pos:end="59:55">se</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:63">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:65"><expr pos:start="61:9" pos:end="61:64"><call pos:start="61:9" pos:end="61:64"><name pos:start="61:9" pos:end="61:32">trace_savevm_section_end</name><argument_list pos:start="61:33" pos:end="61:64">(<argument pos:start="61:34" pos:end="61:42"><expr pos:start="61:34" pos:end="61:42"><name pos:start="61:34" pos:end="61:42"><name pos:start="61:34" pos:end="61:35">se</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:42">idstr</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:58"><expr pos:start="61:45" pos:end="61:58"><name pos:start="61:45" pos:end="61:58"><name pos:start="61:45" pos:end="61:46">se</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:58">section_id</name></name></expr></argument>, <argument pos:start="61:61" pos:end="61:63"><expr pos:start="61:61" pos:end="61:63"><name pos:start="61:61" pos:end="61:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:27">save_section_footer</name><argument_list pos:start="63:28" pos:end="63:34">(<argument pos:start="63:29" pos:end="63:29"><expr pos:start="63:29" pos:end="63:29"><name pos:start="63:29" pos:end="63:29">f</name></expr></argument>, <argument pos:start="63:32" pos:end="63:33"><expr pos:start="63:32" pos:end="63:33"><name pos:start="63:32" pos:end="63:33">se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition> <block pos:start="65:22" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:19">

            <expr_stmt pos:start="67:13" pos:end="67:40"><expr pos:start="67:13" pos:end="67:39"><call pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:31">qemu_file_set_error</name><argument_list pos:start="67:32" pos:end="67:39">(<argument pos:start="67:33" pos:end="67:33"><expr pos:start="67:33" pos:end="67:33"><name pos:start="67:33" pos:end="67:33">f</name></expr></argument>, <argument pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><name pos:start="67:36" pos:end="67:38">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:22">(<expr pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:21">iterable_only</name></expr>)</condition> <block pos:start="77:24" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:15">

        <return pos:start="79:9" pos:end="79:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:25"><expr pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:10">vmdesc</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <call pos:start="85:14" pos:end="85:24"><name pos:start="85:14" pos:end="85:22">qjson_new</name><argument_list pos:start="85:23" pos:end="85:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:64"><expr pos:start="87:5" pos:end="87:63"><call pos:start="87:5" pos:end="87:63"><name pos:start="87:5" pos:end="87:17">json_prop_int</name><argument_list pos:start="87:18" pos:end="87:63">(<argument pos:start="87:19" pos:end="87:24"><expr pos:start="87:19" pos:end="87:24"><name pos:start="87:19" pos:end="87:24">vmdesc</name></expr></argument>, <argument pos:start="87:27" pos:end="87:37"><expr pos:start="87:27" pos:end="87:37"><literal type="string" pos:start="87:27" pos:end="87:37">"page_size"</literal></expr></argument>, <argument pos:start="87:40" pos:end="87:62"><expr pos:start="87:40" pos:end="87:62"><call pos:start="87:40" pos:end="87:62"><name pos:start="87:40" pos:end="87:60">qemu_target_page_size</name><argument_list pos:start="87:61" pos:end="87:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:40"><expr pos:start="89:5" pos:end="89:39"><call pos:start="89:5" pos:end="89:39"><name pos:start="89:5" pos:end="89:20">json_start_array</name><argument_list pos:start="89:21" pos:end="89:39">(<argument pos:start="89:22" pos:end="89:27"><expr pos:start="89:22" pos:end="89:27"><name pos:start="89:22" pos:end="89:27">vmdesc</name></expr></argument>, <argument pos:start="89:30" pos:end="89:38"><expr pos:start="89:30" pos:end="89:38"><literal type="string" pos:start="89:30" pos:end="89:38">"devices"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="91:5" pos:end="91:53"><name pos:start="91:5" pos:end="91:18">QTAILQ_FOREACH</name><argument_list pos:start="91:19" pos:end="91:53">(<argument pos:start="91:20" pos:end="91:21">se</argument>, <argument pos:start="91:24" pos:end="91:45">&amp;savevm_state.handlers</argument>, <argument pos:start="91:48" pos:end="91:52">entry</argument>)</argument_list></macro> <block pos:start="91:55" pos:end="135:5">{<block_content pos:start="95:9" pos:end="133:32">



        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:60">(<expr pos:start="95:13" pos:end="95:59"><operator pos:start="95:13" pos:end="95:13">(</operator><operator pos:start="95:14" pos:end="95:14">!</operator><name pos:start="95:15" pos:end="95:21"><name pos:start="95:15" pos:end="95:16">se</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:21">ops</name></name> <operator pos:start="95:23" pos:end="95:24">||</operator> <operator pos:start="95:26" pos:end="95:26">!</operator><name pos:start="95:27" pos:end="95:45"><name pos:start="95:27" pos:end="95:28">se</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:33">ops</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:45">save_state</name></name><operator pos:start="95:46" pos:end="95:46">)</operator> <operator pos:start="95:48" pos:end="95:49">&amp;&amp;</operator> <operator pos:start="95:51" pos:end="95:51">!</operator><name pos:start="95:52" pos:end="95:59"><name pos:start="95:52" pos:end="95:53">se</name><operator pos:start="95:54" pos:end="95:55">-&gt;</operator><name pos:start="95:56" pos:end="95:59">vmsd</name></name></expr>)</condition> <block pos:start="95:62" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:21">

            <continue pos:start="97:13" pos:end="97:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:67">(<expr pos:start="101:13" pos:end="101:66"><name pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:14">se</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:20">vmsd</name></name> <operator pos:start="101:22" pos:end="101:23">&amp;&amp;</operator> <operator pos:start="101:25" pos:end="101:25">!</operator><call pos:start="101:26" pos:end="101:66"><name pos:start="101:26" pos:end="101:44">vmstate_save_needed</name><argument_list pos:start="101:45" pos:end="101:66">(<argument pos:start="101:46" pos:end="101:53"><expr pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:47">se</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:53">vmsd</name></name></expr></argument>, <argument pos:start="101:56" pos:end="101:65"><expr pos:start="101:56" pos:end="101:65"><name pos:start="101:56" pos:end="101:65"><name pos:start="101:56" pos:end="101:57">se</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:65">opaque</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:69" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:21">

            <expr_stmt pos:start="103:13" pos:end="103:65"><expr pos:start="103:13" pos:end="103:64"><call pos:start="103:13" pos:end="103:64"><name pos:start="103:13" pos:end="103:37">trace_savevm_section_skip</name><argument_list pos:start="103:38" pos:end="103:64">(<argument pos:start="103:39" pos:end="103:47"><expr pos:start="103:39" pos:end="103:47"><name pos:start="103:39" pos:end="103:47"><name pos:start="103:39" pos:end="103:40">se</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:47">idstr</name></name></expr></argument>, <argument pos:start="103:50" pos:end="103:63"><expr pos:start="103:50" pos:end="103:63"><name pos:start="103:50" pos:end="103:63"><name pos:start="103:50" pos:end="103:51">se</name><operator pos:start="103:52" pos:end="103:53">-&gt;</operator><name pos:start="103:54" pos:end="103:63">section_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="105:13" pos:end="105:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:62"><expr pos:start="111:9" pos:end="111:61"><call pos:start="111:9" pos:end="111:61"><name pos:start="111:9" pos:end="111:34">trace_savevm_section_start</name><argument_list pos:start="111:35" pos:end="111:61">(<argument pos:start="111:36" pos:end="111:44"><expr pos:start="111:36" pos:end="111:44"><name pos:start="111:36" pos:end="111:44"><name pos:start="111:36" pos:end="111:37">se</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:44">idstr</name></name></expr></argument>, <argument pos:start="111:47" pos:end="111:60"><expr pos:start="111:47" pos:end="111:60"><name pos:start="111:47" pos:end="111:60"><name pos:start="111:47" pos:end="111:48">se</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:60">section_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:40"><expr pos:start="115:9" pos:end="115:39"><call pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:25">json_start_object</name><argument_list pos:start="115:26" pos:end="115:39">(<argument pos:start="115:27" pos:end="115:32"><expr pos:start="115:27" pos:end="115:32"><name pos:start="115:27" pos:end="115:32">vmdesc</name></expr></argument>, <argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><name pos:start="115:35" pos:end="115:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:49"><expr pos:start="117:9" pos:end="117:48"><call pos:start="117:9" pos:end="117:48"><name pos:start="117:9" pos:end="117:21">json_prop_str</name><argument_list pos:start="117:22" pos:end="117:48">(<argument pos:start="117:23" pos:end="117:28"><expr pos:start="117:23" pos:end="117:28"><name pos:start="117:23" pos:end="117:28">vmdesc</name></expr></argument>, <argument pos:start="117:31" pos:end="117:36"><expr pos:start="117:31" pos:end="117:36"><literal type="string" pos:start="117:31" pos:end="117:36">"name"</literal></expr></argument>, <argument pos:start="117:39" pos:end="117:47"><expr pos:start="117:39" pos:end="117:47"><name pos:start="117:39" pos:end="117:47"><name pos:start="117:39" pos:end="117:40">se</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:47">idstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:62"><expr pos:start="119:9" pos:end="119:61"><call pos:start="119:9" pos:end="119:61"><name pos:start="119:9" pos:end="119:21">json_prop_int</name><argument_list pos:start="119:22" pos:end="119:61">(<argument pos:start="119:23" pos:end="119:28"><expr pos:start="119:23" pos:end="119:28"><name pos:start="119:23" pos:end="119:28">vmdesc</name></expr></argument>, <argument pos:start="119:31" pos:end="119:43"><expr pos:start="119:31" pos:end="119:43"><literal type="string" pos:start="119:31" pos:end="119:43">"instance_id"</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:60"><expr pos:start="119:46" pos:end="119:60"><name pos:start="119:46" pos:end="119:60"><name pos:start="119:46" pos:end="119:47">se</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:60">instance_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:57"><expr pos:start="123:9" pos:end="123:56"><call pos:start="123:9" pos:end="123:56"><name pos:start="123:9" pos:end="123:27">save_section_header</name><argument_list pos:start="123:28" pos:end="123:56">(<argument pos:start="123:29" pos:end="123:29"><expr pos:start="123:29" pos:end="123:29"><name pos:start="123:29" pos:end="123:29">f</name></expr></argument>, <argument pos:start="123:32" pos:end="123:33"><expr pos:start="123:32" pos:end="123:33"><name pos:start="123:32" pos:end="123:33">se</name></expr></argument>, <argument pos:start="123:36" pos:end="123:55"><expr pos:start="123:36" pos:end="123:55"><name pos:start="123:36" pos:end="123:55">QEMU_VM_SECTION_FULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:36"><expr pos:start="125:9" pos:end="125:35"><call pos:start="125:9" pos:end="125:35"><name pos:start="125:9" pos:end="125:20">vmstate_save</name><argument_list pos:start="125:21" pos:end="125:35">(<argument pos:start="125:22" pos:end="125:22"><expr pos:start="125:22" pos:end="125:22"><name pos:start="125:22" pos:end="125:22">f</name></expr></argument>, <argument pos:start="125:25" pos:end="125:26"><expr pos:start="125:25" pos:end="125:26"><name pos:start="125:25" pos:end="125:26">se</name></expr></argument>, <argument pos:start="125:29" pos:end="125:34"><expr pos:start="125:29" pos:end="125:34"><name pos:start="125:29" pos:end="125:34">vmdesc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:63"><expr pos:start="127:9" pos:end="127:62"><call pos:start="127:9" pos:end="127:62"><name pos:start="127:9" pos:end="127:32">trace_savevm_section_end</name><argument_list pos:start="127:33" pos:end="127:62">(<argument pos:start="127:34" pos:end="127:42"><expr pos:start="127:34" pos:end="127:42"><name pos:start="127:34" pos:end="127:42"><name pos:start="127:34" pos:end="127:35">se</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:42">idstr</name></name></expr></argument>, <argument pos:start="127:45" pos:end="127:58"><expr pos:start="127:45" pos:end="127:58"><name pos:start="127:45" pos:end="127:58"><name pos:start="127:45" pos:end="127:46">se</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:58">section_id</name></name></expr></argument>, <argument pos:start="127:61" pos:end="127:61"><expr pos:start="127:61" pos:end="127:61"><literal type="number" pos:start="127:61" pos:end="127:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:35"><expr pos:start="129:9" pos:end="129:34"><call pos:start="129:9" pos:end="129:34"><name pos:start="129:9" pos:end="129:27">save_section_footer</name><argument_list pos:start="129:28" pos:end="129:34">(<argument pos:start="129:29" pos:end="129:29"><expr pos:start="129:29" pos:end="129:29"><name pos:start="129:29" pos:end="129:29">f</name></expr></argument>, <argument pos:start="129:32" pos:end="129:33"><expr pos:start="129:32" pos:end="129:33"><name pos:start="129:32" pos:end="129:33">se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:32"><expr pos:start="133:9" pos:end="133:31"><call pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:23">json_end_object</name><argument_list pos:start="133:24" pos:end="133:31">(<argument pos:start="133:25" pos:end="133:30"><expr pos:start="133:25" pos:end="133:30"><name pos:start="133:25" pos:end="133:30">vmdesc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:21">(<expr pos:start="139:9" pos:end="139:20"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:20">in_postcopy</name></expr>)</condition> <block pos:start="139:23" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:38">

        <comment type="block" pos:start="141:9" pos:end="141:49">/* Postcopy stream will still be going */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:38"><expr pos:start="143:9" pos:end="143:37"><call pos:start="143:9" pos:end="143:37"><name pos:start="143:9" pos:end="143:21">qemu_put_byte</name><argument_list pos:start="143:22" pos:end="143:37">(<argument pos:start="143:23" pos:end="143:23"><expr pos:start="143:23" pos:end="143:23"><name pos:start="143:23" pos:end="143:23">f</name></expr></argument>, <argument pos:start="143:26" pos:end="143:36"><expr pos:start="143:26" pos:end="143:36"><name pos:start="143:26" pos:end="143:36">QEMU_VM_EOF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:27"><expr pos:start="149:5" pos:end="149:26"><call pos:start="149:5" pos:end="149:26"><name pos:start="149:5" pos:end="149:18">json_end_array</name><argument_list pos:start="149:19" pos:end="149:26">(<argument pos:start="149:20" pos:end="149:25"><expr pos:start="149:20" pos:end="149:25"><name pos:start="149:20" pos:end="149:25">vmdesc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:25"><expr pos:start="151:5" pos:end="151:24"><call pos:start="151:5" pos:end="151:24"><name pos:start="151:5" pos:end="151:16">qjson_finish</name><argument_list pos:start="151:17" pos:end="151:24">(<argument pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:23"><name pos:start="151:18" pos:end="151:23">vmdesc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:47"><expr pos:start="153:5" pos:end="153:46"><name pos:start="153:5" pos:end="153:14">vmdesc_len</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <call pos:start="153:18" pos:end="153:46"><name pos:start="153:18" pos:end="153:23">strlen</name><argument_list pos:start="153:24" pos:end="153:46">(<argument pos:start="153:25" pos:end="153:45"><expr pos:start="153:25" pos:end="153:45"><call pos:start="153:25" pos:end="153:45"><name pos:start="153:25" pos:end="153:37">qjson_get_str</name><argument_list pos:start="153:38" pos:end="153:45">(<argument pos:start="153:39" pos:end="153:44"><expr pos:start="153:39" pos:end="153:44"><name pos:start="153:39" pos:end="153:44">vmdesc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="157:5" pos:end="165:5"><if pos:start="157:5" pos:end="165:5">if <condition pos:start="157:8" pos:end="157:29">(<expr pos:start="157:9" pos:end="157:28"><call pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:26">should_send_vmdesc</name><argument_list pos:start="157:27" pos:end="157:28">()</argument_list></call></expr>)</condition> <block pos:start="157:31" pos:end="165:5">{<block_content pos:start="159:9" pos:end="163:73">

        <expr_stmt pos:start="159:9" pos:end="159:48"><expr pos:start="159:9" pos:end="159:47"><call pos:start="159:9" pos:end="159:47"><name pos:start="159:9" pos:end="159:21">qemu_put_byte</name><argument_list pos:start="159:22" pos:end="159:47">(<argument pos:start="159:23" pos:end="159:23"><expr pos:start="159:23" pos:end="159:23"><name pos:start="159:23" pos:end="159:23">f</name></expr></argument>, <argument pos:start="159:26" pos:end="159:46"><expr pos:start="159:26" pos:end="159:46"><name pos:start="159:26" pos:end="159:46">QEMU_VM_VMDESCRIPTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:37"><expr pos:start="161:9" pos:end="161:36"><call pos:start="161:9" pos:end="161:36"><name pos:start="161:9" pos:end="161:21">qemu_put_be32</name><argument_list pos:start="161:22" pos:end="161:36">(<argument pos:start="161:23" pos:end="161:23"><expr pos:start="161:23" pos:end="161:23"><name pos:start="161:23" pos:end="161:23">f</name></expr></argument>, <argument pos:start="161:26" pos:end="161:35"><expr pos:start="161:26" pos:end="161:35"><name pos:start="161:26" pos:end="161:35">vmdesc_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:73"><expr pos:start="163:9" pos:end="163:72"><call pos:start="163:9" pos:end="163:72"><name pos:start="163:9" pos:end="163:23">qemu_put_buffer</name><argument_list pos:start="163:24" pos:end="163:72">(<argument pos:start="163:25" pos:end="163:25"><expr pos:start="163:25" pos:end="163:25"><name pos:start="163:25" pos:end="163:25">f</name></expr></argument>, <argument pos:start="163:28" pos:end="163:59"><expr pos:start="163:28" pos:end="163:59"><operator pos:start="163:28" pos:end="163:28">(</operator><name pos:start="163:29" pos:end="163:35">uint8_t</name> <operator pos:start="163:37" pos:end="163:37">*</operator><operator pos:start="163:38" pos:end="163:38">)</operator><call pos:start="163:39" pos:end="163:59"><name pos:start="163:39" pos:end="163:51">qjson_get_str</name><argument_list pos:start="163:52" pos:end="163:59">(<argument pos:start="163:53" pos:end="163:58"><expr pos:start="163:53" pos:end="163:58"><name pos:start="163:53" pos:end="163:58">vmdesc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:62" pos:end="163:71"><expr pos:start="163:62" pos:end="163:71"><name pos:start="163:62" pos:end="163:71">vmdesc_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:26"><expr pos:start="167:5" pos:end="167:25"><call pos:start="167:5" pos:end="167:25"><name pos:start="167:5" pos:end="167:17">qjson_destroy</name><argument_list pos:start="167:18" pos:end="167:25">(<argument pos:start="167:19" pos:end="167:24"><expr pos:start="167:19" pos:end="167:24"><name pos:start="167:19" pos:end="167:24">vmdesc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:19"><expr pos:start="171:5" pos:end="171:18"><call pos:start="171:5" pos:end="171:18"><name pos:start="171:5" pos:end="171:15">qemu_fflush</name><argument_list pos:start="171:16" pos:end="171:18">(<argument pos:start="171:17" pos:end="171:17"><expr pos:start="171:17" pos:end="171:17"><name pos:start="171:17" pos:end="171:17">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
