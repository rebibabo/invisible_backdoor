<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8231.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">rc4030_dma_tt_write</name><parameter_list pos:start="1:32" pos:end="3:50">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:52">hwaddr</name></type> <name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:67">uint64_t</name></type> <name pos:start="1:69" pos:end="1:72">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:40">unsigned</name> <name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:49">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">rc4030State</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:22">/* write memory */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:70"><expr pos:start="13:5" pos:end="13:69"><call pos:start="13:5" pos:end="13:69"><name pos:start="13:5" pos:end="13:10">memcpy</name><argument_list pos:start="13:11" pos:end="13:69">(<argument pos:start="13:12" pos:end="13:55"><expr pos:start="13:12" pos:end="13:55"><call pos:start="13:12" pos:end="13:48"><name pos:start="13:12" pos:end="13:36">memory_region_get_ram_ptr</name><argument_list pos:start="13:37" pos:end="13:48">(<argument pos:start="13:38" pos:end="13:47"><expr pos:start="13:38" pos:end="13:47"><operator pos:start="13:38" pos:end="13:38">&amp;</operator><name pos:start="13:39" pos:end="13:47"><name pos:start="13:39" pos:end="13:39">s</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:47">dma_tt</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:50" pos:end="13:50">+</operator> <name pos:start="13:52" pos:end="13:55">addr</name></expr></argument>, <argument pos:start="13:58" pos:end="13:62"><expr pos:start="13:58" pos:end="13:62"><operator pos:start="13:58" pos:end="13:58">&amp;</operator><name pos:start="13:59" pos:end="13:62">data</name></expr></argument>, <argument pos:start="13:65" pos:end="13:68"><expr pos:start="13:65" pos:end="13:68"><name pos:start="13:65" pos:end="13:68">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:73">/* update dma address space (only if frame field has been written) */</comment>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:48">(<expr pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:12">addr</name> <operator pos:start="19:14" pos:end="19:14">%</operator> <sizeof pos:start="19:16" pos:end="19:42">sizeof<argument_list pos:start="19:22" pos:end="19:42">(<argument pos:start="19:23" pos:end="19:41"><expr pos:start="19:23" pos:end="19:41"><name pos:start="19:23" pos:end="19:41">dma_pagetable_entry</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:44" pos:end="19:45">==</operator> <literal type="number" pos:start="19:47" pos:end="19:47">0</literal></expr>)</condition> <block pos:start="19:50" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:43">

        <decl_stmt pos:start="21:9" pos:end="21:55"><decl pos:start="21:9" pos:end="21:54"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:17">index</name> <init pos:start="21:19" pos:end="21:54">= <expr pos:start="21:21" pos:end="21:54"><name pos:start="21:21" pos:end="21:24">addr</name> <operator pos:start="21:26" pos:end="21:26">/</operator> <sizeof pos:start="21:28" pos:end="21:54">sizeof<argument_list pos:start="21:34" pos:end="21:54">(<argument pos:start="21:35" pos:end="21:53"><expr pos:start="21:35" pos:end="21:53"><name pos:start="21:35" pos:end="21:53">dma_pagetable_entry</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><call pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:39">memory_region_transaction_begin</name><argument_list pos:start="23:40" pos:end="23:41">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><call pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:32">rc4030_dma_as_update_one</name><argument_list pos:start="25:33" pos:end="25:58">(<argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">s</name></expr></argument>, <argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">index</name></expr></argument>, <argument pos:start="25:44" pos:end="25:57"><expr pos:start="25:44" pos:end="25:57"><operator pos:start="25:44" pos:end="25:44">(</operator><name pos:start="25:45" pos:end="25:52">uint32_t</name><operator pos:start="25:53" pos:end="25:53">)</operator><name pos:start="25:54" pos:end="25:57">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><call pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:40">memory_region_transaction_commit</name><argument_list pos:start="27:41" pos:end="27:42">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
