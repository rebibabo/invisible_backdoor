<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20452.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">swr_convert_frame</name><parameter_list pos:start="1:22" pos:end="3:54">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">SwrContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:34"><decl pos:start="3:23" pos:end="3:34"><type pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:29">AVFrame</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:34">out</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:53"><decl pos:start="3:37" pos:end="3:53"><type pos:start="3:37" pos:end="3:53"><specifier pos:start="3:37" pos:end="3:41">const</specifier> <name pos:start="3:43" pos:end="3:49">AVFrame</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:53">in</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:37">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:18">setup</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="31:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:30"><name pos:start="11:10" pos:end="11:27">swr_is_initialized</name><argument_list pos:start="11:28" pos:end="11:30">(<argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><name pos:start="11:29" pos:end="11:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:33" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:18">

        <if_stmt pos:start="13:9" pos:end="15:23"><if pos:start="13:9" pos:end="15:23">if <condition pos:start="13:12" pos:end="13:53">(<expr pos:start="13:13" pos:end="13:52"><operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:16">ret</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:47"><name pos:start="13:20" pos:end="13:35">swr_config_frame</name><argument_list pos:start="13:36" pos:end="13:47">(<argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><name pos:start="13:37" pos:end="13:37">s</name></expr></argument>, <argument pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><name pos:start="13:40" pos:end="13:42">out</name></expr></argument>, <argument pos:start="13:45" pos:end="13:46"><expr pos:start="13:45" pos:end="13:46"><name pos:start="13:45" pos:end="13:46">in</name></expr></argument>)</argument_list></call><operator pos:start="13:48" pos:end="13:48">)</operator> <operator pos:start="13:50" pos:end="13:50">&lt;</operator> <literal type="number" pos:start="13:52" pos:end="13:52">0</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:23"><block_content pos:start="15:13" pos:end="15:23">

            <return pos:start="15:13" pos:end="15:23">return <expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="17:9" pos:end="19:23"><if pos:start="17:9" pos:end="19:23">if <condition pos:start="17:12" pos:end="17:36">(<expr pos:start="17:13" pos:end="17:35"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:16">ret</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:30"><name pos:start="17:20" pos:end="17:27">swr_init</name><argument_list pos:start="17:28" pos:end="17:30">(<argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">s</name></expr></argument>)</argument_list></call><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:33">&lt;</operator> <literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:23"><block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:18"><expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:13">setup</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="31:5">else <block pos:start="23:12" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:23">

        <comment type="line" pos:start="25:9" pos:end="25:57">// return as is or reconfigure for input changes?</comment>

        <if_stmt pos:start="27:9" pos:end="29:23"><if pos:start="27:9" pos:end="29:23">if <condition pos:start="27:12" pos:end="27:47">(<expr pos:start="27:13" pos:end="27:46"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:16">ret</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:45"><name pos:start="27:20" pos:end="27:33">config_changed</name><argument_list pos:start="27:34" pos:end="27:45">(<argument pos:start="27:35" pos:end="27:35"><expr pos:start="27:35" pos:end="27:35"><name pos:start="27:35" pos:end="27:35">s</name></expr></argument>, <argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">out</name></expr></argument>, <argument pos:start="27:43" pos:end="27:44"><expr pos:start="27:43" pos:end="27:44"><name pos:start="27:43" pos:end="27:44">in</name></expr></argument>)</argument_list></call><operator pos:start="27:46" pos:end="27:46">)</operator></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="35:5" pos:end="63:5"><if pos:start="35:5" pos:end="63:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">out</name></expr>)</condition> <block pos:start="35:14" pos:end="63:5">{<block_content pos:start="37:9" pos:end="61:9">

        <if_stmt pos:start="37:9" pos:end="61:9"><if pos:start="37:9" pos:end="55:9">if <condition pos:start="37:12" pos:end="37:30">(<expr pos:start="37:13" pos:end="37:29"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:29"><name pos:start="37:14" pos:end="37:16">out</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:26">linesize</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="37:32" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:13">

            <expr_stmt pos:start="39:13" pos:end="43:34"><expr pos:start="39:13" pos:end="43:33"><name pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:15">out</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:27">nb_samples</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator>   <call pos:start="39:33" pos:end="39:68"><name pos:start="39:33" pos:end="39:45">swr_get_delay</name><argument_list pos:start="39:46" pos:end="39:68">(<argument pos:start="39:47" pos:end="39:47"><expr pos:start="39:47" pos:end="39:47"><name pos:start="39:47" pos:end="39:47">s</name></expr></argument>, <argument pos:start="39:50" pos:end="39:67"><expr pos:start="39:50" pos:end="39:67"><name pos:start="39:50" pos:end="39:67"><name pos:start="39:50" pos:end="39:50">s</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:67">out_sample_rate</name></name></expr></argument>)</argument_list></call>

                              <operator pos:start="41:31" pos:end="41:31">+</operator> <name pos:start="41:33" pos:end="41:46"><name pos:start="41:33" pos:end="41:34">in</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:46">nb_samples</name></name><operator pos:start="41:47" pos:end="41:47">*</operator><operator pos:start="41:48" pos:end="41:48">(</operator><name pos:start="41:49" pos:end="41:55">int64_t</name><operator pos:start="41:56" pos:end="41:56">)</operator><name pos:start="41:57" pos:end="41:74"><name pos:start="41:57" pos:end="41:57">s</name><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:74">out_sample_rate</name></name> <operator pos:start="41:76" pos:end="41:76">/</operator> <name pos:start="41:78" pos:end="41:94"><name pos:start="41:78" pos:end="41:78">s</name><operator pos:start="41:79" pos:end="41:80">-&gt;</operator><name pos:start="41:81" pos:end="41:94">in_sample_rate</name></name>

                              <operator pos:start="43:31" pos:end="43:31">+</operator> <literal type="number" pos:start="43:33" pos:end="43:33">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="53:13"><if pos:start="45:13" pos:end="53:13">if <condition pos:start="45:16" pos:end="45:56">(<expr pos:start="45:17" pos:end="45:55"><operator pos:start="45:17" pos:end="45:17">(</operator><name pos:start="45:18" pos:end="45:20">ret</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:50"><name pos:start="45:24" pos:end="45:42">av_frame_get_buffer</name><argument_list pos:start="45:43" pos:end="45:50">(<argument pos:start="45:44" pos:end="45:46"><expr pos:start="45:44" pos:end="45:46"><name pos:start="45:44" pos:end="45:46">out</name></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">0</literal></expr></argument>)</argument_list></call><operator pos:start="45:51" pos:end="45:51">)</operator> <operator pos:start="45:53" pos:end="45:53">&lt;</operator> <literal type="number" pos:start="45:55" pos:end="45:55">0</literal></expr>)</condition> <block pos:start="45:58" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:27">

                <if_stmt pos:start="47:17" pos:end="49:33"><if pos:start="47:17" pos:end="49:33">if <condition pos:start="47:20" pos:end="47:26">(<expr pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:25">setup</name></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:33"><block_content pos:start="49:21" pos:end="49:33">

                    <expr_stmt pos:start="49:21" pos:end="49:33"><expr pos:start="49:21" pos:end="49:32"><call pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:29">swr_close</name><argument_list pos:start="49:30" pos:end="49:32">(<argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <return pos:start="51:17" pos:end="51:27">return <expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="61:9">else <block pos:start="55:16" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:57">

            <if_stmt pos:start="57:13" pos:end="59:57"><if pos:start="57:13" pos:end="59:57">if <condition pos:start="57:16" pos:end="57:33">(<expr pos:start="57:17" pos:end="57:32"><operator pos:start="57:17" pos:end="57:17">!</operator><name pos:start="57:18" pos:end="57:32"><name pos:start="57:18" pos:end="57:20">out</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:32">nb_samples</name></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:57"><block_content pos:start="59:17" pos:end="59:57">

                <expr_stmt pos:start="59:17" pos:end="59:57"><expr pos:start="59:17" pos:end="59:56"><name pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:19">out</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:31">nb_samples</name></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <call pos:start="59:35" pos:end="59:56"><name pos:start="59:35" pos:end="59:51">available_samples</name><argument_list pos:start="59:52" pos:end="59:56">(<argument pos:start="59:53" pos:end="59:55"><expr pos:start="59:53" pos:end="59:55"><name pos:start="59:53" pos:end="59:55">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:37">return <expr pos:start="67:12" pos:end="67:36"><call pos:start="67:12" pos:end="67:36"><name pos:start="67:12" pos:end="67:24">convert_frame</name><argument_list pos:start="67:25" pos:end="67:36">(<argument pos:start="67:26" pos:end="67:26"><expr pos:start="67:26" pos:end="67:26"><name pos:start="67:26" pos:end="67:26">s</name></expr></argument>, <argument pos:start="67:29" pos:end="67:31"><expr pos:start="67:29" pos:end="67:31"><name pos:start="67:29" pos:end="67:31">out</name></expr></argument>, <argument pos:start="67:34" pos:end="67:35"><expr pos:start="67:34" pos:end="67:35"><name pos:start="67:34" pos:end="67:35">in</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
