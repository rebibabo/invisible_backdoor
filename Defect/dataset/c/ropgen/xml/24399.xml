<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24399.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">do_io_interrupt</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:41">CPUS390XState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="123:5">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">S390CPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:40">= <expr pos:start="5:20" pos:end="5:40"><call pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:35">s390_env_get_cpu</name><argument_list pos:start="5:36" pos:end="5:40">(<argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">LowCore</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">lowcore</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">IOIntQueue</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:15">isc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">disable</name> <init pos:start="13:17" pos:end="13:19">= <expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">found</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:39">(<expr pos:start="19:9" pos:end="19:38"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:23"><name pos:start="19:11" pos:end="19:13">env</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:18">psw</name><operator pos:start="19:19" pos:end="19:19">.</operator><name pos:start="19:20" pos:end="19:23">mask</name></name> <operator pos:start="19:25" pos:end="19:25">&amp;</operator> <name pos:start="19:27" pos:end="19:37">PSW_MASK_IO</name><operator pos:start="19:38" pos:end="19:38">)</operator></expr>)</condition> <block pos:start="19:41" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:54">

        <expr_stmt pos:start="21:9" pos:end="21:54"><expr pos:start="21:9" pos:end="21:53"><call pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:17">cpu_abort</name><argument_list pos:start="21:18" pos:end="21:53">(<argument pos:start="21:19" pos:end="21:26"><expr pos:start="21:19" pos:end="21:26"><call pos:start="21:19" pos:end="21:26"><name pos:start="21:19" pos:end="21:21">CPU</name><argument_list pos:start="21:22" pos:end="21:26">(<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:29" pos:end="21:52"><expr pos:start="21:29" pos:end="21:52"><literal type="string" pos:start="21:29" pos:end="21:52">"I/O int w/o I/O mask\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="115:5">for <control pos:start="27:9" pos:end="27:57">(<init pos:start="27:10" pos:end="27:17"><expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:12">isc</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</init> <condition pos:start="27:19" pos:end="27:50"><expr pos:start="27:19" pos:end="27:49"><name pos:start="27:19" pos:end="27:21">isc</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <call pos:start="27:25" pos:end="27:49"><name pos:start="27:25" pos:end="27:34">ARRAY_SIZE</name><argument_list pos:start="27:35" pos:end="27:49">(<argument pos:start="27:36" pos:end="27:48"><expr pos:start="27:36" pos:end="27:48"><name pos:start="27:36" pos:end="27:48"><name pos:start="27:36" pos:end="27:38">env</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:48">io_index</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="27:52" pos:end="27:56"><expr pos:start="27:52" pos:end="27:56"><name pos:start="27:52" pos:end="27:54">isc</name><operator pos:start="27:55" pos:end="27:56">++</operator></expr></incr>)</control> <block pos:start="27:59" pos:end="115:5">{<block_content pos:start="29:9" pos:end="113:17">

        <decl_stmt pos:start="29:9" pos:end="29:26"><decl pos:start="29:9" pos:end="29:25"><type pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">uint64_t</name></type> <name pos:start="29:18" pos:end="29:25">isc_bits</name></decl>;</decl_stmt>



        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:15">env</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">io_index</name><index pos:start="33:26" pos:end="33:30">[<expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">isc</name></expr>]</index></name> <operator pos:start="33:32" pos:end="33:32">&lt;</operator> <literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr>)</condition> <block pos:start="33:37" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:46">(<expr pos:start="39:13" pos:end="39:45"><name pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:15">env</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:25">io_index</name><index pos:start="39:26" pos:end="39:30">[<expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">isc</name></expr>]</index></name> <operator pos:start="39:32" pos:end="39:32">&gt;</operator> <name pos:start="39:34" pos:end="39:45">MAX_IO_QUEUE</name></expr>)</condition> <block pos:start="39:48" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:47">

            <expr_stmt pos:start="41:13" pos:end="43:47"><expr pos:start="41:13" pos:end="43:46"><call pos:start="41:13" pos:end="43:46"><name pos:start="41:13" pos:end="41:21">cpu_abort</name><argument_list pos:start="41:22" pos:end="43:46">(<argument pos:start="41:23" pos:end="41:30"><expr pos:start="41:23" pos:end="41:30"><call pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:25">CPU</name><argument_list pos:start="41:26" pos:end="41:30">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:33" pos:end="41:68"><expr pos:start="41:33" pos:end="41:68"><literal type="string" pos:start="41:33" pos:end="41:68">"I/O queue overrun for isc %d: %d\n"</literal></expr></argument>,

                      <argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:25">isc</name></expr></argument>, <argument pos:start="43:28" pos:end="43:45"><expr pos:start="43:28" pos:end="43:45"><name pos:start="43:28" pos:end="43:45"><name pos:start="43:28" pos:end="43:30">env</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:40">io_index</name><index pos:start="43:41" pos:end="43:45">[<expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">isc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:9">q</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <operator pos:start="49:13" pos:end="49:13">&amp;</operator><name pos:start="49:14" pos:end="49:51"><name pos:start="49:14" pos:end="49:16">env</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:26">io_queue</name><index pos:start="49:27" pos:end="49:46">[<expr pos:start="49:28" pos:end="49:45"><name pos:start="49:28" pos:end="49:45"><name pos:start="49:28" pos:end="49:30">env</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:40">io_index</name><index pos:start="49:41" pos:end="49:45">[<expr pos:start="49:42" pos:end="49:44"><name pos:start="49:42" pos:end="49:44">isc</name></expr>]</index></name></expr>]</index><index pos:start="49:47" pos:end="49:51">[<expr pos:start="49:48" pos:end="49:50"><name pos:start="49:48" pos:end="49:50">isc</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:16">isc_bits</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:60"><name pos:start="51:20" pos:end="51:34">ISC_TO_ISC_BITS</name><argument_list pos:start="51:35" pos:end="51:60">(<argument pos:start="51:36" pos:end="51:59"><expr pos:start="51:36" pos:end="51:59"><call pos:start="51:36" pos:end="51:59"><name pos:start="51:36" pos:end="51:50">IO_INT_WORD_ISC</name><argument_list pos:start="51:51" pos:end="51:59">(<argument pos:start="51:52" pos:end="51:58"><expr pos:start="51:52" pos:end="51:58"><name pos:start="51:52" pos:end="51:58"><name pos:start="51:52" pos:end="51:52">q</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:58">word</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:40">(<expr pos:start="53:13" pos:end="53:39"><operator pos:start="53:13" pos:end="53:13">!</operator><operator pos:start="53:14" pos:end="53:14">(</operator><name pos:start="53:15" pos:end="53:27"><name pos:start="53:15" pos:end="53:17">env</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">cregs</name><index pos:start="53:25" pos:end="53:27">[<expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">6</literal></expr>]</index></name> <operator pos:start="53:29" pos:end="53:29">&amp;</operator> <name pos:start="53:31" pos:end="53:38">isc_bits</name><operator pos:start="53:39" pos:end="53:39">)</operator></expr>)</condition> <block pos:start="53:42" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:21">

            <expr_stmt pos:start="55:13" pos:end="55:24"><expr pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:19">disable</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr>;</expr_stmt>

            <continue pos:start="57:13" pos:end="57:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="105:9"><if pos:start="61:9" pos:end="105:9">if <condition pos:start="61:12" pos:end="61:19">(<expr pos:start="61:13" pos:end="61:18"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:18">found</name></expr>)</condition> <block pos:start="61:21" pos:end="105:9">{<block_content pos:start="63:13" pos:end="103:38">

            <decl_stmt pos:start="63:13" pos:end="63:32"><decl pos:start="63:13" pos:end="63:25"><type pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:20">uint64_t</name></type> <name pos:start="63:22" pos:end="63:25">mask</name></decl>, <decl pos:start="63:28" pos:end="63:31"><type ref="prev" pos:start="63:13" pos:end="63:20"/><name pos:start="63:28" pos:end="63:31">addr</name></decl>;</decl_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:22"><expr pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:17">found</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:43"><expr pos:start="69:13" pos:end="69:42"><name pos:start="69:13" pos:end="69:19">lowcore</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:42"><name pos:start="69:23" pos:end="69:37">cpu_map_lowcore</name><argument_list pos:start="69:38" pos:end="69:42">(<argument pos:start="69:39" pos:end="69:41"><expr pos:start="69:39" pos:end="69:41"><name pos:start="69:39" pos:end="69:41">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:56"><expr pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:19">lowcore</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:34">subchannel_id</name></name> <operator pos:start="73:36" pos:end="73:36">=</operator> <call pos:start="73:38" pos:end="73:55"><name pos:start="73:38" pos:end="73:48">cpu_to_be16</name><argument_list pos:start="73:49" pos:end="73:55">(<argument pos:start="73:50" pos:end="73:54"><expr pos:start="73:50" pos:end="73:54"><name pos:start="73:50" pos:end="73:54"><name pos:start="73:50" pos:end="73:50">q</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:54">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:56"><expr pos:start="75:13" pos:end="75:55"><name pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:19">lowcore</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:34">subchannel_nr</name></name> <operator pos:start="75:36" pos:end="75:36">=</operator> <call pos:start="75:38" pos:end="75:55"><name pos:start="75:38" pos:end="75:48">cpu_to_be16</name><argument_list pos:start="75:49" pos:end="75:55">(<argument pos:start="75:50" pos:end="75:54"><expr pos:start="75:50" pos:end="75:54"><name pos:start="75:50" pos:end="75:54"><name pos:start="75:50" pos:end="75:50">q</name><operator pos:start="75:51" pos:end="75:52">-&gt;</operator><name pos:start="75:53" pos:end="75:54">nr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:56"><expr pos:start="77:13" pos:end="77:55"><name pos:start="77:13" pos:end="77:32"><name pos:start="77:13" pos:end="77:19">lowcore</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:32">io_int_parm</name></name> <operator pos:start="77:34" pos:end="77:34">=</operator> <call pos:start="77:36" pos:end="77:55"><name pos:start="77:36" pos:end="77:46">cpu_to_be32</name><argument_list pos:start="77:47" pos:end="77:55">(<argument pos:start="77:48" pos:end="77:54"><expr pos:start="77:48" pos:end="77:54"><name pos:start="77:48" pos:end="77:54"><name pos:start="77:48" pos:end="77:48">q</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:54">parm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:56"><expr pos:start="79:13" pos:end="79:55"><name pos:start="79:13" pos:end="79:32"><name pos:start="79:13" pos:end="79:19">lowcore</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:32">io_int_word</name></name> <operator pos:start="79:34" pos:end="79:34">=</operator> <call pos:start="79:36" pos:end="79:55"><name pos:start="79:36" pos:end="79:46">cpu_to_be32</name><argument_list pos:start="79:47" pos:end="79:55">(<argument pos:start="79:48" pos:end="79:54"><expr pos:start="79:48" pos:end="79:54"><name pos:start="79:48" pos:end="79:54"><name pos:start="79:48" pos:end="79:48">q</name><operator pos:start="79:49" pos:end="79:50">-&gt;</operator><name pos:start="79:51" pos:end="79:54">word</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:70"><expr pos:start="81:13" pos:end="81:69"><name pos:start="81:13" pos:end="81:36"><name pos:start="81:13" pos:end="81:19">lowcore</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:31">io_old_psw</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:36">mask</name></name> <operator pos:start="81:38" pos:end="81:38">=</operator> <call pos:start="81:40" pos:end="81:69"><name pos:start="81:40" pos:end="81:50">cpu_to_be64</name><argument_list pos:start="81:51" pos:end="81:69">(<argument pos:start="81:52" pos:end="81:68"><expr pos:start="81:52" pos:end="81:68"><call pos:start="81:52" pos:end="81:68"><name pos:start="81:52" pos:end="81:63">get_psw_mask</name><argument_list pos:start="81:64" pos:end="81:68">(<argument pos:start="81:65" pos:end="81:67"><expr pos:start="81:65" pos:end="81:67"><name pos:start="81:65" pos:end="81:67">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:66"><expr pos:start="83:13" pos:end="83:65"><name pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:19">lowcore</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:31">io_old_psw</name><operator pos:start="83:32" pos:end="83:32">.</operator><name pos:start="83:33" pos:end="83:36">addr</name></name> <operator pos:start="83:38" pos:end="83:38">=</operator> <call pos:start="83:40" pos:end="83:65"><name pos:start="83:40" pos:end="83:50">cpu_to_be64</name><argument_list pos:start="83:51" pos:end="83:65">(<argument pos:start="83:52" pos:end="83:64"><expr pos:start="83:52" pos:end="83:64"><name pos:start="83:52" pos:end="83:64"><name pos:start="83:52" pos:end="83:54">env</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:59">psw</name><operator pos:start="83:60" pos:end="83:60">.</operator><name pos:start="83:61" pos:end="83:64">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:57"><expr pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:16">mask</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:56"><name pos:start="85:20" pos:end="85:30">be64_to_cpu</name><argument_list pos:start="85:31" pos:end="85:56">(<argument pos:start="85:32" pos:end="85:55"><expr pos:start="85:32" pos:end="85:55"><name pos:start="85:32" pos:end="85:55"><name pos:start="85:32" pos:end="85:38">lowcore</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:50">io_new_psw</name><operator pos:start="85:51" pos:end="85:51">.</operator><name pos:start="85:52" pos:end="85:55">mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:57"><expr pos:start="87:13" pos:end="87:56"><name pos:start="87:13" pos:end="87:16">addr</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="87:56"><name pos:start="87:20" pos:end="87:30">be64_to_cpu</name><argument_list pos:start="87:31" pos:end="87:56">(<argument pos:start="87:32" pos:end="87:55"><expr pos:start="87:32" pos:end="87:55"><name pos:start="87:32" pos:end="87:55"><name pos:start="87:32" pos:end="87:38">lowcore</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:50">io_new_psw</name><operator pos:start="87:51" pos:end="87:51">.</operator><name pos:start="87:52" pos:end="87:55">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:39"><expr pos:start="91:13" pos:end="91:38"><call pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:29">cpu_unmap_lowcore</name><argument_list pos:start="91:30" pos:end="91:38">(<argument pos:start="91:31" pos:end="91:37"><expr pos:start="91:31" pos:end="91:37"><name pos:start="91:31" pos:end="91:37">lowcore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="95:13" pos:end="95:33"><expr pos:start="95:13" pos:end="95:32"><name pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:15">env</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:25">io_index</name><index pos:start="95:26" pos:end="95:30">[<expr pos:start="95:27" pos:end="95:29"><name pos:start="95:27" pos:end="95:29">isc</name></expr>]</index></name><operator pos:start="95:31" pos:end="95:32">--</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="99:13" pos:end="101:50"><expr pos:start="99:13" pos:end="101:49"><call pos:start="99:13" pos:end="101:49"><name pos:start="99:13" pos:end="99:19">DPRINTF</name><argument_list pos:start="99:20" pos:end="101:49">(<argument pos:start="99:21" pos:end="99:51"><expr pos:start="99:21" pos:end="99:51"><literal type="string" pos:start="99:21" pos:end="99:27">"%s: %"</literal> <name pos:start="99:29" pos:end="99:34">PRIx64</name> <literal type="string" pos:start="99:36" pos:end="99:39">" %"</literal> <name pos:start="99:41" pos:end="99:46">PRIx64</name> <literal type="string" pos:start="99:48" pos:end="99:51">"\n"</literal></expr></argument>, <argument pos:start="99:54" pos:end="99:61"><expr pos:start="99:54" pos:end="99:61"><name pos:start="99:54" pos:end="99:61">__func__</name></expr></argument>,

                    <argument pos:start="101:21" pos:end="101:33"><expr pos:start="101:21" pos:end="101:33"><name pos:start="101:21" pos:end="101:33"><name pos:start="101:21" pos:end="101:23">env</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:28">psw</name><operator pos:start="101:29" pos:end="101:29">.</operator><name pos:start="101:30" pos:end="101:33">mask</name></name></expr></argument>, <argument pos:start="101:36" pos:end="101:48"><expr pos:start="101:36" pos:end="101:48"><name pos:start="101:36" pos:end="101:48"><name pos:start="101:36" pos:end="101:38">env</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:43">psw</name><operator pos:start="101:44" pos:end="101:44">.</operator><name pos:start="101:45" pos:end="101:48">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:38"><expr pos:start="103:13" pos:end="103:37"><call pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:20">load_psw</name><argument_list pos:start="103:21" pos:end="103:37">(<argument pos:start="103:22" pos:end="103:24"><expr pos:start="103:22" pos:end="103:24"><name pos:start="103:22" pos:end="103:24">env</name></expr></argument>, <argument pos:start="103:27" pos:end="103:30"><expr pos:start="103:27" pos:end="103:30"><name pos:start="103:27" pos:end="103:30">mask</name></expr></argument>, <argument pos:start="103:33" pos:end="103:36"><expr pos:start="103:33" pos:end="103:36"><name pos:start="103:33" pos:end="103:36">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:36">(<expr pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:30"><name pos:start="107:13" pos:end="107:15">env</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:25">io_index</name><index pos:start="107:26" pos:end="107:30">[<expr pos:start="107:27" pos:end="107:29"><name pos:start="107:27" pos:end="107:29">isc</name></expr>]</index></name> <operator pos:start="107:32" pos:end="107:33">&gt;=</operator> <literal type="number" pos:start="107:35" pos:end="107:35">0</literal></expr>)</condition> <block pos:start="107:38" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:24">

            <expr_stmt pos:start="109:13" pos:end="109:24"><expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:19">disable</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <continue pos:start="113:9" pos:end="113:17">continue;</continue>

    </block_content>}</block></for>



    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:16">(<expr pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:15">disable</name></expr>)</condition> <block pos:start="119:18" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:42">

        <expr_stmt pos:start="121:9" pos:end="121:42"><expr pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:11">env</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:24">pending_int</name></name> <operator pos:start="121:26" pos:end="121:27">&amp;=</operator> <operator pos:start="121:29" pos:end="121:29">~</operator><name pos:start="121:30" pos:end="121:41">INTERRUPT_IO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



</block_content>}</block></function>
</unit>
