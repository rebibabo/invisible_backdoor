<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7767.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">check_exception</name><parameter_list pos:start="1:27" pos:end="1:54">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:36"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:36">intno</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:41">int</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:53">error_code</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:17">

    <decl_stmt pos:start="5:5" pos:end="9:57"><decl pos:start="5:5" pos:end="9:56"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:26">first_contributory</name> <init pos:start="5:28" pos:end="9:56">= <expr pos:start="5:30" pos:end="9:56"><name pos:start="5:30" pos:end="5:47"><name pos:start="5:30" pos:end="5:32">env</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:47">old_exception</name></name> <operator pos:start="5:49" pos:end="5:50">==</operator> <literal type="number" pos:start="5:52" pos:end="5:52">0</literal> <operator pos:start="5:54" pos:end="5:55">||</operator>

                              <operator pos:start="7:31" pos:end="7:31">(</operator><name pos:start="7:32" pos:end="7:49"><name pos:start="7:32" pos:end="7:34">env</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:49">old_exception</name></name> <operator pos:start="7:51" pos:end="7:52">&gt;=</operator> <literal type="number" pos:start="7:54" pos:end="7:55">10</literal> <operator pos:start="7:57" pos:end="7:58">&amp;&amp;</operator>

                               <name pos:start="9:32" pos:end="9:49"><name pos:start="9:32" pos:end="9:34">env</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:49">old_exception</name></name> <operator pos:start="9:51" pos:end="9:52">&lt;=</operator> <literal type="number" pos:start="9:54" pos:end="9:55">13</literal><operator pos:start="9:56" pos:end="9:56">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:60"><decl pos:start="11:5" pos:end="13:59"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:27">second_contributory</name> <init pos:start="11:29" pos:end="13:59">= <expr pos:start="11:31" pos:end="13:59"><name pos:start="11:31" pos:end="11:35">intno</name> <operator pos:start="11:37" pos:end="11:38">==</operator> <literal type="number" pos:start="11:40" pos:end="11:40">0</literal> <operator pos:start="11:42" pos:end="11:43">||</operator>

                               <operator pos:start="13:32" pos:end="13:32">(</operator><name pos:start="13:33" pos:end="13:37">intno</name> <operator pos:start="13:39" pos:end="13:40">&gt;=</operator> <literal type="number" pos:start="13:42" pos:end="13:43">10</literal> <operator pos:start="13:45" pos:end="13:46">&amp;&amp;</operator> <name pos:start="13:48" pos:end="13:52">intno</name> <operator pos:start="13:54" pos:end="13:55">&lt;=</operator> <literal type="number" pos:start="13:57" pos:end="13:58">13</literal><operator pos:start="13:59" pos:end="13:59">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:43"><expr pos:start="17:5" pos:end="19:42"><call pos:start="17:5" pos:end="19:42"><name pos:start="17:5" pos:end="17:17">qemu_log_mask</name><argument_list pos:start="17:18" pos:end="19:42">(<argument pos:start="17:19" pos:end="17:29"><expr pos:start="17:19" pos:end="17:29"><name pos:start="17:19" pos:end="17:29">CPU_LOG_INT</name></expr></argument>, <argument pos:start="17:32" pos:end="17:69"><expr pos:start="17:32" pos:end="17:69"><literal type="string" pos:start="17:32" pos:end="17:69">"check_exception old: 0x%x new 0x%x\n"</literal></expr></argument>,

                <argument pos:start="19:17" pos:end="19:34"><expr pos:start="19:17" pos:end="19:34"><name pos:start="19:17" pos:end="19:34"><name pos:start="19:17" pos:end="19:19">env</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:34">old_exception</name></name></expr></argument>, <argument pos:start="19:37" pos:end="19:41"><expr pos:start="19:37" pos:end="19:41"><name pos:start="19:37" pos:end="19:41">intno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:39"><if pos:start="23:5" pos:end="25:39">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:26">old_exception</name></name> <operator pos:start="23:28" pos:end="23:29">==</operator> <name pos:start="23:31" pos:end="23:41">EXCP08_DBLE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:39"><block_content pos:start="25:9" pos:end="25:39">

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:17">cpu_abort</name><argument_list pos:start="25:18" pos:end="25:38">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">env</name></expr></argument>, <argument pos:start="25:24" pos:end="25:37"><expr pos:start="25:24" pos:end="25:37"><literal type="string" pos:start="25:24" pos:end="25:37">"triple fault"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="33:61">(<expr pos:start="29:9" pos:end="33:60"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:27">first_contributory</name> <operator pos:start="29:29" pos:end="29:30">&amp;&amp;</operator> <name pos:start="29:32" pos:end="29:50">second_contributory</name><operator pos:start="29:51" pos:end="29:51">)</operator>

        <operator pos:start="31:9" pos:end="31:10">||</operator> <operator pos:start="31:12" pos:end="31:12">(</operator><name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:15">env</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:30">old_exception</name></name> <operator pos:start="31:32" pos:end="31:33">==</operator> <name pos:start="31:35" pos:end="31:45">EXCP0E_PAGE</name> <operator pos:start="31:47" pos:end="31:48">&amp;&amp;</operator>

            <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:32">second_contributory</name> <operator pos:start="33:34" pos:end="33:35">||</operator> <operator pos:start="33:37" pos:end="33:37">(</operator><name pos:start="33:38" pos:end="33:42">intno</name> <operator pos:start="33:44" pos:end="33:45">==</operator> <name pos:start="33:47" pos:end="33:57">EXCP0E_PAGE</name><operator pos:start="33:58" pos:end="33:58">)</operator><operator pos:start="33:59" pos:end="33:59">)</operator><operator pos:start="33:60" pos:end="33:60">)</operator></expr>)</condition> <block pos:start="33:63" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:24">

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:13">intno</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:27">EXCP08_DBLE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:19">error_code</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="47:35"><if pos:start="43:5" pos:end="47:35">if <condition pos:start="43:8" pos:end="45:31">(<expr pos:start="43:9" pos:end="45:30"><name pos:start="43:9" pos:end="43:27">second_contributory</name> <operator pos:start="43:29" pos:end="43:30">||</operator> <operator pos:start="43:32" pos:end="43:32">(</operator><name pos:start="43:33" pos:end="43:37">intno</name> <operator pos:start="43:39" pos:end="43:40">==</operator> <name pos:start="43:42" pos:end="43:52">EXCP0E_PAGE</name><operator pos:start="43:53" pos:end="43:53">)</operator> <operator pos:start="43:55" pos:end="43:56">||</operator>

        <operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:14">intno</name> <operator pos:start="45:16" pos:end="45:17">==</operator> <name pos:start="45:19" pos:end="45:29">EXCP08_DBLE</name><operator pos:start="45:30" pos:end="45:30">)</operator></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:35"><block_content pos:start="47:9" pos:end="47:35">

        <expr_stmt pos:start="47:9" pos:end="47:35"><expr pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:11">env</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:26">old_exception</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:34">intno</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="51:5" pos:end="51:17">return <expr pos:start="51:12" pos:end="51:16"><name pos:start="51:12" pos:end="51:16">intno</name></expr>;</return>

</block_content>}</block></function>
</unit>
