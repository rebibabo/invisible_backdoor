<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12981.c" pos:tabs="8"><function pos:start="1:1" pos:end="624:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">swf_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="624:1">{<block_content pos:start="5:5" pos:end="622:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SWFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">swf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">vst</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>, <decl pos:start="9:27" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:30">ast</name> <init pos:start="9:32" pos:end="9:37">= <expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">NULL</name></expr></init></decl>, <decl pos:start="9:40" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:40" pos:end="9:40">*</modifier></type><name pos:start="9:41" pos:end="9:42">st</name> <init pos:start="9:44" pos:end="9:46">= <expr pos:start="9:46" pos:end="9:46"><literal type="number" pos:start="9:46" pos:end="9:46">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">tag</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">len</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:19">i</name></decl>, <decl pos:start="11:22" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:26">frame</name></decl>, <decl pos:start="11:29" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:29">v</name></decl>, <decl pos:start="11:32" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:32" pos:end="11:34">res</name></decl>;</decl_stmt>



<cpp:if pos:start="15:1" pos:end="15:15">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15">CONFIG_ZLIB</name></expr></cpp:if>

    <if_stmt pos:start="17:5" pos:end="22:0"><if pos:start="17:5" pos:end="22:0">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">swf</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">zpb</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="22:0"><block_content pos:start="19:9" pos:end="22:0">

        <expr_stmt pos:start="19:9" pos:end="22:0"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:10">pb</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:21"><name pos:start="19:14" pos:end="19:16">swf</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:21">zpb</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>



    <for pos:start="25:5" pos:end="622:5">for<control pos:start="25:8" pos:end="25:11">(<init pos:start="25:9" pos:end="25:9">;</init><condition pos:start="25:10" pos:end="25:10">;</condition><incr/>)</control> <block pos:start="25:13" pos:end="622:5">{<block_content pos:start="27:9" pos:end="620:27">

        <decl_stmt pos:start="27:9" pos:end="27:37"><decl pos:start="27:9" pos:end="27:36"><type pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:16">uint64_t</name></type> <name pos:start="27:18" pos:end="27:20">pos</name> <init pos:start="27:22" pos:end="27:36">= <expr pos:start="27:24" pos:end="27:36"><call pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:32">avio_tell</name><argument_list pos:start="27:33" pos:end="27:36">(<argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:11">tag</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:35"><name pos:start="29:15" pos:end="29:25">get_swf_tag</name><argument_list pos:start="29:26" pos:end="29:35">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">pb</name></expr></argument>, <argument pos:start="29:31" pos:end="29:34"><expr pos:start="29:31" pos:end="29:34"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">tag</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">tag</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:20">(<expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:17">&lt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>)</condition> <block pos:start="35:22" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:39">

            <expr_stmt pos:start="37:13" pos:end="37:69"><expr pos:start="37:13" pos:end="37:68"><call pos:start="37:13" pos:end="37:68"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:68">(<argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">s</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:62"><expr pos:start="37:37" pos:end="37:62"><literal type="string" pos:start="37:37" pos:end="37:62">"invalid tag length: %d\n"</literal></expr></argument>, <argument pos:start="37:65" pos:end="37:67"><expr pos:start="37:65" pos:end="37:67"><name pos:start="37:65" pos:end="37:67">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:39">return <expr pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="610:9"><if pos:start="43:9" pos:end="89:9">if <condition pos:start="43:12" pos:end="43:35">(<expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:15">tag</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <name pos:start="43:20" pos:end="43:34">TAG_VIDEOSTREAM</name></expr>)</condition> <block pos:start="43:37" pos:end="89:9">{<block_content pos:start="45:13" pos:end="87:21">

            <decl_stmt pos:start="45:13" pos:end="45:38"><decl pos:start="45:13" pos:end="45:37"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:21">ch_id</name> <init pos:start="45:23" pos:end="45:37">= <expr pos:start="45:25" pos:end="45:37"><call pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:33">avio_rl16</name><argument_list pos:start="45:34" pos:end="45:37">(<argument pos:start="45:35" pos:end="45:36"><expr pos:start="45:35" pos:end="45:36"><name pos:start="45:35" pos:end="45:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:21"><expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">len</name> <operator pos:start="47:17" pos:end="47:18">-=</operator> <literal type="number" pos:start="47:20" pos:end="47:20">2</literal></expr>;</expr_stmt>



            <for pos:start="51:13" pos:end="59:13">for <control pos:start="51:17" pos:end="51:43">(<init pos:start="51:18" pos:end="51:21"><expr pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:18">i</name><operator pos:start="51:19" pos:end="51:19">=</operator><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</init> <condition pos:start="51:23" pos:end="51:38"><expr pos:start="51:23" pos:end="51:37"><name pos:start="51:23" pos:end="51:23">i</name><operator pos:start="51:24" pos:end="51:24">&lt;</operator><name pos:start="51:25" pos:end="51:37"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:37">nb_streams</name></name></expr>;</condition> <incr pos:start="51:40" pos:end="51:42"><expr pos:start="51:40" pos:end="51:42"><name pos:start="51:40" pos:end="51:40">i</name><operator pos:start="51:41" pos:end="51:42">++</operator></expr></incr>)</control> <block pos:start="51:45" pos:end="59:13">{<block_content pos:start="53:17" pos:end="57:30">

                <expr_stmt pos:start="53:17" pos:end="53:35"><expr pos:start="53:17" pos:end="53:34"><name pos:start="53:17" pos:end="53:18">st</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:34"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:31">streams</name><index pos:start="53:32" pos:end="53:34">[<expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="57:30"><if pos:start="55:17" pos:end="57:30">if <condition pos:start="55:20" pos:end="55:83">(<expr pos:start="55:21" pos:end="55:82"><name pos:start="55:21" pos:end="55:41"><name pos:start="55:21" pos:end="55:22">st</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:29">codec</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:41">codec_type</name></name> <operator pos:start="55:43" pos:end="55:44">==</operator> <name pos:start="55:46" pos:end="55:63">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="55:65" pos:end="55:66">&amp;&amp;</operator> <name pos:start="55:68" pos:end="55:73"><name pos:start="55:68" pos:end="55:69">st</name><operator pos:start="55:70" pos:end="55:71">-&gt;</operator><name pos:start="55:72" pos:end="55:73">id</name></name> <operator pos:start="55:75" pos:end="55:76">==</operator> <name pos:start="55:78" pos:end="55:82">ch_id</name></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:30"><block_content pos:start="57:21" pos:end="57:30">

                    <goto pos:start="57:21" pos:end="57:30">goto <name pos:start="57:26" pos:end="57:29">skip</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="63:13" pos:end="63:26"><expr pos:start="63:13" pos:end="63:25"><call pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:21">avio_rl16</name><argument_list pos:start="63:22" pos:end="63:25">(<argument pos:start="63:23" pos:end="63:24"><expr pos:start="63:23" pos:end="63:24"><name pos:start="63:23" pos:end="63:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:26"><expr pos:start="65:13" pos:end="65:25"><call pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:21">avio_rl16</name><argument_list pos:start="65:22" pos:end="65:25">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><call pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:21">avio_rl16</name><argument_list pos:start="67:22" pos:end="67:25">(<argument pos:start="67:23" pos:end="67:24"><expr pos:start="67:23" pos:end="67:24"><name pos:start="67:23" pos:end="67:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:24"><expr pos:start="69:13" pos:end="69:23"><call pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:19">avio_r8</name><argument_list pos:start="69:20" pos:end="69:23">(<argument pos:start="69:21" pos:end="69:22"><expr pos:start="69:21" pos:end="69:22"><name pos:start="69:21" pos:end="69:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="71:13" pos:end="71:32">/* Check for FLV1 */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:15">vst</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:46"><name pos:start="73:19" pos:end="73:37">avformat_new_stream</name><argument_list pos:start="73:38" pos:end="73:46">(<argument pos:start="73:39" pos:end="73:39"><expr pos:start="73:39" pos:end="73:39"><name pos:start="73:39" pos:end="73:39">s</name></expr></argument>, <argument pos:start="73:42" pos:end="73:45"><expr pos:start="73:42" pos:end="73:45"><name pos:start="73:42" pos:end="73:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="77:39"><if pos:start="75:13" pos:end="77:39">if <condition pos:start="75:16" pos:end="75:21">(<expr pos:start="75:17" pos:end="75:20"><operator pos:start="75:17" pos:end="75:17">!</operator><name pos:start="75:18" pos:end="75:20">vst</name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:39"><block_content pos:start="77:17" pos:end="77:39">

                <return pos:start="77:17" pos:end="77:39">return <expr pos:start="77:24" pos:end="77:38"><call pos:start="77:24" pos:end="77:38"><name pos:start="77:24" pos:end="77:30">AVERROR</name><argument_list pos:start="77:31" pos:end="77:38">(<argument pos:start="77:32" pos:end="77:37"><expr pos:start="77:32" pos:end="77:37"><name pos:start="77:32" pos:end="77:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:15">vst</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:19">id</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:27">ch_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:56"><expr pos:start="81:13" pos:end="81:55"><name pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:15">vst</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:22">codec</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:34">codec_type</name></name> <operator pos:start="81:36" pos:end="81:36">=</operator> <name pos:start="81:38" pos:end="81:55">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:83"><expr pos:start="83:13" pos:end="83:82"><name pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:15">vst</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:22">codec</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:32">codec_id</name></name> <operator pos:start="83:34" pos:end="83:34">=</operator> <call pos:start="83:36" pos:end="83:82"><name pos:start="83:36" pos:end="83:50">ff_codec_get_id</name><argument_list pos:start="83:51" pos:end="83:82">(<argument pos:start="83:52" pos:end="83:68"><expr pos:start="83:52" pos:end="83:68"><name pos:start="83:52" pos:end="83:68">ff_swf_codec_tags</name></expr></argument>, <argument pos:start="83:71" pos:end="83:81"><expr pos:start="83:71" pos:end="83:81"><call pos:start="83:71" pos:end="83:81"><name pos:start="83:71" pos:end="83:77">avio_r8</name><argument_list pos:start="83:78" pos:end="83:81">(<argument pos:start="83:79" pos:end="83:80"><expr pos:start="83:79" pos:end="83:80"><name pos:start="83:79" pos:end="83:80">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:63"><expr pos:start="85:13" pos:end="85:62"><call pos:start="85:13" pos:end="85:62"><name pos:start="85:13" pos:end="85:31">avpriv_set_pts_info</name><argument_list pos:start="85:32" pos:end="85:62">(<argument pos:start="85:33" pos:end="85:35"><expr pos:start="85:33" pos:end="85:35"><name pos:start="85:33" pos:end="85:35">vst</name></expr></argument>, <argument pos:start="85:38" pos:end="85:39"><expr pos:start="85:38" pos:end="85:39"><literal type="number" pos:start="85:38" pos:end="85:39">16</literal></expr></argument>, <argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><literal type="number" pos:start="85:42" pos:end="85:44">256</literal></expr></argument>, <argument pos:start="85:47" pos:end="85:61"><expr pos:start="85:47" pos:end="85:61"><name pos:start="85:47" pos:end="85:61"><name pos:start="85:47" pos:end="85:49">swf</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:61">frame_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:21"><expr pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:15">len</name> <operator pos:start="87:17" pos:end="87:18">-=</operator> <literal type="number" pos:start="87:20" pos:end="87:20">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="89:11" pos:end="121:9">else if <condition pos:start="89:19" pos:end="89:67">(<expr pos:start="89:20" pos:end="89:66"><name pos:start="89:20" pos:end="89:22">tag</name> <operator pos:start="89:24" pos:end="89:25">==</operator> <name pos:start="89:27" pos:end="89:40">TAG_STREAMHEAD</name> <operator pos:start="89:42" pos:end="89:43">||</operator> <name pos:start="89:45" pos:end="89:47">tag</name> <operator pos:start="89:49" pos:end="89:50">==</operator> <name pos:start="89:52" pos:end="89:66">TAG_STREAMHEAD2</name></expr>)</condition> <block pos:start="89:69" pos:end="121:9">{<block_content pos:start="95:13" pos:end="119:21">

            <comment type="block" pos:start="91:13" pos:end="91:33">/* streaming found */</comment>



            <for pos:start="95:13" pos:end="103:13">for <control pos:start="95:17" pos:end="95:43">(<init pos:start="95:18" pos:end="95:21"><expr pos:start="95:18" pos:end="95:20"><name pos:start="95:18" pos:end="95:18">i</name><operator pos:start="95:19" pos:end="95:19">=</operator><literal type="number" pos:start="95:20" pos:end="95:20">0</literal></expr>;</init> <condition pos:start="95:23" pos:end="95:38"><expr pos:start="95:23" pos:end="95:37"><name pos:start="95:23" pos:end="95:23">i</name><operator pos:start="95:24" pos:end="95:24">&lt;</operator><name pos:start="95:25" pos:end="95:37"><name pos:start="95:25" pos:end="95:25">s</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:37">nb_streams</name></name></expr>;</condition> <incr pos:start="95:40" pos:end="95:42"><expr pos:start="95:40" pos:end="95:42"><name pos:start="95:40" pos:end="95:40">i</name><operator pos:start="95:41" pos:end="95:42">++</operator></expr></incr>)</control> <block pos:start="95:45" pos:end="103:13">{<block_content pos:start="97:17" pos:end="101:30">

                <expr_stmt pos:start="97:17" pos:end="97:35"><expr pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:18">st</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <name pos:start="97:22" pos:end="97:34"><name pos:start="97:22" pos:end="97:22">s</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:31">streams</name><index pos:start="97:32" pos:end="97:34">[<expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="99:17" pos:end="101:30"><if pos:start="99:17" pos:end="101:30">if <condition pos:start="99:20" pos:end="99:80">(<expr pos:start="99:21" pos:end="99:79"><name pos:start="99:21" pos:end="99:41"><name pos:start="99:21" pos:end="99:22">st</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:29">codec</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:41">codec_type</name></name> <operator pos:start="99:43" pos:end="99:44">==</operator> <name pos:start="99:46" pos:end="99:63">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="99:65" pos:end="99:66">&amp;&amp;</operator> <name pos:start="99:68" pos:end="99:73"><name pos:start="99:68" pos:end="99:69">st</name><operator pos:start="99:70" pos:end="99:71">-&gt;</operator><name pos:start="99:72" pos:end="99:73">id</name></name> <operator pos:start="99:75" pos:end="99:76">==</operator> <operator pos:start="99:78" pos:end="99:78">-</operator><literal type="number" pos:start="99:79" pos:end="99:79">1</literal></expr>)</condition><block type="pseudo" pos:start="101:21" pos:end="101:30"><block_content pos:start="101:21" pos:end="101:30">

                    <goto pos:start="101:21" pos:end="101:30">goto <name pos:start="101:26" pos:end="101:29">skip</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="107:13" pos:end="107:24"><expr pos:start="107:13" pos:end="107:23"><call pos:start="107:13" pos:end="107:23"><name pos:start="107:13" pos:end="107:19">avio_r8</name><argument_list pos:start="107:20" pos:end="107:23">(<argument pos:start="107:21" pos:end="107:22"><expr pos:start="107:21" pos:end="107:22"><name pos:start="107:21" pos:end="107:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:28"><expr pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:13">v</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <call pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:23">avio_r8</name><argument_list pos:start="109:24" pos:end="109:27">(<argument pos:start="109:25" pos:end="109:26"><expr pos:start="109:25" pos:end="109:26"><name pos:start="109:25" pos:end="109:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:51"><expr pos:start="111:13" pos:end="111:50"><name pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:15">swf</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:34">samples_per_frame</name></name> <operator pos:start="111:36" pos:end="111:36">=</operator> <call pos:start="111:38" pos:end="111:50"><name pos:start="111:38" pos:end="111:46">avio_rl16</name><argument_list pos:start="111:47" pos:end="111:50">(<argument pos:start="111:48" pos:end="111:49"><expr pos:start="111:48" pos:end="111:49"><name pos:start="111:48" pos:end="111:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:52"><expr pos:start="113:13" pos:end="113:51"><name pos:start="113:13" pos:end="113:15">ast</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:51"><name pos:start="113:19" pos:end="113:41">create_new_audio_stream</name><argument_list pos:start="113:42" pos:end="113:51">(<argument pos:start="113:43" pos:end="113:43"><expr pos:start="113:43" pos:end="113:43"><name pos:start="113:43" pos:end="113:43">s</name></expr></argument>, <argument pos:start="113:46" pos:end="113:47"><expr pos:start="113:46" pos:end="113:47"><operator pos:start="113:46" pos:end="113:46">-</operator><literal type="number" pos:start="113:47" pos:end="113:47">1</literal></expr></argument>, <argument pos:start="113:50" pos:end="113:50"><expr pos:start="113:50" pos:end="113:50"><name pos:start="113:50" pos:end="113:50">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:54" pos:end="113:100">/* -1 to avoid clash with video stream ch_id */</comment>

            <if_stmt pos:start="115:13" pos:end="117:39"><if pos:start="115:13" pos:end="117:39">if <condition pos:start="115:16" pos:end="115:21">(<expr pos:start="115:17" pos:end="115:20"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:20">ast</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:39"><block_content pos:start="117:17" pos:end="117:39">

                <return pos:start="117:17" pos:end="117:39">return <expr pos:start="117:24" pos:end="117:38"><call pos:start="117:24" pos:end="117:38"><name pos:start="117:24" pos:end="117:30">AVERROR</name><argument_list pos:start="117:31" pos:end="117:38">(<argument pos:start="117:32" pos:end="117:37"><expr pos:start="117:32" pos:end="117:37"><name pos:start="117:32" pos:end="117:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:21"><expr pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:15">len</name> <operator pos:start="119:17" pos:end="119:18">-=</operator> <literal type="number" pos:start="119:20" pos:end="119:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="121:11" pos:end="177:9">else if <condition pos:start="121:19" pos:end="121:42">(<expr pos:start="121:20" pos:end="121:41"><name pos:start="121:20" pos:end="121:22">tag</name> <operator pos:start="121:24" pos:end="121:25">==</operator> <name pos:start="121:27" pos:end="121:41">TAG_DEFINESOUND</name></expr>)</condition> <block pos:start="121:44" pos:end="177:9">{<block_content pos:start="125:13" pos:end="175:29">

            <comment type="block" pos:start="123:13" pos:end="123:30">/* audio stream */</comment>

            <decl_stmt pos:start="125:13" pos:end="125:38"><decl pos:start="125:13" pos:end="125:37"><type pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:15">int</name></type> <name pos:start="125:17" pos:end="125:21">ch_id</name> <init pos:start="125:23" pos:end="125:37">= <expr pos:start="125:25" pos:end="125:37"><call pos:start="125:25" pos:end="125:37"><name pos:start="125:25" pos:end="125:33">avio_rl16</name><argument_list pos:start="125:34" pos:end="125:37">(<argument pos:start="125:35" pos:end="125:36"><expr pos:start="125:35" pos:end="125:36"><name pos:start="125:35" pos:end="125:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <for pos:start="129:13" pos:end="137:13">for <control pos:start="129:17" pos:end="129:43">(<init pos:start="129:18" pos:end="129:21"><expr pos:start="129:18" pos:end="129:20"><name pos:start="129:18" pos:end="129:18">i</name><operator pos:start="129:19" pos:end="129:19">=</operator><literal type="number" pos:start="129:20" pos:end="129:20">0</literal></expr>;</init> <condition pos:start="129:23" pos:end="129:38"><expr pos:start="129:23" pos:end="129:37"><name pos:start="129:23" pos:end="129:23">i</name><operator pos:start="129:24" pos:end="129:24">&lt;</operator><name pos:start="129:25" pos:end="129:37"><name pos:start="129:25" pos:end="129:25">s</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:37">nb_streams</name></name></expr>;</condition> <incr pos:start="129:40" pos:end="129:42"><expr pos:start="129:40" pos:end="129:42"><name pos:start="129:40" pos:end="129:40">i</name><operator pos:start="129:41" pos:end="129:42">++</operator></expr></incr>)</control> <block pos:start="129:45" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:30">

                <expr_stmt pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:18">st</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:34"><name pos:start="131:22" pos:end="131:22">s</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:31">streams</name><index pos:start="131:32" pos:end="131:34">[<expr pos:start="131:33" pos:end="131:33"><name pos:start="131:33" pos:end="131:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="133:17" pos:end="135:30"><if pos:start="133:17" pos:end="135:30">if <condition pos:start="133:20" pos:end="133:83">(<expr pos:start="133:21" pos:end="133:82"><name pos:start="133:21" pos:end="133:41"><name pos:start="133:21" pos:end="133:22">st</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:29">codec</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:41">codec_type</name></name> <operator pos:start="133:43" pos:end="133:44">==</operator> <name pos:start="133:46" pos:end="133:63">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="133:65" pos:end="133:66">&amp;&amp;</operator> <name pos:start="133:68" pos:end="133:73"><name pos:start="133:68" pos:end="133:69">st</name><operator pos:start="133:70" pos:end="133:71">-&gt;</operator><name pos:start="133:72" pos:end="133:73">id</name></name> <operator pos:start="133:75" pos:end="133:76">==</operator> <name pos:start="133:78" pos:end="133:82">ch_id</name></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:30"><block_content pos:start="135:21" pos:end="135:30">

                    <goto pos:start="135:21" pos:end="135:30">goto <name pos:start="135:26" pos:end="135:29">skip</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>



            <comment type="line" pos:start="141:13" pos:end="141:88">// FIXME: The entire audio stream is stored in a single chunk/tag. Normally,</comment>

            <comment type="line" pos:start="143:13" pos:end="143:88">// these are smaller audio streams in DEFINESOUND tags, but it's technically</comment>

            <comment type="line" pos:start="145:13" pos:end="145:90">// possible they could be huge. Break it up into multiple packets if it's big.</comment>

            <expr_stmt pos:start="147:13" pos:end="147:28"><expr pos:start="147:13" pos:end="147:27"><name pos:start="147:13" pos:end="147:13">v</name> <operator pos:start="147:15" pos:end="147:15">=</operator> <call pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:23">avio_r8</name><argument_list pos:start="147:24" pos:end="147:27">(<argument pos:start="147:25" pos:end="147:26"><expr pos:start="147:25" pos:end="147:26"><name pos:start="147:25" pos:end="147:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:55"><expr pos:start="149:13" pos:end="149:54"><name pos:start="149:13" pos:end="149:15">ast</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="149:54"><name pos:start="149:19" pos:end="149:41">create_new_audio_stream</name><argument_list pos:start="149:42" pos:end="149:54">(<argument pos:start="149:43" pos:end="149:43"><expr pos:start="149:43" pos:end="149:43"><name pos:start="149:43" pos:end="149:43">s</name></expr></argument>, <argument pos:start="149:46" pos:end="149:50"><expr pos:start="149:46" pos:end="149:50"><name pos:start="149:46" pos:end="149:50">ch_id</name></expr></argument>, <argument pos:start="149:53" pos:end="149:53"><expr pos:start="149:53" pos:end="149:53"><name pos:start="149:53" pos:end="149:53">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="153:39"><if pos:start="151:13" pos:end="153:39">if <condition pos:start="151:16" pos:end="151:21">(<expr pos:start="151:17" pos:end="151:20"><operator pos:start="151:17" pos:end="151:17">!</operator><name pos:start="151:18" pos:end="151:20">ast</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:39"><block_content pos:start="153:17" pos:end="153:39">

                <return pos:start="153:17" pos:end="153:39">return <expr pos:start="153:24" pos:end="153:38"><call pos:start="153:24" pos:end="153:38"><name pos:start="153:24" pos:end="153:30">AVERROR</name><argument_list pos:start="153:31" pos:end="153:38">(<argument pos:start="153:32" pos:end="153:37"><expr pos:start="153:32" pos:end="153:37"><name pos:start="153:32" pos:end="153:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:42"><expr pos:start="155:13" pos:end="155:41"><name pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:15">ast</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:25">duration</name></name> <operator pos:start="155:27" pos:end="155:27">=</operator> <call pos:start="155:29" pos:end="155:41"><name pos:start="155:29" pos:end="155:37">avio_rl32</name><argument_list pos:start="155:38" pos:end="155:41">(<argument pos:start="155:39" pos:end="155:40"><expr pos:start="155:39" pos:end="155:40"><name pos:start="155:39" pos:end="155:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="155:44" pos:end="155:63">// number of samples</comment>

            <if_stmt pos:start="157:13" pos:end="163:13"><if pos:start="157:13" pos:end="163:13">if <condition pos:start="157:16" pos:end="157:35">(<expr pos:start="157:17" pos:end="157:34"><operator pos:start="157:17" pos:end="157:17">(</operator><operator pos:start="157:18" pos:end="157:18">(</operator><name pos:start="157:19" pos:end="157:19">v</name><operator pos:start="157:20" pos:end="157:21">&gt;&gt;</operator><literal type="number" pos:start="157:22" pos:end="157:22">4</literal><operator pos:start="157:23" pos:end="157:23">)</operator> <operator pos:start="157:25" pos:end="157:25">&amp;</operator> <literal type="number" pos:start="157:27" pos:end="157:28">15</literal><operator pos:start="157:29" pos:end="157:29">)</operator> <operator pos:start="157:31" pos:end="157:32">==</operator> <literal type="number" pos:start="157:34" pos:end="157:34">2</literal></expr>)</condition> <block pos:start="157:37" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:25"> <comment type="line" pos:start="157:39" pos:end="157:62">// MP3 sound data record</comment>

                <expr_stmt pos:start="159:17" pos:end="159:50"><expr pos:start="159:17" pos:end="159:49"><name pos:start="159:17" pos:end="159:33"><name pos:start="159:17" pos:end="159:19">ast</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:33">skip_samples</name></name> <operator pos:start="159:35" pos:end="159:35">=</operator> <call pos:start="159:37" pos:end="159:49"><name pos:start="159:37" pos:end="159:45">avio_rl16</name><argument_list pos:start="159:46" pos:end="159:49">(<argument pos:start="159:47" pos:end="159:48"><expr pos:start="159:47" pos:end="159:48"><name pos:start="159:47" pos:end="159:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:25"><expr pos:start="161:17" pos:end="161:24"><name pos:start="161:17" pos:end="161:19">len</name> <operator pos:start="161:21" pos:end="161:22">-=</operator> <literal type="number" pos:start="161:24" pos:end="161:24">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:21"><expr pos:start="165:13" pos:end="165:20"><name pos:start="165:13" pos:end="165:15">len</name> <operator pos:start="165:17" pos:end="165:18">-=</operator> <literal type="number" pos:start="165:20" pos:end="165:20">7</literal></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="169:27"><if pos:start="167:13" pos:end="169:27">if <condition pos:start="167:16" pos:end="167:56">(<expr pos:start="167:17" pos:end="167:55"><operator pos:start="167:17" pos:end="167:17">(</operator><name pos:start="167:18" pos:end="167:20">res</name> <operator pos:start="167:22" pos:end="167:22">=</operator> <call pos:start="167:24" pos:end="167:50"><name pos:start="167:24" pos:end="167:36">av_get_packet</name><argument_list pos:start="167:37" pos:end="167:50">(<argument pos:start="167:38" pos:end="167:39"><expr pos:start="167:38" pos:end="167:39"><name pos:start="167:38" pos:end="167:39">pb</name></expr></argument>, <argument pos:start="167:42" pos:end="167:44"><expr pos:start="167:42" pos:end="167:44"><name pos:start="167:42" pos:end="167:44">pkt</name></expr></argument>, <argument pos:start="167:47" pos:end="167:49"><expr pos:start="167:47" pos:end="167:49"><name pos:start="167:47" pos:end="167:49">len</name></expr></argument>)</argument_list></call><operator pos:start="167:51" pos:end="167:51">)</operator> <operator pos:start="167:53" pos:end="167:53">&lt;</operator> <literal type="number" pos:start="167:55" pos:end="167:55">0</literal></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:27"><block_content pos:start="169:17" pos:end="169:27">

                <return pos:start="169:17" pos:end="169:27">return <expr pos:start="169:24" pos:end="169:26"><name pos:start="169:24" pos:end="169:26">res</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:27"><expr pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:15">pkt</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:20">pos</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:26">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:43"><expr pos:start="173:13" pos:end="173:42"><name pos:start="173:13" pos:end="173:29"><name pos:start="173:13" pos:end="173:15">pkt</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:29">stream_index</name></name> <operator pos:start="173:31" pos:end="173:31">=</operator> <name pos:start="173:33" pos:end="173:42"><name pos:start="173:33" pos:end="173:35">ast</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:42">index</name></name></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:29">return <expr pos:start="175:20" pos:end="175:28"><name pos:start="175:20" pos:end="175:28"><name pos:start="175:20" pos:end="175:22">pkt</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:28">size</name></name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="177:11" pos:end="213:9">else if <condition pos:start="177:19" pos:end="177:41">(<expr pos:start="177:20" pos:end="177:40"><name pos:start="177:20" pos:end="177:22">tag</name> <operator pos:start="177:24" pos:end="177:25">==</operator> <name pos:start="177:27" pos:end="177:40">TAG_VIDEOFRAME</name></expr>)</condition> <block pos:start="177:43" pos:end="213:9">{<block_content pos:start="179:13" pos:end="211:13">

            <decl_stmt pos:start="179:13" pos:end="179:38"><decl pos:start="179:13" pos:end="179:37"><type pos:start="179:13" pos:end="179:15"><name pos:start="179:13" pos:end="179:15">int</name></type> <name pos:start="179:17" pos:end="179:21">ch_id</name> <init pos:start="179:23" pos:end="179:37">= <expr pos:start="179:25" pos:end="179:37"><call pos:start="179:25" pos:end="179:37"><name pos:start="179:25" pos:end="179:33">avio_rl16</name><argument_list pos:start="179:34" pos:end="179:37">(<argument pos:start="179:35" pos:end="179:36"><expr pos:start="179:35" pos:end="179:36"><name pos:start="179:35" pos:end="179:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:21"><expr pos:start="181:13" pos:end="181:20"><name pos:start="181:13" pos:end="181:15">len</name> <operator pos:start="181:17" pos:end="181:18">-=</operator> <literal type="number" pos:start="181:20" pos:end="181:20">2</literal></expr>;</expr_stmt>

            <for pos:start="183:13" pos:end="211:13">for<control pos:start="183:16" pos:end="183:42">(<init pos:start="183:17" pos:end="183:20"><expr pos:start="183:17" pos:end="183:19"><name pos:start="183:17" pos:end="183:17">i</name><operator pos:start="183:18" pos:end="183:18">=</operator><literal type="number" pos:start="183:19" pos:end="183:19">0</literal></expr>;</init> <condition pos:start="183:22" pos:end="183:37"><expr pos:start="183:22" pos:end="183:36"><name pos:start="183:22" pos:end="183:22">i</name><operator pos:start="183:23" pos:end="183:23">&lt;</operator><name pos:start="183:24" pos:end="183:36"><name pos:start="183:24" pos:end="183:24">s</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:36">nb_streams</name></name></expr>;</condition> <incr pos:start="183:39" pos:end="183:41"><expr pos:start="183:39" pos:end="183:41"><name pos:start="183:39" pos:end="183:39">i</name><operator pos:start="183:40" pos:end="183:41">++</operator></expr></incr>)</control> <block pos:start="183:44" pos:end="211:13">{<block_content pos:start="185:17" pos:end="209:17">

                <expr_stmt pos:start="185:17" pos:end="185:35"><expr pos:start="185:17" pos:end="185:34"><name pos:start="185:17" pos:end="185:18">st</name> <operator pos:start="185:20" pos:end="185:20">=</operator> <name pos:start="185:22" pos:end="185:34"><name pos:start="185:22" pos:end="185:22">s</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:31">streams</name><index pos:start="185:32" pos:end="185:34">[<expr pos:start="185:33" pos:end="185:33"><name pos:start="185:33" pos:end="185:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="209:17"><if pos:start="187:17" pos:end="209:17">if <condition pos:start="187:20" pos:end="187:83">(<expr pos:start="187:21" pos:end="187:82"><name pos:start="187:21" pos:end="187:41"><name pos:start="187:21" pos:end="187:22">st</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:29">codec</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:41">codec_type</name></name> <operator pos:start="187:43" pos:end="187:44">==</operator> <name pos:start="187:46" pos:end="187:63">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="187:65" pos:end="187:66">&amp;&amp;</operator> <name pos:start="187:68" pos:end="187:73"><name pos:start="187:68" pos:end="187:69">st</name><operator pos:start="187:70" pos:end="187:71">-&gt;</operator><name pos:start="187:72" pos:end="187:73">id</name></name> <operator pos:start="187:75" pos:end="187:76">==</operator> <name pos:start="187:78" pos:end="187:82">ch_id</name></expr>)</condition> <block pos:start="187:85" pos:end="209:17">{<block_content pos:start="189:21" pos:end="207:37">

                    <expr_stmt pos:start="189:21" pos:end="189:42"><expr pos:start="189:21" pos:end="189:41"><name pos:start="189:21" pos:end="189:25">frame</name> <operator pos:start="189:27" pos:end="189:27">=</operator> <call pos:start="189:29" pos:end="189:41"><name pos:start="189:29" pos:end="189:37">avio_rl16</name><argument_list pos:start="189:38" pos:end="189:41">(<argument pos:start="189:39" pos:end="189:40"><expr pos:start="189:39" pos:end="189:40"><name pos:start="189:39" pos:end="189:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:29"><expr pos:start="191:21" pos:end="191:28"><name pos:start="191:21" pos:end="191:23">len</name> <operator pos:start="191:25" pos:end="191:26">-=</operator> <literal type="number" pos:start="191:28" pos:end="191:28">2</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="193:21" pos:end="195:34"><if pos:start="193:21" pos:end="195:34">if <condition pos:start="193:24" pos:end="193:33">(<expr pos:start="193:25" pos:end="193:32"><name pos:start="193:25" pos:end="193:27">len</name> <operator pos:start="193:29" pos:end="193:30">&lt;=</operator> <literal type="number" pos:start="193:32" pos:end="193:32">0</literal></expr>)</condition><block type="pseudo" pos:start="195:25" pos:end="195:34"><block_content pos:start="195:25" pos:end="195:34">

                        <goto pos:start="195:25" pos:end="195:34">goto <name pos:start="195:30" pos:end="195:33">skip</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="197:21" pos:end="199:35"><if pos:start="197:21" pos:end="199:35">if <condition pos:start="197:24" pos:end="197:64">(<expr pos:start="197:25" pos:end="197:63"><operator pos:start="197:25" pos:end="197:25">(</operator><name pos:start="197:26" pos:end="197:28">res</name> <operator pos:start="197:30" pos:end="197:30">=</operator> <call pos:start="197:32" pos:end="197:58"><name pos:start="197:32" pos:end="197:44">av_get_packet</name><argument_list pos:start="197:45" pos:end="197:58">(<argument pos:start="197:46" pos:end="197:47"><expr pos:start="197:46" pos:end="197:47"><name pos:start="197:46" pos:end="197:47">pb</name></expr></argument>, <argument pos:start="197:50" pos:end="197:52"><expr pos:start="197:50" pos:end="197:52"><name pos:start="197:50" pos:end="197:52">pkt</name></expr></argument>, <argument pos:start="197:55" pos:end="197:57"><expr pos:start="197:55" pos:end="197:57"><name pos:start="197:55" pos:end="197:57">len</name></expr></argument>)</argument_list></call><operator pos:start="197:59" pos:end="197:59">)</operator> <operator pos:start="197:61" pos:end="197:61">&lt;</operator> <literal type="number" pos:start="197:63" pos:end="197:63">0</literal></expr>)</condition><block type="pseudo" pos:start="199:25" pos:end="199:35"><block_content pos:start="199:25" pos:end="199:35">

                        <return pos:start="199:25" pos:end="199:35">return <expr pos:start="199:32" pos:end="199:34"><name pos:start="199:32" pos:end="199:34">res</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:35"><expr pos:start="201:21" pos:end="201:34"><name pos:start="201:21" pos:end="201:28"><name pos:start="201:21" pos:end="201:23">pkt</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:28">pos</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <name pos:start="201:32" pos:end="201:34">pos</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:37"><expr pos:start="203:21" pos:end="203:36"><name pos:start="203:21" pos:end="203:28"><name pos:start="203:21" pos:end="203:23">pkt</name><operator pos:start="203:24" pos:end="203:25">-&gt;</operator><name pos:start="203:26" pos:end="203:28">pts</name></name> <operator pos:start="203:30" pos:end="203:30">=</operator> <name pos:start="203:32" pos:end="203:36">frame</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:50"><expr pos:start="205:21" pos:end="205:49"><name pos:start="205:21" pos:end="205:37"><name pos:start="205:21" pos:end="205:23">pkt</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:37">stream_index</name></name> <operator pos:start="205:39" pos:end="205:39">=</operator> <name pos:start="205:41" pos:end="205:49"><name pos:start="205:41" pos:end="205:42">st</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:49">index</name></name></expr>;</expr_stmt>

                    <return pos:start="207:21" pos:end="207:37">return <expr pos:start="207:28" pos:end="207:36"><name pos:start="207:28" pos:end="207:36"><name pos:start="207:28" pos:end="207:30">pkt</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:36">size</name></name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="213:11" pos:end="465:9">else if <condition pos:start="213:19" pos:end="213:83">(<expr pos:start="213:20" pos:end="213:82"><name pos:start="213:20" pos:end="213:22">tag</name> <operator pos:start="213:24" pos:end="213:25">==</operator> <name pos:start="213:27" pos:end="213:48">TAG_DEFINEBITSLOSSLESS</name> <operator pos:start="213:50" pos:end="213:51">||</operator> <name pos:start="213:53" pos:end="213:55">tag</name> <operator pos:start="213:57" pos:end="213:58">==</operator> <name pos:start="213:60" pos:end="213:82">TAG_DEFINEBITSLOSSLESS2</name></expr>)</condition> <block pos:start="213:85" pos:end="465:9">{<block_content pos:start="217:13" pos:end="464:0">

<cpp:if pos:start="215:1" pos:end="215:15">#<cpp:directive pos:start="215:2" pos:end="215:3">if</cpp:directive> <expr pos:start="215:5" pos:end="215:15"><name pos:start="215:5" pos:end="215:15">CONFIG_ZLIB</name></expr></cpp:if>

            <decl_stmt pos:start="217:13" pos:end="217:25"><decl pos:start="217:13" pos:end="217:24"><type pos:start="217:13" pos:end="217:16"><name pos:start="217:13" pos:end="217:16">long</name></type> <name pos:start="217:18" pos:end="217:24">out_len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="219:13" pos:end="219:52"><decl pos:start="219:13" pos:end="219:31"><type pos:start="219:13" pos:end="219:21"><name pos:start="219:13" pos:end="219:19">uint8_t</name> <modifier pos:start="219:21" pos:end="219:21">*</modifier></type><name pos:start="219:22" pos:end="219:24">buf</name> <init pos:start="219:26" pos:end="219:31">= <expr pos:start="219:28" pos:end="219:31"><name pos:start="219:28" pos:end="219:31">NULL</name></expr></init></decl>, <decl pos:start="219:34" pos:end="219:45"><type ref="prev" pos:start="219:13" pos:end="219:21"><modifier pos:start="219:34" pos:end="219:34">*</modifier></type><name pos:start="219:35" pos:end="219:38">zbuf</name> <init pos:start="219:40" pos:end="219:45">= <expr pos:start="219:42" pos:end="219:45"><name pos:start="219:42" pos:end="219:45">NULL</name></expr></init></decl>, <decl pos:start="219:48" pos:end="219:51"><type ref="prev" pos:start="219:13" pos:end="219:21"><modifier pos:start="219:48" pos:end="219:48">*</modifier></type><name pos:start="219:49" pos:end="219:51">pal</name></decl>;</decl_stmt>

            <decl_stmt pos:start="221:13" pos:end="221:53"><decl pos:start="221:13" pos:end="221:52"><type pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:20">uint32_t</name></type> <name pos:start="221:22" pos:end="221:46"><name pos:start="221:22" pos:end="221:29">colormap</name><index pos:start="221:30" pos:end="221:46">[<expr pos:start="221:31" pos:end="221:45"><name pos:start="221:31" pos:end="221:45">AVPALETTE_COUNT</name></expr>]</index></name> <init pos:start="221:48" pos:end="221:52">= <expr pos:start="221:50" pos:end="221:52"><block pos:start="221:50" pos:end="221:52">{<expr pos:start="221:51" pos:end="221:51"><literal type="number" pos:start="221:51" pos:end="221:51">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="223:13" pos:end="223:65"><decl pos:start="223:13" pos:end="223:64"><type pos:start="223:13" pos:end="223:21"><specifier pos:start="223:13" pos:end="223:17">const</specifier> <name pos:start="223:19" pos:end="223:21">int</name></type> <name pos:start="223:23" pos:end="223:31">alpha_bmp</name> <init pos:start="223:33" pos:end="223:64">= <expr pos:start="223:35" pos:end="223:64"><name pos:start="223:35" pos:end="223:37">tag</name> <operator pos:start="223:39" pos:end="223:40">==</operator> <name pos:start="223:42" pos:end="223:64">TAG_DEFINEBITSLOSSLESS2</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="225:13" pos:end="225:50"><decl pos:start="225:13" pos:end="225:49"><type pos:start="225:13" pos:end="225:21"><specifier pos:start="225:13" pos:end="225:17">const</specifier> <name pos:start="225:19" pos:end="225:21">int</name></type> <name pos:start="225:23" pos:end="225:33">colormapbpp</name> <init pos:start="225:35" pos:end="225:49">= <expr pos:start="225:37" pos:end="225:49"><literal type="number" pos:start="225:37" pos:end="225:39">3</literal> <operator pos:start="225:39" pos:end="225:39">+</operator> <name pos:start="225:41" pos:end="225:49">alpha_bmp</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="227:13" pos:end="227:43"><decl pos:start="227:13" pos:end="227:24"><type pos:start="227:13" pos:end="227:15"><name pos:start="227:13" pos:end="227:15">int</name></type> <name pos:start="227:17" pos:end="227:24">linesize</name></decl>, <decl pos:start="227:27" pos:end="227:42"><type ref="prev" pos:start="227:13" pos:end="227:15"/><name pos:start="227:27" pos:end="227:38">colormapsize</name> <init pos:start="227:40" pos:end="227:42">= <expr pos:start="227:42" pos:end="227:42"><literal type="number" pos:start="227:42" pos:end="227:42">0</literal></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="231:13" pos:end="231:46"><decl pos:start="231:13" pos:end="231:45"><type pos:start="231:13" pos:end="231:21"><specifier pos:start="231:13" pos:end="231:17">const</specifier> <name pos:start="231:19" pos:end="231:21">int</name></type> <name pos:start="231:23" pos:end="231:27">ch_id</name>   <init pos:start="231:31" pos:end="231:45">= <expr pos:start="231:33" pos:end="231:45"><call pos:start="231:33" pos:end="231:45"><name pos:start="231:33" pos:end="231:41">avio_rl16</name><argument_list pos:start="231:42" pos:end="231:45">(<argument pos:start="231:43" pos:end="231:44"><expr pos:start="231:43" pos:end="231:44"><name pos:start="231:43" pos:end="231:44">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="233:13" pos:end="233:44"><decl pos:start="233:13" pos:end="233:43"><type pos:start="233:13" pos:end="233:21"><specifier pos:start="233:13" pos:end="233:17">const</specifier> <name pos:start="233:19" pos:end="233:21">int</name></type> <name pos:start="233:23" pos:end="233:29">bmp_fmt</name> <init pos:start="233:31" pos:end="233:43">= <expr pos:start="233:33" pos:end="233:43"><call pos:start="233:33" pos:end="233:43"><name pos:start="233:33" pos:end="233:39">avio_r8</name><argument_list pos:start="233:40" pos:end="233:43">(<argument pos:start="233:41" pos:end="233:42"><expr pos:start="233:41" pos:end="233:42"><name pos:start="233:41" pos:end="233:42">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="235:13" pos:end="235:46"><decl pos:start="235:13" pos:end="235:45"><type pos:start="235:13" pos:end="235:21"><specifier pos:start="235:13" pos:end="235:17">const</specifier> <name pos:start="235:19" pos:end="235:21">int</name></type> <name pos:start="235:23" pos:end="235:27">width</name>   <init pos:start="235:31" pos:end="235:45">= <expr pos:start="235:33" pos:end="235:45"><call pos:start="235:33" pos:end="235:45"><name pos:start="235:33" pos:end="235:41">avio_rl16</name><argument_list pos:start="235:42" pos:end="235:45">(<argument pos:start="235:43" pos:end="235:44"><expr pos:start="235:43" pos:end="235:44"><name pos:start="235:43" pos:end="235:44">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="237:13" pos:end="237:46"><decl pos:start="237:13" pos:end="237:45"><type pos:start="237:13" pos:end="237:21"><specifier pos:start="237:13" pos:end="237:17">const</specifier> <name pos:start="237:19" pos:end="237:21">int</name></type> <name pos:start="237:23" pos:end="237:28">height</name>  <init pos:start="237:31" pos:end="237:45">= <expr pos:start="237:33" pos:end="237:45"><call pos:start="237:33" pos:end="237:45"><name pos:start="237:33" pos:end="237:41">avio_rl16</name><argument_list pos:start="237:42" pos:end="237:45">(<argument pos:start="237:43" pos:end="237:44"><expr pos:start="237:43" pos:end="237:44"><name pos:start="237:43" pos:end="237:44">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="241:13" pos:end="241:27"><expr pos:start="241:13" pos:end="241:26"><name pos:start="241:13" pos:end="241:15">len</name> <operator pos:start="241:17" pos:end="241:18">-=</operator> <literal type="number" pos:start="241:20" pos:end="241:21">2</literal><operator pos:start="241:21" pos:end="241:21">+</operator><literal type="number" pos:start="241:22" pos:end="241:23">1</literal><operator pos:start="241:23" pos:end="241:23">+</operator><literal type="number" pos:start="241:24" pos:end="241:25">2</literal><operator pos:start="241:25" pos:end="241:25">+</operator><literal type="number" pos:start="241:26" pos:end="241:26">2</literal></expr>;</expr_stmt>



            <switch pos:start="245:13" pos:end="275:13">switch <condition pos:start="245:20" pos:end="245:28">(<expr pos:start="245:21" pos:end="245:27"><name pos:start="245:21" pos:end="245:27">bmp_fmt</name></expr>)</condition> <block pos:start="245:30" pos:end="275:13">{<block_content pos:start="247:13" pos:end="273:37">

            <case pos:start="247:13" pos:end="247:19">case <expr pos:start="247:18" pos:end="247:18"><literal type="number" pos:start="247:18" pos:end="247:18">3</literal></expr>:</case> <comment type="line" pos:start="247:21" pos:end="247:28">// PAL-8</comment>

                <expr_stmt pos:start="249:17" pos:end="249:33"><expr pos:start="249:17" pos:end="249:32"><name pos:start="249:17" pos:end="249:24">linesize</name> <operator pos:start="249:26" pos:end="249:26">=</operator> <name pos:start="249:28" pos:end="249:32">width</name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:47"><expr pos:start="251:17" pos:end="251:46"><name pos:start="251:17" pos:end="251:28">colormapsize</name> <operator pos:start="251:30" pos:end="251:30">=</operator> <call pos:start="251:32" pos:end="251:42"><name pos:start="251:32" pos:end="251:38">avio_r8</name><argument_list pos:start="251:39" pos:end="251:42">(<argument pos:start="251:40" pos:end="251:41"><expr pos:start="251:40" pos:end="251:41"><name pos:start="251:40" pos:end="251:41">pb</name></expr></argument>)</argument_list></call> <operator pos:start="251:44" pos:end="251:44">+</operator> <literal type="number" pos:start="251:46" pos:end="251:46">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:22"><expr pos:start="253:17" pos:end="253:21"><name pos:start="253:17" pos:end="253:19">len</name><operator pos:start="253:20" pos:end="253:21">--</operator></expr>;</expr_stmt>

                <break pos:start="255:17" pos:end="255:22">break;</break>

            <case pos:start="257:13" pos:end="257:19">case <expr pos:start="257:18" pos:end="257:18"><literal type="number" pos:start="257:18" pos:end="257:18">4</literal></expr>:</case> <comment type="line" pos:start="257:21" pos:end="257:28">// RGB15</comment>

                <expr_stmt pos:start="259:17" pos:end="259:37"><expr pos:start="259:17" pos:end="259:36"><name pos:start="259:17" pos:end="259:24">linesize</name> <operator pos:start="259:26" pos:end="259:26">=</operator> <name pos:start="259:28" pos:end="259:32">width</name> <operator pos:start="259:34" pos:end="259:34">*</operator> <literal type="number" pos:start="259:36" pos:end="259:36">2</literal></expr>;</expr_stmt>

                <break pos:start="261:17" pos:end="261:22">break;</break>

            <case pos:start="263:13" pos:end="263:19">case <expr pos:start="263:18" pos:end="263:18"><literal type="number" pos:start="263:18" pos:end="263:18">5</literal></expr>:</case> <comment type="line" pos:start="263:21" pos:end="263:35">// RGB24 (0RGB)</comment>

                <expr_stmt pos:start="265:17" pos:end="265:37"><expr pos:start="265:17" pos:end="265:36"><name pos:start="265:17" pos:end="265:24">linesize</name> <operator pos:start="265:26" pos:end="265:26">=</operator> <name pos:start="265:28" pos:end="265:32">width</name> <operator pos:start="265:34" pos:end="265:34">*</operator> <literal type="number" pos:start="265:36" pos:end="265:36">4</literal></expr>;</expr_stmt>

                <break pos:start="267:17" pos:end="267:22">break;</break>

            <default pos:start="269:13" pos:end="269:20">default:</default>

                <expr_stmt pos:start="271:17" pos:end="271:88"><expr pos:start="271:17" pos:end="271:87"><call pos:start="271:17" pos:end="271:87"><name pos:start="271:17" pos:end="271:22">av_log</name><argument_list pos:start="271:23" pos:end="271:87">(<argument pos:start="271:24" pos:end="271:24"><expr pos:start="271:24" pos:end="271:24"><name pos:start="271:24" pos:end="271:24">s</name></expr></argument>, <argument pos:start="271:27" pos:end="271:38"><expr pos:start="271:27" pos:end="271:38"><name pos:start="271:27" pos:end="271:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:41" pos:end="271:77"><expr pos:start="271:41" pos:end="271:77"><literal type="string" pos:start="271:41" pos:end="271:77">"invalid bitmap format %d, skipped\n"</literal></expr></argument>, <argument pos:start="271:80" pos:end="271:86"><expr pos:start="271:80" pos:end="271:86"><name pos:start="271:80" pos:end="271:86">bmp_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="273:17" pos:end="273:37">goto <name pos:start="273:22" pos:end="273:36">bitmap_end_skip</name>;</goto>

            </block_content>}</block></switch>



            <expr_stmt pos:start="279:13" pos:end="279:44"><expr pos:start="279:13" pos:end="279:43"><name pos:start="279:13" pos:end="279:20">linesize</name> <operator pos:start="279:22" pos:end="279:22">=</operator> <call pos:start="279:24" pos:end="279:43"><name pos:start="279:24" pos:end="279:30">FFALIGN</name><argument_list pos:start="279:31" pos:end="279:43">(<argument pos:start="279:32" pos:end="279:39"><expr pos:start="279:32" pos:end="279:39"><name pos:start="279:32" pos:end="279:39">linesize</name></expr></argument>, <argument pos:start="279:42" pos:end="279:42"><expr pos:start="279:42" pos:end="279:42"><literal type="number" pos:start="279:42" pos:end="279:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="283:13" pos:end="293:13"><if pos:start="283:13" pos:end="293:13">if <condition pos:start="283:16" pos:end="287:74">(<expr pos:start="283:17" pos:end="287:73"><call pos:start="283:17" pos:end="283:56"><name pos:start="283:17" pos:end="283:35">av_image_check_size</name><argument_list pos:start="283:36" pos:end="283:56">(<argument pos:start="283:37" pos:end="283:41"><expr pos:start="283:37" pos:end="283:41"><name pos:start="283:37" pos:end="283:41">width</name></expr></argument>, <argument pos:start="283:44" pos:end="283:49"><expr pos:start="283:44" pos:end="283:49"><name pos:start="283:44" pos:end="283:49">height</name></expr></argument>, <argument pos:start="283:52" pos:end="283:52"><expr pos:start="283:52" pos:end="283:52"><literal type="number" pos:start="283:52" pos:end="283:52">0</literal></expr></argument>, <argument pos:start="283:55" pos:end="283:55"><expr pos:start="283:55" pos:end="283:55"><name pos:start="283:55" pos:end="283:55">s</name></expr></argument>)</argument_list></call> <operator pos:start="283:58" pos:end="283:58">&lt;</operator> <literal type="number" pos:start="283:60" pos:end="283:60">0</literal> <operator pos:start="283:62" pos:end="283:63">||</operator>

                <name pos:start="285:17" pos:end="285:24">linesize</name> <operator pos:start="285:26" pos:end="285:27">&gt;=</operator> <name pos:start="285:29" pos:end="285:35">INT_MAX</name> <operator pos:start="285:37" pos:end="285:37">/</operator> <name pos:start="285:39" pos:end="285:44">height</name> <operator pos:start="285:46" pos:end="285:47">||</operator>

                <name pos:start="287:17" pos:end="287:24">linesize</name> <operator pos:start="287:26" pos:end="287:26">*</operator> <name pos:start="287:28" pos:end="287:33">height</name> <operator pos:start="287:35" pos:end="287:36">&gt;=</operator> <name pos:start="287:38" pos:end="287:44">INT_MAX</name> <operator pos:start="287:46" pos:end="287:46">-</operator> <name pos:start="287:48" pos:end="287:59">colormapsize</name> <operator pos:start="287:61" pos:end="287:61">*</operator> <name pos:start="287:63" pos:end="287:73">colormapbpp</name></expr>)</condition> <block pos:start="287:76" pos:end="293:13">{<block_content pos:start="289:17" pos:end="291:37">

                <expr_stmt pos:start="289:17" pos:end="289:85"><expr pos:start="289:17" pos:end="289:84"><call pos:start="289:17" pos:end="289:84"><name pos:start="289:17" pos:end="289:22">av_log</name><argument_list pos:start="289:23" pos:end="289:84">(<argument pos:start="289:24" pos:end="289:24"><expr pos:start="289:24" pos:end="289:24"><name pos:start="289:24" pos:end="289:24">s</name></expr></argument>, <argument pos:start="289:27" pos:end="289:38"><expr pos:start="289:27" pos:end="289:38"><name pos:start="289:27" pos:end="289:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="289:41" pos:end="289:68"><expr pos:start="289:41" pos:end="289:68"><literal type="string" pos:start="289:41" pos:end="289:68">"invalid frame size %dx%d\n"</literal></expr></argument>, <argument pos:start="289:71" pos:end="289:75"><expr pos:start="289:71" pos:end="289:75"><name pos:start="289:71" pos:end="289:75">width</name></expr></argument>, <argument pos:start="289:78" pos:end="289:83"><expr pos:start="289:78" pos:end="289:83"><name pos:start="289:78" pos:end="289:83">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="291:17" pos:end="291:37">goto <name pos:start="291:22" pos:end="291:36">bitmap_end_skip</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="297:13" pos:end="297:69"><expr pos:start="297:13" pos:end="297:68"><name pos:start="297:13" pos:end="297:19">out_len</name> <operator pos:start="297:21" pos:end="297:21">=</operator> <name pos:start="297:23" pos:end="297:34">colormapsize</name> <operator pos:start="297:36" pos:end="297:36">*</operator> <name pos:start="297:38" pos:end="297:48">colormapbpp</name> <operator pos:start="297:50" pos:end="297:50">+</operator> <name pos:start="297:52" pos:end="297:59">linesize</name> <operator pos:start="297:61" pos:end="297:61">*</operator> <name pos:start="297:63" pos:end="297:68">height</name></expr>;</expr_stmt>



            <expr_stmt pos:start="301:13" pos:end="303:89"><expr pos:start="301:13" pos:end="303:88"><call pos:start="301:13" pos:end="303:88"><name pos:start="301:13" pos:end="301:19">av_dlog</name><argument_list pos:start="301:20" pos:end="303:88">(<argument pos:start="301:21" pos:end="301:21"><expr pos:start="301:21" pos:end="301:21"><name pos:start="301:21" pos:end="301:21">s</name></expr></argument>, <argument pos:start="301:24" pos:end="301:86"><expr pos:start="301:24" pos:end="301:86"><literal type="string" pos:start="301:24" pos:end="301:86">"bitmap: ch=%d fmt=%d %dx%d (linesize=%d) len=%d-&gt;%ld pal=%d\n"</literal></expr></argument>,

                    <argument pos:start="303:21" pos:end="303:25"><expr pos:start="303:21" pos:end="303:25"><name pos:start="303:21" pos:end="303:25">ch_id</name></expr></argument>, <argument pos:start="303:28" pos:end="303:34"><expr pos:start="303:28" pos:end="303:34"><name pos:start="303:28" pos:end="303:34">bmp_fmt</name></expr></argument>, <argument pos:start="303:37" pos:end="303:41"><expr pos:start="303:37" pos:end="303:41"><name pos:start="303:37" pos:end="303:41">width</name></expr></argument>, <argument pos:start="303:44" pos:end="303:49"><expr pos:start="303:44" pos:end="303:49"><name pos:start="303:44" pos:end="303:49">height</name></expr></argument>, <argument pos:start="303:52" pos:end="303:59"><expr pos:start="303:52" pos:end="303:59"><name pos:start="303:52" pos:end="303:59">linesize</name></expr></argument>, <argument pos:start="303:62" pos:end="303:64"><expr pos:start="303:62" pos:end="303:64"><name pos:start="303:62" pos:end="303:64">len</name></expr></argument>, <argument pos:start="303:67" pos:end="303:73"><expr pos:start="303:67" pos:end="303:73"><name pos:start="303:67" pos:end="303:73">out_len</name></expr></argument>, <argument pos:start="303:76" pos:end="303:87"><expr pos:start="303:76" pos:end="303:87"><name pos:start="303:76" pos:end="303:87">colormapsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="307:13" pos:end="307:34"><expr pos:start="307:13" pos:end="307:33"><name pos:start="307:13" pos:end="307:16">zbuf</name> <operator pos:start="307:18" pos:end="307:18">=</operator> <call pos:start="307:20" pos:end="307:33"><name pos:start="307:20" pos:end="307:28">av_malloc</name><argument_list pos:start="307:29" pos:end="307:33">(<argument pos:start="307:30" pos:end="307:32"><expr pos:start="307:30" pos:end="307:32"><name pos:start="307:30" pos:end="307:32">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:38"><expr pos:start="309:13" pos:end="309:37"><name pos:start="309:13" pos:end="309:15">buf</name>  <operator pos:start="309:18" pos:end="309:18">=</operator> <call pos:start="309:20" pos:end="309:37"><name pos:start="309:20" pos:end="309:28">av_malloc</name><argument_list pos:start="309:29" pos:end="309:37">(<argument pos:start="309:30" pos:end="309:36"><expr pos:start="309:30" pos:end="309:36"><name pos:start="309:30" pos:end="309:36">out_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="311:13" pos:end="317:13"><if pos:start="311:13" pos:end="317:13">if <condition pos:start="311:16" pos:end="311:30">(<expr pos:start="311:17" pos:end="311:29"><operator pos:start="311:17" pos:end="311:17">!</operator><name pos:start="311:18" pos:end="311:21">zbuf</name> <operator pos:start="311:23" pos:end="311:24">||</operator> <operator pos:start="311:26" pos:end="311:26">!</operator><name pos:start="311:27" pos:end="311:29">buf</name></expr>)</condition> <block pos:start="311:32" pos:end="317:13">{<block_content pos:start="313:17" pos:end="315:32">

                <expr_stmt pos:start="313:17" pos:end="313:38"><expr pos:start="313:17" pos:end="313:37"><name pos:start="313:17" pos:end="313:19">res</name> <operator pos:start="313:21" pos:end="313:21">=</operator> <call pos:start="313:23" pos:end="313:37"><name pos:start="313:23" pos:end="313:29">AVERROR</name><argument_list pos:start="313:30" pos:end="313:37">(<argument pos:start="313:31" pos:end="313:36"><expr pos:start="313:31" pos:end="313:36"><name pos:start="313:31" pos:end="313:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="315:17" pos:end="315:32">goto <name pos:start="315:22" pos:end="315:31">bitmap_end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="321:13" pos:end="321:43"><expr pos:start="321:13" pos:end="321:42"><name pos:start="321:13" pos:end="321:15">len</name> <operator pos:start="321:17" pos:end="321:17">=</operator> <call pos:start="321:19" pos:end="321:42"><name pos:start="321:19" pos:end="321:27">avio_read</name><argument_list pos:start="321:28" pos:end="321:42">(<argument pos:start="321:29" pos:end="321:30"><expr pos:start="321:29" pos:end="321:30"><name pos:start="321:29" pos:end="321:30">pb</name></expr></argument>, <argument pos:start="321:33" pos:end="321:36"><expr pos:start="321:33" pos:end="321:36"><name pos:start="321:33" pos:end="321:36">zbuf</name></expr></argument>, <argument pos:start="321:39" pos:end="321:41"><expr pos:start="321:39" pos:end="321:41"><name pos:start="321:39" pos:end="321:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="323:13" pos:end="329:13"><if pos:start="323:13" pos:end="329:13">if <condition pos:start="323:16" pos:end="323:80">(<expr pos:start="323:17" pos:end="323:79"><name pos:start="323:17" pos:end="323:19">len</name> <operator pos:start="323:21" pos:end="323:21">&lt;</operator> <literal type="number" pos:start="323:23" pos:end="323:23">0</literal> <operator pos:start="323:25" pos:end="323:26">||</operator> <operator pos:start="323:28" pos:end="323:28">(</operator><name pos:start="323:29" pos:end="323:31">res</name> <operator pos:start="323:33" pos:end="323:33">=</operator> <call pos:start="323:35" pos:end="323:70"><name pos:start="323:35" pos:end="323:44">uncompress</name><argument_list pos:start="323:45" pos:end="323:70">(<argument pos:start="323:46" pos:end="323:48"><expr pos:start="323:46" pos:end="323:48"><name pos:start="323:46" pos:end="323:48">buf</name></expr></argument>, <argument pos:start="323:51" pos:end="323:58"><expr pos:start="323:51" pos:end="323:58"><operator pos:start="323:51" pos:end="323:51">&amp;</operator><name pos:start="323:52" pos:end="323:58">out_len</name></expr></argument>, <argument pos:start="323:61" pos:end="323:64"><expr pos:start="323:61" pos:end="323:64"><name pos:start="323:61" pos:end="323:64">zbuf</name></expr></argument>, <argument pos:start="323:67" pos:end="323:69"><expr pos:start="323:67" pos:end="323:69"><name pos:start="323:67" pos:end="323:69">len</name></expr></argument>)</argument_list></call><operator pos:start="323:71" pos:end="323:71">)</operator> <operator pos:start="323:73" pos:end="323:74">!=</operator> <name pos:start="323:76" pos:end="323:79">Z_OK</name></expr>)</condition> <block pos:start="323:82" pos:end="329:13">{<block_content pos:start="325:17" pos:end="327:37">

                <expr_stmt pos:start="325:17" pos:end="325:79"><expr pos:start="325:17" pos:end="325:78"><call pos:start="325:17" pos:end="325:78"><name pos:start="325:17" pos:end="325:22">av_log</name><argument_list pos:start="325:23" pos:end="325:78">(<argument pos:start="325:24" pos:end="325:24"><expr pos:start="325:24" pos:end="325:24"><name pos:start="325:24" pos:end="325:24">s</name></expr></argument>, <argument pos:start="325:27" pos:end="325:40"><expr pos:start="325:27" pos:end="325:40"><name pos:start="325:27" pos:end="325:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="325:43" pos:end="325:77"><expr pos:start="325:43" pos:end="325:77"><literal type="string" pos:start="325:43" pos:end="325:77">"Failed to uncompress one bitmap\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="327:17" pos:end="327:37">goto <name pos:start="327:22" pos:end="327:36">bitmap_end_skip</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <for pos:start="333:13" pos:end="341:13">for <control pos:start="333:17" pos:end="333:47">(<init pos:start="333:18" pos:end="333:23"><expr pos:start="333:18" pos:end="333:22"><name pos:start="333:18" pos:end="333:18">i</name> <operator pos:start="333:20" pos:end="333:20">=</operator> <literal type="number" pos:start="333:22" pos:end="333:22">0</literal></expr>;</init> <condition pos:start="333:25" pos:end="333:42"><expr pos:start="333:25" pos:end="333:41"><name pos:start="333:25" pos:end="333:25">i</name> <operator pos:start="333:27" pos:end="333:27">&lt;</operator> <name pos:start="333:29" pos:end="333:41"><name pos:start="333:29" pos:end="333:29">s</name><operator pos:start="333:30" pos:end="333:31">-&gt;</operator><name pos:start="333:32" pos:end="333:41">nb_streams</name></name></expr>;</condition> <incr pos:start="333:44" pos:end="333:46"><expr pos:start="333:44" pos:end="333:46"><name pos:start="333:44" pos:end="333:44">i</name><operator pos:start="333:45" pos:end="333:46">++</operator></expr></incr>)</control> <block pos:start="333:49" pos:end="341:13">{<block_content pos:start="335:17" pos:end="339:26">

                <expr_stmt pos:start="335:17" pos:end="335:35"><expr pos:start="335:17" pos:end="335:34"><name pos:start="335:17" pos:end="335:18">st</name> <operator pos:start="335:20" pos:end="335:20">=</operator> <name pos:start="335:22" pos:end="335:34"><name pos:start="335:22" pos:end="335:22">s</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:31">streams</name><index pos:start="335:32" pos:end="335:34">[<expr pos:start="335:33" pos:end="335:33"><name pos:start="335:33" pos:end="335:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="337:17" pos:end="339:26"><if pos:start="337:17" pos:end="339:26">if <condition pos:start="337:20" pos:end="337:80">(<expr pos:start="337:21" pos:end="337:79"><name pos:start="337:21" pos:end="337:39"><name pos:start="337:21" pos:end="337:22">st</name><operator pos:start="337:23" pos:end="337:24">-&gt;</operator><name pos:start="337:25" pos:end="337:29">codec</name><operator pos:start="337:30" pos:end="337:31">-&gt;</operator><name pos:start="337:32" pos:end="337:39">codec_id</name></name> <operator pos:start="337:41" pos:end="337:42">==</operator> <name pos:start="337:44" pos:end="337:63">AV_CODEC_ID_RAWVIDEO</name> <operator pos:start="337:65" pos:end="337:66">&amp;&amp;</operator> <name pos:start="337:68" pos:end="337:73"><name pos:start="337:68" pos:end="337:69">st</name><operator pos:start="337:70" pos:end="337:71">-&gt;</operator><name pos:start="337:72" pos:end="337:73">id</name></name> <operator pos:start="337:75" pos:end="337:76">==</operator> <operator pos:start="337:78" pos:end="337:78">-</operator><literal type="number" pos:start="337:79" pos:end="337:79">3</literal></expr>)</condition><block type="pseudo" pos:start="339:21" pos:end="339:26"><block_content pos:start="339:21" pos:end="339:26">

                    <break pos:start="339:21" pos:end="339:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="343:13" pos:end="365:13"><if pos:start="343:13" pos:end="365:13">if <condition pos:start="343:16" pos:end="343:35">(<expr pos:start="343:17" pos:end="343:34"><name pos:start="343:17" pos:end="343:17">i</name> <operator pos:start="343:19" pos:end="343:20">==</operator> <name pos:start="343:22" pos:end="343:34"><name pos:start="343:22" pos:end="343:22">s</name><operator pos:start="343:23" pos:end="343:24">-&gt;</operator><name pos:start="343:25" pos:end="343:34">nb_streams</name></name></expr>)</condition> <block pos:start="343:37" pos:end="365:13">{<block_content pos:start="345:17" pos:end="363:25">

                <expr_stmt pos:start="345:17" pos:end="345:51"><expr pos:start="345:17" pos:end="345:50"><name pos:start="345:17" pos:end="345:19">vst</name> <operator pos:start="345:21" pos:end="345:21">=</operator> <call pos:start="345:23" pos:end="345:50"><name pos:start="345:23" pos:end="345:41">avformat_new_stream</name><argument_list pos:start="345:42" pos:end="345:50">(<argument pos:start="345:43" pos:end="345:43"><expr pos:start="345:43" pos:end="345:43"><name pos:start="345:43" pos:end="345:43">s</name></expr></argument>, <argument pos:start="345:46" pos:end="345:49"><expr pos:start="345:46" pos:end="345:49"><name pos:start="345:46" pos:end="345:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="347:17" pos:end="353:17"><if pos:start="347:17" pos:end="353:17">if <condition pos:start="347:20" pos:end="347:25">(<expr pos:start="347:21" pos:end="347:24"><operator pos:start="347:21" pos:end="347:21">!</operator><name pos:start="347:22" pos:end="347:24">vst</name></expr>)</condition> <block pos:start="347:27" pos:end="353:17">{<block_content pos:start="349:21" pos:end="351:36">

                    <expr_stmt pos:start="349:21" pos:end="349:42"><expr pos:start="349:21" pos:end="349:41"><name pos:start="349:21" pos:end="349:23">res</name> <operator pos:start="349:25" pos:end="349:25">=</operator> <call pos:start="349:27" pos:end="349:41"><name pos:start="349:27" pos:end="349:33">AVERROR</name><argument_list pos:start="349:34" pos:end="349:41">(<argument pos:start="349:35" pos:end="349:40"><expr pos:start="349:35" pos:end="349:40"><name pos:start="349:35" pos:end="349:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="351:21" pos:end="351:36">goto <name pos:start="351:26" pos:end="351:35">bitmap_end</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:29"><expr pos:start="355:17" pos:end="355:28"><name pos:start="355:17" pos:end="355:23"><name pos:start="355:17" pos:end="355:19">vst</name><operator pos:start="355:20" pos:end="355:21">-&gt;</operator><name pos:start="355:22" pos:end="355:23">id</name></name> <operator pos:start="355:25" pos:end="355:25">=</operator> <operator pos:start="355:27" pos:end="355:27">-</operator><literal type="number" pos:start="355:28" pos:end="355:28">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="355:31" pos:end="355:88">/* -3 to avoid clash with video stream and audio stream */</comment>

                <expr_stmt pos:start="357:17" pos:end="357:60"><expr pos:start="357:17" pos:end="357:59"><name pos:start="357:17" pos:end="357:38"><name pos:start="357:17" pos:end="357:19">vst</name><operator pos:start="357:20" pos:end="357:21">-&gt;</operator><name pos:start="357:22" pos:end="357:26">codec</name><operator pos:start="357:27" pos:end="357:28">-&gt;</operator><name pos:start="357:29" pos:end="357:38">codec_type</name></name> <operator pos:start="357:40" pos:end="357:40">=</operator> <name pos:start="357:42" pos:end="357:59">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:60"><expr pos:start="359:17" pos:end="359:59"><name pos:start="359:17" pos:end="359:36"><name pos:start="359:17" pos:end="359:19">vst</name><operator pos:start="359:20" pos:end="359:21">-&gt;</operator><name pos:start="359:22" pos:end="359:26">codec</name><operator pos:start="359:27" pos:end="359:28">-&gt;</operator><name pos:start="359:29" pos:end="359:36">codec_id</name></name> <operator pos:start="359:38" pos:end="359:38">=</operator> <name pos:start="359:40" pos:end="359:59">AV_CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="361:67"><expr pos:start="361:17" pos:end="361:66"><call pos:start="361:17" pos:end="361:66"><name pos:start="361:17" pos:end="361:35">avpriv_set_pts_info</name><argument_list pos:start="361:36" pos:end="361:66">(<argument pos:start="361:37" pos:end="361:39"><expr pos:start="361:37" pos:end="361:39"><name pos:start="361:37" pos:end="361:39">vst</name></expr></argument>, <argument pos:start="361:42" pos:end="361:43"><expr pos:start="361:42" pos:end="361:43"><literal type="number" pos:start="361:42" pos:end="361:43">64</literal></expr></argument>, <argument pos:start="361:46" pos:end="361:48"><expr pos:start="361:46" pos:end="361:48"><literal type="number" pos:start="361:46" pos:end="361:48">256</literal></expr></argument>, <argument pos:start="361:51" pos:end="361:65"><expr pos:start="361:51" pos:end="361:65"><name pos:start="361:51" pos:end="361:65"><name pos:start="361:51" pos:end="361:53">swf</name><operator pos:start="361:54" pos:end="361:55">-&gt;</operator><name pos:start="361:56" pos:end="361:65">frame_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:25"><expr pos:start="363:17" pos:end="363:24"><name pos:start="363:17" pos:end="363:18">st</name> <operator pos:start="363:20" pos:end="363:20">=</operator> <name pos:start="363:22" pos:end="363:24">vst</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:38"><expr pos:start="367:13" pos:end="367:37"><name pos:start="367:13" pos:end="367:28"><name pos:start="367:13" pos:end="367:14">st</name><operator pos:start="367:15" pos:end="367:16">-&gt;</operator><name pos:start="367:17" pos:end="367:21">codec</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:28">width</name></name>  <operator pos:start="367:31" pos:end="367:31">=</operator> <name pos:start="367:33" pos:end="367:37">width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:39"><expr pos:start="369:13" pos:end="369:38"><name pos:start="369:13" pos:end="369:29"><name pos:start="369:13" pos:end="369:14">st</name><operator pos:start="369:15" pos:end="369:16">-&gt;</operator><name pos:start="369:17" pos:end="369:21">codec</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:29">height</name></name> <operator pos:start="369:31" pos:end="369:31">=</operator> <name pos:start="369:33" pos:end="369:38">height</name></expr>;</expr_stmt>



            <if_stmt pos:start="373:13" pos:end="375:32"><if pos:start="373:13" pos:end="375:32">if <condition pos:start="373:16" pos:end="373:85">(<expr pos:start="373:17" pos:end="373:84"><operator pos:start="373:17" pos:end="373:17">(</operator><name pos:start="373:18" pos:end="373:20">res</name> <operator pos:start="373:22" pos:end="373:22">=</operator> <call pos:start="373:24" pos:end="373:79"><name pos:start="373:24" pos:end="373:36">av_new_packet</name><argument_list pos:start="373:37" pos:end="373:79">(<argument pos:start="373:38" pos:end="373:40"><expr pos:start="373:38" pos:end="373:40"><name pos:start="373:38" pos:end="373:40">pkt</name></expr></argument>, <argument pos:start="373:43" pos:end="373:78"><expr pos:start="373:43" pos:end="373:78"><name pos:start="373:43" pos:end="373:49">out_len</name> <operator pos:start="373:51" pos:end="373:51">-</operator> <name pos:start="373:53" pos:end="373:64">colormapsize</name> <operator pos:start="373:66" pos:end="373:66">*</operator> <name pos:start="373:68" pos:end="373:78">colormapbpp</name></expr></argument>)</argument_list></call><operator pos:start="373:80" pos:end="373:80">)</operator> <operator pos:start="373:82" pos:end="373:82">&lt;</operator> <literal type="number" pos:start="373:84" pos:end="373:84">0</literal></expr>)</condition><block type="pseudo" pos:start="375:17" pos:end="375:32"><block_content pos:start="375:17" pos:end="375:32">

                <goto pos:start="375:17" pos:end="375:32">goto <name pos:start="375:22" pos:end="375:31">bitmap_end</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:27"><expr pos:start="377:13" pos:end="377:26"><name pos:start="377:13" pos:end="377:20"><name pos:start="377:13" pos:end="377:15">pkt</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:20">pos</name></name> <operator pos:start="377:22" pos:end="377:22">=</operator> <name pos:start="377:24" pos:end="377:26">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:42"><expr pos:start="379:13" pos:end="379:41"><name pos:start="379:13" pos:end="379:29"><name pos:start="379:13" pos:end="379:15">pkt</name><operator pos:start="379:16" pos:end="379:17">-&gt;</operator><name pos:start="379:18" pos:end="379:29">stream_index</name></name> <operator pos:start="379:31" pos:end="379:31">=</operator> <name pos:start="379:33" pos:end="379:41"><name pos:start="379:33" pos:end="379:34">st</name><operator pos:start="379:35" pos:end="379:36">-&gt;</operator><name pos:start="379:37" pos:end="379:41">index</name></name></expr>;</expr_stmt>



            <switch pos:start="383:13" pos:end="425:13">switch <condition pos:start="383:20" pos:end="383:28">(<expr pos:start="383:21" pos:end="383:27"><name pos:start="383:21" pos:end="383:27">bmp_fmt</name></expr>)</condition> <block pos:start="383:30" pos:end="425:13">{<block_content pos:start="385:13" pos:end="423:30">

            <case pos:start="385:13" pos:end="385:19">case <expr pos:start="385:18" pos:end="385:18"><literal type="number" pos:start="385:18" pos:end="385:18">3</literal></expr>:</case>

                <expr_stmt pos:start="387:17" pos:end="387:53"><expr pos:start="387:17" pos:end="387:52"><name pos:start="387:17" pos:end="387:34"><name pos:start="387:17" pos:end="387:18">st</name><operator pos:start="387:19" pos:end="387:20">-&gt;</operator><name pos:start="387:21" pos:end="387:25">codec</name><operator pos:start="387:26" pos:end="387:27">-&gt;</operator><name pos:start="387:28" pos:end="387:34">pix_fmt</name></name> <operator pos:start="387:36" pos:end="387:36">=</operator> <name pos:start="387:38" pos:end="387:52">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>

                <for pos:start="389:17" pos:end="393:82">for <control pos:start="389:21" pos:end="389:50">(<init pos:start="389:22" pos:end="389:27"><expr pos:start="389:22" pos:end="389:26"><name pos:start="389:22" pos:end="389:22">i</name> <operator pos:start="389:24" pos:end="389:24">=</operator> <literal type="number" pos:start="389:26" pos:end="389:26">0</literal></expr>;</init> <condition pos:start="389:29" pos:end="389:45"><expr pos:start="389:29" pos:end="389:44"><name pos:start="389:29" pos:end="389:29">i</name> <operator pos:start="389:31" pos:end="389:31">&lt;</operator> <name pos:start="389:33" pos:end="389:44">colormapsize</name></expr>;</condition> <incr pos:start="389:47" pos:end="389:49"><expr pos:start="389:47" pos:end="389:49"><name pos:start="389:47" pos:end="389:47">i</name><operator pos:start="389:48" pos:end="389:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="391:21" pos:end="393:82"><block_content pos:start="391:21" pos:end="393:82">

                    <if_stmt pos:start="391:21" pos:end="393:82"><if pos:start="391:21" pos:end="391:82">if <condition pos:start="391:24" pos:end="391:34">(<expr pos:start="391:25" pos:end="391:33"><name pos:start="391:25" pos:end="391:33">alpha_bmp</name></expr>)</condition><block type="pseudo" pos:start="391:37" pos:end="391:82"><block_content pos:start="391:37" pos:end="391:82">  <expr_stmt pos:start="391:37" pos:end="391:82"><expr pos:start="391:37" pos:end="391:81"><name pos:start="391:37" pos:end="391:47"><name pos:start="391:37" pos:end="391:44">colormap</name><index pos:start="391:45" pos:end="391:47">[<expr pos:start="391:46" pos:end="391:46"><name pos:start="391:46" pos:end="391:46">i</name></expr>]</index></name> <operator pos:start="391:49" pos:end="391:49">=</operator> <name pos:start="391:51" pos:end="391:56"><name pos:start="391:51" pos:end="391:53">buf</name><index pos:start="391:54" pos:end="391:56">[<expr pos:start="391:55" pos:end="391:55"><literal type="number" pos:start="391:55" pos:end="391:55">3</literal></expr>]</index></name><operator pos:start="391:57" pos:end="391:58">&lt;&lt;</operator><literal type="number" pos:start="391:59" pos:end="391:60">24</literal> <operator pos:start="391:62" pos:end="391:62">|</operator> <call pos:start="391:64" pos:end="391:81"><name pos:start="391:64" pos:end="391:70">AV_RB24</name><argument_list pos:start="391:71" pos:end="391:81">(<argument pos:start="391:72" pos:end="391:80"><expr pos:start="391:72" pos:end="391:80"><name pos:start="391:72" pos:end="391:74">buf</name> <operator pos:start="391:76" pos:end="391:76">+</operator> <literal type="number" pos:start="391:78" pos:end="391:78">4</literal><operator pos:start="391:79" pos:end="391:79">*</operator><name pos:start="391:80" pos:end="391:80">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="393:21" pos:end="393:82">else<block type="pseudo" pos:start="393:37" pos:end="393:82"><block_content pos:start="393:37" pos:end="393:82">            <expr_stmt pos:start="393:37" pos:end="393:82"><expr pos:start="393:37" pos:end="393:81"><name pos:start="393:37" pos:end="393:47"><name pos:start="393:37" pos:end="393:44">colormap</name><index pos:start="393:45" pos:end="393:47">[<expr pos:start="393:46" pos:end="393:46"><name pos:start="393:46" pos:end="393:46">i</name></expr>]</index></name> <operator pos:start="393:49" pos:end="393:49">=</operator> <literal type="number" pos:start="393:51" pos:end="393:55">0xffU</literal> <operator pos:start="393:57" pos:end="393:58">&lt;&lt;</operator><literal type="number" pos:start="393:59" pos:end="393:60">24</literal> <operator pos:start="393:62" pos:end="393:62">|</operator> <call pos:start="393:64" pos:end="393:81"><name pos:start="393:64" pos:end="393:70">AV_RB24</name><argument_list pos:start="393:71" pos:end="393:81">(<argument pos:start="393:72" pos:end="393:80"><expr pos:start="393:72" pos:end="393:80"><name pos:start="393:72" pos:end="393:74">buf</name> <operator pos:start="393:76" pos:end="393:76">+</operator> <literal type="number" pos:start="393:78" pos:end="393:78">3</literal><operator pos:start="393:79" pos:end="393:79">*</operator><name pos:start="393:80" pos:end="393:80">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></for>

                <expr_stmt pos:start="395:17" pos:end="395:88"><expr pos:start="395:17" pos:end="395:87"><name pos:start="395:17" pos:end="395:19">pal</name> <operator pos:start="395:21" pos:end="395:21">=</operator> <call pos:start="395:23" pos:end="395:87"><name pos:start="395:23" pos:end="395:45">av_packet_new_side_data</name><argument_list pos:start="395:46" pos:end="395:87">(<argument pos:start="395:47" pos:end="395:49"><expr pos:start="395:47" pos:end="395:49"><name pos:start="395:47" pos:end="395:49">pkt</name></expr></argument>, <argument pos:start="395:52" pos:end="395:70"><expr pos:start="395:52" pos:end="395:70"><name pos:start="395:52" pos:end="395:70">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="395:73" pos:end="395:86"><expr pos:start="395:73" pos:end="395:86"><name pos:start="395:73" pos:end="395:86">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="397:17" pos:end="403:17"><if pos:start="397:17" pos:end="403:17">if <condition pos:start="397:20" pos:end="397:25">(<expr pos:start="397:21" pos:end="397:24"><operator pos:start="397:21" pos:end="397:21">!</operator><name pos:start="397:22" pos:end="397:24">pal</name></expr>)</condition> <block pos:start="397:27" pos:end="403:17">{<block_content pos:start="399:21" pos:end="401:36">

                    <expr_stmt pos:start="399:21" pos:end="399:42"><expr pos:start="399:21" pos:end="399:41"><name pos:start="399:21" pos:end="399:23">res</name> <operator pos:start="399:25" pos:end="399:25">=</operator> <call pos:start="399:27" pos:end="399:41"><name pos:start="399:27" pos:end="399:33">AVERROR</name><argument_list pos:start="399:34" pos:end="399:41">(<argument pos:start="399:35" pos:end="399:40"><expr pos:start="399:35" pos:end="399:40"><name pos:start="399:35" pos:end="399:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="401:21" pos:end="401:36">goto <name pos:start="401:26" pos:end="401:35">bitmap_end</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="405:17" pos:end="405:54"><expr pos:start="405:17" pos:end="405:53"><call pos:start="405:17" pos:end="405:53"><name pos:start="405:17" pos:end="405:22">memcpy</name><argument_list pos:start="405:23" pos:end="405:53">(<argument pos:start="405:24" pos:end="405:26"><expr pos:start="405:24" pos:end="405:26"><name pos:start="405:24" pos:end="405:26">pal</name></expr></argument>, <argument pos:start="405:29" pos:end="405:36"><expr pos:start="405:29" pos:end="405:36"><name pos:start="405:29" pos:end="405:36">colormap</name></expr></argument>, <argument pos:start="405:39" pos:end="405:52"><expr pos:start="405:39" pos:end="405:52"><name pos:start="405:39" pos:end="405:52">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="407:17" pos:end="407:22">break;</break>

            <case pos:start="409:13" pos:end="409:19">case <expr pos:start="409:18" pos:end="409:18"><literal type="number" pos:start="409:18" pos:end="409:18">4</literal></expr>:</case>

                <expr_stmt pos:start="411:17" pos:end="411:55"><expr pos:start="411:17" pos:end="411:54"><name pos:start="411:17" pos:end="411:34"><name pos:start="411:17" pos:end="411:18">st</name><operator pos:start="411:19" pos:end="411:20">-&gt;</operator><name pos:start="411:21" pos:end="411:25">codec</name><operator pos:start="411:26" pos:end="411:27">-&gt;</operator><name pos:start="411:28" pos:end="411:34">pix_fmt</name></name> <operator pos:start="411:36" pos:end="411:36">=</operator> <name pos:start="411:38" pos:end="411:54">AV_PIX_FMT_RGB555</name></expr>;</expr_stmt>

                <break pos:start="413:17" pos:end="413:22">break;</break>

            <case pos:start="415:13" pos:end="415:19">case <expr pos:start="415:18" pos:end="415:18"><literal type="number" pos:start="415:18" pos:end="415:18">5</literal></expr>:</case>

                <expr_stmt pos:start="417:17" pos:end="417:83"><expr pos:start="417:17" pos:end="417:82"><name pos:start="417:17" pos:end="417:34"><name pos:start="417:17" pos:end="417:18">st</name><operator pos:start="417:19" pos:end="417:20">-&gt;</operator><name pos:start="417:21" pos:end="417:25">codec</name><operator pos:start="417:26" pos:end="417:27">-&gt;</operator><name pos:start="417:28" pos:end="417:34">pix_fmt</name></name> <operator pos:start="417:36" pos:end="417:36">=</operator> <ternary pos:start="417:38" pos:end="417:82"><condition pos:start="417:38" pos:end="417:48"><expr pos:start="417:38" pos:end="417:46"><name pos:start="417:38" pos:end="417:46">alpha_bmp</name></expr> ?</condition><then pos:start="417:50" pos:end="417:64"> <expr pos:start="417:50" pos:end="417:64"><name pos:start="417:50" pos:end="417:64">AV_PIX_FMT_ARGB</name></expr> </then><else pos:start="417:66" pos:end="417:82">: <expr pos:start="417:68" pos:end="417:82"><name pos:start="417:68" pos:end="417:82">AV_PIX_FMT_0RGB</name></expr></else></ternary></expr>;</expr_stmt>

                <break pos:start="419:17" pos:end="419:22">break;</break>

            <default pos:start="421:13" pos:end="421:20">default:</default>

                <expr_stmt pos:start="423:17" pos:end="423:30"><expr pos:start="423:17" pos:end="423:29"><call pos:start="423:17" pos:end="423:29"><name pos:start="423:17" pos:end="423:26">av_assert0</name><argument_list pos:start="423:27" pos:end="423:29">(<argument pos:start="423:28" pos:end="423:28"><expr pos:start="423:28" pos:end="423:28"><literal type="number" pos:start="423:28" pos:end="423:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <if_stmt pos:start="429:13" pos:end="435:13"><if pos:start="429:13" pos:end="435:13">if <condition pos:start="429:16" pos:end="429:46">(<expr pos:start="429:17" pos:end="429:45"><name pos:start="429:17" pos:end="429:24">linesize</name> <operator pos:start="429:26" pos:end="429:26">*</operator> <name pos:start="429:28" pos:end="429:33">height</name> <operator pos:start="429:35" pos:end="429:35">&gt;</operator> <name pos:start="429:37" pos:end="429:45"><name pos:start="429:37" pos:end="429:39">pkt</name><operator pos:start="429:40" pos:end="429:41">-&gt;</operator><name pos:start="429:42" pos:end="429:45">size</name></name></expr>)</condition> <block pos:start="429:48" pos:end="435:13">{<block_content pos:start="431:17" pos:end="433:32">

                <expr_stmt pos:start="431:17" pos:end="431:42"><expr pos:start="431:17" pos:end="431:41"><name pos:start="431:17" pos:end="431:19">res</name> <operator pos:start="431:21" pos:end="431:21">=</operator> <name pos:start="431:23" pos:end="431:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="433:17" pos:end="433:32">goto <name pos:start="433:22" pos:end="433:31">bitmap_end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:81"><expr pos:start="437:13" pos:end="437:80"><call pos:start="437:13" pos:end="437:80"><name pos:start="437:13" pos:end="437:18">memcpy</name><argument_list pos:start="437:19" pos:end="437:80">(<argument pos:start="437:20" pos:end="437:28"><expr pos:start="437:20" pos:end="437:28"><name pos:start="437:20" pos:end="437:28"><name pos:start="437:20" pos:end="437:22">pkt</name><operator pos:start="437:23" pos:end="437:24">-&gt;</operator><name pos:start="437:25" pos:end="437:28">data</name></name></expr></argument>, <argument pos:start="437:31" pos:end="437:60"><expr pos:start="437:31" pos:end="437:60"><name pos:start="437:31" pos:end="437:33">buf</name> <operator pos:start="437:35" pos:end="437:35">+</operator> <name pos:start="437:37" pos:end="437:48">colormapsize</name><operator pos:start="437:49" pos:end="437:49">*</operator><name pos:start="437:50" pos:end="437:60">colormapbpp</name></expr></argument>, <argument pos:start="437:63" pos:end="437:79"><expr pos:start="437:63" pos:end="437:79"><name pos:start="437:63" pos:end="437:70">linesize</name> <operator pos:start="437:72" pos:end="437:72">*</operator> <name pos:start="437:74" pos:end="437:79">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="441:13" pos:end="441:28"><expr pos:start="441:13" pos:end="441:27"><name pos:start="441:13" pos:end="441:15">res</name> <operator pos:start="441:17" pos:end="441:17">=</operator> <name pos:start="441:19" pos:end="441:27"><name pos:start="441:19" pos:end="441:21">pkt</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:27">size</name></name></expr>;</expr_stmt>



<label pos:start="445:1" pos:end="445:11"><name pos:start="445:1" pos:end="445:10">bitmap_end</name>:</label>

            <expr_stmt pos:start="447:13" pos:end="447:28"><expr pos:start="447:13" pos:end="447:27"><call pos:start="447:13" pos:end="447:27"><name pos:start="447:13" pos:end="447:20">av_freep</name><argument_list pos:start="447:21" pos:end="447:27">(<argument pos:start="447:22" pos:end="447:26"><expr pos:start="447:22" pos:end="447:26"><operator pos:start="447:22" pos:end="447:22">&amp;</operator><name pos:start="447:23" pos:end="447:26">zbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:27"><expr pos:start="449:13" pos:end="449:26"><call pos:start="449:13" pos:end="449:26"><name pos:start="449:13" pos:end="449:20">av_freep</name><argument_list pos:start="449:21" pos:end="449:26">(<argument pos:start="449:22" pos:end="449:25"><expr pos:start="449:22" pos:end="449:25"><operator pos:start="449:22" pos:end="449:22">&amp;</operator><name pos:start="449:23" pos:end="449:25">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="451:13" pos:end="451:23">return <expr pos:start="451:20" pos:end="451:22"><name pos:start="451:20" pos:end="451:22">res</name></expr>;</return>

<label pos:start="453:1" pos:end="453:16"><name pos:start="453:1" pos:end="453:15">bitmap_end_skip</name>:</label>

            <expr_stmt pos:start="455:13" pos:end="455:28"><expr pos:start="455:13" pos:end="455:27"><call pos:start="455:13" pos:end="455:27"><name pos:start="455:13" pos:end="455:20">av_freep</name><argument_list pos:start="455:21" pos:end="455:27">(<argument pos:start="455:22" pos:end="455:26"><expr pos:start="455:22" pos:end="455:26"><operator pos:start="455:22" pos:end="455:22">&amp;</operator><name pos:start="455:23" pos:end="455:26">zbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="457:13" pos:end="460:0"><expr pos:start="457:13" pos:end="457:26"><call pos:start="457:13" pos:end="457:26"><name pos:start="457:13" pos:end="457:20">av_freep</name><argument_list pos:start="457:21" pos:end="457:26">(<argument pos:start="457:22" pos:end="457:25"><expr pos:start="457:22" pos:end="457:25"><operator pos:start="457:22" pos:end="457:22">&amp;</operator><name pos:start="457:23" pos:end="457:25">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="459:1" pos:end="459:5">#<cpp:directive pos:start="459:2" pos:end="459:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="461:13" pos:end="464:0"><expr pos:start="461:13" pos:end="461:84"><call pos:start="461:13" pos:end="461:84"><name pos:start="461:13" pos:end="461:18">av_log</name><argument_list pos:start="461:19" pos:end="461:84">(<argument pos:start="461:20" pos:end="461:20"><expr pos:start="461:20" pos:end="461:20"><name pos:start="461:20" pos:end="461:20">s</name></expr></argument>, <argument pos:start="461:23" pos:end="461:34"><expr pos:start="461:23" pos:end="461:34"><name pos:start="461:23" pos:end="461:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="461:37" pos:end="461:83"><expr pos:start="461:37" pos:end="461:83"><literal type="string" pos:start="461:37" pos:end="461:83">"this file requires zlib support compiled in\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="463:1" pos:end="463:6">#<cpp:directive pos:start="463:2" pos:end="463:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <if type="elseif" pos:start="465:11" pos:end="509:9">else if <condition pos:start="465:19" pos:end="465:42">(<expr pos:start="465:20" pos:end="465:41"><name pos:start="465:20" pos:end="465:22">tag</name> <operator pos:start="465:24" pos:end="465:25">==</operator> <name pos:start="465:27" pos:end="465:41">TAG_STREAMBLOCK</name></expr>)</condition> <block pos:start="465:44" pos:end="509:9">{<block_content pos:start="467:13" pos:end="507:13">

            <for pos:start="467:13" pos:end="507:13">for <control pos:start="467:17" pos:end="467:47">(<init pos:start="467:18" pos:end="467:23"><expr pos:start="467:18" pos:end="467:22"><name pos:start="467:18" pos:end="467:18">i</name> <operator pos:start="467:20" pos:end="467:20">=</operator> <literal type="number" pos:start="467:22" pos:end="467:22">0</literal></expr>;</init> <condition pos:start="467:25" pos:end="467:42"><expr pos:start="467:25" pos:end="467:41"><name pos:start="467:25" pos:end="467:25">i</name> <operator pos:start="467:27" pos:end="467:27">&lt;</operator> <name pos:start="467:29" pos:end="467:41"><name pos:start="467:29" pos:end="467:29">s</name><operator pos:start="467:30" pos:end="467:31">-&gt;</operator><name pos:start="467:32" pos:end="467:41">nb_streams</name></name></expr>;</condition> <incr pos:start="467:44" pos:end="467:46"><expr pos:start="467:44" pos:end="467:46"><name pos:start="467:44" pos:end="467:44">i</name><operator pos:start="467:45" pos:end="467:46">++</operator></expr></incr>)</control> <block pos:start="467:49" pos:end="507:13">{<block_content pos:start="469:17" pos:end="505:17">

                <expr_stmt pos:start="469:17" pos:end="469:35"><expr pos:start="469:17" pos:end="469:34"><name pos:start="469:17" pos:end="469:18">st</name> <operator pos:start="469:20" pos:end="469:20">=</operator> <name pos:start="469:22" pos:end="469:34"><name pos:start="469:22" pos:end="469:22">s</name><operator pos:start="469:23" pos:end="469:24">-&gt;</operator><name pos:start="469:25" pos:end="469:31">streams</name><index pos:start="469:32" pos:end="469:34">[<expr pos:start="469:33" pos:end="469:33"><name pos:start="469:33" pos:end="469:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="471:17" pos:end="505:17"><if pos:start="471:17" pos:end="505:17">if <condition pos:start="471:20" pos:end="471:80">(<expr pos:start="471:21" pos:end="471:79"><name pos:start="471:21" pos:end="471:41"><name pos:start="471:21" pos:end="471:22">st</name><operator pos:start="471:23" pos:end="471:24">-&gt;</operator><name pos:start="471:25" pos:end="471:29">codec</name><operator pos:start="471:30" pos:end="471:31">-&gt;</operator><name pos:start="471:32" pos:end="471:41">codec_type</name></name> <operator pos:start="471:43" pos:end="471:44">==</operator> <name pos:start="471:46" pos:end="471:63">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="471:65" pos:end="471:66">&amp;&amp;</operator> <name pos:start="471:68" pos:end="471:73"><name pos:start="471:68" pos:end="471:69">st</name><operator pos:start="471:70" pos:end="471:71">-&gt;</operator><name pos:start="471:72" pos:end="471:73">id</name></name> <operator pos:start="471:75" pos:end="471:76">==</operator> <operator pos:start="471:78" pos:end="471:78">-</operator><literal type="number" pos:start="471:79" pos:end="471:79">1</literal></expr>)</condition> <block pos:start="471:82" pos:end="505:17">{<block_content pos:start="473:21" pos:end="503:37">

                    <if_stmt pos:start="473:21" pos:end="497:21"><if pos:start="473:21" pos:end="487:21">if <condition pos:start="473:24" pos:end="473:63">(<expr pos:start="473:25" pos:end="473:62"><name pos:start="473:25" pos:end="473:43"><name pos:start="473:25" pos:end="473:26">st</name><operator pos:start="473:27" pos:end="473:28">-&gt;</operator><name pos:start="473:29" pos:end="473:33">codec</name><operator pos:start="473:34" pos:end="473:35">-&gt;</operator><name pos:start="473:36" pos:end="473:43">codec_id</name></name> <operator pos:start="473:45" pos:end="473:46">==</operator> <name pos:start="473:48" pos:end="473:62">AV_CODEC_ID_MP3</name></expr>)</condition> <block pos:start="473:65" pos:end="487:21">{<block_content pos:start="475:25" pos:end="485:39">

                        <expr_stmt pos:start="475:25" pos:end="475:41"><expr pos:start="475:25" pos:end="475:40"><call pos:start="475:25" pos:end="475:40"><name pos:start="475:25" pos:end="475:33">avio_skip</name><argument_list pos:start="475:34" pos:end="475:40">(<argument pos:start="475:35" pos:end="475:36"><expr pos:start="475:35" pos:end="475:36"><name pos:start="475:35" pos:end="475:36">pb</name></expr></argument>, <argument pos:start="475:39" pos:end="475:39"><expr pos:start="475:39" pos:end="475:39"><literal type="number" pos:start="475:39" pos:end="475:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="477:25" pos:end="477:33"><expr pos:start="477:25" pos:end="477:32"><name pos:start="477:25" pos:end="477:27">len</name> <operator pos:start="477:29" pos:end="477:30">-=</operator> <literal type="number" pos:start="477:32" pos:end="477:32">4</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="479:25" pos:end="481:38"><if pos:start="479:25" pos:end="481:38">if <condition pos:start="479:28" pos:end="479:37">(<expr pos:start="479:29" pos:end="479:36"><name pos:start="479:29" pos:end="479:31">len</name> <operator pos:start="479:33" pos:end="479:34">&lt;=</operator> <literal type="number" pos:start="479:36" pos:end="479:36">0</literal></expr>)</condition><block type="pseudo" pos:start="481:29" pos:end="481:38"><block_content pos:start="481:29" pos:end="481:38">

                            <goto pos:start="481:29" pos:end="481:38">goto <name pos:start="481:34" pos:end="481:37">skip</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="483:25" pos:end="485:39"><if pos:start="483:25" pos:end="485:39">if <condition pos:start="483:28" pos:end="483:68">(<expr pos:start="483:29" pos:end="483:67"><operator pos:start="483:29" pos:end="483:29">(</operator><name pos:start="483:30" pos:end="483:32">res</name> <operator pos:start="483:34" pos:end="483:34">=</operator> <call pos:start="483:36" pos:end="483:62"><name pos:start="483:36" pos:end="483:48">av_get_packet</name><argument_list pos:start="483:49" pos:end="483:62">(<argument pos:start="483:50" pos:end="483:51"><expr pos:start="483:50" pos:end="483:51"><name pos:start="483:50" pos:end="483:51">pb</name></expr></argument>, <argument pos:start="483:54" pos:end="483:56"><expr pos:start="483:54" pos:end="483:56"><name pos:start="483:54" pos:end="483:56">pkt</name></expr></argument>, <argument pos:start="483:59" pos:end="483:61"><expr pos:start="483:59" pos:end="483:61"><name pos:start="483:59" pos:end="483:61">len</name></expr></argument>)</argument_list></call><operator pos:start="483:63" pos:end="483:63">)</operator> <operator pos:start="483:65" pos:end="483:65">&lt;</operator> <literal type="number" pos:start="483:67" pos:end="483:67">0</literal></expr>)</condition><block type="pseudo" pos:start="485:29" pos:end="485:39"><block_content pos:start="485:29" pos:end="485:39">

                            <return pos:start="485:29" pos:end="485:39">return <expr pos:start="485:36" pos:end="485:38"><name pos:start="485:36" pos:end="485:38">res</name></expr>;</return></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="487:23" pos:end="497:21">else <block pos:start="487:28" pos:end="497:21">{<block_content pos:start="489:25" pos:end="495:39"> <comment type="line" pos:start="487:30" pos:end="487:42">// ADPCM, PCM</comment>

                        <if_stmt pos:start="489:25" pos:end="491:38"><if pos:start="489:25" pos:end="491:38">if <condition pos:start="489:28" pos:end="489:37">(<expr pos:start="489:29" pos:end="489:36"><name pos:start="489:29" pos:end="489:31">len</name> <operator pos:start="489:33" pos:end="489:34">&lt;=</operator> <literal type="number" pos:start="489:36" pos:end="489:36">0</literal></expr>)</condition><block type="pseudo" pos:start="491:29" pos:end="491:38"><block_content pos:start="491:29" pos:end="491:38">

                            <goto pos:start="491:29" pos:end="491:38">goto <name pos:start="491:34" pos:end="491:37">skip</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="493:25" pos:end="495:39"><if pos:start="493:25" pos:end="495:39">if <condition pos:start="493:28" pos:end="493:68">(<expr pos:start="493:29" pos:end="493:67"><operator pos:start="493:29" pos:end="493:29">(</operator><name pos:start="493:30" pos:end="493:32">res</name> <operator pos:start="493:34" pos:end="493:34">=</operator> <call pos:start="493:36" pos:end="493:62"><name pos:start="493:36" pos:end="493:48">av_get_packet</name><argument_list pos:start="493:49" pos:end="493:62">(<argument pos:start="493:50" pos:end="493:51"><expr pos:start="493:50" pos:end="493:51"><name pos:start="493:50" pos:end="493:51">pb</name></expr></argument>, <argument pos:start="493:54" pos:end="493:56"><expr pos:start="493:54" pos:end="493:56"><name pos:start="493:54" pos:end="493:56">pkt</name></expr></argument>, <argument pos:start="493:59" pos:end="493:61"><expr pos:start="493:59" pos:end="493:61"><name pos:start="493:59" pos:end="493:61">len</name></expr></argument>)</argument_list></call><operator pos:start="493:63" pos:end="493:63">)</operator> <operator pos:start="493:65" pos:end="493:65">&lt;</operator> <literal type="number" pos:start="493:67" pos:end="493:67">0</literal></expr>)</condition><block type="pseudo" pos:start="495:29" pos:end="495:39"><block_content pos:start="495:29" pos:end="495:39">

                            <return pos:start="495:29" pos:end="495:39">return <expr pos:start="495:36" pos:end="495:38"><name pos:start="495:36" pos:end="495:38">res</name></expr>;</return></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="499:21" pos:end="499:44"><expr pos:start="499:21" pos:end="499:43"><name pos:start="499:21" pos:end="499:28"><name pos:start="499:21" pos:end="499:23">pkt</name><operator pos:start="499:24" pos:end="499:25">-&gt;</operator><name pos:start="499:26" pos:end="499:28">pos</name></name>          <operator pos:start="499:39" pos:end="499:39">=</operator> <name pos:start="499:41" pos:end="499:43">pos</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="501:21" pos:end="501:50"><expr pos:start="501:21" pos:end="501:49"><name pos:start="501:21" pos:end="501:37"><name pos:start="501:21" pos:end="501:23">pkt</name><operator pos:start="501:24" pos:end="501:25">-&gt;</operator><name pos:start="501:26" pos:end="501:37">stream_index</name></name> <operator pos:start="501:39" pos:end="501:39">=</operator> <name pos:start="501:41" pos:end="501:49"><name pos:start="501:41" pos:end="501:42">st</name><operator pos:start="501:43" pos:end="501:44">-&gt;</operator><name pos:start="501:45" pos:end="501:49">index</name></name></expr>;</expr_stmt>

                    <return pos:start="503:21" pos:end="503:37">return <expr pos:start="503:28" pos:end="503:36"><name pos:start="503:28" pos:end="503:36"><name pos:start="503:28" pos:end="503:30">pkt</name><operator pos:start="503:31" pos:end="503:32">-&gt;</operator><name pos:start="503:33" pos:end="503:36">size</name></name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="509:11" pos:end="606:9">else if <condition pos:start="509:19" pos:end="509:36">(<expr pos:start="509:20" pos:end="509:35"><name pos:start="509:20" pos:end="509:22">tag</name> <operator pos:start="509:24" pos:end="509:25">==</operator> <name pos:start="509:27" pos:end="509:35">TAG_JPEG2</name></expr>)</condition> <block pos:start="509:38" pos:end="606:9">{<block_content pos:start="511:13" pos:end="604:29">

            <for pos:start="511:13" pos:end="519:13">for <control pos:start="511:17" pos:end="511:43">(<init pos:start="511:18" pos:end="511:21"><expr pos:start="511:18" pos:end="511:20"><name pos:start="511:18" pos:end="511:18">i</name><operator pos:start="511:19" pos:end="511:19">=</operator><literal type="number" pos:start="511:20" pos:end="511:20">0</literal></expr>;</init> <condition pos:start="511:23" pos:end="511:38"><expr pos:start="511:23" pos:end="511:37"><name pos:start="511:23" pos:end="511:23">i</name><operator pos:start="511:24" pos:end="511:24">&lt;</operator><name pos:start="511:25" pos:end="511:37"><name pos:start="511:25" pos:end="511:25">s</name><operator pos:start="511:26" pos:end="511:27">-&gt;</operator><name pos:start="511:28" pos:end="511:37">nb_streams</name></name></expr>;</condition> <incr pos:start="511:40" pos:end="511:42"><expr pos:start="511:40" pos:end="511:42"><name pos:start="511:40" pos:end="511:40">i</name><operator pos:start="511:41" pos:end="511:42">++</operator></expr></incr>)</control> <block pos:start="511:45" pos:end="519:13">{<block_content pos:start="513:17" pos:end="517:26">

                <expr_stmt pos:start="513:17" pos:end="513:35"><expr pos:start="513:17" pos:end="513:34"><name pos:start="513:17" pos:end="513:18">st</name> <operator pos:start="513:20" pos:end="513:20">=</operator> <name pos:start="513:22" pos:end="513:34"><name pos:start="513:22" pos:end="513:22">s</name><operator pos:start="513:23" pos:end="513:24">-&gt;</operator><name pos:start="513:25" pos:end="513:31">streams</name><index pos:start="513:32" pos:end="513:34">[<expr pos:start="513:33" pos:end="513:33"><name pos:start="513:33" pos:end="513:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="515:17" pos:end="517:26"><if pos:start="515:17" pos:end="517:26">if <condition pos:start="515:20" pos:end="515:77">(<expr pos:start="515:21" pos:end="515:76"><name pos:start="515:21" pos:end="515:39"><name pos:start="515:21" pos:end="515:22">st</name><operator pos:start="515:23" pos:end="515:24">-&gt;</operator><name pos:start="515:25" pos:end="515:29">codec</name><operator pos:start="515:30" pos:end="515:31">-&gt;</operator><name pos:start="515:32" pos:end="515:39">codec_id</name></name> <operator pos:start="515:41" pos:end="515:42">==</operator> <name pos:start="515:44" pos:end="515:60">AV_CODEC_ID_MJPEG</name> <operator pos:start="515:62" pos:end="515:63">&amp;&amp;</operator> <name pos:start="515:65" pos:end="515:70"><name pos:start="515:65" pos:end="515:66">st</name><operator pos:start="515:67" pos:end="515:68">-&gt;</operator><name pos:start="515:69" pos:end="515:70">id</name></name> <operator pos:start="515:72" pos:end="515:73">==</operator> <operator pos:start="515:75" pos:end="515:75">-</operator><literal type="number" pos:start="515:76" pos:end="515:76">2</literal></expr>)</condition><block type="pseudo" pos:start="517:21" pos:end="517:26"><block_content pos:start="517:21" pos:end="517:26">

                    <break pos:start="517:21" pos:end="517:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="521:13" pos:end="539:13"><if pos:start="521:13" pos:end="539:13">if <condition pos:start="521:16" pos:end="521:35">(<expr pos:start="521:17" pos:end="521:34"><name pos:start="521:17" pos:end="521:17">i</name> <operator pos:start="521:19" pos:end="521:20">==</operator> <name pos:start="521:22" pos:end="521:34"><name pos:start="521:22" pos:end="521:22">s</name><operator pos:start="521:23" pos:end="521:24">-&gt;</operator><name pos:start="521:25" pos:end="521:34">nb_streams</name></name></expr>)</condition> <block pos:start="521:37" pos:end="539:13">{<block_content pos:start="523:17" pos:end="537:25">

                <expr_stmt pos:start="523:17" pos:end="523:51"><expr pos:start="523:17" pos:end="523:50"><name pos:start="523:17" pos:end="523:19">vst</name> <operator pos:start="523:21" pos:end="523:21">=</operator> <call pos:start="523:23" pos:end="523:50"><name pos:start="523:23" pos:end="523:41">avformat_new_stream</name><argument_list pos:start="523:42" pos:end="523:50">(<argument pos:start="523:43" pos:end="523:43"><expr pos:start="523:43" pos:end="523:43"><name pos:start="523:43" pos:end="523:43">s</name></expr></argument>, <argument pos:start="523:46" pos:end="523:49"><expr pos:start="523:46" pos:end="523:49"><name pos:start="523:46" pos:end="523:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="525:17" pos:end="527:43"><if pos:start="525:17" pos:end="527:43">if <condition pos:start="525:20" pos:end="525:25">(<expr pos:start="525:21" pos:end="525:24"><operator pos:start="525:21" pos:end="525:21">!</operator><name pos:start="525:22" pos:end="525:24">vst</name></expr>)</condition><block type="pseudo" pos:start="527:21" pos:end="527:43"><block_content pos:start="527:21" pos:end="527:43">

                    <return pos:start="527:21" pos:end="527:43">return <expr pos:start="527:28" pos:end="527:42"><call pos:start="527:28" pos:end="527:42"><name pos:start="527:28" pos:end="527:34">AVERROR</name><argument_list pos:start="527:35" pos:end="527:42">(<argument pos:start="527:36" pos:end="527:41"><expr pos:start="527:36" pos:end="527:41"><name pos:start="527:36" pos:end="527:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="529:17" pos:end="529:29"><expr pos:start="529:17" pos:end="529:28"><name pos:start="529:17" pos:end="529:23"><name pos:start="529:17" pos:end="529:19">vst</name><operator pos:start="529:20" pos:end="529:21">-&gt;</operator><name pos:start="529:22" pos:end="529:23">id</name></name> <operator pos:start="529:25" pos:end="529:25">=</operator> <operator pos:start="529:27" pos:end="529:27">-</operator><literal type="number" pos:start="529:28" pos:end="529:28">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="529:31" pos:end="529:88">/* -2 to avoid clash with video stream and audio stream */</comment>

                <expr_stmt pos:start="531:17" pos:end="531:60"><expr pos:start="531:17" pos:end="531:59"><name pos:start="531:17" pos:end="531:38"><name pos:start="531:17" pos:end="531:19">vst</name><operator pos:start="531:20" pos:end="531:21">-&gt;</operator><name pos:start="531:22" pos:end="531:26">codec</name><operator pos:start="531:27" pos:end="531:28">-&gt;</operator><name pos:start="531:29" pos:end="531:38">codec_type</name></name> <operator pos:start="531:40" pos:end="531:40">=</operator> <name pos:start="531:42" pos:end="531:59">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="533:17" pos:end="533:57"><expr pos:start="533:17" pos:end="533:56"><name pos:start="533:17" pos:end="533:36"><name pos:start="533:17" pos:end="533:19">vst</name><operator pos:start="533:20" pos:end="533:21">-&gt;</operator><name pos:start="533:22" pos:end="533:26">codec</name><operator pos:start="533:27" pos:end="533:28">-&gt;</operator><name pos:start="533:29" pos:end="533:36">codec_id</name></name> <operator pos:start="533:38" pos:end="533:38">=</operator> <name pos:start="533:40" pos:end="533:56">AV_CODEC_ID_MJPEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="535:17" pos:end="535:67"><expr pos:start="535:17" pos:end="535:66"><call pos:start="535:17" pos:end="535:66"><name pos:start="535:17" pos:end="535:35">avpriv_set_pts_info</name><argument_list pos:start="535:36" pos:end="535:66">(<argument pos:start="535:37" pos:end="535:39"><expr pos:start="535:37" pos:end="535:39"><name pos:start="535:37" pos:end="535:39">vst</name></expr></argument>, <argument pos:start="535:42" pos:end="535:43"><expr pos:start="535:42" pos:end="535:43"><literal type="number" pos:start="535:42" pos:end="535:43">64</literal></expr></argument>, <argument pos:start="535:46" pos:end="535:48"><expr pos:start="535:46" pos:end="535:48"><literal type="number" pos:start="535:46" pos:end="535:48">256</literal></expr></argument>, <argument pos:start="535:51" pos:end="535:65"><expr pos:start="535:51" pos:end="535:65"><name pos:start="535:51" pos:end="535:65"><name pos:start="535:51" pos:end="535:53">swf</name><operator pos:start="535:54" pos:end="535:55">-&gt;</operator><name pos:start="535:56" pos:end="535:65">frame_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="537:17" pos:end="537:25"><expr pos:start="537:17" pos:end="537:24"><name pos:start="537:17" pos:end="537:18">st</name> <operator pos:start="537:20" pos:end="537:20">=</operator> <name pos:start="537:22" pos:end="537:24">vst</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="541:13" pos:end="541:26"><expr pos:start="541:13" pos:end="541:25"><call pos:start="541:13" pos:end="541:25"><name pos:start="541:13" pos:end="541:21">avio_rl16</name><argument_list pos:start="541:22" pos:end="541:25">(<argument pos:start="541:23" pos:end="541:24"><expr pos:start="541:23" pos:end="541:24"><name pos:start="541:23" pos:end="541:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="541:28" pos:end="541:42">/* BITMAP_ID */</comment>

            <expr_stmt pos:start="543:13" pos:end="543:21"><expr pos:start="543:13" pos:end="543:20"><name pos:start="543:13" pos:end="543:15">len</name> <operator pos:start="543:17" pos:end="543:18">-=</operator> <literal type="number" pos:start="543:20" pos:end="543:20">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="545:13" pos:end="547:26"><if pos:start="545:13" pos:end="547:26">if <condition pos:start="545:16" pos:end="545:24">(<expr pos:start="545:17" pos:end="545:23"><name pos:start="545:17" pos:end="545:19">len</name> <operator pos:start="545:21" pos:end="545:21">&lt;</operator> <literal type="number" pos:start="545:23" pos:end="545:23">4</literal></expr>)</condition><block type="pseudo" pos:start="547:17" pos:end="547:26"><block_content pos:start="547:17" pos:end="547:26">

                <goto pos:start="547:17" pos:end="547:26">goto <name pos:start="547:22" pos:end="547:25">skip</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="549:13" pos:end="551:27"><if pos:start="549:13" pos:end="551:27">if <condition pos:start="549:16" pos:end="549:52">(<expr pos:start="549:17" pos:end="549:51"><operator pos:start="549:17" pos:end="549:17">(</operator><name pos:start="549:18" pos:end="549:20">res</name> <operator pos:start="549:22" pos:end="549:22">=</operator> <call pos:start="549:24" pos:end="549:46"><name pos:start="549:24" pos:end="549:36">av_new_packet</name><argument_list pos:start="549:37" pos:end="549:46">(<argument pos:start="549:38" pos:end="549:40"><expr pos:start="549:38" pos:end="549:40"><name pos:start="549:38" pos:end="549:40">pkt</name></expr></argument>, <argument pos:start="549:43" pos:end="549:45"><expr pos:start="549:43" pos:end="549:45"><name pos:start="549:43" pos:end="549:45">len</name></expr></argument>)</argument_list></call><operator pos:start="549:47" pos:end="549:47">)</operator> <operator pos:start="549:49" pos:end="549:49">&lt;</operator> <literal type="number" pos:start="549:51" pos:end="549:51">0</literal></expr>)</condition><block type="pseudo" pos:start="551:17" pos:end="551:27"><block_content pos:start="551:17" pos:end="551:27">

                <return pos:start="551:17" pos:end="551:27">return <expr pos:start="551:24" pos:end="551:26"><name pos:start="551:24" pos:end="551:26">res</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="553:13" pos:end="559:13"><if pos:start="553:13" pos:end="559:13">if <condition pos:start="553:16" pos:end="553:49">(<expr pos:start="553:17" pos:end="553:48"><call pos:start="553:17" pos:end="553:43"><name pos:start="553:17" pos:end="553:25">avio_read</name><argument_list pos:start="553:26" pos:end="553:43">(<argument pos:start="553:27" pos:end="553:28"><expr pos:start="553:27" pos:end="553:28"><name pos:start="553:27" pos:end="553:28">pb</name></expr></argument>, <argument pos:start="553:31" pos:end="553:39"><expr pos:start="553:31" pos:end="553:39"><name pos:start="553:31" pos:end="553:39"><name pos:start="553:31" pos:end="553:33">pkt</name><operator pos:start="553:34" pos:end="553:35">-&gt;</operator><name pos:start="553:36" pos:end="553:39">data</name></name></expr></argument>, <argument pos:start="553:42" pos:end="553:42"><expr pos:start="553:42" pos:end="553:42"><literal type="number" pos:start="553:42" pos:end="553:42">4</literal></expr></argument>)</argument_list></call> <operator pos:start="553:45" pos:end="553:46">!=</operator> <literal type="number" pos:start="553:48" pos:end="553:48">4</literal></expr>)</condition> <block pos:start="553:51" pos:end="559:13">{<block_content pos:start="555:17" pos:end="557:43">

                <expr_stmt pos:start="555:17" pos:end="555:36"><expr pos:start="555:17" pos:end="555:35"><call pos:start="555:17" pos:end="555:35"><name pos:start="555:17" pos:end="555:30">av_free_packet</name><argument_list pos:start="555:31" pos:end="555:35">(<argument pos:start="555:32" pos:end="555:34"><expr pos:start="555:32" pos:end="555:34"><name pos:start="555:32" pos:end="555:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="557:17" pos:end="557:43">return <expr pos:start="557:24" pos:end="557:42"><name pos:start="557:24" pos:end="557:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="561:13" pos:end="582:13"><if pos:start="561:13" pos:end="574:13">if <condition pos:start="561:16" pos:end="563:49">(<expr pos:start="561:17" pos:end="563:48"><call pos:start="561:17" pos:end="561:34"><name pos:start="561:17" pos:end="561:23">AV_RB32</name><argument_list pos:start="561:24" pos:end="561:34">(<argument pos:start="561:25" pos:end="561:33"><expr pos:start="561:25" pos:end="561:33"><name pos:start="561:25" pos:end="561:33"><name pos:start="561:25" pos:end="561:27">pkt</name><operator pos:start="561:28" pos:end="561:29">-&gt;</operator><name pos:start="561:30" pos:end="561:33">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="561:36" pos:end="561:37">==</operator> <literal type="number" pos:start="561:39" pos:end="561:48">0xffd8ffd9</literal> <operator pos:start="561:50" pos:end="561:51">||</operator>

                <call pos:start="563:17" pos:end="563:34"><name pos:start="563:17" pos:end="563:23">AV_RB32</name><argument_list pos:start="563:24" pos:end="563:34">(<argument pos:start="563:25" pos:end="563:33"><expr pos:start="563:25" pos:end="563:33"><name pos:start="563:25" pos:end="563:33"><name pos:start="563:25" pos:end="563:27">pkt</name><operator pos:start="563:28" pos:end="563:29">-&gt;</operator><name pos:start="563:30" pos:end="563:33">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="563:36" pos:end="563:37">==</operator> <literal type="number" pos:start="563:39" pos:end="563:48">0xffd9ffd8</literal></expr>)</condition> <block pos:start="563:51" pos:end="574:13">{<block_content pos:start="569:17" pos:end="572:58">

                <comment type="block" pos:start="565:17" pos:end="565:68">/* old SWF files containing SOI/EOI as data start */</comment>

                <comment type="block" pos:start="567:17" pos:end="567:62">/* files created by swink have reversed tag */</comment>

                <expr_stmt pos:start="569:17" pos:end="569:31"><expr pos:start="569:17" pos:end="569:30"><name pos:start="569:17" pos:end="569:25"><name pos:start="569:17" pos:end="569:19">pkt</name><operator pos:start="569:20" pos:end="569:21">-&gt;</operator><name pos:start="569:22" pos:end="569:25">size</name></name> <operator pos:start="569:27" pos:end="569:28">-=</operator> <literal type="number" pos:start="569:30" pos:end="569:30">4</literal></expr>;</expr_stmt>


                <expr_stmt pos:start="572:17" pos:end="572:58"><expr pos:start="572:17" pos:end="572:57"><name pos:start="572:17" pos:end="572:19">res</name> <operator pos:start="572:21" pos:end="572:21">=</operator> <call pos:start="572:23" pos:end="572:57"><name pos:start="572:23" pos:end="572:31">avio_read</name><argument_list pos:start="572:32" pos:end="572:57">(<argument pos:start="572:33" pos:end="572:34"><expr pos:start="572:33" pos:end="572:34"><name pos:start="572:33" pos:end="572:34">pb</name></expr></argument>, <argument pos:start="572:37" pos:end="572:45"><expr pos:start="572:37" pos:end="572:45"><name pos:start="572:37" pos:end="572:45"><name pos:start="572:37" pos:end="572:39">pkt</name><operator pos:start="572:40" pos:end="572:41">-&gt;</operator><name pos:start="572:42" pos:end="572:45">data</name></name></expr></argument>, <argument pos:start="572:48" pos:end="572:56"><expr pos:start="572:48" pos:end="572:56"><name pos:start="572:48" pos:end="572:56"><name pos:start="572:48" pos:end="572:50">pkt</name><operator pos:start="572:51" pos:end="572:52">-&gt;</operator><name pos:start="572:53" pos:end="572:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="574:15" pos:end="582:13">else <block pos:start="574:20" pos:end="582:13">{<block_content pos:start="576:17" pos:end="580:29">

                <expr_stmt pos:start="576:17" pos:end="576:66"><expr pos:start="576:17" pos:end="576:65"><name pos:start="576:17" pos:end="576:19">res</name> <operator pos:start="576:21" pos:end="576:21">=</operator> <call pos:start="576:23" pos:end="576:65"><name pos:start="576:23" pos:end="576:31">avio_read</name><argument_list pos:start="576:32" pos:end="576:65">(<argument pos:start="576:33" pos:end="576:34"><expr pos:start="576:33" pos:end="576:34"><name pos:start="576:33" pos:end="576:34">pb</name></expr></argument>, <argument pos:start="576:37" pos:end="576:49"><expr pos:start="576:37" pos:end="576:49"><name pos:start="576:37" pos:end="576:45"><name pos:start="576:37" pos:end="576:39">pkt</name><operator pos:start="576:40" pos:end="576:41">-&gt;</operator><name pos:start="576:42" pos:end="576:45">data</name></name> <operator pos:start="576:47" pos:end="576:47">+</operator> <literal type="number" pos:start="576:49" pos:end="576:49">4</literal></expr></argument>, <argument pos:start="576:52" pos:end="576:64"><expr pos:start="576:52" pos:end="576:64"><name pos:start="576:52" pos:end="576:60"><name pos:start="576:52" pos:end="576:54">pkt</name><operator pos:start="576:55" pos:end="576:56">-&gt;</operator><name pos:start="576:57" pos:end="576:60">size</name></name> <operator pos:start="576:62" pos:end="576:62">-</operator> <literal type="number" pos:start="576:64" pos:end="576:64">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="578:17" pos:end="580:29"><if pos:start="578:17" pos:end="580:29">if <condition pos:start="578:20" pos:end="578:29">(<expr pos:start="578:21" pos:end="578:28"><name pos:start="578:21" pos:end="578:23">res</name> <operator pos:start="578:25" pos:end="578:26">&gt;=</operator> <literal type="number" pos:start="578:28" pos:end="578:28">0</literal></expr>)</condition><block type="pseudo" pos:start="580:21" pos:end="580:29"><block_content pos:start="580:21" pos:end="580:29">

                    <expr_stmt pos:start="580:21" pos:end="580:29"><expr pos:start="580:21" pos:end="580:28"><name pos:start="580:21" pos:end="580:23">res</name> <operator pos:start="580:25" pos:end="580:26">+=</operator> <literal type="number" pos:start="580:28" pos:end="580:28">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="584:13" pos:end="596:13"><if pos:start="584:13" pos:end="596:13">if <condition pos:start="584:16" pos:end="584:33">(<expr pos:start="584:17" pos:end="584:32"><name pos:start="584:17" pos:end="584:19">res</name> <operator pos:start="584:21" pos:end="584:22">!=</operator> <name pos:start="584:24" pos:end="584:32"><name pos:start="584:24" pos:end="584:26">pkt</name><operator pos:start="584:27" pos:end="584:28">-&gt;</operator><name pos:start="584:29" pos:end="584:32">size</name></name></expr>)</condition> <block pos:start="584:35" pos:end="596:13">{<block_content pos:start="586:17" pos:end="594:43">

                <if_stmt pos:start="586:17" pos:end="592:17"><if pos:start="586:17" pos:end="592:17">if <condition pos:start="586:20" pos:end="586:28">(<expr pos:start="586:21" pos:end="586:27"><name pos:start="586:21" pos:end="586:23">res</name> <operator pos:start="586:25" pos:end="586:25">&lt;</operator> <literal type="number" pos:start="586:27" pos:end="586:27">0</literal></expr>)</condition> <block pos:start="586:30" pos:end="592:17">{<block_content pos:start="588:21" pos:end="590:31">

                    <expr_stmt pos:start="588:21" pos:end="588:40"><expr pos:start="588:21" pos:end="588:39"><call pos:start="588:21" pos:end="588:39"><name pos:start="588:21" pos:end="588:34">av_free_packet</name><argument_list pos:start="588:35" pos:end="588:39">(<argument pos:start="588:36" pos:end="588:38"><expr pos:start="588:36" pos:end="588:38"><name pos:start="588:36" pos:end="588:38">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="590:21" pos:end="590:31">return <expr pos:start="590:28" pos:end="590:30"><name pos:start="590:28" pos:end="590:30">res</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="594:17" pos:end="594:43"><expr pos:start="594:17" pos:end="594:42"><call pos:start="594:17" pos:end="594:42"><name pos:start="594:17" pos:end="594:32">av_shrink_packet</name><argument_list pos:start="594:33" pos:end="594:42">(<argument pos:start="594:34" pos:end="594:36"><expr pos:start="594:34" pos:end="594:36"><name pos:start="594:34" pos:end="594:36">pkt</name></expr></argument>, <argument pos:start="594:39" pos:end="594:41"><expr pos:start="594:39" pos:end="594:41"><name pos:start="594:39" pos:end="594:41">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="600:13" pos:end="600:27"><expr pos:start="600:13" pos:end="600:26"><name pos:start="600:13" pos:end="600:20"><name pos:start="600:13" pos:end="600:15">pkt</name><operator pos:start="600:16" pos:end="600:17">-&gt;</operator><name pos:start="600:18" pos:end="600:20">pos</name></name> <operator pos:start="600:22" pos:end="600:22">=</operator> <name pos:start="600:24" pos:end="600:26">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="602:13" pos:end="602:42"><expr pos:start="602:13" pos:end="602:41"><name pos:start="602:13" pos:end="602:29"><name pos:start="602:13" pos:end="602:15">pkt</name><operator pos:start="602:16" pos:end="602:17">-&gt;</operator><name pos:start="602:18" pos:end="602:29">stream_index</name></name> <operator pos:start="602:31" pos:end="602:31">=</operator> <name pos:start="602:33" pos:end="602:41"><name pos:start="602:33" pos:end="602:34">st</name><operator pos:start="602:35" pos:end="602:36">-&gt;</operator><name pos:start="602:37" pos:end="602:41">index</name></name></expr>;</expr_stmt>

            <return pos:start="604:13" pos:end="604:29">return <expr pos:start="604:20" pos:end="604:28"><name pos:start="604:20" pos:end="604:28"><name pos:start="604:20" pos:end="604:22">pkt</name><operator pos:start="604:23" pos:end="604:24">-&gt;</operator><name pos:start="604:25" pos:end="604:28">size</name></name></expr>;</return>

        </block_content>}</block></if> <else pos:start="606:11" pos:end="610:9">else <block pos:start="606:16" pos:end="610:9">{<block_content pos:start="608:13" pos:end="608:62">

            <expr_stmt pos:start="608:13" pos:end="608:62"><expr pos:start="608:13" pos:end="608:61"><call pos:start="608:13" pos:end="608:61"><name pos:start="608:13" pos:end="608:18">av_log</name><argument_list pos:start="608:19" pos:end="608:61">(<argument pos:start="608:20" pos:end="608:20"><expr pos:start="608:20" pos:end="608:20"><name pos:start="608:20" pos:end="608:20">s</name></expr></argument>, <argument pos:start="608:23" pos:end="608:34"><expr pos:start="608:23" pos:end="608:34"><name pos:start="608:23" pos:end="608:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="608:37" pos:end="608:55"><expr pos:start="608:37" pos:end="608:55"><literal type="string" pos:start="608:37" pos:end="608:55">"Unknown tag: %d\n"</literal></expr></argument>, <argument pos:start="608:58" pos:end="608:60"><expr pos:start="608:58" pos:end="608:60"><name pos:start="608:58" pos:end="608:60">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    <label pos:start="612:5" pos:end="612:9"><name pos:start="612:5" pos:end="612:8">skip</name>:</label>

        <if_stmt pos:start="614:9" pos:end="616:63"><if pos:start="614:9" pos:end="616:63">if<condition pos:start="614:11" pos:end="614:17">(<expr pos:start="614:12" pos:end="614:16"><name pos:start="614:12" pos:end="614:14">len</name><operator pos:start="614:15" pos:end="614:15">&lt;</operator><literal type="number" pos:start="614:16" pos:end="614:16">0</literal></expr>)</condition><block type="pseudo" pos:start="616:13" pos:end="616:63"><block_content pos:start="616:13" pos:end="616:63">

            <expr_stmt pos:start="616:13" pos:end="616:63"><expr pos:start="616:13" pos:end="616:62"><call pos:start="616:13" pos:end="616:62"><name pos:start="616:13" pos:end="616:18">av_log</name><argument_list pos:start="616:19" pos:end="616:62">(<argument pos:start="616:20" pos:end="616:20"><expr pos:start="616:20" pos:end="616:20"><name pos:start="616:20" pos:end="616:20">s</name></expr></argument>, <argument pos:start="616:23" pos:end="616:36"><expr pos:start="616:23" pos:end="616:36"><name pos:start="616:23" pos:end="616:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="616:39" pos:end="616:56"><expr pos:start="616:39" pos:end="616:56"><literal type="string" pos:start="616:39" pos:end="616:56">"Cliping len %d\n"</literal></expr></argument>, <argument pos:start="616:59" pos:end="616:61"><expr pos:start="616:59" pos:end="616:61"><name pos:start="616:59" pos:end="616:61">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="618:9" pos:end="618:28"><expr pos:start="618:9" pos:end="618:27"><name pos:start="618:9" pos:end="618:11">len</name> <operator pos:start="618:13" pos:end="618:13">=</operator> <call pos:start="618:15" pos:end="618:27"><name pos:start="618:15" pos:end="618:19">FFMAX</name><argument_list pos:start="618:20" pos:end="618:27">(<argument pos:start="618:21" pos:end="618:21"><expr pos:start="618:21" pos:end="618:21"><literal type="number" pos:start="618:21" pos:end="618:21">0</literal></expr></argument>, <argument pos:start="618:24" pos:end="618:26"><expr pos:start="618:24" pos:end="618:26"><name pos:start="618:24" pos:end="618:26">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="620:9" pos:end="620:27"><expr pos:start="620:9" pos:end="620:26"><call pos:start="620:9" pos:end="620:26"><name pos:start="620:9" pos:end="620:17">avio_skip</name><argument_list pos:start="620:18" pos:end="620:26">(<argument pos:start="620:19" pos:end="620:20"><expr pos:start="620:19" pos:end="620:20"><name pos:start="620:19" pos:end="620:20">pb</name></expr></argument>, <argument pos:start="620:23" pos:end="620:25"><expr pos:start="620:23" pos:end="620:25"><name pos:start="620:23" pos:end="620:25">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
