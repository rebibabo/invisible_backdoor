<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10853.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">uhci_broadcast_packet</name><parameter_list pos:start="1:33" pos:end="1:60">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:42">UHCIState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:56">USBPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:58"><expr pos:start="9:5" pos:end="11:57"><call pos:start="9:5" pos:end="11:57"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="11:57">(<argument pos:start="9:13" pos:end="9:67"><expr pos:start="9:13" pos:end="9:67"><literal type="string" pos:start="9:13" pos:end="9:67">"uhci: packet enter. pid %s addr 0x%02x ep %d len %d\n"</literal></expr></argument>,

           <argument pos:start="11:12" pos:end="11:26"><expr pos:start="11:12" pos:end="11:26"><call pos:start="11:12" pos:end="11:26"><name pos:start="11:12" pos:end="11:18">pid2str</name><argument_list pos:start="11:19" pos:end="11:26">(<argument pos:start="11:20" pos:end="11:25"><expr pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:20">p</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:25">pid</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:29" pos:end="11:38"><expr pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:29">p</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:38">devaddr</name></name></expr></argument>, <argument pos:start="11:41" pos:end="11:48"><expr pos:start="11:41" pos:end="11:48"><name pos:start="11:41" pos:end="11:48"><name pos:start="11:41" pos:end="11:41">p</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:48">devep</name></name></expr></argument>, <argument pos:start="11:51" pos:end="11:56"><expr pos:start="11:51" pos:end="11:56"><name pos:start="11:51" pos:end="11:56"><name pos:start="11:51" pos:end="11:51">p</name><operator pos:start="11:52" pos:end="11:53">-&gt;</operator><name pos:start="11:54" pos:end="11:56">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:35"><if pos:start="13:5" pos:end="15:35">if <condition pos:start="13:8" pos:end="13:61">(<expr pos:start="13:9" pos:end="13:60"><name pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">p</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">pid</name></name> <operator pos:start="13:16" pos:end="13:17">==</operator> <name pos:start="13:19" pos:end="13:31">USB_TOKEN_OUT</name> <operator pos:start="13:33" pos:end="13:34">||</operator> <name pos:start="13:36" pos:end="13:41"><name pos:start="13:36" pos:end="13:36">p</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:41">pid</name></name> <operator pos:start="13:43" pos:end="13:44">==</operator> <name pos:start="13:46" pos:end="13:60">USB_TOKEN_SETUP</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:35"><block_content pos:start="15:9" pos:end="15:35">

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:17">dump_data</name><argument_list pos:start="15:18" pos:end="15:34">(<argument pos:start="15:19" pos:end="15:25"><expr pos:start="15:19" pos:end="15:25"><name pos:start="15:19" pos:end="15:25"><name pos:start="15:19" pos:end="15:19">p</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:25">data</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:33"><expr pos:start="15:28" pos:end="15:33"><name pos:start="15:28" pos:end="15:33"><name pos:start="15:28" pos:end="15:28">p</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:33">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:23">USB_RET_NODEV</name></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="33:5">for <control pos:start="21:9" pos:end="21:58">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:53"><expr pos:start="21:17" pos:end="21:52"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:28">NB_PORTS</name> <operator pos:start="21:30" pos:end="21:31">&amp;&amp;</operator> <name pos:start="21:33" pos:end="21:35">ret</name> <operator pos:start="21:37" pos:end="21:38">==</operator> <name pos:start="21:40" pos:end="21:52">USB_RET_NODEV</name></expr>;</condition> <incr pos:start="21:55" pos:end="21:57"><expr pos:start="21:55" pos:end="21:57"><name pos:start="21:55" pos:end="21:55">i</name><operator pos:start="21:56" pos:end="21:57">++</operator></expr></incr>)</control> <block pos:start="21:60" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:44">

        <decl_stmt pos:start="23:9" pos:end="23:38"><decl pos:start="23:9" pos:end="23:37"><type pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">UHCIPort</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:22">port</name> <init pos:start="23:24" pos:end="23:37">= <expr pos:start="23:26" pos:end="23:37"><operator pos:start="23:26" pos:end="23:26">&amp;</operator><name pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:34">ports</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:40"><decl pos:start="25:9" pos:end="25:39"><type pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:17">USBDevice</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:22">dev</name> <init pos:start="25:24" pos:end="25:39">= <expr pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:29">port</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:35">port</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:39">dev</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="31:44"><if pos:start="29:9" pos:end="31:44">if <condition pos:start="29:12" pos:end="29:47">(<expr pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:15">dev</name> <operator pos:start="29:17" pos:end="29:18">&amp;&amp;</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:24">port</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">ctrl</name></name> <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <name pos:start="29:34" pos:end="29:45">UHCI_PORT_EN</name><operator pos:start="29:46" pos:end="29:46">)</operator></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:44"><block_content pos:start="31:13" pos:end="31:44">

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:43"><name pos:start="31:19" pos:end="31:35">usb_handle_packet</name><argument_list pos:start="31:36" pos:end="31:43">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:39">dev</name></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><name pos:start="31:42" pos:end="31:42">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="37:5" pos:end="37:63"><expr pos:start="37:5" pos:end="37:62"><call pos:start="37:5" pos:end="37:62"><name pos:start="37:5" pos:end="37:11">DPRINTF</name><argument_list pos:start="37:12" pos:end="37:62">(<argument pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:48"><literal type="string" pos:start="37:13" pos:end="37:48">"uhci: packet exit. ret %d len %d\n"</literal></expr></argument>, <argument pos:start="37:51" pos:end="37:53"><expr pos:start="37:51" pos:end="37:53"><name pos:start="37:51" pos:end="37:53">ret</name></expr></argument>, <argument pos:start="37:56" pos:end="37:61"><expr pos:start="37:56" pos:end="37:61"><name pos:start="37:56" pos:end="37:61"><name pos:start="37:56" pos:end="37:56">p</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:61">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:32"><if pos:start="39:5" pos:end="41:32">if <condition pos:start="39:8" pos:end="39:42">(<expr pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:9">p</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:14">pid</name></name> <operator pos:start="39:16" pos:end="39:17">==</operator> <name pos:start="39:19" pos:end="39:30">USB_TOKEN_IN</name> <operator pos:start="39:32" pos:end="39:33">&amp;&amp;</operator> <name pos:start="39:35" pos:end="39:37">ret</name> <operator pos:start="39:39" pos:end="39:39">&gt;</operator> <literal type="number" pos:start="39:41" pos:end="39:41">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:32"><block_content pos:start="41:9" pos:end="41:32">

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><call pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:17">dump_data</name><argument_list pos:start="41:18" pos:end="41:31">(<argument pos:start="41:19" pos:end="41:25"><expr pos:start="41:19" pos:end="41:25"><name pos:start="41:19" pos:end="41:25"><name pos:start="41:19" pos:end="41:19">p</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:25">data</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
