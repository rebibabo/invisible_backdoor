<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20373.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">rtas_ibm_configure_connector</name><parameter_list pos:start="1:41" pos:end="9:59">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:51">PowerPCCPU</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">cpu</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:65"><decl pos:start="3:42" pos:end="3:65"><type pos:start="3:42" pos:end="3:65"><name pos:start="3:42" pos:end="3:58">sPAPRMachineState</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">spapr</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:55"><decl pos:start="5:42" pos:end="5:55"><type pos:start="5:42" pos:end="5:55"><name pos:start="5:42" pos:end="5:49">uint32_t</name></type> <name pos:start="5:51" pos:end="5:55">token</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:71"><decl pos:start="5:58" pos:end="5:71"><type pos:start="5:58" pos:end="5:71"><name pos:start="5:58" pos:end="5:65">uint32_t</name></type> <name pos:start="5:67" pos:end="5:71">nargs</name></decl></parameter>,

                                         <parameter pos:start="7:42" pos:end="7:58"><decl pos:start="7:42" pos:end="7:58"><type pos:start="7:42" pos:end="7:58"><name pos:start="7:42" pos:end="7:53">target_ulong</name></type> <name pos:start="7:55" pos:end="7:58">args</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:73"><decl pos:start="7:61" pos:end="7:73"><type pos:start="7:61" pos:end="7:73"><name pos:start="7:61" pos:end="7:68">uint32_t</name></type> <name pos:start="7:70" pos:end="7:73">nret</name></decl></parameter>,

                                         <parameter pos:start="9:42" pos:end="9:58"><decl pos:start="9:42" pos:end="9:58"><type pos:start="9:42" pos:end="9:58"><name pos:start="9:42" pos:end="9:53">target_ulong</name></type> <name pos:start="9:55" pos:end="9:58">rets</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="235:1">{<block_content pos:start="13:5" pos:end="233:25">

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:20">wa_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:22">wa_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:22">drc_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">sPAPRDRConnector</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:25">drc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:25">sPAPRDRConnectorClass</name> <modifier pos:start="21:27" pos:end="21:27">*</modifier></type><name pos:start="21:28" pos:end="21:31">drck</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:38"><decl pos:start="23:5" pos:end="23:37"><type pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:32">sPAPRConfigureConnectorState</name> <modifier pos:start="23:34" pos:end="23:34">*</modifier></type><name pos:start="23:35" pos:end="23:37">ccs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:59"><decl pos:start="25:5" pos:end="25:58"><type pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:21">sPAPRDRCCResponse</name></type> <name pos:start="25:23" pos:end="25:26">resp</name> <init pos:start="25:28" pos:end="25:58">= <expr pos:start="25:30" pos:end="25:58"><name pos:start="25:30" pos:end="25:58">SPAPR_DR_CC_RESPONSE_CONTINUE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:11"><decl pos:start="27:5" pos:end="27:10"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:10">rc</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:13">nargs</name> <operator pos:start="31:15" pos:end="31:16">!=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">2</literal> <operator pos:start="31:20" pos:end="31:21">||</operator> <name pos:start="31:23" pos:end="31:26">nret</name> <operator pos:start="31:28" pos:end="31:29">!=</operator> <literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr>)</condition> <block pos:start="31:34" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><call pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:15">rtas_st</name><argument_list pos:start="33:16" pos:end="33:46">(<argument pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">rets</name></expr></argument>, <argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr></argument>, <argument pos:start="33:26" pos:end="33:45"><expr pos:start="33:26" pos:end="33:45"><name pos:start="33:26" pos:end="33:45">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:68"><expr pos:start="41:5" pos:end="41:67"><name pos:start="41:5" pos:end="41:11">wa_addr</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">(</operator><operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:24">uint64_t</name><operator pos:start="41:25" pos:end="41:25">)</operator><call pos:start="41:26" pos:end="41:41"><name pos:start="41:26" pos:end="41:32">rtas_ld</name><argument_list pos:start="41:33" pos:end="41:41">(<argument pos:start="41:34" pos:end="41:37"><expr pos:start="41:34" pos:end="41:37"><name pos:start="41:34" pos:end="41:37">args</name></expr></argument>, <argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">1</literal></expr></argument>)</argument_list></call> <operator pos:start="41:43" pos:end="41:44">&lt;&lt;</operator> <literal type="number" pos:start="41:46" pos:end="41:47">32</literal><operator pos:start="41:48" pos:end="41:48">)</operator> <operator pos:start="41:50" pos:end="41:50">|</operator> <call pos:start="41:52" pos:end="41:67"><name pos:start="41:52" pos:end="41:58">rtas_ld</name><argument_list pos:start="41:59" pos:end="41:67">(<argument pos:start="41:60" pos:end="41:63"><expr pos:start="41:60" pos:end="41:63"><name pos:start="41:60" pos:end="41:63">args</name></expr></argument>, <argument pos:start="41:66" pos:end="41:66"><expr pos:start="41:66" pos:end="41:66"><literal type="number" pos:start="41:66" pos:end="41:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:13">drc_index</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:23">rtas_ld</name><argument_list pos:start="45:24" pos:end="45:35">(<argument pos:start="45:25" pos:end="45:31"><expr pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:31">wa_addr</name></expr></argument>, <argument pos:start="45:34" pos:end="45:34"><expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:7">drc</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:39"><name pos:start="47:11" pos:end="47:28">spapr_drc_by_index</name><argument_list pos:start="47:29" pos:end="47:39">(<argument pos:start="47:30" pos:end="47:38"><expr pos:start="47:30" pos:end="47:38"><name pos:start="47:30" pos:end="47:38">drc_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:13">(<expr pos:start="49:9" pos:end="49:12"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:12">drc</name></expr>)</condition> <block pos:start="49:15" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:17">

        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><call pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:56">trace_spapr_rtas_ibm_configure_connector_invalid</name><argument_list pos:start="51:57" pos:end="51:67">(<argument pos:start="51:58" pos:end="51:66"><expr pos:start="51:58" pos:end="51:66"><name pos:start="51:58" pos:end="51:66">drc_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:10">rc</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:33">RTAS_OUT_PARAM_ERROR</name></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:17">goto <name pos:start="55:14" pos:end="55:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="71:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="63:62">(<expr pos:start="61:9" pos:end="63:61"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:19"><name pos:start="61:10" pos:end="61:12">drc</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:19">state</name></name> <operator pos:start="61:21" pos:end="61:22">!=</operator> <name pos:start="61:24" pos:end="61:56">SPAPR_DRC_STATE_LOGICAL_UNISOLATE</name><operator pos:start="61:57" pos:end="61:57">)</operator>

        <operator pos:start="63:9" pos:end="63:10">&amp;&amp;</operator> <operator pos:start="63:12" pos:end="63:12">(</operator><name pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:15">drc</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:22">state</name></name> <operator pos:start="63:24" pos:end="63:25">!=</operator> <name pos:start="63:27" pos:end="63:60">SPAPR_DRC_STATE_PHYSICAL_UNISOLATE</name><operator pos:start="63:61" pos:end="63:61">)</operator></expr>)</condition> <block pos:start="63:64" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:17">

        <comment type="block" pos:start="65:9" pos:end="65:61">/* Need to unisolate the device before configuring */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:10">rc</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:50">SPAPR_DR_CC_RESPONSE_NOT_CONFIGURABLE</name></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:17">goto <name pos:start="69:14" pos:end="69:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><call pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:12">g_assert</name><argument_list pos:start="75:13" pos:end="75:22">(<argument pos:start="75:14" pos:end="75:21"><expr pos:start="75:14" pos:end="75:21"><name pos:start="75:14" pos:end="75:21"><name pos:start="75:14" pos:end="75:16">drc</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:21">fdt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:45"><expr pos:start="79:5" pos:end="79:44"><name pos:start="79:5" pos:end="79:8">drck</name> <operator pos:start="79:10" pos:end="79:10">=</operator> <call pos:start="79:12" pos:end="79:44"><name pos:start="79:12" pos:end="79:39">SPAPR_DR_CONNECTOR_GET_CLASS</name><argument_list pos:start="79:40" pos:end="79:44">(<argument pos:start="79:41" pos:end="79:43"><expr pos:start="79:41" pos:end="79:43"><name pos:start="79:41" pos:end="79:43">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:19"><expr pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:7">ccs</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <name pos:start="83:11" pos:end="83:18"><name pos:start="83:11" pos:end="83:13">drc</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:18">ccs</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:13">(<expr pos:start="85:9" pos:end="85:12"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:12">ccs</name></expr>)</condition> <block pos:start="85:15" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:23">

        <expr_stmt pos:start="87:9" pos:end="87:54"><expr pos:start="87:9" pos:end="87:53"><name pos:start="87:9" pos:end="87:11">ccs</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:53"><name pos:start="87:15" pos:end="87:20">g_new0</name><argument_list pos:start="87:21" pos:end="87:53">(<argument pos:start="87:22" pos:end="87:49"><expr pos:start="87:22" pos:end="87:49"><name pos:start="87:22" pos:end="87:49">sPAPRConfigureConnectorState</name></expr></argument>, <argument pos:start="87:52" pos:end="87:52"><expr pos:start="87:52" pos:end="87:52"><literal type="number" pos:start="87:52" pos:end="87:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:48"><expr pos:start="89:9" pos:end="89:47"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:11">ccs</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:23">fdt_offset</name></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:47"><name pos:start="89:27" pos:end="89:29">drc</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:47">fdt_start_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:23"><expr pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:11">drc</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:16">ccs</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:22">ccs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <do pos:start="97:5" pos:end="225:52">do <block pos:start="97:8" pos:end="225:5">{<block_content pos:start="99:9" pos:end="223:9">

        <decl_stmt pos:start="99:9" pos:end="99:21"><decl pos:start="99:9" pos:end="99:20"><type pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:16">uint32_t</name></type> <name pos:start="99:18" pos:end="99:20">tag</name></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:25"><decl pos:start="101:9" pos:end="101:24"><type pos:start="101:9" pos:end="101:20"><specifier pos:start="101:9" pos:end="101:13">const</specifier> <name pos:start="101:15" pos:end="101:18">char</name> <modifier pos:start="101:20" pos:end="101:20">*</modifier></type><name pos:start="101:21" pos:end="101:24">name</name></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:40"><decl pos:start="103:9" pos:end="103:39"><type pos:start="103:9" pos:end="103:35"><specifier pos:start="103:9" pos:end="103:13">const</specifier> <name pos:start="103:15" pos:end="103:33"><name pos:start="103:15" pos:end="103:20">struct</name> <name pos:start="103:22" pos:end="103:33">fdt_property</name></name> <modifier pos:start="103:35" pos:end="103:35">*</modifier></type><name pos:start="103:36" pos:end="103:39">prop</name></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:38"><decl pos:start="105:9" pos:end="105:27"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:27">fdt_offset_next</name></decl>, <decl pos:start="105:30" pos:end="105:37"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:30" pos:end="105:37">prop_len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:72"><expr pos:start="109:9" pos:end="109:71"><name pos:start="109:9" pos:end="109:11">tag</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:71"><name pos:start="109:15" pos:end="109:26">fdt_next_tag</name><argument_list pos:start="109:27" pos:end="109:71">(<argument pos:start="109:28" pos:end="109:35"><expr pos:start="109:28" pos:end="109:35"><name pos:start="109:28" pos:end="109:35"><name pos:start="109:28" pos:end="109:30">drc</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:35">fdt</name></name></expr></argument>, <argument pos:start="109:38" pos:end="109:52"><expr pos:start="109:38" pos:end="109:52"><name pos:start="109:38" pos:end="109:52"><name pos:start="109:38" pos:end="109:40">ccs</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:52">fdt_offset</name></name></expr></argument>, <argument pos:start="109:55" pos:end="109:70"><expr pos:start="109:55" pos:end="109:70"><operator pos:start="109:55" pos:end="109:55">&amp;</operator><name pos:start="109:56" pos:end="109:70">fdt_offset_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="113:9" pos:end="217:9">switch <condition pos:start="113:16" pos:end="113:20">(<expr pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:19">tag</name></expr>)</condition> <block pos:start="113:22" pos:end="217:9">{<block_content pos:start="115:9" pos:end="215:18">

        <case pos:start="115:9" pos:end="115:28">case <expr pos:start="115:14" pos:end="115:27"><name pos:start="115:14" pos:end="115:27">FDT_BEGIN_NODE</name></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:29"><expr pos:start="117:13" pos:end="117:28"><name pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:15">ccs</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:26">fdt_depth</name></name><operator pos:start="117:27" pos:end="117:28">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:65"><expr pos:start="119:13" pos:end="119:64"><name pos:start="119:13" pos:end="119:16">name</name> <operator pos:start="119:18" pos:end="119:18">=</operator> <call pos:start="119:20" pos:end="119:64"><name pos:start="119:20" pos:end="119:31">fdt_get_name</name><argument_list pos:start="119:32" pos:end="119:64">(<argument pos:start="119:33" pos:end="119:40"><expr pos:start="119:33" pos:end="119:40"><name pos:start="119:33" pos:end="119:40"><name pos:start="119:33" pos:end="119:35">drc</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:40">fdt</name></name></expr></argument>, <argument pos:start="119:43" pos:end="119:57"><expr pos:start="119:43" pos:end="119:57"><name pos:start="119:43" pos:end="119:57"><name pos:start="119:43" pos:end="119:45">ccs</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:57">fdt_offset</name></name></expr></argument>, <argument pos:start="119:60" pos:end="119:63"><expr pos:start="119:60" pos:end="119:63"><name pos:start="119:60" pos:end="119:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="123:13" pos:end="123:54">/* provide the name of the next OF node */</comment>

            <expr_stmt pos:start="125:13" pos:end="125:43"><expr pos:start="125:13" pos:end="125:42"><name pos:start="125:13" pos:end="125:21">wa_offset</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:42">CC_VAL_DATA_OFFSET</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:65"><expr pos:start="127:13" pos:end="127:64"><call pos:start="127:13" pos:end="127:64"><name pos:start="127:13" pos:end="127:19">rtas_st</name><argument_list pos:start="127:20" pos:end="127:64">(<argument pos:start="127:21" pos:end="127:27"><expr pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:27">wa_addr</name></expr></argument>, <argument pos:start="127:30" pos:end="127:52"><expr pos:start="127:30" pos:end="127:52"><name pos:start="127:30" pos:end="127:52">CC_IDX_NODE_NAME_OFFSET</name></expr></argument>, <argument pos:start="127:55" pos:end="127:63"><expr pos:start="127:55" pos:end="127:63"><name pos:start="127:55" pos:end="127:63">wa_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:79"><expr pos:start="129:13" pos:end="129:78"><call pos:start="129:13" pos:end="129:78"><name pos:start="129:13" pos:end="129:34">configure_connector_st</name><argument_list pos:start="129:35" pos:end="129:78">(<argument pos:start="129:36" pos:end="129:42"><expr pos:start="129:36" pos:end="129:42"><name pos:start="129:36" pos:end="129:42">wa_addr</name></expr></argument>, <argument pos:start="129:45" pos:end="129:53"><expr pos:start="129:45" pos:end="129:53"><name pos:start="129:45" pos:end="129:53">wa_offset</name></expr></argument>, <argument pos:start="129:56" pos:end="129:59"><expr pos:start="129:56" pos:end="129:59"><name pos:start="129:56" pos:end="129:59">name</name></expr></argument>, <argument pos:start="129:62" pos:end="129:77"><expr pos:start="129:62" pos:end="129:77"><call pos:start="129:62" pos:end="129:73"><name pos:start="129:62" pos:end="129:67">strlen</name><argument_list pos:start="129:68" pos:end="129:73">(<argument pos:start="129:69" pos:end="129:72"><expr pos:start="129:69" pos:end="129:72"><name pos:start="129:69" pos:end="129:72">name</name></expr></argument>)</argument_list></call> <operator pos:start="129:75" pos:end="129:75">+</operator> <literal type="number" pos:start="129:77" pos:end="129:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:51"><expr pos:start="131:13" pos:end="131:50"><name pos:start="131:13" pos:end="131:16">resp</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <name pos:start="131:20" pos:end="131:50">SPAPR_DR_CC_RESPONSE_NEXT_CHILD</name></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:26">case <expr pos:start="135:14" pos:end="135:25"><name pos:start="135:14" pos:end="135:25">FDT_END_NODE</name></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:29"><expr pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:15">ccs</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:26">fdt_depth</name></name><operator pos:start="137:27" pos:end="137:28">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="139:13" pos:end="163:13"><if pos:start="139:13" pos:end="159:13">if <condition pos:start="139:16" pos:end="139:36">(<expr pos:start="139:17" pos:end="139:35"><name pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:19">ccs</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:30">fdt_depth</name></name> <operator pos:start="139:32" pos:end="139:33">==</operator> <literal type="number" pos:start="139:35" pos:end="139:35">0</literal></expr>)</condition> <block pos:start="139:38" pos:end="159:13">{<block_content pos:start="141:17" pos:end="157:52">

                <decl_stmt pos:start="141:17" pos:end="141:58"><decl pos:start="141:17" pos:end="141:57"><type pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:24">uint32_t</name></type> <name pos:start="141:26" pos:end="141:34">drc_index</name> <init pos:start="141:36" pos:end="141:57">= <expr pos:start="141:38" pos:end="141:57"><call pos:start="141:38" pos:end="141:57"><name pos:start="141:38" pos:end="141:52">spapr_drc_index</name><argument_list pos:start="141:53" pos:end="141:57">(<argument pos:start="141:54" pos:end="141:56"><expr pos:start="141:54" pos:end="141:56"><name pos:start="141:54" pos:end="141:56">drc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <comment type="block" pos:start="145:17" pos:end="145:76">/* done sending the device tree, move to configured state */</comment>

                <expr_stmt pos:start="147:17" pos:end="147:58"><expr pos:start="147:17" pos:end="147:57"><call pos:start="147:17" pos:end="147:57"><name pos:start="147:17" pos:end="147:46">trace_spapr_drc_set_configured</name><argument_list pos:start="147:47" pos:end="147:57">(<argument pos:start="147:48" pos:end="147:56"><expr pos:start="147:48" pos:end="147:56"><name pos:start="147:48" pos:end="147:56">drc_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:47"><expr pos:start="149:17" pos:end="149:46"><name pos:start="149:17" pos:end="149:26"><name pos:start="149:17" pos:end="149:19">drc</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:26">state</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:46"><name pos:start="149:30" pos:end="149:33">drck</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:46">ready_state</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:28"><expr pos:start="151:17" pos:end="151:27"><call pos:start="151:17" pos:end="151:27"><name pos:start="151:17" pos:end="151:22">g_free</name><argument_list pos:start="151:23" pos:end="151:27">(<argument pos:start="151:24" pos:end="151:26"><expr pos:start="151:24" pos:end="151:26"><name pos:start="151:24" pos:end="151:26">ccs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:32"><expr pos:start="153:17" pos:end="153:31"><name pos:start="153:17" pos:end="153:24"><name pos:start="153:17" pos:end="153:19">drc</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:24">ccs</name></name> <operator pos:start="153:26" pos:end="153:26">=</operator> <name pos:start="153:28" pos:end="153:31">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:27"><expr pos:start="155:17" pos:end="155:26"><name pos:start="155:17" pos:end="155:19">ccs</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <name pos:start="155:23" pos:end="155:26">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:52"><expr pos:start="157:17" pos:end="157:51"><name pos:start="157:17" pos:end="157:20">resp</name> <operator pos:start="157:22" pos:end="157:22">=</operator> <name pos:start="157:24" pos:end="157:51">SPAPR_DR_CC_RESPONSE_SUCCESS</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="159:15" pos:end="163:13">else <block pos:start="159:20" pos:end="163:13">{<block_content pos:start="161:17" pos:end="161:56">

                <expr_stmt pos:start="161:17" pos:end="161:56"><expr pos:start="161:17" pos:end="161:55"><name pos:start="161:17" pos:end="161:20">resp</name> <operator pos:start="161:22" pos:end="161:22">=</operator> <name pos:start="161:24" pos:end="161:55">SPAPR_DR_CC_RESPONSE_PREV_PARENT</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:22">case <expr pos:start="167:14" pos:end="167:21"><name pos:start="167:14" pos:end="167:21">FDT_PROP</name></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="171:57"><expr pos:start="169:13" pos:end="171:56"><name pos:start="169:13" pos:end="169:16">prop</name> <operator pos:start="169:18" pos:end="169:18">=</operator> <call pos:start="169:20" pos:end="171:56"><name pos:start="169:20" pos:end="169:45">fdt_get_property_by_offset</name><argument_list pos:start="169:46" pos:end="171:56">(<argument pos:start="169:47" pos:end="169:54"><expr pos:start="169:47" pos:end="169:54"><name pos:start="169:47" pos:end="169:54"><name pos:start="169:47" pos:end="169:49">drc</name><operator pos:start="169:50" pos:end="169:51">-&gt;</operator><name pos:start="169:52" pos:end="169:54">fdt</name></name></expr></argument>, <argument pos:start="169:57" pos:end="169:71"><expr pos:start="169:57" pos:end="169:71"><name pos:start="169:57" pos:end="169:71"><name pos:start="169:57" pos:end="169:59">ccs</name><operator pos:start="169:60" pos:end="169:61">-&gt;</operator><name pos:start="169:62" pos:end="169:71">fdt_offset</name></name></expr></argument>,

                                              <argument pos:start="171:47" pos:end="171:55"><expr pos:start="171:47" pos:end="171:55"><operator pos:start="171:47" pos:end="171:47">&amp;</operator><name pos:start="171:48" pos:end="171:55">prop_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:69"><expr pos:start="173:13" pos:end="173:68"><name pos:start="173:13" pos:end="173:16">name</name> <operator pos:start="173:18" pos:end="173:18">=</operator> <call pos:start="173:20" pos:end="173:68"><name pos:start="173:20" pos:end="173:29">fdt_string</name><argument_list pos:start="173:30" pos:end="173:68">(<argument pos:start="173:31" pos:end="173:38"><expr pos:start="173:31" pos:end="173:38"><name pos:start="173:31" pos:end="173:38"><name pos:start="173:31" pos:end="173:33">drc</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:38">fdt</name></name></expr></argument>, <argument pos:start="173:41" pos:end="173:67"><expr pos:start="173:41" pos:end="173:67"><call pos:start="173:41" pos:end="173:67"><name pos:start="173:41" pos:end="173:52">fdt32_to_cpu</name><argument_list pos:start="173:53" pos:end="173:67">(<argument pos:start="173:54" pos:end="173:66"><expr pos:start="173:54" pos:end="173:66"><name pos:start="173:54" pos:end="173:66"><name pos:start="173:54" pos:end="173:57">prop</name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:66">nameoff</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="177:13" pos:end="177:58">/* provide the name of the next OF property */</comment>

            <expr_stmt pos:start="179:13" pos:end="179:43"><expr pos:start="179:13" pos:end="179:42"><name pos:start="179:13" pos:end="179:21">wa_offset</name> <operator pos:start="179:23" pos:end="179:23">=</operator> <name pos:start="179:25" pos:end="179:42">CC_VAL_DATA_OFFSET</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:65"><expr pos:start="181:13" pos:end="181:64"><call pos:start="181:13" pos:end="181:64"><name pos:start="181:13" pos:end="181:19">rtas_st</name><argument_list pos:start="181:20" pos:end="181:64">(<argument pos:start="181:21" pos:end="181:27"><expr pos:start="181:21" pos:end="181:27"><name pos:start="181:21" pos:end="181:27">wa_addr</name></expr></argument>, <argument pos:start="181:30" pos:end="181:52"><expr pos:start="181:30" pos:end="181:52"><name pos:start="181:30" pos:end="181:52">CC_IDX_PROP_NAME_OFFSET</name></expr></argument>, <argument pos:start="181:55" pos:end="181:63"><expr pos:start="181:55" pos:end="181:63"><name pos:start="181:55" pos:end="181:63">wa_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:79"><expr pos:start="183:13" pos:end="183:78"><call pos:start="183:13" pos:end="183:78"><name pos:start="183:13" pos:end="183:34">configure_connector_st</name><argument_list pos:start="183:35" pos:end="183:78">(<argument pos:start="183:36" pos:end="183:42"><expr pos:start="183:36" pos:end="183:42"><name pos:start="183:36" pos:end="183:42">wa_addr</name></expr></argument>, <argument pos:start="183:45" pos:end="183:53"><expr pos:start="183:45" pos:end="183:53"><name pos:start="183:45" pos:end="183:53">wa_offset</name></expr></argument>, <argument pos:start="183:56" pos:end="183:59"><expr pos:start="183:56" pos:end="183:59"><name pos:start="183:56" pos:end="183:59">name</name></expr></argument>, <argument pos:start="183:62" pos:end="183:77"><expr pos:start="183:62" pos:end="183:77"><call pos:start="183:62" pos:end="183:73"><name pos:start="183:62" pos:end="183:67">strlen</name><argument_list pos:start="183:68" pos:end="183:73">(<argument pos:start="183:69" pos:end="183:72"><expr pos:start="183:69" pos:end="183:72"><name pos:start="183:69" pos:end="183:72">name</name></expr></argument>)</argument_list></call> <operator pos:start="183:75" pos:end="183:75">+</operator> <literal type="number" pos:start="183:77" pos:end="183:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="187:13" pos:end="193:15">/* provide the length and value of the OF property. data gets

             * placed immediately after NULL terminator of the OF property's

             * name string

             */</comment>

            <expr_stmt pos:start="195:13" pos:end="197:56"><expr pos:start="195:13" pos:end="195:41"><name pos:start="195:13" pos:end="195:21">wa_offset</name> <operator pos:start="195:23" pos:end="195:24">+=</operator> <call pos:start="195:26" pos:end="195:37"><name pos:start="195:26" pos:end="195:31">strlen</name><argument_list pos:start="195:32" pos:end="195:37">(<argument pos:start="195:33" pos:end="195:36"><expr pos:start="195:33" pos:end="195:36"><name pos:start="195:33" pos:end="195:36">name</name></expr></argument>)</argument_list></call> <operator pos:start="195:39" pos:end="195:39">+</operator> <literal type="number" pos:start="195:41" pos:end="195:41">1</literal></expr><operator pos:start="195:42" pos:end="195:42">,</operator>

            <expr pos:start="197:13" pos:end="197:55"><call pos:start="197:13" pos:end="197:55"><name pos:start="197:13" pos:end="197:19">rtas_st</name><argument_list pos:start="197:20" pos:end="197:55">(<argument pos:start="197:21" pos:end="197:27"><expr pos:start="197:21" pos:end="197:27"><name pos:start="197:21" pos:end="197:27">wa_addr</name></expr></argument>, <argument pos:start="197:30" pos:end="197:44"><expr pos:start="197:30" pos:end="197:44"><name pos:start="197:30" pos:end="197:44">CC_IDX_PROP_LEN</name></expr></argument>, <argument pos:start="197:47" pos:end="197:54"><expr pos:start="197:47" pos:end="197:54"><name pos:start="197:47" pos:end="197:54">prop_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:65"><expr pos:start="199:13" pos:end="199:64"><call pos:start="199:13" pos:end="199:64"><name pos:start="199:13" pos:end="199:19">rtas_st</name><argument_list pos:start="199:20" pos:end="199:64">(<argument pos:start="199:21" pos:end="199:27"><expr pos:start="199:21" pos:end="199:27"><name pos:start="199:21" pos:end="199:27">wa_addr</name></expr></argument>, <argument pos:start="199:30" pos:end="199:52"><expr pos:start="199:30" pos:end="199:52"><name pos:start="199:30" pos:end="199:52">CC_IDX_PROP_DATA_OFFSET</name></expr></argument>, <argument pos:start="199:55" pos:end="199:63"><expr pos:start="199:55" pos:end="199:63"><name pos:start="199:55" pos:end="199:63">wa_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:77"><expr pos:start="201:13" pos:end="201:76"><call pos:start="201:13" pos:end="201:76"><name pos:start="201:13" pos:end="201:34">configure_connector_st</name><argument_list pos:start="201:35" pos:end="201:76">(<argument pos:start="201:36" pos:end="201:42"><expr pos:start="201:36" pos:end="201:42"><name pos:start="201:36" pos:end="201:42">wa_addr</name></expr></argument>, <argument pos:start="201:45" pos:end="201:53"><expr pos:start="201:45" pos:end="201:53"><name pos:start="201:45" pos:end="201:53">wa_offset</name></expr></argument>, <argument pos:start="201:56" pos:end="201:65"><expr pos:start="201:56" pos:end="201:65"><name pos:start="201:56" pos:end="201:65"><name pos:start="201:56" pos:end="201:59">prop</name><operator pos:start="201:60" pos:end="201:61">-&gt;</operator><name pos:start="201:62" pos:end="201:65">data</name></name></expr></argument>, <argument pos:start="201:68" pos:end="201:75"><expr pos:start="201:68" pos:end="201:75"><name pos:start="201:68" pos:end="201:75">prop_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:54"><expr pos:start="203:13" pos:end="203:53"><name pos:start="203:13" pos:end="203:16">resp</name> <operator pos:start="203:18" pos:end="203:18">=</operator> <name pos:start="203:20" pos:end="203:53">SPAPR_DR_CC_RESPONSE_NEXT_PROPERTY</name></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:21">case <expr pos:start="207:14" pos:end="207:20"><name pos:start="207:14" pos:end="207:20">FDT_END</name></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:46"><expr pos:start="209:13" pos:end="209:45"><name pos:start="209:13" pos:end="209:16">resp</name> <operator pos:start="209:18" pos:end="209:18">=</operator> <name pos:start="209:20" pos:end="209:45">SPAPR_DR_CC_RESPONSE_ERROR</name></expr>;</expr_stmt>

        <default pos:start="211:9" pos:end="211:16">default:</default>

            <comment type="block" pos:start="213:13" pos:end="213:52">/* keep seeking for an actionable tag */</comment>

            <break pos:start="215:13" pos:end="215:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="219:9" pos:end="223:9"><if pos:start="219:9" pos:end="223:9">if <condition pos:start="219:12" pos:end="219:16">(<expr pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">ccs</name></expr>)</condition> <block pos:start="219:18" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:46">

            <expr_stmt pos:start="221:13" pos:end="221:46"><expr pos:start="221:13" pos:end="221:45"><name pos:start="221:13" pos:end="221:27"><name pos:start="221:13" pos:end="221:15">ccs</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:27">fdt_offset</name></name> <operator pos:start="221:29" pos:end="221:29">=</operator> <name pos:start="221:31" pos:end="221:45">fdt_offset_next</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="225:13" pos:end="225:51">(<expr pos:start="225:14" pos:end="225:50"><name pos:start="225:14" pos:end="225:17">resp</name> <operator pos:start="225:19" pos:end="225:20">==</operator> <name pos:start="225:22" pos:end="225:50">SPAPR_DR_CC_RESPONSE_CONTINUE</name></expr>)</condition>;</do>



    <expr_stmt pos:start="229:5" pos:end="229:14"><expr pos:start="229:5" pos:end="229:13"><name pos:start="229:5" pos:end="229:6">rc</name> <operator pos:start="229:8" pos:end="229:8">=</operator> <name pos:start="229:10" pos:end="229:13">resp</name></expr>;</expr_stmt>

<label pos:start="231:1" pos:end="231:4"><name pos:start="231:1" pos:end="231:3">out</name>:</label>

    <expr_stmt pos:start="233:5" pos:end="233:25"><expr pos:start="233:5" pos:end="233:24"><call pos:start="233:5" pos:end="233:24"><name pos:start="233:5" pos:end="233:11">rtas_st</name><argument_list pos:start="233:12" pos:end="233:24">(<argument pos:start="233:13" pos:end="233:16"><expr pos:start="233:13" pos:end="233:16"><name pos:start="233:13" pos:end="233:16">rets</name></expr></argument>, <argument pos:start="233:19" pos:end="233:19"><expr pos:start="233:19" pos:end="233:19"><literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr></argument>, <argument pos:start="233:22" pos:end="233:23"><expr pos:start="233:22" pos:end="233:23"><name pos:start="233:22" pos:end="233:23">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
