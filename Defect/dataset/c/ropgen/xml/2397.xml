<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2397.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:15"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_jpegls_decode_picture</name><parameter_list pos:start="1:29" pos:end="2:58">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:60"><decl pos:start="1:53" pos:end="1:60"><type pos:start="1:53" pos:end="1:60"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:60">near</name></decl></parameter>,
                             <parameter pos:start="2:30" pos:end="2:48"><decl pos:start="2:30" pos:end="2:48"><type pos:start="2:30" pos:end="2:48"><name pos:start="2:30" pos:end="2:32">int</name></type> <name pos:start="2:34" pos:end="2:48">point_transform</name></decl></parameter>, <parameter pos:start="2:51" pos:end="2:57"><decl pos:start="2:51" pos:end="2:57"><type pos:start="2:51" pos:end="2:57"><name pos:start="2:51" pos:end="2:53">int</name></type> <name pos:start="2:55" pos:end="2:57">ilv</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="131:15">{<block_content pos:start="4:5" pos:end="131:15">
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>, <decl pos:start="4:12" pos:end="4:16"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:12" pos:end="4:12">t</name> <init pos:start="4:14" pos:end="4:16">= <expr pos:start="4:16" pos:end="4:16"><literal type="number" pos:start="4:16" pos:end="4:16">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">zero</name></decl>, <decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">last</name></decl>, <decl pos:start="5:27" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:30">cur</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:20"><decl pos:start="6:5" pos:end="6:19"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:12">JLSState</name> <modifier pos:start="6:14" pos:end="6:14">*</modifier></type><name pos:start="6:15" pos:end="6:19">state</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">off</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:23">stride</name> <init pos:start="7:25" pos:end="7:27">= <expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">1</literal></expr></init></decl>, <decl pos:start="7:30" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:34">width</name></decl>, <decl pos:start="7:37" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:41">shift</name></decl>, <decl pos:start="7:44" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:46">ret</name> <init pos:start="7:48" pos:end="7:50">= <expr pos:start="7:50" pos:end="7:50"><literal type="number" pos:start="7:50" pos:end="7:50">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:51"><expr pos:start="8:5" pos:end="8:50"><name pos:start="8:5" pos:end="8:8">zero</name> <operator pos:start="8:10" pos:end="8:10">=</operator> <call pos:start="8:12" pos:end="8:50"><name pos:start="8:12" pos:end="8:21">av_mallocz</name><argument_list pos:start="8:22" pos:end="8:50">(<argument pos:start="8:23" pos:end="8:49"><expr pos:start="8:23" pos:end="8:49"><name pos:start="8:23" pos:end="8:49"><name pos:start="8:23" pos:end="8:23">s</name><operator pos:start="8:24" pos:end="8:25">-&gt;</operator><name pos:start="8:26" pos:end="8:36">picture_ptr</name><operator pos:start="8:37" pos:end="8:38">-&gt;</operator><name pos:start="8:39" pos:end="8:46">linesize</name><index pos:start="8:47" pos:end="8:49">[<expr pos:start="8:48" pos:end="8:48"><literal type="number" pos:start="8:48" pos:end="8:48">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="10:31"><if pos:start="9:5" pos:end="10:31">if <condition pos:start="9:8" pos:end="9:14">(<expr pos:start="9:9" pos:end="9:13"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:13">zero</name></expr>)</condition><block type="pseudo" pos:start="10:9" pos:end="10:31"><block_content pos:start="10:9" pos:end="10:31">
        <return pos:start="10:9" pos:end="10:31">return <expr pos:start="10:16" pos:end="10:30"><call pos:start="10:16" pos:end="10:30"><name pos:start="10:16" pos:end="10:22">AVERROR</name><argument_list pos:start="10:23" pos:end="10:30">(<argument pos:start="10:24" pos:end="10:29"><expr pos:start="10:24" pos:end="10:29"><name pos:start="10:24" pos:end="10:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:16"><expr pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:8">last</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <name pos:start="11:12" pos:end="11:15">zero</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:35"><expr pos:start="12:5" pos:end="12:34"><name pos:start="12:5" pos:end="12:7">cur</name>  <operator pos:start="12:10" pos:end="12:10">=</operator> <name pos:start="12:12" pos:end="12:34"><name pos:start="12:12" pos:end="12:12">s</name><operator pos:start="12:13" pos:end="12:14">-&gt;</operator><name pos:start="12:15" pos:end="12:25">picture_ptr</name><operator pos:start="12:26" pos:end="12:27">-&gt;</operator><name pos:start="12:28" pos:end="12:31">data</name><index pos:start="12:32" pos:end="12:34">[<expr pos:start="12:33" pos:end="12:33"><literal type="number" pos:start="12:33" pos:end="12:33">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:9">state</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:40"><name pos:start="13:13" pos:end="13:22">av_mallocz</name><argument_list pos:start="13:23" pos:end="13:40">(<argument pos:start="13:24" pos:end="13:39"><expr pos:start="13:24" pos:end="13:39"><sizeof pos:start="13:24" pos:end="13:39">sizeof<argument_list pos:start="13:30" pos:end="13:39">(<argument pos:start="13:31" pos:end="13:38"><expr pos:start="13:31" pos:end="13:38"><name pos:start="13:31" pos:end="13:38">JLSState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="131:15"><if pos:start="14:5" pos:end="131:15">if <condition pos:start="14:8" pos:end="14:15">(<expr pos:start="14:9" pos:end="14:14"><operator pos:start="14:9" pos:end="14:9">!</operator><name pos:start="14:10" pos:end="14:14">state</name></expr>)</condition> <block pos:start="14:17" pos:end="131:15">{<block_content pos:start="15:9" pos:end="131:15">
        <expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><call pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:15">av_free</name><argument_list pos:start="15:16" pos:end="15:21">(<argument pos:start="15:17" pos:end="15:20"><expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="16:9" pos:end="16:31">return <expr pos:start="16:16" pos:end="16:30"><call pos:start="16:16" pos:end="16:30"><name pos:start="16:16" pos:end="16:22">AVERROR</name><argument_list pos:start="16:23" pos:end="16:30">(<argument pos:start="16:24" pos:end="16:29"><expr pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>
    <comment type="block" pos:start="17:5" pos:end="17:55">/* initialize JPEG-LS state from JPEG parameters */</comment>
    <expr_stmt pos:start="18:5" pos:end="18:25"><expr pos:start="18:5" pos:end="18:24"><name pos:start="18:5" pos:end="18:15"><name pos:start="18:5" pos:end="18:9">state</name><operator pos:start="18:10" pos:end="18:11">-&gt;</operator><name pos:start="18:12" pos:end="18:15">near</name></name>   <operator pos:start="18:19" pos:end="18:19">=</operator> <name pos:start="18:21" pos:end="18:24">near</name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:9">state</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">bpp</name></name>    <operator pos:start="19:19" pos:end="19:19">=</operator> <ternary pos:start="19:21" pos:end="19:47"><condition pos:start="19:21" pos:end="19:35"><expr pos:start="19:21" pos:end="19:33"><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:22">s</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:28">bits</name></name> <operator pos:start="19:30" pos:end="19:30">&lt;</operator> <literal type="number" pos:start="19:32" pos:end="19:32">2</literal><operator pos:start="19:33" pos:end="19:33">)</operator></expr> ?</condition><then pos:start="19:37" pos:end="19:37"> <expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">2</literal></expr> </then><else pos:start="19:39" pos:end="19:47">: <expr pos:start="19:41" pos:end="19:47"><name pos:start="19:41" pos:end="19:47"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:47">bits</name></name></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:30"><expr pos:start="20:5" pos:end="20:29"><name pos:start="20:5" pos:end="20:17"><name pos:start="20:5" pos:end="20:9">state</name><operator pos:start="20:10" pos:end="20:11">-&gt;</operator><name pos:start="20:12" pos:end="20:17">maxval</name></name> <operator pos:start="20:19" pos:end="20:19">=</operator> <name pos:start="20:21" pos:end="20:29"><name pos:start="20:21" pos:end="20:21">s</name><operator pos:start="20:22" pos:end="20:23">-&gt;</operator><name pos:start="20:24" pos:end="20:29">maxval</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:9">state</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:13">T1</name></name>     <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:25">t1</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:26"><expr pos:start="22:5" pos:end="22:25"><name pos:start="22:5" pos:end="22:13"><name pos:start="22:5" pos:end="22:9">state</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:13">T2</name></name>     <operator pos:start="22:19" pos:end="22:19">=</operator> <name pos:start="22:21" pos:end="22:25"><name pos:start="22:21" pos:end="22:21">s</name><operator pos:start="22:22" pos:end="22:23">-&gt;</operator><name pos:start="22:24" pos:end="22:25">t2</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:9">state</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:13">T3</name></name>     <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:25">t3</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:29"><expr pos:start="24:5" pos:end="24:28"><name pos:start="24:5" pos:end="24:16"><name pos:start="24:5" pos:end="24:9">state</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:16">reset</name></name>  <operator pos:start="24:19" pos:end="24:19">=</operator> <name pos:start="24:21" pos:end="24:28"><name pos:start="24:21" pos:end="24:21">s</name><operator pos:start="24:22" pos:end="24:23">-&gt;</operator><name pos:start="24:24" pos:end="24:28">reset</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><call pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:37">ff_jpegls_reset_coding_parameters</name><argument_list pos:start="25:38" pos:end="25:47">(<argument pos:start="25:39" pos:end="25:43"><expr pos:start="25:39" pos:end="25:43"><name pos:start="25:39" pos:end="25:43">state</name></expr></argument>, <argument pos:start="25:46" pos:end="25:46"><expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:32"><expr pos:start="26:5" pos:end="26:31"><call pos:start="26:5" pos:end="26:31"><name pos:start="26:5" pos:end="26:24">ff_jpegls_init_state</name><argument_list pos:start="26:25" pos:end="26:31">(<argument pos:start="26:26" pos:end="26:30"><expr pos:start="26:26" pos:end="26:30"><name pos:start="26:26" pos:end="26:30">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="30:49"><if pos:start="27:5" pos:end="28:48">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">bits</name></name> <operator pos:start="27:17" pos:end="27:18">&lt;=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">8</literal></expr>)</condition><block type="pseudo" pos:start="28:9" pos:end="28:48"><block_content pos:start="28:9" pos:end="28:48">
        <expr_stmt pos:start="28:9" pos:end="28:48"><expr pos:start="28:9" pos:end="28:47"><name pos:start="28:9" pos:end="28:13">shift</name> <operator pos:start="28:15" pos:end="28:15">=</operator> <name pos:start="28:17" pos:end="28:31">point_transform</name> <operator pos:start="28:33" pos:end="28:33">+</operator> <operator pos:start="28:35" pos:end="28:35">(</operator><literal type="number" pos:start="28:36" pos:end="28:38">8</literal> <operator pos:start="28:38" pos:end="28:38">-</operator> <name pos:start="28:40" pos:end="28:46"><name pos:start="28:40" pos:end="28:40">s</name><operator pos:start="28:41" pos:end="28:42">-&gt;</operator><name pos:start="28:43" pos:end="28:46">bits</name></name><operator pos:start="28:47" pos:end="28:47">)</operator></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="29:5" pos:end="30:49">else<block type="pseudo" pos:start="30:9" pos:end="30:49"><block_content pos:start="30:9" pos:end="30:49">
        <expr_stmt pos:start="30:9" pos:end="30:49"><expr pos:start="30:9" pos:end="30:48"><name pos:start="30:9" pos:end="30:13">shift</name> <operator pos:start="30:15" pos:end="30:15">=</operator> <name pos:start="30:17" pos:end="30:31">point_transform</name> <operator pos:start="30:33" pos:end="30:33">+</operator> <operator pos:start="30:35" pos:end="30:35">(</operator><literal type="number" pos:start="30:36" pos:end="30:39">16</literal> <operator pos:start="30:39" pos:end="30:39">-</operator> <name pos:start="30:41" pos:end="30:47"><name pos:start="30:41" pos:end="30:41">s</name><operator pos:start="30:42" pos:end="30:43">-&gt;</operator><name pos:start="30:44" pos:end="30:47">bits</name></name><operator pos:start="30:48" pos:end="30:48">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="31:5" pos:end="131:15"><if pos:start="31:5" pos:end="131:15">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">debug</name></name> <operator pos:start="31:25" pos:end="31:25">&amp;</operator> <name pos:start="31:27" pos:end="31:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="31:47" pos:end="131:15">{<block_content pos:start="32:9" pos:end="131:15">
        <expr_stmt pos:start="32:9" pos:end="37:71"><expr pos:start="32:9" pos:end="37:70"><call pos:start="32:9" pos:end="37:70"><name pos:start="32:9" pos:end="32:14">av_log</name><argument_list pos:start="32:15" pos:end="37:70">(<argument pos:start="32:16" pos:end="32:23"><expr pos:start="32:16" pos:end="32:23"><name pos:start="32:16" pos:end="32:23"><name pos:start="32:16" pos:end="32:16">s</name><operator pos:start="32:17" pos:end="32:18">-&gt;</operator><name pos:start="32:19" pos:end="32:23">avctx</name></name></expr></argument>, <argument pos:start="32:26" pos:end="32:37"><expr pos:start="32:26" pos:end="32:37"><name pos:start="32:26" pos:end="32:37">AV_LOG_DEBUG</name></expr></argument>,
               <argument pos:start="33:16" pos:end="34:56"><expr pos:start="33:16" pos:end="34:56"><literal type="string" pos:start="33:16" pos:end="33:65">"JPEG-LS params: %ix%i NEAR=%i MV=%i T(%i,%i,%i) "</literal>
               <literal type="string" pos:start="34:16" pos:end="34:56">"RESET=%i, LIMIT=%i, qbpp=%i, RANGE=%i\n"</literal></expr></argument>,
                <argument pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">width</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:35"><name pos:start="35:27" pos:end="35:35"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:35">height</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:48"><expr pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:42">state</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:48">near</name></name></expr></argument>, <argument pos:start="35:51" pos:end="35:63"><expr pos:start="35:51" pos:end="35:63"><name pos:start="35:51" pos:end="35:63"><name pos:start="35:51" pos:end="35:55">state</name><operator pos:start="35:56" pos:end="35:57">-&gt;</operator><name pos:start="35:58" pos:end="35:63">maxval</name></name></expr></argument>,
                <argument pos:start="36:17" pos:end="36:25"><expr pos:start="36:17" pos:end="36:25"><name pos:start="36:17" pos:end="36:25"><name pos:start="36:17" pos:end="36:21">state</name><operator pos:start="36:22" pos:end="36:23">-&gt;</operator><name pos:start="36:24" pos:end="36:25">T1</name></name></expr></argument>, <argument pos:start="36:28" pos:end="36:36"><expr pos:start="36:28" pos:end="36:36"><name pos:start="36:28" pos:end="36:36"><name pos:start="36:28" pos:end="36:32">state</name><operator pos:start="36:33" pos:end="36:34">-&gt;</operator><name pos:start="36:35" pos:end="36:36">T2</name></name></expr></argument>, <argument pos:start="36:39" pos:end="36:47"><expr pos:start="36:39" pos:end="36:47"><name pos:start="36:39" pos:end="36:47"><name pos:start="36:39" pos:end="36:43">state</name><operator pos:start="36:44" pos:end="36:45">-&gt;</operator><name pos:start="36:46" pos:end="36:47">T3</name></name></expr></argument>,
                <argument pos:start="37:17" pos:end="37:28"><expr pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:21">state</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:28">reset</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:42"><expr pos:start="37:31" pos:end="37:42"><name pos:start="37:31" pos:end="37:42"><name pos:start="37:31" pos:end="37:35">state</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:42">limit</name></name></expr></argument>, <argument pos:start="37:45" pos:end="37:55"><expr pos:start="37:45" pos:end="37:55"><name pos:start="37:45" pos:end="37:55"><name pos:start="37:45" pos:end="37:49">state</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:55">qbpp</name></name></expr></argument>, <argument pos:start="37:58" pos:end="37:69"><expr pos:start="37:58" pos:end="37:69"><name pos:start="37:58" pos:end="37:69"><name pos:start="37:58" pos:end="37:62">state</name><operator pos:start="37:63" pos:end="37:64">-&gt;</operator><name pos:start="37:65" pos:end="37:69">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="39:60"><expr pos:start="38:9" pos:end="39:59"><call pos:start="38:9" pos:end="39:59"><name pos:start="38:9" pos:end="38:14">av_log</name><argument_list pos:start="38:15" pos:end="39:59">(<argument pos:start="38:16" pos:end="38:23"><expr pos:start="38:16" pos:end="38:23"><name pos:start="38:16" pos:end="38:23"><name pos:start="38:16" pos:end="38:16">s</name><operator pos:start="38:17" pos:end="38:18">-&gt;</operator><name pos:start="38:19" pos:end="38:23">avctx</name></name></expr></argument>, <argument pos:start="38:26" pos:end="38:37"><expr pos:start="38:26" pos:end="38:37"><name pos:start="38:26" pos:end="38:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="38:40" pos:end="38:86"><expr pos:start="38:40" pos:end="38:86"><literal type="string" pos:start="38:40" pos:end="38:86">"JPEG params: ILV=%i Pt=%i BPP=%i, scan = %i\n"</literal></expr></argument>,
                <argument pos:start="39:17" pos:end="39:19"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">ilv</name></expr></argument>, <argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:36">point_transform</name></expr></argument>, <argument pos:start="39:39" pos:end="39:45"><expr pos:start="39:39" pos:end="39:45"><name pos:start="39:39" pos:end="39:45"><name pos:start="39:39" pos:end="39:39">s</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:45">bits</name></name></expr></argument>, <argument pos:start="39:48" pos:end="39:58"><expr pos:start="39:48" pos:end="39:58"><name pos:start="39:48" pos:end="39:58"><name pos:start="39:48" pos:end="39:48">s</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:58">cur_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="40:5" pos:end="131:15"><if pos:start="40:5" pos:end="131:15">if <condition pos:start="40:8" pos:end="40:17">(<expr pos:start="40:9" pos:end="40:16"><name pos:start="40:9" pos:end="40:11">ilv</name> <operator pos:start="40:13" pos:end="40:14">==</operator> <literal type="number" pos:start="40:16" pos:end="40:16">0</literal></expr>)</condition> <block pos:start="40:19" pos:end="131:15">{<block_content pos:start="41:9" pos:end="131:15"> <comment type="block" pos:start="40:21" pos:end="40:41">/* separate planes */</comment>
        <if_stmt pos:start="41:9" pos:end="131:15"><if pos:start="41:9" pos:end="131:15">if <condition pos:start="41:12" pos:end="41:43">(<expr pos:start="41:13" pos:end="41:42"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">cur_scan</name></name> <operator pos:start="41:25" pos:end="41:25">&gt;</operator> <name pos:start="41:27" pos:end="41:42"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:42">nb_components</name></name></expr>)</condition> <block pos:start="41:45" pos:end="131:15">{<block_content pos:start="42:9" pos:end="131:15">
        <expr_stmt pos:start="42:9" pos:end="42:48"><expr pos:start="42:9" pos:end="42:47"><name pos:start="42:9" pos:end="42:14">stride</name> <operator pos:start="42:16" pos:end="42:16">=</operator> <ternary pos:start="42:18" pos:end="42:47"><condition pos:start="42:18" pos:end="42:41"><expr pos:start="42:18" pos:end="42:39"><operator pos:start="42:18" pos:end="42:18">(</operator><name pos:start="42:19" pos:end="42:34"><name pos:start="42:19" pos:end="42:19">s</name><operator pos:start="42:20" pos:end="42:21">-&gt;</operator><name pos:start="42:22" pos:end="42:34">nb_components</name></name> <operator pos:start="42:36" pos:end="42:36">&gt;</operator> <literal type="number" pos:start="42:38" pos:end="42:38">1</literal><operator pos:start="42:39" pos:end="42:39">)</operator></expr> ?</condition><then pos:start="42:43" pos:end="42:43"> <expr pos:start="42:43" pos:end="42:43"><literal type="number" pos:start="42:43" pos:end="42:43">3</literal></expr> </then><else pos:start="42:45" pos:end="42:47">: <expr pos:start="42:47" pos:end="42:47"><literal type="number" pos:start="42:47" pos:end="42:47">1</literal></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:57"><expr pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:11">off</name>    <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:56"><name pos:start="43:18" pos:end="43:24">av_clip</name><argument_list pos:start="43:25" pos:end="43:56">(<argument pos:start="43:26" pos:end="43:40"><expr pos:start="43:26" pos:end="43:40"><name pos:start="43:26" pos:end="43:36"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:36">cur_scan</name></name> <operator pos:start="43:38" pos:end="43:38">-</operator> <literal type="number" pos:start="43:40" pos:end="43:40">1</literal></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">0</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:55"><expr pos:start="43:46" pos:end="43:55"><name pos:start="43:46" pos:end="43:51">stride</name> <operator pos:start="43:53" pos:end="43:53">-</operator> <literal type="number" pos:start="43:55" pos:end="43:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:35"><expr pos:start="44:9" pos:end="44:34"><name pos:start="44:9" pos:end="44:13">width</name>  <operator pos:start="44:16" pos:end="44:16">=</operator> <name pos:start="44:18" pos:end="44:25"><name pos:start="44:18" pos:end="44:18">s</name><operator pos:start="44:19" pos:end="44:20">-&gt;</operator><name pos:start="44:21" pos:end="44:25">width</name></name> <operator pos:start="44:27" pos:end="44:27">*</operator> <name pos:start="44:29" pos:end="44:34">stride</name></expr>;</expr_stmt>
        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:11">cur</name>   <operator pos:start="45:15" pos:end="45:16">+=</operator> <name pos:start="45:18" pos:end="45:20">off</name></expr>;</expr_stmt>
        <for pos:start="46:9" pos:end="131:15">for <control pos:start="46:13" pos:end="46:39">(<init pos:start="46:14" pos:end="46:19"><expr pos:start="46:14" pos:end="46:18"><name pos:start="46:14" pos:end="46:14">i</name> <operator pos:start="46:16" pos:end="46:16">=</operator> <literal type="number" pos:start="46:18" pos:end="46:18">0</literal></expr>;</init> <condition pos:start="46:21" pos:end="46:34"><expr pos:start="46:21" pos:end="46:33"><name pos:start="46:21" pos:end="46:21">i</name> <operator pos:start="46:23" pos:end="46:23">&lt;</operator> <name pos:start="46:25" pos:end="46:33"><name pos:start="46:25" pos:end="46:25">s</name><operator pos:start="46:26" pos:end="46:27">-&gt;</operator><name pos:start="46:28" pos:end="46:33">height</name></name></expr>;</condition> <incr pos:start="46:36" pos:end="46:38"><expr pos:start="46:36" pos:end="46:38"><name pos:start="46:36" pos:end="46:36">i</name><operator pos:start="46:37" pos:end="46:38">++</operator></expr></incr>)</control> <block pos:start="46:41" pos:end="131:15">{<block_content pos:start="47:13" pos:end="131:15">
            <if_stmt pos:start="47:13" pos:end="131:15"><if pos:start="47:13" pos:end="50:13">if <condition pos:start="47:16" pos:end="47:29">(<expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:23">bits</name></name> <operator pos:start="47:25" pos:end="47:26">&lt;=</operator> <literal type="number" pos:start="47:28" pos:end="47:28">8</literal></expr>)</condition> <block pos:start="47:31" pos:end="50:13">{<block_content pos:start="48:17" pos:end="49:28">
                <expr_stmt pos:start="48:17" pos:end="48:78"><expr pos:start="48:17" pos:end="48:77"><call pos:start="48:17" pos:end="48:77"><name pos:start="48:17" pos:end="48:30">ls_decode_line</name><argument_list pos:start="48:31" pos:end="48:77">(<argument pos:start="48:32" pos:end="48:36"><expr pos:start="48:32" pos:end="48:36"><name pos:start="48:32" pos:end="48:36">state</name></expr></argument>, <argument pos:start="48:39" pos:end="48:39"><expr pos:start="48:39" pos:end="48:39"><name pos:start="48:39" pos:end="48:39">s</name></expr></argument>, <argument pos:start="48:42" pos:end="48:45"><expr pos:start="48:42" pos:end="48:45"><name pos:start="48:42" pos:end="48:45">last</name></expr></argument>, <argument pos:start="48:48" pos:end="48:50"><expr pos:start="48:48" pos:end="48:50"><name pos:start="48:48" pos:end="48:50">cur</name></expr></argument>, <argument pos:start="48:53" pos:end="48:53"><expr pos:start="48:53" pos:end="48:53"><name pos:start="48:53" pos:end="48:53">t</name></expr></argument>, <argument pos:start="48:56" pos:end="48:60"><expr pos:start="48:56" pos:end="48:60"><name pos:start="48:56" pos:end="48:60">width</name></expr></argument>, <argument pos:start="48:63" pos:end="48:68"><expr pos:start="48:63" pos:end="48:68"><name pos:start="48:63" pos:end="48:68">stride</name></expr></argument>, <argument pos:start="48:71" pos:end="48:73"><expr pos:start="48:71" pos:end="48:73"><name pos:start="48:71" pos:end="48:73">off</name></expr></argument>, <argument pos:start="48:76" pos:end="48:76"><expr pos:start="48:76" pos:end="48:76"><literal type="number" pos:start="48:76" pos:end="48:76">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="49:17" pos:end="49:28"><expr pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:17">t</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:27"><name pos:start="49:21" pos:end="49:24">last</name><index pos:start="49:25" pos:end="49:27">[<expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="50:15" pos:end="131:15">else <block pos:start="50:20" pos:end="131:15">{<block_content pos:start="51:17" pos:end="131:15">
                <expr_stmt pos:start="51:17" pos:end="51:79"><expr pos:start="51:17" pos:end="51:78"><call pos:start="51:17" pos:end="51:78"><name pos:start="51:17" pos:end="51:30">ls_decode_line</name><argument_list pos:start="51:31" pos:end="51:78">(<argument pos:start="51:32" pos:end="51:36"><expr pos:start="51:32" pos:end="51:36"><name pos:start="51:32" pos:end="51:36">state</name></expr></argument>, <argument pos:start="51:39" pos:end="51:39"><expr pos:start="51:39" pos:end="51:39"><name pos:start="51:39" pos:end="51:39">s</name></expr></argument>, <argument pos:start="51:42" pos:end="51:45"><expr pos:start="51:42" pos:end="51:45"><name pos:start="51:42" pos:end="51:45">last</name></expr></argument>, <argument pos:start="51:48" pos:end="51:50"><expr pos:start="51:48" pos:end="51:50"><name pos:start="51:48" pos:end="51:50">cur</name></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">t</name></expr></argument>, <argument pos:start="51:56" pos:end="51:60"><expr pos:start="51:56" pos:end="51:60"><name pos:start="51:56" pos:end="51:60">width</name></expr></argument>, <argument pos:start="51:63" pos:end="51:68"><expr pos:start="51:63" pos:end="51:68"><name pos:start="51:63" pos:end="51:68">stride</name></expr></argument>, <argument pos:start="51:71" pos:end="51:73"><expr pos:start="51:71" pos:end="51:73"><name pos:start="51:71" pos:end="51:73">off</name></expr></argument>, <argument pos:start="51:76" pos:end="51:77"><expr pos:start="51:76" pos:end="51:77"><literal type="number" pos:start="51:76" pos:end="51:77">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="52:17" pos:end="52:40"><expr pos:start="52:17" pos:end="52:39"><name pos:start="52:17" pos:end="52:17">t</name> <operator pos:start="52:19" pos:end="52:19">=</operator> <operator pos:start="52:21" pos:end="52:21">*</operator><operator pos:start="52:22" pos:end="52:22">(</operator><operator pos:start="52:23" pos:end="52:23">(</operator><name pos:start="52:24" pos:end="52:31">uint16_t</name> <operator pos:start="52:33" pos:end="52:33">*</operator><operator pos:start="52:34" pos:end="52:34">)</operator><name pos:start="52:35" pos:end="52:38">last</name><operator pos:start="52:39" pos:end="52:39">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="53:13" pos:end="53:23"><expr pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:16">last</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:22">cur</name></expr>;</expr_stmt>
            <expr_stmt pos:start="54:13" pos:end="54:47"><expr pos:start="54:13" pos:end="54:46"><name pos:start="54:13" pos:end="54:15">cur</name> <operator pos:start="54:17" pos:end="54:18">+=</operator> <name pos:start="54:20" pos:end="54:46"><name pos:start="54:20" pos:end="54:20">s</name><operator pos:start="54:21" pos:end="54:22">-&gt;</operator><name pos:start="54:23" pos:end="54:33">picture_ptr</name><operator pos:start="54:34" pos:end="54:35">-&gt;</operator><name pos:start="54:36" pos:end="54:43">linesize</name><index pos:start="54:44" pos:end="54:46">[<expr pos:start="54:45" pos:end="54:45"><literal type="number" pos:start="54:45" pos:end="54:45">0</literal></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="55:13" pos:end="131:15"><if pos:start="55:13" pos:end="58:5">if <condition pos:start="55:16" pos:end="55:59">(<expr pos:start="55:17" pos:end="55:58"><name pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:35">restart_interval</name></name> <operator pos:start="55:37" pos:end="55:38">&amp;&amp;</operator> <operator pos:start="55:40" pos:end="55:40">!</operator><operator pos:start="55:41" pos:end="55:42">--</operator><name pos:start="55:43" pos:end="55:58"><name pos:start="55:43" pos:end="55:43">s</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:58">restart_count</name></name></expr>)</condition> <block pos:start="55:61" pos:end="58:5">{<block_content pos:start="56:17" pos:end="57:38">
                <expr_stmt pos:start="56:17" pos:end="56:39"><expr pos:start="56:17" pos:end="56:38"><call pos:start="56:17" pos:end="56:38"><name pos:start="56:17" pos:end="56:30">align_get_bits</name><argument_list pos:start="56:31" pos:end="56:38">(<argument pos:start="56:32" pos:end="56:37"><expr pos:start="56:32" pos:end="56:37"><operator pos:start="56:32" pos:end="56:32">&amp;</operator><name pos:start="56:33" pos:end="56:37"><name pos:start="56:33" pos:end="56:33">s</name><operator pos:start="56:34" pos:end="56:35">-&gt;</operator><name pos:start="56:36" pos:end="56:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="57:17" pos:end="57:38"><expr pos:start="57:17" pos:end="57:37"><call pos:start="57:17" pos:end="57:37"><name pos:start="57:17" pos:end="57:25">skip_bits</name><argument_list pos:start="57:26" pos:end="57:37">(<argument pos:start="57:27" pos:end="57:32"><expr pos:start="57:27" pos:end="57:32"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:32"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:32">gb</name></name></expr></argument>, <argument pos:start="57:35" pos:end="57:36"><expr pos:start="57:35" pos:end="57:36"><literal type="number" pos:start="57:35" pos:end="57:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:40" pos:end="57:54">/* skip RSTn */</comment>
    </block_content>}</block></if> <if type="elseif" pos:start="58:7" pos:end="131:15">else if <condition pos:start="58:15" pos:end="58:24">(<expr pos:start="58:16" pos:end="58:23"><name pos:start="58:16" pos:end="58:18">ilv</name> <operator pos:start="58:20" pos:end="58:21">==</operator> <literal type="number" pos:start="58:23" pos:end="58:23">1</literal></expr>)</condition> <block pos:start="58:26" pos:end="131:15">{<block_content pos:start="59:9" pos:end="131:15"> <comment type="block" pos:start="58:28" pos:end="58:50">/* line interleaving */</comment>
        <decl_stmt pos:start="59:9" pos:end="59:14"><decl pos:start="59:9" pos:end="59:13"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:13">j</name></decl>;</decl_stmt>
        <decl_stmt pos:start="60:9" pos:end="60:32"><decl pos:start="60:9" pos:end="60:31"><type pos:start="60:9" pos:end="60:11"><name pos:start="60:9" pos:end="60:11">int</name></type> <name pos:start="60:13" pos:end="60:17"><name pos:start="60:13" pos:end="60:14">Rc</name><index pos:start="60:15" pos:end="60:17">[<expr pos:start="60:16" pos:end="60:16"><literal type="number" pos:start="60:16" pos:end="60:16">3</literal></expr>]</index></name> <init pos:start="60:19" pos:end="60:31">= <expr pos:start="60:21" pos:end="60:31"><block pos:start="60:21" pos:end="60:31">{ <expr pos:start="60:23" pos:end="60:23"><literal type="number" pos:start="60:23" pos:end="60:23">0</literal></expr>, <expr pos:start="60:26" pos:end="60:26"><literal type="number" pos:start="60:26" pos:end="60:26">0</literal></expr>, <expr pos:start="60:29" pos:end="60:29"><literal type="number" pos:start="60:29" pos:end="60:29">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:48"><expr pos:start="61:9" pos:end="61:47"><name pos:start="61:9" pos:end="61:14">stride</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <ternary pos:start="61:18" pos:end="61:47"><condition pos:start="61:18" pos:end="61:41"><expr pos:start="61:18" pos:end="61:39"><operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:34"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:34">nb_components</name></name> <operator pos:start="61:36" pos:end="61:36">&gt;</operator> <literal type="number" pos:start="61:38" pos:end="61:38">1</literal><operator pos:start="61:39" pos:end="61:39">)</operator></expr> ?</condition><then pos:start="61:43" pos:end="61:43"> <expr pos:start="61:43" pos:end="61:43"><literal type="number" pos:start="61:43" pos:end="61:43">3</literal></expr> </then><else pos:start="61:45" pos:end="61:47">: <expr pos:start="61:47" pos:end="61:47"><literal type="number" pos:start="61:47" pos:end="61:47">1</literal></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:52"><expr pos:start="62:9" pos:end="62:51"><call pos:start="62:9" pos:end="62:51"><name pos:start="62:9" pos:end="62:14">memset</name><argument_list pos:start="62:15" pos:end="62:51">(<argument pos:start="62:16" pos:end="62:18"><expr pos:start="62:16" pos:end="62:18"><name pos:start="62:16" pos:end="62:18">cur</name></expr></argument>, <argument pos:start="62:21" pos:end="62:21"><expr pos:start="62:21" pos:end="62:21"><literal type="number" pos:start="62:21" pos:end="62:21">0</literal></expr></argument>, <argument pos:start="62:24" pos:end="62:50"><expr pos:start="62:24" pos:end="62:50"><name pos:start="62:24" pos:end="62:50"><name pos:start="62:24" pos:end="62:24">s</name><operator pos:start="62:25" pos:end="62:26">-&gt;</operator><name pos:start="62:27" pos:end="62:37">picture_ptr</name><operator pos:start="62:38" pos:end="62:39">-&gt;</operator><name pos:start="62:40" pos:end="62:47">linesize</name><index pos:start="62:48" pos:end="62:50">[<expr pos:start="62:49" pos:end="62:49"><literal type="number" pos:start="62:49" pos:end="62:49">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:13">width</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:24">width</name></name> <operator pos:start="63:26" pos:end="63:26">*</operator> <name pos:start="63:28" pos:end="63:33">stride</name></expr>;</expr_stmt>
        <for pos:start="64:9" pos:end="131:15">for <control pos:start="64:13" pos:end="64:39">(<init pos:start="64:14" pos:end="64:19"><expr pos:start="64:14" pos:end="64:18"><name pos:start="64:14" pos:end="64:14">i</name> <operator pos:start="64:16" pos:end="64:16">=</operator> <literal type="number" pos:start="64:18" pos:end="64:18">0</literal></expr>;</init> <condition pos:start="64:21" pos:end="64:34"><expr pos:start="64:21" pos:end="64:33"><name pos:start="64:21" pos:end="64:21">i</name> <operator pos:start="64:23" pos:end="64:23">&lt;</operator> <name pos:start="64:25" pos:end="64:33"><name pos:start="64:25" pos:end="64:25">s</name><operator pos:start="64:26" pos:end="64:27">-&gt;</operator><name pos:start="64:28" pos:end="64:33">height</name></name></expr>;</condition> <incr pos:start="64:36" pos:end="64:38"><expr pos:start="64:36" pos:end="64:38"><name pos:start="64:36" pos:end="64:36">i</name><operator pos:start="64:37" pos:end="64:38">++</operator></expr></incr>)</control> <block pos:start="64:41" pos:end="131:15">{<block_content pos:start="65:13" pos:end="131:15">
            <for pos:start="65:13" pos:end="131:15">for <control pos:start="65:17" pos:end="65:40">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">j</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:35"><expr pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:25">j</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <name pos:start="65:29" pos:end="65:34">stride</name></expr>;</condition> <incr pos:start="65:37" pos:end="65:39"><expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:37">j</name><operator pos:start="65:38" pos:end="65:39">++</operator></expr></incr>)</control> <block pos:start="65:42" pos:end="131:15">{<block_content pos:start="66:17" pos:end="131:15">
                <expr_stmt pos:start="66:17" pos:end="67:59"><expr pos:start="66:17" pos:end="67:58"><call pos:start="66:17" pos:end="67:58"><name pos:start="66:17" pos:end="66:30">ls_decode_line</name><argument_list pos:start="66:31" pos:end="67:58">(<argument pos:start="66:32" pos:end="66:36"><expr pos:start="66:32" pos:end="66:36"><name pos:start="66:32" pos:end="66:36">state</name></expr></argument>, <argument pos:start="66:39" pos:end="66:39"><expr pos:start="66:39" pos:end="66:39"><name pos:start="66:39" pos:end="66:39">s</name></expr></argument>, <argument pos:start="66:42" pos:end="66:49"><expr pos:start="66:42" pos:end="66:49"><name pos:start="66:42" pos:end="66:45">last</name> <operator pos:start="66:47" pos:end="66:47">+</operator> <name pos:start="66:49" pos:end="66:49">j</name></expr></argument>, <argument pos:start="66:52" pos:end="66:58"><expr pos:start="66:52" pos:end="66:58"><name pos:start="66:52" pos:end="66:54">cur</name> <operator pos:start="66:56" pos:end="66:56">+</operator> <name pos:start="66:58" pos:end="66:58">j</name></expr></argument>,
                               <argument pos:start="67:32" pos:end="67:36"><expr pos:start="67:32" pos:end="67:36"><name pos:start="67:32" pos:end="67:36"><name pos:start="67:32" pos:end="67:33">Rc</name><index pos:start="67:34" pos:end="67:36">[<expr pos:start="67:35" pos:end="67:35"><name pos:start="67:35" pos:end="67:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="67:39" pos:end="67:43"><expr pos:start="67:39" pos:end="67:43"><name pos:start="67:39" pos:end="67:43">width</name></expr></argument>, <argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><name pos:start="67:46" pos:end="67:51">stride</name></expr></argument>, <argument pos:start="67:54" pos:end="67:54"><expr pos:start="67:54" pos:end="67:54"><name pos:start="67:54" pos:end="67:54">j</name></expr></argument>, <argument pos:start="67:57" pos:end="67:57"><expr pos:start="67:57" pos:end="67:57"><literal type="number" pos:start="67:57" pos:end="67:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="68:17" pos:end="68:32"><expr pos:start="68:17" pos:end="68:31"><name pos:start="68:17" pos:end="68:21"><name pos:start="68:17" pos:end="68:18">Rc</name><index pos:start="68:19" pos:end="68:21">[<expr pos:start="68:20" pos:end="68:20"><name pos:start="68:20" pos:end="68:20">j</name></expr>]</index></name> <operator pos:start="68:23" pos:end="68:23">=</operator> <name pos:start="68:25" pos:end="68:31"><name pos:start="68:25" pos:end="68:28">last</name><index pos:start="68:29" pos:end="68:31">[<expr pos:start="68:30" pos:end="68:30"><name pos:start="68:30" pos:end="68:30">j</name></expr>]</index></name></expr>;</expr_stmt>
                <if_stmt pos:start="69:17" pos:end="131:15"><if pos:start="69:17" pos:end="74:5">if <condition pos:start="69:20" pos:end="69:63">(<expr pos:start="69:21" pos:end="69:62"><name pos:start="69:21" pos:end="69:39"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:39">restart_interval</name></name> <operator pos:start="69:41" pos:end="69:42">&amp;&amp;</operator> <operator pos:start="69:44" pos:end="69:44">!</operator><operator pos:start="69:45" pos:end="69:46">--</operator><name pos:start="69:47" pos:end="69:62"><name pos:start="69:47" pos:end="69:47">s</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:62">restart_count</name></name></expr>)</condition> <block pos:start="69:65" pos:end="74:5">{<block_content pos:start="70:21" pos:end="73:47">
                    <expr_stmt pos:start="70:21" pos:end="70:43"><expr pos:start="70:21" pos:end="70:42"><call pos:start="70:21" pos:end="70:42"><name pos:start="70:21" pos:end="70:34">align_get_bits</name><argument_list pos:start="70:35" pos:end="70:42">(<argument pos:start="70:36" pos:end="70:41"><expr pos:start="70:36" pos:end="70:41"><operator pos:start="70:36" pos:end="70:36">&amp;</operator><name pos:start="70:37" pos:end="70:41"><name pos:start="70:37" pos:end="70:37">s</name><operator pos:start="70:38" pos:end="70:39">-&gt;</operator><name pos:start="70:40" pos:end="70:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="71:21" pos:end="71:42"><expr pos:start="71:21" pos:end="71:41"><call pos:start="71:21" pos:end="71:41"><name pos:start="71:21" pos:end="71:29">skip_bits</name><argument_list pos:start="71:30" pos:end="71:41">(<argument pos:start="71:31" pos:end="71:36"><expr pos:start="71:31" pos:end="71:36"><operator pos:start="71:31" pos:end="71:31">&amp;</operator><name pos:start="71:32" pos:end="71:36"><name pos:start="71:32" pos:end="71:32">s</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:36">gb</name></name></expr></argument>, <argument pos:start="71:39" pos:end="71:40"><expr pos:start="71:39" pos:end="71:40"><literal type="number" pos:start="71:39" pos:end="71:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:44" pos:end="71:58">/* skip RSTn */</comment>
            <expr_stmt pos:start="72:13" pos:end="72:23"><expr pos:start="72:13" pos:end="72:22"><name pos:start="72:13" pos:end="72:16">last</name> <operator pos:start="72:18" pos:end="72:18">=</operator> <name pos:start="72:20" pos:end="72:22">cur</name></expr>;</expr_stmt>
            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:15">cur</name> <operator pos:start="73:17" pos:end="73:18">+=</operator> <name pos:start="73:20" pos:end="73:46"><name pos:start="73:20" pos:end="73:20">s</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:33">picture_ptr</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:43">linesize</name><index pos:start="73:44" pos:end="73:46">[<expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="74:7" pos:end="131:15">else if <condition pos:start="74:15" pos:end="74:24">(<expr pos:start="74:16" pos:end="74:23"><name pos:start="74:16" pos:end="74:18">ilv</name> <operator pos:start="74:20" pos:end="74:21">==</operator> <literal type="number" pos:start="74:23" pos:end="74:23">2</literal></expr>)</condition> <block pos:start="74:26" pos:end="131:15">{<block_content pos:start="75:9" pos:end="131:15"> <comment type="block" pos:start="74:28" pos:end="74:52">/* sample interleaving */</comment>
        <expr_stmt pos:start="75:9" pos:end="75:77"><expr pos:start="75:9" pos:end="75:76"><call pos:start="75:9" pos:end="75:76"><name pos:start="75:9" pos:end="75:37">avpriv_report_missing_feature</name><argument_list pos:start="75:38" pos:end="75:76">(<argument pos:start="75:39" pos:end="75:46"><expr pos:start="75:39" pos:end="75:46"><name pos:start="75:39" pos:end="75:46"><name pos:start="75:39" pos:end="75:39">s</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:46">avctx</name></name></expr></argument>, <argument pos:start="75:49" pos:end="75:75"><expr pos:start="75:49" pos:end="75:75"><literal type="string" pos:start="75:49" pos:end="75:75">"Sample interleaved images"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="76:9" pos:end="76:35"><expr pos:start="76:9" pos:end="76:34"><name pos:start="76:9" pos:end="76:11">ret</name> <operator pos:start="76:13" pos:end="76:13">=</operator> <name pos:start="76:15" pos:end="76:34">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>
    <if_stmt pos:start="77:5" pos:end="131:15"><if pos:start="77:5" pos:end="131:15">if <condition pos:start="77:8" pos:end="77:41">(<expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">xfrm</name></name> <operator pos:start="77:17" pos:end="77:18">&amp;&amp;</operator> <name pos:start="77:20" pos:end="77:35"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:35">nb_components</name></name> <operator pos:start="77:37" pos:end="77:38">==</operator> <literal type="number" pos:start="77:40" pos:end="77:40">3</literal></expr>)</condition> <block pos:start="77:43" pos:end="131:15">{<block_content pos:start="78:9" pos:end="131:15">
        <decl_stmt pos:start="78:9" pos:end="78:17"><decl pos:start="78:9" pos:end="78:13"><type pos:start="78:9" pos:end="78:11"><name pos:start="78:9" pos:end="78:11">int</name></type> <name pos:start="78:13" pos:end="78:13">x</name></decl>, <decl pos:start="78:16" pos:end="78:16"><type ref="prev" pos:start="78:9" pos:end="78:11"/><name pos:start="78:16" pos:end="78:16">w</name></decl>;</decl_stmt>
        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:9">w</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <name pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:20">width</name></name> <operator pos:start="79:22" pos:end="79:22">*</operator> <name pos:start="79:24" pos:end="79:39"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:39">nb_components</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="80:9" pos:end="131:15"><if pos:start="80:9" pos:end="131:15">if <condition pos:start="80:12" pos:end="80:25">(<expr pos:start="80:13" pos:end="80:24"><name pos:start="80:13" pos:end="80:19"><name pos:start="80:13" pos:end="80:13">s</name><operator pos:start="80:14" pos:end="80:15">-&gt;</operator><name pos:start="80:16" pos:end="80:19">bits</name></name> <operator pos:start="80:21" pos:end="80:22">&lt;=</operator> <literal type="number" pos:start="80:24" pos:end="80:24">8</literal></expr>)</condition> <block pos:start="80:27" pos:end="131:15">{<block_content pos:start="81:13" pos:end="131:15">
            <decl_stmt pos:start="81:13" pos:end="81:51"><decl pos:start="81:13" pos:end="81:50"><type pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:19">uint8_t</name> <modifier pos:start="81:21" pos:end="81:21">*</modifier></type><name pos:start="81:22" pos:end="81:24">src</name> <init pos:start="81:26" pos:end="81:50">= <expr pos:start="81:28" pos:end="81:50"><name pos:start="81:28" pos:end="81:50"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:41">picture_ptr</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:47">data</name><index pos:start="81:48" pos:end="81:50">[<expr pos:start="81:49" pos:end="81:49"><literal type="number" pos:start="81:49" pos:end="81:49">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <for pos:start="82:13" pos:end="131:15">for <control pos:start="82:17" pos:end="82:43">(<init pos:start="82:18" pos:end="82:23"><expr pos:start="82:18" pos:end="82:22"><name pos:start="82:18" pos:end="82:18">i</name> <operator pos:start="82:20" pos:end="82:20">=</operator> <literal type="number" pos:start="82:22" pos:end="82:22">0</literal></expr>;</init> <condition pos:start="82:25" pos:end="82:38"><expr pos:start="82:25" pos:end="82:37"><name pos:start="82:25" pos:end="82:25">i</name> <operator pos:start="82:27" pos:end="82:27">&lt;</operator> <name pos:start="82:29" pos:end="82:37"><name pos:start="82:29" pos:end="82:29">s</name><operator pos:start="82:30" pos:end="82:31">-&gt;</operator><name pos:start="82:32" pos:end="82:37">height</name></name></expr>;</condition> <incr pos:start="82:40" pos:end="82:42"><expr pos:start="82:40" pos:end="82:42"><name pos:start="82:40" pos:end="82:40">i</name><operator pos:start="82:41" pos:end="82:42">++</operator></expr></incr>)</control> <block pos:start="82:45" pos:end="131:15">{<block_content pos:start="83:17" pos:end="131:15">
                <switch pos:start="83:17" pos:end="131:15">switch<condition pos:start="83:23" pos:end="83:31">(<expr pos:start="83:24" pos:end="83:30"><name pos:start="83:24" pos:end="83:30"><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:30">xfrm</name></name></expr>)</condition> <block pos:start="83:33" pos:end="131:15">{<block_content pos:start="84:17" pos:end="131:15">
                <case pos:start="84:17" pos:end="84:23">case <expr pos:start="84:22" pos:end="84:22"><literal type="number" pos:start="84:22" pos:end="84:22">1</literal></expr>:</case>
                    <for pos:start="85:21" pos:end="131:15">for <control pos:start="85:25" pos:end="85:48">(<init pos:start="85:26" pos:end="85:33"><expr pos:start="85:26" pos:end="85:32"><name pos:start="85:26" pos:end="85:26">x</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:32">off</name></expr>;</init> <condition pos:start="85:35" pos:end="85:40"><expr pos:start="85:35" pos:end="85:39"><name pos:start="85:35" pos:end="85:35">x</name> <operator pos:start="85:37" pos:end="85:37">&lt;</operator> <name pos:start="85:39" pos:end="85:39">w</name></expr>;</condition> <incr pos:start="85:42" pos:end="85:47"><expr pos:start="85:42" pos:end="85:47"><name pos:start="85:42" pos:end="85:42">x</name> <operator pos:start="85:44" pos:end="85:45">+=</operator> <literal type="number" pos:start="85:47" pos:end="85:47">3</literal></expr></incr>)</control> <block pos:start="85:50" pos:end="131:15">{<block_content pos:start="86:25" pos:end="131:15">
                        <expr_stmt pos:start="86:25" pos:end="86:51"><expr pos:start="86:25" pos:end="86:50"><name pos:start="86:25" pos:end="86:32"><name pos:start="86:25" pos:end="86:27">src</name><index pos:start="86:28" pos:end="86:32">[<expr pos:start="86:29" pos:end="86:29"><name pos:start="86:29" pos:end="86:29">x</name></expr>  ]</index></name> <operator pos:start="86:34" pos:end="86:35">+=</operator> <name pos:start="86:37" pos:end="86:44"><name pos:start="86:37" pos:end="86:39">src</name><index pos:start="86:40" pos:end="86:44">[<expr pos:start="86:41" pos:end="86:43"><name pos:start="86:41" pos:end="86:41">x</name><operator pos:start="86:42" pos:end="86:42">+</operator><literal type="number" pos:start="86:43" pos:end="86:43">1</literal></expr>]</index></name> <operator pos:start="86:46" pos:end="86:46">+</operator> <literal type="number" pos:start="86:48" pos:end="86:50">128</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="87:25" pos:end="87:51"><expr pos:start="87:25" pos:end="87:50"><name pos:start="87:25" pos:end="87:32"><name pos:start="87:25" pos:end="87:27">src</name><index pos:start="87:28" pos:end="87:32">[<expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:29">x</name><operator pos:start="87:30" pos:end="87:30">+</operator><literal type="number" pos:start="87:31" pos:end="87:31">2</literal></expr>]</index></name> <operator pos:start="87:34" pos:end="87:35">+=</operator> <name pos:start="87:37" pos:end="87:44"><name pos:start="87:37" pos:end="87:39">src</name><index pos:start="87:40" pos:end="87:44">[<expr pos:start="87:41" pos:end="87:43"><name pos:start="87:41" pos:end="87:41">x</name><operator pos:start="87:42" pos:end="87:42">+</operator><literal type="number" pos:start="87:43" pos:end="87:43">1</literal></expr>]</index></name> <operator pos:start="87:46" pos:end="87:46">+</operator> <literal type="number" pos:start="87:48" pos:end="87:50">128</literal></expr>;</expr_stmt>
                    <break pos:start="88:21" pos:end="88:26">break;</break>
                <case pos:start="89:17" pos:end="89:23">case <expr pos:start="89:22" pos:end="89:22"><literal type="number" pos:start="89:22" pos:end="89:22">2</literal></expr>:</case>
                    <for pos:start="90:21" pos:end="131:15">for <control pos:start="90:25" pos:end="90:48">(<init pos:start="90:26" pos:end="90:33"><expr pos:start="90:26" pos:end="90:32"><name pos:start="90:26" pos:end="90:26">x</name> <operator pos:start="90:28" pos:end="90:28">=</operator> <name pos:start="90:30" pos:end="90:32">off</name></expr>;</init> <condition pos:start="90:35" pos:end="90:40"><expr pos:start="90:35" pos:end="90:39"><name pos:start="90:35" pos:end="90:35">x</name> <operator pos:start="90:37" pos:end="90:37">&lt;</operator> <name pos:start="90:39" pos:end="90:39">w</name></expr>;</condition> <incr pos:start="90:42" pos:end="90:47"><expr pos:start="90:42" pos:end="90:47"><name pos:start="90:42" pos:end="90:42">x</name> <operator pos:start="90:44" pos:end="90:45">+=</operator> <literal type="number" pos:start="90:47" pos:end="90:47">3</literal></expr></incr>)</control> <block pos:start="90:50" pos:end="131:15">{<block_content pos:start="91:25" pos:end="131:15">
                        <expr_stmt pos:start="91:25" pos:end="91:51"><expr pos:start="91:25" pos:end="91:50"><name pos:start="91:25" pos:end="91:32"><name pos:start="91:25" pos:end="91:27">src</name><index pos:start="91:28" pos:end="91:32">[<expr pos:start="91:29" pos:end="91:29"><name pos:start="91:29" pos:end="91:29">x</name></expr>  ]</index></name> <operator pos:start="91:34" pos:end="91:35">+=</operator> <name pos:start="91:37" pos:end="91:44"><name pos:start="91:37" pos:end="91:39">src</name><index pos:start="91:40" pos:end="91:44">[<expr pos:start="91:41" pos:end="91:43"><name pos:start="91:41" pos:end="91:41">x</name><operator pos:start="91:42" pos:end="91:42">+</operator><literal type="number" pos:start="91:43" pos:end="91:43">1</literal></expr>]</index></name> <operator pos:start="91:46" pos:end="91:46">+</operator> <literal type="number" pos:start="91:48" pos:end="91:50">128</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="92:25" pos:end="92:69"><expr pos:start="92:25" pos:end="92:68"><name pos:start="92:25" pos:end="92:32"><name pos:start="92:25" pos:end="92:27">src</name><index pos:start="92:28" pos:end="92:32">[<expr pos:start="92:29" pos:end="92:31"><name pos:start="92:29" pos:end="92:29">x</name><operator pos:start="92:30" pos:end="92:30">+</operator><literal type="number" pos:start="92:31" pos:end="92:31">2</literal></expr>]</index></name> <operator pos:start="92:34" pos:end="92:35">+=</operator> <operator pos:start="92:37" pos:end="92:37">(</operator><operator pos:start="92:38" pos:end="92:38">(</operator><name pos:start="92:39" pos:end="92:46"><name pos:start="92:39" pos:end="92:41">src</name><index pos:start="92:42" pos:end="92:46">[<expr pos:start="92:43" pos:end="92:43"><name pos:start="92:43" pos:end="92:43">x</name></expr>  ]</index></name> <operator pos:start="92:48" pos:end="92:48">+</operator> <name pos:start="92:50" pos:end="92:57"><name pos:start="92:50" pos:end="92:52">src</name><index pos:start="92:53" pos:end="92:57">[<expr pos:start="92:54" pos:end="92:56"><name pos:start="92:54" pos:end="92:54">x</name><operator pos:start="92:55" pos:end="92:55">+</operator><literal type="number" pos:start="92:56" pos:end="92:56">1</literal></expr>]</index></name><operator pos:start="92:58" pos:end="92:58">)</operator><operator pos:start="92:59" pos:end="92:60">&gt;&gt;</operator><literal type="number" pos:start="92:61" pos:end="92:61">1</literal><operator pos:start="92:62" pos:end="92:62">)</operator> <operator pos:start="92:64" pos:end="92:64">+</operator> <literal type="number" pos:start="92:66" pos:end="92:68">128</literal></expr>;</expr_stmt>
                    <break pos:start="93:21" pos:end="93:26">break;</break>
                <case pos:start="94:17" pos:end="94:23">case <expr pos:start="94:22" pos:end="94:22"><literal type="number" pos:start="94:22" pos:end="94:22">3</literal></expr>:</case>
                    <for pos:start="95:21" pos:end="131:15">for <control pos:start="95:25" pos:end="95:48">(<init pos:start="95:26" pos:end="95:33"><expr pos:start="95:26" pos:end="95:32"><name pos:start="95:26" pos:end="95:26">x</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:32">off</name></expr>;</init> <condition pos:start="95:35" pos:end="95:40"><expr pos:start="95:35" pos:end="95:39"><name pos:start="95:35" pos:end="95:35">x</name> <operator pos:start="95:37" pos:end="95:37">&lt;</operator> <name pos:start="95:39" pos:end="95:39">w</name></expr>;</condition> <incr pos:start="95:42" pos:end="95:47"><expr pos:start="95:42" pos:end="95:47"><name pos:start="95:42" pos:end="95:42">x</name> <operator pos:start="95:44" pos:end="95:45">+=</operator> <literal type="number" pos:start="95:47" pos:end="95:47">3</literal></expr></incr>)</control> <block pos:start="95:50" pos:end="131:15">{<block_content pos:start="96:25" pos:end="131:15">
                        <decl_stmt pos:start="96:25" pos:end="96:73"><decl pos:start="96:25" pos:end="96:72"><type pos:start="96:25" pos:end="96:27"><name pos:start="96:25" pos:end="96:27">int</name></type> <name pos:start="96:29" pos:end="96:29">g</name> <init pos:start="96:31" pos:end="96:72">= <expr pos:start="96:33" pos:end="96:72"><name pos:start="96:33" pos:end="96:40"><name pos:start="96:33" pos:end="96:35">src</name><index pos:start="96:36" pos:end="96:40">[<expr pos:start="96:37" pos:end="96:39"><name pos:start="96:37" pos:end="96:37">x</name><operator pos:start="96:38" pos:end="96:38">+</operator><literal type="number" pos:start="96:39" pos:end="96:39">0</literal></expr>]</index></name> <operator pos:start="96:42" pos:end="96:42">-</operator> <operator pos:start="96:44" pos:end="96:44">(</operator><operator pos:start="96:45" pos:end="96:45">(</operator><name pos:start="96:46" pos:end="96:53"><name pos:start="96:46" pos:end="96:48">src</name><index pos:start="96:49" pos:end="96:53">[<expr pos:start="96:50" pos:end="96:52"><name pos:start="96:50" pos:end="96:50">x</name><operator pos:start="96:51" pos:end="96:51">+</operator><literal type="number" pos:start="96:52" pos:end="96:52">2</literal></expr>]</index></name><operator pos:start="96:54" pos:end="96:54">+</operator><name pos:start="96:55" pos:end="96:62"><name pos:start="96:55" pos:end="96:57">src</name><index pos:start="96:58" pos:end="96:62">[<expr pos:start="96:59" pos:end="96:61"><name pos:start="96:59" pos:end="96:59">x</name><operator pos:start="96:60" pos:end="96:60">+</operator><literal type="number" pos:start="96:61" pos:end="96:61">1</literal></expr>]</index></name><operator pos:start="96:63" pos:end="96:63">)</operator><operator pos:start="96:64" pos:end="96:65">&gt;&gt;</operator><literal type="number" pos:start="96:66" pos:end="96:66">2</literal><operator pos:start="96:67" pos:end="96:67">)</operator> <operator pos:start="96:69" pos:end="96:69">+</operator> <literal type="number" pos:start="96:71" pos:end="96:72">64</literal></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="97:25" pos:end="97:54"><expr pos:start="97:25" pos:end="97:53"><name pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:27">src</name><index pos:start="97:28" pos:end="97:32">[<expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:29">x</name><operator pos:start="97:30" pos:end="97:30">+</operator><literal type="number" pos:start="97:31" pos:end="97:31">0</literal></expr>]</index></name> <operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:43"><name pos:start="97:36" pos:end="97:38">src</name><index pos:start="97:39" pos:end="97:43">[<expr pos:start="97:40" pos:end="97:42"><name pos:start="97:40" pos:end="97:40">x</name><operator pos:start="97:41" pos:end="97:41">+</operator><literal type="number" pos:start="97:42" pos:end="97:42">2</literal></expr>]</index></name> <operator pos:start="97:45" pos:end="97:45">+</operator> <name pos:start="97:47" pos:end="97:47">g</name> <operator pos:start="97:49" pos:end="97:49">+</operator> <literal type="number" pos:start="97:51" pos:end="97:53">128</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="98:25" pos:end="98:54"><expr pos:start="98:25" pos:end="98:53"><name pos:start="98:25" pos:end="98:32"><name pos:start="98:25" pos:end="98:27">src</name><index pos:start="98:28" pos:end="98:32">[<expr pos:start="98:29" pos:end="98:31"><name pos:start="98:29" pos:end="98:29">x</name><operator pos:start="98:30" pos:end="98:30">+</operator><literal type="number" pos:start="98:31" pos:end="98:31">2</literal></expr>]</index></name> <operator pos:start="98:34" pos:end="98:34">=</operator> <name pos:start="98:36" pos:end="98:43"><name pos:start="98:36" pos:end="98:38">src</name><index pos:start="98:39" pos:end="98:43">[<expr pos:start="98:40" pos:end="98:42"><name pos:start="98:40" pos:end="98:40">x</name><operator pos:start="98:41" pos:end="98:41">+</operator><literal type="number" pos:start="98:42" pos:end="98:42">1</literal></expr>]</index></name> <operator pos:start="98:45" pos:end="98:45">+</operator> <name pos:start="98:47" pos:end="98:47">g</name> <operator pos:start="98:49" pos:end="98:49">+</operator> <literal type="number" pos:start="98:51" pos:end="98:53">128</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="99:25" pos:end="99:37"><expr pos:start="99:25" pos:end="99:36"><name pos:start="99:25" pos:end="99:32"><name pos:start="99:25" pos:end="99:27">src</name><index pos:start="99:28" pos:end="99:32">[<expr pos:start="99:29" pos:end="99:31"><name pos:start="99:29" pos:end="99:29">x</name><operator pos:start="99:30" pos:end="99:30">+</operator><literal type="number" pos:start="99:31" pos:end="99:31">1</literal></expr>]</index></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:36">g</name></expr>;</expr_stmt>
                    <break pos:start="100:21" pos:end="100:26">break;</break>
                <case pos:start="101:17" pos:end="101:23">case <expr pos:start="101:22" pos:end="101:22"><literal type="number" pos:start="101:22" pos:end="101:22">4</literal></expr>:</case>
                    <for pos:start="102:21" pos:end="111:9">for <control pos:start="102:25" pos:end="102:48">(<init pos:start="102:26" pos:end="102:33"><expr pos:start="102:26" pos:end="102:32"><name pos:start="102:26" pos:end="102:26">x</name> <operator pos:start="102:28" pos:end="102:28">=</operator> <name pos:start="102:30" pos:end="102:32">off</name></expr>;</init> <condition pos:start="102:35" pos:end="102:40"><expr pos:start="102:35" pos:end="102:39"><name pos:start="102:35" pos:end="102:35">x</name> <operator pos:start="102:37" pos:end="102:37">&lt;</operator> <name pos:start="102:39" pos:end="102:39">w</name></expr>;</condition> <incr pos:start="102:42" pos:end="102:47"><expr pos:start="102:42" pos:end="102:47"><name pos:start="102:42" pos:end="102:42">x</name> <operator pos:start="102:44" pos:end="102:45">+=</operator> <literal type="number" pos:start="102:47" pos:end="102:47">3</literal></expr></incr>)</control> <block pos:start="102:50" pos:end="111:9">{<block_content pos:start="103:25" pos:end="110:51">
                        <decl_stmt pos:start="103:25" pos:end="103:105"><decl pos:start="103:25" pos:end="103:104"><type pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:27">int</name></type> <name pos:start="103:29" pos:end="103:29">r</name>    <init pos:start="103:34" pos:end="103:104">= <expr pos:start="103:36" pos:end="103:104"><name pos:start="103:36" pos:end="103:43"><name pos:start="103:36" pos:end="103:38">src</name><index pos:start="103:39" pos:end="103:43">[<expr pos:start="103:40" pos:end="103:42"><name pos:start="103:40" pos:end="103:40">x</name><operator pos:start="103:41" pos:end="103:41">+</operator><literal type="number" pos:start="103:42" pos:end="103:42">0</literal></expr>]</index></name> <operator pos:start="103:45" pos:end="103:45">-</operator> <operator pos:start="103:47" pos:end="103:47">(</operator><operator pos:start="103:48" pos:end="103:48">(</operator>                       <literal type="number" pos:start="103:72" pos:end="103:74">359</literal> <operator pos:start="103:76" pos:end="103:76">*</operator> <operator pos:start="103:78" pos:end="103:78">(</operator><name pos:start="103:79" pos:end="103:86"><name pos:start="103:79" pos:end="103:81">src</name><index pos:start="103:82" pos:end="103:86">[<expr pos:start="103:83" pos:end="103:85"><name pos:start="103:83" pos:end="103:83">x</name><operator pos:start="103:84" pos:end="103:84">+</operator><literal type="number" pos:start="103:85" pos:end="103:85">2</literal></expr>]</index></name><operator pos:start="103:87" pos:end="103:87">-</operator><literal type="number" pos:start="103:88" pos:end="103:90">128</literal><operator pos:start="103:91" pos:end="103:91">)</operator> <operator pos:start="103:93" pos:end="103:93">+</operator> <literal type="number" pos:start="103:95" pos:end="103:97">490</literal><operator pos:start="103:98" pos:end="103:98">)</operator> <operator pos:start="103:100" pos:end="103:101">&gt;&gt;</operator> <literal type="number" pos:start="103:103" pos:end="103:103">8</literal><operator pos:start="103:104" pos:end="103:104">)</operator></expr></init></decl>;</decl_stmt>
                        <decl_stmt pos:start="104:25" pos:end="104:105"><decl pos:start="104:25" pos:end="104:104"><type pos:start="104:25" pos:end="104:27"><name pos:start="104:25" pos:end="104:27">int</name></type> <name pos:start="104:29" pos:end="104:29">g</name>    <init pos:start="104:34" pos:end="104:104">= <expr pos:start="104:36" pos:end="104:104"><name pos:start="104:36" pos:end="104:43"><name pos:start="104:36" pos:end="104:38">src</name><index pos:start="104:39" pos:end="104:43">[<expr pos:start="104:40" pos:end="104:42"><name pos:start="104:40" pos:end="104:40">x</name><operator pos:start="104:41" pos:end="104:41">+</operator><literal type="number" pos:start="104:42" pos:end="104:42">0</literal></expr>]</index></name> <operator pos:start="104:45" pos:end="104:45">-</operator> <operator pos:start="104:47" pos:end="104:47">(</operator><operator pos:start="104:48" pos:end="104:48">(</operator> <literal type="number" pos:start="104:50" pos:end="104:51">88</literal> <operator pos:start="104:53" pos:end="104:53">*</operator> <operator pos:start="104:55" pos:end="104:55">(</operator><name pos:start="104:56" pos:end="104:63"><name pos:start="104:56" pos:end="104:58">src</name><index pos:start="104:59" pos:end="104:63">[<expr pos:start="104:60" pos:end="104:62"><name pos:start="104:60" pos:end="104:60">x</name><operator pos:start="104:61" pos:end="104:61">+</operator><literal type="number" pos:start="104:62" pos:end="104:62">1</literal></expr>]</index></name><operator pos:start="104:64" pos:end="104:64">-</operator><literal type="number" pos:start="104:65" pos:end="104:67">128</literal><operator pos:start="104:68" pos:end="104:68">)</operator> <operator pos:start="104:70" pos:end="104:70">-</operator> <literal type="number" pos:start="104:72" pos:end="104:74">183</literal> <operator pos:start="104:76" pos:end="104:76">*</operator> <operator pos:start="104:78" pos:end="104:78">(</operator><name pos:start="104:79" pos:end="104:86"><name pos:start="104:79" pos:end="104:81">src</name><index pos:start="104:82" pos:end="104:86">[<expr pos:start="104:83" pos:end="104:85"><name pos:start="104:83" pos:end="104:83">x</name><operator pos:start="104:84" pos:end="104:84">+</operator><literal type="number" pos:start="104:85" pos:end="104:85">2</literal></expr>]</index></name><operator pos:start="104:87" pos:end="104:87">-</operator><literal type="number" pos:start="104:88" pos:end="104:90">128</literal><operator pos:start="104:91" pos:end="104:91">)</operator> <operator pos:start="104:93" pos:end="104:93">+</operator>  <literal type="number" pos:start="104:96" pos:end="104:97">30</literal><operator pos:start="104:98" pos:end="104:98">)</operator> <operator pos:start="104:100" pos:end="104:101">&gt;&gt;</operator> <literal type="number" pos:start="104:103" pos:end="104:103">8</literal><operator pos:start="104:104" pos:end="104:104">)</operator></expr></init></decl>;</decl_stmt>
                        <decl_stmt pos:start="105:25" pos:end="105:105"><decl pos:start="105:25" pos:end="105:104"><type pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:27">int</name></type> <name pos:start="105:29" pos:end="105:29">b</name>    <init pos:start="105:34" pos:end="105:104">= <expr pos:start="105:36" pos:end="105:104"><name pos:start="105:36" pos:end="105:43"><name pos:start="105:36" pos:end="105:38">src</name><index pos:start="105:39" pos:end="105:43">[<expr pos:start="105:40" pos:end="105:42"><name pos:start="105:40" pos:end="105:40">x</name><operator pos:start="105:41" pos:end="105:41">+</operator><literal type="number" pos:start="105:42" pos:end="105:42">0</literal></expr>]</index></name> <operator pos:start="105:45" pos:end="105:45">+</operator> <operator pos:start="105:47" pos:end="105:47">(</operator><operator pos:start="105:48" pos:end="105:48">(</operator><literal type="number" pos:start="105:49" pos:end="105:51">454</literal> <operator pos:start="105:53" pos:end="105:53">*</operator> <operator pos:start="105:55" pos:end="105:55">(</operator><name pos:start="105:56" pos:end="105:63"><name pos:start="105:56" pos:end="105:58">src</name><index pos:start="105:59" pos:end="105:63">[<expr pos:start="105:60" pos:end="105:62"><name pos:start="105:60" pos:end="105:60">x</name><operator pos:start="105:61" pos:end="105:61">+</operator><literal type="number" pos:start="105:62" pos:end="105:62">1</literal></expr>]</index></name><operator pos:start="105:64" pos:end="105:64">-</operator><literal type="number" pos:start="105:65" pos:end="105:67">128</literal><operator pos:start="105:68" pos:end="105:68">)</operator>                        <operator pos:start="105:93" pos:end="105:93">+</operator> <literal type="number" pos:start="105:95" pos:end="105:97">574</literal><operator pos:start="105:98" pos:end="105:98">)</operator> <operator pos:start="105:100" pos:end="105:101">&gt;&gt;</operator> <literal type="number" pos:start="105:103" pos:end="105:103">8</literal><operator pos:start="105:104" pos:end="105:104">)</operator></expr></init></decl>;</decl_stmt>
                        <expr_stmt pos:start="106:25" pos:end="106:52"><expr pos:start="106:25" pos:end="106:51"><name pos:start="106:25" pos:end="106:32"><name pos:start="106:25" pos:end="106:27">src</name><index pos:start="106:28" pos:end="106:32">[<expr pos:start="106:29" pos:end="106:31"><name pos:start="106:29" pos:end="106:29">x</name><operator pos:start="106:30" pos:end="106:30">+</operator><literal type="number" pos:start="106:31" pos:end="106:31">0</literal></expr>]</index></name> <operator pos:start="106:34" pos:end="106:34">=</operator> <call pos:start="106:36" pos:end="106:51"><name pos:start="106:36" pos:end="106:48">av_clip_uint8</name><argument_list pos:start="106:49" pos:end="106:51">(<argument pos:start="106:50" pos:end="106:50"><expr pos:start="106:50" pos:end="106:50"><name pos:start="106:50" pos:end="106:50">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="107:25" pos:end="107:52"><expr pos:start="107:25" pos:end="107:51"><name pos:start="107:25" pos:end="107:32"><name pos:start="107:25" pos:end="107:27">src</name><index pos:start="107:28" pos:end="107:32">[<expr pos:start="107:29" pos:end="107:31"><name pos:start="107:29" pos:end="107:29">x</name><operator pos:start="107:30" pos:end="107:30">+</operator><literal type="number" pos:start="107:31" pos:end="107:31">1</literal></expr>]</index></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <call pos:start="107:36" pos:end="107:51"><name pos:start="107:36" pos:end="107:48">av_clip_uint8</name><argument_list pos:start="107:49" pos:end="107:51">(<argument pos:start="107:50" pos:end="107:50"><expr pos:start="107:50" pos:end="107:50"><name pos:start="107:50" pos:end="107:50">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="108:25" pos:end="108:52"><expr pos:start="108:25" pos:end="108:51"><name pos:start="108:25" pos:end="108:32"><name pos:start="108:25" pos:end="108:27">src</name><index pos:start="108:28" pos:end="108:32">[<expr pos:start="108:29" pos:end="108:31"><name pos:start="108:29" pos:end="108:29">x</name><operator pos:start="108:30" pos:end="108:30">+</operator><literal type="number" pos:start="108:31" pos:end="108:31">2</literal></expr>]</index></name> <operator pos:start="108:34" pos:end="108:34">=</operator> <call pos:start="108:36" pos:end="108:51"><name pos:start="108:36" pos:end="108:48">av_clip_uint8</name><argument_list pos:start="108:49" pos:end="108:51">(<argument pos:start="108:50" pos:end="108:50"><expr pos:start="108:50" pos:end="108:50"><name pos:start="108:50" pos:end="108:50">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:start="109:21" pos:end="109:26">break;</break>
                <expr_stmt pos:start="110:17" pos:end="110:51"><expr pos:start="110:17" pos:end="110:50"><name pos:start="110:17" pos:end="110:19">src</name> <operator pos:start="110:21" pos:end="110:22">+=</operator> <name pos:start="110:24" pos:end="110:50"><name pos:start="110:24" pos:end="110:24">s</name><operator pos:start="110:25" pos:end="110:26">-&gt;</operator><name pos:start="110:27" pos:end="110:37">picture_ptr</name><operator pos:start="110:38" pos:end="110:39">-&gt;</operator><name pos:start="110:40" pos:end="110:47">linesize</name><index pos:start="110:48" pos:end="110:50">[<expr pos:start="110:49" pos:end="110:49"><literal type="number" pos:start="110:49" pos:end="110:49">0</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for><if_stmt pos:start="111:10" pos:end="112:66"><else pos:start="111:10" pos:end="112:66">else<block type="pseudo" pos:start="112:13" pos:end="112:66"><block_content pos:start="112:13" pos:end="112:66">
            <expr_stmt pos:start="112:13" pos:end="112:66"><expr pos:start="112:13" pos:end="112:65"><call pos:start="112:13" pos:end="112:65"><name pos:start="112:13" pos:end="112:41">avpriv_report_missing_feature</name><argument_list pos:start="112:42" pos:end="112:65">(<argument pos:start="112:43" pos:end="112:50"><expr pos:start="112:43" pos:end="112:50"><name pos:start="112:43" pos:end="112:50"><name pos:start="112:43" pos:end="112:43">s</name><operator pos:start="112:44" pos:end="112:45">-&gt;</operator><name pos:start="112:46" pos:end="112:50">avctx</name></name></expr></argument>, <argument pos:start="112:53" pos:end="112:64"><expr pos:start="112:53" pos:end="112:64"><literal type="string" pos:start="112:53" pos:end="112:64">"16bit xfrm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="113:5" pos:end="131:15"><if pos:start="113:5" pos:end="131:15">if <condition pos:start="113:8" pos:end="113:14">(<expr pos:start="113:9" pos:end="113:13"><name pos:start="113:9" pos:end="113:13">shift</name></expr>)</condition> <block pos:start="113:16" pos:end="131:15">{<block_content pos:start="114:9" pos:end="131:15"> <comment type="block" pos:start="113:18" pos:end="113:73">/* we need to do point transform or normalize samples */</comment>
        <decl_stmt pos:start="114:9" pos:end="114:17"><decl pos:start="114:9" pos:end="114:13"><type pos:start="114:9" pos:end="114:11"><name pos:start="114:9" pos:end="114:11">int</name></type> <name pos:start="114:13" pos:end="114:13">x</name></decl>, <decl pos:start="114:16" pos:end="114:16"><type ref="prev" pos:start="114:9" pos:end="114:11"/><name pos:start="114:16" pos:end="114:16">w</name></decl>;</decl_stmt>
        <expr_stmt pos:start="115:9" pos:end="115:40"><expr pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:9">w</name> <operator pos:start="115:11" pos:end="115:11">=</operator> <name pos:start="115:13" pos:end="115:20"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:20">width</name></name> <operator pos:start="115:22" pos:end="115:22">*</operator> <name pos:start="115:24" pos:end="115:39"><name pos:start="115:24" pos:end="115:24">s</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:39">nb_components</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="116:9" pos:end="131:15"><if pos:start="116:9" pos:end="131:15">if <condition pos:start="116:12" pos:end="116:25">(<expr pos:start="116:13" pos:end="116:24"><name pos:start="116:13" pos:end="116:19"><name pos:start="116:13" pos:end="116:13">s</name><operator pos:start="116:14" pos:end="116:15">-&gt;</operator><name pos:start="116:16" pos:end="116:19">bits</name></name> <operator pos:start="116:21" pos:end="116:22">&lt;=</operator> <literal type="number" pos:start="116:24" pos:end="116:24">8</literal></expr>)</condition> <block pos:start="116:27" pos:end="131:15">{<block_content pos:start="117:13" pos:end="131:15">
            <decl_stmt pos:start="117:13" pos:end="117:51"><decl pos:start="117:13" pos:end="117:50"><type pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:19">uint8_t</name> <modifier pos:start="117:21" pos:end="117:21">*</modifier></type><name pos:start="117:22" pos:end="117:24">src</name> <init pos:start="117:26" pos:end="117:50">= <expr pos:start="117:28" pos:end="117:50"><name pos:start="117:28" pos:end="117:50"><name pos:start="117:28" pos:end="117:28">s</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:41">picture_ptr</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:47">data</name><index pos:start="117:48" pos:end="117:50">[<expr pos:start="117:49" pos:end="117:49"><literal type="number" pos:start="117:49" pos:end="117:49">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <for pos:start="118:13" pos:end="122:9">for <control pos:start="118:17" pos:end="118:43">(<init pos:start="118:18" pos:end="118:23"><expr pos:start="118:18" pos:end="118:22"><name pos:start="118:18" pos:end="118:18">i</name> <operator pos:start="118:20" pos:end="118:20">=</operator> <literal type="number" pos:start="118:22" pos:end="118:22">0</literal></expr>;</init> <condition pos:start="118:25" pos:end="118:38"><expr pos:start="118:25" pos:end="118:37"><name pos:start="118:25" pos:end="118:25">i</name> <operator pos:start="118:27" pos:end="118:27">&lt;</operator> <name pos:start="118:29" pos:end="118:37"><name pos:start="118:29" pos:end="118:29">s</name><operator pos:start="118:30" pos:end="118:31">-&gt;</operator><name pos:start="118:32" pos:end="118:37">height</name></name></expr>;</condition> <incr pos:start="118:40" pos:end="118:42"><expr pos:start="118:40" pos:end="118:42"><name pos:start="118:40" pos:end="118:40">i</name><operator pos:start="118:41" pos:end="118:42">++</operator></expr></incr>)</control> <block pos:start="118:45" pos:end="122:9">{<block_content pos:start="119:17" pos:end="121:51">
                <for pos:start="119:17" pos:end="120:37">for <control pos:start="119:21" pos:end="119:49">(<init pos:start="119:22" pos:end="119:29"><expr pos:start="119:22" pos:end="119:28"><name pos:start="119:22" pos:end="119:22">x</name> <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:28">off</name></expr>;</init> <condition pos:start="119:31" pos:end="119:36"><expr pos:start="119:31" pos:end="119:35"><name pos:start="119:31" pos:end="119:31">x</name> <operator pos:start="119:33" pos:end="119:33">&lt;</operator> <name pos:start="119:35" pos:end="119:35">w</name></expr>;</condition> <incr pos:start="119:38" pos:end="119:48"><expr pos:start="119:38" pos:end="119:48"><name pos:start="119:38" pos:end="119:38">x</name> <operator pos:start="119:40" pos:end="119:41">+=</operator> <name pos:start="119:43" pos:end="119:48">stride</name></expr></incr>)</control><block type="pseudo" pos:start="120:21" pos:end="120:37"><block_content pos:start="120:21" pos:end="120:37">
                    <expr_stmt pos:start="120:21" pos:end="120:37"><expr pos:start="120:21" pos:end="120:36"><name pos:start="120:21" pos:end="120:26"><name pos:start="120:21" pos:end="120:23">src</name><index pos:start="120:24" pos:end="120:26">[<expr pos:start="120:25" pos:end="120:25"><name pos:start="120:25" pos:end="120:25">x</name></expr>]</index></name> <operator pos:start="120:28" pos:end="120:30">&lt;&lt;=</operator> <name pos:start="120:32" pos:end="120:36">shift</name></expr>;</expr_stmt></block_content></block></for>
                <expr_stmt pos:start="121:17" pos:end="121:51"><expr pos:start="121:17" pos:end="121:50"><name pos:start="121:17" pos:end="121:19">src</name> <operator pos:start="121:21" pos:end="121:22">+=</operator> <name pos:start="121:24" pos:end="121:50"><name pos:start="121:24" pos:end="121:24">s</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:37">picture_ptr</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:47">linesize</name><index pos:start="121:48" pos:end="121:50">[<expr pos:start="121:49" pos:end="121:49"><literal type="number" pos:start="121:49" pos:end="121:49">0</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></for> <if_stmt pos:start="122:11" pos:end="131:15"><else pos:start="122:11" pos:end="131:15">else <block pos:start="122:16" pos:end="131:15">{<block_content pos:start="123:13" pos:end="131:15">
            <decl_stmt pos:start="123:13" pos:end="123:64"><decl pos:start="123:13" pos:end="123:63"><type pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:20">uint16_t</name> <modifier pos:start="123:22" pos:end="123:22">*</modifier></type><name pos:start="123:23" pos:end="123:25">src</name> <init pos:start="123:27" pos:end="123:63">= <expr pos:start="123:29" pos:end="123:63"><operator pos:start="123:29" pos:end="123:29">(</operator><name pos:start="123:30" pos:end="123:37">uint16_t</name> <operator pos:start="123:39" pos:end="123:39">*</operator><operator pos:start="123:40" pos:end="123:40">)</operator><name pos:start="123:41" pos:end="123:63"><name pos:start="123:41" pos:end="123:41">s</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:54">picture_ptr</name><operator pos:start="123:55" pos:end="123:56">-&gt;</operator><name pos:start="123:57" pos:end="123:60">data</name><index pos:start="123:61" pos:end="123:63">[<expr pos:start="123:62" pos:end="123:62"><literal type="number" pos:start="123:62" pos:end="123:62">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <for pos:start="124:13" pos:end="131:15">for <control pos:start="124:17" pos:end="124:43">(<init pos:start="124:18" pos:end="124:23"><expr pos:start="124:18" pos:end="124:22"><name pos:start="124:18" pos:end="124:18">i</name> <operator pos:start="124:20" pos:end="124:20">=</operator> <literal type="number" pos:start="124:22" pos:end="124:22">0</literal></expr>;</init> <condition pos:start="124:25" pos:end="124:38"><expr pos:start="124:25" pos:end="124:37"><name pos:start="124:25" pos:end="124:25">i</name> <operator pos:start="124:27" pos:end="124:27">&lt;</operator> <name pos:start="124:29" pos:end="124:37"><name pos:start="124:29" pos:end="124:29">s</name><operator pos:start="124:30" pos:end="124:31">-&gt;</operator><name pos:start="124:32" pos:end="124:37">height</name></name></expr>;</condition> <incr pos:start="124:40" pos:end="124:42"><expr pos:start="124:40" pos:end="124:42"><name pos:start="124:40" pos:end="124:40">i</name><operator pos:start="124:41" pos:end="124:42">++</operator></expr></incr>)</control> <block pos:start="124:45" pos:end="131:15">{<block_content pos:start="125:17" pos:end="131:15">
                <for pos:start="125:17" pos:end="126:37">for <control pos:start="125:21" pos:end="125:39">(<init pos:start="125:22" pos:end="125:27"><expr pos:start="125:22" pos:end="125:26"><name pos:start="125:22" pos:end="125:22">x</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <literal type="number" pos:start="125:26" pos:end="125:26">0</literal></expr>;</init> <condition pos:start="125:29" pos:end="125:34"><expr pos:start="125:29" pos:end="125:33"><name pos:start="125:29" pos:end="125:29">x</name> <operator pos:start="125:31" pos:end="125:31">&lt;</operator> <name pos:start="125:33" pos:end="125:33">w</name></expr>;</condition> <incr pos:start="125:36" pos:end="125:38"><expr pos:start="125:36" pos:end="125:38"><name pos:start="125:36" pos:end="125:36">x</name><operator pos:start="125:37" pos:end="125:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="126:21" pos:end="126:37"><block_content pos:start="126:21" pos:end="126:37">
                    <expr_stmt pos:start="126:21" pos:end="126:37"><expr pos:start="126:21" pos:end="126:36"><name pos:start="126:21" pos:end="126:26"><name pos:start="126:21" pos:end="126:23">src</name><index pos:start="126:24" pos:end="126:26">[<expr pos:start="126:25" pos:end="126:25"><name pos:start="126:25" pos:end="126:25">x</name></expr>]</index></name> <operator pos:start="126:28" pos:end="126:30">&lt;&lt;=</operator> <name pos:start="126:32" pos:end="126:36">shift</name></expr>;</expr_stmt></block_content></block></for>
                <expr_stmt pos:start="127:17" pos:end="127:55"><expr pos:start="127:17" pos:end="127:54"><name pos:start="127:17" pos:end="127:19">src</name> <operator pos:start="127:21" pos:end="127:22">+=</operator> <name pos:start="127:24" pos:end="127:50"><name pos:start="127:24" pos:end="127:24">s</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:37">picture_ptr</name><operator pos:start="127:38" pos:end="127:39">-&gt;</operator><name pos:start="127:40" pos:end="127:47">linesize</name><index pos:start="127:48" pos:end="127:50">[<expr pos:start="127:49" pos:end="127:49"><literal type="number" pos:start="127:49" pos:end="127:49">0</literal></expr>]</index></name> <operator pos:start="127:52" pos:end="127:52">/</operator> <literal type="number" pos:start="127:54" pos:end="127:54">2</literal></expr>;</expr_stmt>
<label pos:start="128:1" pos:end="128:4"><name pos:start="128:1" pos:end="128:3">end</name>:</label>
    <expr_stmt pos:start="129:5" pos:end="129:19"><expr pos:start="129:5" pos:end="129:18"><call pos:start="129:5" pos:end="129:18"><name pos:start="129:5" pos:end="129:11">av_free</name><argument_list pos:start="129:12" pos:end="129:18">(<argument pos:start="129:13" pos:end="129:17"><expr pos:start="129:13" pos:end="129:17"><name pos:start="129:13" pos:end="129:17">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="130:5" pos:end="130:18"><expr pos:start="130:5" pos:end="130:17"><call pos:start="130:5" pos:end="130:17"><name pos:start="130:5" pos:end="130:11">av_free</name><argument_list pos:start="130:12" pos:end="130:17">(<argument pos:start="130:13" pos:end="130:16"><expr pos:start="130:13" pos:end="130:16"><name pos:start="130:13" pos:end="130:16">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="131:5" pos:end="131:15">return <expr pos:start="131:12" pos:end="131:14"><name pos:start="131:12" pos:end="131:14">ret</name></expr>;</return></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></switch></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
