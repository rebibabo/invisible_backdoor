<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12052.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">mpcore_scu_write</name><parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:68"><decl pos:start="1:44" pos:end="1:68"><type pos:start="1:44" pos:end="1:68"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:68">offset</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:43">value</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:5">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">mpcore_priv_state</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:54">= <expr pos:start="7:28" pos:end="7:54"><operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:45">mpcore_priv_state</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator><name pos:start="7:49" pos:end="7:54">opaque</name></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:13">/* SCU */</comment>

    <switch pos:start="11:5" pos:end="29:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="29:5">{<block_content pos:start="13:5" pos:end="27:67">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">0</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:36">/* Control register.  */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">scu_control</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <name pos:start="15:26" pos:end="15:30">value</name> <operator pos:start="15:32" pos:end="15:32">&amp;</operator> <literal type="number" pos:start="15:34" pos:end="15:34">1</literal></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><literal type="number" pos:start="19:10" pos:end="19:13">0x0c</literal></expr>:</case> <comment type="block" pos:start="19:16" pos:end="19:37">/* Invalidate all.  */</comment>

        <comment type="block" pos:start="21:9" pos:end="21:56">/* This is a no-op as cache is not emulated.  */</comment>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <default pos:start="25:5" pos:end="25:12">default:</default>

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><call pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:16">hw_error</name><argument_list pos:start="27:17" pos:end="27:66">(<argument pos:start="27:18" pos:end="27:52"><expr pos:start="27:18" pos:end="27:52"><literal type="string" pos:start="27:18" pos:end="27:52">"mpcore_priv_read: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="27:55" pos:end="27:65"><expr pos:start="27:55" pos:end="27:65"><operator pos:start="27:55" pos:end="27:55">(</operator><name pos:start="27:56" pos:end="27:58">int</name><operator pos:start="27:59" pos:end="27:59">)</operator><name pos:start="27:60" pos:end="27:65">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
