<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7904.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">filter_frame</name><parameter_list pos:start="1:24" pos:end="1:59">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:36">AVFilterLink</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">inlink</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:53">AVFrame</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:45">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:38">= <expr pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:33">inlink</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VolumeContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">vol</name>    <init pos:start="7:27" pos:end="7:45">= <expr pos:start="7:29" pos:end="7:45"><name pos:start="7:29" pos:end="7:45"><name pos:start="7:29" pos:end="7:34">inlink</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:39">dst</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:45">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVFilterLink</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:25">outlink</name> <init pos:start="9:27" pos:end="9:51">= <expr pos:start="9:29" pos:end="9:51"><name pos:start="9:29" pos:end="9:51"><name pos:start="9:29" pos:end="9:34">inlink</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:39">dst</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:48">outputs</name><index pos:start="9:49" pos:end="9:51">[<expr pos:start="9:50" pos:end="9:50"><literal type="number" pos:start="9:50" pos:end="9:50">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">nb_samples</name>        <init pos:start="11:27" pos:end="11:43">= <expr pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:31">buf</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:43">nb_samples</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">out_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:80"><decl pos:start="17:5" pos:end="17:79"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:19">AVFrameSideData</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:23">sd</name> <init pos:start="17:25" pos:end="17:79">= <expr pos:start="17:27" pos:end="17:79"><call pos:start="17:27" pos:end="17:79"><name pos:start="17:27" pos:end="17:48">av_frame_get_side_data</name><argument_list pos:start="17:49" pos:end="17:79">(<argument pos:start="17:50" pos:end="17:52"><expr pos:start="17:50" pos:end="17:52"><name pos:start="17:50" pos:end="17:52">buf</name></expr></argument>, <argument pos:start="17:55" pos:end="17:78"><expr pos:start="17:55" pos:end="17:78"><name pos:start="17:55" pos:end="17:78">AV_FRAME_DATA_REPLAYGAIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="95:5"><if pos:start="23:5" pos:end="95:5">if <condition pos:start="23:8" pos:end="23:51">(<expr pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:10">sd</name> <operator pos:start="23:12" pos:end="23:13">&amp;&amp;</operator> <name pos:start="23:15" pos:end="23:29"><name pos:start="23:15" pos:end="23:17">vol</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:29">replaygain</name></name> <operator pos:start="23:31" pos:end="23:32">!=</operator> <name pos:start="23:34" pos:end="23:50">REPLAYGAIN_IGNORE</name></expr>)</condition> <block pos:start="23:53" pos:end="95:5">{<block_content pos:start="25:9" pos:end="93:65">

        <if_stmt pos:start="25:9" pos:end="91:9"><if pos:start="25:9" pos:end="91:9">if <condition pos:start="25:12" pos:end="25:47">(<expr pos:start="25:13" pos:end="25:46"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:15">vol</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:27">replaygain</name></name> <operator pos:start="25:29" pos:end="25:30">!=</operator> <name pos:start="25:32" pos:end="25:46">REPLAYGAIN_DROP</name></expr>)</condition> <block pos:start="25:49" pos:end="91:9">{<block_content pos:start="27:13" pos:end="89:29">

            <decl_stmt pos:start="27:13" pos:end="27:63"><decl pos:start="27:13" pos:end="27:62"><type pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:24">AVReplayGain</name> <modifier pos:start="27:26" pos:end="27:26">*</modifier></type><name pos:start="27:27" pos:end="27:36">replaygain</name> <init pos:start="27:38" pos:end="27:62">= <expr pos:start="27:40" pos:end="27:62"><operator pos:start="27:40" pos:end="27:40">(</operator><name pos:start="27:41" pos:end="27:52">AVReplayGain</name><operator pos:start="27:53" pos:end="27:53">*</operator><operator pos:start="27:54" pos:end="27:54">)</operator><name pos:start="27:55" pos:end="27:62"><name pos:start="27:55" pos:end="27:56">sd</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:62">data</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:35"><decl pos:start="29:13" pos:end="29:34"><type pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:19">int32_t</name></type> <name pos:start="29:21" pos:end="29:24">gain</name>  <init pos:start="29:27" pos:end="29:34">= <expr pos:start="29:29" pos:end="29:34"><literal type="number" pos:start="29:29" pos:end="29:34">100000</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:35"><decl pos:start="31:13" pos:end="31:34"><type pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:20">uint32_t</name></type> <name pos:start="31:22" pos:end="31:25">peak</name> <init pos:start="31:27" pos:end="31:34">= <expr pos:start="31:29" pos:end="31:34"><literal type="number" pos:start="31:29" pos:end="31:34">100000</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:23"><decl pos:start="33:13" pos:end="33:19"><type pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:17">float</name></type> <name pos:start="33:19" pos:end="33:19">g</name></decl>, <decl pos:start="33:22" pos:end="33:22"><type ref="prev" pos:start="33:13" pos:end="33:17"/><name pos:start="33:22" pos:end="33:22">p</name></decl>;</decl_stmt>



            <if_stmt pos:start="37:13" pos:end="65:13"><if pos:start="37:13" pos:end="49:13">if <condition pos:start="37:16" pos:end="39:52">(<expr pos:start="37:17" pos:end="39:51"><name pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:19">vol</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:31">replaygain</name></name> <operator pos:start="37:33" pos:end="37:34">==</operator> <name pos:start="37:36" pos:end="37:51">REPLAYGAIN_TRACK</name> <operator pos:start="37:53" pos:end="37:54">&amp;&amp;</operator>

                <name pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:26">replaygain</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:38">track_gain</name></name> <operator pos:start="39:40" pos:end="39:41">!=</operator> <name pos:start="39:43" pos:end="39:51">INT32_MIN</name></expr>)</condition> <block pos:start="39:54" pos:end="49:13">{<block_content pos:start="41:17" pos:end="47:50">

                <expr_stmt pos:start="41:17" pos:end="41:46"><expr pos:start="41:17" pos:end="41:45"><name pos:start="41:17" pos:end="41:20">gain</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:45"><name pos:start="41:24" pos:end="41:33">replaygain</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:45">track_gain</name></name></expr>;</expr_stmt>



                <if_stmt pos:start="45:17" pos:end="47:50"><if pos:start="45:17" pos:end="47:50">if <condition pos:start="45:20" pos:end="45:48">(<expr pos:start="45:21" pos:end="45:47"><name pos:start="45:21" pos:end="45:42"><name pos:start="45:21" pos:end="45:30">replaygain</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:42">track_peak</name></name> <operator pos:start="45:44" pos:end="45:45">!=</operator> <literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:50"><block_content pos:start="47:21" pos:end="47:50">

                    <expr_stmt pos:start="47:21" pos:end="47:50"><expr pos:start="47:21" pos:end="47:49"><name pos:start="47:21" pos:end="47:24">peak</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:49"><name pos:start="47:28" pos:end="47:37">replaygain</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:49">track_peak</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="49:15" pos:end="59:13">else if <condition pos:start="49:23" pos:end="49:59">(<expr pos:start="49:24" pos:end="49:58"><name pos:start="49:24" pos:end="49:45"><name pos:start="49:24" pos:end="49:33">replaygain</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:45">album_gain</name></name> <operator pos:start="49:47" pos:end="49:48">!=</operator> <name pos:start="49:50" pos:end="49:58">INT32_MIN</name></expr>)</condition> <block pos:start="49:61" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:50">

                <expr_stmt pos:start="51:17" pos:end="51:46"><expr pos:start="51:17" pos:end="51:45"><name pos:start="51:17" pos:end="51:20">gain</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:45"><name pos:start="51:24" pos:end="51:33">replaygain</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:45">album_gain</name></name></expr>;</expr_stmt>



                <if_stmt pos:start="55:17" pos:end="57:50"><if pos:start="55:17" pos:end="57:50">if <condition pos:start="55:20" pos:end="55:48">(<expr pos:start="55:21" pos:end="55:47"><name pos:start="55:21" pos:end="55:42"><name pos:start="55:21" pos:end="55:30">replaygain</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:42">album_peak</name></name> <operator pos:start="55:44" pos:end="55:45">!=</operator> <literal type="number" pos:start="55:47" pos:end="55:47">0</literal></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:50"><block_content pos:start="57:21" pos:end="57:50">

                    <expr_stmt pos:start="57:21" pos:end="57:50"><expr pos:start="57:21" pos:end="57:49"><name pos:start="57:21" pos:end="57:24">peak</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:49"><name pos:start="57:28" pos:end="57:37">replaygain</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:49">album_peak</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="65:13">else <block pos:start="59:20" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:48">

                <expr_stmt pos:start="61:17" pos:end="63:48"><expr pos:start="61:17" pos:end="63:47"><call pos:start="61:17" pos:end="63:47"><name pos:start="61:17" pos:end="61:22">av_log</name><argument_list pos:start="61:23" pos:end="63:47">(<argument pos:start="61:24" pos:end="61:34"><expr pos:start="61:24" pos:end="61:34"><name pos:start="61:24" pos:end="61:34"><name pos:start="61:24" pos:end="61:29">inlink</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:34">dst</name></name></expr></argument>, <argument pos:start="61:37" pos:end="61:50"><expr pos:start="61:37" pos:end="61:50"><name pos:start="61:37" pos:end="61:50">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="61:53" pos:end="63:46"><expr pos:start="61:53" pos:end="63:46"><literal type="string" pos:start="61:53" pos:end="61:75">"Both ReplayGain gain "</literal>

                       <literal type="string" pos:start="63:24" pos:end="63:46">"values are unknown.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:33"><expr pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:13">g</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:20">gain</name> <operator pos:start="67:22" pos:end="67:22">/</operator> <literal type="number" pos:start="67:24" pos:end="67:32">100000.0f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:33"><expr pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:13">p</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:20">peak</name> <operator pos:start="69:22" pos:end="69:22">/</operator> <literal type="number" pos:start="69:24" pos:end="69:32">100000.0f</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="75:71"><expr pos:start="73:13" pos:end="75:70"><call pos:start="73:13" pos:end="75:70"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="75:70">(<argument pos:start="73:20" pos:end="73:30"><expr pos:start="73:20" pos:end="73:30"><name pos:start="73:20" pos:end="73:30"><name pos:start="73:20" pos:end="73:25">inlink</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:30">dst</name></name></expr></argument>, <argument pos:start="73:33" pos:end="73:46"><expr pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:46">AV_LOG_VERBOSE</name></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:66"><expr pos:start="75:20" pos:end="75:66"><literal type="string" pos:start="75:20" pos:end="75:66">"Using gain %f dB from replaygain side data.\n"</literal></expr></argument>, <argument pos:start="75:69" pos:end="75:69"><expr pos:start="75:69" pos:end="75:69"><name pos:start="75:69" pos:end="75:69">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:72"><expr pos:start="79:13" pos:end="79:71"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:15">vol</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">volume</name></name>   <operator pos:start="79:27" pos:end="79:27">=</operator> <call pos:start="79:29" pos:end="79:71"><name pos:start="79:29" pos:end="79:36">ff_exp10</name><argument_list pos:start="79:37" pos:end="79:71">(<argument pos:start="79:38" pos:end="79:70"><expr pos:start="79:38" pos:end="79:70"><operator pos:start="79:38" pos:end="79:38">(</operator><name pos:start="79:39" pos:end="79:39">g</name> <operator pos:start="79:41" pos:end="79:41">+</operator> <name pos:start="79:43" pos:end="79:64"><name pos:start="79:43" pos:end="79:45">vol</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:64">replaygain_preamp</name></name><operator pos:start="79:65" pos:end="79:65">)</operator> <operator pos:start="79:67" pos:end="79:67">/</operator> <literal type="number" pos:start="79:69" pos:end="79:70">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="83:58"><if pos:start="81:13" pos:end="83:58">if <condition pos:start="81:16" pos:end="81:39">(<expr pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:19">vol</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:38">replaygain_noclip</name></name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:58"><block_content pos:start="83:17" pos:end="83:58">

                <expr_stmt pos:start="83:17" pos:end="83:58"><expr pos:start="83:17" pos:end="83:57"><name pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:19">vol</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:27">volume</name></name> <operator pos:start="83:29" pos:end="83:29">=</operator> <call pos:start="83:31" pos:end="83:57"><name pos:start="83:31" pos:end="83:35">FFMIN</name><argument_list pos:start="83:36" pos:end="83:57">(<argument pos:start="83:37" pos:end="83:47"><expr pos:start="83:37" pos:end="83:47"><name pos:start="83:37" pos:end="83:47"><name pos:start="83:37" pos:end="83:39">vol</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:47">volume</name></name></expr></argument>, <argument pos:start="83:50" pos:end="83:56"><expr pos:start="83:50" pos:end="83:56"><literal type="number" pos:start="83:50" pos:end="83:52">1.0</literal> <operator pos:start="83:54" pos:end="83:54">/</operator> <name pos:start="83:56" pos:end="83:56">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:59"><expr pos:start="85:13" pos:end="85:58"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:15">vol</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:25">volume_i</name></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <operator pos:start="85:29" pos:end="85:29">(</operator><name pos:start="85:30" pos:end="85:32">int</name><operator pos:start="85:33" pos:end="85:33">)</operator><operator pos:start="85:34" pos:end="85:34">(</operator><name pos:start="85:35" pos:end="85:45"><name pos:start="85:35" pos:end="85:37">vol</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:45">volume</name></name> <operator pos:start="85:47" pos:end="85:47">*</operator> <literal type="number" pos:start="85:49" pos:end="85:53">256</literal> <operator pos:start="85:53" pos:end="85:53">+</operator> <literal type="number" pos:start="85:55" pos:end="85:57">0.5</literal><operator pos:start="85:58" pos:end="85:58">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:29"><expr pos:start="89:13" pos:end="89:28"><call pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:23">volume_init</name><argument_list pos:start="89:24" pos:end="89:28">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">vol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:65"><expr pos:start="93:9" pos:end="93:64"><call pos:start="93:9" pos:end="93:64"><name pos:start="93:9" pos:end="93:33">av_frame_remove_side_data</name><argument_list pos:start="93:34" pos:end="93:64">(<argument pos:start="93:35" pos:end="93:37"><expr pos:start="93:35" pos:end="93:37"><name pos:start="93:35" pos:end="93:37">buf</name></expr></argument>, <argument pos:start="93:40" pos:end="93:63"><expr pos:start="93:40" pos:end="93:63"><name pos:start="93:40" pos:end="93:63">AV_FRAME_DATA_REPLAYGAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:45">(<expr pos:start="99:9" pos:end="99:44"><call pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:13">isnan</name><argument_list pos:start="99:14" pos:end="99:44">(<argument pos:start="99:15" pos:end="99:43"><expr pos:start="99:15" pos:end="99:43"><name pos:start="99:15" pos:end="99:43"><name pos:start="99:15" pos:end="99:17">vol</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:29">var_values</name><index pos:start="99:30" pos:end="99:43">[<expr pos:start="99:31" pos:end="99:42"><name pos:start="99:31" pos:end="99:42">VAR_STARTPTS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:47" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:74">

        <expr_stmt pos:start="101:9" pos:end="101:55"><expr pos:start="101:9" pos:end="101:54"><name pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:11">vol</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:23">var_values</name><index pos:start="101:24" pos:end="101:37">[<expr pos:start="101:25" pos:end="101:36"><name pos:start="101:25" pos:end="101:36">VAR_STARTPTS</name></expr>]</index></name> <operator pos:start="101:39" pos:end="101:39">=</operator> <call pos:start="101:41" pos:end="101:54"><name pos:start="101:41" pos:end="101:44">TS2D</name><argument_list pos:start="101:45" pos:end="101:54">(<argument pos:start="101:46" pos:end="101:53"><expr pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:48">buf</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:53">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:74"><expr pos:start="103:9" pos:end="103:73"><name pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:11">vol</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:23">var_values</name><index pos:start="103:24" pos:end="103:37">[<expr pos:start="103:25" pos:end="103:34"><name pos:start="103:25" pos:end="103:34">VAR_STARTT</name></expr>  ]</index></name> <operator pos:start="103:39" pos:end="103:39">=</operator> <call pos:start="103:41" pos:end="103:73"><name pos:start="103:41" pos:end="103:44">TS2T</name><argument_list pos:start="103:45" pos:end="103:73">(<argument pos:start="103:46" pos:end="103:53"><expr pos:start="103:46" pos:end="103:53"><name pos:start="103:46" pos:end="103:53"><name pos:start="103:46" pos:end="103:48">buf</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:53">pts</name></name></expr></argument>, <argument pos:start="103:56" pos:end="103:72"><expr pos:start="103:56" pos:end="103:72"><name pos:start="103:56" pos:end="103:72"><name pos:start="103:56" pos:end="103:61">inlink</name><operator pos:start="103:62" pos:end="103:63">-&gt;</operator><name pos:start="103:64" pos:end="103:72">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:46"><expr pos:start="107:5" pos:end="107:45"><name pos:start="107:5" pos:end="107:28"><name pos:start="107:5" pos:end="107:7">vol</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:19">var_values</name><index pos:start="107:20" pos:end="107:28">[<expr pos:start="107:21" pos:end="107:27"><name pos:start="107:21" pos:end="107:27">VAR_PTS</name></expr>]</index></name> <operator pos:start="107:30" pos:end="107:30">=</operator> <call pos:start="107:32" pos:end="107:45"><name pos:start="107:32" pos:end="107:35">TS2D</name><argument_list pos:start="107:36" pos:end="107:45">(<argument pos:start="107:37" pos:end="107:44"><expr pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:39">buf</name><operator pos:start="107:40" pos:end="107:41">-&gt;</operator><name pos:start="107:42" pos:end="107:44">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:65"><expr pos:start="109:5" pos:end="109:64"><name pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:7">vol</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:19">var_values</name><index pos:start="109:20" pos:end="109:28">[<expr pos:start="109:21" pos:end="109:25"><name pos:start="109:21" pos:end="109:25">VAR_T</name></expr>  ]</index></name> <operator pos:start="109:30" pos:end="109:30">=</operator> <call pos:start="109:32" pos:end="109:64"><name pos:start="109:32" pos:end="109:35">TS2T</name><argument_list pos:start="109:36" pos:end="109:64">(<argument pos:start="109:37" pos:end="109:44"><expr pos:start="109:37" pos:end="109:44"><name pos:start="109:37" pos:end="109:44"><name pos:start="109:37" pos:end="109:39">buf</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:44">pts</name></name></expr></argument>, <argument pos:start="109:47" pos:end="109:63"><expr pos:start="109:47" pos:end="109:63"><name pos:start="109:47" pos:end="109:63"><name pos:start="109:47" pos:end="109:52">inlink</name><operator pos:start="109:53" pos:end="109:54">-&gt;</operator><name pos:start="109:55" pos:end="109:63">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:55"><expr pos:start="111:5" pos:end="111:54"><name pos:start="111:5" pos:end="111:28"><name pos:start="111:5" pos:end="111:7">vol</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:19">var_values</name><index pos:start="111:20" pos:end="111:28">[<expr pos:start="111:21" pos:end="111:25"><name pos:start="111:21" pos:end="111:25">VAR_N</name></expr>  ]</index></name> <operator pos:start="111:30" pos:end="111:30">=</operator> <name pos:start="111:32" pos:end="111:54"><name pos:start="111:32" pos:end="111:37">inlink</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:54">frame_count_out</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:23"><expr pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:7">pos</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <name pos:start="115:11" pos:end="115:22"><name pos:start="115:11" pos:end="115:13">buf</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:22">pkt_pos</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:53"><expr pos:start="117:5" pos:end="117:52"><name pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:7">vol</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:19">var_values</name><index pos:start="117:20" pos:end="117:28">[<expr pos:start="117:21" pos:end="117:27"><name pos:start="117:21" pos:end="117:27">VAR_POS</name></expr>]</index></name> <operator pos:start="117:30" pos:end="117:30">=</operator> <ternary pos:start="117:32" pos:end="117:52"><condition pos:start="117:32" pos:end="117:42"><expr pos:start="117:32" pos:end="117:40"><name pos:start="117:32" pos:end="117:34">pos</name> <operator pos:start="117:36" pos:end="117:37">==</operator> <operator pos:start="117:39" pos:end="117:39">-</operator><literal type="number" pos:start="117:40" pos:end="117:40">1</literal></expr> ?</condition><then pos:start="117:44" pos:end="117:46"> <expr pos:start="117:44" pos:end="117:46"><name pos:start="117:44" pos:end="117:46">NAN</name></expr> </then><else pos:start="117:48" pos:end="117:52">: <expr pos:start="117:50" pos:end="117:52"><name pos:start="117:50" pos:end="117:52">pos</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:24"><if pos:start="119:5" pos:end="121:24">if <condition pos:start="119:8" pos:end="119:42">(<expr pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:11">vol</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:22">eval_mode</name></name> <operator pos:start="119:24" pos:end="119:25">==</operator> <name pos:start="119:27" pos:end="119:41">EVAL_MODE_FRAME</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:24"><block_content pos:start="121:9" pos:end="121:24">

        <expr_stmt pos:start="121:9" pos:end="121:24"><expr pos:start="121:9" pos:end="121:23"><call pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:18">set_volume</name><argument_list pos:start="121:19" pos:end="121:23">(<argument pos:start="121:20" pos:end="121:22"><expr pos:start="121:20" pos:end="121:22"><name pos:start="121:20" pos:end="121:22">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:51">(<expr pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:11">vol</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:19">volume</name></name> <operator pos:start="125:21" pos:end="125:22">==</operator> <literal type="number" pos:start="125:24" pos:end="125:26">1.0</literal> <operator pos:start="125:28" pos:end="125:29">||</operator> <name pos:start="125:31" pos:end="125:43"><name pos:start="125:31" pos:end="125:33">vol</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:43">volume_i</name></name> <operator pos:start="125:45" pos:end="125:46">==</operator> <literal type="number" pos:start="125:48" pos:end="125:50">256</literal></expr>)</condition> <block pos:start="125:53" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:17">

        <expr_stmt pos:start="127:9" pos:end="127:22"><expr pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:15">out_buf</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:21">buf</name></expr>;</expr_stmt>

        <goto pos:start="129:9" pos:end="129:17">goto <name pos:start="129:14" pos:end="129:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:64">/* do volume scaling in-place if input buffer is writable */</comment>

    <if_stmt pos:start="137:5" pos:end="163:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="139:72">(<expr pos:start="137:9" pos:end="139:71"><call pos:start="137:9" pos:end="137:33"><name pos:start="137:9" pos:end="137:28">av_frame_is_writable</name><argument_list pos:start="137:29" pos:end="137:33">(<argument pos:start="137:30" pos:end="137:32"><expr pos:start="137:30" pos:end="137:32"><name pos:start="137:30" pos:end="137:32">buf</name></expr></argument>)</argument_list></call>

            <operator pos:start="139:13" pos:end="139:14">&amp;&amp;</operator> <operator pos:start="139:16" pos:end="139:16">(</operator><name pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:19">vol</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:30">precision</name></name> <operator pos:start="139:32" pos:end="139:33">!=</operator> <name pos:start="139:35" pos:end="139:49">PRECISION_FIXED</name> <operator pos:start="139:51" pos:end="139:52">||</operator> <name pos:start="139:54" pos:end="139:66"><name pos:start="139:54" pos:end="139:56">vol</name><operator pos:start="139:57" pos:end="139:58">-&gt;</operator><name pos:start="139:59" pos:end="139:66">volume_i</name></name> <operator pos:start="139:68" pos:end="139:68">&gt;</operator> <literal type="number" pos:start="139:70" pos:end="139:70">0</literal><operator pos:start="139:71" pos:end="139:71">)</operator></expr>)</condition> <block pos:start="139:74" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:22">

        <expr_stmt pos:start="141:9" pos:end="141:22"><expr pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:15">out_buf</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <name pos:start="141:19" pos:end="141:21">buf</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="143:7" pos:end="163:5">else <block pos:start="143:12" pos:end="163:5">{<block_content pos:start="145:9" pos:end="161:9">

        <expr_stmt pos:start="145:9" pos:end="145:58"><expr pos:start="145:9" pos:end="145:57"><name pos:start="145:9" pos:end="145:15">out_buf</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <call pos:start="145:19" pos:end="145:57"><name pos:start="145:19" pos:end="145:37">ff_get_audio_buffer</name><argument_list pos:start="145:38" pos:end="145:57">(<argument pos:start="145:39" pos:end="145:44"><expr pos:start="145:39" pos:end="145:44"><name pos:start="145:39" pos:end="145:44">inlink</name></expr></argument>, <argument pos:start="145:47" pos:end="145:56"><expr pos:start="145:47" pos:end="145:56"><name pos:start="145:47" pos:end="145:56">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:35"><if pos:start="147:9" pos:end="149:35">if <condition pos:start="147:12" pos:end="147:21">(<expr pos:start="147:13" pos:end="147:20"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:20">out_buf</name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:35"><block_content pos:start="149:13" pos:end="149:35">

            <return pos:start="149:13" pos:end="149:35">return <expr pos:start="149:20" pos:end="149:34"><call pos:start="149:20" pos:end="149:34"><name pos:start="149:20" pos:end="149:26">AVERROR</name><argument_list pos:start="149:27" pos:end="149:34">(<argument pos:start="149:28" pos:end="149:33"><expr pos:start="149:28" pos:end="149:33"><name pos:start="149:28" pos:end="149:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:48"><expr pos:start="151:9" pos:end="151:47"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <call pos:start="151:15" pos:end="151:47"><name pos:start="151:15" pos:end="151:33">av_frame_copy_props</name><argument_list pos:start="151:34" pos:end="151:47">(<argument pos:start="151:35" pos:end="151:41"><expr pos:start="151:35" pos:end="151:41"><name pos:start="151:35" pos:end="151:41">out_buf</name></expr></argument>, <argument pos:start="151:44" pos:end="151:46"><expr pos:start="151:44" pos:end="151:46"><name pos:start="151:44" pos:end="151:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="161:9"><if pos:start="153:9" pos:end="161:9">if <condition pos:start="153:12" pos:end="153:20">(<expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:15">ret</name> <operator pos:start="153:17" pos:end="153:17">&lt;</operator> <literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>)</condition> <block pos:start="153:22" pos:end="161:9">{<block_content pos:start="155:13" pos:end="159:23">

            <expr_stmt pos:start="155:13" pos:end="155:36"><expr pos:start="155:13" pos:end="155:35"><call pos:start="155:13" pos:end="155:35"><name pos:start="155:13" pos:end="155:25">av_frame_free</name><argument_list pos:start="155:26" pos:end="155:35">(<argument pos:start="155:27" pos:end="155:34"><expr pos:start="155:27" pos:end="155:34"><operator pos:start="155:27" pos:end="155:27">&amp;</operator><name pos:start="155:28" pos:end="155:34">out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:32"><expr pos:start="157:13" pos:end="157:31"><call pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:25">av_frame_free</name><argument_list pos:start="157:26" pos:end="157:31">(<argument pos:start="157:27" pos:end="157:30"><expr pos:start="157:27" pos:end="157:30"><operator pos:start="157:27" pos:end="157:27">&amp;</operator><name pos:start="157:28" pos:end="157:30">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="159:13" pos:end="159:23">return <expr pos:start="159:20" pos:end="159:22"><name pos:start="159:20" pos:end="159:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="167:5" pos:end="221:5"><if pos:start="167:5" pos:end="221:5">if <condition pos:start="167:8" pos:end="167:63">(<expr pos:start="167:9" pos:end="167:62"><name pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:11">vol</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:22">precision</name></name> <operator pos:start="167:24" pos:end="167:25">!=</operator> <name pos:start="167:27" pos:end="167:41">PRECISION_FIXED</name> <operator pos:start="167:43" pos:end="167:44">||</operator> <name pos:start="167:46" pos:end="167:58"><name pos:start="167:46" pos:end="167:48">vol</name><operator pos:start="167:49" pos:end="167:50">-&gt;</operator><name pos:start="167:51" pos:end="167:58">volume_i</name></name> <operator pos:start="167:60" pos:end="167:60">&gt;</operator> <literal type="number" pos:start="167:62" pos:end="167:62">0</literal></expr>)</condition> <block pos:start="167:65" pos:end="221:5">{<block_content pos:start="169:9" pos:end="219:9">

        <decl_stmt pos:start="169:9" pos:end="169:29"><decl pos:start="169:9" pos:end="169:13"><type pos:start="169:9" pos:end="169:11"><name pos:start="169:9" pos:end="169:11">int</name></type> <name pos:start="169:13" pos:end="169:13">p</name></decl>, <decl pos:start="169:16" pos:end="169:28"><type ref="prev" pos:start="169:9" pos:end="169:11"/><name pos:start="169:16" pos:end="169:28">plane_samples</name></decl>;</decl_stmt>



        <if_stmt pos:start="173:9" pos:end="179:84"><if pos:start="173:9" pos:end="175:68">if <condition pos:start="173:12" pos:end="173:49">(<expr pos:start="173:13" pos:end="173:48"><call pos:start="173:13" pos:end="173:48"><name pos:start="173:13" pos:end="173:35">av_sample_fmt_is_planar</name><argument_list pos:start="173:36" pos:end="173:48">(<argument pos:start="173:37" pos:end="173:47"><expr pos:start="173:37" pos:end="173:47"><name pos:start="173:37" pos:end="173:47"><name pos:start="173:37" pos:end="173:39">buf</name><operator pos:start="173:40" pos:end="173:41">-&gt;</operator><name pos:start="173:42" pos:end="173:47">format</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:68"><block_content pos:start="175:13" pos:end="175:68">

            <expr_stmt pos:start="175:13" pos:end="175:68"><expr pos:start="175:13" pos:end="175:67"><name pos:start="175:13" pos:end="175:25">plane_samples</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <call pos:start="175:29" pos:end="175:67"><name pos:start="175:29" pos:end="175:35">FFALIGN</name><argument_list pos:start="175:36" pos:end="175:67">(<argument pos:start="175:37" pos:end="175:46"><expr pos:start="175:37" pos:end="175:46"><name pos:start="175:37" pos:end="175:46">nb_samples</name></expr></argument>, <argument pos:start="175:49" pos:end="175:66"><expr pos:start="175:49" pos:end="175:66"><name pos:start="175:49" pos:end="175:66"><name pos:start="175:49" pos:end="175:51">vol</name><operator pos:start="175:52" pos:end="175:53">-&gt;</operator><name pos:start="175:54" pos:end="175:66">samples_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="177:9" pos:end="179:84">else<block type="pseudo" pos:start="179:13" pos:end="179:84"><block_content pos:start="179:13" pos:end="179:84">

            <expr_stmt pos:start="179:13" pos:end="179:84"><expr pos:start="179:13" pos:end="179:83"><name pos:start="179:13" pos:end="179:25">plane_samples</name> <operator pos:start="179:27" pos:end="179:27">=</operator> <call pos:start="179:29" pos:end="179:83"><name pos:start="179:29" pos:end="179:35">FFALIGN</name><argument_list pos:start="179:36" pos:end="179:83">(<argument pos:start="179:37" pos:end="179:62"><expr pos:start="179:37" pos:end="179:62"><name pos:start="179:37" pos:end="179:46">nb_samples</name> <operator pos:start="179:48" pos:end="179:48">*</operator> <name pos:start="179:50" pos:end="179:62"><name pos:start="179:50" pos:end="179:52">vol</name><operator pos:start="179:53" pos:end="179:54">-&gt;</operator><name pos:start="179:55" pos:end="179:62">channels</name></name></expr></argument>, <argument pos:start="179:65" pos:end="179:82"><expr pos:start="179:65" pos:end="179:82"><name pos:start="179:65" pos:end="179:82"><name pos:start="179:65" pos:end="179:67">vol</name><operator pos:start="179:68" pos:end="179:69">-&gt;</operator><name pos:start="179:70" pos:end="179:82">samples_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="183:9" pos:end="219:9"><if pos:start="183:9" pos:end="195:9">if <condition pos:start="183:12" pos:end="183:46">(<expr pos:start="183:13" pos:end="183:45"><name pos:start="183:13" pos:end="183:26"><name pos:start="183:13" pos:end="183:15">vol</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:26">precision</name></name> <operator pos:start="183:28" pos:end="183:29">==</operator> <name pos:start="183:31" pos:end="183:45">PRECISION_FIXED</name></expr>)</condition> <block pos:start="183:48" pos:end="195:9">{<block_content pos:start="185:13" pos:end="193:13">

            <for pos:start="185:13" pos:end="193:13">for <control pos:start="185:17" pos:end="185:45">(<init pos:start="185:18" pos:end="185:23"><expr pos:start="185:18" pos:end="185:22"><name pos:start="185:18" pos:end="185:18">p</name> <operator pos:start="185:20" pos:end="185:20">=</operator> <literal type="number" pos:start="185:22" pos:end="185:22">0</literal></expr>;</init> <condition pos:start="185:25" pos:end="185:40"><expr pos:start="185:25" pos:end="185:39"><name pos:start="185:25" pos:end="185:25">p</name> <operator pos:start="185:27" pos:end="185:27">&lt;</operator> <name pos:start="185:29" pos:end="185:39"><name pos:start="185:29" pos:end="185:31">vol</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:39">planes</name></name></expr>;</condition> <incr pos:start="185:42" pos:end="185:44"><expr pos:start="185:42" pos:end="185:44"><name pos:start="185:42" pos:end="185:42">p</name><operator pos:start="185:43" pos:end="185:44">++</operator></expr></incr>)</control> <block pos:start="185:47" pos:end="193:13">{<block_content pos:start="187:17" pos:end="191:50">

                <expr_stmt pos:start="187:17" pos:end="191:50"><expr pos:start="187:17" pos:end="191:49"><call pos:start="187:17" pos:end="191:49"><name pos:start="187:17" pos:end="187:34"><name pos:start="187:17" pos:end="187:19">vol</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:34">scale_samples</name></name><argument_list pos:start="187:35" pos:end="191:49">(<argument pos:start="187:36" pos:end="187:60"><expr pos:start="187:36" pos:end="187:60"><name pos:start="187:36" pos:end="187:60"><name pos:start="187:36" pos:end="187:42">out_buf</name><operator pos:start="187:43" pos:end="187:44">-&gt;</operator><name pos:start="187:45" pos:end="187:57">extended_data</name><index pos:start="187:58" pos:end="187:60">[<expr pos:start="187:59" pos:end="187:59"><name pos:start="187:59" pos:end="187:59">p</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="189:36" pos:end="189:56"><expr pos:start="189:36" pos:end="189:56"><name pos:start="189:36" pos:end="189:56"><name pos:start="189:36" pos:end="189:38">buf</name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:53">extended_data</name><index pos:start="189:54" pos:end="189:56">[<expr pos:start="189:55" pos:end="189:55"><name pos:start="189:55" pos:end="189:55">p</name></expr>]</index></name></expr></argument>, <argument pos:start="189:59" pos:end="189:71"><expr pos:start="189:59" pos:end="189:71"><name pos:start="189:59" pos:end="189:71">plane_samples</name></expr></argument>,

                                   <argument pos:start="191:36" pos:end="191:48"><expr pos:start="191:36" pos:end="191:48"><name pos:start="191:36" pos:end="191:48"><name pos:start="191:36" pos:end="191:38">vol</name><operator pos:start="191:39" pos:end="191:40">-&gt;</operator><name pos:start="191:41" pos:end="191:48">volume_i</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="195:11" pos:end="207:9">else if <condition pos:start="195:19" pos:end="195:82">(<expr pos:start="195:20" pos:end="195:81"><call pos:start="195:20" pos:end="195:60"><name pos:start="195:20" pos:end="195:43">av_get_packed_sample_fmt</name><argument_list pos:start="195:44" pos:end="195:60">(<argument pos:start="195:45" pos:end="195:59"><expr pos:start="195:45" pos:end="195:59"><name pos:start="195:45" pos:end="195:59"><name pos:start="195:45" pos:end="195:47">vol</name><operator pos:start="195:48" pos:end="195:49">-&gt;</operator><name pos:start="195:50" pos:end="195:59">sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="195:62" pos:end="195:63">==</operator> <name pos:start="195:65" pos:end="195:81">AV_SAMPLE_FMT_FLT</name></expr>)</condition> <block pos:start="195:84" pos:end="207:9">{<block_content pos:start="197:13" pos:end="205:13">

            <for pos:start="197:13" pos:end="205:13">for <control pos:start="197:17" pos:end="197:45">(<init pos:start="197:18" pos:end="197:23"><expr pos:start="197:18" pos:end="197:22"><name pos:start="197:18" pos:end="197:18">p</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>;</init> <condition pos:start="197:25" pos:end="197:40"><expr pos:start="197:25" pos:end="197:39"><name pos:start="197:25" pos:end="197:25">p</name> <operator pos:start="197:27" pos:end="197:27">&lt;</operator> <name pos:start="197:29" pos:end="197:39"><name pos:start="197:29" pos:end="197:31">vol</name><operator pos:start="197:32" pos:end="197:33">-&gt;</operator><name pos:start="197:34" pos:end="197:39">planes</name></name></expr>;</condition> <incr pos:start="197:42" pos:end="197:44"><expr pos:start="197:42" pos:end="197:44"><name pos:start="197:42" pos:end="197:42">p</name><operator pos:start="197:43" pos:end="197:44">++</operator></expr></incr>)</control> <block pos:start="197:47" pos:end="205:13">{<block_content pos:start="199:17" pos:end="203:73">

                <expr_stmt pos:start="199:17" pos:end="203:73"><expr pos:start="199:17" pos:end="203:72"><call pos:start="199:17" pos:end="203:72"><name pos:start="199:17" pos:end="199:45"><name pos:start="199:17" pos:end="199:19">vol</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:25">fdsp</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:45">vector_fmul_scalar</name></name><argument_list pos:start="199:46" pos:end="203:72">(<argument pos:start="199:47" pos:end="199:80"><expr pos:start="199:47" pos:end="199:80"><operator pos:start="199:47" pos:end="199:47">(</operator><name pos:start="199:48" pos:end="199:52">float</name> <operator pos:start="199:54" pos:end="199:54">*</operator><operator pos:start="199:55" pos:end="199:55">)</operator><name pos:start="199:56" pos:end="199:80"><name pos:start="199:56" pos:end="199:62">out_buf</name><operator pos:start="199:63" pos:end="199:64">-&gt;</operator><name pos:start="199:65" pos:end="199:77">extended_data</name><index pos:start="199:78" pos:end="199:80">[<expr pos:start="199:79" pos:end="199:79"><name pos:start="199:79" pos:end="199:79">p</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="201:46" pos:end="201:81"><expr pos:start="201:46" pos:end="201:81"><operator pos:start="201:46" pos:end="201:46">(</operator><specifier pos:start="201:47" pos:end="201:51">const</specifier> <name pos:start="201:53" pos:end="201:57">float</name> <operator pos:start="201:59" pos:end="201:59">*</operator><operator pos:start="201:60" pos:end="201:60">)</operator><name pos:start="201:61" pos:end="201:81"><name pos:start="201:61" pos:end="201:63">buf</name><operator pos:start="201:64" pos:end="201:65">-&gt;</operator><name pos:start="201:66" pos:end="201:78">extended_data</name><index pos:start="201:79" pos:end="201:81">[<expr pos:start="201:80" pos:end="201:80"><name pos:start="201:80" pos:end="201:80">p</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="203:46" pos:end="203:56"><expr pos:start="203:46" pos:end="203:56"><name pos:start="203:46" pos:end="203:56"><name pos:start="203:46" pos:end="203:48">vol</name><operator pos:start="203:49" pos:end="203:50">-&gt;</operator><name pos:start="203:51" pos:end="203:56">volume</name></name></expr></argument>, <argument pos:start="203:59" pos:end="203:71"><expr pos:start="203:59" pos:end="203:71"><name pos:start="203:59" pos:end="203:71">plane_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="207:11" pos:end="219:9">else <block pos:start="207:16" pos:end="219:9">{<block_content pos:start="209:13" pos:end="217:13">

            <for pos:start="209:13" pos:end="217:13">for <control pos:start="209:17" pos:end="209:45">(<init pos:start="209:18" pos:end="209:23"><expr pos:start="209:18" pos:end="209:22"><name pos:start="209:18" pos:end="209:18">p</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <literal type="number" pos:start="209:22" pos:end="209:22">0</literal></expr>;</init> <condition pos:start="209:25" pos:end="209:40"><expr pos:start="209:25" pos:end="209:39"><name pos:start="209:25" pos:end="209:25">p</name> <operator pos:start="209:27" pos:end="209:27">&lt;</operator> <name pos:start="209:29" pos:end="209:39"><name pos:start="209:29" pos:end="209:31">vol</name><operator pos:start="209:32" pos:end="209:33">-&gt;</operator><name pos:start="209:34" pos:end="209:39">planes</name></name></expr>;</condition> <incr pos:start="209:42" pos:end="209:44"><expr pos:start="209:42" pos:end="209:44"><name pos:start="209:42" pos:end="209:42">p</name><operator pos:start="209:43" pos:end="209:44">++</operator></expr></incr>)</control> <block pos:start="209:47" pos:end="217:13">{<block_content pos:start="211:17" pos:end="215:73">

                <expr_stmt pos:start="211:17" pos:end="215:73"><expr pos:start="211:17" pos:end="215:72"><call pos:start="211:17" pos:end="215:72"><name pos:start="211:17" pos:end="211:45"><name pos:start="211:17" pos:end="211:19">vol</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:25">fdsp</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:45">vector_dmul_scalar</name></name><argument_list pos:start="211:46" pos:end="215:72">(<argument pos:start="211:47" pos:end="211:81"><expr pos:start="211:47" pos:end="211:81"><operator pos:start="211:47" pos:end="211:47">(</operator><name pos:start="211:48" pos:end="211:53">double</name> <operator pos:start="211:55" pos:end="211:55">*</operator><operator pos:start="211:56" pos:end="211:56">)</operator><name pos:start="211:57" pos:end="211:81"><name pos:start="211:57" pos:end="211:63">out_buf</name><operator pos:start="211:64" pos:end="211:65">-&gt;</operator><name pos:start="211:66" pos:end="211:78">extended_data</name><index pos:start="211:79" pos:end="211:81">[<expr pos:start="211:80" pos:end="211:80"><name pos:start="211:80" pos:end="211:80">p</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="213:46" pos:end="213:82"><expr pos:start="213:46" pos:end="213:82"><operator pos:start="213:46" pos:end="213:46">(</operator><specifier pos:start="213:47" pos:end="213:51">const</specifier> <name pos:start="213:53" pos:end="213:58">double</name> <operator pos:start="213:60" pos:end="213:60">*</operator><operator pos:start="213:61" pos:end="213:61">)</operator><name pos:start="213:62" pos:end="213:82"><name pos:start="213:62" pos:end="213:64">buf</name><operator pos:start="213:65" pos:end="213:66">-&gt;</operator><name pos:start="213:67" pos:end="213:79">extended_data</name><index pos:start="213:80" pos:end="213:82">[<expr pos:start="213:81" pos:end="213:81"><name pos:start="213:81" pos:end="213:81">p</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="215:46" pos:end="215:56"><expr pos:start="215:46" pos:end="215:56"><name pos:start="215:46" pos:end="215:56"><name pos:start="215:46" pos:end="215:48">vol</name><operator pos:start="215:49" pos:end="215:50">-&gt;</operator><name pos:start="215:51" pos:end="215:56">volume</name></name></expr></argument>, <argument pos:start="215:59" pos:end="215:71"><expr pos:start="215:59" pos:end="215:71"><name pos:start="215:59" pos:end="215:71">plane_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:13"><expr pos:start="225:5" pos:end="225:12"><call pos:start="225:5" pos:end="225:12"><name pos:start="225:5" pos:end="225:10">emms_c</name><argument_list pos:start="225:11" pos:end="225:12">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="229:5" pos:end="231:28"><if pos:start="229:5" pos:end="231:28">if <condition pos:start="229:8" pos:end="229:23">(<expr pos:start="229:9" pos:end="229:22"><name pos:start="229:9" pos:end="229:11">buf</name> <operator pos:start="229:13" pos:end="229:14">!=</operator> <name pos:start="229:16" pos:end="229:22">out_buf</name></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:28"><block_content pos:start="231:9" pos:end="231:28">

        <expr_stmt pos:start="231:9" pos:end="231:28"><expr pos:start="231:9" pos:end="231:27"><call pos:start="231:9" pos:end="231:27"><name pos:start="231:9" pos:end="231:21">av_frame_free</name><argument_list pos:start="231:22" pos:end="231:27">(<argument pos:start="231:23" pos:end="231:26"><expr pos:start="231:23" pos:end="231:26"><operator pos:start="231:23" pos:end="231:23">&amp;</operator><name pos:start="231:24" pos:end="231:26">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="235:1" pos:end="235:4"><name pos:start="235:1" pos:end="235:3">end</name>:</label>

    <expr_stmt pos:start="237:5" pos:end="237:68"><expr pos:start="237:5" pos:end="237:67"><name pos:start="237:5" pos:end="237:44"><name pos:start="237:5" pos:end="237:7">vol</name><operator pos:start="237:8" pos:end="237:9">-&gt;</operator><name pos:start="237:10" pos:end="237:19">var_values</name><index pos:start="237:20" pos:end="237:44">[<expr pos:start="237:21" pos:end="237:43"><name pos:start="237:21" pos:end="237:43">VAR_NB_CONSUMED_SAMPLES</name></expr>]</index></name> <operator pos:start="237:46" pos:end="237:47">+=</operator> <name pos:start="237:49" pos:end="237:67"><name pos:start="237:49" pos:end="237:55">out_buf</name><operator pos:start="237:56" pos:end="237:57">-&gt;</operator><name pos:start="237:58" pos:end="237:67">nb_samples</name></name></expr>;</expr_stmt>

    <return pos:start="239:5" pos:end="239:45">return <expr pos:start="239:12" pos:end="239:44"><call pos:start="239:12" pos:end="239:44"><name pos:start="239:12" pos:end="239:26">ff_filter_frame</name><argument_list pos:start="239:27" pos:end="239:44">(<argument pos:start="239:28" pos:end="239:34"><expr pos:start="239:28" pos:end="239:34"><name pos:start="239:28" pos:end="239:34">outlink</name></expr></argument>, <argument pos:start="239:37" pos:end="239:43"><expr pos:start="239:37" pos:end="239:43"><name pos:start="239:37" pos:end="239:43">out_buf</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
