<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/553.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">vnc_disconnect_finish</name><parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:35">VncState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:17">vnc_jobs_join</name><argument_list pos:start="9:18" pos:end="9:21">(<argument pos:start="9:19" pos:end="9:20"><expr pos:start="9:19" pos:end="9:20"><name pos:start="9:19" pos:end="9:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="9:24" pos:end="9:47">/* Wait encoding jobs */</comment>



    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><call pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:19">vnc_lock_output</name><argument_list pos:start="13:20" pos:end="13:23">(<argument pos:start="13:21" pos:end="13:22"><expr pos:start="13:21" pos:end="13:22"><name pos:start="13:21" pos:end="13:22">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:17">vnc_qmp_event</name><argument_list pos:start="15:18" pos:end="15:50">(<argument pos:start="15:19" pos:end="15:20"><expr pos:start="15:19" pos:end="15:20"><name pos:start="15:19" pos:end="15:20">vs</name></expr></argument>, <argument pos:start="15:23" pos:end="15:49"><expr pos:start="15:23" pos:end="15:49"><name pos:start="15:23" pos:end="15:49">QAPI_EVENT_VNC_DISCONNECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:15">buffer_free</name><argument_list pos:start="19:16" pos:end="19:27">(<argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:19">vs</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:28"><call pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:15">buffer_free</name><argument_list pos:start="21:16" pos:end="21:28">(<argument pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:27"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:27"><name pos:start="21:18" pos:end="21:19">vs</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:27">output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="23:1" pos:end="23:20">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:20">CONFIG_VNC_WS</name></cpp:ifdef>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><call pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:15">buffer_free</name><argument_list pos:start="25:16" pos:end="25:30">(<argument pos:start="25:17" pos:end="25:29"><expr pos:start="25:17" pos:end="25:29"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:29"><name pos:start="25:18" pos:end="25:19">vs</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:29">ws_input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:15">buffer_free</name><argument_list pos:start="27:16" pos:end="27:31">(<argument pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:30"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:30"><name pos:start="27:18" pos:end="27:19">vs</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:30">ws_output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="29:8" pos:end="29:26">/* CONFIG_VNC_WS */</comment>



    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><call pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:27">qapi_free_VncClientInfo</name><argument_list pos:start="33:28" pos:end="33:37">(<argument pos:start="33:29" pos:end="33:36"><expr pos:start="33:29" pos:end="33:36"><name pos:start="33:29" pos:end="33:36"><name pos:start="33:29" pos:end="33:30">vs</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:36">info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><call pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:18">vnc_zlib_clear</name><argument_list pos:start="37:19" pos:end="37:22">(<argument pos:start="37:20" pos:end="37:21"><expr pos:start="37:20" pos:end="37:21"><name pos:start="37:20" pos:end="37:21">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:19">vnc_tight_clear</name><argument_list pos:start="39:20" pos:end="39:23">(<argument pos:start="39:21" pos:end="39:22"><expr pos:start="39:21" pos:end="39:22"><name pos:start="39:21" pos:end="39:22">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="46:0"><expr pos:start="41:5" pos:end="41:22"><call pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:18">vnc_zrle_clear</name><argument_list pos:start="41:19" pos:end="41:22">(<argument pos:start="41:20" pos:end="41:21"><expr pos:start="41:20" pos:end="41:21"><name pos:start="41:20" pos:end="41:21">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="45:1" pos:end="45:21">#<cpp:directive pos:start="45:2" pos:end="45:6">ifdef</cpp:directive> <name pos:start="45:8" pos:end="45:21">CONFIG_VNC_TLS</name></cpp:ifdef>

    <expr_stmt pos:start="47:5" pos:end="52:0"><expr pos:start="47:5" pos:end="47:30"><call pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:26">vnc_tls_client_cleanup</name><argument_list pos:start="47:27" pos:end="47:30">(<argument pos:start="47:28" pos:end="47:29"><expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="49:8" pos:end="49:27">/* CONFIG_VNC_TLS */</comment>

<cpp:ifdef pos:start="51:1" pos:end="51:22">#<cpp:directive pos:start="51:2" pos:end="51:6">ifdef</cpp:directive> <name pos:start="51:8" pos:end="51:22">CONFIG_VNC_SASL</name></cpp:ifdef>

    <expr_stmt pos:start="53:5" pos:end="56:0"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:27">vnc_sasl_client_cleanup</name><argument_list pos:start="53:28" pos:end="53:31">(<argument pos:start="53:29" pos:end="53:30"><expr pos:start="53:29" pos:end="53:30"><name pos:start="53:29" pos:end="53:30">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="55:8" pos:end="55:28">/* CONFIG_VNC_SASL */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><call pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:13">audio_del</name><argument_list pos:start="57:14" pos:end="57:17">(<argument pos:start="57:15" pos:end="57:16"><expr pos:start="57:15" pos:end="57:16"><name pos:start="57:15" pos:end="57:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><call pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:25">vnc_release_modifiers</name><argument_list pos:start="59:26" pos:end="59:29">(<argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:24">(<expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:10">vs</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:23">initialized</name></name></expr>)</condition> <block pos:start="63:26" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:73">

        <expr_stmt pos:start="65:9" pos:end="65:50"><expr pos:start="65:9" pos:end="65:49"><call pos:start="65:9" pos:end="65:49"><name pos:start="65:9" pos:end="65:21">QTAILQ_REMOVE</name><argument_list pos:start="65:22" pos:end="65:49">(<argument pos:start="65:23" pos:end="65:38"><expr pos:start="65:23" pos:end="65:38"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:25">vs</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:29">vd</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:38">clients</name></name></expr></argument>, <argument pos:start="65:41" pos:end="65:42"><expr pos:start="65:41" pos:end="65:42"><name pos:start="65:41" pos:end="65:42">vs</name></expr></argument>, <argument pos:start="65:45" pos:end="65:48"><expr pos:start="65:45" pos:end="65:48"><name pos:start="65:45" pos:end="65:48">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:73"><expr pos:start="67:9" pos:end="67:72"><call pos:start="67:9" pos:end="67:72"><name pos:start="67:9" pos:end="67:46">qemu_remove_mouse_mode_change_notifier</name><argument_list pos:start="67:47" pos:end="67:72">(<argument pos:start="67:48" pos:end="67:71"><expr pos:start="67:48" pos:end="67:71"><operator pos:start="67:48" pos:end="67:48">&amp;</operator><name pos:start="67:49" pos:end="67:71"><name pos:start="67:49" pos:end="67:50">vs</name><operator pos:start="67:51" pos:end="67:52">-&gt;</operator><name pos:start="67:53" pos:end="67:71">mouse_mode_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="75:47"><if pos:start="73:5" pos:end="75:47">if <condition pos:start="73:8" pos:end="73:30">(<expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:10">vs</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:14">vd</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:29">lock_key_sync</name></name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:47"><block_content pos:start="75:9" pos:end="75:47">

        <expr_stmt pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:46"><call pos:start="75:9" pos:end="75:46"><name pos:start="75:9" pos:end="75:37">qemu_remove_led_event_handler</name><argument_list pos:start="75:38" pos:end="75:46">(<argument pos:start="75:39" pos:end="75:45"><expr pos:start="75:39" pos:end="75:45"><name pos:start="75:39" pos:end="75:45"><name pos:start="75:39" pos:end="75:40">vs</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:45">led</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:26"><expr pos:start="77:5" pos:end="77:25"><call pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:21">vnc_unlock_output</name><argument_list pos:start="77:22" pos:end="77:25">(<argument pos:start="77:23" pos:end="77:24"><expr pos:start="77:23" pos:end="77:24"><name pos:start="77:23" pos:end="77:24">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:42"><expr pos:start="81:5" pos:end="81:41"><call pos:start="81:5" pos:end="81:41"><name pos:start="81:5" pos:end="81:22">qemu_mutex_destroy</name><argument_list pos:start="81:23" pos:end="81:41">(<argument pos:start="81:24" pos:end="81:40"><expr pos:start="81:24" pos:end="81:40"><operator pos:start="81:24" pos:end="81:24">&amp;</operator><name pos:start="81:25" pos:end="81:40"><name pos:start="81:25" pos:end="81:26">vs</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:40">output_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:23">(<expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:10">vs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:14">bh</name></name> <operator pos:start="83:16" pos:end="83:17">!=</operator> <name pos:start="83:19" pos:end="83:22">NULL</name></expr>)</condition> <block pos:start="83:25" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:31">

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><call pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:22">qemu_bh_delete</name><argument_list pos:start="85:23" pos:end="85:30">(<argument pos:start="85:24" pos:end="85:29"><expr pos:start="85:24" pos:end="85:29"><name pos:start="85:24" pos:end="85:29"><name pos:start="85:24" pos:end="85:25">vs</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:34"><expr pos:start="89:5" pos:end="89:33"><call pos:start="89:5" pos:end="89:33"><name pos:start="89:5" pos:end="89:15">buffer_free</name><argument_list pos:start="89:16" pos:end="89:33">(<argument pos:start="89:17" pos:end="89:32"><expr pos:start="89:17" pos:end="89:32"><operator pos:start="89:17" pos:end="89:17">&amp;</operator><name pos:start="89:18" pos:end="89:32"><name pos:start="89:18" pos:end="89:19">vs</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:32">jobs_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="93:5" pos:end="97:5">for <control pos:start="93:9" pos:end="93:39">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:34"><expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:33">VNC_STAT_ROWS</name></expr>;</condition> <incr pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><operator pos:start="93:36" pos:end="93:37">++</operator><name pos:start="93:38" pos:end="93:38">i</name></expr></incr>)</control> <block pos:start="93:41" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:34">

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><call pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:14">g_free</name><argument_list pos:start="95:15" pos:end="95:33">(<argument pos:start="95:16" pos:end="95:32"><expr pos:start="95:16" pos:end="95:32"><name pos:start="95:16" pos:end="95:32"><name pos:start="95:16" pos:end="95:17">vs</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:29">lossy_rect</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><name pos:start="95:31" pos:end="95:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="99:5" pos:end="99:27"><expr pos:start="99:5" pos:end="99:26"><call pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:10">g_free</name><argument_list pos:start="99:11" pos:end="99:26">(<argument pos:start="99:12" pos:end="99:25"><expr pos:start="99:12" pos:end="99:25"><name pos:start="99:12" pos:end="99:25"><name pos:start="99:12" pos:end="99:13">vs</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">lossy_rect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:15"><expr pos:start="101:5" pos:end="101:14"><call pos:start="101:5" pos:end="101:14"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:14">(<argument pos:start="101:12" pos:end="101:13"><expr pos:start="101:12" pos:end="101:13"><name pos:start="101:12" pos:end="101:13">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
