<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17567.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:5"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">sls_flag_use_localtime_filename</name><parameter_list pos:start="1:43" pos:end="1:97">(<parameter pos:start="1:44" pos:end="1:62"><decl pos:start="1:44" pos:end="1:62"><type pos:start="1:44" pos:end="1:62"><name pos:start="1:44" pos:end="1:58">AVFormatContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">oc</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:74">HLSContext</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:77">c</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:96"><decl pos:start="1:80" pos:end="1:96"><type pos:start="1:80" pos:end="1:96"><name pos:start="1:80" pos:end="1:92">VariantStream</name> <modifier pos:start="1:94" pos:end="1:94">*</modifier></type><name pos:start="1:95" pos:end="1:96">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:5">{<block_content pos:start="5:5" pos:end="37:26">

    <if_stmt pos:start="5:5" pos:end="35:9"><if pos:start="5:5" pos:end="35:9">if <condition pos:start="5:8" pos:end="5:50">(<expr pos:start="5:9" pos:end="5:49"><name pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:9">c</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:16">flags</name></name> <operator pos:start="5:18" pos:end="5:18">&amp;</operator> <name pos:start="5:20" pos:end="5:49">HLS_SECOND_LEVEL_SEGMENT_INDEX</name></expr>)</condition> <block pos:start="5:52" pos:end="35:9">{<block_content pos:start="7:9" pos:end="21:45">

        <decl_stmt pos:start="7:9" pos:end="7:50"><decl pos:start="7:9" pos:end="7:49"><type pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:12">char</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type> <name pos:start="7:16" pos:end="7:23">filename</name> <init pos:start="7:25" pos:end="7:49">= <expr pos:start="7:27" pos:end="7:49"><call pos:start="7:27" pos:end="7:49"><name pos:start="7:27" pos:end="7:35">av_strdup</name><argument_list pos:start="7:36" pos:end="7:49">(<argument pos:start="7:37" pos:end="7:48"><expr pos:start="7:37" pos:end="7:48"><name pos:start="7:37" pos:end="7:48"><name pos:start="7:37" pos:end="7:38">oc</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:48">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>  <comment type="line" pos:start="7:53" pos:end="7:84">// %%d will be %d after strftime</comment>

        <if_stmt pos:start="9:9" pos:end="11:35"><if pos:start="9:9" pos:end="11:35">if <condition pos:start="9:12" pos:end="9:22">(<expr pos:start="9:13" pos:end="9:21"><operator pos:start="9:13" pos:end="9:13">!</operator><name pos:start="9:14" pos:end="9:21">filename</name></expr>)</condition><block type="pseudo" pos:start="11:13" pos:end="11:35"><block_content pos:start="11:13" pos:end="11:35">

            <return pos:start="11:13" pos:end="11:35">return <expr pos:start="11:20" pos:end="11:34"><call pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:26">AVERROR</name><argument_list pos:start="11:27" pos:end="11:34">(<argument pos:start="11:28" pos:end="11:33"><expr pos:start="11:28" pos:end="11:33"><name pos:start="11:28" pos:end="11:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="13:9" pos:end="21:44"><if pos:start="13:9" pos:end="21:44">if <condition pos:start="13:12" pos:end="17:80">(<expr pos:start="13:13" pos:end="17:79"><call pos:start="13:13" pos:end="17:75"><name pos:start="13:13" pos:end="13:40">replace_int_data_in_filename</name><argument_list pos:start="13:41" pos:end="17:75">(<argument pos:start="13:42" pos:end="13:53"><expr pos:start="13:42" pos:end="13:53"><name pos:start="13:42" pos:end="13:53"><name pos:start="13:42" pos:end="13:43">oc</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:53">filename</name></name></expr></argument>, <argument pos:start="13:56" pos:end="13:75"><expr pos:start="13:56" pos:end="13:75"><sizeof pos:start="13:56" pos:end="13:75">sizeof<argument_list pos:start="13:62" pos:end="13:75">(<argument pos:start="13:63" pos:end="13:74"><expr pos:start="13:63" pos:end="13:74"><name pos:start="13:63" pos:end="13:74"><name pos:start="13:63" pos:end="13:64">oc</name><operator pos:start="13:65" pos:end="13:66">-&gt;</operator><name pos:start="13:67" pos:end="13:74">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

<cpp:if pos:start="15:1" pos:end="15:19">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:19">FF_API_HLS_WRAP</name></expr></cpp:if>

            <argument pos:start="17:13" pos:end="17:20"><expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:20">filename</name></expr></argument>, <argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><literal type="char" pos:start="17:23" pos:end="17:25">'d'</literal></expr></argument>, <argument pos:start="17:28" pos:end="17:74"><expr pos:start="17:28" pos:end="17:74"><ternary pos:start="17:28" pos:end="17:74"><condition pos:start="17:28" pos:end="17:36"><expr pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:28">c</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:34">wrap</name></name></expr> ?</condition><then pos:start="17:38" pos:end="17:59"> <expr pos:start="17:38" pos:end="17:59"><name pos:start="17:38" pos:end="17:49"><name pos:start="17:38" pos:end="17:39">vs</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:49">sequence</name></name> <operator pos:start="17:51" pos:end="17:51">%</operator> <name pos:start="17:53" pos:end="17:59"><name pos:start="17:53" pos:end="17:53">c</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:59">wrap</name></name></expr> </then><else pos:start="17:61" pos:end="17:74">: <expr pos:start="17:63" pos:end="17:74"><name pos:start="17:63" pos:end="17:74"><name pos:start="17:63" pos:end="17:64">vs</name><operator pos:start="17:65" pos:end="17:66">-&gt;</operator><name pos:start="17:67" pos:end="17:74">sequence</name></name></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="17:77" pos:end="17:77">&lt;</operator> <literal type="number" pos:start="17:79" pos:end="17:79">1</literal></expr>)</condition> <block pos:start="17:82" pos:end="21:44">{<block_content pos:start="21:13" pos:end="21:40">

<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="21:13" pos:end="21:39"><expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:20">filename</name></expr><operator pos:start="21:21" pos:end="21:21">,</operator> <expr pos:start="21:23" pos:end="21:25"><literal type="char" pos:start="21:23" pos:end="21:25">'d'</literal></expr><operator pos:start="21:26" pos:end="21:26">,</operator> <expr pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:29">vs</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:39">sequence</name></name></expr></expr_stmt>)</block_content> &lt; 1</block></if></if_stmt>)</block_content> <block pos:start="21:47" pos:end="35:9">{<block_content pos:start="25:13" pos:end="33:35">

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="25:13" pos:end="29:29"><expr pos:start="25:13" pos:end="29:28"><call pos:start="25:13" pos:end="29:28"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="29:28">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">c</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="27:77"><expr pos:start="25:37" pos:end="27:77"><literal type="string" pos:start="25:37" pos:end="25:91">"Invalid second level segment filename template '%s', "</literal>

                    <literal type="string" pos:start="27:21" pos:end="27:77">"you can try to remove second_level_segment_index flag\n"</literal></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:27"><expr pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:27">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:30"><expr pos:start="31:13" pos:end="31:29"><call pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:19">av_free</name><argument_list pos:start="31:20" pos:end="31:29">(<argument pos:start="31:21" pos:end="31:28"><expr pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:35">return <expr pos:start="33:20" pos:end="33:34"><call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:26">AVERROR</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><call pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:15">av_free</name><argument_list pos:start="37:16" pos:end="37:25">(<argument pos:start="37:17" pos:end="37:24"><expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:24">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>

    <if_stmt pos:start="41:5" pos:end="99:5"><if pos:start="41:5" pos:end="99:5">if <condition pos:start="41:8" pos:end="41:87">(<expr pos:start="41:9" pos:end="41:86"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:9">c</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">flags</name></name> <operator pos:start="41:18" pos:end="41:18">&amp;</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:49">HLS_SECOND_LEVEL_SEGMENT_SIZE</name> <operator pos:start="41:51" pos:end="41:51">|</operator> <name pos:start="41:53" pos:end="41:85">HLS_SECOND_LEVEL_SEGMENT_DURATION</name><operator pos:start="41:86" pos:end="41:86">)</operator></expr>)</condition> <block pos:start="41:89" pos:end="99:5">{<block_content pos:start="43:9" pos:end="97:9">

        <expr_stmt pos:start="43:9" pos:end="45:67"><expr pos:start="43:9" pos:end="45:66"><call pos:start="43:9" pos:end="45:66"><name pos:start="43:9" pos:end="43:18">av_strlcpy</name><argument_list pos:start="43:19" pos:end="45:66">(<argument pos:start="43:20" pos:end="43:57"><expr pos:start="43:20" pos:end="43:57"><name pos:start="43:20" pos:end="43:57"><name pos:start="43:20" pos:end="43:21">vs</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:57">current_segment_final_filename_fmt</name></name></expr></argument>, <argument pos:start="43:60" pos:end="43:71"><expr pos:start="43:60" pos:end="43:71"><name pos:start="43:60" pos:end="43:71"><name pos:start="43:60" pos:end="43:61">oc</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:71">filename</name></name></expr></argument>,

                   <argument pos:start="45:20" pos:end="45:65"><expr pos:start="45:20" pos:end="45:65"><sizeof pos:start="45:20" pos:end="45:65">sizeof<argument_list pos:start="45:26" pos:end="45:65">(<argument pos:start="45:27" pos:end="45:64"><expr pos:start="45:27" pos:end="45:64"><name pos:start="45:27" pos:end="45:64"><name pos:start="45:27" pos:end="45:28">vs</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:64">current_segment_final_filename_fmt</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="71:9"><if pos:start="47:9" pos:end="71:9">if <condition pos:start="47:12" pos:end="47:53">(<expr pos:start="47:13" pos:end="47:52"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:13">c</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">flags</name></name> <operator pos:start="47:22" pos:end="47:22">&amp;</operator> <name pos:start="47:24" pos:end="47:52">HLS_SECOND_LEVEL_SEGMENT_SIZE</name></expr>)</condition> <block pos:start="47:55" pos:end="71:9">{<block_content pos:start="49:13" pos:end="69:30">

            <decl_stmt pos:start="49:13" pos:end="49:54"><decl pos:start="49:13" pos:end="49:53"><type pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:16">char</name> <modifier pos:start="49:18" pos:end="49:18">*</modifier></type> <name pos:start="49:20" pos:end="49:27">filename</name> <init pos:start="49:29" pos:end="49:53">= <expr pos:start="49:31" pos:end="49:53"><call pos:start="49:31" pos:end="49:53"><name pos:start="49:31" pos:end="49:39">av_strdup</name><argument_list pos:start="49:40" pos:end="49:53">(<argument pos:start="49:41" pos:end="49:52"><expr pos:start="49:41" pos:end="49:52"><name pos:start="49:41" pos:end="49:52"><name pos:start="49:41" pos:end="49:42">oc</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:52">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>  <comment type="line" pos:start="49:57" pos:end="49:88">// %%s will be %s after strftime</comment>

            <if_stmt pos:start="51:13" pos:end="53:39"><if pos:start="51:13" pos:end="53:39">if <condition pos:start="51:16" pos:end="51:26">(<expr pos:start="51:17" pos:end="51:25"><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:25">filename</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:39"><block_content pos:start="53:17" pos:end="53:39">

                <return pos:start="53:17" pos:end="53:39">return <expr pos:start="53:24" pos:end="53:38"><call pos:start="53:24" pos:end="53:38"><name pos:start="53:24" pos:end="53:30">AVERROR</name><argument_list pos:start="53:31" pos:end="53:38">(<argument pos:start="53:32" pos:end="53:37"><expr pos:start="53:32" pos:end="53:37"><name pos:start="53:32" pos:end="53:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="67:13"><if pos:start="55:13" pos:end="67:13">if <condition pos:start="55:16" pos:end="55:103">(<expr pos:start="55:17" pos:end="55:102"><call pos:start="55:17" pos:end="55:98"><name pos:start="55:17" pos:end="55:44">replace_int_data_in_filename</name><argument_list pos:start="55:45" pos:end="55:98">(<argument pos:start="55:46" pos:end="55:57"><expr pos:start="55:46" pos:end="55:57"><name pos:start="55:46" pos:end="55:57"><name pos:start="55:46" pos:end="55:47">oc</name><operator pos:start="55:48" pos:end="55:49">-&gt;</operator><name pos:start="55:50" pos:end="55:57">filename</name></name></expr></argument>, <argument pos:start="55:60" pos:end="55:79"><expr pos:start="55:60" pos:end="55:79"><sizeof pos:start="55:60" pos:end="55:79">sizeof<argument_list pos:start="55:66" pos:end="55:79">(<argument pos:start="55:67" pos:end="55:78"><expr pos:start="55:67" pos:end="55:78"><name pos:start="55:67" pos:end="55:78"><name pos:start="55:67" pos:end="55:68">oc</name><operator pos:start="55:69" pos:end="55:70">-&gt;</operator><name pos:start="55:71" pos:end="55:78">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:82" pos:end="55:89"><expr pos:start="55:82" pos:end="55:89"><name pos:start="55:82" pos:end="55:89">filename</name></expr></argument>, <argument pos:start="55:92" pos:end="55:94"><expr pos:start="55:92" pos:end="55:94"><literal type="char" pos:start="55:92" pos:end="55:94">'s'</literal></expr></argument>, <argument pos:start="55:97" pos:end="55:97"><expr pos:start="55:97" pos:end="55:97"><literal type="number" pos:start="55:97" pos:end="55:97">0</literal></expr></argument>)</argument_list></call> <operator pos:start="55:100" pos:end="55:100">&lt;</operator> <literal type="number" pos:start="55:102" pos:end="55:102">1</literal></expr>)</condition> <block pos:start="55:105" pos:end="67:13">{<block_content pos:start="57:17" pos:end="65:39">

                <expr_stmt pos:start="57:17" pos:end="61:33"><expr pos:start="57:17" pos:end="61:32"><call pos:start="57:17" pos:end="61:32"><name pos:start="57:17" pos:end="57:22">av_log</name><argument_list pos:start="57:23" pos:end="61:32">(<argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">c</name></expr></argument>, <argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:41" pos:end="59:80"><expr pos:start="57:41" pos:end="59:80"><literal type="string" pos:start="57:41" pos:end="57:95">"Invalid second level segment filename template '%s', "</literal>

                        <literal type="string" pos:start="59:25" pos:end="59:80">"you can try to remove second_level_segment_size flag\n"</literal></expr></argument>,

                       <argument pos:start="61:24" pos:end="61:31"><expr pos:start="61:24" pos:end="61:31"><name pos:start="61:24" pos:end="61:31">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:34"><expr pos:start="63:17" pos:end="63:33"><call pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:23">av_free</name><argument_list pos:start="63:24" pos:end="63:33">(<argument pos:start="63:25" pos:end="63:32"><expr pos:start="63:25" pos:end="63:32"><name pos:start="63:25" pos:end="63:32">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="65:17" pos:end="65:39">return <expr pos:start="65:24" pos:end="65:38"><call pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:30">AVERROR</name><argument_list pos:start="65:31" pos:end="65:38">(<argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:30"><expr pos:start="69:13" pos:end="69:29"><call pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:19">av_free</name><argument_list pos:start="69:20" pos:end="69:29">(<argument pos:start="69:21" pos:end="69:28"><expr pos:start="69:21" pos:end="69:28"><name pos:start="69:21" pos:end="69:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="97:9"><if pos:start="73:9" pos:end="97:9">if <condition pos:start="73:12" pos:end="73:57">(<expr pos:start="73:13" pos:end="73:56"><name pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:13">c</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:20">flags</name></name> <operator pos:start="73:22" pos:end="73:22">&amp;</operator> <name pos:start="73:24" pos:end="73:56">HLS_SECOND_LEVEL_SEGMENT_DURATION</name></expr>)</condition> <block pos:start="73:59" pos:end="97:9">{<block_content pos:start="75:13" pos:end="95:30">

            <decl_stmt pos:start="75:13" pos:end="75:54"><decl pos:start="75:13" pos:end="75:53"><type pos:start="75:13" pos:end="75:18"><name pos:start="75:13" pos:end="75:16">char</name> <modifier pos:start="75:18" pos:end="75:18">*</modifier></type> <name pos:start="75:20" pos:end="75:27">filename</name> <init pos:start="75:29" pos:end="75:53">= <expr pos:start="75:31" pos:end="75:53"><call pos:start="75:31" pos:end="75:53"><name pos:start="75:31" pos:end="75:39">av_strdup</name><argument_list pos:start="75:40" pos:end="75:53">(<argument pos:start="75:41" pos:end="75:52"><expr pos:start="75:41" pos:end="75:52"><name pos:start="75:41" pos:end="75:52"><name pos:start="75:41" pos:end="75:42">oc</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:52">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>  <comment type="line" pos:start="75:57" pos:end="75:88">// %%t will be %t after strftime</comment>

            <if_stmt pos:start="77:13" pos:end="79:39"><if pos:start="77:13" pos:end="79:39">if <condition pos:start="77:16" pos:end="77:26">(<expr pos:start="77:17" pos:end="77:25"><operator pos:start="77:17" pos:end="77:17">!</operator><name pos:start="77:18" pos:end="77:25">filename</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:39"><block_content pos:start="79:17" pos:end="79:39">

                <return pos:start="79:17" pos:end="79:39">return <expr pos:start="79:24" pos:end="79:38"><call pos:start="79:24" pos:end="79:38"><name pos:start="79:24" pos:end="79:30">AVERROR</name><argument_list pos:start="79:31" pos:end="79:38">(<argument pos:start="79:32" pos:end="79:37"><expr pos:start="79:32" pos:end="79:37"><name pos:start="79:32" pos:end="79:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="93:13"><if pos:start="81:13" pos:end="93:13">if <condition pos:start="81:16" pos:end="81:103">(<expr pos:start="81:17" pos:end="81:102"><call pos:start="81:17" pos:end="81:98"><name pos:start="81:17" pos:end="81:44">replace_int_data_in_filename</name><argument_list pos:start="81:45" pos:end="81:98">(<argument pos:start="81:46" pos:end="81:57"><expr pos:start="81:46" pos:end="81:57"><name pos:start="81:46" pos:end="81:57"><name pos:start="81:46" pos:end="81:47">oc</name><operator pos:start="81:48" pos:end="81:49">-&gt;</operator><name pos:start="81:50" pos:end="81:57">filename</name></name></expr></argument>, <argument pos:start="81:60" pos:end="81:79"><expr pos:start="81:60" pos:end="81:79"><sizeof pos:start="81:60" pos:end="81:79">sizeof<argument_list pos:start="81:66" pos:end="81:79">(<argument pos:start="81:67" pos:end="81:78"><expr pos:start="81:67" pos:end="81:78"><name pos:start="81:67" pos:end="81:78"><name pos:start="81:67" pos:end="81:68">oc</name><operator pos:start="81:69" pos:end="81:70">-&gt;</operator><name pos:start="81:71" pos:end="81:78">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:82" pos:end="81:89"><expr pos:start="81:82" pos:end="81:89"><name pos:start="81:82" pos:end="81:89">filename</name></expr></argument>, <argument pos:start="81:92" pos:end="81:94"><expr pos:start="81:92" pos:end="81:94"><literal type="char" pos:start="81:92" pos:end="81:94">'t'</literal></expr></argument>, <argument pos:start="81:97" pos:end="81:97"><expr pos:start="81:97" pos:end="81:97"><literal type="number" pos:start="81:97" pos:end="81:97">0</literal></expr></argument>)</argument_list></call> <operator pos:start="81:100" pos:end="81:100">&lt;</operator> <literal type="number" pos:start="81:102" pos:end="81:102">1</literal></expr>)</condition> <block pos:start="81:105" pos:end="93:13">{<block_content pos:start="83:17" pos:end="91:39">

                <expr_stmt pos:start="83:17" pos:end="87:33"><expr pos:start="83:17" pos:end="87:32"><call pos:start="83:17" pos:end="87:32"><name pos:start="83:17" pos:end="83:22">av_log</name><argument_list pos:start="83:23" pos:end="87:32">(<argument pos:start="83:24" pos:end="83:24"><expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">c</name></expr></argument>, <argument pos:start="83:27" pos:end="83:38"><expr pos:start="83:27" pos:end="83:38"><name pos:start="83:27" pos:end="83:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:41" pos:end="85:80"><expr pos:start="83:41" pos:end="85:80"><literal type="string" pos:start="83:41" pos:end="83:95">"Invalid second level segment filename template '%s', "</literal>

                        <literal type="string" pos:start="85:25" pos:end="85:80">"you can try to remove second_level_segment_time flag\n"</literal></expr></argument>,

                       <argument pos:start="87:24" pos:end="87:31"><expr pos:start="87:24" pos:end="87:31"><name pos:start="87:24" pos:end="87:31">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:34"><expr pos:start="89:17" pos:end="89:33"><call pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:23">av_free</name><argument_list pos:start="89:24" pos:end="89:33">(<argument pos:start="89:25" pos:end="89:32"><expr pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:32">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="91:17" pos:end="91:39">return <expr pos:start="91:24" pos:end="91:38"><call pos:start="91:24" pos:end="91:38"><name pos:start="91:24" pos:end="91:30">AVERROR</name><argument_list pos:start="91:31" pos:end="91:38">(<argument pos:start="91:32" pos:end="91:37"><expr pos:start="91:32" pos:end="91:37"><name pos:start="91:32" pos:end="91:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><call pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:19">av_free</name><argument_list pos:start="95:20" pos:end="95:29">(<argument pos:start="95:21" pos:end="95:28"><expr pos:start="95:21" pos:end="95:28"><name pos:start="95:21" pos:end="95:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

}
</unit>
