<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6492.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">pcm_encode_init</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <expr_stmt pos:start="5:5" pos:end="5:26"><expr pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:9">avctx</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:21">frame_size</name></name> <operator pos:start="5:23" pos:end="5:23">=</operator> <literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr>;</expr_stmt>

    <switch pos:start="7:5" pos:end="25:5">switch<condition pos:start="7:11" pos:end="7:28">(<expr pos:start="7:12" pos:end="7:27"><name pos:start="7:12" pos:end="7:27"><name pos:start="7:12" pos:end="7:16">avctx</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:23">codec</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">id</name></name></expr>)</condition> <block pos:start="7:30" pos:end="25:5">{<block_content pos:start="9:5" pos:end="23:14">

    <case pos:start="9:5" pos:end="9:27">case <expr pos:start="9:10" pos:end="9:26"><name pos:start="9:10" pos:end="9:26">CODEC_ID_PCM_ALAW</name></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><call pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:26">pcm_alaw_tableinit</name><argument_list pos:start="11:27" pos:end="11:28">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="13:9" pos:end="13:14">break;</break>

    <case pos:start="15:5" pos:end="15:28">case <expr pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:27">CODEC_ID_PCM_MULAW</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:26">pcm_ulaw_tableinit</name><argument_list pos:start="17:27" pos:end="17:28">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <default pos:start="21:5" pos:end="21:12">default:</default>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="29:5" pos:end="29:76"><expr pos:start="29:5" pos:end="29:75"><name pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:9">avctx</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:32">bits_per_coded_sample</name></name> <operator pos:start="29:34" pos:end="29:34">=</operator> <call pos:start="29:36" pos:end="29:75"><name pos:start="29:36" pos:end="29:57">av_get_bits_per_sample</name><argument_list pos:start="29:58" pos:end="29:75">(<argument pos:start="29:59" pos:end="29:74"><expr pos:start="29:59" pos:end="29:74"><name pos:start="29:59" pos:end="29:74"><name pos:start="29:59" pos:end="29:63">avctx</name><operator pos:start="29:64" pos:end="29:65">-&gt;</operator><name pos:start="29:66" pos:end="29:70">codec</name><operator pos:start="29:71" pos:end="29:72">-&gt;</operator><name pos:start="29:73" pos:end="29:74">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:74"><expr pos:start="31:5" pos:end="31:73"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:22">block_align</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:40"><name pos:start="31:26" pos:end="31:30">avctx</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:40">channels</name></name> <operator pos:start="31:42" pos:end="31:42">*</operator> <name pos:start="31:44" pos:end="31:71"><name pos:start="31:44" pos:end="31:48">avctx</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:71">bits_per_coded_sample</name></name><operator pos:start="31:72" pos:end="31:72">/</operator><literal type="number" pos:start="31:73" pos:end="31:73">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:22">coded_frame</name></name><operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:45"><name pos:start="33:25" pos:end="33:43">avcodec_alloc_frame</name><argument_list pos:start="33:44" pos:end="33:45">()</argument_list></call></expr>;</expr_stmt>





    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
