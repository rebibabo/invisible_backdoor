<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4538.c" pos:tabs="8"><function pos:start="1:1" pos:end="48:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">check</name><parameter_list pos:start="1:18" pos:end="1:46">(<parameter pos:start="1:19" pos:end="1:23"><decl pos:start="1:19" pos:end="1:23"><type pos:start="1:19" pos:end="1:23"><name pos:start="1:19" pos:end="1:21">int</name></type> <name pos:start="1:23" pos:end="1:23">a</name></decl></parameter>, <parameter pos:start="1:26" pos:end="1:30"><decl pos:start="1:26" pos:end="1:30"><type pos:start="1:26" pos:end="1:30"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:30">b</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:36">bool</name></type> <name pos:start="1:38" pos:end="1:45">expected</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="48:1">{<block_content pos:start="5:5" pos:end="46:35">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">qht_stats</name></name></type> <name pos:start="5:22" pos:end="5:26">stats</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>




    <for pos:start="12:5" pos:end="30:5">for <control pos:start="12:9" pos:end="12:27">(<init pos:start="12:10" pos:end="12:15"><expr pos:start="12:10" pos:end="12:14"><name pos:start="12:10" pos:end="12:10">i</name> <operator pos:start="12:12" pos:end="12:12">=</operator> <name pos:start="12:14" pos:end="12:14">a</name></expr>;</init> <condition pos:start="12:17" pos:end="12:22"><expr pos:start="12:17" pos:end="12:21"><name pos:start="12:17" pos:end="12:17">i</name> <operator pos:start="12:19" pos:end="12:19">&lt;</operator> <name pos:start="12:21" pos:end="12:21">b</name></expr>;</condition> <incr pos:start="12:24" pos:end="12:26"><expr pos:start="12:24" pos:end="12:26"><name pos:start="12:24" pos:end="12:24">i</name><operator pos:start="12:25" pos:end="12:26">++</operator></expr></incr>)</control> <block pos:start="12:29" pos:end="30:5">{<block_content pos:start="14:9" pos:end="28:39">

        <decl_stmt pos:start="14:9" pos:end="14:16"><decl pos:start="14:9" pos:end="14:15"><type pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:12">void</name> <modifier pos:start="14:14" pos:end="14:14">*</modifier></type><name pos:start="14:15" pos:end="14:15">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="16:9" pos:end="16:22"><decl pos:start="16:9" pos:end="16:21"><type pos:start="16:9" pos:end="16:16"><name pos:start="16:9" pos:end="16:16">uint32_t</name></type> <name pos:start="16:18" pos:end="16:21">hash</name></decl>;</decl_stmt>

        <decl_stmt pos:start="18:9" pos:end="18:20"><decl pos:start="18:9" pos:end="18:19"><type pos:start="18:9" pos:end="18:15"><name pos:start="18:9" pos:end="18:15">int32_t</name></type> <name pos:start="18:17" pos:end="18:19">val</name></decl>;</decl_stmt>



        <expr_stmt pos:start="22:9" pos:end="22:16"><expr pos:start="22:9" pos:end="22:15"><name pos:start="22:9" pos:end="22:11">val</name> <operator pos:start="22:13" pos:end="22:13">=</operator> <name pos:start="22:15" pos:end="22:15">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="24:9" pos:end="24:17"><expr pos:start="24:9" pos:end="24:16"><name pos:start="24:9" pos:end="24:12">hash</name> <operator pos:start="24:14" pos:end="24:14">=</operator> <name pos:start="24:16" pos:end="24:16">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="26:9" pos:end="26:50"><expr pos:start="26:9" pos:end="26:49"><name pos:start="26:9" pos:end="26:9">p</name> <operator pos:start="26:11" pos:end="26:11">=</operator> <call pos:start="26:13" pos:end="26:49"><name pos:start="26:13" pos:end="26:22">qht_lookup</name><argument_list pos:start="26:23" pos:end="26:49">(<argument pos:start="26:24" pos:end="26:26"><expr pos:start="26:24" pos:end="26:26"><operator pos:start="26:24" pos:end="26:24">&amp;</operator><name pos:start="26:25" pos:end="26:26">ht</name></expr></argument>, <argument pos:start="26:29" pos:end="26:36"><expr pos:start="26:29" pos:end="26:36"><name pos:start="26:29" pos:end="26:36">is_equal</name></expr></argument>, <argument pos:start="26:39" pos:end="26:42"><expr pos:start="26:39" pos:end="26:42"><operator pos:start="26:39" pos:end="26:39">&amp;</operator><name pos:start="26:40" pos:end="26:42">val</name></expr></argument>, <argument pos:start="26:45" pos:end="26:48"><expr pos:start="26:45" pos:end="26:48"><name pos:start="26:45" pos:end="26:48">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="28:9" pos:end="28:39"><expr pos:start="28:9" pos:end="28:38"><call pos:start="28:9" pos:end="28:38"><name pos:start="28:9" pos:end="28:21">g_assert_true</name><argument_list pos:start="28:22" pos:end="28:38">(<argument pos:start="28:23" pos:end="28:37"><expr pos:start="28:23" pos:end="28:37"><operator pos:start="28:23" pos:end="28:23">!</operator><operator pos:start="28:24" pos:end="28:24">!</operator><name pos:start="28:25" pos:end="28:25">p</name> <operator pos:start="28:27" pos:end="28:28">==</operator> <name pos:start="28:30" pos:end="28:37">expected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="32:5" pos:end="32:22"><expr pos:start="32:5" pos:end="32:21"><call pos:start="32:5" pos:end="32:21"><name pos:start="32:5" pos:end="32:19">rcu_read_unlock</name><argument_list pos:start="32:20" pos:end="32:21">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="36:5" pos:end="36:37"><expr pos:start="36:5" pos:end="36:36"><call pos:start="36:5" pos:end="36:36"><name pos:start="36:5" pos:end="36:23">qht_statistics_init</name><argument_list pos:start="36:24" pos:end="36:36">(<argument pos:start="36:25" pos:end="36:27"><expr pos:start="36:25" pos:end="36:27"><operator pos:start="36:25" pos:end="36:25">&amp;</operator><name pos:start="36:26" pos:end="36:27">ht</name></expr></argument>, <argument pos:start="36:30" pos:end="36:35"><expr pos:start="36:30" pos:end="36:35"><operator pos:start="36:30" pos:end="36:30">&amp;</operator><name pos:start="36:31" pos:end="36:35">stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="38:5" pos:end="42:5"><if pos:start="38:5" pos:end="42:5">if <condition pos:start="38:8" pos:end="38:32">(<expr pos:start="38:9" pos:end="38:31"><name pos:start="38:9" pos:end="38:31"><name pos:start="38:9" pos:end="38:13">stats</name><operator pos:start="38:14" pos:end="38:14">.</operator><name pos:start="38:15" pos:end="38:31">used_head_buckets</name></name></expr>)</condition> <block pos:start="38:34" pos:end="42:5">{<block_content pos:start="40:9" pos:end="40:60">

        <expr_stmt pos:start="40:9" pos:end="40:60"><expr pos:start="40:9" pos:end="40:59"><call pos:start="40:9" pos:end="40:59"><name pos:start="40:9" pos:end="40:25">g_assert_cmpfloat</name><argument_list pos:start="40:26" pos:end="40:59">(<argument pos:start="40:27" pos:end="40:49"><expr pos:start="40:27" pos:end="40:49"><call pos:start="40:27" pos:end="40:49"><name pos:start="40:27" pos:end="40:35">qdist_avg</name><argument_list pos:start="40:36" pos:end="40:49">(<argument pos:start="40:37" pos:end="40:48"><expr pos:start="40:37" pos:end="40:48"><operator pos:start="40:37" pos:end="40:37">&amp;</operator><name pos:start="40:38" pos:end="40:48"><name pos:start="40:38" pos:end="40:42">stats</name><operator pos:start="40:43" pos:end="40:43">.</operator><name pos:start="40:44" pos:end="40:48">chain</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="40:52" pos:end="40:53"><expr pos:start="40:52" pos:end="40:53"><operator pos:start="40:52" pos:end="40:53">&gt;=</operator></expr></argument>, <argument pos:start="40:56" pos:end="40:58"><expr pos:start="40:56" pos:end="40:58"><literal type="number" pos:start="40:56" pos:end="40:58">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="44:5" pos:end="44:47"><expr pos:start="44:5" pos:end="44:46"><call pos:start="44:5" pos:end="44:46"><name pos:start="44:5" pos:end="44:20">g_assert_cmpuint</name><argument_list pos:start="44:21" pos:end="44:46">(<argument pos:start="44:22" pos:end="44:39"><expr pos:start="44:22" pos:end="44:39"><name pos:start="44:22" pos:end="44:39"><name pos:start="44:22" pos:end="44:26">stats</name><operator pos:start="44:27" pos:end="44:27">.</operator><name pos:start="44:28" pos:end="44:39">head_buckets</name></name></expr></argument>, <argument pos:start="44:42" pos:end="44:42"><expr pos:start="44:42" pos:end="44:42"><operator pos:start="44:42" pos:end="44:42">&gt;</operator></expr></argument>, <argument pos:start="44:45" pos:end="44:45"><expr pos:start="44:45" pos:end="44:45"><literal type="number" pos:start="44:45" pos:end="44:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="46:5" pos:end="46:35"><expr pos:start="46:5" pos:end="46:34"><call pos:start="46:5" pos:end="46:34"><name pos:start="46:5" pos:end="46:26">qht_statistics_destroy</name><argument_list pos:start="46:27" pos:end="46:34">(<argument pos:start="46:28" pos:end="46:33"><expr pos:start="46:28" pos:end="46:33"><operator pos:start="46:28" pos:end="46:28">&amp;</operator><name pos:start="46:29" pos:end="46:33">stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
