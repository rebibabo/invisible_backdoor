<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19954.c" pos:tabs="8"><function pos:start="1:1" pos:end="401:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">cpu_x86_cpuid</name><parameter_list pos:start="1:19" pos:end="5:48">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:30">CPUX86State</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:45">uint32_t</name></type> <name pos:start="1:47" pos:end="1:51">index</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:32"><decl pos:start="3:20" pos:end="3:32"><type pos:start="3:20" pos:end="3:32"><name pos:start="3:20" pos:end="3:27">uint32_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:32">eax</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:42">uint32_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">ebx</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:32"><decl pos:start="5:20" pos:end="5:32"><type pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:27">uint32_t</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:32">ecx</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:47"><decl pos:start="5:35" pos:end="5:47"><type pos:start="5:35" pos:end="5:47"><name pos:start="5:35" pos:end="5:42">uint32_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">edx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="401:1">{<block_content pos:start="11:5" pos:end="399:5">

    <comment type="block" pos:start="9:5" pos:end="9:39">/* test if maximum index reached */</comment>

    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:13">index</name> <operator pos:start="11:15" pos:end="11:15">&amp;</operator> <literal type="number" pos:start="11:17" pos:end="11:26">0x80000000</literal></expr>)</condition> <block pos:start="11:29" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:37">

        <if_stmt pos:start="13:9" pos:end="15:37"><if pos:start="13:9" pos:end="15:37">if <condition pos:start="13:12" pos:end="13:38">(<expr pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:17">index</name> <operator pos:start="13:19" pos:end="13:19">&gt;</operator> <name pos:start="13:21" pos:end="13:37"><name pos:start="13:21" pos:end="13:23">env</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:37">cpuid_xlevel</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:37"><block_content pos:start="15:13" pos:end="15:37">

            <expr_stmt pos:start="15:13" pos:end="15:37"><expr pos:start="15:13" pos:end="15:36"><name pos:start="15:13" pos:end="15:17">index</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:23">env</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:36">cpuid_level</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="23:5">else <block pos:start="17:12" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:37">

        <if_stmt pos:start="19:9" pos:end="21:37"><if pos:start="19:9" pos:end="21:37">if <condition pos:start="19:12" pos:end="19:37">(<expr pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:17">index</name> <operator pos:start="19:19" pos:end="19:19">&gt;</operator> <name pos:start="19:21" pos:end="19:36"><name pos:start="19:21" pos:end="19:23">env</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:36">cpuid_level</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:37"><block_content pos:start="21:13" pos:end="21:37">

            <expr_stmt pos:start="21:13" pos:end="21:37"><expr pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:17">index</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:36"><name pos:start="21:21" pos:end="21:23">env</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:36">cpuid_level</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="27:5" pos:end="399:5">switch<condition pos:start="27:11" pos:end="27:17">(<expr pos:start="27:12" pos:end="27:16"><name pos:start="27:12" pos:end="27:16">index</name></expr>)</condition> <block pos:start="27:19" pos:end="399:5">{<block_content pos:start="29:5" pos:end="397:14">

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">0</literal></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:12">eax</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:31"><name pos:start="31:16" pos:end="31:18">env</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:31">cpuid_level</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:12">ebx</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:33"><name pos:start="33:16" pos:end="33:18">env</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:33">cpuid_vendor1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:12">edx</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:33"><name pos:start="35:16" pos:end="35:18">env</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:33">cpuid_vendor2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:12">ecx</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:33"><name pos:start="37:16" pos:end="37:18">env</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:33">cpuid_vendor3</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="41:9" pos:end="47:44">/* sysenter isn't supported on compatibility mode on AMD.  and syscall

         * isn't supported in compatibility mode on Intel.  so advertise the

         * actuall cpu, and say goodbye to migration between different vendors

         * is you use compatibility mode. */</comment>

        <if_stmt pos:start="49:9" pos:end="51:47"><if pos:start="49:9" pos:end="51:47">if <condition pos:start="49:12" pos:end="49:26">(<expr pos:start="49:13" pos:end="49:25"><call pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:23">kvm_enabled</name><argument_list pos:start="49:24" pos:end="49:25">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:47"><block_content pos:start="51:13" pos:end="51:47">

            <expr_stmt pos:start="51:13" pos:end="51:47"><expr pos:start="51:13" pos:end="51:46"><call pos:start="51:13" pos:end="51:46"><name pos:start="51:13" pos:end="51:22">host_cpuid</name><argument_list pos:start="51:23" pos:end="51:46">(<argument pos:start="51:24" pos:end="51:24"><expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">0</literal></expr></argument>, <argument pos:start="51:27" pos:end="51:30"><expr pos:start="51:27" pos:end="51:30"><name pos:start="51:27" pos:end="51:30">NULL</name></expr></argument>, <argument pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:35">ebx</name></expr></argument>, <argument pos:start="51:38" pos:end="51:40"><expr pos:start="51:38" pos:end="51:40"><name pos:start="51:38" pos:end="51:40">ecx</name></expr></argument>, <argument pos:start="51:43" pos:end="51:45"><expr pos:start="51:43" pos:end="51:45"><name pos:start="51:43" pos:end="51:45">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">1</literal></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><operator pos:start="57:9" pos:end="57:9">*</operator><name pos:start="57:10" pos:end="57:12">eax</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:33"><name pos:start="57:16" pos:end="57:18">env</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:33">cpuid_version</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:51"><expr pos:start="59:9" pos:end="59:50"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:12">ebx</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:19">env</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:34">cpuid_apic_id</name></name> <operator pos:start="59:36" pos:end="59:37">&lt;&lt;</operator> <literal type="number" pos:start="59:39" pos:end="59:40">24</literal><operator pos:start="59:41" pos:end="59:41">)</operator> <operator pos:start="59:43" pos:end="59:43">|</operator> <literal type="number" pos:start="59:45" pos:end="59:45">8</literal> <operator pos:start="59:47" pos:end="59:48">&lt;&lt;</operator> <literal type="number" pos:start="59:50" pos:end="59:50">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:53" pos:end="59:101">/* CLFLUSH size in quad words, Linux wants it. */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:12">ecx</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:38"><name pos:start="61:16" pos:end="61:18">env</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:38">cpuid_ext_features</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:12">edx</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:34"><name pos:start="63:16" pos:end="63:18">env</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:34">cpuid_features</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="67:9" pos:end="67:66">/* "Hypervisor present" bit required for Microsoft SVVP */</comment>

        <if_stmt pos:start="69:9" pos:end="71:30"><if pos:start="69:9" pos:end="71:30">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><call pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:23">kvm_enabled</name><argument_list pos:start="69:24" pos:end="69:25">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:30"><block_content pos:start="71:13" pos:end="71:30">

            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><operator pos:start="71:13" pos:end="71:13">*</operator><name pos:start="71:14" pos:end="71:16">ecx</name> <operator pos:start="71:18" pos:end="71:19">|=</operator> <operator pos:start="71:21" pos:end="71:21">(</operator><literal type="number" pos:start="71:22" pos:end="71:22">1</literal> <operator pos:start="71:24" pos:end="71:25">&lt;&lt;</operator> <literal type="number" pos:start="71:27" pos:end="71:28">31</literal><operator pos:start="71:29" pos:end="71:29">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:11">case <expr pos:start="75:10" pos:end="75:10"><literal type="number" pos:start="75:10" pos:end="75:10">2</literal></expr>:</case>

        <comment type="block" pos:start="77:9" pos:end="77:62">/* cache info: needed for Pentium Pro compatibility */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:17"><expr pos:start="79:9" pos:end="79:16"><operator pos:start="79:9" pos:end="79:9">*</operator><name pos:start="79:10" pos:end="79:12">eax</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <literal type="number" pos:start="79:16" pos:end="79:16">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:17"><expr pos:start="81:9" pos:end="81:16"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:12">ebx</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:17"><expr pos:start="83:9" pos:end="83:16"><operator pos:start="83:9" pos:end="83:9">*</operator><name pos:start="83:10" pos:end="83:12">ecx</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <literal type="number" pos:start="83:16" pos:end="83:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:24"><expr pos:start="85:9" pos:end="85:23"><operator pos:start="85:9" pos:end="85:9">*</operator><name pos:start="85:10" pos:end="85:12">edx</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <literal type="number" pos:start="85:16" pos:end="85:23">0x2c307d</literal></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:11">case <expr pos:start="89:10" pos:end="89:10"><literal type="number" pos:start="89:10" pos:end="89:10">4</literal></expr>:</case>

        <comment type="block" pos:start="91:9" pos:end="91:55">/* cache info: needed for Core compatibility */</comment>

        <switch pos:start="93:9" pos:end="143:9">switch <condition pos:start="93:16" pos:end="93:21">(<expr pos:start="93:17" pos:end="93:20"><operator pos:start="93:17" pos:end="93:17">*</operator><name pos:start="93:18" pos:end="93:20">ecx</name></expr>)</condition> <block pos:start="93:23" pos:end="143:9">{<block_content pos:start="95:13" pos:end="141:22">

            <case pos:start="95:13" pos:end="95:19">case <expr pos:start="95:18" pos:end="95:18"><literal type="number" pos:start="95:18" pos:end="95:18">0</literal></expr>:</case> <comment type="block" pos:start="95:21" pos:end="95:40">/* L1 dcache info */</comment>

                <expr_stmt pos:start="97:17" pos:end="97:33"><expr pos:start="97:17" pos:end="97:32"><operator pos:start="97:17" pos:end="97:17">*</operator><name pos:start="97:18" pos:end="97:20">eax</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <literal type="number" pos:start="97:24" pos:end="97:32">0x0000121</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:33"><expr pos:start="99:17" pos:end="99:32"><operator pos:start="99:17" pos:end="99:17">*</operator><name pos:start="99:18" pos:end="99:20">ebx</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <literal type="number" pos:start="99:24" pos:end="99:32">0x1c0003f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:33"><expr pos:start="101:17" pos:end="101:32"><operator pos:start="101:17" pos:end="101:17">*</operator><name pos:start="101:18" pos:end="101:20">ecx</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <literal type="number" pos:start="101:24" pos:end="101:32">0x000003f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:33"><expr pos:start="103:17" pos:end="103:32"><operator pos:start="103:17" pos:end="103:17">*</operator><name pos:start="103:18" pos:end="103:20">edx</name> <operator pos:start="103:22" pos:end="103:22">=</operator> <literal type="number" pos:start="103:24" pos:end="103:32">0x0000001</literal></expr>;</expr_stmt>

                <break pos:start="105:17" pos:end="105:22">break;</break>

            <case pos:start="107:13" pos:end="107:19">case <expr pos:start="107:18" pos:end="107:18"><literal type="number" pos:start="107:18" pos:end="107:18">1</literal></expr>:</case> <comment type="block" pos:start="107:21" pos:end="107:40">/* L1 icache info */</comment>

                <expr_stmt pos:start="109:17" pos:end="109:33"><expr pos:start="109:17" pos:end="109:32"><operator pos:start="109:17" pos:end="109:17">*</operator><name pos:start="109:18" pos:end="109:20">eax</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <literal type="number" pos:start="109:24" pos:end="109:32">0x0000122</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:33"><expr pos:start="111:17" pos:end="111:32"><operator pos:start="111:17" pos:end="111:17">*</operator><name pos:start="111:18" pos:end="111:20">ebx</name> <operator pos:start="111:22" pos:end="111:22">=</operator> <literal type="number" pos:start="111:24" pos:end="111:32">0x1c0003f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:33"><expr pos:start="113:17" pos:end="113:32"><operator pos:start="113:17" pos:end="113:17">*</operator><name pos:start="113:18" pos:end="113:20">ecx</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <literal type="number" pos:start="113:24" pos:end="113:32">0x000003f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:33"><expr pos:start="115:17" pos:end="115:32"><operator pos:start="115:17" pos:end="115:17">*</operator><name pos:start="115:18" pos:end="115:20">edx</name> <operator pos:start="115:22" pos:end="115:22">=</operator> <literal type="number" pos:start="115:24" pos:end="115:32">0x0000001</literal></expr>;</expr_stmt>

                <break pos:start="117:17" pos:end="117:22">break;</break>

            <case pos:start="119:13" pos:end="119:19">case <expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">2</literal></expr>:</case> <comment type="block" pos:start="119:21" pos:end="119:39">/* L2 cache info */</comment>

                <expr_stmt pos:start="121:17" pos:end="121:33"><expr pos:start="121:17" pos:end="121:32"><operator pos:start="121:17" pos:end="121:17">*</operator><name pos:start="121:18" pos:end="121:20">eax</name> <operator pos:start="121:22" pos:end="121:22">=</operator> <literal type="number" pos:start="121:24" pos:end="121:32">0x0000143</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:33"><expr pos:start="123:17" pos:end="123:32"><operator pos:start="123:17" pos:end="123:17">*</operator><name pos:start="123:18" pos:end="123:20">ebx</name> <operator pos:start="123:22" pos:end="123:22">=</operator> <literal type="number" pos:start="123:24" pos:end="123:32">0x3c0003f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:33"><expr pos:start="125:17" pos:end="125:32"><operator pos:start="125:17" pos:end="125:17">*</operator><name pos:start="125:18" pos:end="125:20">ecx</name> <operator pos:start="125:22" pos:end="125:22">=</operator> <literal type="number" pos:start="125:24" pos:end="125:32">0x0000fff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:33"><expr pos:start="127:17" pos:end="127:32"><operator pos:start="127:17" pos:end="127:17">*</operator><name pos:start="127:18" pos:end="127:20">edx</name> <operator pos:start="127:22" pos:end="127:22">=</operator> <literal type="number" pos:start="127:24" pos:end="127:32">0x0000001</literal></expr>;</expr_stmt>

                <break pos:start="129:17" pos:end="129:22">break;</break>

            <default pos:start="131:13" pos:end="131:20">default:</default> <comment type="block" pos:start="131:22" pos:end="131:38">/* end of info */</comment>

                <expr_stmt pos:start="133:17" pos:end="133:25"><expr pos:start="133:17" pos:end="133:24"><operator pos:start="133:17" pos:end="133:17">*</operator><name pos:start="133:18" pos:end="133:20">eax</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <literal type="number" pos:start="133:24" pos:end="133:24">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:25"><expr pos:start="135:17" pos:end="135:24"><operator pos:start="135:17" pos:end="135:17">*</operator><name pos:start="135:18" pos:end="135:20">ebx</name> <operator pos:start="135:22" pos:end="135:22">=</operator> <literal type="number" pos:start="135:24" pos:end="135:24">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:25"><expr pos:start="137:17" pos:end="137:24"><operator pos:start="137:17" pos:end="137:17">*</operator><name pos:start="137:18" pos:end="137:20">ecx</name> <operator pos:start="137:22" pos:end="137:22">=</operator> <literal type="number" pos:start="137:24" pos:end="137:24">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:25"><expr pos:start="139:17" pos:end="139:24"><operator pos:start="139:17" pos:end="139:17">*</operator><name pos:start="139:18" pos:end="139:20">edx</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <literal type="number" pos:start="139:24" pos:end="139:24">0</literal></expr>;</expr_stmt>

                <break pos:start="141:17" pos:end="141:22">break;</break>

        </block_content>}</block></switch>



        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:11">case <expr pos:start="149:10" pos:end="149:10"><literal type="number" pos:start="149:10" pos:end="149:10">5</literal></expr>:</case>

        <comment type="block" pos:start="151:9" pos:end="151:55">/* mwait info: needed for Core compatibility */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:17"><expr pos:start="153:9" pos:end="153:16"><operator pos:start="153:9" pos:end="153:9">*</operator><name pos:start="153:10" pos:end="153:12">eax</name> <operator pos:start="153:14" pos:end="153:14">=</operator> <literal type="number" pos:start="153:16" pos:end="153:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="153:19" pos:end="153:59">/* Smallest monitor-line size in bytes */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:17"><expr pos:start="155:9" pos:end="155:16"><operator pos:start="155:9" pos:end="155:9">*</operator><name pos:start="155:10" pos:end="155:12">ebx</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <literal type="number" pos:start="155:16" pos:end="155:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="155:19" pos:end="155:58">/* Largest monitor-line size in bytes */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:49"><expr pos:start="157:9" pos:end="157:48"><operator pos:start="157:9" pos:end="157:9">*</operator><name pos:start="157:10" pos:end="157:12">ecx</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <name pos:start="157:16" pos:end="157:30">CPUID_MWAIT_EMX</name> <operator pos:start="157:32" pos:end="157:32">|</operator> <name pos:start="157:34" pos:end="157:48">CPUID_MWAIT_IBE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:17"><expr pos:start="159:9" pos:end="159:16"><operator pos:start="159:9" pos:end="159:9">*</operator><name pos:start="159:10" pos:end="159:12">edx</name> <operator pos:start="159:14" pos:end="159:14">=</operator> <literal type="number" pos:start="159:16" pos:end="159:16">0</literal></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:11">case <expr pos:start="163:10" pos:end="163:10"><literal type="number" pos:start="163:10" pos:end="163:10">6</literal></expr>:</case>

        <comment type="block" pos:start="165:9" pos:end="165:36">/* Thermal and Power Leaf */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:17"><expr pos:start="167:9" pos:end="167:16"><operator pos:start="167:9" pos:end="167:9">*</operator><name pos:start="167:10" pos:end="167:12">eax</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <literal type="number" pos:start="167:16" pos:end="167:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:17"><expr pos:start="169:9" pos:end="169:16"><operator pos:start="169:9" pos:end="169:9">*</operator><name pos:start="169:10" pos:end="169:12">ebx</name> <operator pos:start="169:14" pos:end="169:14">=</operator> <literal type="number" pos:start="169:16" pos:end="169:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:17"><expr pos:start="171:9" pos:end="171:16"><operator pos:start="171:9" pos:end="171:9">*</operator><name pos:start="171:10" pos:end="171:12">ecx</name> <operator pos:start="171:14" pos:end="171:14">=</operator> <literal type="number" pos:start="171:16" pos:end="171:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:17"><expr pos:start="173:9" pos:end="173:16"><operator pos:start="173:9" pos:end="173:9">*</operator><name pos:start="173:10" pos:end="173:12">edx</name> <operator pos:start="173:14" pos:end="173:14">=</operator> <literal type="number" pos:start="173:16" pos:end="173:16">0</literal></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:11">case <expr pos:start="177:10" pos:end="177:10"><literal type="number" pos:start="177:10" pos:end="177:10">9</literal></expr>:</case>

        <comment type="block" pos:start="179:9" pos:end="179:50">/* Direct Cache Access Information Leaf */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:17"><expr pos:start="181:9" pos:end="181:16"><operator pos:start="181:9" pos:end="181:9">*</operator><name pos:start="181:10" pos:end="181:12">eax</name> <operator pos:start="181:14" pos:end="181:14">=</operator> <literal type="number" pos:start="181:16" pos:end="181:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="181:19" pos:end="181:48">/* Bits 0-31 in DCA_CAP MSR */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:17"><expr pos:start="183:9" pos:end="183:16"><operator pos:start="183:9" pos:end="183:9">*</operator><name pos:start="183:10" pos:end="183:12">ebx</name> <operator pos:start="183:14" pos:end="183:14">=</operator> <literal type="number" pos:start="183:16" pos:end="183:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:17"><expr pos:start="185:9" pos:end="185:16"><operator pos:start="185:9" pos:end="185:9">*</operator><name pos:start="185:10" pos:end="185:12">ecx</name> <operator pos:start="185:14" pos:end="185:14">=</operator> <literal type="number" pos:start="185:16" pos:end="185:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:17"><expr pos:start="187:9" pos:end="187:16"><operator pos:start="187:9" pos:end="187:9">*</operator><name pos:start="187:10" pos:end="187:12">edx</name> <operator pos:start="187:14" pos:end="187:14">=</operator> <literal type="number" pos:start="187:16" pos:end="187:16">0</literal></expr>;</expr_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    <case pos:start="191:5" pos:end="191:13">case <expr pos:start="191:10" pos:end="191:12"><literal type="number" pos:start="191:10" pos:end="191:12">0xA</literal></expr>:</case>

        <comment type="block" pos:start="193:9" pos:end="193:55">/* Architectural Performance Monitoring Leaf */</comment>

        <expr_stmt pos:start="195:9" pos:end="195:17"><expr pos:start="195:9" pos:end="195:16"><operator pos:start="195:9" pos:end="195:9">*</operator><name pos:start="195:10" pos:end="195:12">eax</name> <operator pos:start="195:14" pos:end="195:14">=</operator> <literal type="number" pos:start="195:16" pos:end="195:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:17"><expr pos:start="197:9" pos:end="197:16"><operator pos:start="197:9" pos:end="197:9">*</operator><name pos:start="197:10" pos:end="197:12">ebx</name> <operator pos:start="197:14" pos:end="197:14">=</operator> <literal type="number" pos:start="197:16" pos:end="197:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:17"><expr pos:start="199:9" pos:end="199:16"><operator pos:start="199:9" pos:end="199:9">*</operator><name pos:start="199:10" pos:end="199:12">ecx</name> <operator pos:start="199:14" pos:end="199:14">=</operator> <literal type="number" pos:start="199:16" pos:end="199:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:17"><expr pos:start="201:9" pos:end="201:16"><operator pos:start="201:9" pos:end="201:9">*</operator><name pos:start="201:10" pos:end="201:12">edx</name> <operator pos:start="201:14" pos:end="201:14">=</operator> <literal type="number" pos:start="201:16" pos:end="201:16">0</literal></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>

    <case pos:start="205:5" pos:end="205:20">case <expr pos:start="205:10" pos:end="205:19"><literal type="number" pos:start="205:10" pos:end="205:19">0x80000000</literal></expr>:</case>

        <expr_stmt pos:start="207:9" pos:end="207:33"><expr pos:start="207:9" pos:end="207:32"><operator pos:start="207:9" pos:end="207:9">*</operator><name pos:start="207:10" pos:end="207:12">eax</name> <operator pos:start="207:14" pos:end="207:14">=</operator> <name pos:start="207:16" pos:end="207:32"><name pos:start="207:16" pos:end="207:18">env</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:32">cpuid_xlevel</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:34"><expr pos:start="209:9" pos:end="209:33"><operator pos:start="209:9" pos:end="209:9">*</operator><name pos:start="209:10" pos:end="209:12">ebx</name> <operator pos:start="209:14" pos:end="209:14">=</operator> <name pos:start="209:16" pos:end="209:33"><name pos:start="209:16" pos:end="209:18">env</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:33">cpuid_vendor1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:34"><expr pos:start="211:9" pos:end="211:33"><operator pos:start="211:9" pos:end="211:9">*</operator><name pos:start="211:10" pos:end="211:12">edx</name> <operator pos:start="211:14" pos:end="211:14">=</operator> <name pos:start="211:16" pos:end="211:33"><name pos:start="211:16" pos:end="211:18">env</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:33">cpuid_vendor2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:34"><expr pos:start="213:9" pos:end="213:33"><operator pos:start="213:9" pos:end="213:9">*</operator><name pos:start="213:10" pos:end="213:12">ecx</name> <operator pos:start="213:14" pos:end="213:14">=</operator> <name pos:start="213:16" pos:end="213:33"><name pos:start="213:16" pos:end="213:18">env</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:33">cpuid_vendor3</name></name></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:20">case <expr pos:start="217:10" pos:end="217:19"><literal type="number" pos:start="217:10" pos:end="217:19">0x80000001</literal></expr>:</case>

        <expr_stmt pos:start="219:9" pos:end="219:35"><expr pos:start="219:9" pos:end="219:34"><operator pos:start="219:9" pos:end="219:9">*</operator><name pos:start="219:10" pos:end="219:12">eax</name> <operator pos:start="219:14" pos:end="219:14">=</operator> <name pos:start="219:16" pos:end="219:34"><name pos:start="219:16" pos:end="219:18">env</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:34">cpuid_features</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:17"><expr pos:start="221:9" pos:end="221:16"><operator pos:start="221:9" pos:end="221:9">*</operator><name pos:start="221:10" pos:end="221:12">ebx</name> <operator pos:start="221:14" pos:end="221:14">=</operator> <literal type="number" pos:start="221:16" pos:end="221:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:40"><expr pos:start="223:9" pos:end="223:39"><operator pos:start="223:9" pos:end="223:9">*</operator><name pos:start="223:10" pos:end="223:12">ecx</name> <operator pos:start="223:14" pos:end="223:14">=</operator> <name pos:start="223:16" pos:end="223:39"><name pos:start="223:16" pos:end="223:18">env</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:39">cpuid_ext3_features</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:40"><expr pos:start="225:9" pos:end="225:39"><operator pos:start="225:9" pos:end="225:9">*</operator><name pos:start="225:10" pos:end="225:12">edx</name> <operator pos:start="225:14" pos:end="225:14">=</operator> <name pos:start="225:16" pos:end="225:39"><name pos:start="225:16" pos:end="225:18">env</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:39">cpuid_ext2_features</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="229:9" pos:end="275:9"><if pos:start="229:9" pos:end="275:9">if <condition pos:start="229:12" pos:end="229:26">(<expr pos:start="229:13" pos:end="229:25"><call pos:start="229:13" pos:end="229:25"><name pos:start="229:13" pos:end="229:23">kvm_enabled</name><argument_list pos:start="229:24" pos:end="229:25">()</argument_list></call></expr>)</condition> <block pos:start="229:28" pos:end="275:9">{<block_content pos:start="231:13" pos:end="273:31">

            <decl_stmt pos:start="231:13" pos:end="231:34"><decl pos:start="231:13" pos:end="231:26"><type pos:start="231:13" pos:end="231:20"><name pos:start="231:13" pos:end="231:20">uint32_t</name></type> <name pos:start="231:22" pos:end="231:26">h_eax</name></decl>, <decl pos:start="231:29" pos:end="231:33"><type ref="prev" pos:start="231:13" pos:end="231:20"/><name pos:start="231:29" pos:end="231:33">h_edx</name></decl>;</decl_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:63"><expr pos:start="235:13" pos:end="235:62"><call pos:start="235:13" pos:end="235:62"><name pos:start="235:13" pos:end="235:22">host_cpuid</name><argument_list pos:start="235:23" pos:end="235:62">(<argument pos:start="235:24" pos:end="235:33"><expr pos:start="235:24" pos:end="235:33"><literal type="number" pos:start="235:24" pos:end="235:33">0x80000001</literal></expr></argument>, <argument pos:start="235:36" pos:end="235:41"><expr pos:start="235:36" pos:end="235:41"><operator pos:start="235:36" pos:end="235:36">&amp;</operator><name pos:start="235:37" pos:end="235:41">h_eax</name></expr></argument>, <argument pos:start="235:44" pos:end="235:47"><expr pos:start="235:44" pos:end="235:47"><name pos:start="235:44" pos:end="235:47">NULL</name></expr></argument>, <argument pos:start="235:50" pos:end="235:53"><expr pos:start="235:50" pos:end="235:53"><name pos:start="235:50" pos:end="235:53">NULL</name></expr></argument>, <argument pos:start="235:56" pos:end="235:61"><expr pos:start="235:56" pos:end="235:61"><operator pos:start="235:56" pos:end="235:56">&amp;</operator><name pos:start="235:57" pos:end="235:61">h_edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="239:13" pos:end="239:69">/* disable CPU features that the host does not support */</comment>



            <comment type="block" pos:start="243:13" pos:end="243:27">/* long mode */</comment>

            <if_stmt pos:start="245:13" pos:end="247:36"><if pos:start="245:13" pos:end="247:36">if <condition pos:start="245:16" pos:end="245:70">(<expr pos:start="245:17" pos:end="245:41"><operator pos:start="245:17" pos:end="245:17">(</operator><name pos:start="245:18" pos:end="245:22">h_edx</name> <operator pos:start="245:24" pos:end="245:24">&amp;</operator> <literal type="number" pos:start="245:26" pos:end="245:35">0x20000000</literal><operator pos:start="245:36" pos:end="245:36">)</operator> <operator pos:start="245:38" pos:end="245:39">==</operator> <literal type="number" pos:start="245:41" pos:end="245:41">0</literal></expr> <comment type="block" pos:start="245:43" pos:end="245:69">/* || !lm_capable_kernel */</comment>)</condition><block type="pseudo" pos:start="247:17" pos:end="247:36"><block_content pos:start="247:17" pos:end="247:36">

                <expr_stmt pos:start="247:17" pos:end="247:36"><expr pos:start="247:17" pos:end="247:35"><operator pos:start="247:17" pos:end="247:17">*</operator><name pos:start="247:18" pos:end="247:20">edx</name> <operator pos:start="247:22" pos:end="247:23">&amp;=</operator> <operator pos:start="247:25" pos:end="247:25">~</operator><literal type="number" pos:start="247:26" pos:end="247:35">0x20000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="249:13" pos:end="249:25">/* syscall */</comment>

            <if_stmt pos:start="251:13" pos:end="253:36"><if pos:start="251:13" pos:end="253:36">if <condition pos:start="251:16" pos:end="251:42">(<expr pos:start="251:17" pos:end="251:41"><operator pos:start="251:17" pos:end="251:17">(</operator><name pos:start="251:18" pos:end="251:22">h_edx</name> <operator pos:start="251:24" pos:end="251:24">&amp;</operator> <literal type="number" pos:start="251:26" pos:end="251:35">0x00000800</literal><operator pos:start="251:36" pos:end="251:36">)</operator> <operator pos:start="251:38" pos:end="251:39">==</operator> <literal type="number" pos:start="251:41" pos:end="251:41">0</literal></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:36"><block_content pos:start="253:17" pos:end="253:36">

                <expr_stmt pos:start="253:17" pos:end="253:36"><expr pos:start="253:17" pos:end="253:35"><operator pos:start="253:17" pos:end="253:17">*</operator><name pos:start="253:18" pos:end="253:20">edx</name> <operator pos:start="253:22" pos:end="253:23">&amp;=</operator> <operator pos:start="253:25" pos:end="253:25">~</operator><literal type="number" pos:start="253:26" pos:end="253:35">0x00000800</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="255:13" pos:end="255:20">/* nx */</comment>

            <if_stmt pos:start="257:13" pos:end="259:36"><if pos:start="257:13" pos:end="259:36">if <condition pos:start="257:16" pos:end="257:42">(<expr pos:start="257:17" pos:end="257:41"><operator pos:start="257:17" pos:end="257:17">(</operator><name pos:start="257:18" pos:end="257:22">h_edx</name> <operator pos:start="257:24" pos:end="257:24">&amp;</operator> <literal type="number" pos:start="257:26" pos:end="257:35">0x00100000</literal><operator pos:start="257:36" pos:end="257:36">)</operator> <operator pos:start="257:38" pos:end="257:39">==</operator> <literal type="number" pos:start="257:41" pos:end="257:41">0</literal></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="259:36"><block_content pos:start="259:17" pos:end="259:36">

                <expr_stmt pos:start="259:17" pos:end="259:36"><expr pos:start="259:17" pos:end="259:35"><operator pos:start="259:17" pos:end="259:17">*</operator><name pos:start="259:18" pos:end="259:20">edx</name> <operator pos:start="259:22" pos:end="259:23">&amp;=</operator> <operator pos:start="259:25" pos:end="259:25">~</operator><literal type="number" pos:start="259:26" pos:end="259:35">0x00100000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="263:13" pos:end="263:62">/* disable CPU features that KVM cannot support */</comment>



            <comment type="block" pos:start="267:13" pos:end="267:21">/* svm */</comment>

            <expr_stmt pos:start="269:13" pos:end="269:25"><expr pos:start="269:13" pos:end="269:24"><operator pos:start="269:13" pos:end="269:13">*</operator><name pos:start="269:14" pos:end="269:16">ecx</name> <operator pos:start="269:18" pos:end="269:19">&amp;=</operator> <operator pos:start="269:21" pos:end="269:21">~</operator><literal type="number" pos:start="269:22" pos:end="269:24">4UL</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="271:13" pos:end="271:23">/* 3dnow */</comment>

            <expr_stmt pos:start="273:13" pos:end="273:31"><expr pos:start="273:13" pos:end="273:30"><operator pos:start="273:13" pos:end="273:13">*</operator><name pos:start="273:14" pos:end="273:16">edx</name> <operator pos:start="273:18" pos:end="273:18">=</operator> <operator pos:start="273:20" pos:end="273:20">~</operator><literal type="number" pos:start="273:21" pos:end="273:30">0xc0000000</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    <case pos:start="279:5" pos:end="279:20">case <expr pos:start="279:10" pos:end="279:19"><literal type="number" pos:start="279:10" pos:end="279:19">0x80000002</literal></expr>:</case>

    <case pos:start="281:5" pos:end="281:20">case <expr pos:start="281:10" pos:end="281:19"><literal type="number" pos:start="281:10" pos:end="281:19">0x80000003</literal></expr>:</case>

    <case pos:start="283:5" pos:end="283:20">case <expr pos:start="283:10" pos:end="283:19"><literal type="number" pos:start="283:10" pos:end="283:19">0x80000004</literal></expr>:</case>

        <expr_stmt pos:start="285:9" pos:end="285:62"><expr pos:start="285:9" pos:end="285:61"><operator pos:start="285:9" pos:end="285:9">*</operator><name pos:start="285:10" pos:end="285:12">eax</name> <operator pos:start="285:14" pos:end="285:14">=</operator> <name pos:start="285:16" pos:end="285:61"><name pos:start="285:16" pos:end="285:18">env</name><operator pos:start="285:19" pos:end="285:20">-&gt;</operator><name pos:start="285:21" pos:end="285:31">cpuid_model</name><index pos:start="285:32" pos:end="285:61">[<expr pos:start="285:33" pos:end="285:60"><operator pos:start="285:33" pos:end="285:33">(</operator><name pos:start="285:34" pos:end="285:38">index</name> <operator pos:start="285:40" pos:end="285:40">-</operator> <literal type="number" pos:start="285:42" pos:end="285:51">0x80000002</literal><operator pos:start="285:52" pos:end="285:52">)</operator> <operator pos:start="285:54" pos:end="285:54">*</operator> <literal type="number" pos:start="285:56" pos:end="285:58">4</literal> <operator pos:start="285:58" pos:end="285:58">+</operator> <literal type="number" pos:start="285:60" pos:end="285:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:62"><expr pos:start="287:9" pos:end="287:61"><operator pos:start="287:9" pos:end="287:9">*</operator><name pos:start="287:10" pos:end="287:12">ebx</name> <operator pos:start="287:14" pos:end="287:14">=</operator> <name pos:start="287:16" pos:end="287:61"><name pos:start="287:16" pos:end="287:18">env</name><operator pos:start="287:19" pos:end="287:20">-&gt;</operator><name pos:start="287:21" pos:end="287:31">cpuid_model</name><index pos:start="287:32" pos:end="287:61">[<expr pos:start="287:33" pos:end="287:60"><operator pos:start="287:33" pos:end="287:33">(</operator><name pos:start="287:34" pos:end="287:38">index</name> <operator pos:start="287:40" pos:end="287:40">-</operator> <literal type="number" pos:start="287:42" pos:end="287:51">0x80000002</literal><operator pos:start="287:52" pos:end="287:52">)</operator> <operator pos:start="287:54" pos:end="287:54">*</operator> <literal type="number" pos:start="287:56" pos:end="287:58">4</literal> <operator pos:start="287:58" pos:end="287:58">+</operator> <literal type="number" pos:start="287:60" pos:end="287:60">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:62"><expr pos:start="289:9" pos:end="289:61"><operator pos:start="289:9" pos:end="289:9">*</operator><name pos:start="289:10" pos:end="289:12">ecx</name> <operator pos:start="289:14" pos:end="289:14">=</operator> <name pos:start="289:16" pos:end="289:61"><name pos:start="289:16" pos:end="289:18">env</name><operator pos:start="289:19" pos:end="289:20">-&gt;</operator><name pos:start="289:21" pos:end="289:31">cpuid_model</name><index pos:start="289:32" pos:end="289:61">[<expr pos:start="289:33" pos:end="289:60"><operator pos:start="289:33" pos:end="289:33">(</operator><name pos:start="289:34" pos:end="289:38">index</name> <operator pos:start="289:40" pos:end="289:40">-</operator> <literal type="number" pos:start="289:42" pos:end="289:51">0x80000002</literal><operator pos:start="289:52" pos:end="289:52">)</operator> <operator pos:start="289:54" pos:end="289:54">*</operator> <literal type="number" pos:start="289:56" pos:end="289:58">4</literal> <operator pos:start="289:58" pos:end="289:58">+</operator> <literal type="number" pos:start="289:60" pos:end="289:60">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:62"><expr pos:start="291:9" pos:end="291:61"><operator pos:start="291:9" pos:end="291:9">*</operator><name pos:start="291:10" pos:end="291:12">edx</name> <operator pos:start="291:14" pos:end="291:14">=</operator> <name pos:start="291:16" pos:end="291:61"><name pos:start="291:16" pos:end="291:18">env</name><operator pos:start="291:19" pos:end="291:20">-&gt;</operator><name pos:start="291:21" pos:end="291:31">cpuid_model</name><index pos:start="291:32" pos:end="291:61">[<expr pos:start="291:33" pos:end="291:60"><operator pos:start="291:33" pos:end="291:33">(</operator><name pos:start="291:34" pos:end="291:38">index</name> <operator pos:start="291:40" pos:end="291:40">-</operator> <literal type="number" pos:start="291:42" pos:end="291:51">0x80000002</literal><operator pos:start="291:52" pos:end="291:52">)</operator> <operator pos:start="291:54" pos:end="291:54">*</operator> <literal type="number" pos:start="291:56" pos:end="291:58">4</literal> <operator pos:start="291:58" pos:end="291:58">+</operator> <literal type="number" pos:start="291:60" pos:end="291:60">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <case pos:start="295:5" pos:end="295:20">case <expr pos:start="295:10" pos:end="295:19"><literal type="number" pos:start="295:10" pos:end="295:19">0x80000005</literal></expr>:</case>

        <comment type="block" pos:start="297:9" pos:end="297:35">/* cache info (L1 cache) */</comment>

        <expr_stmt pos:start="299:9" pos:end="299:26"><expr pos:start="299:9" pos:end="299:25"><operator pos:start="299:9" pos:end="299:9">*</operator><name pos:start="299:10" pos:end="299:12">eax</name> <operator pos:start="299:14" pos:end="299:14">=</operator> <literal type="number" pos:start="299:16" pos:end="299:25">0x01ff01ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:26"><expr pos:start="301:9" pos:end="301:25"><operator pos:start="301:9" pos:end="301:9">*</operator><name pos:start="301:10" pos:end="301:12">ebx</name> <operator pos:start="301:14" pos:end="301:14">=</operator> <literal type="number" pos:start="301:16" pos:end="301:25">0x01ff01ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:26"><expr pos:start="303:9" pos:end="303:25"><operator pos:start="303:9" pos:end="303:9">*</operator><name pos:start="303:10" pos:end="303:12">ecx</name> <operator pos:start="303:14" pos:end="303:14">=</operator> <literal type="number" pos:start="303:16" pos:end="303:25">0x40020140</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:26"><expr pos:start="305:9" pos:end="305:25"><operator pos:start="305:9" pos:end="305:9">*</operator><name pos:start="305:10" pos:end="305:12">edx</name> <operator pos:start="305:14" pos:end="305:14">=</operator> <literal type="number" pos:start="305:16" pos:end="305:25">0x40020140</literal></expr>;</expr_stmt>

        <break pos:start="307:9" pos:end="307:14">break;</break>

    <case pos:start="309:5" pos:end="309:20">case <expr pos:start="309:10" pos:end="309:19"><literal type="number" pos:start="309:10" pos:end="309:19">0x80000006</literal></expr>:</case>

        <comment type="block" pos:start="311:9" pos:end="311:35">/* cache info (L2 cache) */</comment>

        <expr_stmt pos:start="313:9" pos:end="313:17"><expr pos:start="313:9" pos:end="313:16"><operator pos:start="313:9" pos:end="313:9">*</operator><name pos:start="313:10" pos:end="313:12">eax</name> <operator pos:start="313:14" pos:end="313:14">=</operator> <literal type="number" pos:start="313:16" pos:end="313:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:26"><expr pos:start="315:9" pos:end="315:25"><operator pos:start="315:9" pos:end="315:9">*</operator><name pos:start="315:10" pos:end="315:12">ebx</name> <operator pos:start="315:14" pos:end="315:14">=</operator> <literal type="number" pos:start="315:16" pos:end="315:25">0x42004200</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:26"><expr pos:start="317:9" pos:end="317:25"><operator pos:start="317:9" pos:end="317:9">*</operator><name pos:start="317:10" pos:end="317:12">ecx</name> <operator pos:start="317:14" pos:end="317:14">=</operator> <literal type="number" pos:start="317:16" pos:end="317:25">0x02008140</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:17"><expr pos:start="319:9" pos:end="319:16"><operator pos:start="319:9" pos:end="319:9">*</operator><name pos:start="319:10" pos:end="319:12">edx</name> <operator pos:start="319:14" pos:end="319:14">=</operator> <literal type="number" pos:start="319:16" pos:end="319:16">0</literal></expr>;</expr_stmt>

        <break pos:start="321:9" pos:end="321:14">break;</break>

    <case pos:start="323:5" pos:end="323:20">case <expr pos:start="323:10" pos:end="323:19"><literal type="number" pos:start="323:10" pos:end="323:19">0x80000008</literal></expr>:</case>

        <comment type="block" pos:start="325:9" pos:end="325:57">/* virtual &amp; phys address size in low 2 bytes. */</comment>

<comment type="block" pos:start="327:1" pos:end="327:62">/* XXX: This value must match the one used in the MMU code. */</comment> 

        <if_stmt pos:start="329:9" pos:end="363:9"><if pos:start="329:9" pos:end="345:9">if <condition pos:start="329:12" pos:end="329:53">(<expr pos:start="329:13" pos:end="329:52"><name pos:start="329:13" pos:end="329:36"><name pos:start="329:13" pos:end="329:15">env</name><operator pos:start="329:16" pos:end="329:17">-&gt;</operator><name pos:start="329:18" pos:end="329:36">cpuid_ext2_features</name></name> <operator pos:start="329:38" pos:end="329:38">&amp;</operator> <name pos:start="329:40" pos:end="329:52">CPUID_EXT2_LM</name></expr>)</condition> <block pos:start="329:55" pos:end="345:9">{<block_content pos:start="335:13" pos:end="344:0">

            <comment type="block" pos:start="331:13" pos:end="331:34">/* 64 bit processor */</comment>

<cpp:if pos:start="333:1" pos:end="333:22">#<cpp:directive pos:start="333:2" pos:end="333:3">if</cpp:directive> <expr pos:start="333:5" pos:end="333:22"><call pos:start="333:5" pos:end="333:22"><name pos:start="333:5" pos:end="333:11">defined</name><argument_list pos:start="333:12" pos:end="333:22">(<argument pos:start="333:13" pos:end="333:21"><expr pos:start="333:13" pos:end="333:21"><name pos:start="333:13" pos:end="333:21">USE_KQEMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="335:13" pos:end="338:0"><expr pos:start="335:13" pos:end="335:29"><operator pos:start="335:13" pos:end="335:13">*</operator><name pos:start="335:14" pos:end="335:16">eax</name> <operator pos:start="335:18" pos:end="335:18">=</operator> <literal type="number" pos:start="335:20" pos:end="335:29">0x00003020</literal></expr>;</expr_stmt>	<comment type="block" pos:start="335:33" pos:end="335:71">/* 48 bits virtual, 32 bits physical */</comment>

<cpp:else pos:start="337:1" pos:end="337:5">#<cpp:directive pos:start="337:2" pos:end="337:5">else</cpp:directive></cpp:else>

<comment type="block" pos:start="339:1" pos:end="339:70">/* XXX: The physical address space is limited to 42 bits in exec.c. */</comment>

            <expr_stmt pos:start="341:13" pos:end="344:0"><expr pos:start="341:13" pos:end="341:29"><operator pos:start="341:13" pos:end="341:13">*</operator><name pos:start="341:14" pos:end="341:16">eax</name> <operator pos:start="341:18" pos:end="341:18">=</operator> <literal type="number" pos:start="341:20" pos:end="341:29">0x00003028</literal></expr>;</expr_stmt>	<comment type="block" pos:start="341:33" pos:end="341:71">/* 48 bits virtual, 40 bits physical */</comment>

<cpp:endif pos:start="343:1" pos:end="343:6">#<cpp:directive pos:start="343:2" pos:end="343:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="345:11" pos:end="363:9">else <block pos:start="345:16" pos:end="363:9">{<block_content pos:start="349:13" pos:end="362:0">

<cpp:if pos:start="347:1" pos:end="347:22">#<cpp:directive pos:start="347:2" pos:end="347:3">if</cpp:directive> <expr pos:start="347:5" pos:end="347:22"><call pos:start="347:5" pos:end="347:22"><name pos:start="347:5" pos:end="347:11">defined</name><argument_list pos:start="347:12" pos:end="347:22">(<argument pos:start="347:13" pos:end="347:21"><expr pos:start="347:13" pos:end="347:21"><name pos:start="347:13" pos:end="347:21">USE_KQEMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="349:13" pos:end="352:0"><expr pos:start="349:13" pos:end="349:29"><operator pos:start="349:13" pos:end="349:13">*</operator><name pos:start="349:14" pos:end="349:16">eax</name> <operator pos:start="349:18" pos:end="349:18">=</operator> <literal type="number" pos:start="349:20" pos:end="349:29">0x00000020</literal></expr>;</expr_stmt>	<comment type="block" pos:start="349:33" pos:end="349:54">/* 32 bits physical */</comment>

<cpp:else pos:start="351:1" pos:end="351:5">#<cpp:directive pos:start="351:2" pos:end="351:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="353:13" pos:end="362:0"><if pos:start="353:13" pos:end="355:34">if <condition pos:start="353:16" pos:end="353:50">(<expr pos:start="353:17" pos:end="353:49"><name pos:start="353:17" pos:end="353:35"><name pos:start="353:17" pos:end="353:19">env</name><operator pos:start="353:20" pos:end="353:21">-&gt;</operator><name pos:start="353:22" pos:end="353:35">cpuid_features</name></name> <operator pos:start="353:37" pos:end="353:37">&amp;</operator> <name pos:start="353:39" pos:end="353:49">CPUID_PSE36</name></expr>)</condition><block type="pseudo" pos:start="355:17" pos:end="355:34"><block_content pos:start="355:17" pos:end="355:34">

                <expr_stmt pos:start="355:17" pos:end="355:34"><expr pos:start="355:17" pos:end="355:33"><operator pos:start="355:17" pos:end="355:17">*</operator><name pos:start="355:18" pos:end="355:20">eax</name> <operator pos:start="355:22" pos:end="355:22">=</operator> <literal type="number" pos:start="355:24" pos:end="355:33">0x00000024</literal></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="355:36" pos:end="355:57">/* 36 bits physical */</comment>

            <else pos:start="357:13" pos:end="362:0">else<block type="pseudo" pos:start="359:17" pos:end="362:0"><block_content pos:start="359:17" pos:end="362:0">

                <expr_stmt pos:start="359:17" pos:end="362:0"><expr pos:start="359:17" pos:end="359:33"><operator pos:start="359:17" pos:end="359:17">*</operator><name pos:start="359:18" pos:end="359:20">eax</name> <operator pos:start="359:22" pos:end="359:22">=</operator> <literal type="number" pos:start="359:24" pos:end="359:33">0x00000020</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="359:36" pos:end="359:57">/* 32 bits physical */</comment>

<cpp:endif pos:start="361:1" pos:end="361:6">#<cpp:directive pos:start="361:2" pos:end="361:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:17"><expr pos:start="365:9" pos:end="365:16"><operator pos:start="365:9" pos:end="365:9">*</operator><name pos:start="365:10" pos:end="365:12">ebx</name> <operator pos:start="365:14" pos:end="365:14">=</operator> <literal type="number" pos:start="365:16" pos:end="365:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:17"><expr pos:start="367:9" pos:end="367:16"><operator pos:start="367:9" pos:end="367:9">*</operator><name pos:start="367:10" pos:end="367:12">ecx</name> <operator pos:start="367:14" pos:end="367:14">=</operator> <literal type="number" pos:start="367:16" pos:end="367:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:17"><expr pos:start="369:9" pos:end="369:16"><operator pos:start="369:9" pos:end="369:9">*</operator><name pos:start="369:10" pos:end="369:12">edx</name> <operator pos:start="369:14" pos:end="369:14">=</operator> <literal type="number" pos:start="369:16" pos:end="369:16">0</literal></expr>;</expr_stmt>

        <break pos:start="371:9" pos:end="371:14">break;</break>

    <case pos:start="373:5" pos:end="373:20">case <expr pos:start="373:10" pos:end="373:19"><literal type="number" pos:start="373:10" pos:end="373:19">0x8000000A</literal></expr>:</case>

        <expr_stmt pos:start="375:9" pos:end="375:26"><expr pos:start="375:9" pos:end="375:25"><operator pos:start="375:9" pos:end="375:9">*</operator><name pos:start="375:10" pos:end="375:12">eax</name> <operator pos:start="375:14" pos:end="375:14">=</operator> <literal type="number" pos:start="375:16" pos:end="375:25">0x00000001</literal></expr>;</expr_stmt> <comment type="block" pos:start="375:28" pos:end="375:45">/* SVM Revision */</comment>

        <expr_stmt pos:start="377:9" pos:end="377:26"><expr pos:start="377:9" pos:end="377:25"><operator pos:start="377:9" pos:end="377:9">*</operator><name pos:start="377:10" pos:end="377:12">ebx</name> <operator pos:start="377:14" pos:end="377:14">=</operator> <literal type="number" pos:start="377:16" pos:end="377:25">0x00000010</literal></expr>;</expr_stmt> <comment type="block" pos:start="377:28" pos:end="377:44">/* nr of ASIDs */</comment>

        <expr_stmt pos:start="379:9" pos:end="379:17"><expr pos:start="379:9" pos:end="379:16"><operator pos:start="379:9" pos:end="379:9">*</operator><name pos:start="379:10" pos:end="379:12">ecx</name> <operator pos:start="379:14" pos:end="379:14">=</operator> <literal type="number" pos:start="379:16" pos:end="379:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:17"><expr pos:start="381:9" pos:end="381:16"><operator pos:start="381:9" pos:end="381:9">*</operator><name pos:start="381:10" pos:end="381:12">edx</name> <operator pos:start="381:14" pos:end="381:14">=</operator> <literal type="number" pos:start="381:16" pos:end="381:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="381:19" pos:end="381:41">/* optional features */</comment>

        <break pos:start="383:9" pos:end="383:14">break;</break>

    <default pos:start="385:5" pos:end="385:12">default:</default>

        <comment type="block" pos:start="387:9" pos:end="387:35">/* reserved values: zero */</comment>

        <expr_stmt pos:start="389:9" pos:end="389:17"><expr pos:start="389:9" pos:end="389:16"><operator pos:start="389:9" pos:end="389:9">*</operator><name pos:start="389:10" pos:end="389:12">eax</name> <operator pos:start="389:14" pos:end="389:14">=</operator> <literal type="number" pos:start="389:16" pos:end="389:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:17"><expr pos:start="391:9" pos:end="391:16"><operator pos:start="391:9" pos:end="391:9">*</operator><name pos:start="391:10" pos:end="391:12">ebx</name> <operator pos:start="391:14" pos:end="391:14">=</operator> <literal type="number" pos:start="391:16" pos:end="391:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:17"><expr pos:start="393:9" pos:end="393:16"><operator pos:start="393:9" pos:end="393:9">*</operator><name pos:start="393:10" pos:end="393:12">ecx</name> <operator pos:start="393:14" pos:end="393:14">=</operator> <literal type="number" pos:start="393:16" pos:end="393:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:17"><expr pos:start="395:9" pos:end="395:16"><operator pos:start="395:9" pos:end="395:9">*</operator><name pos:start="395:10" pos:end="395:12">edx</name> <operator pos:start="395:14" pos:end="395:14">=</operator> <literal type="number" pos:start="395:16" pos:end="395:16">0</literal></expr>;</expr_stmt>

        <break pos:start="397:9" pos:end="397:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
