<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26387.c" pos:tabs="8"><function pos:start="1:1" pos:end="303:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_put_wav_header</name><parameter_list pos:start="1:22" pos:end="3:56">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:53">AVIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:44"><decl pos:start="3:23" pos:end="3:44"><type pos:start="3:23" pos:end="3:44"><name pos:start="3:23" pos:end="3:39">AVCodecParameters</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">par</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:55"><decl pos:start="3:47" pos:end="3:55"><type pos:start="3:47" pos:end="3:55"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:55">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="303:1">{<block_content pos:start="7:5" pos:end="301:19">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">bps</name></decl>, <decl pos:start="7:14" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:21">blkalign</name></decl>, <decl pos:start="7:24" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:34">bytespersec</name></decl>, <decl pos:start="7:37" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:46">frame_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">hdrsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">hdrstart</name> <init pos:start="11:22" pos:end="11:36">= <expr pos:start="11:24" pos:end="11:36"><call pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:32">avio_tell</name><argument_list pos:start="11:33" pos:end="11:36">(<argument pos:start="11:34" pos:end="11:35"><expr pos:start="11:34" pos:end="11:35"><name pos:start="11:34" pos:end="11:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:28">waveformatextensible</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:16">temp</name><index pos:start="15:17" pos:end="15:21">[<expr pos:start="15:18" pos:end="15:20"><literal type="number" pos:start="15:18" pos:end="15:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:41"><decl pos:start="17:5" pos:end="17:40"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:27">riff_extradata</name>       <init pos:start="17:35" pos:end="17:40">= <expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">temp</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:33">riff_extradata_start</name> <init pos:start="19:35" pos:end="19:40">= <expr pos:start="19:37" pos:end="19:40"><name pos:start="19:37" pos:end="19:40">temp</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:51">(<expr pos:start="23:9" pos:end="23:50"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:23"><name pos:start="23:10" pos:end="23:12">par</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:23">codec_tag</name></name> <operator pos:start="23:25" pos:end="23:26">||</operator> <name pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:30">par</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:41">codec_tag</name></name> <operator pos:start="23:43" pos:end="23:43">&gt;</operator> <literal type="number" pos:start="23:45" pos:end="23:50">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="33:41">/* We use the known constant frame size for the codec if known, otherwise

     * fall back on using AVCodecContext.frame_size, which is not as reliable

     * for indicating packet duration. */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:69"><expr pos:start="35:5" pos:end="35:68"><name pos:start="35:5" pos:end="35:14">frame_size</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:68"><name pos:start="35:18" pos:end="35:45">av_get_audio_frame_duration2</name><argument_list pos:start="35:46" pos:end="35:68">(<argument pos:start="35:47" pos:end="35:49"><expr pos:start="35:47" pos:end="35:49"><name pos:start="35:47" pos:end="35:49">par</name></expr></argument>, <argument pos:start="35:52" pos:end="35:67"><expr pos:start="35:52" pos:end="35:67"><name pos:start="35:52" pos:end="35:67"><name pos:start="35:52" pos:end="35:54">par</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:67">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="47:70"><expr pos:start="39:5" pos:end="47:69"><name pos:start="39:5" pos:end="39:24">waveformatextensible</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <operator pos:start="39:28" pos:end="39:28">(</operator><name pos:start="39:29" pos:end="39:41"><name pos:start="39:29" pos:end="39:31">par</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:41">channels</name></name> <operator pos:start="39:43" pos:end="39:43">&gt;</operator> <literal type="number" pos:start="39:45" pos:end="39:45">2</literal> <operator pos:start="39:47" pos:end="39:48">&amp;&amp;</operator> <name pos:start="39:50" pos:end="39:68"><name pos:start="39:50" pos:end="39:52">par</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:68">channel_layout</name></name><operator pos:start="39:69" pos:end="39:69">)</operator> <operator pos:start="39:71" pos:end="39:72">||</operator>



                           <name pos:start="43:28" pos:end="43:43"><name pos:start="43:28" pos:end="43:30">par</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:43">sample_rate</name></name> <operator pos:start="43:45" pos:end="43:45">&gt;</operator> <literal type="number" pos:start="43:47" pos:end="43:51">48000</literal> <operator pos:start="43:53" pos:end="43:54">||</operator>

                           <name pos:start="45:28" pos:end="45:40"><name pos:start="45:28" pos:end="45:30">par</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:40">codec_id</name></name> <operator pos:start="45:42" pos:end="45:43">==</operator> <name pos:start="45:45" pos:end="45:60">AV_CODEC_ID_EAC3</name> <operator pos:start="45:62" pos:end="45:63">||</operator>

                           <call pos:start="47:28" pos:end="47:64"><name pos:start="47:28" pos:end="47:49">av_get_bits_per_sample</name><argument_list pos:start="47:50" pos:end="47:64">(<argument pos:start="47:51" pos:end="47:63"><expr pos:start="47:51" pos:end="47:63"><name pos:start="47:51" pos:end="47:63"><name pos:start="47:51" pos:end="47:53">par</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:63">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:66" pos:end="47:66">&gt;</operator> <literal type="number" pos:start="47:68" pos:end="47:69">16</literal></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="57:38"><if pos:start="51:5" pos:end="53:30">if <condition pos:start="51:8" pos:end="51:29">(<expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:28">waveformatextensible</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:30"><block_content pos:start="53:9" pos:end="53:30">

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:17">avio_wl16</name><argument_list pos:start="53:18" pos:end="53:29">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">pb</name></expr></argument>, <argument pos:start="53:23" pos:end="53:28"><expr pos:start="53:23" pos:end="53:28"><literal type="number" pos:start="53:23" pos:end="53:28">0xfffe</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="57:38">else<block type="pseudo" pos:start="57:9" pos:end="57:38"><block_content pos:start="57:9" pos:end="57:38">

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><call pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:17">avio_wl16</name><argument_list pos:start="57:18" pos:end="57:37">(<argument pos:start="57:19" pos:end="57:20"><expr pos:start="57:19" pos:end="57:20"><name pos:start="57:19" pos:end="57:20">pb</name></expr></argument>, <argument pos:start="57:23" pos:end="57:36"><expr pos:start="57:23" pos:end="57:36"><name pos:start="57:23" pos:end="57:36"><name pos:start="57:23" pos:end="57:25">par</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:36">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:33"><expr pos:start="61:5" pos:end="61:32"><call pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:13">avio_wl16</name><argument_list pos:start="61:14" pos:end="61:32">(<argument pos:start="61:15" pos:end="61:16"><expr pos:start="61:15" pos:end="61:16"><name pos:start="61:15" pos:end="61:16">pb</name></expr></argument>, <argument pos:start="61:19" pos:end="61:31"><expr pos:start="61:19" pos:end="61:31"><name pos:start="61:19" pos:end="61:31"><name pos:start="61:19" pos:end="61:21">par</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:31">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><call pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:13">avio_wl32</name><argument_list pos:start="63:14" pos:end="63:35">(<argument pos:start="63:15" pos:end="63:16"><expr pos:start="63:15" pos:end="63:16"><name pos:start="63:15" pos:end="63:16">pb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:34"><expr pos:start="63:19" pos:end="63:34"><name pos:start="63:19" pos:end="63:34"><name pos:start="63:19" pos:end="63:21">par</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:34">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="91:5"><if pos:start="65:5" pos:end="77:5">if <condition pos:start="65:8" pos:end="73:44">(<expr pos:start="65:9" pos:end="73:43"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:11">par</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:21">codec_id</name></name> <operator pos:start="65:23" pos:end="65:24">==</operator> <name pos:start="65:26" pos:end="65:43">AV_CODEC_ID_ATRAC3</name> <operator pos:start="65:45" pos:end="65:46">||</operator>

        <name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:11">par</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:21">codec_id</name></name> <operator pos:start="67:23" pos:end="67:24">==</operator> <name pos:start="67:26" pos:end="67:43">AV_CODEC_ID_G723_1</name> <operator pos:start="67:45" pos:end="67:46">||</operator>

        <name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">par</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:21">codec_id</name></name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:40">AV_CODEC_ID_MP2</name>    <operator pos:start="69:45" pos:end="69:46">||</operator>

        <name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">par</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:21">codec_id</name></name> <operator pos:start="71:23" pos:end="71:24">==</operator> <name pos:start="71:26" pos:end="71:40">AV_CODEC_ID_MP3</name>    <operator pos:start="71:45" pos:end="71:46">||</operator>

        <name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">par</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:21">codec_id</name></name> <operator pos:start="73:23" pos:end="73:24">==</operator> <name pos:start="73:26" pos:end="73:43">AV_CODEC_ID_GSM_MS</name></expr>)</condition> <block pos:start="73:46" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:16">

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:11">bps</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <literal type="number" pos:start="75:15" pos:end="75:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="91:5">else <block pos:start="77:12" pos:end="91:5">{<block_content pos:start="79:9" pos:end="89:9">

        <if_stmt pos:start="79:9" pos:end="89:9"><if pos:start="79:9" pos:end="89:9">if <condition pos:start="79:12" pos:end="79:59">(<expr pos:start="79:13" pos:end="79:58"><operator pos:start="79:13" pos:end="79:13">!</operator><operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:17">bps</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <call pos:start="79:21" pos:end="79:57"><name pos:start="79:21" pos:end="79:42">av_get_bits_per_sample</name><argument_list pos:start="79:43" pos:end="79:57">(<argument pos:start="79:44" pos:end="79:56"><expr pos:start="79:44" pos:end="79:56"><name pos:start="79:44" pos:end="79:56"><name pos:start="79:44" pos:end="79:46">par</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:56">codec_id</name></name></expr></argument>)</argument_list></call><operator pos:start="79:58" pos:end="79:58">)</operator></expr>)</condition> <block pos:start="79:61" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:25">

            <if_stmt pos:start="81:13" pos:end="87:25"><if pos:start="81:13" pos:end="83:49">if <condition pos:start="81:16" pos:end="81:43">(<expr pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:19">par</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:42">bits_per_coded_sample</name></name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:49"><block_content pos:start="83:17" pos:end="83:49">

                <expr_stmt pos:start="83:17" pos:end="83:49"><expr pos:start="83:17" pos:end="83:48"><name pos:start="83:17" pos:end="83:19">bps</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:48"><name pos:start="83:23" pos:end="83:25">par</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:48">bits_per_coded_sample</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="85:13" pos:end="87:25">else<block type="pseudo" pos:start="87:17" pos:end="87:25"><block_content pos:start="87:17" pos:end="87:25">

                <expr_stmt pos:start="87:17" pos:end="87:25"><expr pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:19">bps</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <literal type="number" pos:start="87:23" pos:end="87:24">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>  <comment type="line" pos:start="87:28" pos:end="87:43">// default to 16</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="103:5">if <condition pos:start="93:8" pos:end="93:72">(<expr pos:start="93:9" pos:end="93:71"><name pos:start="93:9" pos:end="93:11">bps</name> <operator pos:start="93:13" pos:end="93:14">!=</operator> <name pos:start="93:16" pos:end="93:41"><name pos:start="93:16" pos:end="93:18">par</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:41">bits_per_coded_sample</name></name> <operator pos:start="93:43" pos:end="93:44">&amp;&amp;</operator> <name pos:start="93:46" pos:end="93:71"><name pos:start="93:46" pos:end="93:48">par</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:71">bits_per_coded_sample</name></name></expr>)</condition> <block pos:start="93:74" pos:end="103:5">{<block_content pos:start="95:9" pos:end="101:48">

        <expr_stmt pos:start="95:9" pos:end="101:48"><expr pos:start="95:9" pos:end="101:47"><call pos:start="95:9" pos:end="101:47"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="101:47">(<argument pos:start="95:16" pos:end="95:16"><expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">s</name></expr></argument>, <argument pos:start="95:19" pos:end="95:32"><expr pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="97:16" pos:end="99:50"><expr pos:start="97:16" pos:end="99:50"><literal type="string" pos:start="97:16" pos:end="97:54">"requested bits_per_coded_sample (%d) "</literal>

               <literal type="string" pos:start="99:16" pos:end="99:50">"and actually stored (%d) differ\n"</literal></expr></argument>,

               <argument pos:start="101:16" pos:end="101:41"><expr pos:start="101:16" pos:end="101:41"><name pos:start="101:16" pos:end="101:41"><name pos:start="101:16" pos:end="101:18">par</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:41">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="101:44" pos:end="101:46"><expr pos:start="101:44" pos:end="101:46"><name pos:start="101:44" pos:end="101:46">bps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="133:56"><if pos:start="107:5" pos:end="111:5">if <condition pos:start="107:8" pos:end="107:41">(<expr pos:start="107:9" pos:end="107:40"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:11">par</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:21">codec_id</name></name> <operator pos:start="107:23" pos:end="107:24">==</operator> <name pos:start="107:26" pos:end="107:40">AV_CODEC_ID_MP2</name></expr>)</condition> <block pos:start="107:43" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:66">

        <expr_stmt pos:start="109:9" pos:end="109:66"><expr pos:start="109:9" pos:end="109:65"><name pos:start="109:9" pos:end="109:16">blkalign</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <operator pos:start="109:20" pos:end="109:20">(</operator><literal type="number" pos:start="109:21" pos:end="109:23">144</literal> <operator pos:start="109:25" pos:end="109:25">*</operator> <name pos:start="109:27" pos:end="109:39"><name pos:start="109:27" pos:end="109:29">par</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:39">bit_rate</name></name> <operator pos:start="109:41" pos:end="109:41">-</operator> <literal type="number" pos:start="109:43" pos:end="109:43">1</literal><operator pos:start="109:44" pos:end="109:44">)</operator><operator pos:start="109:45" pos:end="109:45">/</operator><name pos:start="109:46" pos:end="109:61"><name pos:start="109:46" pos:end="109:48">par</name><operator pos:start="109:49" pos:end="109:50">-&gt;</operator><name pos:start="109:51" pos:end="109:61">sample_rate</name></name> <operator pos:start="109:63" pos:end="109:63">+</operator> <literal type="number" pos:start="109:65" pos:end="109:65">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="111:7" pos:end="115:5">else if <condition pos:start="111:15" pos:end="111:48">(<expr pos:start="111:16" pos:end="111:47"><name pos:start="111:16" pos:end="111:28"><name pos:start="111:16" pos:end="111:18">par</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:28">codec_id</name></name> <operator pos:start="111:30" pos:end="111:31">==</operator> <name pos:start="111:33" pos:end="111:47">AV_CODEC_ID_MP3</name></expr>)</condition> <block pos:start="111:50" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:73">

        <expr_stmt pos:start="113:9" pos:end="113:73"><expr pos:start="113:9" pos:end="113:72"><name pos:start="113:9" pos:end="113:16">blkalign</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <literal type="number" pos:start="113:20" pos:end="113:22">576</literal> <operator pos:start="113:24" pos:end="113:24">*</operator> <operator pos:start="113:26" pos:end="113:26">(</operator><ternary pos:start="113:27" pos:end="113:71"><condition pos:start="113:27" pos:end="113:65"><expr pos:start="113:27" pos:end="113:63"><name pos:start="113:27" pos:end="113:42"><name pos:start="113:27" pos:end="113:29">par</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:42">sample_rate</name></name> <operator pos:start="113:44" pos:end="113:45">&lt;=</operator> <operator pos:start="113:47" pos:end="113:47">(</operator><literal type="number" pos:start="113:48" pos:end="113:54">24000</literal> <operator pos:start="113:54" pos:end="113:54">+</operator> <literal type="number" pos:start="113:56" pos:end="113:60">32000</literal><operator pos:start="113:61" pos:end="113:61">)</operator><operator pos:start="113:62" pos:end="113:62">/</operator><literal type="number" pos:start="113:63" pos:end="113:63">2</literal></expr> ?</condition><then pos:start="113:67" pos:end="113:67"> <expr pos:start="113:67" pos:end="113:67"><literal type="number" pos:start="113:67" pos:end="113:67">1</literal></expr> </then><else pos:start="113:69" pos:end="113:71">: <expr pos:start="113:71" pos:end="113:71"><literal type="number" pos:start="113:71" pos:end="113:71">2</literal></expr></else></ternary><operator pos:start="113:72" pos:end="113:72">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="115:7" pos:end="119:5">else if <condition pos:start="115:15" pos:end="115:48">(<expr pos:start="115:16" pos:end="115:47"><name pos:start="115:16" pos:end="115:28"><name pos:start="115:16" pos:end="115:18">par</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:28">codec_id</name></name> <operator pos:start="115:30" pos:end="115:31">==</operator> <name pos:start="115:33" pos:end="115:47">AV_CODEC_ID_AC3</name></expr>)</condition> <block pos:start="115:50" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:24">

        <expr_stmt pos:start="117:9" pos:end="117:24"><expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:16">blkalign</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <literal type="number" pos:start="117:20" pos:end="117:23">3840</literal></expr>;</expr_stmt>                <comment type="block" pos:start="117:41" pos:end="117:69">/* maximum bytes per frame */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="119:7" pos:end="123:5">else if <condition pos:start="119:15" pos:end="119:48">(<expr pos:start="119:16" pos:end="119:47"><name pos:start="119:16" pos:end="119:28"><name pos:start="119:16" pos:end="119:18">par</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:28">codec_id</name></name> <operator pos:start="119:30" pos:end="119:31">==</operator> <name pos:start="119:33" pos:end="119:47">AV_CODEC_ID_AAC</name></expr>)</condition> <block pos:start="119:50" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:39">

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:16">blkalign</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <literal type="number" pos:start="121:20" pos:end="121:22">768</literal> <operator pos:start="121:24" pos:end="121:24">*</operator> <name pos:start="121:26" pos:end="121:38"><name pos:start="121:26" pos:end="121:28">par</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:38">channels</name></name></expr>;</expr_stmt> <comment type="block" pos:start="121:41" pos:end="121:69">/* maximum bytes per frame */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="123:7" pos:end="127:5">else if <condition pos:start="123:15" pos:end="123:51">(<expr pos:start="123:16" pos:end="123:50"><name pos:start="123:16" pos:end="123:28"><name pos:start="123:16" pos:end="123:18">par</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:28">codec_id</name></name> <operator pos:start="123:30" pos:end="123:31">==</operator> <name pos:start="123:33" pos:end="123:50">AV_CODEC_ID_G723_1</name></expr>)</condition> <block pos:start="123:53" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:22">

        <expr_stmt pos:start="125:9" pos:end="125:22"><expr pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:16">blkalign</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <literal type="number" pos:start="125:20" pos:end="125:21">24</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="127:7" pos:end="131:5">else if <condition pos:start="127:15" pos:end="127:37">(<expr pos:start="127:16" pos:end="127:36"><name pos:start="127:16" pos:end="127:31"><name pos:start="127:16" pos:end="127:18">par</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:31">block_align</name></name> <operator pos:start="127:33" pos:end="127:34">!=</operator> <literal type="number" pos:start="127:36" pos:end="127:36">0</literal></expr>)</condition> <block pos:start="127:39" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:36"> <comment type="block" pos:start="127:41" pos:end="127:68">/* specified by the codec */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:36"><expr pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:16">blkalign</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <name pos:start="129:20" pos:end="129:35"><name pos:start="129:20" pos:end="129:22">par</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:35">block_align</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="133:56">else<block type="pseudo" pos:start="133:9" pos:end="133:56"><block_content pos:start="133:9" pos:end="133:56">

        <expr_stmt pos:start="133:9" pos:end="133:56"><expr pos:start="133:9" pos:end="133:55"><name pos:start="133:9" pos:end="133:16">blkalign</name> <operator pos:start="133:18" pos:end="133:18">=</operator> <name pos:start="133:20" pos:end="133:22">bps</name> <operator pos:start="133:24" pos:end="133:24">*</operator> <name pos:start="133:26" pos:end="133:38"><name pos:start="133:26" pos:end="133:28">par</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:38">channels</name></name> <operator pos:start="133:40" pos:end="133:40">/</operator> <call pos:start="133:42" pos:end="133:55"><name pos:start="133:42" pos:end="133:47">av_gcd</name><argument_list pos:start="133:48" pos:end="133:55">(<argument pos:start="133:49" pos:end="133:49"><expr pos:start="133:49" pos:end="133:49"><literal type="number" pos:start="133:49" pos:end="133:49">8</literal></expr></argument>, <argument pos:start="133:52" pos:end="133:54"><expr pos:start="133:52" pos:end="133:54"><name pos:start="133:52" pos:end="133:54">bps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="135:5" pos:end="157:5"><if pos:start="135:5" pos:end="149:5">if <condition pos:start="135:8" pos:end="145:47">(<expr pos:start="135:9" pos:end="145:46"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:11">par</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:21">codec_id</name></name> <operator pos:start="135:23" pos:end="135:24">==</operator> <name pos:start="135:26" pos:end="135:43">AV_CODEC_ID_PCM_U8</name> <operator pos:start="135:45" pos:end="135:46">||</operator>

        <name pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:11">par</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:21">codec_id</name></name> <operator pos:start="137:23" pos:end="137:24">==</operator> <name pos:start="137:26" pos:end="137:46">AV_CODEC_ID_PCM_S24LE</name> <operator pos:start="137:48" pos:end="137:49">||</operator>

        <name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:11">par</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:21">codec_id</name></name> <operator pos:start="139:23" pos:end="139:24">==</operator> <name pos:start="139:26" pos:end="139:46">AV_CODEC_ID_PCM_S32LE</name> <operator pos:start="139:48" pos:end="139:49">||</operator>

        <name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:11">par</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:21">codec_id</name></name> <operator pos:start="141:23" pos:end="141:24">==</operator> <name pos:start="141:26" pos:end="141:46">AV_CODEC_ID_PCM_F32LE</name> <operator pos:start="141:48" pos:end="141:49">||</operator>

        <name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:11">par</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:21">codec_id</name></name> <operator pos:start="143:23" pos:end="143:24">==</operator> <name pos:start="143:26" pos:end="143:46">AV_CODEC_ID_PCM_F64LE</name> <operator pos:start="143:48" pos:end="143:49">||</operator>

        <name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:11">par</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:21">codec_id</name></name> <operator pos:start="145:23" pos:end="145:24">==</operator> <name pos:start="145:26" pos:end="145:46">AV_CODEC_ID_PCM_S16LE</name></expr>)</condition> <block pos:start="145:49" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:50">

        <expr_stmt pos:start="147:9" pos:end="147:50"><expr pos:start="147:9" pos:end="147:49"><name pos:start="147:9" pos:end="147:19">bytespersec</name> <operator pos:start="147:21" pos:end="147:21">=</operator> <name pos:start="147:23" pos:end="147:38"><name pos:start="147:23" pos:end="147:25">par</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:38">sample_rate</name></name> <operator pos:start="147:40" pos:end="147:40">*</operator> <name pos:start="147:42" pos:end="147:49">blkalign</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="153:5">else if <condition pos:start="149:15" pos:end="149:51">(<expr pos:start="149:16" pos:end="149:50"><name pos:start="149:16" pos:end="149:28"><name pos:start="149:16" pos:end="149:18">par</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:28">codec_id</name></name> <operator pos:start="149:30" pos:end="149:31">==</operator> <name pos:start="149:33" pos:end="149:50">AV_CODEC_ID_G723_1</name></expr>)</condition> <block pos:start="149:53" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:26">

        <expr_stmt pos:start="151:9" pos:end="151:26"><expr pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:19">bytespersec</name> <operator pos:start="151:21" pos:end="151:21">=</operator> <literal type="number" pos:start="151:23" pos:end="151:25">800</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="153:7" pos:end="157:5">else <block pos:start="153:12" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:40">

        <expr_stmt pos:start="155:9" pos:end="155:40"><expr pos:start="155:9" pos:end="155:39"><name pos:start="155:9" pos:end="155:19">bytespersec</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <name pos:start="155:23" pos:end="155:35"><name pos:start="155:23" pos:end="155:25">par</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:35">bit_rate</name></name> <operator pos:start="155:37" pos:end="155:37">/</operator> <literal type="number" pos:start="155:39" pos:end="155:39">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:31"><expr pos:start="159:5" pos:end="159:30"><call pos:start="159:5" pos:end="159:30"><name pos:start="159:5" pos:end="159:13">avio_wl32</name><argument_list pos:start="159:14" pos:end="159:30">(<argument pos:start="159:15" pos:end="159:16"><expr pos:start="159:15" pos:end="159:16"><name pos:start="159:15" pos:end="159:16">pb</name></expr></argument>, <argument pos:start="159:19" pos:end="159:29"><expr pos:start="159:19" pos:end="159:29"><name pos:start="159:19" pos:end="159:29">bytespersec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="159:33" pos:end="159:54">/* bytes per second */</comment>

    <expr_stmt pos:start="161:5" pos:end="161:28"><expr pos:start="161:5" pos:end="161:27"><call pos:start="161:5" pos:end="161:27"><name pos:start="161:5" pos:end="161:13">avio_wl16</name><argument_list pos:start="161:14" pos:end="161:27">(<argument pos:start="161:15" pos:end="161:16"><expr pos:start="161:15" pos:end="161:16"><name pos:start="161:15" pos:end="161:16">pb</name></expr></argument>, <argument pos:start="161:19" pos:end="161:26"><expr pos:start="161:19" pos:end="161:26"><name pos:start="161:19" pos:end="161:26">blkalign</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="161:33" pos:end="161:49">/* block align */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:23"><expr pos:start="163:5" pos:end="163:22"><call pos:start="163:5" pos:end="163:22"><name pos:start="163:5" pos:end="163:13">avio_wl16</name><argument_list pos:start="163:14" pos:end="163:22">(<argument pos:start="163:15" pos:end="163:16"><expr pos:start="163:15" pos:end="163:16"><name pos:start="163:15" pos:end="163:16">pb</name></expr></argument>, <argument pos:start="163:19" pos:end="163:21"><expr pos:start="163:19" pos:end="163:21"><name pos:start="163:19" pos:end="163:21">bps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="163:33" pos:end="163:53">/* bits per sample */</comment>

    <if_stmt pos:start="165:5" pos:end="233:5"><if pos:start="165:5" pos:end="177:5">if <condition pos:start="165:8" pos:end="165:41">(<expr pos:start="165:9" pos:end="165:40"><name pos:start="165:9" pos:end="165:21"><name pos:start="165:9" pos:end="165:11">par</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:21">codec_id</name></name> <operator pos:start="165:23" pos:end="165:24">==</operator> <name pos:start="165:26" pos:end="165:40">AV_CODEC_ID_MP3</name></expr>)</condition> <block pos:start="165:43" pos:end="177:5">{<block_content pos:start="167:9" pos:end="175:51">

        <expr_stmt pos:start="167:9" pos:end="167:48"><expr pos:start="167:9" pos:end="167:47"><call pos:start="167:9" pos:end="167:47"><name pos:start="167:9" pos:end="167:27">bytestream_put_le16</name><argument_list pos:start="167:28" pos:end="167:47">(<argument pos:start="167:29" pos:end="167:43"><expr pos:start="167:29" pos:end="167:43"><operator pos:start="167:29" pos:end="167:29">&amp;</operator><name pos:start="167:30" pos:end="167:43">riff_extradata</name></expr></argument>, <argument pos:start="167:46" pos:end="167:46"><expr pos:start="167:46" pos:end="167:46"><literal type="number" pos:start="167:46" pos:end="167:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="167:53" pos:end="167:61">/* wID */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:48"><expr pos:start="169:9" pos:end="169:47"><call pos:start="169:9" pos:end="169:47"><name pos:start="169:9" pos:end="169:27">bytestream_put_le32</name><argument_list pos:start="169:28" pos:end="169:47">(<argument pos:start="169:29" pos:end="169:43"><expr pos:start="169:29" pos:end="169:43"><operator pos:start="169:29" pos:end="169:29">&amp;</operator><name pos:start="169:30" pos:end="169:43">riff_extradata</name></expr></argument>, <argument pos:start="169:46" pos:end="169:46"><expr pos:start="169:46" pos:end="169:46"><literal type="number" pos:start="169:46" pos:end="169:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="169:53" pos:end="169:66">/* fdwFlags */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:51"><expr pos:start="171:9" pos:end="171:50"><call pos:start="171:9" pos:end="171:50"><name pos:start="171:9" pos:end="171:27">bytestream_put_le16</name><argument_list pos:start="171:28" pos:end="171:50">(<argument pos:start="171:29" pos:end="171:43"><expr pos:start="171:29" pos:end="171:43"><operator pos:start="171:29" pos:end="171:29">&amp;</operator><name pos:start="171:30" pos:end="171:43">riff_extradata</name></expr></argument>, <argument pos:start="171:46" pos:end="171:49"><expr pos:start="171:46" pos:end="171:49"><literal type="number" pos:start="171:46" pos:end="171:49">1152</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="171:53" pos:end="171:68">/* nBlockSize */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:48"><expr pos:start="173:9" pos:end="173:47"><call pos:start="173:9" pos:end="173:47"><name pos:start="173:9" pos:end="173:27">bytestream_put_le16</name><argument_list pos:start="173:28" pos:end="173:47">(<argument pos:start="173:29" pos:end="173:43"><expr pos:start="173:29" pos:end="173:43"><operator pos:start="173:29" pos:end="173:29">&amp;</operator><name pos:start="173:30" pos:end="173:43">riff_extradata</name></expr></argument>, <argument pos:start="173:46" pos:end="173:46"><expr pos:start="173:46" pos:end="173:46"><literal type="number" pos:start="173:46" pos:end="173:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="173:53" pos:end="173:73">/* nFramesPerBlock */</comment>

        <expr_stmt pos:start="175:9" pos:end="175:51"><expr pos:start="175:9" pos:end="175:50"><call pos:start="175:9" pos:end="175:50"><name pos:start="175:9" pos:end="175:27">bytestream_put_le16</name><argument_list pos:start="175:28" pos:end="175:50">(<argument pos:start="175:29" pos:end="175:43"><expr pos:start="175:29" pos:end="175:43"><operator pos:start="175:29" pos:end="175:29">&amp;</operator><name pos:start="175:30" pos:end="175:43">riff_extradata</name></expr></argument>, <argument pos:start="175:46" pos:end="175:49"><expr pos:start="175:46" pos:end="175:49"><literal type="number" pos:start="175:46" pos:end="175:49">1393</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:53" pos:end="175:69">/* nCodecDelay */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="177:7" pos:end="211:5">else if <condition pos:start="177:15" pos:end="177:48">(<expr pos:start="177:16" pos:end="177:47"><name pos:start="177:16" pos:end="177:28"><name pos:start="177:16" pos:end="177:18">par</name><operator pos:start="177:19" pos:end="177:20">-&gt;</operator><name pos:start="177:21" pos:end="177:28">codec_id</name></name> <operator pos:start="177:30" pos:end="177:31">==</operator> <name pos:start="177:33" pos:end="177:47">AV_CODEC_ID_MP2</name></expr>)</condition> <block pos:start="177:50" pos:end="211:5">{<block_content pos:start="181:9" pos:end="209:48">

        <comment type="block" pos:start="179:9" pos:end="179:25">/* fwHeadLayer */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:48"><expr pos:start="181:9" pos:end="181:47"><call pos:start="181:9" pos:end="181:47"><name pos:start="181:9" pos:end="181:27">bytestream_put_le16</name><argument_list pos:start="181:28" pos:end="181:47">(<argument pos:start="181:29" pos:end="181:43"><expr pos:start="181:29" pos:end="181:43"><operator pos:start="181:29" pos:end="181:29">&amp;</operator><name pos:start="181:30" pos:end="181:43">riff_extradata</name></expr></argument>, <argument pos:start="181:46" pos:end="181:46"><expr pos:start="181:46" pos:end="181:46"><literal type="number" pos:start="181:46" pos:end="181:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="183:9" pos:end="183:27">/* dwHeadBitrate */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:60"><expr pos:start="185:9" pos:end="185:59"><call pos:start="185:9" pos:end="185:59"><name pos:start="185:9" pos:end="185:27">bytestream_put_le32</name><argument_list pos:start="185:28" pos:end="185:59">(<argument pos:start="185:29" pos:end="185:43"><expr pos:start="185:29" pos:end="185:43"><operator pos:start="185:29" pos:end="185:29">&amp;</operator><name pos:start="185:30" pos:end="185:43">riff_extradata</name></expr></argument>, <argument pos:start="185:46" pos:end="185:58"><expr pos:start="185:46" pos:end="185:58"><name pos:start="185:46" pos:end="185:58"><name pos:start="185:46" pos:end="185:48">par</name><operator pos:start="185:49" pos:end="185:50">-&gt;</operator><name pos:start="185:51" pos:end="185:58">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="187:9" pos:end="187:24">/* fwHeadMode */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:73"><expr pos:start="189:9" pos:end="189:72"><call pos:start="189:9" pos:end="189:72"><name pos:start="189:9" pos:end="189:27">bytestream_put_le16</name><argument_list pos:start="189:28" pos:end="189:72">(<argument pos:start="189:29" pos:end="189:43"><expr pos:start="189:29" pos:end="189:43"><operator pos:start="189:29" pos:end="189:29">&amp;</operator><name pos:start="189:30" pos:end="189:43">riff_extradata</name></expr></argument>, <argument pos:start="189:46" pos:end="189:71"><expr pos:start="189:46" pos:end="189:71"><ternary pos:start="189:46" pos:end="189:71"><condition pos:start="189:46" pos:end="189:65"><expr pos:start="189:46" pos:end="189:63"><name pos:start="189:46" pos:end="189:58"><name pos:start="189:46" pos:end="189:48">par</name><operator pos:start="189:49" pos:end="189:50">-&gt;</operator><name pos:start="189:51" pos:end="189:58">channels</name></name> <operator pos:start="189:60" pos:end="189:61">==</operator> <literal type="number" pos:start="189:63" pos:end="189:63">2</literal></expr> ?</condition><then pos:start="189:67" pos:end="189:67"> <expr pos:start="189:67" pos:end="189:67"><literal type="number" pos:start="189:67" pos:end="189:67">1</literal></expr> </then><else pos:start="189:69" pos:end="189:71">: <expr pos:start="189:71" pos:end="189:71"><literal type="number" pos:start="189:71" pos:end="189:71">8</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="191:9" pos:end="191:27">/* fwHeadModeExt */</comment>

        <expr_stmt pos:start="193:9" pos:end="193:48"><expr pos:start="193:9" pos:end="193:47"><call pos:start="193:9" pos:end="193:47"><name pos:start="193:9" pos:end="193:27">bytestream_put_le16</name><argument_list pos:start="193:28" pos:end="193:47">(<argument pos:start="193:29" pos:end="193:43"><expr pos:start="193:29" pos:end="193:43"><operator pos:start="193:29" pos:end="193:29">&amp;</operator><name pos:start="193:30" pos:end="193:43">riff_extradata</name></expr></argument>, <argument pos:start="193:46" pos:end="193:46"><expr pos:start="193:46" pos:end="193:46"><literal type="number" pos:start="193:46" pos:end="193:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="195:9" pos:end="195:27">/* wHeadEmphasis */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:48"><expr pos:start="197:9" pos:end="197:47"><call pos:start="197:9" pos:end="197:47"><name pos:start="197:9" pos:end="197:27">bytestream_put_le16</name><argument_list pos:start="197:28" pos:end="197:47">(<argument pos:start="197:29" pos:end="197:43"><expr pos:start="197:29" pos:end="197:43"><operator pos:start="197:29" pos:end="197:29">&amp;</operator><name pos:start="197:30" pos:end="197:43">riff_extradata</name></expr></argument>, <argument pos:start="197:46" pos:end="197:46"><expr pos:start="197:46" pos:end="197:46"><literal type="number" pos:start="197:46" pos:end="197:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="199:9" pos:end="199:25">/* fwHeadFlags */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:49"><expr pos:start="201:9" pos:end="201:48"><call pos:start="201:9" pos:end="201:48"><name pos:start="201:9" pos:end="201:27">bytestream_put_le16</name><argument_list pos:start="201:28" pos:end="201:48">(<argument pos:start="201:29" pos:end="201:43"><expr pos:start="201:29" pos:end="201:43"><operator pos:start="201:29" pos:end="201:29">&amp;</operator><name pos:start="201:30" pos:end="201:43">riff_extradata</name></expr></argument>, <argument pos:start="201:46" pos:end="201:47"><expr pos:start="201:46" pos:end="201:47"><literal type="number" pos:start="201:46" pos:end="201:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="203:9" pos:end="203:22">/* dwPTSLow */</comment>

        <expr_stmt pos:start="205:9" pos:end="205:48"><expr pos:start="205:9" pos:end="205:47"><call pos:start="205:9" pos:end="205:47"><name pos:start="205:9" pos:end="205:27">bytestream_put_le32</name><argument_list pos:start="205:28" pos:end="205:47">(<argument pos:start="205:29" pos:end="205:43"><expr pos:start="205:29" pos:end="205:43"><operator pos:start="205:29" pos:end="205:29">&amp;</operator><name pos:start="205:30" pos:end="205:43">riff_extradata</name></expr></argument>, <argument pos:start="205:46" pos:end="205:46"><expr pos:start="205:46" pos:end="205:46"><literal type="number" pos:start="205:46" pos:end="205:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="207:9" pos:end="207:23">/* dwPTSHigh */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:48"><expr pos:start="209:9" pos:end="209:47"><call pos:start="209:9" pos:end="209:47"><name pos:start="209:9" pos:end="209:27">bytestream_put_le32</name><argument_list pos:start="209:28" pos:end="209:47">(<argument pos:start="209:29" pos:end="209:43"><expr pos:start="209:29" pos:end="209:43"><operator pos:start="209:29" pos:end="209:29">&amp;</operator><name pos:start="209:30" pos:end="209:43">riff_extradata</name></expr></argument>, <argument pos:start="209:46" pos:end="209:46"><expr pos:start="209:46" pos:end="209:46"><literal type="number" pos:start="209:46" pos:end="209:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="211:7" pos:end="219:5">else if <condition pos:start="211:15" pos:end="211:51">(<expr pos:start="211:16" pos:end="211:50"><name pos:start="211:16" pos:end="211:28"><name pos:start="211:16" pos:end="211:18">par</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:28">codec_id</name></name> <operator pos:start="211:30" pos:end="211:31">==</operator> <name pos:start="211:33" pos:end="211:50">AV_CODEC_ID_G723_1</name></expr>)</condition> <block pos:start="211:53" pos:end="219:5">{<block_content pos:start="213:9" pos:end="217:53">

        <expr_stmt pos:start="213:9" pos:end="213:57"><expr pos:start="213:9" pos:end="213:56"><call pos:start="213:9" pos:end="213:56"><name pos:start="213:9" pos:end="213:27">bytestream_put_le32</name><argument_list pos:start="213:28" pos:end="213:56">(<argument pos:start="213:29" pos:end="213:43"><expr pos:start="213:29" pos:end="213:43"><operator pos:start="213:29" pos:end="213:29">&amp;</operator><name pos:start="213:30" pos:end="213:43">riff_extradata</name></expr></argument>, <argument pos:start="213:46" pos:end="213:55"><expr pos:start="213:46" pos:end="213:55"><literal type="number" pos:start="213:46" pos:end="213:55">0x9ace0002</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="213:59" pos:end="213:103">/* extradata needed for msacm g723.1 codec */</comment>

        <expr_stmt pos:start="215:9" pos:end="215:57"><expr pos:start="215:9" pos:end="215:56"><call pos:start="215:9" pos:end="215:56"><name pos:start="215:9" pos:end="215:27">bytestream_put_le32</name><argument_list pos:start="215:28" pos:end="215:56">(<argument pos:start="215:29" pos:end="215:43"><expr pos:start="215:29" pos:end="215:43"><operator pos:start="215:29" pos:end="215:29">&amp;</operator><name pos:start="215:30" pos:end="215:43">riff_extradata</name></expr></argument>, <argument pos:start="215:46" pos:end="215:55"><expr pos:start="215:46" pos:end="215:55"><literal type="number" pos:start="215:46" pos:end="215:55">0xaea2f732</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:53"><expr pos:start="217:9" pos:end="217:52"><call pos:start="217:9" pos:end="217:52"><name pos:start="217:9" pos:end="217:27">bytestream_put_le16</name><argument_list pos:start="217:28" pos:end="217:52">(<argument pos:start="217:29" pos:end="217:43"><expr pos:start="217:29" pos:end="217:43"><operator pos:start="217:29" pos:end="217:29">&amp;</operator><name pos:start="217:30" pos:end="217:43">riff_extradata</name></expr></argument>, <argument pos:start="217:46" pos:end="217:51"><expr pos:start="217:46" pos:end="217:51"><literal type="number" pos:start="217:46" pos:end="217:51">0xacde</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="219:7" pos:end="227:5">else if <condition pos:start="219:15" pos:end="221:58">(<expr pos:start="219:16" pos:end="221:57"><name pos:start="219:16" pos:end="219:28"><name pos:start="219:16" pos:end="219:18">par</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:28">codec_id</name></name> <operator pos:start="219:30" pos:end="219:31">==</operator> <name pos:start="219:33" pos:end="219:50">AV_CODEC_ID_GSM_MS</name> <operator pos:start="219:52" pos:end="219:53">||</operator>

               <name pos:start="221:16" pos:end="221:28"><name pos:start="221:16" pos:end="221:18">par</name><operator pos:start="221:19" pos:end="221:20">-&gt;</operator><name pos:start="221:21" pos:end="221:28">codec_id</name></name> <operator pos:start="221:30" pos:end="221:31">==</operator> <name pos:start="221:33" pos:end="221:57">AV_CODEC_ID_ADPCM_IMA_WAV</name></expr>)</condition> <block pos:start="221:60" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:57">

        <comment type="block" pos:start="223:9" pos:end="223:30">/* wSamplesPerBlock */</comment>

        <expr_stmt pos:start="225:9" pos:end="225:57"><expr pos:start="225:9" pos:end="225:56"><call pos:start="225:9" pos:end="225:56"><name pos:start="225:9" pos:end="225:27">bytestream_put_le16</name><argument_list pos:start="225:28" pos:end="225:56">(<argument pos:start="225:29" pos:end="225:43"><expr pos:start="225:29" pos:end="225:43"><operator pos:start="225:29" pos:end="225:29">&amp;</operator><name pos:start="225:30" pos:end="225:43">riff_extradata</name></expr></argument>, <argument pos:start="225:46" pos:end="225:55"><expr pos:start="225:46" pos:end="225:55"><name pos:start="225:46" pos:end="225:55">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="227:7" pos:end="233:5">else if <condition pos:start="227:15" pos:end="227:35">(<expr pos:start="227:16" pos:end="227:34"><name pos:start="227:16" pos:end="227:34"><name pos:start="227:16" pos:end="227:18">par</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:34">extradata_size</name></name></expr>)</condition> <block pos:start="227:37" pos:end="233:5">{<block_content pos:start="229:9" pos:end="231:68">

        <expr_stmt pos:start="229:9" pos:end="229:46"><expr pos:start="229:9" pos:end="229:45"><name pos:start="229:9" pos:end="229:28">riff_extradata_start</name> <operator pos:start="229:30" pos:end="229:30">=</operator> <name pos:start="229:32" pos:end="229:45"><name pos:start="229:32" pos:end="229:34">par</name><operator pos:start="229:35" pos:end="229:36">-&gt;</operator><name pos:start="229:37" pos:end="229:45">extradata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:68"><expr pos:start="231:9" pos:end="231:67"><name pos:start="231:9" pos:end="231:22">riff_extradata</name>       <operator pos:start="231:30" pos:end="231:30">=</operator> <name pos:start="231:32" pos:end="231:45"><name pos:start="231:32" pos:end="231:34">par</name><operator pos:start="231:35" pos:end="231:36">-&gt;</operator><name pos:start="231:37" pos:end="231:45">extradata</name></name> <operator pos:start="231:47" pos:end="231:47">+</operator> <name pos:start="231:49" pos:end="231:67"><name pos:start="231:49" pos:end="231:51">par</name><operator pos:start="231:52" pos:end="231:53">-&gt;</operator><name pos:start="231:54" pos:end="231:67">extradata_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="235:5" pos:end="235:47">/* write WAVEFORMATEXTENSIBLE extensions */</comment>

    <if_stmt pos:start="237:5" pos:end="285:5"><if pos:start="237:5" pos:end="275:5">if <condition pos:start="237:8" pos:end="237:29">(<expr pos:start="237:9" pos:end="237:28"><name pos:start="237:9" pos:end="237:28">waveformatextensible</name></expr>)</condition> <block pos:start="237:31" pos:end="275:5">{<block_content pos:start="239:9" pos:end="273:9">

        <decl_stmt pos:start="239:9" pos:end="243:65"><decl pos:start="239:9" pos:end="243:64"><type pos:start="239:9" pos:end="239:11"><name pos:start="239:9" pos:end="239:11">int</name></type> <name pos:start="239:13" pos:end="239:30">write_channel_mask</name> <init pos:start="239:32" pos:end="243:64">= <expr pos:start="239:34" pos:end="243:64"><operator pos:start="239:34" pos:end="239:34">!</operator><operator pos:start="239:35" pos:end="239:35">(</operator><name pos:start="239:36" pos:end="239:40">flags</name> <operator pos:start="239:42" pos:end="239:42">&amp;</operator> <name pos:start="239:44" pos:end="239:77">FF_PUT_WAV_HEADER_SKIP_CHANNELMASK</name><operator pos:start="239:78" pos:end="239:78">)</operator> <operator pos:start="239:80" pos:end="239:81">&amp;&amp;</operator>

                                 <operator pos:start="241:34" pos:end="241:34">(</operator><name pos:start="241:35" pos:end="241:58"><name pos:start="241:35" pos:end="241:35">s</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:58">strict_std_compliance</name></name> <operator pos:start="241:60" pos:end="241:60">&lt;</operator> <name pos:start="241:62" pos:end="241:81">FF_COMPLIANCE_NORMAL</name> <operator pos:start="241:83" pos:end="241:84">||</operator>

                                  <name pos:start="243:35" pos:end="243:53"><name pos:start="243:35" pos:end="243:37">par</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:53">channel_layout</name></name> <operator pos:start="243:55" pos:end="243:55">&lt;</operator> <literal type="number" pos:start="243:57" pos:end="243:63">0x40000</literal><operator pos:start="243:64" pos:end="243:64">)</operator></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="245:9" pos:end="245:45">/* 22 is WAVEFORMATEXTENSIBLE size */</comment>

        <expr_stmt pos:start="247:9" pos:end="247:66"><expr pos:start="247:9" pos:end="247:65"><call pos:start="247:9" pos:end="247:65"><name pos:start="247:9" pos:end="247:17">avio_wl16</name><argument_list pos:start="247:18" pos:end="247:65">(<argument pos:start="247:19" pos:end="247:20"><expr pos:start="247:19" pos:end="247:20"><name pos:start="247:19" pos:end="247:20">pb</name></expr></argument>, <argument pos:start="247:23" pos:end="247:64"><expr pos:start="247:23" pos:end="247:64"><name pos:start="247:23" pos:end="247:36">riff_extradata</name> <operator pos:start="247:38" pos:end="247:38">-</operator> <name pos:start="247:40" pos:end="247:59">riff_extradata_start</name> <operator pos:start="247:61" pos:end="247:61">+</operator> <literal type="number" pos:start="247:63" pos:end="247:64">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="249:9" pos:end="249:63">/* ValidBitsPerSample || SamplesPerBlock || Reserved */</comment>

        <expr_stmt pos:start="251:9" pos:end="251:27"><expr pos:start="251:9" pos:end="251:26"><call pos:start="251:9" pos:end="251:26"><name pos:start="251:9" pos:end="251:17">avio_wl16</name><argument_list pos:start="251:18" pos:end="251:26">(<argument pos:start="251:19" pos:end="251:20"><expr pos:start="251:19" pos:end="251:20"><name pos:start="251:19" pos:end="251:20">pb</name></expr></argument>, <argument pos:start="251:23" pos:end="251:25"><expr pos:start="251:23" pos:end="251:25"><name pos:start="251:23" pos:end="251:25">bps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="253:9" pos:end="253:27">/* dwChannelMask */</comment>

        <expr_stmt pos:start="255:9" pos:end="255:68"><expr pos:start="255:9" pos:end="255:67"><call pos:start="255:9" pos:end="255:67"><name pos:start="255:9" pos:end="255:17">avio_wl32</name><argument_list pos:start="255:18" pos:end="255:67">(<argument pos:start="255:19" pos:end="255:20"><expr pos:start="255:19" pos:end="255:20"><name pos:start="255:19" pos:end="255:20">pb</name></expr></argument>, <argument pos:start="255:23" pos:end="255:66"><expr pos:start="255:23" pos:end="255:66"><ternary pos:start="255:23" pos:end="255:66"><condition pos:start="255:23" pos:end="255:42"><expr pos:start="255:23" pos:end="255:40"><name pos:start="255:23" pos:end="255:40">write_channel_mask</name></expr> ?</condition><then pos:start="255:44" pos:end="255:62"> <expr pos:start="255:44" pos:end="255:62"><name pos:start="255:44" pos:end="255:62"><name pos:start="255:44" pos:end="255:46">par</name><operator pos:start="255:47" pos:end="255:48">-&gt;</operator><name pos:start="255:49" pos:end="255:62">channel_layout</name></name></expr> </then><else pos:start="255:64" pos:end="255:66">: <expr pos:start="255:66" pos:end="255:66"><literal type="number" pos:start="255:66" pos:end="255:66">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="257:9" pos:end="257:27">/* GUID + next 3 */</comment>

        <if_stmt pos:start="259:9" pos:end="273:9"><if pos:start="259:9" pos:end="263:9">if <condition pos:start="259:12" pos:end="259:46">(<expr pos:start="259:13" pos:end="259:45"><name pos:start="259:13" pos:end="259:25"><name pos:start="259:13" pos:end="259:15">par</name><operator pos:start="259:16" pos:end="259:17">-&gt;</operator><name pos:start="259:18" pos:end="259:25">codec_id</name></name> <operator pos:start="259:27" pos:end="259:28">==</operator> <name pos:start="259:30" pos:end="259:45">AV_CODEC_ID_EAC3</name></expr>)</condition> <block pos:start="259:48" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:82">

            <expr_stmt pos:start="261:13" pos:end="261:82"><expr pos:start="261:13" pos:end="261:81"><call pos:start="261:13" pos:end="261:81"><name pos:start="261:13" pos:end="261:23">ff_put_guid</name><argument_list pos:start="261:24" pos:end="261:81">(<argument pos:start="261:25" pos:end="261:26"><expr pos:start="261:25" pos:end="261:26"><name pos:start="261:25" pos:end="261:26">pb</name></expr></argument>, <argument pos:start="261:29" pos:end="261:80"><expr pos:start="261:29" pos:end="261:80"><call pos:start="261:29" pos:end="261:80"><name pos:start="261:29" pos:end="261:45">ff_get_codec_guid</name><argument_list pos:start="261:46" pos:end="261:80">(<argument pos:start="261:47" pos:end="261:59"><expr pos:start="261:47" pos:end="261:59"><name pos:start="261:47" pos:end="261:59"><name pos:start="261:47" pos:end="261:49">par</name><operator pos:start="261:50" pos:end="261:51">-&gt;</operator><name pos:start="261:52" pos:end="261:59">codec_id</name></name></expr></argument>, <argument pos:start="261:62" pos:end="261:79"><expr pos:start="261:62" pos:end="261:79"><name pos:start="261:62" pos:end="261:79">ff_codec_wav_guids</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="263:11" pos:end="273:9">else <block pos:start="263:16" pos:end="273:9">{<block_content pos:start="265:9" pos:end="271:34">

        <expr_stmt pos:start="265:9" pos:end="265:38"><expr pos:start="265:9" pos:end="265:37"><call pos:start="265:9" pos:end="265:37"><name pos:start="265:9" pos:end="265:17">avio_wl32</name><argument_list pos:start="265:18" pos:end="265:37">(<argument pos:start="265:19" pos:end="265:20"><expr pos:start="265:19" pos:end="265:20"><name pos:start="265:19" pos:end="265:20">pb</name></expr></argument>, <argument pos:start="265:23" pos:end="265:36"><expr pos:start="265:23" pos:end="265:36"><name pos:start="265:23" pos:end="265:36"><name pos:start="265:23" pos:end="265:25">par</name><operator pos:start="265:26" pos:end="265:27">-&gt;</operator><name pos:start="265:28" pos:end="265:36">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:34"><expr pos:start="267:9" pos:end="267:33"><call pos:start="267:9" pos:end="267:33"><name pos:start="267:9" pos:end="267:17">avio_wl32</name><argument_list pos:start="267:18" pos:end="267:33">(<argument pos:start="267:19" pos:end="267:20"><expr pos:start="267:19" pos:end="267:20"><name pos:start="267:19" pos:end="267:20">pb</name></expr></argument>, <argument pos:start="267:23" pos:end="267:32"><expr pos:start="267:23" pos:end="267:32"><literal type="number" pos:start="267:23" pos:end="267:32">0x00100000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:34"><expr pos:start="269:9" pos:end="269:33"><call pos:start="269:9" pos:end="269:33"><name pos:start="269:9" pos:end="269:17">avio_wl32</name><argument_list pos:start="269:18" pos:end="269:33">(<argument pos:start="269:19" pos:end="269:20"><expr pos:start="269:19" pos:end="269:20"><name pos:start="269:19" pos:end="269:20">pb</name></expr></argument>, <argument pos:start="269:23" pos:end="269:32"><expr pos:start="269:23" pos:end="269:32"><literal type="number" pos:start="269:23" pos:end="269:32">0xAA000080</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:34"><expr pos:start="271:9" pos:end="271:33"><call pos:start="271:9" pos:end="271:33"><name pos:start="271:9" pos:end="271:17">avio_wl32</name><argument_list pos:start="271:18" pos:end="271:33">(<argument pos:start="271:19" pos:end="271:20"><expr pos:start="271:19" pos:end="271:20"><name pos:start="271:19" pos:end="271:20">pb</name></expr></argument>, <argument pos:start="271:23" pos:end="271:32"><expr pos:start="271:23" pos:end="271:32"><literal type="number" pos:start="271:23" pos:end="271:32">0x719B3800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="275:7" pos:end="285:5">else if <condition pos:start="275:15" pos:end="279:53">(<expr pos:start="275:16" pos:end="279:52"><operator pos:start="275:16" pos:end="275:16">(</operator><name pos:start="275:17" pos:end="275:21">flags</name> <operator pos:start="275:23" pos:end="275:23">&amp;</operator> <name pos:start="275:25" pos:end="275:60">FF_PUT_WAV_HEADER_FORCE_WAVEFORMATEX</name><operator pos:start="275:61" pos:end="275:61">)</operator> <operator pos:start="275:63" pos:end="275:64">||</operator>

               <name pos:start="277:16" pos:end="277:29"><name pos:start="277:16" pos:end="277:18">par</name><operator pos:start="277:19" pos:end="277:20">-&gt;</operator><name pos:start="277:21" pos:end="277:29">codec_tag</name></name> <operator pos:start="277:31" pos:end="277:32">!=</operator> <literal type="number" pos:start="277:34" pos:end="277:39">0x0001</literal> <comment type="block" pos:start="277:41" pos:end="277:49">/* PCM */</comment> <operator pos:start="277:51" pos:end="277:52">||</operator>

               <name pos:start="279:16" pos:end="279:29">riff_extradata</name> <operator pos:start="279:31" pos:end="279:31">-</operator> <name pos:start="279:33" pos:end="279:52">riff_extradata_start</name></expr>)</condition> <block pos:start="279:55" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:61">

        <comment type="block" pos:start="281:9" pos:end="281:26">/* WAVEFORMATEX */</comment>

        <expr_stmt pos:start="283:9" pos:end="283:61"><expr pos:start="283:9" pos:end="283:60"><call pos:start="283:9" pos:end="283:60"><name pos:start="283:9" pos:end="283:17">avio_wl16</name><argument_list pos:start="283:18" pos:end="283:60">(<argument pos:start="283:19" pos:end="283:20"><expr pos:start="283:19" pos:end="283:20"><name pos:start="283:19" pos:end="283:20">pb</name></expr></argument>, <argument pos:start="283:23" pos:end="283:59"><expr pos:start="283:23" pos:end="283:59"><name pos:start="283:23" pos:end="283:36">riff_extradata</name> <operator pos:start="283:38" pos:end="283:38">-</operator> <name pos:start="283:40" pos:end="283:59">riff_extradata_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="283:63" pos:end="283:74">/* cbSize */</comment>

    </block_content>}</block></if></if_stmt> <comment type="block" pos:start="285:7" pos:end="285:30">/* else PCMWAVEFORMAT */</comment>

    <expr_stmt pos:start="287:5" pos:end="287:80"><expr pos:start="287:5" pos:end="287:79"><call pos:start="287:5" pos:end="287:79"><name pos:start="287:5" pos:end="287:14">avio_write</name><argument_list pos:start="287:15" pos:end="287:79">(<argument pos:start="287:16" pos:end="287:17"><expr pos:start="287:16" pos:end="287:17"><name pos:start="287:16" pos:end="287:17">pb</name></expr></argument>, <argument pos:start="287:20" pos:end="287:39"><expr pos:start="287:20" pos:end="287:39"><name pos:start="287:20" pos:end="287:39">riff_extradata_start</name></expr></argument>, <argument pos:start="287:42" pos:end="287:78"><expr pos:start="287:42" pos:end="287:78"><name pos:start="287:42" pos:end="287:55">riff_extradata</name> <operator pos:start="287:57" pos:end="287:57">-</operator> <name pos:start="287:59" pos:end="287:78">riff_extradata_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:39"><expr pos:start="289:5" pos:end="289:38"><name pos:start="289:5" pos:end="289:11">hdrsize</name> <operator pos:start="289:13" pos:end="289:13">=</operator> <call pos:start="289:15" pos:end="289:27"><name pos:start="289:15" pos:end="289:23">avio_tell</name><argument_list pos:start="289:24" pos:end="289:27">(<argument pos:start="289:25" pos:end="289:26"><expr pos:start="289:25" pos:end="289:26"><name pos:start="289:25" pos:end="289:26">pb</name></expr></argument>)</argument_list></call> <operator pos:start="289:29" pos:end="289:29">-</operator> <name pos:start="289:31" pos:end="289:38">hdrstart</name></expr>;</expr_stmt>

    <if_stmt pos:start="291:5" pos:end="297:5"><if pos:start="291:5" pos:end="297:5">if <condition pos:start="291:8" pos:end="291:20">(<expr pos:start="291:9" pos:end="291:19"><name pos:start="291:9" pos:end="291:15">hdrsize</name> <operator pos:start="291:17" pos:end="291:17">&amp;</operator> <literal type="number" pos:start="291:19" pos:end="291:19">1</literal></expr>)</condition> <block pos:start="291:22" pos:end="297:5">{<block_content pos:start="293:9" pos:end="295:23">

        <expr_stmt pos:start="293:9" pos:end="293:18"><expr pos:start="293:9" pos:end="293:17"><name pos:start="293:9" pos:end="293:15">hdrsize</name><operator pos:start="293:16" pos:end="293:17">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:23"><expr pos:start="295:9" pos:end="295:22"><call pos:start="295:9" pos:end="295:22"><name pos:start="295:9" pos:end="295:15">avio_w8</name><argument_list pos:start="295:16" pos:end="295:22">(<argument pos:start="295:17" pos:end="295:18"><expr pos:start="295:17" pos:end="295:18"><name pos:start="295:17" pos:end="295:18">pb</name></expr></argument>, <argument pos:start="295:21" pos:end="295:21"><expr pos:start="295:21" pos:end="295:21"><literal type="number" pos:start="295:21" pos:end="295:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="301:5" pos:end="301:19">return <expr pos:start="301:12" pos:end="301:18"><name pos:start="301:12" pos:end="301:18">hdrsize</name></expr>;</return>

</block_content>}</block></function></unit>
