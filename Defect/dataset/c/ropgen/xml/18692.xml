<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18692.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">clear_sel</name><parameter_list pos:start="1:22" pos:end="7:47">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:32">IPMIBmcSim</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">ibs</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:34"><decl pos:start="3:23" pos:end="3:34"><type pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:29">uint8_t</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:34">cmd</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:56"><decl pos:start="3:37" pos:end="3:56"><type pos:start="3:37" pos:end="3:56"><name pos:start="3:37" pos:end="3:44">unsigned</name> <name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:56">cmd_len</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:34"><decl pos:start="5:23" pos:end="5:34"><type pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:29">uint8_t</name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:34">rsp</name></decl></parameter>, <parameter pos:start="5:37" pos:end="5:57"><decl pos:start="5:37" pos:end="5:57"><type pos:start="5:37" pos:end="5:57"><name pos:start="5:37" pos:end="5:44">unsigned</name> <name pos:start="5:46" pos:end="5:48">int</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:57">rsp_len</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:46"><decl pos:start="7:23" pos:end="7:46"><type pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:30">unsigned</name> <name pos:start="7:32" pos:end="7:34">int</name></type> <name pos:start="7:36" pos:end="7:46">max_rsp_len</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="47:1">{<block_content pos:start="11:5" pos:end="45:5">

    <expr_stmt pos:start="11:5" pos:end="11:26"><expr pos:start="11:5" pos:end="11:25"><call pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:22">IPMI_CHECK_CMD_LEN</name><argument_list pos:start="11:23" pos:end="11:25">(<argument pos:start="11:24" pos:end="11:24"><expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><call pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:26">IPMI_CHECK_RESERVATION</name><argument_list pos:start="13:27" pos:end="13:51">(<argument pos:start="13:28" pos:end="13:28"><expr pos:start="13:28" pos:end="13:28"><literal type="number" pos:start="13:28" pos:end="13:28">2</literal></expr></argument>, <argument pos:start="13:31" pos:end="13:50"><expr pos:start="13:31" pos:end="13:50"><name pos:start="13:31" pos:end="13:50"><name pos:start="13:31" pos:end="13:33">ibs</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:38">sel</name><operator pos:start="13:39" pos:end="13:39">.</operator><name pos:start="13:40" pos:end="13:50">reservation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:11">cmd</name><index pos:start="15:12" pos:end="15:14">[<expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">4</literal></expr>]</index></name> <operator pos:start="15:16" pos:end="15:17">!=</operator> <literal type="char" pos:start="15:19" pos:end="15:21">'C'</literal> <operator pos:start="15:23" pos:end="15:24">||</operator> <name pos:start="15:26" pos:end="15:31"><name pos:start="15:26" pos:end="15:28">cmd</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">5</literal></expr>]</index></name> <operator pos:start="15:33" pos:end="15:34">!=</operator> <literal type="char" pos:start="15:36" pos:end="15:38">'L'</literal> <operator pos:start="15:40" pos:end="15:41">||</operator> <name pos:start="15:43" pos:end="15:48"><name pos:start="15:43" pos:end="15:45">cmd</name><index pos:start="15:46" pos:end="15:48">[<expr pos:start="15:47" pos:end="15:47"><literal type="number" pos:start="15:47" pos:end="15:47">6</literal></expr>]</index></name> <operator pos:start="15:50" pos:end="15:51">!=</operator> <literal type="char" pos:start="15:53" pos:end="15:55">'R'</literal></expr>)</condition> <block pos:start="15:58" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:11">rsp</name><index pos:start="17:12" pos:end="17:14">[<expr pos:start="17:13" pos:end="17:13"><literal type="number" pos:start="17:13" pos:end="17:13">2</literal></expr>]</index></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:43">IPMI_CC_INVALID_DATA_FIELD</name></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="45:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:11">cmd</name><index pos:start="23:12" pos:end="23:14">[<expr pos:start="23:13" pos:end="23:13"><literal type="number" pos:start="23:13" pos:end="23:13">7</literal></expr>]</index></name> <operator pos:start="23:16" pos:end="23:17">==</operator> <literal type="number" pos:start="23:19" pos:end="23:22">0xaa</literal></expr>)</condition> <block pos:start="23:25" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:39">

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:11">ibs</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:16">sel</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:26">next_free</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <literal type="number" pos:start="25:30" pos:end="25:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:11">ibs</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:16">sel</name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:25">overflow</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><call pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:21">set_timestamp</name><argument_list pos:start="29:22" pos:end="29:47">(<argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">ibs</name></expr></argument>, <argument pos:start="29:28" pos:end="29:46"><expr pos:start="29:28" pos:end="29:46"><name pos:start="29:28" pos:end="29:46"><name pos:start="29:28" pos:end="29:30">ibs</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:35">sdr</name><operator pos:start="29:36" pos:end="29:36">.</operator><name pos:start="29:37" pos:end="29:46">last_clear</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:25">IPMI_ADD_RSP_DATA</name><argument_list pos:start="31:26" pos:end="31:28">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:31" pos:end="31:52">/* Erasure complete */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:27">sel_inc_reservation</name><argument_list pos:start="33:28" pos:end="33:38">(<argument pos:start="33:29" pos:end="33:37"><expr pos:start="33:29" pos:end="33:37"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:37"><name pos:start="33:30" pos:end="33:32">ibs</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:37">sel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:27">(<expr pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:18">cmd</name><index pos:start="35:19" pos:end="35:21">[<expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">7</literal></expr>]</index></name> <operator pos:start="35:23" pos:end="35:24">==</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>)</condition> <block pos:start="35:29" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:29">

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><call pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:25">IPMI_ADD_RSP_DATA</name><argument_list pos:start="37:26" pos:end="37:28">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><literal type="number" pos:start="37:27" pos:end="37:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:31" pos:end="37:52">/* Erasure complete */</comment>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:15">

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:11">rsp</name><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><literal type="number" pos:start="41:13" pos:end="41:13">2</literal></expr>]</index></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:43">IPMI_CC_INVALID_DATA_FIELD</name></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
