<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8367.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">OutputStream</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:37">new_audio_stream</name><parameter_list pos:start="1:38" pos:end="1:95">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:52">OptionsContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">o</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:76"><decl pos:start="1:58" pos:end="1:76"><type pos:start="1:58" pos:end="1:76"><name pos:start="1:58" pos:end="1:72">AVFormatContext</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:76">oc</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:94"><decl pos:start="1:79" pos:end="1:94"><type pos:start="1:79" pos:end="1:94"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:94">source_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">OutputStream</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:29">audio_enc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:69"><expr pos:start="15:5" pos:end="15:68"><name pos:start="15:5" pos:end="15:7">ost</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:68"><name pos:start="15:11" pos:end="15:27">new_output_stream</name><argument_list pos:start="15:28" pos:end="15:68">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">o</name></expr></argument>, <argument pos:start="15:32" pos:end="15:33"><expr pos:start="15:32" pos:end="15:33"><name pos:start="15:32" pos:end="15:33">oc</name></expr></argument>, <argument pos:start="15:36" pos:end="15:53"><expr pos:start="15:36" pos:end="15:53"><name pos:start="15:36" pos:end="15:53">AVMEDIA_TYPE_AUDIO</name></expr></argument>, <argument pos:start="15:56" pos:end="15:67"><expr pos:start="15:56" pos:end="15:67"><name pos:start="15:56" pos:end="15:67">source_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:6">st</name>  <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:17"><name pos:start="17:11" pos:end="17:13">ost</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:17">st</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:13">audio_enc</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:18">st</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:25">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:13">audio_enc</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">codec_type</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:75"><expr pos:start="27:5" pos:end="27:74"><call pos:start="27:5" pos:end="27:74"><name pos:start="27:5" pos:end="27:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="27:25" pos:end="27:74">(<argument pos:start="27:26" pos:end="27:39"><expr pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:39">filter_scripts</name></expr></argument>, <argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:44">str</name></expr></argument>, <argument pos:start="27:47" pos:end="27:65"><expr pos:start="27:47" pos:end="27:65"><name pos:start="27:47" pos:end="27:65"><name pos:start="27:47" pos:end="27:49">ost</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:65">filters_script</name></name></expr></argument>, <argument pos:start="27:68" pos:end="27:69"><expr pos:start="27:68" pos:end="27:69"><name pos:start="27:68" pos:end="27:69">oc</name></expr></argument>, <argument pos:start="27:72" pos:end="27:73"><expr pos:start="27:72" pos:end="27:73"><name pos:start="27:72" pos:end="27:73">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:75"><expr pos:start="29:5" pos:end="29:74"><call pos:start="29:5" pos:end="29:74"><name pos:start="29:5" pos:end="29:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="29:25" pos:end="29:74">(<argument pos:start="29:26" pos:end="29:32"><expr pos:start="29:26" pos:end="29:32"><name pos:start="29:26" pos:end="29:32">filters</name></expr></argument>,        <argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">str</name></expr></argument>, <argument pos:start="29:47" pos:end="29:58"><expr pos:start="29:47" pos:end="29:58"><name pos:start="29:47" pos:end="29:58"><name pos:start="29:47" pos:end="29:49">ost</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:58">filters</name></name></expr></argument>,        <argument pos:start="29:68" pos:end="29:69"><expr pos:start="29:68" pos:end="29:69"><name pos:start="29:68" pos:end="29:69">oc</name></expr></argument>, <argument pos:start="29:72" pos:end="29:73"><expr pos:start="29:72" pos:end="29:73"><name pos:start="29:72" pos:end="29:73">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="103:5"><if pos:start="33:5" pos:end="103:5">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:25"><name pos:start="33:10" pos:end="33:12">ost</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:25">stream_copy</name></name></expr>)</condition> <block pos:start="33:28" pos:end="103:5">{<block_content pos:start="35:9" pos:end="101:9">

        <decl_stmt pos:start="35:9" pos:end="35:32"><decl pos:start="35:9" pos:end="35:31"><type pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:12">char</name> <modifier pos:start="35:14" pos:end="35:14">*</modifier></type><name pos:start="35:15" pos:end="35:24">sample_fmt</name> <init pos:start="35:26" pos:end="35:31">= <expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:77"><expr pos:start="39:9" pos:end="39:76"><call pos:start="39:9" pos:end="39:76"><name pos:start="39:9" pos:end="39:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="39:29" pos:end="39:76">(<argument pos:start="39:30" pos:end="39:43"><expr pos:start="39:30" pos:end="39:43"><name pos:start="39:30" pos:end="39:43">audio_channels</name></expr></argument>, <argument pos:start="39:46" pos:end="39:46"><expr pos:start="39:46" pos:end="39:46"><name pos:start="39:46" pos:end="39:46">i</name></expr></argument>, <argument pos:start="39:49" pos:end="39:67"><expr pos:start="39:49" pos:end="39:67"><name pos:start="39:49" pos:end="39:67"><name pos:start="39:49" pos:end="39:57">audio_enc</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:67">channels</name></name></expr></argument>, <argument pos:start="39:70" pos:end="39:71"><expr pos:start="39:70" pos:end="39:71"><name pos:start="39:70" pos:end="39:71">oc</name></expr></argument>, <argument pos:start="39:74" pos:end="39:75"><expr pos:start="39:74" pos:end="39:75"><name pos:start="39:74" pos:end="39:75">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><call pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="43:29" pos:end="43:66">(<argument pos:start="43:30" pos:end="43:40"><expr pos:start="43:30" pos:end="43:40"><name pos:start="43:30" pos:end="43:40">sample_fmts</name></expr></argument>, <argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">str</name></expr></argument>, <argument pos:start="43:48" pos:end="43:57"><expr pos:start="43:48" pos:end="43:57"><name pos:start="43:48" pos:end="43:57">sample_fmt</name></expr></argument>, <argument pos:start="43:60" pos:end="43:61"><expr pos:start="43:60" pos:end="43:61"><name pos:start="43:60" pos:end="43:61">oc</name></expr></argument>, <argument pos:start="43:64" pos:end="43:65"><expr pos:start="43:64" pos:end="43:65"><name pos:start="43:64" pos:end="43:65">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="53:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="47:90">(<expr pos:start="45:13" pos:end="47:89"><name pos:start="45:13" pos:end="45:22">sample_fmt</name> <operator pos:start="45:24" pos:end="45:25">&amp;&amp;</operator>

            <operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:34"><name pos:start="47:14" pos:end="47:22">audio_enc</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:34">sample_fmt</name></name> <operator pos:start="47:36" pos:end="47:36">=</operator> <call pos:start="47:38" pos:end="47:66"><name pos:start="47:38" pos:end="47:54">av_get_sample_fmt</name><argument_list pos:start="47:55" pos:end="47:66">(<argument pos:start="47:56" pos:end="47:65"><expr pos:start="47:56" pos:end="47:65"><name pos:start="47:56" pos:end="47:65">sample_fmt</name></expr></argument>)</argument_list></call><operator pos:start="47:67" pos:end="47:67">)</operator> <operator pos:start="47:69" pos:end="47:70">==</operator> <name pos:start="47:72" pos:end="47:89">AV_SAMPLE_FMT_NONE</name></expr>)</condition> <block pos:start="47:92" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:28">

            <expr_stmt pos:start="49:13" pos:end="49:83"><expr pos:start="49:13" pos:end="49:82"><call pos:start="49:13" pos:end="49:82"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="49:82">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">NULL</name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="49:40" pos:end="49:69"><expr pos:start="49:40" pos:end="49:69"><literal type="string" pos:start="49:40" pos:end="49:69">"Invalid sample format '%s'\n"</literal></expr></argument>, <argument pos:start="49:72" pos:end="49:81"><expr pos:start="49:72" pos:end="49:81"><name pos:start="49:72" pos:end="49:81">sample_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><call pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:24">exit_program</name><argument_list pos:start="51:25" pos:end="51:27">(<argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:83"><expr pos:start="57:9" pos:end="57:82"><call pos:start="57:9" pos:end="57:82"><name pos:start="57:9" pos:end="57:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="57:29" pos:end="57:82">(<argument pos:start="57:30" pos:end="57:46"><expr pos:start="57:30" pos:end="57:46"><name pos:start="57:30" pos:end="57:46">audio_sample_rate</name></expr></argument>, <argument pos:start="57:49" pos:end="57:49"><expr pos:start="57:49" pos:end="57:49"><name pos:start="57:49" pos:end="57:49">i</name></expr></argument>, <argument pos:start="57:52" pos:end="57:73"><expr pos:start="57:52" pos:end="57:73"><name pos:start="57:52" pos:end="57:73"><name pos:start="57:52" pos:end="57:60">audio_enc</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:73">sample_rate</name></name></expr></argument>, <argument pos:start="57:76" pos:end="57:77"><expr pos:start="57:76" pos:end="57:77"><name pos:start="57:76" pos:end="57:77">oc</name></expr></argument>, <argument pos:start="57:80" pos:end="57:81"><expr pos:start="57:80" pos:end="57:81"><name pos:start="57:80" pos:end="57:81">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:59"><expr pos:start="61:9" pos:end="61:58"><call pos:start="61:9" pos:end="61:58"><name pos:start="61:9" pos:end="61:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="61:29" pos:end="61:58">(<argument pos:start="61:30" pos:end="61:33"><expr pos:start="61:30" pos:end="61:33"><name pos:start="61:30" pos:end="61:33">apad</name></expr></argument>, <argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:38">str</name></expr></argument>, <argument pos:start="61:41" pos:end="61:49"><expr pos:start="61:41" pos:end="61:49"><name pos:start="61:41" pos:end="61:49"><name pos:start="61:41" pos:end="61:43">ost</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:49">apad</name></name></expr></argument>, <argument pos:start="61:52" pos:end="61:53"><expr pos:start="61:52" pos:end="61:53"><name pos:start="61:52" pos:end="61:53">oc</name></expr></argument>, <argument pos:start="61:56" pos:end="61:57"><expr pos:start="61:56" pos:end="61:57"><name pos:start="61:56" pos:end="61:57">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:41"><expr pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:11">ost</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">apad</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:40"><name pos:start="63:21" pos:end="63:29">av_strdup</name><argument_list pos:start="63:30" pos:end="63:40">(<argument pos:start="63:31" pos:end="63:39"><expr pos:start="63:31" pos:end="63:39"><name pos:start="63:31" pos:end="63:39"><name pos:start="63:31" pos:end="63:33">ost</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:39">apad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:52"><expr pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:11">ost</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:21">avfilter</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <call pos:start="67:25" pos:end="67:51"><name pos:start="67:25" pos:end="67:39">get_ost_filters</name><argument_list pos:start="67:40" pos:end="67:51">(<argument pos:start="67:41" pos:end="67:41"><expr pos:start="67:41" pos:end="67:41"><name pos:start="67:41" pos:end="67:41">o</name></expr></argument>, <argument pos:start="67:44" pos:end="67:45"><expr pos:start="67:44" pos:end="67:45"><name pos:start="67:44" pos:end="67:45">oc</name></expr></argument>, <argument pos:start="67:48" pos:end="67:50"><expr pos:start="67:48" pos:end="67:50"><name pos:start="67:48" pos:end="67:50">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:28"><if pos:start="69:9" pos:end="71:28">if <condition pos:start="69:12" pos:end="69:27">(<expr pos:start="69:13" pos:end="69:26"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:26"><name pos:start="69:14" pos:end="69:16">ost</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:26">avfilter</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:28"><block_content pos:start="71:13" pos:end="71:28">

            <expr_stmt pos:start="71:13" pos:end="71:28"><expr pos:start="71:13" pos:end="71:27"><call pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:24">exit_program</name><argument_list pos:start="71:25" pos:end="71:27">(<argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><literal type="number" pos:start="71:26" pos:end="71:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:61">/* check for channel mapping for this audio stream */</comment>

        <for pos:start="77:9" pos:end="101:9">for <control pos:start="77:13" pos:end="77:54">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">n</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:49"><expr pos:start="77:21" pos:end="77:48"><name pos:start="77:21" pos:end="77:21">n</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:48"><name pos:start="77:25" pos:end="77:25">o</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:48">nb_audio_channel_maps</name></name></expr>;</condition> <incr pos:start="77:51" pos:end="77:53"><expr pos:start="77:51" pos:end="77:53"><name pos:start="77:51" pos:end="77:51">n</name><operator pos:start="77:52" pos:end="77:53">++</operator></expr></incr>)</control> <block pos:start="77:56" pos:end="101:9">{<block_content pos:start="79:13" pos:end="99:13">

            <decl_stmt pos:start="79:13" pos:end="79:61"><decl pos:start="79:13" pos:end="79:60"><type pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:27">AudioChannelMap</name> <modifier pos:start="79:29" pos:end="79:29">*</modifier></type><name pos:start="79:30" pos:end="79:32">map</name> <init pos:start="79:34" pos:end="79:60">= <expr pos:start="79:36" pos:end="79:60"><operator pos:start="79:36" pos:end="79:36">&amp;</operator><name pos:start="79:37" pos:end="79:60"><name pos:start="79:37" pos:end="79:37">o</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:57">audio_channel_maps</name><index pos:start="79:58" pos:end="79:60">[<expr pos:start="79:59" pos:end="79:59"><name pos:start="79:59" pos:end="79:59">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="81:64"><decl pos:start="81:13" pos:end="81:63"><type pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:23">InputStream</name> <modifier pos:start="81:25" pos:end="81:25">*</modifier></type><name pos:start="81:26" pos:end="81:28">ist</name> <init pos:start="81:30" pos:end="81:63">= <expr pos:start="81:32" pos:end="81:63"><name pos:start="81:32" pos:end="81:63"><name pos:start="81:32" pos:end="81:44">input_streams</name><index pos:start="81:45" pos:end="81:63">[<expr pos:start="81:46" pos:end="81:62"><name pos:start="81:46" pos:end="81:62"><name pos:start="81:46" pos:end="81:48">ost</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:62">source_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="83:13" pos:end="99:13"><if pos:start="83:13" pos:end="99:13">if <condition pos:start="83:16" pos:end="87:80">(<expr pos:start="83:17" pos:end="87:79"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:33"><name pos:start="83:18" pos:end="83:20">map</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:33">channel_idx</name></name> <operator pos:start="83:35" pos:end="83:36">==</operator> <operator pos:start="83:38" pos:end="83:38">-</operator><literal type="number" pos:start="83:39" pos:end="83:39">1</literal> <operator pos:start="83:41" pos:end="83:42">||</operator> <operator pos:start="83:44" pos:end="83:44">(</operator><name pos:start="83:45" pos:end="83:59"><name pos:start="83:45" pos:end="83:47">ist</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:59">file_index</name></name> <operator pos:start="83:61" pos:end="83:62">==</operator> <name pos:start="83:64" pos:end="83:76"><name pos:start="83:64" pos:end="83:66">map</name><operator pos:start="83:67" pos:end="83:68">-&gt;</operator><name pos:start="83:69" pos:end="83:76">file_idx</name></name> <operator pos:start="83:78" pos:end="83:79">&amp;&amp;</operator> <name pos:start="83:81" pos:end="83:94"><name pos:start="83:81" pos:end="83:83">ist</name><operator pos:start="83:84" pos:end="83:85">-&gt;</operator><name pos:start="83:86" pos:end="83:87">st</name><operator pos:start="83:88" pos:end="83:89">-&gt;</operator><name pos:start="83:90" pos:end="83:94">index</name></name> <operator pos:start="83:96" pos:end="83:97">==</operator> <name pos:start="83:99" pos:end="83:113"><name pos:start="83:99" pos:end="83:101">map</name><operator pos:start="83:102" pos:end="83:103">-&gt;</operator><name pos:start="83:104" pos:end="83:113">stream_idx</name></name><operator pos:start="83:114" pos:end="83:114">)</operator><operator pos:start="83:115" pos:end="83:115">)</operator> <operator pos:start="83:117" pos:end="83:118">&amp;&amp;</operator>

                <operator pos:start="85:17" pos:end="85:17">(</operator><name pos:start="85:18" pos:end="85:31"><name pos:start="85:18" pos:end="85:20">map</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:31">ofile_idx</name></name>   <operator pos:start="85:35" pos:end="85:36">==</operator> <operator pos:start="85:38" pos:end="85:38">-</operator><literal type="number" pos:start="85:39" pos:end="85:39">1</literal> <operator pos:start="85:41" pos:end="85:42">||</operator> <name pos:start="85:44" pos:end="85:58"><name pos:start="85:44" pos:end="85:46">ost</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:58">file_index</name></name> <operator pos:start="85:60" pos:end="85:61">==</operator> <name pos:start="85:63" pos:end="85:76"><name pos:start="85:63" pos:end="85:65">map</name><operator pos:start="85:66" pos:end="85:67">-&gt;</operator><name pos:start="85:68" pos:end="85:76">ofile_idx</name></name><operator pos:start="85:77" pos:end="85:77">)</operator> <operator pos:start="85:79" pos:end="85:80">&amp;&amp;</operator>

                <operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:33"><name pos:start="87:18" pos:end="87:20">map</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:33">ostream_idx</name></name> <operator pos:start="87:35" pos:end="87:36">==</operator> <operator pos:start="87:38" pos:end="87:38">-</operator><literal type="number" pos:start="87:39" pos:end="87:39">1</literal> <operator pos:start="87:41" pos:end="87:42">||</operator> <name pos:start="87:44" pos:end="87:57"><name pos:start="87:44" pos:end="87:46">ost</name><operator pos:start="87:47" pos:end="87:48">-&gt;</operator><name pos:start="87:49" pos:end="87:50">st</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:57">index</name></name>  <operator pos:start="87:60" pos:end="87:61">==</operator> <name pos:start="87:63" pos:end="87:78"><name pos:start="87:63" pos:end="87:65">map</name><operator pos:start="87:66" pos:end="87:67">-&gt;</operator><name pos:start="87:68" pos:end="87:78">ostream_idx</name></name><operator pos:start="87:79" pos:end="87:79">)</operator></expr>)</condition> <block pos:start="87:82" pos:end="99:13">{<block_content pos:start="89:17" pos:end="97:60">

                <if_stmt pos:start="89:17" pos:end="97:60"><if pos:start="89:17" pos:end="91:93">if <condition pos:start="89:20" pos:end="89:89">(<expr pos:start="89:21" pos:end="89:88"><name pos:start="89:21" pos:end="89:46"><name pos:start="89:21" pos:end="89:23">ost</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:46">audio_channels_mapped</name></name> <operator pos:start="89:48" pos:end="89:48">&lt;</operator> <call pos:start="89:50" pos:end="89:88"><name pos:start="89:50" pos:end="89:63">FF_ARRAY_ELEMS</name><argument_list pos:start="89:64" pos:end="89:88">(<argument pos:start="89:65" pos:end="89:87"><expr pos:start="89:65" pos:end="89:87"><name pos:start="89:65" pos:end="89:87"><name pos:start="89:65" pos:end="89:67">ost</name><operator pos:start="89:68" pos:end="89:69">-&gt;</operator><name pos:start="89:70" pos:end="89:87">audio_channels_map</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:93"><block_content pos:start="91:21" pos:end="91:93">

                    <expr_stmt pos:start="91:21" pos:end="91:93"><expr pos:start="91:21" pos:end="91:92"><name pos:start="91:21" pos:end="91:73"><name pos:start="91:21" pos:end="91:23">ost</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:43">audio_channels_map</name><index pos:start="91:44" pos:end="91:73">[<expr pos:start="91:45" pos:end="91:72"><name pos:start="91:45" pos:end="91:70"><name pos:start="91:45" pos:end="91:47">ost</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:70">audio_channels_mapped</name></name><operator pos:start="91:71" pos:end="91:72">++</operator></expr>]</index></name> <operator pos:start="91:75" pos:end="91:75">=</operator> <name pos:start="91:77" pos:end="91:92"><name pos:start="91:77" pos:end="91:79">map</name><operator pos:start="91:80" pos:end="91:81">-&gt;</operator><name pos:start="91:82" pos:end="91:92">channel_idx</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="93:17" pos:end="97:60">else<block type="pseudo" pos:start="95:21" pos:end="97:60"><block_content pos:start="95:21" pos:end="97:60">

                    <expr_stmt pos:start="95:21" pos:end="97:60"><expr pos:start="95:21" pos:end="97:59"><call pos:start="95:21" pos:end="97:59"><name pos:start="95:21" pos:end="95:26">av_log</name><argument_list pos:start="95:27" pos:end="97:59">(<argument pos:start="95:28" pos:end="95:31"><expr pos:start="95:28" pos:end="95:31"><name pos:start="95:28" pos:end="95:31">NULL</name></expr></argument>, <argument pos:start="95:34" pos:end="95:45"><expr pos:start="95:34" pos:end="95:45"><name pos:start="95:34" pos:end="95:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="95:48" pos:end="95:95"><expr pos:start="95:48" pos:end="95:95"><literal type="string" pos:start="95:48" pos:end="95:95">"Max channel mapping for output %d.%d reached\n"</literal></expr></argument>,

                           <argument pos:start="97:28" pos:end="97:42"><expr pos:start="97:28" pos:end="97:42"><name pos:start="97:28" pos:end="97:42"><name pos:start="97:28" pos:end="97:30">ost</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:42">file_index</name></name></expr></argument>, <argument pos:start="97:45" pos:end="97:58"><expr pos:start="97:45" pos:end="97:58"><name pos:start="97:45" pos:end="97:58"><name pos:start="97:45" pos:end="97:47">ost</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:51">st</name><operator pos:start="97:52" pos:end="97:53">-&gt;</operator><name pos:start="97:54" pos:end="97:58">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="109:65"><if pos:start="107:5" pos:end="109:65">if <condition pos:start="107:8" pos:end="107:25">(<expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:11">ost</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:24">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:65"><block_content pos:start="109:9" pos:end="109:65">

        <expr_stmt pos:start="109:9" pos:end="109:65"><expr pos:start="109:9" pos:end="109:64"><call pos:start="109:9" pos:end="109:64"><name pos:start="109:9" pos:end="109:32">check_streamcopy_filters</name><argument_list pos:start="109:33" pos:end="109:64">(<argument pos:start="109:34" pos:end="109:34"><expr pos:start="109:34" pos:end="109:34"><name pos:start="109:34" pos:end="109:34">o</name></expr></argument>, <argument pos:start="109:37" pos:end="109:38"><expr pos:start="109:37" pos:end="109:38"><name pos:start="109:37" pos:end="109:38">oc</name></expr></argument>, <argument pos:start="109:41" pos:end="109:43"><expr pos:start="109:41" pos:end="109:43"><name pos:start="109:41" pos:end="109:43">ost</name></expr></argument>, <argument pos:start="109:46" pos:end="109:63"><expr pos:start="109:46" pos:end="109:63"><name pos:start="109:46" pos:end="109:63">AVMEDIA_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="113:5" pos:end="113:15">return <expr pos:start="113:12" pos:end="113:14"><name pos:start="113:12" pos:end="113:14">ost</name></expr>;</return>

</block_content>}</block></function>
</unit>
