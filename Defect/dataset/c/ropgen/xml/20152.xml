<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20152.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">tftp_send_oack</name><parameter_list pos:start="1:26" pos:end="5:49">(<parameter pos:start="1:27" pos:end="1:50"><decl pos:start="1:27" pos:end="1:50"><type pos:start="1:27" pos:end="1:50"><name pos:start="1:27" pos:end="1:45"><name pos:start="1:27" pos:end="1:32">struct</name> <name pos:start="1:34" pos:end="1:45">tftp_session</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">spt</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:44"><decl pos:start="3:27" pos:end="3:44"><type pos:start="3:27" pos:end="3:42"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:36">char</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:44"><name pos:start="3:39" pos:end="3:42">keys</name><index pos:start="3:43" pos:end="3:44">[]</index></name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:61"><name pos:start="3:47" pos:end="3:54">uint32_t</name></type> <name pos:start="3:56" pos:end="3:63"><name pos:start="3:56" pos:end="3:61">values</name><index pos:start="3:62" pos:end="3:63">[]</index></name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:71"><decl pos:start="3:66" pos:end="3:71"><type pos:start="3:66" pos:end="3:71"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:71">nb</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:48"><decl pos:start="5:27" pos:end="5:48"><type pos:start="5:27" pos:end="5:48"><name pos:start="5:27" pos:end="5:39"><name pos:start="5:27" pos:end="5:32">struct</name> <name pos:start="5:34" pos:end="5:39">tftp_t</name></name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:48">recv_tp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="79:1">{<block_content pos:start="9:5" pos:end="77:13">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:22">sockaddr_in</name></name></type> <name pos:start="9:24" pos:end="9:28">saddr</name></decl>, <decl pos:start="9:31" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:22"/><name pos:start="9:31" pos:end="9:35">daddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:15">mbuf</name></name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:17">tftp_t</name></name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">tp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:16"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">n</name> <init pos:start="15:14" pos:end="15:16">= <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:5">m</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:13">m_get</name><argument_list pos:start="19:14" pos:end="19:25">(<argument pos:start="19:15" pos:end="19:24"><expr pos:start="19:15" pos:end="19:24"><name pos:start="19:15" pos:end="19:24"><name pos:start="19:15" pos:end="19:17">spt</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:24">slirp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:11">(<expr pos:start="23:9" pos:end="23:10"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:10">m</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

	<return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:35">(<argument pos:start="29:12" pos:end="29:20"><expr pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:12">m</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:20">m_data</name></name></expr></argument>, <argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr></argument>, <argument pos:start="29:26" pos:end="29:34"><expr pos:start="29:26" pos:end="29:34"><name pos:start="29:26" pos:end="29:34"><name pos:start="29:26" pos:end="29:26">m</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:34">m_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:5">m</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:13">m_data</name></name> <operator pos:start="33:15" pos:end="33:16">+=</operator> <name pos:start="33:18" pos:end="33:30">IF_MAXLINKHDR</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:6">tp</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:14">void</name> <operator pos:start="35:16" pos:end="35:16">*</operator><operator pos:start="35:17" pos:end="35:17">)</operator><name pos:start="35:18" pos:end="35:26"><name pos:start="35:18" pos:end="35:18">m</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:26">m_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">m</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">m_data</name></name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <sizeof pos:start="37:18" pos:end="37:40">sizeof<argument_list pos:start="37:24" pos:end="37:40">(<argument pos:start="37:25" pos:end="37:39"><expr pos:start="37:25" pos:end="37:39">struct <name pos:start="37:32" pos:end="37:39">udpiphdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:6">tp</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:13">tp_op</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:21">htons</name><argument_list pos:start="41:22" pos:end="41:32">(<argument pos:start="41:23" pos:end="41:31"><expr pos:start="41:23" pos:end="41:31"><name pos:start="41:23" pos:end="41:31">TFTP_OACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="53:5">for <control pos:start="43:9" pos:end="43:28">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:23"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:22">nb</name></expr>;</condition> <incr pos:start="43:25" pos:end="43:27"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:25">i</name><operator pos:start="43:26" pos:end="43:27">++</operator></expr></incr>)</control> <block pos:start="43:30" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:37">

        <expr_stmt pos:start="45:9" pos:end="47:35"><expr pos:start="45:9" pos:end="47:34"><name pos:start="45:9" pos:end="45:9">n</name> <operator pos:start="45:11" pos:end="45:12">+=</operator> <call pos:start="45:14" pos:end="47:30"><name pos:start="45:14" pos:end="45:21">snprintf</name><argument_list pos:start="45:22" pos:end="47:30">(<argument pos:start="45:23" pos:end="45:38"><expr pos:start="45:23" pos:end="45:38"><name pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:24">tp</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:27">x</name><operator pos:start="45:28" pos:end="45:28">.</operator><name pos:start="45:29" pos:end="45:34">tp_buf</name></name> <operator pos:start="45:36" pos:end="45:36">+</operator> <name pos:start="45:38" pos:end="45:38">n</name></expr></argument>, <argument pos:start="45:41" pos:end="45:64"><expr pos:start="45:41" pos:end="45:64"><sizeof pos:start="45:41" pos:end="45:60">sizeof<argument_list pos:start="45:47" pos:end="45:60">(<argument pos:start="45:48" pos:end="45:59"><expr pos:start="45:48" pos:end="45:59"><name pos:start="45:48" pos:end="45:59"><name pos:start="45:48" pos:end="45:49">tp</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:52">x</name><operator pos:start="45:53" pos:end="45:53">.</operator><name pos:start="45:54" pos:end="45:59">tp_buf</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="45:62" pos:end="45:62">-</operator> <name pos:start="45:64" pos:end="45:64">n</name></expr></argument>, <argument pos:start="45:67" pos:end="45:70"><expr pos:start="45:67" pos:end="45:70"><literal type="string" pos:start="45:67" pos:end="45:70">"%s"</literal></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:29"><expr pos:start="47:23" pos:end="47:29"><name pos:start="47:23" pos:end="47:29"><name pos:start="47:23" pos:end="47:26">keys</name><index pos:start="47:27" pos:end="47:29">[<expr pos:start="47:28" pos:end="47:28"><name pos:start="47:28" pos:end="47:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="47:32" pos:end="47:32">+</operator> <literal type="number" pos:start="47:34" pos:end="47:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:37"><expr pos:start="49:9" pos:end="51:36"><name pos:start="49:9" pos:end="49:9">n</name> <operator pos:start="49:11" pos:end="49:12">+=</operator> <call pos:start="49:14" pos:end="51:32"><name pos:start="49:14" pos:end="49:21">snprintf</name><argument_list pos:start="49:22" pos:end="51:32">(<argument pos:start="49:23" pos:end="49:38"><expr pos:start="49:23" pos:end="49:38"><name pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:24">tp</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:27">x</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:34">tp_buf</name></name> <operator pos:start="49:36" pos:end="49:36">+</operator> <name pos:start="49:38" pos:end="49:38">n</name></expr></argument>, <argument pos:start="49:41" pos:end="49:64"><expr pos:start="49:41" pos:end="49:64"><sizeof pos:start="49:41" pos:end="49:60">sizeof<argument_list pos:start="49:47" pos:end="49:60">(<argument pos:start="49:48" pos:end="49:59"><expr pos:start="49:48" pos:end="49:59"><name pos:start="49:48" pos:end="49:59"><name pos:start="49:48" pos:end="49:49">tp</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:52">x</name><operator pos:start="49:53" pos:end="49:53">.</operator><name pos:start="49:54" pos:end="49:59">tp_buf</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="49:62" pos:end="49:62">-</operator> <name pos:start="49:64" pos:end="49:64">n</name></expr></argument>, <argument pos:start="49:67" pos:end="49:70"><expr pos:start="49:67" pos:end="49:70"><literal type="string" pos:start="49:67" pos:end="49:70">"%u"</literal></expr></argument>,

                      <argument pos:start="51:23" pos:end="51:31"><expr pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:28">values</name><index pos:start="51:29" pos:end="51:31">[<expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="51:34" pos:end="51:34">+</operator> <literal type="number" pos:start="51:36" pos:end="51:36">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:9">saddr</name><operator pos:start="57:10" pos:end="57:10">.</operator><name pos:start="57:11" pos:end="57:18">sin_addr</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:39"><name pos:start="57:22" pos:end="57:28">recv_tp</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:32">ip</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:39">ip_dst</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:9">saddr</name><operator pos:start="59:10" pos:end="59:10">.</operator><name pos:start="59:11" pos:end="59:18">sin_port</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:42"><name pos:start="59:22" pos:end="59:28">recv_tp</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:33">udp</name><operator pos:start="59:34" pos:end="59:34">.</operator><name pos:start="59:35" pos:end="59:42">uh_dport</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:9">daddr</name><operator pos:start="63:10" pos:end="63:10">.</operator><name pos:start="63:11" pos:end="63:18">sin_addr</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:35"><name pos:start="63:22" pos:end="63:24">spt</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:35">client_ip</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:38"><expr pos:start="65:5" pos:end="65:37"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:9">daddr</name><operator pos:start="65:10" pos:end="65:10">.</operator><name pos:start="65:11" pos:end="65:18">sin_port</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:37"><name pos:start="65:22" pos:end="65:24">spt</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:37">client_port</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="71:50"><expr pos:start="69:5" pos:end="71:49"><name pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:5">m</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:12">m_len</name></name> <operator pos:start="69:14" pos:end="69:14">=</operator> <sizeof pos:start="69:16" pos:end="69:36">sizeof<argument_list pos:start="69:22" pos:end="69:36">(<argument pos:start="69:23" pos:end="69:35"><expr pos:start="69:23" pos:end="69:35">struct <name pos:start="69:30" pos:end="69:35">tftp_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="69:38" pos:end="69:38">-</operator> <literal type="number" pos:start="69:40" pos:end="69:44">514</literal> <operator pos:start="69:44" pos:end="69:44">+</operator> <name pos:start="69:46" pos:end="69:46">n</name> <operator pos:start="69:48" pos:end="69:48">-</operator>

        <sizeof pos:start="71:9" pos:end="71:25">sizeof<argument_list pos:start="71:15" pos:end="71:25">(<argument pos:start="71:16" pos:end="71:24"><expr pos:start="71:16" pos:end="71:24">struct <name pos:start="71:23" pos:end="71:24">ip</name></expr></argument>)</argument_list></sizeof> <operator pos:start="71:27" pos:end="71:27">-</operator> <sizeof pos:start="71:29" pos:end="71:49">sizeof<argument_list pos:start="71:35" pos:end="71:49">(<argument pos:start="71:36" pos:end="71:48"><expr pos:start="71:36" pos:end="71:48">struct <name pos:start="71:43" pos:end="71:48">udphdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:57"><expr pos:start="73:5" pos:end="73:56"><call pos:start="73:5" pos:end="73:56"><name pos:start="73:5" pos:end="73:15">udp_output2</name><argument_list pos:start="73:16" pos:end="73:56">(<argument pos:start="73:17" pos:end="73:20"><expr pos:start="73:17" pos:end="73:20"><name pos:start="73:17" pos:end="73:20">NULL</name></expr></argument>, <argument pos:start="73:23" pos:end="73:23"><expr pos:start="73:23" pos:end="73:23"><name pos:start="73:23" pos:end="73:23">m</name></expr></argument>, <argument pos:start="73:26" pos:end="73:31"><expr pos:start="73:26" pos:end="73:31"><operator pos:start="73:26" pos:end="73:26">&amp;</operator><name pos:start="73:27" pos:end="73:31">saddr</name></expr></argument>, <argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:39">daddr</name></expr></argument>, <argument pos:start="73:42" pos:end="73:55"><expr pos:start="73:42" pos:end="73:55"><name pos:start="73:42" pos:end="73:55">IPTOS_LOWDELAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
