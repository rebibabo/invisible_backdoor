<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9599.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">pci_add_option_rom</name><parameter_list pos:start="1:30" pos:end="1:67">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:39">PCIDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">pdev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:51">bool</name></type> <name pos:start="1:53" pos:end="1:66">is_default_rom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:13">name</name><index pos:start="11:14" pos:end="11:17">[<expr pos:start="11:15" pos:end="11:16"><literal type="number" pos:start="11:15" pos:end="11:16">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:13">pdev</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">romfile</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:14">strlen</name><argument_list pos:start="19:15" pos:end="19:29">(<argument pos:start="19:16" pos:end="19:28"><expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:19">pdev</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:28">romfile</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:31" pos:end="19:32">==</operator> <literal type="number" pos:start="19:34" pos:end="19:34">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="49:5"><if pos:start="25:5" pos:end="49:5">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:13">pdev</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">rom_bar</name></name></expr>)</condition> <block pos:start="25:25" pos:end="49:5">{<block_content pos:start="35:9" pos:end="47:17">

        <comment type="block" pos:start="27:9" pos:end="33:11">/*

         * Load rom via fw_cfg instead of creating a rom bar,

         * for 0.11 compatibility.

         */</comment>

        <decl_stmt pos:start="35:9" pos:end="35:66"><decl pos:start="35:9" pos:end="35:65"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:17">class</name> <init pos:start="35:19" pos:end="35:65">= <expr pos:start="35:21" pos:end="35:65"><call pos:start="35:21" pos:end="35:65"><name pos:start="35:21" pos:end="35:32">pci_get_word</name><argument_list pos:start="35:33" pos:end="35:65">(<argument pos:start="35:34" pos:end="35:64"><expr pos:start="35:34" pos:end="35:64"><name pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:37">pdev</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:45">config</name></name> <operator pos:start="35:47" pos:end="35:47">+</operator> <name pos:start="35:49" pos:end="35:64">PCI_CLASS_DEVICE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:28">(<expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:17">class</name> <operator pos:start="37:19" pos:end="37:20">==</operator> <literal type="number" pos:start="37:22" pos:end="37:27">0x0300</literal></expr>)</condition> <block pos:start="37:30" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:39">

            <expr_stmt pos:start="39:13" pos:end="39:39"><expr pos:start="39:13" pos:end="39:38"><call pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:23">rom_add_vga</name><argument_list pos:start="39:24" pos:end="39:38">(<argument pos:start="39:25" pos:end="39:37"><expr pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:28">pdev</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:37">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="45:9">else <block pos:start="41:16" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:46">

            <expr_stmt pos:start="43:13" pos:end="43:46"><expr pos:start="43:13" pos:end="43:45"><call pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:26">rom_add_option</name><argument_list pos:start="43:27" pos:end="43:45">(<argument pos:start="43:28" pos:end="43:40"><expr pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:31">pdev</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:40">romfile</name></name></expr></argument>, <argument pos:start="43:43" pos:end="43:44"><expr pos:start="43:43" pos:end="43:44"><operator pos:start="43:43" pos:end="43:43">-</operator><literal type="number" pos:start="43:44" pos:end="43:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:62"><expr pos:start="53:5" pos:end="53:61"><name pos:start="53:5" pos:end="53:8">path</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:61"><name pos:start="53:12" pos:end="53:25">qemu_find_file</name><argument_list pos:start="53:26" pos:end="53:61">(<argument pos:start="53:27" pos:end="53:45"><expr pos:start="53:27" pos:end="53:45"><name pos:start="53:27" pos:end="53:45">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="53:48" pos:end="53:60"><expr pos:start="53:48" pos:end="53:60"><name pos:start="53:48" pos:end="53:60"><name pos:start="53:48" pos:end="53:51">pdev</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:60">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:21">(<expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:12">path</name> <operator pos:start="55:14" pos:end="55:15">==</operator> <name pos:start="55:17" pos:end="55:20">NULL</name></expr>)</condition> <block pos:start="55:23" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:42">

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:12">path</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:41"><name pos:start="57:16" pos:end="57:26">qemu_strdup</name><argument_list pos:start="57:27" pos:end="57:41">(<argument pos:start="57:28" pos:end="57:40"><expr pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:31">pdev</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:40">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:8">size</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <call pos:start="63:12" pos:end="63:31"><name pos:start="63:12" pos:end="63:25">get_image_size</name><argument_list pos:start="63:26" pos:end="63:31">(<argument pos:start="63:27" pos:end="63:30"><expr pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:30">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="74:5"><if pos:start="65:5" pos:end="74:5">if <condition pos:start="65:8" pos:end="65:17">(<expr pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:12">size</name> <operator pos:start="65:14" pos:end="65:14">&lt;</operator> <literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>)</condition> <block pos:start="65:19" pos:end="74:5">{<block_content pos:start="67:9" pos:end="72:18">

        <expr_stmt pos:start="67:9" pos:end="69:50"><expr pos:start="67:9" pos:end="69:49"><call pos:start="67:9" pos:end="69:49"><name pos:start="67:9" pos:end="67:20">error_report</name><argument_list pos:start="67:21" pos:end="69:49">(<argument pos:start="67:22" pos:end="67:56"><expr pos:start="67:22" pos:end="67:56"><literal type="string" pos:start="67:22" pos:end="67:56">"%s: failed to find romfile \"%s\""</literal></expr></argument>,

                     <argument pos:start="69:22" pos:end="69:33"><expr pos:start="69:22" pos:end="69:33"><name pos:start="69:22" pos:end="69:33">__FUNCTION__</name></expr></argument>, <argument pos:start="69:36" pos:end="69:48"><expr pos:start="69:36" pos:end="69:48"><name pos:start="69:36" pos:end="69:48"><name pos:start="69:36" pos:end="69:39">pdev</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:48">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="72:9" pos:end="72:18">return <expr pos:start="72:16" pos:end="72:17"><operator pos:start="72:16" pos:end="72:16">-</operator><literal type="number" pos:start="72:17" pos:end="72:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="76:5" pos:end="80:5"><if pos:start="76:5" pos:end="80:5">if <condition pos:start="76:8" pos:end="76:26">(<expr pos:start="76:9" pos:end="76:25"><name pos:start="76:9" pos:end="76:12">size</name> <operator pos:start="76:14" pos:end="76:14">&amp;</operator> <operator pos:start="76:16" pos:end="76:16">(</operator><name pos:start="76:17" pos:end="76:20">size</name> <operator pos:start="76:22" pos:end="76:22">-</operator> <literal type="number" pos:start="76:24" pos:end="76:24">1</literal><operator pos:start="76:25" pos:end="76:25">)</operator></expr>)</condition> <block pos:start="76:28" pos:end="80:5">{<block_content pos:start="78:9" pos:end="78:35">

        <expr_stmt pos:start="78:9" pos:end="78:35"><expr pos:start="78:9" pos:end="78:34"><name pos:start="78:9" pos:end="78:12">size</name> <operator pos:start="78:14" pos:end="78:14">=</operator> <literal type="number" pos:start="78:16" pos:end="78:16">1</literal> <operator pos:start="78:18" pos:end="78:19">&lt;&lt;</operator> <call pos:start="78:21" pos:end="78:34"><name pos:start="78:21" pos:end="78:28">qemu_fls</name><argument_list pos:start="78:29" pos:end="78:34">(<argument pos:start="78:30" pos:end="78:33"><expr pos:start="78:30" pos:end="78:33"><name pos:start="78:30" pos:end="78:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="84:5" pos:end="90:70"><if pos:start="84:5" pos:end="86:76">if <condition pos:start="84:8" pos:end="84:30">(<expr pos:start="84:9" pos:end="84:29"><name pos:start="84:9" pos:end="84:29"><name pos:start="84:9" pos:end="84:12">pdev</name><operator pos:start="84:13" pos:end="84:14">-&gt;</operator><name pos:start="84:15" pos:end="84:18">qdev</name><operator pos:start="84:19" pos:end="84:19">.</operator><name pos:start="84:20" pos:end="84:23">info</name><operator pos:start="84:24" pos:end="84:25">-&gt;</operator><name pos:start="84:26" pos:end="84:29">vmsd</name></name></expr>)</condition><block type="pseudo" pos:start="86:9" pos:end="86:76"><block_content pos:start="86:9" pos:end="86:76">

        <expr_stmt pos:start="86:9" pos:end="86:76"><expr pos:start="86:9" pos:end="86:75"><call pos:start="86:9" pos:end="86:75"><name pos:start="86:9" pos:end="86:16">snprintf</name><argument_list pos:start="86:17" pos:end="86:75">(<argument pos:start="86:18" pos:end="86:21"><expr pos:start="86:18" pos:end="86:21"><name pos:start="86:18" pos:end="86:21">name</name></expr></argument>, <argument pos:start="86:24" pos:end="86:35"><expr pos:start="86:24" pos:end="86:35"><sizeof pos:start="86:24" pos:end="86:35">sizeof<argument_list pos:start="86:30" pos:end="86:35">(<argument pos:start="86:31" pos:end="86:34"><expr pos:start="86:31" pos:end="86:34"><name pos:start="86:31" pos:end="86:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="86:38" pos:end="86:45"><expr pos:start="86:38" pos:end="86:45"><literal type="string" pos:start="86:38" pos:end="86:45">"%s.rom"</literal></expr></argument>, <argument pos:start="86:48" pos:end="86:74"><expr pos:start="86:48" pos:end="86:74"><name pos:start="86:48" pos:end="86:74"><name pos:start="86:48" pos:end="86:51">pdev</name><operator pos:start="86:52" pos:end="86:53">-&gt;</operator><name pos:start="86:54" pos:end="86:57">qdev</name><operator pos:start="86:58" pos:end="86:58">.</operator><name pos:start="86:59" pos:end="86:62">info</name><operator pos:start="86:63" pos:end="86:64">-&gt;</operator><name pos:start="86:65" pos:end="86:68">vmsd</name><operator pos:start="86:69" pos:end="86:70">-&gt;</operator><name pos:start="86:71" pos:end="86:74">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="88:5" pos:end="90:70">else<block type="pseudo" pos:start="90:9" pos:end="90:70"><block_content pos:start="90:9" pos:end="90:70">

        <expr_stmt pos:start="90:9" pos:end="90:70"><expr pos:start="90:9" pos:end="90:69"><call pos:start="90:9" pos:end="90:69"><name pos:start="90:9" pos:end="90:16">snprintf</name><argument_list pos:start="90:17" pos:end="90:69">(<argument pos:start="90:18" pos:end="90:21"><expr pos:start="90:18" pos:end="90:21"><name pos:start="90:18" pos:end="90:21">name</name></expr></argument>, <argument pos:start="90:24" pos:end="90:35"><expr pos:start="90:24" pos:end="90:35"><sizeof pos:start="90:24" pos:end="90:35">sizeof<argument_list pos:start="90:30" pos:end="90:35">(<argument pos:start="90:31" pos:end="90:34"><expr pos:start="90:31" pos:end="90:34"><name pos:start="90:31" pos:end="90:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="90:38" pos:end="90:45"><expr pos:start="90:38" pos:end="90:45"><literal type="string" pos:start="90:38" pos:end="90:45">"%s.rom"</literal></expr></argument>, <argument pos:start="90:48" pos:end="90:68"><expr pos:start="90:48" pos:end="90:68"><name pos:start="90:48" pos:end="90:68"><name pos:start="90:48" pos:end="90:51">pdev</name><operator pos:start="90:52" pos:end="90:53">-&gt;</operator><name pos:start="90:54" pos:end="90:57">qdev</name><operator pos:start="90:58" pos:end="90:58">.</operator><name pos:start="90:59" pos:end="90:62">info</name><operator pos:start="90:63" pos:end="90:64">-&gt;</operator><name pos:start="90:65" pos:end="90:68">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:63"><expr pos:start="92:5" pos:end="92:62"><name pos:start="92:5" pos:end="92:20"><name pos:start="92:5" pos:end="92:8">pdev</name><operator pos:start="92:9" pos:end="92:10">-&gt;</operator><name pos:start="92:11" pos:end="92:20">rom_offset</name></name> <operator pos:start="92:22" pos:end="92:22">=</operator> <call pos:start="92:24" pos:end="92:62"><name pos:start="92:24" pos:end="92:37">qemu_ram_alloc</name><argument_list pos:start="92:38" pos:end="92:62">(<argument pos:start="92:39" pos:end="92:49"><expr pos:start="92:39" pos:end="92:49"><operator pos:start="92:39" pos:end="92:39">&amp;</operator><name pos:start="92:40" pos:end="92:49"><name pos:start="92:40" pos:end="92:43">pdev</name><operator pos:start="92:44" pos:end="92:45">-&gt;</operator><name pos:start="92:46" pos:end="92:49">qdev</name></name></expr></argument>, <argument pos:start="92:52" pos:end="92:55"><expr pos:start="92:52" pos:end="92:55"><name pos:start="92:52" pos:end="92:55">name</name></expr></argument>, <argument pos:start="92:58" pos:end="92:61"><expr pos:start="92:58" pos:end="92:61"><name pos:start="92:58" pos:end="92:61">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="96:5" pos:end="96:45"><expr pos:start="96:5" pos:end="96:44"><name pos:start="96:5" pos:end="96:7">ptr</name> <operator pos:start="96:9" pos:end="96:9">=</operator> <call pos:start="96:11" pos:end="96:44"><name pos:start="96:11" pos:end="96:26">qemu_get_ram_ptr</name><argument_list pos:start="96:27" pos:end="96:44">(<argument pos:start="96:28" pos:end="96:43"><expr pos:start="96:28" pos:end="96:43"><name pos:start="96:28" pos:end="96:43"><name pos:start="96:28" pos:end="96:31">pdev</name><operator pos:start="96:32" pos:end="96:33">-&gt;</operator><name pos:start="96:34" pos:end="96:43">rom_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="98:5" pos:end="98:26"><expr pos:start="98:5" pos:end="98:25"><call pos:start="98:5" pos:end="98:25"><name pos:start="98:5" pos:end="98:14">load_image</name><argument_list pos:start="98:15" pos:end="98:25">(<argument pos:start="98:16" pos:end="98:19"><expr pos:start="98:16" pos:end="98:19"><name pos:start="98:16" pos:end="98:19">path</name></expr></argument>, <argument pos:start="98:22" pos:end="98:24"><expr pos:start="98:22" pos:end="98:24"><name pos:start="98:22" pos:end="98:24">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:23">(<expr pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:22">is_default_rom</name></expr>)</condition> <block pos:start="103:25" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:39">

        <comment type="block" pos:start="105:9" pos:end="105:70">/* Only the default rom images will be patched (if needed). */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:39"><expr pos:start="107:9" pos:end="107:38"><call pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:21">pci_patch_ids</name><argument_list pos:start="107:22" pos:end="107:38">(<argument pos:start="107:23" pos:end="107:26"><expr pos:start="107:23" pos:end="107:26"><name pos:start="107:23" pos:end="107:26">pdev</name></expr></argument>, <argument pos:start="107:29" pos:end="107:31"><expr pos:start="107:29" pos:end="107:31"><name pos:start="107:29" pos:end="107:31">ptr</name></expr></argument>, <argument pos:start="107:34" pos:end="107:37"><expr pos:start="107:34" pos:end="107:37"><name pos:start="107:34" pos:end="107:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="115:44"><expr pos:start="113:5" pos:end="115:43"><call pos:start="113:5" pos:end="115:43"><name pos:start="113:5" pos:end="113:20">pci_register_bar</name><argument_list pos:start="113:21" pos:end="115:43">(<argument pos:start="113:22" pos:end="113:25"><expr pos:start="113:22" pos:end="113:25"><name pos:start="113:22" pos:end="113:25">pdev</name></expr></argument>, <argument pos:start="113:28" pos:end="113:39"><expr pos:start="113:28" pos:end="113:39"><name pos:start="113:28" pos:end="113:39">PCI_ROM_SLOT</name></expr></argument>, <argument pos:start="113:42" pos:end="113:45"><expr pos:start="113:42" pos:end="113:45"><name pos:start="113:42" pos:end="113:45">size</name></expr></argument>,

                     <argument pos:start="115:22" pos:end="115:22"><expr pos:start="115:22" pos:end="115:22"><literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr></argument>, <argument pos:start="115:25" pos:end="115:42"><expr pos:start="115:25" pos:end="115:42"><name pos:start="115:25" pos:end="115:42">pci_map_option_rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
