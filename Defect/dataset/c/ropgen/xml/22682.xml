<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22682.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">curl_open</name><parameter_list pos:start="1:21" pos:end="1:69">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="173:1">{<block_content pos:start="5:5" pos:end="171:19">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVCURLState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">CURLState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">state</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">double</name></type> <name pos:start="15:12" pos:end="15:12">d</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:14"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:14">int</name></type> <name pos:start="19:16" pos:end="19:21">inited</name> <init pos:start="19:23" pos:end="19:25">= <expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:13">flags</name> <operator pos:start="23:15" pos:end="23:15">&amp;</operator> <name pos:start="23:17" pos:end="23:27">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="23:30" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:22">

        <expr_stmt pos:start="25:9" pos:end="27:67"><expr pos:start="25:9" pos:end="27:66"><call pos:start="25:9" pos:end="27:66"><name pos:start="25:9" pos:end="25:21">qerror_report</name><argument_list pos:start="25:22" pos:end="27:66">(<argument pos:start="25:23" pos:end="25:47"><expr pos:start="25:23" pos:end="25:47"><name pos:start="25:23" pos:end="25:47">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>,

                      <argument pos:start="27:23" pos:end="27:65"><expr pos:start="27:23" pos:end="27:65"><literal type="string" pos:start="27:23" pos:end="27:65">"curl block device does not support writes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:22">return <expr pos:start="29:16" pos:end="29:21"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:21">EROFS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:50"><expr pos:start="35:5" pos:end="35:49"><name pos:start="35:5" pos:end="35:8">opts</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:49"><name pos:start="35:12" pos:end="35:34">qemu_opts_create_nofail</name><argument_list pos:start="35:35" pos:end="35:49">(<argument pos:start="35:36" pos:end="35:48"><expr pos:start="35:36" pos:end="35:48"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:48">runtime_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><call pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:26">qemu_opts_absorb_qdict</name><argument_list pos:start="37:27" pos:end="37:53">(<argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">opts</name></expr></argument>, <argument pos:start="37:34" pos:end="37:40"><expr pos:start="37:34" pos:end="37:40"><name pos:start="37:34" pos:end="37:40">options</name></expr></argument>, <argument pos:start="37:43" pos:end="37:52"><expr pos:start="37:43" pos:end="37:52"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:33">(<expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:20">error_is_set</name><argument_list pos:start="39:21" pos:end="39:32">(<argument pos:start="39:22" pos:end="39:31"><expr pos:start="39:22" pos:end="39:31"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:31">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:35" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:25">

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><call pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:25">qerror_report_err</name><argument_list pos:start="41:26" pos:end="41:36">(<argument pos:start="41:27" pos:end="41:35"><expr pos:start="41:27" pos:end="41:35"><name pos:start="41:27" pos:end="41:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:18">error_free</name><argument_list pos:start="43:19" pos:end="43:29">(<argument pos:start="43:20" pos:end="43:28"><expr pos:start="43:20" pos:end="43:28"><name pos:start="43:20" pos:end="43:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:25">goto <name pos:start="45:14" pos:end="45:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:78"><expr pos:start="51:5" pos:end="51:77"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:21">readahead_size</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <call pos:start="51:25" pos:end="51:77"><name pos:start="51:25" pos:end="51:41">qemu_opt_get_size</name><argument_list pos:start="51:42" pos:end="51:77">(<argument pos:start="51:43" pos:end="51:46"><expr pos:start="51:43" pos:end="51:46"><name pos:start="51:43" pos:end="51:46">opts</name></expr></argument>, <argument pos:start="51:49" pos:end="51:59"><expr pos:start="51:49" pos:end="51:59"><literal type="string" pos:start="51:49" pos:end="51:59">"readahead"</literal></expr></argument>, <argument pos:start="51:62" pos:end="51:76"><expr pos:start="51:62" pos:end="51:76"><name pos:start="51:62" pos:end="51:76">READ_AHEAD_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:41">(<expr pos:start="53:9" pos:end="53:40"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:26"><name pos:start="53:10" pos:end="53:10">s</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:26">readahead_size</name></name> <operator pos:start="53:28" pos:end="53:28">&amp;</operator> <literal type="number" pos:start="53:30" pos:end="53:34">0x1ff</literal><operator pos:start="53:35" pos:end="53:35">)</operator> <operator pos:start="53:37" pos:end="53:38">!=</operator> <literal type="number" pos:start="53:40" pos:end="53:40">0</literal></expr>)</condition> <block pos:start="53:43" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:25">

        <expr_stmt pos:start="55:9" pos:end="57:35"><expr pos:start="55:9" pos:end="57:34"><call pos:start="55:9" pos:end="57:34"><name pos:start="55:9" pos:end="55:15">fprintf</name><argument_list pos:start="55:16" pos:end="57:34">(<argument pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:22">stderr</name></expr></argument>, <argument pos:start="55:25" pos:end="55:76"><expr pos:start="55:25" pos:end="55:76"><literal type="string" pos:start="55:25" pos:end="55:76">"HTTP_READAHEAD_SIZE %zd is not a multiple of 512\n"</literal></expr></argument>,

                <argument pos:start="57:17" pos:end="57:33"><expr pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:33">readahead_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:25">goto <name pos:start="59:14" pos:end="59:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:8">file</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <call pos:start="65:12" pos:end="65:36"><name pos:start="65:12" pos:end="65:23">qemu_opt_get</name><argument_list pos:start="65:24" pos:end="65:36">(<argument pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">opts</name></expr></argument>, <argument pos:start="65:31" pos:end="65:35"><expr pos:start="65:31" pos:end="65:35"><literal type="string" pos:start="65:31" pos:end="65:35">"url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:21">(<expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:12">file</name> <operator pos:start="67:14" pos:end="67:15">==</operator> <name pos:start="67:17" pos:end="67:20">NULL</name></expr>)</condition> <block pos:start="67:23" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:25">

        <expr_stmt pos:start="69:9" pos:end="71:41"><expr pos:start="69:9" pos:end="71:40"><call pos:start="69:9" pos:end="71:40"><name pos:start="69:9" pos:end="69:21">qerror_report</name><argument_list pos:start="69:22" pos:end="71:40">(<argument pos:start="69:23" pos:end="69:47"><expr pos:start="69:23" pos:end="69:47"><name pos:start="69:23" pos:end="69:47">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>, <argument pos:start="69:50" pos:end="71:39"><expr pos:start="69:50" pos:end="71:39"><literal type="string" pos:start="69:50" pos:end="69:78">"curl block driver requires "</literal>

                      <literal type="string" pos:start="71:23" pos:end="71:39">"an 'url' option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:25">goto <name pos:start="73:14" pos:end="73:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:16">(<expr pos:start="79:9" pos:end="79:15"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:15">inited</name></expr>)</condition> <block pos:start="79:18" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:19">

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><call pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:24">curl_global_init</name><argument_list pos:start="81:25" pos:end="81:41">(<argument pos:start="81:26" pos:end="81:40"><expr pos:start="81:26" pos:end="81:40"><name pos:start="81:26" pos:end="81:40">CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:19"><expr pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:14">inited</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:40"><expr pos:start="89:5" pos:end="89:39"><call pos:start="89:5" pos:end="89:39"><name pos:start="89:5" pos:end="89:11">DPRINTF</name><argument_list pos:start="89:12" pos:end="89:39">(<argument pos:start="89:13" pos:end="89:32"><expr pos:start="89:13" pos:end="89:32"><literal type="string" pos:start="89:13" pos:end="89:32">"CURL: Opening %s\n"</literal></expr></argument>, <argument pos:start="89:35" pos:end="89:38"><expr pos:start="89:35" pos:end="89:38"><name pos:start="89:35" pos:end="89:38">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:10"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:10">url</name></name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:27"><name pos:start="91:14" pos:end="91:21">g_strdup</name><argument_list pos:start="91:22" pos:end="91:27">(<argument pos:start="91:23" pos:end="91:26"><expr pos:start="91:23" pos:end="91:26"><name pos:start="91:23" pos:end="91:26">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:31"><expr pos:start="93:5" pos:end="93:30"><name pos:start="93:5" pos:end="93:9">state</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <call pos:start="93:13" pos:end="93:30"><name pos:start="93:13" pos:end="93:27">curl_init_state</name><argument_list pos:start="93:28" pos:end="93:30">(<argument pos:start="93:29" pos:end="93:29"><expr pos:start="93:29" pos:end="93:29"><name pos:start="93:29" pos:end="93:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="97:25"><if pos:start="95:5" pos:end="97:25">if <condition pos:start="95:8" pos:end="95:15">(<expr pos:start="95:9" pos:end="95:14"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:14">state</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:25"><block_content pos:start="97:9" pos:end="97:25">

        <goto pos:start="97:9" pos:end="97:25">goto <name pos:start="97:14" pos:end="97:24">out_noclean</name>;</goto></block_content></block></if></if_stmt>



    <comment type="line" pos:start="101:5" pos:end="101:20">// Get file size</comment>



    <expr_stmt pos:start="105:5" pos:end="105:53"><expr pos:start="105:5" pos:end="105:52"><call pos:start="105:5" pos:end="105:52"><name pos:start="105:5" pos:end="105:20">curl_easy_setopt</name><argument_list pos:start="105:21" pos:end="105:52">(<argument pos:start="105:22" pos:end="105:32"><expr pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:26">state</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:32">curl</name></name></expr></argument>, <argument pos:start="105:35" pos:end="105:48"><expr pos:start="105:35" pos:end="105:48"><name pos:start="105:35" pos:end="105:48">CURLOPT_NOBODY</name></expr></argument>, <argument pos:start="105:51" pos:end="105:51"><expr pos:start="105:51" pos:end="105:51"><literal type="number" pos:start="105:51" pos:end="105:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:79"><expr pos:start="107:5" pos:end="107:78"><call pos:start="107:5" pos:end="107:78"><name pos:start="107:5" pos:end="107:20">curl_easy_setopt</name><argument_list pos:start="107:21" pos:end="107:78">(<argument pos:start="107:22" pos:end="107:32"><expr pos:start="107:22" pos:end="107:32"><name pos:start="107:22" pos:end="107:32"><name pos:start="107:22" pos:end="107:26">state</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:32">curl</name></name></expr></argument>, <argument pos:start="107:35" pos:end="107:55"><expr pos:start="107:35" pos:end="107:55"><name pos:start="107:35" pos:end="107:55">CURLOPT_WRITEFUNCTION</name></expr></argument>, <argument pos:start="107:58" pos:end="107:77"><expr pos:start="107:58" pos:end="107:77"><operator pos:start="107:58" pos:end="107:58">(</operator><name pos:start="107:59" pos:end="107:62">void</name> <operator pos:start="107:64" pos:end="107:64">*</operator><operator pos:start="107:65" pos:end="107:65">)</operator><name pos:start="107:66" pos:end="107:77">curl_size_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="111:17"><if pos:start="109:5" pos:end="111:17">if <condition pos:start="109:8" pos:end="109:39">(<expr pos:start="109:9" pos:end="109:38"><call pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:25">curl_easy_perform</name><argument_list pos:start="109:26" pos:end="109:38">(<argument pos:start="109:27" pos:end="109:37"><expr pos:start="109:27" pos:end="109:37"><name pos:start="109:27" pos:end="109:37"><name pos:start="109:27" pos:end="109:31">state</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:37">curl</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:17"><block_content pos:start="111:9" pos:end="111:17">

        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">out</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:73"><expr pos:start="113:5" pos:end="113:72"><call pos:start="113:5" pos:end="113:72"><name pos:start="113:5" pos:end="113:21">curl_easy_getinfo</name><argument_list pos:start="113:22" pos:end="113:72">(<argument pos:start="113:23" pos:end="113:33"><expr pos:start="113:23" pos:end="113:33"><name pos:start="113:23" pos:end="113:33"><name pos:start="113:23" pos:end="113:27">state</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:33">curl</name></name></expr></argument>, <argument pos:start="113:36" pos:end="113:67"><expr pos:start="113:36" pos:end="113:67"><name pos:start="113:36" pos:end="113:67">CURLINFO_CONTENT_LENGTH_DOWNLOAD</name></expr></argument>, <argument pos:start="113:70" pos:end="113:71"><expr pos:start="113:70" pos:end="113:71"><operator pos:start="113:70" pos:end="113:70">&amp;</operator><name pos:start="113:71" pos:end="113:71">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="121:17"><if pos:start="115:5" pos:end="117:27">if <condition pos:start="115:8" pos:end="115:10">(<expr pos:start="115:9" pos:end="115:9"><name pos:start="115:9" pos:end="115:9">d</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:27"><block_content pos:start="117:9" pos:end="117:27">

        <expr_stmt pos:start="117:9" pos:end="117:27"><expr pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:14"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:14">len</name></name> <operator pos:start="117:16" pos:end="117:16">=</operator> <operator pos:start="117:18" pos:end="117:18">(</operator><name pos:start="117:19" pos:end="117:24">size_t</name><operator pos:start="117:25" pos:end="117:25">)</operator><name pos:start="117:26" pos:end="117:26">d</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="119:5" pos:end="121:17">else if<condition pos:start="119:12" pos:end="119:20">(<expr pos:start="119:13" pos:end="119:19"><operator pos:start="119:13" pos:end="119:13">!</operator><name pos:start="119:14" pos:end="119:19"><name pos:start="119:14" pos:end="119:14">s</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:19">len</name></name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:17"><block_content pos:start="121:9" pos:end="121:17">

        <goto pos:start="121:9" pos:end="121:17">goto <name pos:start="121:14" pos:end="121:16">out</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:42"><expr pos:start="123:5" pos:end="123:41"><call pos:start="123:5" pos:end="123:41"><name pos:start="123:5" pos:end="123:11">DPRINTF</name><argument_list pos:start="123:12" pos:end="123:41">(<argument pos:start="123:13" pos:end="123:32"><expr pos:start="123:13" pos:end="123:32"><literal type="string" pos:start="123:13" pos:end="123:32">"CURL: Size = %zd\n"</literal></expr></argument>, <argument pos:start="123:35" pos:end="123:40"><expr pos:start="123:35" pos:end="123:40"><name pos:start="123:35" pos:end="123:40"><name pos:start="123:35" pos:end="123:35">s</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:40">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:28"><expr pos:start="127:5" pos:end="127:27"><call pos:start="127:5" pos:end="127:27"><name pos:start="127:5" pos:end="127:20">curl_clean_state</name><argument_list pos:start="127:21" pos:end="127:27">(<argument pos:start="127:22" pos:end="127:26"><expr pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:26">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:35"><expr pos:start="129:5" pos:end="129:34"><call pos:start="129:5" pos:end="129:34"><name pos:start="129:5" pos:end="129:21">curl_easy_cleanup</name><argument_list pos:start="129:22" pos:end="129:34">(<argument pos:start="129:23" pos:end="129:33"><expr pos:start="129:23" pos:end="129:33"><name pos:start="129:23" pos:end="129:33"><name pos:start="129:23" pos:end="129:27">state</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:23"><expr pos:start="131:5" pos:end="131:22"><name pos:start="131:5" pos:end="131:15"><name pos:start="131:5" pos:end="131:9">state</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:15">curl</name></name> <operator pos:start="131:17" pos:end="131:17">=</operator> <name pos:start="131:19" pos:end="131:22">NULL</name></expr>;</expr_stmt>



    <comment type="line" pos:start="135:5" pos:end="135:57">// Now we know the file exists and its size, so let's</comment>

    <comment type="line" pos:start="137:5" pos:end="137:38">// initialize the multi interface!</comment>



    <expr_stmt pos:start="141:5" pos:end="141:33"><expr pos:start="141:5" pos:end="141:32"><name pos:start="141:5" pos:end="141:12"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:12">multi</name></name> <operator pos:start="141:14" pos:end="141:14">=</operator> <call pos:start="141:16" pos:end="141:32"><name pos:start="141:16" pos:end="141:30">curl_multi_init</name><argument_list pos:start="141:31" pos:end="141:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:56"><expr pos:start="143:5" pos:end="143:55"><call pos:start="143:5" pos:end="143:55"><name pos:start="143:5" pos:end="143:21">curl_multi_setopt</name><argument_list pos:start="143:22" pos:end="143:55">(<argument pos:start="143:23" pos:end="143:30"><expr pos:start="143:23" pos:end="143:30"><name pos:start="143:23" pos:end="143:30"><name pos:start="143:23" pos:end="143:23">s</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:30">multi</name></name></expr></argument>, <argument pos:start="143:33" pos:end="143:51"><expr pos:start="143:33" pos:end="143:51"><name pos:start="143:33" pos:end="143:51">CURLMOPT_SOCKETDATA</name></expr></argument>, <argument pos:start="143:54" pos:end="143:54"><expr pos:start="143:54" pos:end="143:54"><name pos:start="143:54" pos:end="143:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:71"><expr pos:start="145:5" pos:end="145:70"><call pos:start="145:5" pos:end="145:70"><name pos:start="145:5" pos:end="145:21">curl_multi_setopt</name><argument_list pos:start="145:22" pos:end="145:70">(<argument pos:start="145:23" pos:end="145:30"><expr pos:start="145:23" pos:end="145:30"><name pos:start="145:23" pos:end="145:30"><name pos:start="145:23" pos:end="145:23">s</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:30">multi</name></name></expr></argument>, <argument pos:start="145:33" pos:end="145:55"><expr pos:start="145:33" pos:end="145:55"><name pos:start="145:33" pos:end="145:55">CURLMOPT_SOCKETFUNCTION</name></expr></argument>, <argument pos:start="145:58" pos:end="145:69"><expr pos:start="145:58" pos:end="145:69"><name pos:start="145:58" pos:end="145:69">curl_sock_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:21"><expr pos:start="147:5" pos:end="147:20"><call pos:start="147:5" pos:end="147:20"><name pos:start="147:5" pos:end="147:17">curl_multi_do</name><argument_list pos:start="147:18" pos:end="147:20">(<argument pos:start="147:19" pos:end="147:19"><expr pos:start="147:19" pos:end="147:19"><name pos:start="147:19" pos:end="147:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:24"><expr pos:start="151:5" pos:end="151:23"><call pos:start="151:5" pos:end="151:23"><name pos:start="151:5" pos:end="151:17">qemu_opts_del</name><argument_list pos:start="151:18" pos:end="151:23">(<argument pos:start="151:19" pos:end="151:22"><expr pos:start="151:19" pos:end="151:22"><name pos:start="151:19" pos:end="151:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="153:5" pos:end="153:13">return <expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">0</literal></expr>;</return>



<label pos:start="157:1" pos:end="157:4"><name pos:start="157:1" pos:end="157:3">out</name>:</label>

    <expr_stmt pos:start="159:5" pos:end="159:69"><expr pos:start="159:5" pos:end="159:68"><call pos:start="159:5" pos:end="159:68"><name pos:start="159:5" pos:end="159:11">fprintf</name><argument_list pos:start="159:12" pos:end="159:68">(<argument pos:start="159:13" pos:end="159:18"><expr pos:start="159:13" pos:end="159:18"><name pos:start="159:13" pos:end="159:18">stderr</name></expr></argument>, <argument pos:start="159:21" pos:end="159:52"><expr pos:start="159:21" pos:end="159:52"><literal type="string" pos:start="159:21" pos:end="159:52">"CURL: Error opening file: %s\n"</literal></expr></argument>, <argument pos:start="159:55" pos:end="159:67"><expr pos:start="159:55" pos:end="159:67"><name pos:start="159:55" pos:end="159:67"><name pos:start="159:55" pos:end="159:59">state</name><operator pos:start="159:60" pos:end="159:61">-&gt;</operator><name pos:start="159:62" pos:end="159:67">errmsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:35"><expr pos:start="161:5" pos:end="161:34"><call pos:start="161:5" pos:end="161:34"><name pos:start="161:5" pos:end="161:21">curl_easy_cleanup</name><argument_list pos:start="161:22" pos:end="161:34">(<argument pos:start="161:23" pos:end="161:33"><expr pos:start="161:23" pos:end="161:33"><name pos:start="161:23" pos:end="161:33"><name pos:start="161:23" pos:end="161:27">state</name><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:23"><expr pos:start="163:5" pos:end="163:22"><name pos:start="163:5" pos:end="163:15"><name pos:start="163:5" pos:end="163:9">state</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:15">curl</name></name> <operator pos:start="163:17" pos:end="163:17">=</operator> <name pos:start="163:19" pos:end="163:22">NULL</name></expr>;</expr_stmt>

<label pos:start="165:1" pos:end="165:12"><name pos:start="165:1" pos:end="165:11">out_noclean</name>:</label>

    <expr_stmt pos:start="167:5" pos:end="167:19"><expr pos:start="167:5" pos:end="167:18"><call pos:start="167:5" pos:end="167:18"><name pos:start="167:5" pos:end="167:10">g_free</name><argument_list pos:start="167:11" pos:end="167:18">(<argument pos:start="167:12" pos:end="167:17"><expr pos:start="167:12" pos:end="167:17"><name pos:start="167:12" pos:end="167:17"><name pos:start="167:12" pos:end="167:12">s</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:17">url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:24"><expr pos:start="169:5" pos:end="169:23"><call pos:start="169:5" pos:end="169:23"><name pos:start="169:5" pos:end="169:17">qemu_opts_del</name><argument_list pos:start="169:18" pos:end="169:23">(<argument pos:start="169:19" pos:end="169:22"><expr pos:start="169:19" pos:end="169:22"><name pos:start="169:19" pos:end="169:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="171:5" pos:end="171:19">return <expr pos:start="171:12" pos:end="171:18"><operator pos:start="171:12" pos:end="171:12">-</operator><name pos:start="171:13" pos:end="171:18">EINVAL</name></expr>;</return>

</block_content>}</block></function>
</unit>
