<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15021.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">colo_compare_complete</name><parameter_list pos:start="1:34" pos:end="1:66">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:47">UserCreatable</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">uc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:11">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">CompareState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><call pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:34">COLO_COMPARE</name><argument_list pos:start="5:35" pos:end="5:38">(<argument pos:start="5:36" pos:end="5:37"><expr pos:start="5:36" pos:end="5:37"><name pos:start="5:36" pos:end="5:37">uc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Chardev</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:20">thread_name</name><index pos:start="9:21" pos:end="9:24">[<expr pos:start="9:22" pos:end="9:23"><literal type="number" pos:start="9:22" pos:end="9:23">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:14"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:25">compare_id</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:53">(<expr pos:start="15:9" pos:end="15:52"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:21">pri_indev</name></name> <operator pos:start="15:23" pos:end="15:24">||</operator> <operator pos:start="15:26" pos:end="15:26">!</operator><name pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:38">sec_indev</name></name> <operator pos:start="15:40" pos:end="15:41">||</operator> <operator pos:start="15:43" pos:end="15:43">!</operator><name pos:start="15:44" pos:end="15:52"><name pos:start="15:44" pos:end="15:44">s</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:52">outdev</name></name></expr>)</condition> <block pos:start="15:55" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:15">

        <expr_stmt pos:start="17:9" pos:end="19:59"><expr pos:start="17:9" pos:end="19:58"><call pos:start="17:9" pos:end="19:58"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="19:58">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="19:57"><expr pos:start="17:26" pos:end="19:57"><literal type="string" pos:start="17:26" pos:end="17:60">"colo compare needs 'primary_in' ,"</literal>

                   <literal type="string" pos:start="19:20" pos:end="19:57">"'secondary_in','outdev' property set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="35:5">else if <condition pos:start="23:15" pos:end="27:51">(<expr pos:start="23:16" pos:end="27:50"><operator pos:start="23:16" pos:end="23:16">!</operator><call pos:start="23:17" pos:end="23:47"><name pos:start="23:17" pos:end="23:22">strcmp</name><argument_list pos:start="23:23" pos:end="23:47">(<argument pos:start="23:24" pos:end="23:35"><expr pos:start="23:24" pos:end="23:35"><name pos:start="23:24" pos:end="23:35"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:35">pri_indev</name></name></expr></argument>, <argument pos:start="23:38" pos:end="23:46"><expr pos:start="23:38" pos:end="23:46"><name pos:start="23:38" pos:end="23:46"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:46">outdev</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:49" pos:end="23:50">||</operator>

               <operator pos:start="25:16" pos:end="25:16">!</operator><call pos:start="25:17" pos:end="25:47"><name pos:start="25:17" pos:end="25:22">strcmp</name><argument_list pos:start="25:23" pos:end="25:47">(<argument pos:start="25:24" pos:end="25:35"><expr pos:start="25:24" pos:end="25:35"><name pos:start="25:24" pos:end="25:35"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:35">sec_indev</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:46"><expr pos:start="25:38" pos:end="25:46"><name pos:start="25:38" pos:end="25:46"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:46">outdev</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:49" pos:end="25:50">||</operator>

               <operator pos:start="27:16" pos:end="27:16">!</operator><call pos:start="27:17" pos:end="27:50"><name pos:start="27:17" pos:end="27:22">strcmp</name><argument_list pos:start="27:23" pos:end="27:50">(<argument pos:start="27:24" pos:end="27:35"><expr pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:35">pri_indev</name></name></expr></argument>, <argument pos:start="27:38" pos:end="27:49"><expr pos:start="27:38" pos:end="27:49"><name pos:start="27:38" pos:end="27:49"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:49">sec_indev</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:53" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:15">

        <expr_stmt pos:start="29:9" pos:end="31:41"><expr pos:start="29:9" pos:end="31:40"><call pos:start="29:9" pos:end="31:40"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="31:40">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="31:39"><expr pos:start="29:26" pos:end="31:39"><literal type="string" pos:start="29:26" pos:end="29:66">"'indev' and 'outdev' could not be same "</literal>

                   <literal type="string" pos:start="31:20" pos:end="31:39">"for compare module"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="41:53">(<expr pos:start="39:9" pos:end="41:52"><call pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:30">find_and_check_chardev</name><argument_list pos:start="39:31" pos:end="39:56">(<argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><operator pos:start="39:32" pos:end="39:32">&amp;</operator><name pos:start="39:33" pos:end="39:35">chr</name></expr></argument>, <argument pos:start="39:38" pos:end="39:49"><expr pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:38">s</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:49">pri_indev</name></name></expr></argument>, <argument pos:start="39:52" pos:end="39:55"><expr pos:start="39:52" pos:end="39:55"><name pos:start="39:52" pos:end="39:55">errp</name></expr></argument>)</argument_list></call> <operator pos:start="39:58" pos:end="39:59">||</operator>

        <operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:52"><name pos:start="41:10" pos:end="41:25">qemu_chr_fe_init</name><argument_list pos:start="41:26" pos:end="41:52">(<argument pos:start="41:27" pos:end="41:40"><expr pos:start="41:27" pos:end="41:40"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:40"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:40">chr_pri_in</name></name></expr></argument>, <argument pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><name pos:start="41:43" pos:end="41:45">chr</name></expr></argument>, <argument pos:start="41:48" pos:end="41:51"><expr pos:start="41:48" pos:end="41:51"><name pos:start="41:48" pos:end="41:51">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:55" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:15">

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="51:53">(<expr pos:start="49:9" pos:end="51:52"><call pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:30">find_and_check_chardev</name><argument_list pos:start="49:31" pos:end="49:56">(<argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:35">chr</name></expr></argument>, <argument pos:start="49:38" pos:end="49:49"><expr pos:start="49:38" pos:end="49:49"><name pos:start="49:38" pos:end="49:49"><name pos:start="49:38" pos:end="49:38">s</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:49">sec_indev</name></name></expr></argument>, <argument pos:start="49:52" pos:end="49:55"><expr pos:start="49:52" pos:end="49:55"><name pos:start="49:52" pos:end="49:55">errp</name></expr></argument>)</argument_list></call> <operator pos:start="49:58" pos:end="49:59">||</operator>

        <operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:52"><name pos:start="51:10" pos:end="51:25">qemu_chr_fe_init</name><argument_list pos:start="51:26" pos:end="51:52">(<argument pos:start="51:27" pos:end="51:40"><expr pos:start="51:27" pos:end="51:40"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:40"><name pos:start="51:28" pos:end="51:28">s</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:40">chr_sec_in</name></name></expr></argument>, <argument pos:start="51:43" pos:end="51:45"><expr pos:start="51:43" pos:end="51:45"><name pos:start="51:43" pos:end="51:45">chr</name></expr></argument>, <argument pos:start="51:48" pos:end="51:51"><expr pos:start="51:48" pos:end="51:51"><name pos:start="51:48" pos:end="51:51">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:55" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:15">

        <return pos:start="53:9" pos:end="53:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="61:50">(<expr pos:start="59:9" pos:end="61:49"><call pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:30">find_and_check_chardev</name><argument_list pos:start="59:31" pos:end="59:53">(<argument pos:start="59:32" pos:end="59:35"><expr pos:start="59:32" pos:end="59:35"><operator pos:start="59:32" pos:end="59:32">&amp;</operator><name pos:start="59:33" pos:end="59:35">chr</name></expr></argument>, <argument pos:start="59:38" pos:end="59:46"><expr pos:start="59:38" pos:end="59:46"><name pos:start="59:38" pos:end="59:46"><name pos:start="59:38" pos:end="59:38">s</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:46">outdev</name></name></expr></argument>, <argument pos:start="59:49" pos:end="59:52"><expr pos:start="59:49" pos:end="59:52"><name pos:start="59:49" pos:end="59:52">errp</name></expr></argument>)</argument_list></call> <operator pos:start="59:55" pos:end="59:56">||</operator>

        <operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:49"><name pos:start="61:10" pos:end="61:25">qemu_chr_fe_init</name><argument_list pos:start="61:26" pos:end="61:49">(<argument pos:start="61:27" pos:end="61:37"><expr pos:start="61:27" pos:end="61:37"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:37"><name pos:start="61:28" pos:end="61:28">s</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:37">chr_out</name></name></expr></argument>, <argument pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:42">chr</name></expr></argument>, <argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><name pos:start="61:45" pos:end="61:48">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:52" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:15">

        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:73"><expr pos:start="69:5" pos:end="69:72"><call pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:22">net_socket_rs_init</name><argument_list pos:start="69:23" pos:end="69:72">(<argument pos:start="69:24" pos:end="69:33"><expr pos:start="69:24" pos:end="69:33"><operator pos:start="69:24" pos:end="69:24">&amp;</operator><name pos:start="69:25" pos:end="69:33"><name pos:start="69:25" pos:end="69:25">s</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:33">pri_rs</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:58"><expr pos:start="69:36" pos:end="69:58"><name pos:start="69:36" pos:end="69:58">compare_pri_rs_finalize</name></expr></argument>, <argument pos:start="69:61" pos:end="69:71"><expr pos:start="69:61" pos:end="69:71"><name pos:start="69:61" pos:end="69:71"><name pos:start="69:61" pos:end="69:61">s</name><operator pos:start="69:62" pos:end="69:63">-&gt;</operator><name pos:start="69:64" pos:end="69:71">vnet_hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:73"><expr pos:start="71:5" pos:end="71:72"><call pos:start="71:5" pos:end="71:72"><name pos:start="71:5" pos:end="71:22">net_socket_rs_init</name><argument_list pos:start="71:23" pos:end="71:72">(<argument pos:start="71:24" pos:end="71:33"><expr pos:start="71:24" pos:end="71:33"><operator pos:start="71:24" pos:end="71:24">&amp;</operator><name pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:25">s</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:33">sec_rs</name></name></expr></argument>, <argument pos:start="71:36" pos:end="71:58"><expr pos:start="71:36" pos:end="71:58"><name pos:start="71:36" pos:end="71:58">compare_sec_rs_finalize</name></expr></argument>, <argument pos:start="71:61" pos:end="71:71"><expr pos:start="71:61" pos:end="71:71"><name pos:start="71:61" pos:end="71:71"><name pos:start="71:61" pos:end="71:61">s</name><operator pos:start="71:62" pos:end="71:63">-&gt;</operator><name pos:start="71:64" pos:end="71:71">vnet_hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:32"><expr pos:start="75:5" pos:end="75:31"><call pos:start="75:5" pos:end="75:31"><name pos:start="75:5" pos:end="75:16">g_queue_init</name><argument_list pos:start="75:17" pos:end="75:31">(<argument pos:start="75:18" pos:end="75:30"><expr pos:start="75:18" pos:end="75:30"><operator pos:start="75:18" pos:end="75:18">&amp;</operator><name pos:start="75:19" pos:end="75:30"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:30">conn_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="85:74"><expr pos:start="79:5" pos:end="85:73"><name pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:29">connection_track_table</name></name> <operator pos:start="79:31" pos:end="79:31">=</operator> <call pos:start="79:33" pos:end="85:73"><name pos:start="79:33" pos:end="79:53">g_hash_table_new_full</name><argument_list pos:start="79:54" pos:end="85:73">(<argument pos:start="79:55" pos:end="79:73"><expr pos:start="79:55" pos:end="79:73"><name pos:start="79:55" pos:end="79:73">connection_key_hash</name></expr></argument>,

                                                      <argument pos:start="81:55" pos:end="81:74"><expr pos:start="81:55" pos:end="81:74"><name pos:start="81:55" pos:end="81:74">connection_key_equal</name></expr></argument>,

                                                      <argument pos:start="83:55" pos:end="83:60"><expr pos:start="83:55" pos:end="83:60"><name pos:start="83:55" pos:end="83:60">g_free</name></expr></argument>,

                                                      <argument pos:start="85:55" pos:end="85:72"><expr pos:start="85:55" pos:end="85:72"><name pos:start="85:55" pos:end="85:72">connection_destroy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:56"><expr pos:start="89:5" pos:end="89:55"><call pos:start="89:5" pos:end="89:55"><name pos:start="89:5" pos:end="89:11">sprintf</name><argument_list pos:start="89:12" pos:end="89:55">(<argument pos:start="89:13" pos:end="89:23"><expr pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:23">thread_name</name></expr></argument>, <argument pos:start="89:26" pos:end="89:42"><expr pos:start="89:26" pos:end="89:42"><literal type="string" pos:start="89:26" pos:end="89:42">"colo-compare %d"</literal></expr></argument>, <argument pos:start="89:45" pos:end="89:54"><expr pos:start="89:45" pos:end="89:54"><name pos:start="89:45" pos:end="89:54">compare_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="95:45"><expr pos:start="91:5" pos:end="95:44"><call pos:start="91:5" pos:end="95:44"><name pos:start="91:5" pos:end="91:22">qemu_thread_create</name><argument_list pos:start="91:23" pos:end="95:44">(<argument pos:start="91:24" pos:end="91:33"><expr pos:start="91:24" pos:end="91:33"><operator pos:start="91:24" pos:end="91:24">&amp;</operator><name pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:25">s</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:33">thread</name></name></expr></argument>, <argument pos:start="91:36" pos:end="91:46"><expr pos:start="91:36" pos:end="91:46"><name pos:start="91:36" pos:end="91:46">thread_name</name></expr></argument>,

                       <argument pos:start="93:24" pos:end="93:42"><expr pos:start="93:24" pos:end="93:42"><name pos:start="93:24" pos:end="93:42">colo_compare_thread</name></expr></argument>, <argument pos:start="93:45" pos:end="93:45"><expr pos:start="93:45" pos:end="93:45"><name pos:start="93:45" pos:end="93:45">s</name></expr></argument>,

                       <argument pos:start="95:24" pos:end="95:43"><expr pos:start="95:24" pos:end="95:43"><name pos:start="95:24" pos:end="95:43">QEMU_THREAD_JOINABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:17"><expr pos:start="97:5" pos:end="97:16"><name pos:start="97:5" pos:end="97:14">compare_id</name><operator pos:start="97:15" pos:end="97:16">++</operator></expr>;</expr_stmt>



    <return pos:start="101:5" pos:end="101:11">return;</return>

</block_content>}</block></function>
</unit>
