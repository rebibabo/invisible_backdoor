<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22175.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:52">vmdk_co_get_block_status</name><parameter_list pos:start="1:53" pos:end="3:54">(<parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:69">BlockDriverState</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:53"><decl pos:start="3:45" pos:end="3:53"><type pos:start="3:45" pos:end="3:53"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVVmdkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:28">index_in_cluster</name></decl>, <decl pos:start="9:31" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:31" pos:end="9:31">n</name></decl>, <decl pos:start="9:34" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:34" pos:end="9:36">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">VmdkExtent</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">extent</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:10">extent</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:45"><name pos:start="17:14" pos:end="17:24">find_extent</name><argument_list pos:start="17:25" pos:end="17:45">(<argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><name pos:start="17:26" pos:end="17:26">s</name></expr></argument>, <argument pos:start="17:29" pos:end="17:38"><expr pos:start="17:29" pos:end="17:38"><name pos:start="17:29" pos:end="17:38">sector_num</name></expr></argument>, <argument pos:start="17:41" pos:end="17:44"><expr pos:start="17:41" pos:end="17:44"><name pos:start="17:41" pos:end="17:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:15">extent</name></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:22">qemu_co_mutex_lock</name><argument_list pos:start="25:23" pos:end="25:32">(<argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:31"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="31:35"><expr pos:start="27:5" pos:end="31:34"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="31:34"><name pos:start="27:11" pos:end="27:28">get_cluster_offset</name><argument_list pos:start="27:29" pos:end="31:34">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">bs</name></expr></argument>, <argument pos:start="27:34" pos:end="27:39"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:39">extent</name></expr></argument>, <argument pos:start="27:42" pos:end="27:45"><expr pos:start="27:42" pos:end="27:45"><name pos:start="27:42" pos:end="27:45">NULL</name></expr></argument>,

                             <argument pos:start="29:30" pos:end="29:45"><expr pos:start="29:30" pos:end="29:45"><name pos:start="29:30" pos:end="29:39">sector_num</name> <operator pos:start="29:41" pos:end="29:41">*</operator> <literal type="number" pos:start="29:43" pos:end="29:45">512</literal></expr></argument>, <argument pos:start="29:48" pos:end="29:52"><expr pos:start="29:48" pos:end="29:52"><name pos:start="29:48" pos:end="29:52">false</name></expr></argument>, <argument pos:start="29:55" pos:end="29:61"><expr pos:start="29:55" pos:end="29:61"><operator pos:start="29:55" pos:end="29:55">&amp;</operator><name pos:start="29:56" pos:end="29:61">offset</name></expr></argument>,

                             <argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">0</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:24">qemu_co_mutex_unlock</name><argument_list pos:start="33:25" pos:end="33:34">(<argument pos:start="33:26" pos:end="33:33"><expr pos:start="33:26" pos:end="33:33"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:33"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="37:5" pos:end="71:5">switch <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">ret</name></expr>)</condition> <block pos:start="37:18" pos:end="71:5">{<block_content pos:start="39:5" pos:end="69:14">

    <case pos:start="39:5" pos:end="39:20">case <expr pos:start="39:10" pos:end="39:19"><name pos:start="39:10" pos:end="39:19">VMDK_ERROR</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><name pos:start="41:16" pos:end="41:18">EIO</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:22">case <expr pos:start="45:10" pos:end="45:21"><name pos:start="45:10" pos:end="45:21">VMDK_UNALLOC</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:16"><expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:21">case <expr pos:start="51:10" pos:end="51:20"><name pos:start="51:10" pos:end="51:20">VMDK_ZEROED</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:29">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:17">case <expr pos:start="57:10" pos:end="57:16"><name pos:start="57:10" pos:end="57:16">VMDK_OK</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:29">BDRV_BLOCK_DATA</name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:60">(<expr pos:start="61:13" pos:end="61:59"><name pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:18">extent</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:24">file</name></name> <operator pos:start="61:26" pos:end="61:27">==</operator> <name pos:start="61:29" pos:end="61:36"><name pos:start="61:29" pos:end="61:30">bs</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:36">file</name></name> <operator pos:start="61:38" pos:end="61:39">&amp;&amp;</operator> <operator pos:start="61:41" pos:end="61:41">!</operator><name pos:start="61:42" pos:end="61:59"><name pos:start="61:42" pos:end="61:47">extent</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:59">compressed</name></name></expr>)</condition> <block pos:start="61:62" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:52">

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:18">|=</operator> <name pos:start="63:20" pos:end="63:42">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="63:44" pos:end="63:44">|</operator> <name pos:start="63:46" pos:end="63:51">offset</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <break pos:start="69:9" pos:end="69:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="75:5" pos:end="75:70"><expr pos:start="75:5" pos:end="75:69"><name pos:start="75:5" pos:end="75:20">index_in_cluster</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:69"><name pos:start="75:24" pos:end="75:49">vmdk_find_index_in_cluster</name><argument_list pos:start="75:50" pos:end="75:69">(<argument pos:start="75:51" pos:end="75:56"><expr pos:start="75:51" pos:end="75:56"><name pos:start="75:51" pos:end="75:56">extent</name></expr></argument>, <argument pos:start="75:59" pos:end="75:68"><expr pos:start="75:59" pos:end="75:68"><name pos:start="75:59" pos:end="75:68">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:51"><expr pos:start="77:5" pos:end="77:50"><name pos:start="77:5" pos:end="77:5">n</name> <operator pos:start="77:7" pos:end="77:7">=</operator> <name pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:14">extent</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:31">cluster_sectors</name></name> <operator pos:start="77:33" pos:end="77:33">-</operator> <name pos:start="77:35" pos:end="77:50">index_in_cluster</name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:23">(<expr pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:9">n</name> <operator pos:start="79:11" pos:end="79:11">&gt;</operator> <name pos:start="79:13" pos:end="79:22">nb_sectors</name></expr>)</condition> <block pos:start="79:25" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:23">

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:9">n</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <name pos:start="81:13" pos:end="81:22">nb_sectors</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:14"><expr pos:start="85:5" pos:end="85:13"><operator pos:start="85:5" pos:end="85:5">*</operator><name pos:start="85:6" pos:end="85:9">pnum</name> <operator pos:start="85:11" pos:end="85:11">=</operator> <name pos:start="85:13" pos:end="85:13">n</name></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
