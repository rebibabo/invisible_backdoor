<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3102.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">spectral_to_sample</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:41">AACContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">ac</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:15">type</name></decl>;</decl_stmt>

    <function_decl pos:start="7:5" pos:end="7:72"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">void</name></type> (<modifier pos:start="7:11" pos:end="7:11">*</modifier><name pos:start="7:12" pos:end="7:27">imdct_and_window</name>)<parameter_list pos:start="7:29" pos:end="7:71">(<parameter pos:start="7:30" pos:end="7:43"><decl pos:start="7:30" pos:end="7:43"><type pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:39">AACContext</name> <modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:43">ac</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:70"><decl pos:start="7:46" pos:end="7:70"><type pos:start="7:46" pos:end="7:70"><name pos:start="7:46" pos:end="7:65">SingleChannelElement</name> <modifier pos:start="7:67" pos:end="7:67">*</modifier></type><name pos:start="7:68" pos:end="7:70">sce</name></decl></parameter>)</parameter_list>;</function_decl>

    <switch pos:start="9:5" pos:end="27:5">switch <condition pos:start="9:12" pos:end="9:39">(<expr pos:start="9:13" pos:end="9:38"><name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:14">ac</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:18">oc</name><index pos:start="9:19" pos:end="9:21">[<expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">1</literal></expr>]</index></name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:26">m4ac</name><operator pos:start="9:27" pos:end="9:27">.</operator><name pos:start="9:28" pos:end="9:38">object_type</name></name></expr>)</condition> <block pos:start="9:41" pos:end="27:5">{<block_content pos:start="11:5" pos:end="25:51">

    <case pos:start="11:5" pos:end="11:23">case <expr pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:22">AOT_ER_AAC_LD</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:50"><expr pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:24">imdct_and_window</name> <operator pos:start="13:26" pos:end="13:26">=</operator> <name pos:start="13:28" pos:end="13:49">imdct_and_windowing_ld</name></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:24">case <expr pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:23">AOT_ER_AAC_ELD</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:24">imdct_and_window</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:50">imdct_and_windowing_eld</name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <default pos:start="23:5" pos:end="23:12">default:</default>

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:24">imdct_and_window</name> <operator pos:start="25:26" pos:end="25:26">=</operator> <name pos:start="25:28" pos:end="25:50"><name pos:start="25:28" pos:end="25:29">ac</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:50">imdct_and_windowing</name></name></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <for pos:start="29:5" pos:end="131:5">for <control pos:start="29:9" pos:end="29:37">(<init pos:start="29:10" pos:end="29:18"><expr pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:13">type</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">3</literal></expr>;</init> <condition pos:start="29:20" pos:end="29:29"><expr pos:start="29:20" pos:end="29:28"><name pos:start="29:20" pos:end="29:23">type</name> <operator pos:start="29:25" pos:end="29:26">&gt;=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>;</condition> <incr pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:34">type</name><operator pos:start="29:35" pos:end="29:36">--</operator></expr></incr>)</control> <block pos:start="29:39" pos:end="131:5">{<block_content pos:start="31:9" pos:end="129:9">

        <for pos:start="31:9" pos:end="129:9">for <control pos:start="31:13" pos:end="31:41">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:36"><expr pos:start="31:21" pos:end="31:35"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:35">MAX_ELEM_ID</name></expr>;</condition> <incr pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:38">i</name><operator pos:start="31:39" pos:end="31:40">++</operator></expr></incr>)</control> <block pos:start="31:43" pos:end="129:9">{<block_content pos:start="33:13" pos:end="127:13">

            <decl_stmt pos:start="33:13" pos:end="33:51"><decl pos:start="33:13" pos:end="33:50"><type pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:26">ChannelElement</name> <modifier pos:start="33:28" pos:end="33:28">*</modifier></type><name pos:start="33:29" pos:end="33:31">che</name> <init pos:start="33:33" pos:end="33:50">= <expr pos:start="33:35" pos:end="33:50"><name pos:start="33:35" pos:end="33:50"><name pos:start="33:35" pos:end="33:36">ac</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:41">che</name><index pos:start="33:42" pos:end="33:47">[<expr pos:start="33:43" pos:end="33:46"><name pos:start="33:43" pos:end="33:46">type</name></expr>]</index><index pos:start="33:48" pos:end="33:50">[<expr pos:start="33:49" pos:end="33:49"><name pos:start="33:49" pos:end="33:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="35:13" pos:end="127:13"><if pos:start="35:13" pos:end="123:13">if <condition pos:start="35:16" pos:end="35:36">(<expr pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:19">che</name> <operator pos:start="35:21" pos:end="35:22">&amp;&amp;</operator> <name pos:start="35:24" pos:end="35:35"><name pos:start="35:24" pos:end="35:26">che</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:35">present</name></name></expr>)</condition> <block pos:start="35:38" pos:end="123:13">{<block_content pos:start="37:17" pos:end="121:33">

                <if_stmt pos:start="37:17" pos:end="39:111"><if pos:start="37:17" pos:end="39:111">if <condition pos:start="37:20" pos:end="37:37">(<expr pos:start="37:21" pos:end="37:36"><name pos:start="37:21" pos:end="37:24">type</name> <operator pos:start="37:26" pos:end="37:27">&lt;=</operator> <name pos:start="37:29" pos:end="37:36">TYPE_CPE</name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:111"><block_content pos:start="39:21" pos:end="39:111">

                    <expr_stmt pos:start="39:21" pos:end="39:111"><expr pos:start="39:21" pos:end="39:110"><call pos:start="39:21" pos:end="39:110"><name pos:start="39:21" pos:end="39:42">apply_channel_coupling</name><argument_list pos:start="39:43" pos:end="39:110">(<argument pos:start="39:44" pos:end="39:45"><expr pos:start="39:44" pos:end="39:45"><name pos:start="39:44" pos:end="39:45">ac</name></expr></argument>, <argument pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><name pos:start="39:48" pos:end="39:50">che</name></expr></argument>, <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">type</name></expr></argument>, <argument pos:start="39:59" pos:end="39:59"><expr pos:start="39:59" pos:end="39:59"><name pos:start="39:59" pos:end="39:59">i</name></expr></argument>, <argument pos:start="39:62" pos:end="39:71"><expr pos:start="39:62" pos:end="39:71"><name pos:start="39:62" pos:end="39:71">BEFORE_TNS</name></expr></argument>, <argument pos:start="39:74" pos:end="39:109"><expr pos:start="39:74" pos:end="39:109"><call pos:start="39:74" pos:end="39:109"><name pos:start="39:74" pos:end="39:83">AAC_RENAME</name><argument_list pos:start="39:84" pos:end="39:109">(<argument pos:start="39:85" pos:end="39:108"><expr pos:start="39:85" pos:end="39:108"><name pos:start="39:85" pos:end="39:108">apply_dependent_coupling</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="41:17" pos:end="55:17"><if pos:start="41:17" pos:end="55:17">if <condition pos:start="41:20" pos:end="41:62">(<expr pos:start="41:21" pos:end="41:61"><name pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:22">ac</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:26">oc</name><index pos:start="41:27" pos:end="41:29">[<expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">1</literal></expr>]</index></name><operator pos:start="41:30" pos:end="41:30">.</operator><name pos:start="41:31" pos:end="41:46"><name pos:start="41:31" pos:end="41:34">m4ac</name><operator pos:start="41:35" pos:end="41:35">.</operator><name pos:start="41:36" pos:end="41:46">object_type</name></name> <operator pos:start="41:48" pos:end="41:49">==</operator> <name pos:start="41:51" pos:end="41:61">AOT_AAC_LTP</name></expr>)</condition> <block pos:start="41:64" pos:end="55:17">{<block_content pos:start="43:21" pos:end="53:21">

                    <if_stmt pos:start="43:21" pos:end="53:21"><if pos:start="43:21" pos:end="53:21">if <condition pos:start="43:24" pos:end="43:57">(<expr pos:start="43:25" pos:end="43:56"><name pos:start="43:25" pos:end="43:34"><name pos:start="43:25" pos:end="43:27">che</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:31">ch</name><index pos:start="43:32" pos:end="43:34">[<expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr>]</index></name><operator pos:start="43:35" pos:end="43:35">.</operator><name pos:start="43:36" pos:end="43:56"><name pos:start="43:36" pos:end="43:38">ics</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:56">predictor_present</name></name></expr>)</condition> <block pos:start="43:59" pos:end="53:21">{<block_content pos:start="45:25" pos:end="51:59">

                        <if_stmt pos:start="45:25" pos:end="47:59"><if pos:start="45:25" pos:end="47:59">if <condition pos:start="45:28" pos:end="45:55">(<expr pos:start="45:29" pos:end="45:54"><name pos:start="45:29" pos:end="45:38"><name pos:start="45:29" pos:end="45:31">che</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:35">ch</name><index pos:start="45:36" pos:end="45:38">[<expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">0</literal></expr>]</index></name><operator pos:start="45:39" pos:end="45:39">.</operator><name pos:start="45:40" pos:end="45:54"><name pos:start="45:40" pos:end="45:42">ics</name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:46">ltp</name><operator pos:start="45:47" pos:end="45:47">.</operator><name pos:start="45:48" pos:end="45:54">present</name></name></expr>)</condition><block type="pseudo" pos:start="47:29" pos:end="47:59"><block_content pos:start="47:29" pos:end="47:59">

                            <expr_stmt pos:start="47:29" pos:end="47:59"><expr pos:start="47:29" pos:end="47:58"><call pos:start="47:29" pos:end="47:58"><name pos:start="47:29" pos:end="47:41"><name pos:start="47:29" pos:end="47:30">ac</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:41">apply_ltp</name></name><argument_list pos:start="47:42" pos:end="47:58">(<argument pos:start="47:43" pos:end="47:44"><expr pos:start="47:43" pos:end="47:44"><name pos:start="47:43" pos:end="47:44">ac</name></expr></argument>, <argument pos:start="47:47" pos:end="47:57"><expr pos:start="47:47" pos:end="47:57"><operator pos:start="47:47" pos:end="47:47">&amp;</operator><name pos:start="47:48" pos:end="47:57"><name pos:start="47:48" pos:end="47:50">che</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:54">ch</name><index pos:start="47:55" pos:end="47:57">[<expr pos:start="47:56" pos:end="47:56"><literal type="number" pos:start="47:56" pos:end="47:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="49:25" pos:end="51:59"><if pos:start="49:25" pos:end="51:59">if <condition pos:start="49:28" pos:end="49:75">(<expr pos:start="49:29" pos:end="49:74"><name pos:start="49:29" pos:end="49:38"><name pos:start="49:29" pos:end="49:31">che</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">ch</name><index pos:start="49:36" pos:end="49:38">[<expr pos:start="49:37" pos:end="49:37"><literal type="number" pos:start="49:37" pos:end="49:37">1</literal></expr>]</index></name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:54"><name pos:start="49:40" pos:end="49:42">ics</name><operator pos:start="49:43" pos:end="49:43">.</operator><name pos:start="49:44" pos:end="49:46">ltp</name><operator pos:start="49:47" pos:end="49:47">.</operator><name pos:start="49:48" pos:end="49:54">present</name></name> <operator pos:start="49:56" pos:end="49:57">&amp;&amp;</operator> <name pos:start="49:59" pos:end="49:62">type</name> <operator pos:start="49:64" pos:end="49:65">==</operator> <name pos:start="49:67" pos:end="49:74">TYPE_CPE</name></expr>)</condition><block type="pseudo" pos:start="51:29" pos:end="51:59"><block_content pos:start="51:29" pos:end="51:59">

                            <expr_stmt pos:start="51:29" pos:end="51:59"><expr pos:start="51:29" pos:end="51:58"><call pos:start="51:29" pos:end="51:58"><name pos:start="51:29" pos:end="51:41"><name pos:start="51:29" pos:end="51:30">ac</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:41">apply_ltp</name></name><argument_list pos:start="51:42" pos:end="51:58">(<argument pos:start="51:43" pos:end="51:44"><expr pos:start="51:43" pos:end="51:44"><name pos:start="51:43" pos:end="51:44">ac</name></expr></argument>, <argument pos:start="51:47" pos:end="51:57"><expr pos:start="51:47" pos:end="51:57"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:57"><name pos:start="51:48" pos:end="51:50">che</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:54">ch</name><index pos:start="51:55" pos:end="51:57">[<expr pos:start="51:56" pos:end="51:56"><literal type="number" pos:start="51:56" pos:end="51:56">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="57:17" pos:end="59:90"><if pos:start="57:17" pos:end="59:90">if <condition pos:start="57:20" pos:end="57:43">(<expr pos:start="57:21" pos:end="57:42"><name pos:start="57:21" pos:end="57:30"><name pos:start="57:21" pos:end="57:23">che</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:27">ch</name><index pos:start="57:28" pos:end="57:30">[<expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">0</literal></expr>]</index></name><operator pos:start="57:31" pos:end="57:31">.</operator><name pos:start="57:32" pos:end="57:42"><name pos:start="57:32" pos:end="57:34">tns</name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:42">present</name></name></expr>)</condition><block type="pseudo" pos:start="59:21" pos:end="59:90"><block_content pos:start="59:21" pos:end="59:90">

                    <expr_stmt pos:start="59:21" pos:end="59:90"><expr pos:start="59:21" pos:end="59:89"><call pos:start="59:21" pos:end="59:89"><name pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:22">ac</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:33">apply_tns</name></name><argument_list pos:start="59:34" pos:end="59:89">(<argument pos:start="59:35" pos:end="59:51"><expr pos:start="59:35" pos:end="59:51"><name pos:start="59:35" pos:end="59:44"><name pos:start="59:35" pos:end="59:37">che</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:41">ch</name><index pos:start="59:42" pos:end="59:44">[<expr pos:start="59:43" pos:end="59:43"><literal type="number" pos:start="59:43" pos:end="59:43">0</literal></expr>]</index></name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:51">coeffs</name></expr></argument>, <argument pos:start="59:54" pos:end="59:68"><expr pos:start="59:54" pos:end="59:68"><operator pos:start="59:54" pos:end="59:54">&amp;</operator><name pos:start="59:55" pos:end="59:64"><name pos:start="59:55" pos:end="59:57">che</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:61">ch</name><index pos:start="59:62" pos:end="59:64">[<expr pos:start="59:63" pos:end="59:63"><literal type="number" pos:start="59:63" pos:end="59:63">0</literal></expr>]</index></name><operator pos:start="59:65" pos:end="59:65">.</operator><name pos:start="59:66" pos:end="59:68">tns</name></expr></argument>, <argument pos:start="59:71" pos:end="59:85"><expr pos:start="59:71" pos:end="59:85"><operator pos:start="59:71" pos:end="59:71">&amp;</operator><name pos:start="59:72" pos:end="59:81"><name pos:start="59:72" pos:end="59:74">che</name><operator pos:start="59:75" pos:end="59:76">-&gt;</operator><name pos:start="59:77" pos:end="59:78">ch</name><index pos:start="59:79" pos:end="59:81">[<expr pos:start="59:80" pos:end="59:80"><literal type="number" pos:start="59:80" pos:end="59:80">0</literal></expr>]</index></name><operator pos:start="59:82" pos:end="59:82">.</operator><name pos:start="59:83" pos:end="59:85">ics</name></expr></argument>, <argument pos:start="59:88" pos:end="59:88"><expr pos:start="59:88" pos:end="59:88"><literal type="number" pos:start="59:88" pos:end="59:88">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="61:17" pos:end="63:90"><if pos:start="61:17" pos:end="63:90">if <condition pos:start="61:20" pos:end="61:43">(<expr pos:start="61:21" pos:end="61:42"><name pos:start="61:21" pos:end="61:30"><name pos:start="61:21" pos:end="61:23">che</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:27">ch</name><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr>]</index></name><operator pos:start="61:31" pos:end="61:31">.</operator><name pos:start="61:32" pos:end="61:42"><name pos:start="61:32" pos:end="61:34">tns</name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:42">present</name></name></expr>)</condition><block type="pseudo" pos:start="63:21" pos:end="63:90"><block_content pos:start="63:21" pos:end="63:90">

                    <expr_stmt pos:start="63:21" pos:end="63:90"><expr pos:start="63:21" pos:end="63:89"><call pos:start="63:21" pos:end="63:89"><name pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:22">ac</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:33">apply_tns</name></name><argument_list pos:start="63:34" pos:end="63:89">(<argument pos:start="63:35" pos:end="63:51"><expr pos:start="63:35" pos:end="63:51"><name pos:start="63:35" pos:end="63:44"><name pos:start="63:35" pos:end="63:37">che</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:41">ch</name><index pos:start="63:42" pos:end="63:44">[<expr pos:start="63:43" pos:end="63:43"><literal type="number" pos:start="63:43" pos:end="63:43">1</literal></expr>]</index></name><operator pos:start="63:45" pos:end="63:45">.</operator><name pos:start="63:46" pos:end="63:51">coeffs</name></expr></argument>, <argument pos:start="63:54" pos:end="63:68"><expr pos:start="63:54" pos:end="63:68"><operator pos:start="63:54" pos:end="63:54">&amp;</operator><name pos:start="63:55" pos:end="63:64"><name pos:start="63:55" pos:end="63:57">che</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:61">ch</name><index pos:start="63:62" pos:end="63:64">[<expr pos:start="63:63" pos:end="63:63"><literal type="number" pos:start="63:63" pos:end="63:63">1</literal></expr>]</index></name><operator pos:start="63:65" pos:end="63:65">.</operator><name pos:start="63:66" pos:end="63:68">tns</name></expr></argument>, <argument pos:start="63:71" pos:end="63:85"><expr pos:start="63:71" pos:end="63:85"><operator pos:start="63:71" pos:end="63:71">&amp;</operator><name pos:start="63:72" pos:end="63:81"><name pos:start="63:72" pos:end="63:74">che</name><operator pos:start="63:75" pos:end="63:76">-&gt;</operator><name pos:start="63:77" pos:end="63:78">ch</name><index pos:start="63:79" pos:end="63:81">[<expr pos:start="63:80" pos:end="63:80"><literal type="number" pos:start="63:80" pos:end="63:80">1</literal></expr>]</index></name><operator pos:start="63:82" pos:end="63:82">.</operator><name pos:start="63:83" pos:end="63:85">ics</name></expr></argument>, <argument pos:start="63:88" pos:end="63:88"><expr pos:start="63:88" pos:end="63:88"><literal type="number" pos:start="63:88" pos:end="63:88">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="67:122"><if pos:start="65:17" pos:end="67:122">if <condition pos:start="65:20" pos:end="65:37">(<expr pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:24">type</name> <operator pos:start="65:26" pos:end="65:27">&lt;=</operator> <name pos:start="65:29" pos:end="65:36">TYPE_CPE</name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:122"><block_content pos:start="67:21" pos:end="67:122">

                    <expr_stmt pos:start="67:21" pos:end="67:122"><expr pos:start="67:21" pos:end="67:121"><call pos:start="67:21" pos:end="67:121"><name pos:start="67:21" pos:end="67:42">apply_channel_coupling</name><argument_list pos:start="67:43" pos:end="67:121">(<argument pos:start="67:44" pos:end="67:45"><expr pos:start="67:44" pos:end="67:45"><name pos:start="67:44" pos:end="67:45">ac</name></expr></argument>, <argument pos:start="67:48" pos:end="67:50"><expr pos:start="67:48" pos:end="67:50"><name pos:start="67:48" pos:end="67:50">che</name></expr></argument>, <argument pos:start="67:53" pos:end="67:56"><expr pos:start="67:53" pos:end="67:56"><name pos:start="67:53" pos:end="67:56">type</name></expr></argument>, <argument pos:start="67:59" pos:end="67:59"><expr pos:start="67:59" pos:end="67:59"><name pos:start="67:59" pos:end="67:59">i</name></expr></argument>, <argument pos:start="67:62" pos:end="67:82"><expr pos:start="67:62" pos:end="67:82"><name pos:start="67:62" pos:end="67:82">BETWEEN_TNS_AND_IMDCT</name></expr></argument>, <argument pos:start="67:85" pos:end="67:120"><expr pos:start="67:85" pos:end="67:120"><call pos:start="67:85" pos:end="67:120"><name pos:start="67:85" pos:end="67:94">AAC_RENAME</name><argument_list pos:start="67:95" pos:end="67:120">(<argument pos:start="67:96" pos:end="67:119"><expr pos:start="67:96" pos:end="67:119"><name pos:start="67:96" pos:end="67:119">apply_dependent_coupling</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="69:17" pos:end="93:17"><if pos:start="69:17" pos:end="93:17">if <condition pos:start="69:20" pos:end="69:80">(<expr pos:start="69:21" pos:end="69:79"><name pos:start="69:21" pos:end="69:24">type</name> <operator pos:start="69:26" pos:end="69:27">!=</operator> <name pos:start="69:29" pos:end="69:36">TYPE_CCE</name> <operator pos:start="69:38" pos:end="69:39">||</operator> <name pos:start="69:41" pos:end="69:64"><name pos:start="69:41" pos:end="69:43">che</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:49">coup</name><operator pos:start="69:50" pos:end="69:50">.</operator><name pos:start="69:51" pos:end="69:64">coupling_point</name></name> <operator pos:start="69:66" pos:end="69:67">==</operator> <name pos:start="69:69" pos:end="69:79">AFTER_IMDCT</name></expr>)</condition> <block pos:start="69:82" pos:end="93:17">{<block_content pos:start="71:21" pos:end="91:21">

                    <expr_stmt pos:start="71:21" pos:end="71:54"><expr pos:start="71:21" pos:end="71:53"><call pos:start="71:21" pos:end="71:53"><name pos:start="71:21" pos:end="71:36">imdct_and_window</name><argument_list pos:start="71:37" pos:end="71:53">(<argument pos:start="71:38" pos:end="71:39"><expr pos:start="71:38" pos:end="71:39"><name pos:start="71:38" pos:end="71:39">ac</name></expr></argument>, <argument pos:start="71:42" pos:end="71:52"><expr pos:start="71:42" pos:end="71:52"><operator pos:start="71:42" pos:end="71:42">&amp;</operator><name pos:start="71:43" pos:end="71:52"><name pos:start="71:43" pos:end="71:45">che</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:49">ch</name><index pos:start="71:50" pos:end="71:52">[<expr pos:start="71:51" pos:end="71:51"><literal type="number" pos:start="71:51" pos:end="71:51">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="73:21" pos:end="75:56"><if pos:start="73:21" pos:end="75:56">if <condition pos:start="73:24" pos:end="73:66">(<expr pos:start="73:25" pos:end="73:65"><name pos:start="73:25" pos:end="73:33"><name pos:start="73:25" pos:end="73:26">ac</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:30">oc</name><index pos:start="73:31" pos:end="73:33">[<expr pos:start="73:32" pos:end="73:32"><literal type="number" pos:start="73:32" pos:end="73:32">1</literal></expr>]</index></name><operator pos:start="73:34" pos:end="73:34">.</operator><name pos:start="73:35" pos:end="73:50"><name pos:start="73:35" pos:end="73:38">m4ac</name><operator pos:start="73:39" pos:end="73:39">.</operator><name pos:start="73:40" pos:end="73:50">object_type</name></name> <operator pos:start="73:52" pos:end="73:53">==</operator> <name pos:start="73:55" pos:end="73:65">AOT_AAC_LTP</name></expr>)</condition><block type="pseudo" pos:start="75:25" pos:end="75:56"><block_content pos:start="75:25" pos:end="75:56">

                        <expr_stmt pos:start="75:25" pos:end="75:56"><expr pos:start="75:25" pos:end="75:55"><call pos:start="75:25" pos:end="75:55"><name pos:start="75:25" pos:end="75:38"><name pos:start="75:25" pos:end="75:26">ac</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:38">update_ltp</name></name><argument_list pos:start="75:39" pos:end="75:55">(<argument pos:start="75:40" pos:end="75:41"><expr pos:start="75:40" pos:end="75:41"><name pos:start="75:40" pos:end="75:41">ac</name></expr></argument>, <argument pos:start="75:44" pos:end="75:54"><expr pos:start="75:44" pos:end="75:54"><operator pos:start="75:44" pos:end="75:44">&amp;</operator><name pos:start="75:45" pos:end="75:54"><name pos:start="75:45" pos:end="75:47">che</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:51">ch</name><index pos:start="75:52" pos:end="75:54">[<expr pos:start="75:53" pos:end="75:53"><literal type="number" pos:start="75:53" pos:end="75:53">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="77:21" pos:end="85:21"><if pos:start="77:21" pos:end="85:21">if <condition pos:start="77:24" pos:end="77:41">(<expr pos:start="77:25" pos:end="77:40"><name pos:start="77:25" pos:end="77:28">type</name> <operator pos:start="77:30" pos:end="77:31">==</operator> <name pos:start="77:33" pos:end="77:40">TYPE_CPE</name></expr>)</condition> <block pos:start="77:43" pos:end="85:21">{<block_content pos:start="79:25" pos:end="83:60">

                        <expr_stmt pos:start="79:25" pos:end="79:58"><expr pos:start="79:25" pos:end="79:57"><call pos:start="79:25" pos:end="79:57"><name pos:start="79:25" pos:end="79:40">imdct_and_window</name><argument_list pos:start="79:41" pos:end="79:57">(<argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">ac</name></expr></argument>, <argument pos:start="79:46" pos:end="79:56"><expr pos:start="79:46" pos:end="79:56"><operator pos:start="79:46" pos:end="79:46">&amp;</operator><name pos:start="79:47" pos:end="79:56"><name pos:start="79:47" pos:end="79:49">che</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:53">ch</name><index pos:start="79:54" pos:end="79:56">[<expr pos:start="79:55" pos:end="79:55"><literal type="number" pos:start="79:55" pos:end="79:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="81:25" pos:end="83:60"><if pos:start="81:25" pos:end="83:60">if <condition pos:start="81:28" pos:end="81:70">(<expr pos:start="81:29" pos:end="81:69"><name pos:start="81:29" pos:end="81:37"><name pos:start="81:29" pos:end="81:30">ac</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:34">oc</name><index pos:start="81:35" pos:end="81:37">[<expr pos:start="81:36" pos:end="81:36"><literal type="number" pos:start="81:36" pos:end="81:36">1</literal></expr>]</index></name><operator pos:start="81:38" pos:end="81:38">.</operator><name pos:start="81:39" pos:end="81:54"><name pos:start="81:39" pos:end="81:42">m4ac</name><operator pos:start="81:43" pos:end="81:43">.</operator><name pos:start="81:44" pos:end="81:54">object_type</name></name> <operator pos:start="81:56" pos:end="81:57">==</operator> <name pos:start="81:59" pos:end="81:69">AOT_AAC_LTP</name></expr>)</condition><block type="pseudo" pos:start="83:29" pos:end="83:60"><block_content pos:start="83:29" pos:end="83:60">

                            <expr_stmt pos:start="83:29" pos:end="83:60"><expr pos:start="83:29" pos:end="83:59"><call pos:start="83:29" pos:end="83:59"><name pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:30">ac</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:42">update_ltp</name></name><argument_list pos:start="83:43" pos:end="83:59">(<argument pos:start="83:44" pos:end="83:45"><expr pos:start="83:44" pos:end="83:45"><name pos:start="83:44" pos:end="83:45">ac</name></expr></argument>, <argument pos:start="83:48" pos:end="83:58"><expr pos:start="83:48" pos:end="83:58"><operator pos:start="83:48" pos:end="83:48">&amp;</operator><name pos:start="83:49" pos:end="83:58"><name pos:start="83:49" pos:end="83:51">che</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:55">ch</name><index pos:start="83:56" pos:end="83:58">[<expr pos:start="83:57" pos:end="83:57"><literal type="number" pos:start="83:57" pos:end="83:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="87:21" pos:end="91:21"><if pos:start="87:21" pos:end="91:21">if <condition pos:start="87:24" pos:end="87:47">(<expr pos:start="87:25" pos:end="87:46"><name pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:26">ac</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:30">oc</name><index pos:start="87:31" pos:end="87:33">[<expr pos:start="87:32" pos:end="87:32"><literal type="number" pos:start="87:32" pos:end="87:32">1</literal></expr>]</index></name><operator pos:start="87:34" pos:end="87:34">.</operator><name pos:start="87:35" pos:end="87:42"><name pos:start="87:35" pos:end="87:38">m4ac</name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:42">sbr</name></name> <operator pos:start="87:44" pos:end="87:44">&gt;</operator> <literal type="number" pos:start="87:46" pos:end="87:46">0</literal></expr>)</condition> <block pos:start="87:49" pos:end="91:21">{<block_content pos:start="89:25" pos:end="89:102">

                        <expr_stmt pos:start="89:25" pos:end="89:102"><expr pos:start="89:25" pos:end="89:101"><call pos:start="89:25" pos:end="89:101"><call pos:start="89:25" pos:end="89:48"><name pos:start="89:25" pos:end="89:34">AAC_RENAME</name><argument_list pos:start="89:35" pos:end="89:48">(<argument pos:start="89:36" pos:end="89:47"><expr pos:start="89:36" pos:end="89:47"><name pos:start="89:36" pos:end="89:47">ff_sbr_apply</name></expr></argument>)</argument_list></call><argument_list pos:start="89:49" pos:end="89:101">(<argument pos:start="89:50" pos:end="89:51"><expr pos:start="89:50" pos:end="89:51"><name pos:start="89:50" pos:end="89:51">ac</name></expr></argument>, <argument pos:start="89:54" pos:end="89:62"><expr pos:start="89:54" pos:end="89:62"><operator pos:start="89:54" pos:end="89:54">&amp;</operator><name pos:start="89:55" pos:end="89:62"><name pos:start="89:55" pos:end="89:57">che</name><operator pos:start="89:58" pos:end="89:59">-&gt;</operator><name pos:start="89:60" pos:end="89:62">sbr</name></name></expr></argument>, <argument pos:start="89:65" pos:end="89:68"><expr pos:start="89:65" pos:end="89:68"><name pos:start="89:65" pos:end="89:68">type</name></expr></argument>, <argument pos:start="89:71" pos:end="89:84"><expr pos:start="89:71" pos:end="89:84"><name pos:start="89:71" pos:end="89:80"><name pos:start="89:71" pos:end="89:73">che</name><operator pos:start="89:74" pos:end="89:75">-&gt;</operator><name pos:start="89:76" pos:end="89:77">ch</name><index pos:start="89:78" pos:end="89:80">[<expr pos:start="89:79" pos:end="89:79"><literal type="number" pos:start="89:79" pos:end="89:79">0</literal></expr>]</index></name><operator pos:start="89:81" pos:end="89:81">.</operator><name pos:start="89:82" pos:end="89:84">ret</name></expr></argument>, <argument pos:start="89:87" pos:end="89:100"><expr pos:start="89:87" pos:end="89:100"><name pos:start="89:87" pos:end="89:96"><name pos:start="89:87" pos:end="89:89">che</name><operator pos:start="89:90" pos:end="89:91">-&gt;</operator><name pos:start="89:92" pos:end="89:93">ch</name><index pos:start="89:94" pos:end="89:96">[<expr pos:start="89:95" pos:end="89:95"><literal type="number" pos:start="89:95" pos:end="89:95">1</literal></expr>]</index></name><operator pos:start="89:97" pos:end="89:97">.</operator><name pos:start="89:98" pos:end="89:100">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="95:17" pos:end="102:0"><if pos:start="95:17" pos:end="102:0">if <condition pos:start="95:20" pos:end="95:37">(<expr pos:start="95:21" pos:end="95:36"><name pos:start="95:21" pos:end="95:24">type</name> <operator pos:start="95:26" pos:end="95:27">&lt;=</operator> <name pos:start="95:29" pos:end="95:36">TYPE_CCE</name></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="102:0"><block_content pos:start="97:21" pos:end="102:0">

                    <expr_stmt pos:start="97:21" pos:end="102:0"><expr pos:start="97:21" pos:end="97:113"><call pos:start="97:21" pos:end="97:113"><name pos:start="97:21" pos:end="97:42">apply_channel_coupling</name><argument_list pos:start="97:43" pos:end="97:113">(<argument pos:start="97:44" pos:end="97:45"><expr pos:start="97:44" pos:end="97:45"><name pos:start="97:44" pos:end="97:45">ac</name></expr></argument>, <argument pos:start="97:48" pos:end="97:50"><expr pos:start="97:48" pos:end="97:50"><name pos:start="97:48" pos:end="97:50">che</name></expr></argument>, <argument pos:start="97:53" pos:end="97:56"><expr pos:start="97:53" pos:end="97:56"><name pos:start="97:53" pos:end="97:56">type</name></expr></argument>, <argument pos:start="97:59" pos:end="97:59"><expr pos:start="97:59" pos:end="97:59"><name pos:start="97:59" pos:end="97:59">i</name></expr></argument>, <argument pos:start="97:62" pos:end="97:72"><expr pos:start="97:62" pos:end="97:72"><name pos:start="97:62" pos:end="97:72">AFTER_IMDCT</name></expr></argument>, <argument pos:start="97:75" pos:end="97:112"><expr pos:start="97:75" pos:end="97:112"><call pos:start="97:75" pos:end="97:112"><name pos:start="97:75" pos:end="97:84">AAC_RENAME</name><argument_list pos:start="97:85" pos:end="97:112">(<argument pos:start="97:86" pos:end="97:111"><expr pos:start="97:86" pos:end="97:111"><name pos:start="97:86" pos:end="97:111">apply_independent_coupling</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="101:1" pos:end="101:13">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:13"><name pos:start="101:5" pos:end="101:13">USE_FIXED</name></expr></cpp:if>

                <block pos:start="103:17" pos:end="120:0">{<block_content pos:start="105:21" pos:end="115:21">

                    <decl_stmt pos:start="105:21" pos:end="105:26"><decl pos:start="105:21" pos:end="105:25"><type pos:start="105:21" pos:end="105:23"><name pos:start="105:21" pos:end="105:23">int</name></type> <name pos:start="105:25" pos:end="105:25">j</name></decl>;</decl_stmt>

                    <comment type="block" pos:start="107:21" pos:end="107:51">/* preparation for resampler */</comment>

                    <for pos:start="109:21" pos:end="115:21">for<control pos:start="109:24" pos:end="109:43">(<init pos:start="109:25" pos:end="109:30"><expr pos:start="109:25" pos:end="109:29"><name pos:start="109:25" pos:end="109:25">j</name> <operator pos:start="109:27" pos:end="109:27">=</operator> <literal type="number" pos:start="109:29" pos:end="109:29">0</literal></expr>;</init> <condition pos:start="109:32" pos:end="109:38"><expr pos:start="109:32" pos:end="109:37"><name pos:start="109:32" pos:end="109:32">j</name><operator pos:start="109:33" pos:end="109:33">&lt;</operator><literal type="number" pos:start="109:34" pos:end="109:37">2048</literal></expr>;</condition> <incr pos:start="109:40" pos:end="109:42"><expr pos:start="109:40" pos:end="109:42"><name pos:start="109:40" pos:end="109:40">j</name><operator pos:start="109:41" pos:end="109:42">++</operator></expr></incr>)</control><block pos:start="109:44" pos:end="115:21">{<block_content pos:start="111:25" pos:end="113:106">

                        <expr_stmt pos:start="111:25" pos:end="111:106"><expr pos:start="111:25" pos:end="111:105"><name pos:start="111:25" pos:end="111:34"><name pos:start="111:25" pos:end="111:27">che</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:31">ch</name><index pos:start="111:32" pos:end="111:34">[<expr pos:start="111:33" pos:end="111:33"><literal type="number" pos:start="111:33" pos:end="111:33">0</literal></expr>]</index></name><operator pos:start="111:35" pos:end="111:35">.</operator><name pos:start="111:36" pos:end="111:41"><name pos:start="111:36" pos:end="111:38">ret</name><index pos:start="111:39" pos:end="111:41">[<expr pos:start="111:40" pos:end="111:40"><name pos:start="111:40" pos:end="111:40">j</name></expr>]</index></name> <operator pos:start="111:43" pos:end="111:43">=</operator> <operator pos:start="111:45" pos:end="111:45">(</operator><name pos:start="111:46" pos:end="111:52">int32_t</name><operator pos:start="111:53" pos:end="111:53">)</operator><call pos:start="111:54" pos:end="111:98"><name pos:start="111:54" pos:end="111:67">av_clipl_int32</name><argument_list pos:start="111:68" pos:end="111:98">(<argument pos:start="111:69" pos:end="111:97"><expr pos:start="111:69" pos:end="111:97"><operator pos:start="111:69" pos:end="111:69">(</operator><name pos:start="111:70" pos:end="111:76">int64_t</name><operator pos:start="111:77" pos:end="111:77">)</operator><name pos:start="111:78" pos:end="111:87"><name pos:start="111:78" pos:end="111:80">che</name><operator pos:start="111:81" pos:end="111:82">-&gt;</operator><name pos:start="111:83" pos:end="111:84">ch</name><index pos:start="111:85" pos:end="111:87">[<expr pos:start="111:86" pos:end="111:86"><literal type="number" pos:start="111:86" pos:end="111:86">0</literal></expr>]</index></name><operator pos:start="111:88" pos:end="111:88">.</operator><name pos:start="111:89" pos:end="111:94"><name pos:start="111:89" pos:end="111:91">ret</name><index pos:start="111:92" pos:end="111:94">[<expr pos:start="111:93" pos:end="111:93"><name pos:start="111:93" pos:end="111:93">j</name></expr>]</index></name><operator pos:start="111:95" pos:end="111:96">&lt;&lt;</operator><literal type="number" pos:start="111:97" pos:end="111:97">7</literal></expr></argument>)</argument_list></call><operator pos:start="111:99" pos:end="111:99">+</operator><literal type="number" pos:start="111:100" pos:end="111:105">0x8000</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="113:25" pos:end="113:106"><expr pos:start="113:25" pos:end="113:105"><name pos:start="113:25" pos:end="113:34"><name pos:start="113:25" pos:end="113:27">che</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:31">ch</name><index pos:start="113:32" pos:end="113:34">[<expr pos:start="113:33" pos:end="113:33"><literal type="number" pos:start="113:33" pos:end="113:33">1</literal></expr>]</index></name><operator pos:start="113:35" pos:end="113:35">.</operator><name pos:start="113:36" pos:end="113:41"><name pos:start="113:36" pos:end="113:38">ret</name><index pos:start="113:39" pos:end="113:41">[<expr pos:start="113:40" pos:end="113:40"><name pos:start="113:40" pos:end="113:40">j</name></expr>]</index></name> <operator pos:start="113:43" pos:end="113:43">=</operator> <operator pos:start="113:45" pos:end="113:45">(</operator><name pos:start="113:46" pos:end="113:52">int32_t</name><operator pos:start="113:53" pos:end="113:53">)</operator><call pos:start="113:54" pos:end="113:98"><name pos:start="113:54" pos:end="113:67">av_clipl_int32</name><argument_list pos:start="113:68" pos:end="113:98">(<argument pos:start="113:69" pos:end="113:97"><expr pos:start="113:69" pos:end="113:97"><operator pos:start="113:69" pos:end="113:69">(</operator><name pos:start="113:70" pos:end="113:76">int64_t</name><operator pos:start="113:77" pos:end="113:77">)</operator><name pos:start="113:78" pos:end="113:87"><name pos:start="113:78" pos:end="113:80">che</name><operator pos:start="113:81" pos:end="113:82">-&gt;</operator><name pos:start="113:83" pos:end="113:84">ch</name><index pos:start="113:85" pos:end="113:87">[<expr pos:start="113:86" pos:end="113:86"><literal type="number" pos:start="113:86" pos:end="113:86">1</literal></expr>]</index></name><operator pos:start="113:88" pos:end="113:88">.</operator><name pos:start="113:89" pos:end="113:94"><name pos:start="113:89" pos:end="113:91">ret</name><index pos:start="113:92" pos:end="113:94">[<expr pos:start="113:93" pos:end="113:93"><name pos:start="113:93" pos:end="113:93">j</name></expr>]</index></name><operator pos:start="113:95" pos:end="113:96">&lt;&lt;</operator><literal type="number" pos:start="113:97" pos:end="113:97">7</literal></expr></argument>)</argument_list></call><operator pos:start="113:99" pos:end="113:99">+</operator><literal type="number" pos:start="113:100" pos:end="113:105">0x8000</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="119:8" pos:end="119:22">/* USE_FIXED */</comment>

                <expr_stmt pos:start="121:17" pos:end="121:33"><expr pos:start="121:17" pos:end="121:32"><name pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:19">che</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:28">present</name></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <literal type="number" pos:start="121:32" pos:end="121:32">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="123:15" pos:end="127:13">else if <condition pos:start="123:23" pos:end="123:27">(<expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">che</name></expr>)</condition> <block pos:start="123:29" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:94">

                <expr_stmt pos:start="125:17" pos:end="125:94"><expr pos:start="125:17" pos:end="125:93"><call pos:start="125:17" pos:end="125:93"><name pos:start="125:17" pos:end="125:22">av_log</name><argument_list pos:start="125:23" pos:end="125:93">(<argument pos:start="125:24" pos:end="125:32"><expr pos:start="125:24" pos:end="125:32"><name pos:start="125:24" pos:end="125:32"><name pos:start="125:24" pos:end="125:25">ac</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:32">avctx</name></name></expr></argument>, <argument pos:start="125:35" pos:end="125:48"><expr pos:start="125:35" pos:end="125:48"><name pos:start="125:35" pos:end="125:48">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="125:51" pos:end="125:83"><expr pos:start="125:51" pos:end="125:83"><literal type="string" pos:start="125:51" pos:end="125:83">"ChannelElement %d.%d missing \n"</literal></expr></argument>, <argument pos:start="125:86" pos:end="125:89"><expr pos:start="125:86" pos:end="125:89"><name pos:start="125:86" pos:end="125:89">type</name></expr></argument>, <argument pos:start="125:92" pos:end="125:92"><expr pos:start="125:92" pos:end="125:92"><name pos:start="125:92" pos:end="125:92">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
