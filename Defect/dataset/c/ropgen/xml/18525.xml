<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18525.c" pos:tabs="8"><function pos:start="1:1" pos:end="269:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">ff_wma_init</name><parameter_list pos:start="1:16" pos:end="1:51">(<parameter pos:start="1:17" pos:end="1:38"><decl pos:start="1:17" pos:end="1:38"><type pos:start="1:17" pos:end="1:38"><name pos:start="1:17" pos:end="1:30">AVCodecContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type> <name pos:start="1:34" pos:end="1:38">avctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:50">flags2</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="269:1">{<block_content pos:start="3:5" pos:end="268:13">
    <decl_stmt pos:start="3:5" pos:end="3:42"><decl pos:start="3:5" pos:end="3:41"><type pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:19">WMACodecContext</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:22">s</name> <init pos:start="3:24" pos:end="3:41">= <expr pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:30">avctx</name><operator pos:start="3:31" pos:end="3:32">-&gt;</operator><name pos:start="3:33" pos:end="3:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">float</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:17">window</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:26"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:9"><name pos:start="6:5" pos:end="6:9">float</name></type> <name pos:start="6:11" pos:end="6:14">bps1</name></decl>, <decl pos:start="6:17" pos:end="6:25"><type ref="prev" pos:start="6:5" pos:end="6:9"/><name pos:start="6:17" pos:end="6:25">high_freq</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><specifier pos:start="7:5" pos:end="7:12">volatile</specifier> <name pos:start="7:14" pos:end="7:18">float</name></type> <name pos:start="7:20" pos:end="7:22">bps</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:20"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:20">sample_rate1</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">coef_vlc_table</name></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:40"><expr pos:start="10:5" pos:end="10:39"><name pos:start="10:5" pos:end="10:18"><name pos:start="10:5" pos:end="10:5">s</name><operator pos:start="10:6" pos:end="10:7">-&gt;</operator><name pos:start="10:8" pos:end="10:18">sample_rate</name></name> <operator pos:start="10:20" pos:end="10:20">=</operator> <name pos:start="10:22" pos:end="10:39"><name pos:start="10:22" pos:end="10:26">avctx</name><operator pos:start="10:27" pos:end="10:28">-&gt;</operator><name pos:start="10:29" pos:end="10:39">sample_rate</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:18">nb_channels</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <name pos:start="11:22" pos:end="11:36"><name pos:start="11:22" pos:end="11:26">avctx</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:36">channels</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:34"><expr pos:start="12:5" pos:end="12:33"><name pos:start="12:5" pos:end="12:15"><name pos:start="12:5" pos:end="12:5">s</name><operator pos:start="12:6" pos:end="12:7">-&gt;</operator><name pos:start="12:8" pos:end="12:15">bit_rate</name></name> <operator pos:start="12:17" pos:end="12:17">=</operator> <name pos:start="12:19" pos:end="12:33"><name pos:start="12:19" pos:end="12:23">avctx</name><operator pos:start="12:24" pos:end="12:25">-&gt;</operator><name pos:start="12:26" pos:end="12:33">bit_rate</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:18">block_align</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:39"><name pos:start="13:22" pos:end="13:26">avctx</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:39">block_align</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:33"><expr pos:start="14:5" pos:end="14:32"><call pos:start="14:5" pos:end="14:32"><name pos:start="14:5" pos:end="14:16">dsputil_init</name><argument_list pos:start="14:17" pos:end="14:32">(<argument pos:start="14:18" pos:end="14:24"><expr pos:start="14:18" pos:end="14:24"><operator pos:start="14:18" pos:end="14:18">&amp;</operator><name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">s</name><operator pos:start="14:20" pos:end="14:21">-&gt;</operator><name pos:start="14:22" pos:end="14:24">dsp</name></name></expr></argument>, <argument pos:start="14:27" pos:end="14:31"><expr pos:start="14:27" pos:end="14:31"><name pos:start="14:27" pos:end="14:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="17:5">if <condition pos:start="15:8" pos:end="15:43">(<expr pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">codec</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">id</name></name> <operator pos:start="15:26" pos:end="15:27">==</operator> <name pos:start="15:29" pos:end="15:42">CODEC_ID_WMAV1</name></expr>)</condition> <block pos:start="15:45" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:23">
        <expr_stmt pos:start="16:9" pos:end="16:23"><expr pos:start="16:9" pos:end="16:22"><name pos:start="16:9" pos:end="16:18"><name pos:start="16:9" pos:end="16:9">s</name><operator pos:start="16:10" pos:end="16:11">-&gt;</operator><name pos:start="16:12" pos:end="16:18">version</name></name> <operator pos:start="16:20" pos:end="16:20">=</operator> <literal type="number" pos:start="16:22" pos:end="16:22">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="17:7" pos:end="19:5">else <block pos:start="17:12" pos:end="19:5">{<block_content pos:start="18:9" pos:end="18:23">
        <expr_stmt pos:start="18:9" pos:end="18:23"><expr pos:start="18:9" pos:end="18:22"><name pos:start="18:9" pos:end="18:18"><name pos:start="18:9" pos:end="18:9">s</name><operator pos:start="18:10" pos:end="18:11">-&gt;</operator><name pos:start="18:12" pos:end="18:18">version</name></name> <operator pos:start="18:20" pos:end="18:20">=</operator> <literal type="number" pos:start="18:22" pos:end="18:22">2</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <comment type="block" pos:start="20:5" pos:end="20:33">/* compute MDCT block size */</comment>
    <if_stmt pos:start="21:5" pos:end="28:5"><if pos:start="21:5" pos:end="23:5">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">sample_rate</name></name> <operator pos:start="21:24" pos:end="21:25">&lt;=</operator> <literal type="number" pos:start="21:27" pos:end="21:31">16000</literal></expr>)</condition> <block pos:start="21:34" pos:end="23:5">{<block_content pos:start="22:9" pos:end="22:30">
        <expr_stmt pos:start="22:9" pos:end="22:30"><expr pos:start="22:9" pos:end="22:29"><name pos:start="22:9" pos:end="22:25"><name pos:start="22:9" pos:end="22:9">s</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:25">frame_len_bits</name></name> <operator pos:start="22:27" pos:end="22:27">=</operator> <literal type="number" pos:start="22:29" pos:end="22:29">9</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="26:5">else if <condition pos:start="23:15" pos:end="24:60">(<expr pos:start="23:16" pos:end="24:59"><name pos:start="23:16" pos:end="23:29"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:29">sample_rate</name></name> <operator pos:start="23:31" pos:end="23:32">&lt;=</operator> <literal type="number" pos:start="23:34" pos:end="23:38">22050</literal> <operator pos:start="23:40" pos:end="23:41">||</operator>
               <operator pos:start="24:16" pos:end="24:16">(</operator><name pos:start="24:17" pos:end="24:30"><name pos:start="24:17" pos:end="24:17">s</name><operator pos:start="24:18" pos:end="24:19">-&gt;</operator><name pos:start="24:20" pos:end="24:30">sample_rate</name></name> <operator pos:start="24:32" pos:end="24:33">&lt;=</operator> <literal type="number" pos:start="24:35" pos:end="24:39">32000</literal> <operator pos:start="24:41" pos:end="24:42">&amp;&amp;</operator> <name pos:start="24:44" pos:end="24:53"><name pos:start="24:44" pos:end="24:44">s</name><operator pos:start="24:45" pos:end="24:46">-&gt;</operator><name pos:start="24:47" pos:end="24:53">version</name></name> <operator pos:start="24:55" pos:end="24:56">==</operator> <literal type="number" pos:start="24:58" pos:end="24:58">1</literal><operator pos:start="24:59" pos:end="24:59">)</operator></expr>)</condition> <block pos:start="24:62" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:31">
        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:25">frame_len_bits</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <literal type="number" pos:start="25:29" pos:end="25:30">10</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="26:7" pos:end="28:5">else <block pos:start="26:12" pos:end="28:5">{<block_content pos:start="27:9" pos:end="27:31">
        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">frame_len_bits</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:30">11</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">frame_len</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <name pos:start="29:25" pos:end="29:41"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:41">frame_len_bits</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="30:5" pos:end="41:5"><if pos:start="30:5" pos:end="39:5">if <condition pos:start="30:8" pos:end="30:34">(<expr pos:start="30:9" pos:end="30:33"><name pos:start="30:9" pos:end="30:33"><name pos:start="30:9" pos:end="30:9">s</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:33">use_variable_block_len</name></name></expr>)</condition> <block pos:start="30:36" pos:end="39:5">{<block_content pos:start="31:9" pos:end="38:35">
        <decl_stmt pos:start="31:9" pos:end="31:23"><decl pos:start="31:9" pos:end="31:18"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:18">nb_max</name></decl>, <decl pos:start="31:21" pos:end="31:22"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:21" pos:end="31:22">nb</name></decl>;</decl_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:37"><expr pos:start="32:9" pos:end="32:36"><name pos:start="32:9" pos:end="32:10">nb</name> <operator pos:start="32:12" pos:end="32:12">=</operator> <operator pos:start="32:14" pos:end="32:14">(</operator><operator pos:start="32:15" pos:end="32:15">(</operator><name pos:start="32:16" pos:end="32:21">flags2</name> <operator pos:start="32:23" pos:end="32:24">&gt;&gt;</operator> <literal type="number" pos:start="32:26" pos:end="32:26">3</literal><operator pos:start="32:27" pos:end="32:27">)</operator> <operator pos:start="32:29" pos:end="32:29">&amp;</operator> <literal type="number" pos:start="32:31" pos:end="32:31">3</literal><operator pos:start="32:32" pos:end="32:32">)</operator> <operator pos:start="32:34" pos:end="32:34">+</operator> <literal type="number" pos:start="32:36" pos:end="32:36">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="33:9" pos:end="34:20"><if pos:start="33:9" pos:end="34:20">if <condition pos:start="33:12" pos:end="33:52">(<expr pos:start="33:13" pos:end="33:51"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:24">bit_rate</name></name> <operator pos:start="33:26" pos:end="33:26">/</operator> <name pos:start="33:28" pos:end="33:41"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:41">nb_channels</name></name><operator pos:start="33:42" pos:end="33:42">)</operator> <operator pos:start="33:44" pos:end="33:45">&gt;=</operator> <literal type="number" pos:start="33:47" pos:end="33:51">32000</literal></expr>)</condition><block type="pseudo" pos:start="34:13" pos:end="34:20"><block_content pos:start="34:13" pos:end="34:20">
            <expr_stmt pos:start="34:13" pos:end="34:20"><expr pos:start="34:13" pos:end="34:19"><name pos:start="34:13" pos:end="34:14">nb</name> <operator pos:start="34:16" pos:end="34:17">+=</operator> <literal type="number" pos:start="34:19" pos:end="34:19">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:14">nb_max</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:34"><name pos:start="35:18" pos:end="35:18">s</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:34">frame_len_bits</name></name> <operator pos:start="35:36" pos:end="35:36">-</operator> <name pos:start="35:38" pos:end="35:51">BLOCK_MIN_BITS</name></expr>;</expr_stmt>
        <if_stmt pos:start="36:9" pos:end="37:24"><if pos:start="36:9" pos:end="37:24">if <condition pos:start="36:12" pos:end="36:24">(<expr pos:start="36:13" pos:end="36:23"><name pos:start="36:13" pos:end="36:14">nb</name> <operator pos:start="36:16" pos:end="36:16">&gt;</operator> <name pos:start="36:18" pos:end="36:23">nb_max</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:24"><block_content pos:start="37:13" pos:end="37:24">
            <expr_stmt pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:14">nb</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:23">nb_max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:35"><expr pos:start="38:9" pos:end="38:34"><name pos:start="38:9" pos:end="38:25"><name pos:start="38:9" pos:end="38:9">s</name><operator pos:start="38:10" pos:end="38:11">-&gt;</operator><name pos:start="38:12" pos:end="38:25">nb_block_sizes</name></name> <operator pos:start="38:27" pos:end="38:27">=</operator> <name pos:start="38:29" pos:end="38:30">nb</name> <operator pos:start="38:32" pos:end="38:32">+</operator> <literal type="number" pos:start="38:34" pos:end="38:34">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="39:7" pos:end="41:5">else <block pos:start="39:12" pos:end="41:5">{<block_content pos:start="40:9" pos:end="40:30">
        <expr_stmt pos:start="40:9" pos:end="40:30"><expr pos:start="40:9" pos:end="40:29"><name pos:start="40:9" pos:end="40:25"><name pos:start="40:9" pos:end="40:9">s</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:25">nb_block_sizes</name></name> <operator pos:start="40:27" pos:end="40:27">=</operator> <literal type="number" pos:start="40:29" pos:end="40:29">1</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <comment type="block" pos:start="42:5" pos:end="42:40">/* init rate dependent parameters */</comment>
    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:23">use_noise_coding</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <literal type="number" pos:start="43:27" pos:end="43:27">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:37"><expr pos:start="44:5" pos:end="44:36"><name pos:start="44:5" pos:end="44:13">high_freq</name> <operator pos:start="44:15" pos:end="44:15">=</operator> <name pos:start="44:17" pos:end="44:30"><name pos:start="44:17" pos:end="44:17">s</name><operator pos:start="44:18" pos:end="44:19">-&gt;</operator><name pos:start="44:20" pos:end="44:30">sample_rate</name></name> <operator pos:start="44:32" pos:end="44:32">*</operator> <literal type="number" pos:start="44:34" pos:end="44:36">0.5</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="45:5" pos:end="45:53">/* if version 2, then the rates are normalized */</comment>
    <expr_stmt pos:start="46:5" pos:end="46:34"><expr pos:start="46:5" pos:end="46:33"><name pos:start="46:5" pos:end="46:16">sample_rate1</name> <operator pos:start="46:18" pos:end="46:18">=</operator> <name pos:start="46:20" pos:end="46:33"><name pos:start="46:20" pos:end="46:20">s</name><operator pos:start="46:21" pos:end="46:22">-&gt;</operator><name pos:start="46:23" pos:end="46:33">sample_rate</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="47:5" pos:end="58:5"><if pos:start="47:5" pos:end="58:5">if <condition pos:start="47:8" pos:end="47:24">(<expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">version</name></name> <operator pos:start="47:20" pos:end="47:21">==</operator> <literal type="number" pos:start="47:23" pos:end="47:23">2</literal></expr>)</condition> <block pos:start="47:26" pos:end="58:5">{<block_content pos:start="48:9" pos:end="57:32">
        <if_stmt pos:start="48:9" pos:end="57:32"><if pos:start="48:9" pos:end="49:33">if <condition pos:start="48:12" pos:end="48:34">(<expr pos:start="48:13" pos:end="48:33"><name pos:start="48:13" pos:end="48:24">sample_rate1</name> <operator pos:start="48:26" pos:end="48:27">&gt;=</operator> <literal type="number" pos:start="48:29" pos:end="48:33">44100</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:33"><block_content pos:start="49:13" pos:end="49:33">
            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:24">sample_rate1</name> <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:32">44100</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="50:9" pos:end="51:33">else if <condition pos:start="50:17" pos:end="50:39">(<expr pos:start="50:18" pos:end="50:38"><name pos:start="50:18" pos:end="50:29">sample_rate1</name> <operator pos:start="50:31" pos:end="50:32">&gt;=</operator> <literal type="number" pos:start="50:34" pos:end="50:38">22050</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:33"><block_content pos:start="51:13" pos:end="51:33">
            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:24">sample_rate1</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:32">22050</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="52:9" pos:end="53:33">else if <condition pos:start="52:17" pos:end="52:39">(<expr pos:start="52:18" pos:end="52:38"><name pos:start="52:18" pos:end="52:29">sample_rate1</name> <operator pos:start="52:31" pos:end="52:32">&gt;=</operator> <literal type="number" pos:start="52:34" pos:end="52:38">16000</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:33"><block_content pos:start="53:13" pos:end="53:33">
            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:24">sample_rate1</name> <operator pos:start="53:26" pos:end="53:26">=</operator> <literal type="number" pos:start="53:28" pos:end="53:32">16000</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="54:9" pos:end="55:33">else if <condition pos:start="54:17" pos:end="54:39">(<expr pos:start="54:18" pos:end="54:38"><name pos:start="54:18" pos:end="54:29">sample_rate1</name> <operator pos:start="54:31" pos:end="54:32">&gt;=</operator> <literal type="number" pos:start="54:34" pos:end="54:38">11025</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:33"><block_content pos:start="55:13" pos:end="55:33">
            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:24">sample_rate1</name> <operator pos:start="55:26" pos:end="55:26">=</operator> <literal type="number" pos:start="55:28" pos:end="55:32">11025</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="56:9" pos:end="57:32">else if <condition pos:start="56:17" pos:end="56:38">(<expr pos:start="56:18" pos:end="56:37"><name pos:start="56:18" pos:end="56:29">sample_rate1</name> <operator pos:start="56:31" pos:end="56:32">&gt;=</operator> <literal type="number" pos:start="56:34" pos:end="56:37">8000</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:32"><block_content pos:start="57:13" pos:end="57:32">
            <expr_stmt pos:start="57:13" pos:end="57:32"><expr pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:24">sample_rate1</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <literal type="number" pos:start="57:28" pos:end="57:31">8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="59:5" pos:end="59:72"><expr pos:start="59:5" pos:end="59:71"><name pos:start="59:5" pos:end="59:7">bps</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <operator pos:start="59:11" pos:end="59:11">(</operator><name pos:start="59:12" pos:end="59:16">float</name><operator pos:start="59:17" pos:end="59:17">)</operator><name pos:start="59:18" pos:end="59:28"><name pos:start="59:18" pos:end="59:18">s</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:28">bit_rate</name></name> <operator pos:start="59:30" pos:end="59:30">/</operator> <operator pos:start="59:32" pos:end="59:32">(</operator><name pos:start="59:33" pos:end="59:37">float</name><operator pos:start="59:38" pos:end="59:38">)</operator><operator pos:start="59:39" pos:end="59:39">(</operator><name pos:start="59:40" pos:end="59:53"><name pos:start="59:40" pos:end="59:40">s</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:53">nb_channels</name></name> <operator pos:start="59:55" pos:end="59:55">*</operator> <name pos:start="59:57" pos:end="59:70"><name pos:start="59:57" pos:end="59:57">s</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:70">sample_rate</name></name><operator pos:start="59:71" pos:end="59:71">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:77"><expr pos:start="60:5" pos:end="60:76"><name pos:start="60:5" pos:end="60:23"><name pos:start="60:5" pos:end="60:5">s</name><operator pos:start="60:6" pos:end="60:7">-&gt;</operator><name pos:start="60:8" pos:end="60:23">byte_offset_bits</name></name> <operator pos:start="60:25" pos:end="60:25">=</operator> <call pos:start="60:27" pos:end="60:72"><name pos:start="60:27" pos:end="60:33">av_log2</name><argument_list pos:start="60:34" pos:end="60:72">(<argument pos:start="60:35" pos:end="60:71"><expr pos:start="60:35" pos:end="60:71"><operator pos:start="60:35" pos:end="60:35">(</operator><name pos:start="60:36" pos:end="60:38">int</name><operator pos:start="60:39" pos:end="60:39">)</operator><operator pos:start="60:40" pos:end="60:40">(</operator><name pos:start="60:41" pos:end="60:43">bps</name> <operator pos:start="60:45" pos:end="60:45">*</operator> <name pos:start="60:47" pos:end="60:58"><name pos:start="60:47" pos:end="60:47">s</name><operator pos:start="60:48" pos:end="60:49">-&gt;</operator><name pos:start="60:50" pos:end="60:58">frame_len</name></name> <operator pos:start="60:60" pos:end="60:60">/</operator> <literal type="number" pos:start="60:62" pos:end="60:66">8.0</literal> <operator pos:start="60:66" pos:end="60:66">+</operator> <literal type="number" pos:start="60:68" pos:end="60:70">0.5</literal><operator pos:start="60:71" pos:end="60:71">)</operator></expr></argument>)</argument_list></call> <operator pos:start="60:74" pos:end="60:74">+</operator> <literal type="number" pos:start="60:76" pos:end="60:76">2</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="61:5" pos:end="62:22">/* compute high frequency value and choose if noise coding should
       be activated */</comment>
    <expr_stmt pos:start="63:5" pos:end="63:15"><expr pos:start="63:5" pos:end="63:14"><name pos:start="63:5" pos:end="63:8">bps1</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <name pos:start="63:12" pos:end="63:14">bps</name></expr>;</expr_stmt>
    <if_stmt pos:start="64:5" pos:end="65:25"><if pos:start="64:5" pos:end="65:25">if <condition pos:start="64:8" pos:end="64:28">(<expr pos:start="64:9" pos:end="64:27"><name pos:start="64:9" pos:end="64:22"><name pos:start="64:9" pos:end="64:9">s</name><operator pos:start="64:10" pos:end="64:11">-&gt;</operator><name pos:start="64:12" pos:end="64:22">nb_channels</name></name> <operator pos:start="64:24" pos:end="64:25">==</operator> <literal type="number" pos:start="64:27" pos:end="64:27">2</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:25"><block_content pos:start="65:9" pos:end="65:25">
        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:12">bps1</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:18">bps</name> <operator pos:start="65:20" pos:end="65:20">*</operator> <literal type="number" pos:start="65:22" pos:end="65:24">1.6</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="66:5" pos:end="101:5"><if pos:start="66:5" pos:end="71:5">if <condition pos:start="66:8" pos:end="66:30">(<expr pos:start="66:9" pos:end="66:29"><name pos:start="66:9" pos:end="66:20">sample_rate1</name> <operator pos:start="66:22" pos:end="66:23">==</operator> <literal type="number" pos:start="66:25" pos:end="66:29">44100</literal></expr>)</condition> <block pos:start="66:32" pos:end="71:5">{<block_content pos:start="67:9" pos:end="70:40">
        <if_stmt pos:start="67:9" pos:end="70:40"><if pos:start="67:9" pos:end="68:36">if <condition pos:start="67:12" pos:end="67:25">(<expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:16">bps1</name> <operator pos:start="67:18" pos:end="67:19">&gt;=</operator> <literal type="number" pos:start="67:21" pos:end="67:24">0.61</literal></expr>)</condition><block type="pseudo" pos:start="68:13" pos:end="68:36"><block_content pos:start="68:13" pos:end="68:36">
            <expr_stmt pos:start="68:13" pos:end="68:36"><expr pos:start="68:13" pos:end="68:35"><name pos:start="68:13" pos:end="68:31"><name pos:start="68:13" pos:end="68:13">s</name><operator pos:start="68:14" pos:end="68:15">-&gt;</operator><name pos:start="68:16" pos:end="68:31">use_noise_coding</name></name> <operator pos:start="68:33" pos:end="68:33">=</operator> <literal type="number" pos:start="68:35" pos:end="68:35">0</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="69:9" pos:end="70:40">else<block type="pseudo" pos:start="70:13" pos:end="70:40"><block_content pos:start="70:13" pos:end="70:40">
            <expr_stmt pos:start="70:13" pos:end="70:40"><expr pos:start="70:13" pos:end="70:39"><name pos:start="70:13" pos:end="70:21">high_freq</name> <operator pos:start="70:23" pos:end="70:23">=</operator> <name pos:start="70:25" pos:end="70:33">high_freq</name> <operator pos:start="70:35" pos:end="70:35">*</operator> <literal type="number" pos:start="70:37" pos:end="70:39">0.4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="78:5">else if <condition pos:start="71:15" pos:end="71:37">(<expr pos:start="71:16" pos:end="71:36"><name pos:start="71:16" pos:end="71:27">sample_rate1</name> <operator pos:start="71:29" pos:end="71:30">==</operator> <literal type="number" pos:start="71:32" pos:end="71:36">22050</literal></expr>)</condition> <block pos:start="71:39" pos:end="78:5">{<block_content pos:start="72:9" pos:end="77:40">
        <if_stmt pos:start="72:9" pos:end="77:40"><if pos:start="72:9" pos:end="73:36">if <condition pos:start="72:12" pos:end="72:25">(<expr pos:start="72:13" pos:end="72:24"><name pos:start="72:13" pos:end="72:16">bps1</name> <operator pos:start="72:18" pos:end="72:19">&gt;=</operator> <literal type="number" pos:start="72:21" pos:end="72:24">1.16</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:36"><block_content pos:start="73:13" pos:end="73:36">
            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:31">use_noise_coding</name></name> <operator pos:start="73:33" pos:end="73:33">=</operator> <literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="74:9" pos:end="75:40">else if <condition pos:start="74:17" pos:end="74:30">(<expr pos:start="74:18" pos:end="74:29"><name pos:start="74:18" pos:end="74:21">bps1</name> <operator pos:start="74:23" pos:end="74:24">&gt;=</operator> <literal type="number" pos:start="74:26" pos:end="74:29">0.72</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:40"><block_content pos:start="75:13" pos:end="75:40">
            <expr_stmt pos:start="75:13" pos:end="75:40"><expr pos:start="75:13" pos:end="75:39"><name pos:start="75:13" pos:end="75:21">high_freq</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:33">high_freq</name> <operator pos:start="75:35" pos:end="75:35">*</operator> <literal type="number" pos:start="75:37" pos:end="75:39">0.7</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="76:9" pos:end="77:40">else<block type="pseudo" pos:start="77:13" pos:end="77:40"><block_content pos:start="77:13" pos:end="77:40">
            <expr_stmt pos:start="77:13" pos:end="77:40"><expr pos:start="77:13" pos:end="77:39"><name pos:start="77:13" pos:end="77:21">high_freq</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:33">high_freq</name> <operator pos:start="77:35" pos:end="77:35">*</operator> <literal type="number" pos:start="77:37" pos:end="77:39">0.6</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="78:7" pos:end="83:5">else if <condition pos:start="78:15" pos:end="78:37">(<expr pos:start="78:16" pos:end="78:36"><name pos:start="78:16" pos:end="78:27">sample_rate1</name> <operator pos:start="78:29" pos:end="78:30">==</operator> <literal type="number" pos:start="78:32" pos:end="78:36">16000</literal></expr>)</condition> <block pos:start="78:39" pos:end="83:5">{<block_content pos:start="79:9" pos:end="82:40">
        <if_stmt pos:start="79:9" pos:end="82:40"><if pos:start="79:9" pos:end="80:40">if <condition pos:start="79:12" pos:end="79:22">(<expr pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:15">bps</name> <operator pos:start="79:17" pos:end="79:17">&gt;</operator> <literal type="number" pos:start="79:19" pos:end="79:21">0.5</literal></expr>)</condition><block type="pseudo" pos:start="80:13" pos:end="80:40"><block_content pos:start="80:13" pos:end="80:40">
            <expr_stmt pos:start="80:13" pos:end="80:40"><expr pos:start="80:13" pos:end="80:39"><name pos:start="80:13" pos:end="80:21">high_freq</name> <operator pos:start="80:23" pos:end="80:23">=</operator> <name pos:start="80:25" pos:end="80:33">high_freq</name> <operator pos:start="80:35" pos:end="80:35">*</operator> <literal type="number" pos:start="80:37" pos:end="80:39">0.5</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="81:9" pos:end="82:40">else<block type="pseudo" pos:start="82:13" pos:end="82:40"><block_content pos:start="82:13" pos:end="82:40">
            <expr_stmt pos:start="82:13" pos:end="82:40"><expr pos:start="82:13" pos:end="82:39"><name pos:start="82:13" pos:end="82:21">high_freq</name> <operator pos:start="82:23" pos:end="82:23">=</operator> <name pos:start="82:25" pos:end="82:33">high_freq</name> <operator pos:start="82:35" pos:end="82:35">*</operator> <literal type="number" pos:start="82:37" pos:end="82:39">0.3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="85:5">else if <condition pos:start="83:15" pos:end="83:37">(<expr pos:start="83:16" pos:end="83:36"><name pos:start="83:16" pos:end="83:27">sample_rate1</name> <operator pos:start="83:29" pos:end="83:30">==</operator> <literal type="number" pos:start="83:32" pos:end="83:36">11025</literal></expr>)</condition> <block pos:start="83:39" pos:end="85:5">{<block_content pos:start="84:9" pos:end="84:36">
        <expr_stmt pos:start="84:9" pos:end="84:36"><expr pos:start="84:9" pos:end="84:35"><name pos:start="84:9" pos:end="84:17">high_freq</name> <operator pos:start="84:19" pos:end="84:19">=</operator> <name pos:start="84:21" pos:end="84:29">high_freq</name> <operator pos:start="84:31" pos:end="84:31">*</operator> <literal type="number" pos:start="84:33" pos:end="84:35">0.7</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="85:7" pos:end="93:5">else if <condition pos:start="85:15" pos:end="85:36">(<expr pos:start="85:16" pos:end="85:35"><name pos:start="85:16" pos:end="85:27">sample_rate1</name> <operator pos:start="85:29" pos:end="85:30">==</operator> <literal type="number" pos:start="85:32" pos:end="85:35">8000</literal></expr>)</condition> <block pos:start="85:38" pos:end="93:5">{<block_content pos:start="86:9" pos:end="92:9">
        <if_stmt pos:start="86:9" pos:end="92:9"><if pos:start="86:9" pos:end="88:9">if <condition pos:start="86:12" pos:end="86:25">(<expr pos:start="86:13" pos:end="86:24"><name pos:start="86:13" pos:end="86:15">bps</name> <operator pos:start="86:17" pos:end="86:18">&lt;=</operator> <literal type="number" pos:start="86:20" pos:end="86:24">0.625</literal></expr>)</condition> <block pos:start="86:27" pos:end="88:9">{<block_content pos:start="87:13" pos:end="87:40">
            <expr_stmt pos:start="87:13" pos:end="87:40"><expr pos:start="87:13" pos:end="87:39"><name pos:start="87:13" pos:end="87:21">high_freq</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:33">high_freq</name> <operator pos:start="87:35" pos:end="87:35">*</operator> <literal type="number" pos:start="87:37" pos:end="87:39">0.5</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="88:11" pos:end="90:9">else if <condition pos:start="88:19" pos:end="88:30">(<expr pos:start="88:20" pos:end="88:29"><name pos:start="88:20" pos:end="88:22">bps</name> <operator pos:start="88:24" pos:end="88:24">&gt;</operator> <literal type="number" pos:start="88:26" pos:end="88:29">0.75</literal></expr>)</condition> <block pos:start="88:32" pos:end="90:9">{<block_content pos:start="89:13" pos:end="89:36">
            <expr_stmt pos:start="89:13" pos:end="89:36"><expr pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:31">use_noise_coding</name></name> <operator pos:start="89:33" pos:end="89:33">=</operator> <literal type="number" pos:start="89:35" pos:end="89:35">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="90:11" pos:end="92:9">else <block pos:start="90:16" pos:end="92:9">{<block_content pos:start="91:13" pos:end="91:41">
            <expr_stmt pos:start="91:13" pos:end="91:41"><expr pos:start="91:13" pos:end="91:40"><name pos:start="91:13" pos:end="91:21">high_freq</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:33">high_freq</name> <operator pos:start="91:35" pos:end="91:35">*</operator> <literal type="number" pos:start="91:37" pos:end="91:40">0.65</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if> <else pos:start="93:7" pos:end="101:5">else <block pos:start="93:12" pos:end="101:5">{<block_content pos:start="94:9" pos:end="100:9">
        <if_stmt pos:start="94:9" pos:end="100:9"><if pos:start="94:9" pos:end="96:9">if <condition pos:start="94:12" pos:end="94:23">(<expr pos:start="94:13" pos:end="94:22"><name pos:start="94:13" pos:end="94:15">bps</name> <operator pos:start="94:17" pos:end="94:18">&gt;=</operator> <literal type="number" pos:start="94:20" pos:end="94:22">0.8</literal></expr>)</condition> <block pos:start="94:25" pos:end="96:9">{<block_content pos:start="95:13" pos:end="95:41">
            <expr_stmt pos:start="95:13" pos:end="95:41"><expr pos:start="95:13" pos:end="95:40"><name pos:start="95:13" pos:end="95:21">high_freq</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:33">high_freq</name> <operator pos:start="95:35" pos:end="95:35">*</operator> <literal type="number" pos:start="95:37" pos:end="95:40">0.75</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="96:11" pos:end="98:9">else if <condition pos:start="96:19" pos:end="96:30">(<expr pos:start="96:20" pos:end="96:29"><name pos:start="96:20" pos:end="96:22">bps</name> <operator pos:start="96:24" pos:end="96:25">&gt;=</operator> <literal type="number" pos:start="96:27" pos:end="96:29">0.6</literal></expr>)</condition> <block pos:start="96:32" pos:end="98:9">{<block_content pos:start="97:13" pos:end="97:40">
            <expr_stmt pos:start="97:13" pos:end="97:40"><expr pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:21">high_freq</name> <operator pos:start="97:23" pos:end="97:23">=</operator> <name pos:start="97:25" pos:end="97:33">high_freq</name> <operator pos:start="97:35" pos:end="97:35">*</operator> <literal type="number" pos:start="97:37" pos:end="97:39">0.6</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="98:11" pos:end="100:9">else <block pos:start="98:16" pos:end="100:9">{<block_content pos:start="99:13" pos:end="99:40">
            <expr_stmt pos:start="99:13" pos:end="99:40"><expr pos:start="99:13" pos:end="99:39"><name pos:start="99:13" pos:end="99:21">high_freq</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:33">high_freq</name> <operator pos:start="99:35" pos:end="99:35">*</operator> <literal type="number" pos:start="99:37" pos:end="99:39">0.5</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="102:5" pos:end="102:47"><expr pos:start="102:5" pos:end="102:46"><call pos:start="102:5" pos:end="102:46"><name pos:start="102:5" pos:end="102:11">dprintf</name><argument_list pos:start="102:12" pos:end="102:46">(<argument pos:start="102:13" pos:end="102:20"><expr pos:start="102:13" pos:end="102:20"><name pos:start="102:13" pos:end="102:20"><name pos:start="102:13" pos:end="102:13">s</name><operator pos:start="102:14" pos:end="102:15">-&gt;</operator><name pos:start="102:16" pos:end="102:20">avctx</name></name></expr></argument>, <argument pos:start="102:23" pos:end="102:37"><expr pos:start="102:23" pos:end="102:37"><literal type="string" pos:start="102:23" pos:end="102:37">"flags2=0x%x\n"</literal></expr></argument>, <argument pos:start="102:40" pos:end="102:45"><expr pos:start="102:40" pos:end="102:45"><name pos:start="102:40" pos:end="102:45">flags2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="103:5" pos:end="105:27"><expr pos:start="103:5" pos:end="105:26"><call pos:start="103:5" pos:end="105:26"><name pos:start="103:5" pos:end="103:11">dprintf</name><argument_list pos:start="103:12" pos:end="105:26">(<argument pos:start="103:13" pos:end="103:20"><expr pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:20">avctx</name></name></expr></argument>, <argument pos:start="103:23" pos:end="103:89"><expr pos:start="103:23" pos:end="103:89"><literal type="string" pos:start="103:23" pos:end="103:89">"version=%d channels=%d sample_rate=%d bitrate=%d block_align=%d\n"</literal></expr></argument>,
           <argument pos:start="104:12" pos:end="104:21"><expr pos:start="104:12" pos:end="104:21"><name pos:start="104:12" pos:end="104:21"><name pos:start="104:12" pos:end="104:12">s</name><operator pos:start="104:13" pos:end="104:14">-&gt;</operator><name pos:start="104:15" pos:end="104:21">version</name></name></expr></argument>, <argument pos:start="104:24" pos:end="104:37"><expr pos:start="104:24" pos:end="104:37"><name pos:start="104:24" pos:end="104:37"><name pos:start="104:24" pos:end="104:24">s</name><operator pos:start="104:25" pos:end="104:26">-&gt;</operator><name pos:start="104:27" pos:end="104:37">nb_channels</name></name></expr></argument>, <argument pos:start="104:40" pos:end="104:53"><expr pos:start="104:40" pos:end="104:53"><name pos:start="104:40" pos:end="104:53"><name pos:start="104:40" pos:end="104:40">s</name><operator pos:start="104:41" pos:end="104:42">-&gt;</operator><name pos:start="104:43" pos:end="104:53">sample_rate</name></name></expr></argument>, <argument pos:start="104:56" pos:end="104:66"><expr pos:start="104:56" pos:end="104:66"><name pos:start="104:56" pos:end="104:66"><name pos:start="104:56" pos:end="104:56">s</name><operator pos:start="104:57" pos:end="104:58">-&gt;</operator><name pos:start="104:59" pos:end="104:66">bit_rate</name></name></expr></argument>,
           <argument pos:start="105:12" pos:end="105:25"><expr pos:start="105:12" pos:end="105:25"><name pos:start="105:12" pos:end="105:25"><name pos:start="105:12" pos:end="105:12">s</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:25">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="106:5" pos:end="107:54"><expr pos:start="106:5" pos:end="107:53"><call pos:start="106:5" pos:end="107:53"><name pos:start="106:5" pos:end="106:11">dprintf</name><argument_list pos:start="106:12" pos:end="107:53">(<argument pos:start="106:13" pos:end="106:20"><expr pos:start="106:13" pos:end="106:20"><name pos:start="106:13" pos:end="106:20"><name pos:start="106:13" pos:end="106:13">s</name><operator pos:start="106:14" pos:end="106:15">-&gt;</operator><name pos:start="106:16" pos:end="106:20">avctx</name></name></expr></argument>, <argument pos:start="106:23" pos:end="106:66"><expr pos:start="106:23" pos:end="106:66"><literal type="string" pos:start="106:23" pos:end="106:66">"bps=%f bps1=%f high_freq=%f bitoffset=%d\n"</literal></expr></argument>,
           <argument pos:start="107:12" pos:end="107:14"><expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">bps</name></expr></argument>, <argument pos:start="107:17" pos:end="107:20"><expr pos:start="107:17" pos:end="107:20"><name pos:start="107:17" pos:end="107:20">bps1</name></expr></argument>, <argument pos:start="107:23" pos:end="107:31"><expr pos:start="107:23" pos:end="107:31"><name pos:start="107:23" pos:end="107:31">high_freq</name></expr></argument>, <argument pos:start="107:34" pos:end="107:52"><expr pos:start="107:34" pos:end="107:52"><name pos:start="107:34" pos:end="107:52"><name pos:start="107:34" pos:end="107:34">s</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:52">byte_offset_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="108:5" pos:end="109:67"><expr pos:start="108:5" pos:end="109:66"><call pos:start="108:5" pos:end="109:66"><name pos:start="108:5" pos:end="108:11">dprintf</name><argument_list pos:start="108:12" pos:end="109:66">(<argument pos:start="108:13" pos:end="108:20"><expr pos:start="108:13" pos:end="108:20"><name pos:start="108:13" pos:end="108:20"><name pos:start="108:13" pos:end="108:13">s</name><operator pos:start="108:14" pos:end="108:15">-&gt;</operator><name pos:start="108:16" pos:end="108:20">avctx</name></name></expr></argument>, <argument pos:start="108:23" pos:end="108:78"><expr pos:start="108:23" pos:end="108:78"><literal type="string" pos:start="108:23" pos:end="108:78">"use_noise_coding=%d use_exp_vlc=%d nb_block_sizes=%d\n"</literal></expr></argument>,
           <argument pos:start="109:12" pos:end="109:30"><expr pos:start="109:12" pos:end="109:30"><name pos:start="109:12" pos:end="109:30"><name pos:start="109:12" pos:end="109:12">s</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:30">use_noise_coding</name></name></expr></argument>, <argument pos:start="109:33" pos:end="109:46"><expr pos:start="109:33" pos:end="109:46"><name pos:start="109:33" pos:end="109:46"><name pos:start="109:33" pos:end="109:33">s</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:46">use_exp_vlc</name></name></expr></argument>, <argument pos:start="109:49" pos:end="109:65"><expr pos:start="109:49" pos:end="109:65"><name pos:start="109:49" pos:end="109:65"><name pos:start="109:49" pos:end="109:49">s</name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:65">nb_block_sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="110:5" pos:end="110:70">/* compute the scale factor band sizes for each MDCT block size */</comment>
    <block pos:start="111:5" pos:end="207:0">{<block_content pos:start="112:9" pos:end="204:9">
        <decl_stmt pos:start="112:9" pos:end="112:51"><decl pos:start="112:9" pos:end="112:13"><type pos:start="112:9" pos:end="112:11"><name pos:start="112:9" pos:end="112:11">int</name></type> <name pos:start="112:13" pos:end="112:13">a</name></decl>, <decl pos:start="112:16" pos:end="112:16"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:16" pos:end="112:16">b</name></decl>, <decl pos:start="112:19" pos:end="112:21"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:19" pos:end="112:21">pos</name></decl>, <decl pos:start="112:24" pos:end="112:27"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:24" pos:end="112:27">lpos</name></decl>, <decl pos:start="112:30" pos:end="112:30"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:30" pos:end="112:30">k</name></decl>, <decl pos:start="112:33" pos:end="112:41"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:33" pos:end="112:41">block_len</name></decl>, <decl pos:start="112:44" pos:end="112:44"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:44" pos:end="112:44">i</name></decl>, <decl pos:start="112:47" pos:end="112:47"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:47" pos:end="112:47">j</name></decl>, <decl pos:start="112:50" pos:end="112:50"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:50" pos:end="112:50">n</name></decl>;</decl_stmt>
        <decl_stmt pos:start="113:9" pos:end="113:29"><decl pos:start="113:9" pos:end="113:28"><type pos:start="113:9" pos:end="113:23"><specifier pos:start="113:9" pos:end="113:13">const</specifier> <name pos:start="113:15" pos:end="113:21">uint8_t</name> <modifier pos:start="113:23" pos:end="113:23">*</modifier></type><name pos:start="113:24" pos:end="113:28">table</name></decl>;</decl_stmt>
        <if_stmt pos:start="114:9" pos:end="118:9"><if pos:start="114:9" pos:end="116:9">if <condition pos:start="114:12" pos:end="114:28">(<expr pos:start="114:13" pos:end="114:27"><name pos:start="114:13" pos:end="114:22"><name pos:start="114:13" pos:end="114:13">s</name><operator pos:start="114:14" pos:end="114:15">-&gt;</operator><name pos:start="114:16" pos:end="114:22">version</name></name> <operator pos:start="114:24" pos:end="114:25">==</operator> <literal type="number" pos:start="114:27" pos:end="114:27">1</literal></expr>)</condition> <block pos:start="114:30" pos:end="116:9">{<block_content pos:start="115:13" pos:end="115:31">
            <expr_stmt pos:start="115:13" pos:end="115:31"><expr pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:26">coefs_start</name></name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">3</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="116:11" pos:end="118:9">else <block pos:start="116:16" pos:end="118:9">{<block_content pos:start="117:13" pos:end="117:31">
            <expr_stmt pos:start="117:13" pos:end="117:31"><expr pos:start="117:13" pos:end="117:30"><name pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:26">coefs_start</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <literal type="number" pos:start="117:30" pos:end="117:30">0</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <for pos:start="119:9" pos:end="204:9">for<control pos:start="119:12" pos:end="119:46">(<init pos:start="119:13" pos:end="119:18"><expr pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:13">k</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <literal type="number" pos:start="119:17" pos:end="119:17">0</literal></expr>;</init> <condition pos:start="119:20" pos:end="119:41"><expr pos:start="119:20" pos:end="119:40"><name pos:start="119:20" pos:end="119:20">k</name> <operator pos:start="119:22" pos:end="119:22">&lt;</operator> <name pos:start="119:24" pos:end="119:40"><name pos:start="119:24" pos:end="119:24">s</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:40">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:43">k</name><operator pos:start="119:44" pos:end="119:45">++</operator></expr></incr>)</control> <block pos:start="119:48" pos:end="204:9">{<block_content pos:start="120:13" pos:end="204:0">
            <expr_stmt pos:start="120:13" pos:end="120:42"><expr pos:start="120:13" pos:end="120:41"><name pos:start="120:13" pos:end="120:21">block_len</name> <operator pos:start="120:23" pos:end="120:23">=</operator> <name pos:start="120:25" pos:end="120:36"><name pos:start="120:25" pos:end="120:25">s</name><operator pos:start="120:26" pos:end="120:27">-&gt;</operator><name pos:start="120:28" pos:end="120:36">frame_len</name></name> <operator pos:start="120:38" pos:end="120:39">&gt;&gt;</operator> <name pos:start="120:41" pos:end="120:41">k</name></expr>;</expr_stmt>
            <if_stmt pos:start="121:13" pos:end="172:13"><if pos:start="121:13" pos:end="137:13">if <condition pos:start="121:16" pos:end="121:32">(<expr pos:start="121:17" pos:end="121:31"><name pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:26">version</name></name> <operator pos:start="121:28" pos:end="121:29">==</operator> <literal type="number" pos:start="121:31" pos:end="121:31">1</literal></expr>)</condition> <block pos:start="121:34" pos:end="137:13">{<block_content pos:start="122:17" pos:end="136:41">
                <expr_stmt pos:start="122:17" pos:end="122:25"><expr pos:start="122:17" pos:end="122:24"><name pos:start="122:17" pos:end="122:20">lpos</name> <operator pos:start="122:22" pos:end="122:22">=</operator> <literal type="number" pos:start="122:24" pos:end="122:24">0</literal></expr>;</expr_stmt>
                <for pos:start="123:17" pos:end="135:17">for<control pos:start="123:20" pos:end="123:33">(<init pos:start="123:21" pos:end="123:24"><expr pos:start="123:21" pos:end="123:23"><name pos:start="123:21" pos:end="123:21">i</name><operator pos:start="123:22" pos:end="123:22">=</operator><literal type="number" pos:start="123:23" pos:end="123:23">0</literal></expr>;</init><condition pos:start="123:25" pos:end="123:29"><expr pos:start="123:25" pos:end="123:28"><name pos:start="123:25" pos:end="123:25">i</name><operator pos:start="123:26" pos:end="123:26">&lt;</operator><literal type="number" pos:start="123:27" pos:end="123:28">25</literal></expr>;</condition><incr pos:start="123:30" pos:end="123:32"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:30">i</name><operator pos:start="123:31" pos:end="123:32">++</operator></expr></incr>)</control> <block pos:start="123:35" pos:end="135:17">{<block_content pos:start="124:21" pos:end="134:31">
                    <expr_stmt pos:start="124:21" pos:end="124:46"><expr pos:start="124:21" pos:end="124:45"><name pos:start="124:21" pos:end="124:21">a</name> <operator pos:start="124:23" pos:end="124:23">=</operator> <name pos:start="124:25" pos:end="124:45"><name pos:start="124:25" pos:end="124:42">wma_critical_freqs</name><index pos:start="124:43" pos:end="124:45">[<expr pos:start="124:44" pos:end="124:44"><name pos:start="124:44" pos:end="124:44">i</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="125:21" pos:end="125:39"><expr pos:start="125:21" pos:end="125:38"><name pos:start="125:21" pos:end="125:21">b</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:38"><name pos:start="125:25" pos:end="125:25">s</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:38">sample_rate</name></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="126:21" pos:end="126:64"><expr pos:start="126:21" pos:end="126:63"><name pos:start="126:21" pos:end="126:23">pos</name> <operator pos:start="126:25" pos:end="126:25">=</operator> <operator pos:start="126:27" pos:end="126:27">(</operator><operator pos:start="126:28" pos:end="126:28">(</operator><name pos:start="126:29" pos:end="126:37">block_len</name> <operator pos:start="126:39" pos:end="126:39">*</operator> <literal type="number" pos:start="126:41" pos:end="126:41">2</literal> <operator pos:start="126:43" pos:end="126:43">*</operator> <name pos:start="126:45" pos:end="126:45">a</name><operator pos:start="126:46" pos:end="126:46">)</operator>  <operator pos:start="126:49" pos:end="126:49">+</operator> <operator pos:start="126:51" pos:end="126:51">(</operator><name pos:start="126:52" pos:end="126:52">b</name> <operator pos:start="126:54" pos:end="126:55">&gt;&gt;</operator> <literal type="number" pos:start="126:57" pos:end="126:57">1</literal><operator pos:start="126:58" pos:end="126:58">)</operator><operator pos:start="126:59" pos:end="126:59">)</operator> <operator pos:start="126:61" pos:end="126:61">/</operator> <name pos:start="126:63" pos:end="126:63">b</name></expr>;</expr_stmt>
                    <if_stmt pos:start="127:21" pos:end="128:40"><if pos:start="127:21" pos:end="128:40">if <condition pos:start="127:24" pos:end="127:40">(<expr pos:start="127:25" pos:end="127:39"><name pos:start="127:25" pos:end="127:27">pos</name> <operator pos:start="127:29" pos:end="127:29">&gt;</operator> <name pos:start="127:31" pos:end="127:39">block_len</name></expr>)</condition><block type="pseudo" pos:start="128:25" pos:end="128:40"><block_content pos:start="128:25" pos:end="128:40">
                        <expr_stmt pos:start="128:25" pos:end="128:40"><expr pos:start="128:25" pos:end="128:39"><name pos:start="128:25" pos:end="128:27">pos</name> <operator pos:start="128:29" pos:end="128:29">=</operator> <name pos:start="128:31" pos:end="128:39">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="129:21" pos:end="129:57"><expr pos:start="129:21" pos:end="129:56"><name pos:start="129:21" pos:end="129:43"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:37">exponent_bands</name><index pos:start="129:38" pos:end="129:40">[<expr pos:start="129:39" pos:end="129:39"><literal type="number" pos:start="129:39" pos:end="129:39">0</literal></expr>]</index><index pos:start="129:41" pos:end="129:43">[<expr pos:start="129:42" pos:end="129:42"><name pos:start="129:42" pos:end="129:42">i</name></expr>]</index></name> <operator pos:start="129:45" pos:end="129:45">=</operator> <name pos:start="129:47" pos:end="129:49">pos</name> <operator pos:start="129:51" pos:end="129:51">-</operator> <name pos:start="129:53" pos:end="129:56">lpos</name></expr>;</expr_stmt>
                    <if_stmt pos:start="130:21" pos:end="133:21"><if pos:start="130:21" pos:end="133:21">if <condition pos:start="130:24" pos:end="130:41">(<expr pos:start="130:25" pos:end="130:40"><name pos:start="130:25" pos:end="130:27">pos</name> <operator pos:start="130:29" pos:end="130:30">&gt;=</operator> <name pos:start="130:32" pos:end="130:40">block_len</name></expr>)</condition> <block pos:start="130:43" pos:end="133:21">{<block_content pos:start="131:25" pos:end="132:30">
                        <expr_stmt pos:start="131:25" pos:end="131:28"><expr pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:25">i</name><operator pos:start="131:26" pos:end="131:27">++</operator></expr>;</expr_stmt>
                        <break pos:start="132:25" pos:end="132:30">break;</break>
                    </block_content>}</block></if></if_stmt>
                    <expr_stmt pos:start="134:21" pos:end="134:31"><expr pos:start="134:21" pos:end="134:30"><name pos:start="134:21" pos:end="134:24">lpos</name> <operator pos:start="134:26" pos:end="134:26">=</operator> <name pos:start="134:28" pos:end="134:30">pos</name></expr>;</expr_stmt>
                </block_content>}</block></for>
                <expr_stmt pos:start="136:17" pos:end="136:41"><expr pos:start="136:17" pos:end="136:40"><name pos:start="136:17" pos:end="136:36"><name pos:start="136:17" pos:end="136:17">s</name><operator pos:start="136:18" pos:end="136:19">-&gt;</operator><name pos:start="136:20" pos:end="136:33">exponent_sizes</name><index pos:start="136:34" pos:end="136:36">[<expr pos:start="136:35" pos:end="136:35"><literal type="number" pos:start="136:35" pos:end="136:35">0</literal></expr>]</index></name> <operator pos:start="136:38" pos:end="136:38">=</operator> <name pos:start="136:40" pos:end="136:40">i</name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="137:15" pos:end="172:13">else <block pos:start="137:20" pos:end="172:13">{<block_content pos:start="139:17" pos:end="171:17">
                <comment type="block" pos:start="138:17" pos:end="138:38">/* hardcoded tables */</comment>
                <expr_stmt pos:start="139:17" pos:end="139:29"><expr pos:start="139:17" pos:end="139:28"><name pos:start="139:17" pos:end="139:21">table</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <name pos:start="139:25" pos:end="139:28">NULL</name></expr>;</expr_stmt>
                <expr_stmt pos:start="140:17" pos:end="140:59"><expr pos:start="140:17" pos:end="140:58"><name pos:start="140:17" pos:end="140:17">a</name> <operator pos:start="140:19" pos:end="140:19">=</operator> <name pos:start="140:21" pos:end="140:37"><name pos:start="140:21" pos:end="140:21">s</name><operator pos:start="140:22" pos:end="140:23">-&gt;</operator><name pos:start="140:24" pos:end="140:37">frame_len_bits</name></name> <operator pos:start="140:39" pos:end="140:39">-</operator> <name pos:start="140:41" pos:end="140:54">BLOCK_MIN_BITS</name> <operator pos:start="140:56" pos:end="140:56">-</operator> <name pos:start="140:58" pos:end="140:58">k</name></expr>;</expr_stmt>
                <if_stmt pos:start="141:17" pos:end="148:17"><if pos:start="141:17" pos:end="148:17">if <condition pos:start="141:20" pos:end="141:26">(<expr pos:start="141:21" pos:end="141:25"><name pos:start="141:21" pos:end="141:21">a</name> <operator pos:start="141:23" pos:end="141:23">&lt;</operator> <literal type="number" pos:start="141:25" pos:end="141:25">3</literal></expr>)</condition> <block pos:start="141:28" pos:end="148:17">{<block_content pos:start="142:21" pos:end="147:55">
                    <if_stmt pos:start="142:21" pos:end="147:55"><if pos:start="142:21" pos:end="143:55">if <condition pos:start="142:24" pos:end="142:48">(<expr pos:start="142:25" pos:end="142:47"><name pos:start="142:25" pos:end="142:38"><name pos:start="142:25" pos:end="142:25">s</name><operator pos:start="142:26" pos:end="142:27">-&gt;</operator><name pos:start="142:28" pos:end="142:38">sample_rate</name></name> <operator pos:start="142:40" pos:end="142:41">&gt;=</operator> <literal type="number" pos:start="142:43" pos:end="142:47">44100</literal></expr>)</condition><block type="pseudo" pos:start="143:25" pos:end="143:55"><block_content pos:start="143:25" pos:end="143:55">
                        <expr_stmt pos:start="143:25" pos:end="143:55"><expr pos:start="143:25" pos:end="143:54"><name pos:start="143:25" pos:end="143:29">table</name> <operator pos:start="143:31" pos:end="143:31">=</operator> <name pos:start="143:33" pos:end="143:54"><name pos:start="143:33" pos:end="143:51">exponent_band_44100</name><index pos:start="143:52" pos:end="143:54">[<expr pos:start="143:53" pos:end="143:53"><name pos:start="143:53" pos:end="143:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
                    <if type="elseif" pos:start="144:21" pos:end="145:55">else if <condition pos:start="144:29" pos:end="144:53">(<expr pos:start="144:30" pos:end="144:52"><name pos:start="144:30" pos:end="144:43"><name pos:start="144:30" pos:end="144:30">s</name><operator pos:start="144:31" pos:end="144:32">-&gt;</operator><name pos:start="144:33" pos:end="144:43">sample_rate</name></name> <operator pos:start="144:45" pos:end="144:46">&gt;=</operator> <literal type="number" pos:start="144:48" pos:end="144:52">32000</literal></expr>)</condition><block type="pseudo" pos:start="145:25" pos:end="145:55"><block_content pos:start="145:25" pos:end="145:55">
                        <expr_stmt pos:start="145:25" pos:end="145:55"><expr pos:start="145:25" pos:end="145:54"><name pos:start="145:25" pos:end="145:29">table</name> <operator pos:start="145:31" pos:end="145:31">=</operator> <name pos:start="145:33" pos:end="145:54"><name pos:start="145:33" pos:end="145:51">exponent_band_32000</name><index pos:start="145:52" pos:end="145:54">[<expr pos:start="145:53" pos:end="145:53"><name pos:start="145:53" pos:end="145:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
                    <if type="elseif" pos:start="146:21" pos:end="147:55">else if <condition pos:start="146:29" pos:end="146:53">(<expr pos:start="146:30" pos:end="146:52"><name pos:start="146:30" pos:end="146:43"><name pos:start="146:30" pos:end="146:30">s</name><operator pos:start="146:31" pos:end="146:32">-&gt;</operator><name pos:start="146:33" pos:end="146:43">sample_rate</name></name> <operator pos:start="146:45" pos:end="146:46">&gt;=</operator> <literal type="number" pos:start="146:48" pos:end="146:52">22050</literal></expr>)</condition><block type="pseudo" pos:start="147:25" pos:end="147:55"><block_content pos:start="147:25" pos:end="147:55">
                        <expr_stmt pos:start="147:25" pos:end="147:55"><expr pos:start="147:25" pos:end="147:54"><name pos:start="147:25" pos:end="147:29">table</name> <operator pos:start="147:31" pos:end="147:31">=</operator> <name pos:start="147:33" pos:end="147:54"><name pos:start="147:33" pos:end="147:51">exponent_band_22050</name><index pos:start="147:52" pos:end="147:54">[<expr pos:start="147:53" pos:end="147:53"><name pos:start="147:53" pos:end="147:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
                <if_stmt pos:start="149:17" pos:end="171:17"><if pos:start="149:17" pos:end="154:17">if <condition pos:start="149:20" pos:end="149:26">(<expr pos:start="149:21" pos:end="149:25"><name pos:start="149:21" pos:end="149:25">table</name></expr>)</condition> <block pos:start="149:28" pos:end="154:17">{<block_content pos:start="150:21" pos:end="153:45">
                    <expr_stmt pos:start="150:21" pos:end="150:33"><expr pos:start="150:21" pos:end="150:32"><name pos:start="150:21" pos:end="150:21">n</name> <operator pos:start="150:23" pos:end="150:23">=</operator> <operator pos:start="150:25" pos:end="150:25">*</operator><name pos:start="150:26" pos:end="150:30">table</name><operator pos:start="150:31" pos:end="150:32">++</operator></expr>;</expr_stmt>
                    <for pos:start="151:21" pos:end="152:59">for<control pos:start="151:24" pos:end="151:36">(<init pos:start="151:25" pos:end="151:28"><expr pos:start="151:25" pos:end="151:27"><name pos:start="151:25" pos:end="151:25">i</name><operator pos:start="151:26" pos:end="151:26">=</operator><literal type="number" pos:start="151:27" pos:end="151:27">0</literal></expr>;</init><condition pos:start="151:29" pos:end="151:32"><expr pos:start="151:29" pos:end="151:31"><name pos:start="151:29" pos:end="151:29">i</name><operator pos:start="151:30" pos:end="151:30">&lt;</operator><name pos:start="151:31" pos:end="151:31">n</name></expr>;</condition><incr pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><name pos:start="151:33" pos:end="151:33">i</name><operator pos:start="151:34" pos:end="151:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="152:25" pos:end="152:59"><block_content pos:start="152:25" pos:end="152:59">
                        <expr_stmt pos:start="152:25" pos:end="152:59"><expr pos:start="152:25" pos:end="152:58"><name pos:start="152:25" pos:end="152:47"><name pos:start="152:25" pos:end="152:25">s</name><operator pos:start="152:26" pos:end="152:27">-&gt;</operator><name pos:start="152:28" pos:end="152:41">exponent_bands</name><index pos:start="152:42" pos:end="152:44">[<expr pos:start="152:43" pos:end="152:43"><name pos:start="152:43" pos:end="152:43">k</name></expr>]</index><index pos:start="152:45" pos:end="152:47">[<expr pos:start="152:46" pos:end="152:46"><name pos:start="152:46" pos:end="152:46">i</name></expr>]</index></name> <operator pos:start="152:49" pos:end="152:49">=</operator> <name pos:start="152:51" pos:end="152:58"><name pos:start="152:51" pos:end="152:55">table</name><index pos:start="152:56" pos:end="152:58">[<expr pos:start="152:57" pos:end="152:57"><name pos:start="152:57" pos:end="152:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
                    <expr_stmt pos:start="153:21" pos:end="153:45"><expr pos:start="153:21" pos:end="153:44"><name pos:start="153:21" pos:end="153:40"><name pos:start="153:21" pos:end="153:21">s</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:37">exponent_sizes</name><index pos:start="153:38" pos:end="153:40">[<expr pos:start="153:39" pos:end="153:39"><name pos:start="153:39" pos:end="153:39">k</name></expr>]</index></name> <operator pos:start="153:42" pos:end="153:42">=</operator> <name pos:start="153:44" pos:end="153:44">n</name></expr>;</expr_stmt>
                </block_content>}</block></if> <else pos:start="154:19" pos:end="171:17">else <block pos:start="154:24" pos:end="171:17">{<block_content pos:start="155:21" pos:end="170:45">
                    <expr_stmt pos:start="155:21" pos:end="155:26"><expr pos:start="155:21" pos:end="155:25"><name pos:start="155:21" pos:end="155:21">j</name> <operator pos:start="155:23" pos:end="155:23">=</operator> <literal type="number" pos:start="155:25" pos:end="155:25">0</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="156:21" pos:end="156:29"><expr pos:start="156:21" pos:end="156:28"><name pos:start="156:21" pos:end="156:24">lpos</name> <operator pos:start="156:26" pos:end="156:26">=</operator> <literal type="number" pos:start="156:28" pos:end="156:28">0</literal></expr>;</expr_stmt>
                    <for pos:start="157:21" pos:end="169:21">for<control pos:start="157:24" pos:end="157:37">(<init pos:start="157:25" pos:end="157:28"><expr pos:start="157:25" pos:end="157:27"><name pos:start="157:25" pos:end="157:25">i</name><operator pos:start="157:26" pos:end="157:26">=</operator><literal type="number" pos:start="157:27" pos:end="157:27">0</literal></expr>;</init><condition pos:start="157:29" pos:end="157:33"><expr pos:start="157:29" pos:end="157:32"><name pos:start="157:29" pos:end="157:29">i</name><operator pos:start="157:30" pos:end="157:30">&lt;</operator><literal type="number" pos:start="157:31" pos:end="157:32">25</literal></expr>;</condition><incr pos:start="157:34" pos:end="157:36"><expr pos:start="157:34" pos:end="157:36"><name pos:start="157:34" pos:end="157:34">i</name><operator pos:start="157:35" pos:end="157:36">++</operator></expr></incr>)</control> <block pos:start="157:39" pos:end="169:21">{<block_content pos:start="158:25" pos:end="168:35">
                        <expr_stmt pos:start="158:25" pos:end="158:50"><expr pos:start="158:25" pos:end="158:49"><name pos:start="158:25" pos:end="158:25">a</name> <operator pos:start="158:27" pos:end="158:27">=</operator> <name pos:start="158:29" pos:end="158:49"><name pos:start="158:29" pos:end="158:46">wma_critical_freqs</name><index pos:start="158:47" pos:end="158:49">[<expr pos:start="158:48" pos:end="158:48"><name pos:start="158:48" pos:end="158:48">i</name></expr>]</index></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="159:25" pos:end="159:43"><expr pos:start="159:25" pos:end="159:42"><name pos:start="159:25" pos:end="159:25">b</name> <operator pos:start="159:27" pos:end="159:27">=</operator> <name pos:start="159:29" pos:end="159:42"><name pos:start="159:29" pos:end="159:29">s</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:42">sample_rate</name></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="160:25" pos:end="160:74"><expr pos:start="160:25" pos:end="160:73"><name pos:start="160:25" pos:end="160:27">pos</name> <operator pos:start="160:29" pos:end="160:29">=</operator> <operator pos:start="160:31" pos:end="160:31">(</operator><operator pos:start="160:32" pos:end="160:32">(</operator><name pos:start="160:33" pos:end="160:41">block_len</name> <operator pos:start="160:43" pos:end="160:43">*</operator> <literal type="number" pos:start="160:45" pos:end="160:45">2</literal> <operator pos:start="160:47" pos:end="160:47">*</operator> <name pos:start="160:49" pos:end="160:49">a</name><operator pos:start="160:50" pos:end="160:50">)</operator>  <operator pos:start="160:53" pos:end="160:53">+</operator> <operator pos:start="160:55" pos:end="160:55">(</operator><name pos:start="160:56" pos:end="160:56">b</name> <operator pos:start="160:58" pos:end="160:59">&lt;&lt;</operator> <literal type="number" pos:start="160:61" pos:end="160:61">1</literal><operator pos:start="160:62" pos:end="160:62">)</operator><operator pos:start="160:63" pos:end="160:63">)</operator> <operator pos:start="160:65" pos:end="160:65">/</operator> <operator pos:start="160:67" pos:end="160:67">(</operator><literal type="number" pos:start="160:68" pos:end="160:68">4</literal> <operator pos:start="160:70" pos:end="160:70">*</operator> <name pos:start="160:72" pos:end="160:72">b</name><operator pos:start="160:73" pos:end="160:73">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="161:25" pos:end="161:34"><expr pos:start="161:25" pos:end="161:33"><name pos:start="161:25" pos:end="161:27">pos</name> <operator pos:start="161:29" pos:end="161:31">&lt;&lt;=</operator> <literal type="number" pos:start="161:33" pos:end="161:33">2</literal></expr>;</expr_stmt>
                        <if_stmt pos:start="162:25" pos:end="163:44"><if pos:start="162:25" pos:end="163:44">if <condition pos:start="162:28" pos:end="162:44">(<expr pos:start="162:29" pos:end="162:43"><name pos:start="162:29" pos:end="162:31">pos</name> <operator pos:start="162:33" pos:end="162:33">&gt;</operator> <name pos:start="162:35" pos:end="162:43">block_len</name></expr>)</condition><block type="pseudo" pos:start="163:29" pos:end="163:44"><block_content pos:start="163:29" pos:end="163:44">
                            <expr_stmt pos:start="163:29" pos:end="163:44"><expr pos:start="163:29" pos:end="163:43"><name pos:start="163:29" pos:end="163:31">pos</name> <operator pos:start="163:33" pos:end="163:33">=</operator> <name pos:start="163:35" pos:end="163:43">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                        <if_stmt pos:start="164:25" pos:end="165:67"><if pos:start="164:25" pos:end="165:67">if <condition pos:start="164:28" pos:end="164:39">(<expr pos:start="164:29" pos:end="164:38"><name pos:start="164:29" pos:end="164:31">pos</name> <operator pos:start="164:33" pos:end="164:33">&gt;</operator> <name pos:start="164:35" pos:end="164:38">lpos</name></expr>)</condition><block type="pseudo" pos:start="165:29" pos:end="165:67"><block_content pos:start="165:29" pos:end="165:67">
                            <expr_stmt pos:start="165:29" pos:end="165:67"><expr pos:start="165:29" pos:end="165:66"><name pos:start="165:29" pos:end="165:53"><name pos:start="165:29" pos:end="165:29">s</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:45">exponent_bands</name><index pos:start="165:46" pos:end="165:48">[<expr pos:start="165:47" pos:end="165:47"><name pos:start="165:47" pos:end="165:47">k</name></expr>]</index><index pos:start="165:49" pos:end="165:53">[<expr pos:start="165:50" pos:end="165:52"><name pos:start="165:50" pos:end="165:50">j</name><operator pos:start="165:51" pos:end="165:52">++</operator></expr>]</index></name> <operator pos:start="165:55" pos:end="165:55">=</operator> <name pos:start="165:57" pos:end="165:59">pos</name> <operator pos:start="165:61" pos:end="165:61">-</operator> <name pos:start="165:63" pos:end="165:66">lpos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                        <if_stmt pos:start="166:25" pos:end="167:34"><if pos:start="166:25" pos:end="167:34">if <condition pos:start="166:28" pos:end="166:45">(<expr pos:start="166:29" pos:end="166:44"><name pos:start="166:29" pos:end="166:31">pos</name> <operator pos:start="166:33" pos:end="166:34">&gt;=</operator> <name pos:start="166:36" pos:end="166:44">block_len</name></expr>)</condition><block type="pseudo" pos:start="167:29" pos:end="167:34"><block_content pos:start="167:29" pos:end="167:34">
                            <break pos:start="167:29" pos:end="167:34">break;</break></block_content></block></if></if_stmt>
                        <expr_stmt pos:start="168:25" pos:end="168:35"><expr pos:start="168:25" pos:end="168:34"><name pos:start="168:25" pos:end="168:28">lpos</name> <operator pos:start="168:30" pos:end="168:30">=</operator> <name pos:start="168:32" pos:end="168:34">pos</name></expr>;</expr_stmt>
                    </block_content>}</block></for>
                    <expr_stmt pos:start="170:21" pos:end="170:45"><expr pos:start="170:21" pos:end="170:44"><name pos:start="170:21" pos:end="170:40"><name pos:start="170:21" pos:end="170:21">s</name><operator pos:start="170:22" pos:end="170:23">-&gt;</operator><name pos:start="170:24" pos:end="170:37">exponent_sizes</name><index pos:start="170:38" pos:end="170:40">[<expr pos:start="170:39" pos:end="170:39"><name pos:start="170:39" pos:end="170:39">k</name></expr>]</index></name> <operator pos:start="170:42" pos:end="170:42">=</operator> <name pos:start="170:44" pos:end="170:44">j</name></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></else></if_stmt>
            <comment type="block" pos:start="173:13" pos:end="173:37">/* max number of coefs */</comment>
            <expr_stmt pos:start="174:13" pos:end="174:79"><expr pos:start="174:13" pos:end="174:78"><name pos:start="174:13" pos:end="174:27"><name pos:start="174:13" pos:end="174:13">s</name><operator pos:start="174:14" pos:end="174:15">-&gt;</operator><name pos:start="174:16" pos:end="174:24">coefs_end</name><index pos:start="174:25" pos:end="174:27">[<expr pos:start="174:26" pos:end="174:26"><name pos:start="174:26" pos:end="174:26">k</name></expr>]</index></name> <operator pos:start="174:29" pos:end="174:29">=</operator> <operator pos:start="174:31" pos:end="174:31">(</operator><name pos:start="174:32" pos:end="174:43"><name pos:start="174:32" pos:end="174:32">s</name><operator pos:start="174:33" pos:end="174:34">-&gt;</operator><name pos:start="174:35" pos:end="174:43">frame_len</name></name> <operator pos:start="174:45" pos:end="174:45">-</operator> <operator pos:start="174:47" pos:end="174:47">(</operator><operator pos:start="174:48" pos:end="174:48">(</operator><name pos:start="174:49" pos:end="174:60"><name pos:start="174:49" pos:end="174:49">s</name><operator pos:start="174:50" pos:end="174:51">-&gt;</operator><name pos:start="174:52" pos:end="174:60">frame_len</name></name> <operator pos:start="174:62" pos:end="174:62">*</operator> <literal type="number" pos:start="174:64" pos:end="174:64">9</literal><operator pos:start="174:65" pos:end="174:65">)</operator> <operator pos:start="174:67" pos:end="174:67">/</operator> <literal type="number" pos:start="174:69" pos:end="174:71">100</literal><operator pos:start="174:72" pos:end="174:72">)</operator><operator pos:start="174:73" pos:end="174:73">)</operator> <operator pos:start="174:75" pos:end="174:76">&gt;&gt;</operator> <name pos:start="174:78" pos:end="174:78">k</name></expr>;</expr_stmt>
            <comment type="block" pos:start="175:13" pos:end="175:39">/* high freq computation */</comment>
            <expr_stmt pos:start="176:13" pos:end="177:64"><expr pos:start="176:13" pos:end="177:63"><name pos:start="176:13" pos:end="176:33"><name pos:start="176:13" pos:end="176:13">s</name><operator pos:start="176:14" pos:end="176:15">-&gt;</operator><name pos:start="176:16" pos:end="176:30">high_band_start</name><index pos:start="176:31" pos:end="176:33">[<expr pos:start="176:32" pos:end="176:32"><name pos:start="176:32" pos:end="176:32">k</name></expr>]</index></name> <operator pos:start="176:35" pos:end="176:35">=</operator> <operator pos:start="176:37" pos:end="176:37">(</operator><name pos:start="176:38" pos:end="176:40">int</name><operator pos:start="176:41" pos:end="176:41">)</operator><operator pos:start="176:42" pos:end="176:42">(</operator><operator pos:start="176:43" pos:end="176:43">(</operator><name pos:start="176:44" pos:end="176:52">block_len</name> <operator pos:start="176:54" pos:end="176:54">*</operator> <literal type="number" pos:start="176:56" pos:end="176:56">2</literal> <operator pos:start="176:58" pos:end="176:58">*</operator> <name pos:start="176:60" pos:end="176:68">high_freq</name><operator pos:start="176:69" pos:end="176:69">)</operator> <operator pos:start="176:71" pos:end="176:71">/</operator>
                                          <name pos:start="177:43" pos:end="177:56"><name pos:start="177:43" pos:end="177:43">s</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:56">sample_rate</name></name> <operator pos:start="177:58" pos:end="177:58">+</operator> <literal type="number" pos:start="177:60" pos:end="177:62">0.5</literal><operator pos:start="177:63" pos:end="177:63">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="178:13" pos:end="178:37"><expr pos:start="178:13" pos:end="178:36"><name pos:start="178:13" pos:end="178:13">n</name> <operator pos:start="178:15" pos:end="178:15">=</operator> <name pos:start="178:17" pos:end="178:36"><name pos:start="178:17" pos:end="178:17">s</name><operator pos:start="178:18" pos:end="178:19">-&gt;</operator><name pos:start="178:20" pos:end="178:33">exponent_sizes</name><index pos:start="178:34" pos:end="178:36">[<expr pos:start="178:35" pos:end="178:35"><name pos:start="178:35" pos:end="178:35">k</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="179:13" pos:end="179:18"><expr pos:start="179:13" pos:end="179:17"><name pos:start="179:13" pos:end="179:13">j</name> <operator pos:start="179:15" pos:end="179:15">=</operator> <literal type="number" pos:start="179:17" pos:end="179:17">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="180:13" pos:end="180:20"><expr pos:start="180:13" pos:end="180:19"><name pos:start="180:13" pos:end="180:15">pos</name> <operator pos:start="180:17" pos:end="180:17">=</operator> <literal type="number" pos:start="180:19" pos:end="180:19">0</literal></expr>;</expr_stmt>
            <for pos:start="181:13" pos:end="192:13">for<control pos:start="181:16" pos:end="181:28">(<init pos:start="181:17" pos:end="181:20"><expr pos:start="181:17" pos:end="181:19"><name pos:start="181:17" pos:end="181:17">i</name><operator pos:start="181:18" pos:end="181:18">=</operator><literal type="number" pos:start="181:19" pos:end="181:19">0</literal></expr>;</init><condition pos:start="181:21" pos:end="181:24"><expr pos:start="181:21" pos:end="181:23"><name pos:start="181:21" pos:end="181:21">i</name><operator pos:start="181:22" pos:end="181:22">&lt;</operator><name pos:start="181:23" pos:end="181:23">n</name></expr>;</condition><incr pos:start="181:25" pos:end="181:27"><expr pos:start="181:25" pos:end="181:27"><name pos:start="181:25" pos:end="181:25">i</name><operator pos:start="181:26" pos:end="181:27">++</operator></expr></incr>)</control> <block pos:start="181:30" pos:end="192:13">{<block_content pos:start="182:17" pos:end="191:65">
                <decl_stmt pos:start="182:17" pos:end="182:31"><decl pos:start="182:17" pos:end="182:25"><type pos:start="182:17" pos:end="182:19"><name pos:start="182:17" pos:end="182:19">int</name></type> <name pos:start="182:21" pos:end="182:25">start</name></decl>, <decl pos:start="182:28" pos:end="182:30"><type ref="prev" pos:start="182:17" pos:end="182:19"/><name pos:start="182:28" pos:end="182:30">end</name></decl>;</decl_stmt>
                <expr_stmt pos:start="183:17" pos:end="183:28"><expr pos:start="183:17" pos:end="183:27"><name pos:start="183:17" pos:end="183:21">start</name> <operator pos:start="183:23" pos:end="183:23">=</operator> <name pos:start="183:25" pos:end="183:27">pos</name></expr>;</expr_stmt>
                <expr_stmt pos:start="184:17" pos:end="184:47"><expr pos:start="184:17" pos:end="184:46"><name pos:start="184:17" pos:end="184:19">pos</name> <operator pos:start="184:21" pos:end="184:22">+=</operator> <name pos:start="184:24" pos:end="184:46"><name pos:start="184:24" pos:end="184:24">s</name><operator pos:start="184:25" pos:end="184:26">-&gt;</operator><name pos:start="184:27" pos:end="184:40">exponent_bands</name><index pos:start="184:41" pos:end="184:43">[<expr pos:start="184:42" pos:end="184:42"><name pos:start="184:42" pos:end="184:42">k</name></expr>]</index><index pos:start="184:44" pos:end="184:46">[<expr pos:start="184:45" pos:end="184:45"><name pos:start="184:45" pos:end="184:45">i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="185:17" pos:end="185:26"><expr pos:start="185:17" pos:end="185:25"><name pos:start="185:17" pos:end="185:19">end</name> <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:25">pos</name></expr>;</expr_stmt>
                <if_stmt pos:start="186:17" pos:end="187:50"><if pos:start="186:17" pos:end="187:50">if <condition pos:start="186:20" pos:end="186:50">(<expr pos:start="186:21" pos:end="186:49"><name pos:start="186:21" pos:end="186:25">start</name> <operator pos:start="186:27" pos:end="186:27">&lt;</operator> <name pos:start="186:29" pos:end="186:49"><name pos:start="186:29" pos:end="186:29">s</name><operator pos:start="186:30" pos:end="186:31">-&gt;</operator><name pos:start="186:32" pos:end="186:46">high_band_start</name><index pos:start="186:47" pos:end="186:49">[<expr pos:start="186:48" pos:end="186:48"><name pos:start="186:48" pos:end="186:48">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:50"><block_content pos:start="187:21" pos:end="187:50">
                    <expr_stmt pos:start="187:21" pos:end="187:50"><expr pos:start="187:21" pos:end="187:49"><name pos:start="187:21" pos:end="187:25">start</name> <operator pos:start="187:27" pos:end="187:27">=</operator> <name pos:start="187:29" pos:end="187:49"><name pos:start="187:29" pos:end="187:29">s</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:46">high_band_start</name><index pos:start="187:47" pos:end="187:49">[<expr pos:start="187:48" pos:end="187:48"><name pos:start="187:48" pos:end="187:48">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt pos:start="188:17" pos:end="189:42"><if pos:start="188:17" pos:end="189:42">if <condition pos:start="188:20" pos:end="188:42">(<expr pos:start="188:21" pos:end="188:41"><name pos:start="188:21" pos:end="188:23">end</name> <operator pos:start="188:25" pos:end="188:25">&gt;</operator> <name pos:start="188:27" pos:end="188:41"><name pos:start="188:27" pos:end="188:27">s</name><operator pos:start="188:28" pos:end="188:29">-&gt;</operator><name pos:start="188:30" pos:end="188:38">coefs_end</name><index pos:start="188:39" pos:end="188:41">[<expr pos:start="188:40" pos:end="188:40"><name pos:start="188:40" pos:end="188:40">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="189:21" pos:end="189:42"><block_content pos:start="189:21" pos:end="189:42">
                    <expr_stmt pos:start="189:21" pos:end="189:42"><expr pos:start="189:21" pos:end="189:41"><name pos:start="189:21" pos:end="189:23">end</name> <operator pos:start="189:25" pos:end="189:25">=</operator> <name pos:start="189:27" pos:end="189:41"><name pos:start="189:27" pos:end="189:27">s</name><operator pos:start="189:28" pos:end="189:29">-&gt;</operator><name pos:start="189:30" pos:end="189:38">coefs_end</name><index pos:start="189:39" pos:end="189:41">[<expr pos:start="189:40" pos:end="189:40"><name pos:start="189:40" pos:end="189:40">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt pos:start="190:17" pos:end="191:65"><if pos:start="190:17" pos:end="191:65">if <condition pos:start="190:20" pos:end="190:32">(<expr pos:start="190:21" pos:end="190:31"><name pos:start="190:21" pos:end="190:23">end</name> <operator pos:start="190:25" pos:end="190:25">&gt;</operator> <name pos:start="190:27" pos:end="190:31">start</name></expr>)</condition><block type="pseudo" pos:start="191:21" pos:end="191:65"><block_content pos:start="191:21" pos:end="191:65">
                    <expr_stmt pos:start="191:21" pos:end="191:65"><expr pos:start="191:21" pos:end="191:64"><name pos:start="191:21" pos:end="191:50"><name pos:start="191:21" pos:end="191:21">s</name><operator pos:start="191:22" pos:end="191:23">-&gt;</operator><name pos:start="191:24" pos:end="191:42">exponent_high_bands</name><index pos:start="191:43" pos:end="191:45">[<expr pos:start="191:44" pos:end="191:44"><name pos:start="191:44" pos:end="191:44">k</name></expr>]</index><index pos:start="191:46" pos:end="191:50">[<expr pos:start="191:47" pos:end="191:49"><name pos:start="191:47" pos:end="191:47">j</name><operator pos:start="191:48" pos:end="191:49">++</operator></expr>]</index></name> <operator pos:start="191:52" pos:end="191:52">=</operator> <name pos:start="191:54" pos:end="191:56">end</name> <operator pos:start="191:58" pos:end="191:58">-</operator> <name pos:start="191:60" pos:end="191:64">start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="193:13" pos:end="204:0"><expr pos:start="193:13" pos:end="193:41"><name pos:start="193:13" pos:end="193:37"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:34">exponent_high_sizes</name><index pos:start="193:35" pos:end="193:37">[<expr pos:start="193:36" pos:end="193:36"><name pos:start="193:36" pos:end="193:36">k</name></expr>]</index></name> <operator pos:start="193:39" pos:end="193:39">=</operator> <name pos:start="193:41" pos:end="193:41">j</name></expr>;</expr_stmt>
<cpp:if pos:start="194:1" pos:end="194:5">#<cpp:directive pos:start="194:2" pos:end="194:3">if</cpp:directive> <expr pos:start="194:5" pos:end="194:5"><literal type="number" pos:start="194:5" pos:end="194:5">0</literal></expr></cpp:if>
            tprintf(s-&gt;avctx, "%5d: coefs_end=%d high_band_start=%d nb_high_bands=%d: ",
                  s-&gt;frame_len &gt;&gt; k,
                  s-&gt;coefs_end[k],
                  s-&gt;high_band_start[k],
                  s-&gt;exponent_high_sizes[k]);
            for(j=0;j&lt;s-&gt;exponent_high_sizes[k];j++)
                tprintf(s-&gt;avctx, " %d", s-&gt;exponent_high_bands[k][j]);
            tprintf(s-&gt;avctx, "\n");
<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>
        </block_content>}</block></for>
    </block_content>}</block>
<cpp:ifdef pos:start="206:1" pos:end="206:12">#<cpp:directive pos:start="206:2" pos:end="206:6">ifdef</cpp:directive> <name pos:start="206:8" pos:end="206:12">TRACE</name></cpp:ifdef>
    <block pos:start="207:5" pos:end="219:0">{<block_content pos:start="208:9" pos:end="216:9">
        <decl_stmt pos:start="208:9" pos:end="208:17"><decl pos:start="208:9" pos:end="208:13"><type pos:start="208:9" pos:end="208:11"><name pos:start="208:9" pos:end="208:11">int</name></type> <name pos:start="208:13" pos:end="208:13">i</name></decl>, <decl pos:start="208:16" pos:end="208:16"><type ref="prev" pos:start="208:9" pos:end="208:11"/><name pos:start="208:16" pos:end="208:16">j</name></decl>;</decl_stmt>
        <for pos:start="209:9" pos:end="216:9">for<control pos:start="209:12" pos:end="209:46">(<init pos:start="209:13" pos:end="209:18"><expr pos:start="209:13" pos:end="209:17"><name pos:start="209:13" pos:end="209:13">i</name> <operator pos:start="209:15" pos:end="209:15">=</operator> <literal type="number" pos:start="209:17" pos:end="209:17">0</literal></expr>;</init> <condition pos:start="209:20" pos:end="209:41"><expr pos:start="209:20" pos:end="209:40"><name pos:start="209:20" pos:end="209:20">i</name> <operator pos:start="209:22" pos:end="209:22">&lt;</operator> <name pos:start="209:24" pos:end="209:40"><name pos:start="209:24" pos:end="209:24">s</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:40">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="209:43" pos:end="209:45"><expr pos:start="209:43" pos:end="209:45"><name pos:start="209:43" pos:end="209:43">i</name><operator pos:start="209:44" pos:end="209:45">++</operator></expr></incr>)</control> <block pos:start="209:48" pos:end="216:9">{<block_content pos:start="210:13" pos:end="215:36">
            <expr_stmt pos:start="210:13" pos:end="212:41"><expr pos:start="210:13" pos:end="212:40"><call pos:start="210:13" pos:end="212:40"><name pos:start="210:13" pos:end="210:19">tprintf</name><argument_list pos:start="210:20" pos:end="212:40">(<argument pos:start="210:21" pos:end="210:28"><expr pos:start="210:21" pos:end="210:28"><name pos:start="210:21" pos:end="210:28"><name pos:start="210:21" pos:end="210:21">s</name><operator pos:start="210:22" pos:end="210:23">-&gt;</operator><name pos:start="210:24" pos:end="210:28">avctx</name></name></expr></argument>, <argument pos:start="210:31" pos:end="210:43"><expr pos:start="210:31" pos:end="210:43"><literal type="string" pos:start="210:31" pos:end="210:43">"%5d: n=%2d:"</literal></expr></argument>,
                   <argument pos:start="211:20" pos:end="211:36"><expr pos:start="211:20" pos:end="211:36"><name pos:start="211:20" pos:end="211:31"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:31">frame_len</name></name> <operator pos:start="211:33" pos:end="211:34">&gt;&gt;</operator> <name pos:start="211:36" pos:end="211:36">i</name></expr></argument>,
                   <argument pos:start="212:20" pos:end="212:39"><expr pos:start="212:20" pos:end="212:39"><name pos:start="212:20" pos:end="212:39"><name pos:start="212:20" pos:end="212:20">s</name><operator pos:start="212:21" pos:end="212:22">-&gt;</operator><name pos:start="212:23" pos:end="212:36">exponent_sizes</name><index pos:start="212:37" pos:end="212:39">[<expr pos:start="212:38" pos:end="212:38"><name pos:start="212:38" pos:end="212:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="213:13" pos:end="214:66">for<control pos:start="213:16" pos:end="213:47">(<init pos:start="213:17" pos:end="213:20"><expr pos:start="213:17" pos:end="213:19"><name pos:start="213:17" pos:end="213:17">j</name><operator pos:start="213:18" pos:end="213:18">=</operator><literal type="number" pos:start="213:19" pos:end="213:19">0</literal></expr>;</init><condition pos:start="213:21" pos:end="213:43"><expr pos:start="213:21" pos:end="213:42"><name pos:start="213:21" pos:end="213:21">j</name><operator pos:start="213:22" pos:end="213:22">&lt;</operator><name pos:start="213:23" pos:end="213:42"><name pos:start="213:23" pos:end="213:23">s</name><operator pos:start="213:24" pos:end="213:25">-&gt;</operator><name pos:start="213:26" pos:end="213:39">exponent_sizes</name><index pos:start="213:40" pos:end="213:42">[<expr pos:start="213:41" pos:end="213:41"><name pos:start="213:41" pos:end="213:41">i</name></expr>]</index></name></expr>;</condition><incr pos:start="213:44" pos:end="213:46"><expr pos:start="213:44" pos:end="213:46"><name pos:start="213:44" pos:end="213:44">j</name><operator pos:start="213:45" pos:end="213:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="214:17" pos:end="214:66"><block_content pos:start="214:17" pos:end="214:66">
                <expr_stmt pos:start="214:17" pos:end="214:66"><expr pos:start="214:17" pos:end="214:65"><call pos:start="214:17" pos:end="214:65"><name pos:start="214:17" pos:end="214:23">tprintf</name><argument_list pos:start="214:24" pos:end="214:65">(<argument pos:start="214:25" pos:end="214:32"><expr pos:start="214:25" pos:end="214:32"><name pos:start="214:25" pos:end="214:32"><name pos:start="214:25" pos:end="214:25">s</name><operator pos:start="214:26" pos:end="214:27">-&gt;</operator><name pos:start="214:28" pos:end="214:32">avctx</name></name></expr></argument>, <argument pos:start="214:35" pos:end="214:39"><expr pos:start="214:35" pos:end="214:39"><literal type="string" pos:start="214:35" pos:end="214:39">" %d"</literal></expr></argument>, <argument pos:start="214:42" pos:end="214:64"><expr pos:start="214:42" pos:end="214:64"><name pos:start="214:42" pos:end="214:64"><name pos:start="214:42" pos:end="214:42">s</name><operator pos:start="214:43" pos:end="214:44">-&gt;</operator><name pos:start="214:45" pos:end="214:58">exponent_bands</name><index pos:start="214:59" pos:end="214:61">[<expr pos:start="214:60" pos:end="214:60"><name pos:start="214:60" pos:end="214:60">i</name></expr>]</index><index pos:start="214:62" pos:end="214:64">[<expr pos:start="214:63" pos:end="214:63"><name pos:start="214:63" pos:end="214:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
            <expr_stmt pos:start="215:13" pos:end="215:36"><expr pos:start="215:13" pos:end="215:35"><call pos:start="215:13" pos:end="215:35"><name pos:start="215:13" pos:end="215:19">tprintf</name><argument_list pos:start="215:20" pos:end="215:35">(<argument pos:start="215:21" pos:end="215:28"><expr pos:start="215:21" pos:end="215:28"><name pos:start="215:21" pos:end="215:28"><name pos:start="215:21" pos:end="215:21">s</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:28">avctx</name></name></expr></argument>, <argument pos:start="215:31" pos:end="215:34"><expr pos:start="215:31" pos:end="215:34"><literal type="string" pos:start="215:31" pos:end="215:34">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block>
<cpp:endif pos:start="218:1" pos:end="218:6">#<cpp:directive pos:start="218:2" pos:end="218:6">endif</cpp:directive></cpp:endif>
    <comment type="block" pos:start="219:5" pos:end="219:49">/* init MDCT windows : simple sinus window */</comment>
    <for pos:start="220:5" pos:end="230:5">for<control pos:start="220:8" pos:end="220:42">(<init pos:start="220:9" pos:end="220:14"><expr pos:start="220:9" pos:end="220:13"><name pos:start="220:9" pos:end="220:9">i</name> <operator pos:start="220:11" pos:end="220:11">=</operator> <literal type="number" pos:start="220:13" pos:end="220:13">0</literal></expr>;</init> <condition pos:start="220:16" pos:end="220:37"><expr pos:start="220:16" pos:end="220:36"><name pos:start="220:16" pos:end="220:16">i</name> <operator pos:start="220:18" pos:end="220:18">&lt;</operator> <name pos:start="220:20" pos:end="220:36"><name pos:start="220:20" pos:end="220:20">s</name><operator pos:start="220:21" pos:end="220:22">-&gt;</operator><name pos:start="220:23" pos:end="220:36">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="220:39" pos:end="220:41"><expr pos:start="220:39" pos:end="220:41"><name pos:start="220:39" pos:end="220:39">i</name><operator pos:start="220:40" pos:end="220:41">++</operator></expr></incr>)</control> <block pos:start="220:44" pos:end="230:5">{<block_content pos:start="221:9" pos:end="229:31">
        <decl_stmt pos:start="221:9" pos:end="221:17"><decl pos:start="221:9" pos:end="221:13"><type pos:start="221:9" pos:end="221:11"><name pos:start="221:9" pos:end="221:11">int</name></type> <name pos:start="221:13" pos:end="221:13">n</name></decl>, <decl pos:start="221:16" pos:end="221:16"><type ref="prev" pos:start="221:9" pos:end="221:11"/><name pos:start="221:16" pos:end="221:16">j</name></decl>;</decl_stmt>
        <decl_stmt pos:start="222:9" pos:end="222:20"><decl pos:start="222:9" pos:end="222:19"><type pos:start="222:9" pos:end="222:13"><name pos:start="222:9" pos:end="222:13">float</name></type> <name pos:start="222:15" pos:end="222:19">alpha</name></decl>;</decl_stmt>
        <expr_stmt pos:start="223:9" pos:end="223:41"><expr pos:start="223:9" pos:end="223:40"><name pos:start="223:9" pos:end="223:9">n</name> <operator pos:start="223:11" pos:end="223:11">=</operator> <literal type="number" pos:start="223:13" pos:end="223:13">1</literal> <operator pos:start="223:15" pos:end="223:16">&lt;&lt;</operator> <operator pos:start="223:18" pos:end="223:18">(</operator><name pos:start="223:19" pos:end="223:35"><name pos:start="223:19" pos:end="223:19">s</name><operator pos:start="223:20" pos:end="223:21">-&gt;</operator><name pos:start="223:22" pos:end="223:35">frame_len_bits</name></name> <operator pos:start="223:37" pos:end="223:37">-</operator> <name pos:start="223:39" pos:end="223:39">i</name><operator pos:start="223:40" pos:end="223:40">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="224:9" pos:end="224:46"><expr pos:start="224:9" pos:end="224:45"><name pos:start="224:9" pos:end="224:14">window</name> <operator pos:start="224:16" pos:end="224:16">=</operator> <call pos:start="224:18" pos:end="224:45"><name pos:start="224:18" pos:end="224:26">av_malloc</name><argument_list pos:start="224:27" pos:end="224:45">(<argument pos:start="224:28" pos:end="224:44"><expr pos:start="224:28" pos:end="224:44"><sizeof pos:start="224:28" pos:end="224:40">sizeof<argument_list pos:start="224:34" pos:end="224:40">(<argument pos:start="224:35" pos:end="224:39"><expr pos:start="224:35" pos:end="224:39"><name pos:start="224:35" pos:end="224:39">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="224:42" pos:end="224:42">*</operator> <name pos:start="224:44" pos:end="224:44">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="225:9" pos:end="225:33"><expr pos:start="225:9" pos:end="225:32"><name pos:start="225:9" pos:end="225:13">alpha</name> <operator pos:start="225:15" pos:end="225:15">=</operator> <name pos:start="225:17" pos:end="225:20">M_PI</name> <operator pos:start="225:22" pos:end="225:22">/</operator> <operator pos:start="225:24" pos:end="225:24">(</operator><literal type="number" pos:start="225:25" pos:end="225:27">2.0</literal> <operator pos:start="225:29" pos:end="225:29">*</operator> <name pos:start="225:31" pos:end="225:31">n</name><operator pos:start="225:32" pos:end="225:32">)</operator></expr>;</expr_stmt>
        <for pos:start="226:9" pos:end="228:9">for<control pos:start="226:12" pos:end="226:24">(<init pos:start="226:13" pos:end="226:16"><expr pos:start="226:13" pos:end="226:15"><name pos:start="226:13" pos:end="226:13">j</name><operator pos:start="226:14" pos:end="226:14">=</operator><literal type="number" pos:start="226:15" pos:end="226:15">0</literal></expr>;</init><condition pos:start="226:17" pos:end="226:20"><expr pos:start="226:17" pos:end="226:19"><name pos:start="226:17" pos:end="226:17">j</name><operator pos:start="226:18" pos:end="226:18">&lt;</operator><name pos:start="226:19" pos:end="226:19">n</name></expr>;</condition><incr pos:start="226:21" pos:end="226:23"><expr pos:start="226:21" pos:end="226:23"><name pos:start="226:21" pos:end="226:21">j</name><operator pos:start="226:22" pos:end="226:23">++</operator></expr></incr>)</control> <block pos:start="226:26" pos:end="228:9">{<block_content pos:start="227:13" pos:end="227:47">
            <expr_stmt pos:start="227:13" pos:end="227:47"><expr pos:start="227:13" pos:end="227:46"><name pos:start="227:13" pos:end="227:21"><name pos:start="227:13" pos:end="227:18">window</name><index pos:start="227:19" pos:end="227:21">[<expr pos:start="227:20" pos:end="227:20"><name pos:start="227:20" pos:end="227:20">j</name></expr>]</index></name> <operator pos:start="227:23" pos:end="227:23">=</operator> <call pos:start="227:25" pos:end="227:46"><name pos:start="227:25" pos:end="227:27">sin</name><argument_list pos:start="227:28" pos:end="227:46">(<argument pos:start="227:29" pos:end="227:45"><expr pos:start="227:29" pos:end="227:45"><operator pos:start="227:29" pos:end="227:29">(</operator><name pos:start="227:30" pos:end="227:30">j</name> <operator pos:start="227:32" pos:end="227:32">+</operator> <literal type="number" pos:start="227:34" pos:end="227:36">0.5</literal><operator pos:start="227:37" pos:end="227:37">)</operator> <operator pos:start="227:39" pos:end="227:39">*</operator> <name pos:start="227:41" pos:end="227:45">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="229:9" pos:end="229:31"><expr pos:start="229:9" pos:end="229:30"><name pos:start="229:9" pos:end="229:21"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:18">windows</name><index pos:start="229:19" pos:end="229:21">[<expr pos:start="229:20" pos:end="229:20"><name pos:start="229:20" pos:end="229:20">i</name></expr>]</index></name> <operator pos:start="229:23" pos:end="229:23">=</operator> <name pos:start="229:25" pos:end="229:30">window</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="231:5" pos:end="231:31"><expr pos:start="231:5" pos:end="231:30"><name pos:start="231:5" pos:end="231:26"><name pos:start="231:5" pos:end="231:5">s</name><operator pos:start="231:6" pos:end="231:7">-&gt;</operator><name pos:start="231:8" pos:end="231:26">reset_block_lengths</name></name> <operator pos:start="231:28" pos:end="231:28">=</operator> <literal type="number" pos:start="231:30" pos:end="231:30">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="232:5" pos:end="253:5"><if pos:start="232:5" pos:end="253:5">if <condition pos:start="232:8" pos:end="232:28">(<expr pos:start="232:9" pos:end="232:27"><name pos:start="232:9" pos:end="232:27"><name pos:start="232:9" pos:end="232:9">s</name><operator pos:start="232:10" pos:end="232:11">-&gt;</operator><name pos:start="232:12" pos:end="232:27">use_noise_coding</name></name></expr>)</condition> <block pos:start="232:30" pos:end="253:5">{<block_content pos:start="234:9" pos:end="253:0">
        <comment type="block" pos:start="233:9" pos:end="233:38">/* init the noise generator */</comment>
        <if_stmt pos:start="234:9" pos:end="239:0"><if pos:start="234:9" pos:end="235:33">if <condition pos:start="234:12" pos:end="234:27">(<expr pos:start="234:13" pos:end="234:26"><name pos:start="234:13" pos:end="234:26"><name pos:start="234:13" pos:end="234:13">s</name><operator pos:start="234:14" pos:end="234:15">-&gt;</operator><name pos:start="234:16" pos:end="234:26">use_exp_vlc</name></name></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:33"><block_content pos:start="235:13" pos:end="235:33">
            <expr_stmt pos:start="235:13" pos:end="235:33"><expr pos:start="235:13" pos:end="235:32"><name pos:start="235:13" pos:end="235:25"><name pos:start="235:13" pos:end="235:13">s</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:25">noise_mult</name></name> <operator pos:start="235:27" pos:end="235:27">=</operator> <literal type="number" pos:start="235:29" pos:end="235:32">0.02</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="236:9" pos:end="239:0">else<block type="pseudo" pos:start="237:13" pos:end="239:0"><block_content pos:start="237:13" pos:end="239:0">
            <expr_stmt pos:start="237:13" pos:end="239:0"><expr pos:start="237:13" pos:end="237:32"><name pos:start="237:13" pos:end="237:25"><name pos:start="237:13" pos:end="237:13">s</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:25">noise_mult</name></name> <operator pos:start="237:27" pos:end="237:27">=</operator> <literal type="number" pos:start="237:29" pos:end="237:32">0.04</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
<cpp:ifdef pos:start="238:1" pos:end="238:12">#<cpp:directive pos:start="238:2" pos:end="238:6">ifdef</cpp:directive> <name pos:start="238:8" pos:end="238:12">TRACE</name></cpp:ifdef>
        <for pos:start="239:9" pos:end="242:0">for<control pos:start="239:12" pos:end="239:37">(<init pos:start="239:13" pos:end="239:16"><expr pos:start="239:13" pos:end="239:15"><name pos:start="239:13" pos:end="239:13">i</name><operator pos:start="239:14" pos:end="239:14">=</operator><literal type="number" pos:start="239:15" pos:end="239:15">0</literal></expr>;</init><condition pos:start="239:17" pos:end="239:33"><expr pos:start="239:17" pos:end="239:32"><name pos:start="239:17" pos:end="239:17">i</name><operator pos:start="239:18" pos:end="239:18">&lt;</operator><name pos:start="239:19" pos:end="239:32">NOISE_TAB_SIZE</name></expr>;</condition><incr pos:start="239:34" pos:end="239:36"><expr pos:start="239:34" pos:end="239:36"><name pos:start="239:34" pos:end="239:34">i</name><operator pos:start="239:35" pos:end="239:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="240:13" pos:end="242:0"><block_content pos:start="240:13" pos:end="242:0">
            <expr_stmt pos:start="240:13" pos:end="242:0"><expr pos:start="240:13" pos:end="240:51"><name pos:start="240:13" pos:end="240:29"><name pos:start="240:13" pos:end="240:13">s</name><operator pos:start="240:14" pos:end="240:15">-&gt;</operator><name pos:start="240:16" pos:end="240:26">noise_table</name><index pos:start="240:27" pos:end="240:29">[<expr pos:start="240:28" pos:end="240:28"><name pos:start="240:28" pos:end="240:28">i</name></expr>]</index></name> <operator pos:start="240:31" pos:end="240:31">=</operator> <literal type="number" pos:start="240:33" pos:end="240:35">1.0</literal> <operator pos:start="240:37" pos:end="240:37">*</operator> <name pos:start="240:39" pos:end="240:51"><name pos:start="240:39" pos:end="240:39">s</name><operator pos:start="240:40" pos:end="240:41">-&gt;</operator><name pos:start="240:42" pos:end="240:51">noise_mult</name></name></expr>;</expr_stmt></block_content></block></for>
<cpp:else pos:start="241:1" pos:end="241:5">#<cpp:directive pos:start="241:2" pos:end="241:5">else</cpp:directive></cpp:else>
        <block pos:start="242:9" pos:end="253:0">{<block_content pos:start="243:13" pos:end="250:13">
            <decl_stmt pos:start="243:13" pos:end="243:30"><decl pos:start="243:13" pos:end="243:29"><type pos:start="243:13" pos:end="243:24"><name pos:start="243:13" pos:end="243:20">unsigned</name> <name pos:start="243:22" pos:end="243:24">int</name></type> <name pos:start="243:26" pos:end="243:29">seed</name></decl>;</decl_stmt>
            <decl_stmt pos:start="244:13" pos:end="244:23"><decl pos:start="244:13" pos:end="244:22"><type pos:start="244:13" pos:end="244:17"><name pos:start="244:13" pos:end="244:17">float</name></type> <name pos:start="244:19" pos:end="244:22">norm</name></decl>;</decl_stmt>
            <expr_stmt pos:start="245:13" pos:end="245:21"><expr pos:start="245:13" pos:end="245:20"><name pos:start="245:13" pos:end="245:16">seed</name> <operator pos:start="245:18" pos:end="245:18">=</operator> <literal type="number" pos:start="245:20" pos:end="245:20">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="246:13" pos:end="246:72"><expr pos:start="246:13" pos:end="246:71"><name pos:start="246:13" pos:end="246:16">norm</name> <operator pos:start="246:18" pos:end="246:18">=</operator> <operator pos:start="246:20" pos:end="246:20">(</operator><literal type="number" pos:start="246:21" pos:end="246:23">1.0</literal> <operator pos:start="246:25" pos:end="246:25">/</operator> <operator pos:start="246:27" pos:end="246:27">(</operator><name pos:start="246:28" pos:end="246:32">float</name><operator pos:start="246:33" pos:end="246:33">)</operator><operator pos:start="246:34" pos:end="246:34">(</operator><literal type="number" pos:start="246:35" pos:end="246:37">1LL</literal> <operator pos:start="246:39" pos:end="246:40">&lt;&lt;</operator> <literal type="number" pos:start="246:42" pos:end="246:43">31</literal><operator pos:start="246:44" pos:end="246:44">)</operator><operator pos:start="246:45" pos:end="246:45">)</operator> <operator pos:start="246:47" pos:end="246:47">*</operator> <call pos:start="246:49" pos:end="246:55"><name pos:start="246:49" pos:end="246:52">sqrt</name><argument_list pos:start="246:53" pos:end="246:55">(<argument pos:start="246:54" pos:end="246:54"><expr pos:start="246:54" pos:end="246:54"><literal type="number" pos:start="246:54" pos:end="246:54">3</literal></expr></argument>)</argument_list></call> <operator pos:start="246:57" pos:end="246:57">*</operator> <name pos:start="246:59" pos:end="246:71"><name pos:start="246:59" pos:end="246:59">s</name><operator pos:start="246:60" pos:end="246:61">-&gt;</operator><name pos:start="246:62" pos:end="246:71">noise_mult</name></name></expr>;</expr_stmt>
            <for pos:start="247:13" pos:end="250:13">for<control pos:start="247:16" pos:end="247:41">(<init pos:start="247:17" pos:end="247:20"><expr pos:start="247:17" pos:end="247:19"><name pos:start="247:17" pos:end="247:17">i</name><operator pos:start="247:18" pos:end="247:18">=</operator><literal type="number" pos:start="247:19" pos:end="247:19">0</literal></expr>;</init><condition pos:start="247:21" pos:end="247:37"><expr pos:start="247:21" pos:end="247:36"><name pos:start="247:21" pos:end="247:21">i</name><operator pos:start="247:22" pos:end="247:22">&lt;</operator><name pos:start="247:23" pos:end="247:36">NOISE_TAB_SIZE</name></expr>;</condition><incr pos:start="247:38" pos:end="247:40"><expr pos:start="247:38" pos:end="247:40"><name pos:start="247:38" pos:end="247:38">i</name><operator pos:start="247:39" pos:end="247:40">++</operator></expr></incr>)</control> <block pos:start="247:43" pos:end="250:13">{<block_content pos:start="248:17" pos:end="249:62">
                <expr_stmt pos:start="248:17" pos:end="248:41"><expr pos:start="248:17" pos:end="248:40"><name pos:start="248:17" pos:end="248:20">seed</name> <operator pos:start="248:22" pos:end="248:22">=</operator> <name pos:start="248:24" pos:end="248:27">seed</name> <operator pos:start="248:29" pos:end="248:29">*</operator> <literal type="number" pos:start="248:31" pos:end="248:38">314159</literal> <operator pos:start="248:38" pos:end="248:38">+</operator> <literal type="number" pos:start="248:40" pos:end="248:40">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="249:17" pos:end="249:62"><expr pos:start="249:17" pos:end="249:61"><name pos:start="249:17" pos:end="249:33"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:30">noise_table</name><index pos:start="249:31" pos:end="249:33">[<expr pos:start="249:32" pos:end="249:32"><name pos:start="249:32" pos:end="249:32">i</name></expr>]</index></name> <operator pos:start="249:35" pos:end="249:35">=</operator> <operator pos:start="249:37" pos:end="249:37">(</operator><name pos:start="249:38" pos:end="249:42">float</name><operator pos:start="249:43" pos:end="249:43">)</operator><operator pos:start="249:44" pos:end="249:44">(</operator><operator pos:start="249:45" pos:end="249:45">(</operator><name pos:start="249:46" pos:end="249:48">int</name><operator pos:start="249:49" pos:end="249:49">)</operator><name pos:start="249:50" pos:end="249:53">seed</name><operator pos:start="249:54" pos:end="249:54">)</operator> <operator pos:start="249:56" pos:end="249:56">*</operator> <name pos:start="249:58" pos:end="249:61">norm</name></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block>
<cpp:endif pos:start="252:1" pos:end="252:6">#<cpp:directive pos:start="252:2" pos:end="252:6">endif</cpp:directive></cpp:endif>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="254:5" pos:end="254:52">/* choose the VLC tables for the coefficients */</comment>
    <expr_stmt pos:start="255:5" pos:end="255:23"><expr pos:start="255:5" pos:end="255:22"><name pos:start="255:5" pos:end="255:18">coef_vlc_table</name> <operator pos:start="255:20" pos:end="255:20">=</operator> <literal type="number" pos:start="255:22" pos:end="255:22">2</literal></expr>;</expr_stmt>
    <if_stmt pos:start="256:5" pos:end="261:5"><if pos:start="256:5" pos:end="261:5">if <condition pos:start="256:8" pos:end="256:32">(<expr pos:start="256:9" pos:end="256:31"><name pos:start="256:9" pos:end="256:22"><name pos:start="256:9" pos:end="256:9">s</name><operator pos:start="256:10" pos:end="256:11">-&gt;</operator><name pos:start="256:12" pos:end="256:22">sample_rate</name></name> <operator pos:start="256:24" pos:end="256:25">&gt;=</operator> <literal type="number" pos:start="256:27" pos:end="256:31">32000</literal></expr>)</condition> <block pos:start="256:34" pos:end="261:5">{<block_content pos:start="257:9" pos:end="260:31">
        <if_stmt pos:start="257:9" pos:end="260:31"><if pos:start="257:9" pos:end="258:31">if <condition pos:start="257:12" pos:end="257:24">(<expr pos:start="257:13" pos:end="257:23"><name pos:start="257:13" pos:end="257:16">bps1</name> <operator pos:start="257:18" pos:end="257:18">&lt;</operator> <literal type="number" pos:start="257:20" pos:end="257:23">0.72</literal></expr>)</condition><block type="pseudo" pos:start="258:13" pos:end="258:31"><block_content pos:start="258:13" pos:end="258:31">
            <expr_stmt pos:start="258:13" pos:end="258:31"><expr pos:start="258:13" pos:end="258:30"><name pos:start="258:13" pos:end="258:26">coef_vlc_table</name> <operator pos:start="258:28" pos:end="258:28">=</operator> <literal type="number" pos:start="258:30" pos:end="258:30">0</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="259:9" pos:end="260:31">else if <condition pos:start="259:17" pos:end="259:29">(<expr pos:start="259:18" pos:end="259:28"><name pos:start="259:18" pos:end="259:21">bps1</name> <operator pos:start="259:23" pos:end="259:23">&lt;</operator> <literal type="number" pos:start="259:25" pos:end="259:28">1.16</literal></expr>)</condition><block type="pseudo" pos:start="260:13" pos:end="260:31"><block_content pos:start="260:13" pos:end="260:31">
            <expr_stmt pos:start="260:13" pos:end="260:31"><expr pos:start="260:13" pos:end="260:30"><name pos:start="260:13" pos:end="260:26">coef_vlc_table</name> <operator pos:start="260:28" pos:end="260:28">=</operator> <literal type="number" pos:start="260:30" pos:end="260:30">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="262:5" pos:end="262:56"><expr pos:start="262:5" pos:end="262:55"><name pos:start="262:5" pos:end="262:19"><name pos:start="262:5" pos:end="262:5">s</name><operator pos:start="262:6" pos:end="262:7">-&gt;</operator><name pos:start="262:8" pos:end="262:16">coef_vlcs</name><index pos:start="262:17" pos:end="262:19">[<expr pos:start="262:18" pos:end="262:18"><literal type="number" pos:start="262:18" pos:end="262:18">0</literal></expr>]</index></name><operator pos:start="262:20" pos:end="262:20">=</operator> <operator pos:start="262:22" pos:end="262:22">&amp;</operator><name pos:start="262:23" pos:end="262:55"><name pos:start="262:23" pos:end="262:31">coef_vlcs</name><index pos:start="262:32" pos:end="262:55">[<expr pos:start="262:33" pos:end="262:50"><name pos:start="262:33" pos:end="262:46">coef_vlc_table</name> <operator pos:start="262:48" pos:end="262:48">*</operator> <literal type="number" pos:start="262:50" pos:end="262:50">2</literal></expr>    ]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="263:5" pos:end="263:56"><expr pos:start="263:5" pos:end="263:55"><name pos:start="263:5" pos:end="263:19"><name pos:start="263:5" pos:end="263:5">s</name><operator pos:start="263:6" pos:end="263:7">-&gt;</operator><name pos:start="263:8" pos:end="263:16">coef_vlcs</name><index pos:start="263:17" pos:end="263:19">[<expr pos:start="263:18" pos:end="263:18"><literal type="number" pos:start="263:18" pos:end="263:18">1</literal></expr>]</index></name><operator pos:start="263:20" pos:end="263:20">=</operator> <operator pos:start="263:22" pos:end="263:22">&amp;</operator><name pos:start="263:23" pos:end="263:55"><name pos:start="263:23" pos:end="263:31">coef_vlcs</name><index pos:start="263:32" pos:end="263:55">[<expr pos:start="263:33" pos:end="263:54"><name pos:start="263:33" pos:end="263:46">coef_vlc_table</name> <operator pos:start="263:48" pos:end="263:48">*</operator> <literal type="number" pos:start="263:50" pos:end="263:52">2</literal> <operator pos:start="263:52" pos:end="263:52">+</operator> <literal type="number" pos:start="263:54" pos:end="263:54">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="264:5" pos:end="265:35"><expr pos:start="264:5" pos:end="265:34"><call pos:start="264:5" pos:end="265:34"><name pos:start="264:5" pos:end="264:17">init_coef_vlc</name><argument_list pos:start="264:18" pos:end="265:34">(<argument pos:start="264:19" pos:end="264:33"><expr pos:start="264:19" pos:end="264:33"><operator pos:start="264:19" pos:end="264:19">&amp;</operator><name pos:start="264:20" pos:end="264:33"><name pos:start="264:20" pos:end="264:20">s</name><operator pos:start="264:21" pos:end="264:22">-&gt;</operator><name pos:start="264:23" pos:end="264:30">coef_vlc</name><index pos:start="264:31" pos:end="264:33">[<expr pos:start="264:32" pos:end="264:32"><literal type="number" pos:start="264:32" pos:end="264:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="264:36" pos:end="264:51"><expr pos:start="264:36" pos:end="264:51"><operator pos:start="264:36" pos:end="264:36">&amp;</operator><name pos:start="264:37" pos:end="264:51"><name pos:start="264:37" pos:end="264:37">s</name><operator pos:start="264:38" pos:end="264:39">-&gt;</operator><name pos:start="264:40" pos:end="264:48">run_table</name><index pos:start="264:49" pos:end="264:51">[<expr pos:start="264:50" pos:end="264:50"><literal type="number" pos:start="264:50" pos:end="264:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="264:54" pos:end="264:71"><expr pos:start="264:54" pos:end="264:71"><operator pos:start="264:54" pos:end="264:54">&amp;</operator><name pos:start="264:55" pos:end="264:71"><name pos:start="264:55" pos:end="264:55">s</name><operator pos:start="264:56" pos:end="264:57">-&gt;</operator><name pos:start="264:58" pos:end="264:68">level_table</name><index pos:start="264:69" pos:end="264:71">[<expr pos:start="264:70" pos:end="264:70"><literal type="number" pos:start="264:70" pos:end="264:70">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="264:74" pos:end="264:89"><expr pos:start="264:74" pos:end="264:89"><operator pos:start="264:74" pos:end="264:74">&amp;</operator><name pos:start="264:75" pos:end="264:89"><name pos:start="264:75" pos:end="264:75">s</name><operator pos:start="264:76" pos:end="264:77">-&gt;</operator><name pos:start="264:78" pos:end="264:86">int_table</name><index pos:start="264:87" pos:end="264:89">[<expr pos:start="264:88" pos:end="264:88"><literal type="number" pos:start="264:88" pos:end="264:88">0</literal></expr>]</index></name></expr></argument>,
                  <argument pos:start="265:19" pos:end="265:33"><expr pos:start="265:19" pos:end="265:33"><name pos:start="265:19" pos:end="265:33"><name pos:start="265:19" pos:end="265:19">s</name><operator pos:start="265:20" pos:end="265:21">-&gt;</operator><name pos:start="265:22" pos:end="265:30">coef_vlcs</name><index pos:start="265:31" pos:end="265:33">[<expr pos:start="265:32" pos:end="265:32"><literal type="number" pos:start="265:32" pos:end="265:32">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="266:5" pos:end="267:35"><expr pos:start="266:5" pos:end="267:34"><call pos:start="266:5" pos:end="267:34"><name pos:start="266:5" pos:end="266:17">init_coef_vlc</name><argument_list pos:start="266:18" pos:end="267:34">(<argument pos:start="266:19" pos:end="266:33"><expr pos:start="266:19" pos:end="266:33"><operator pos:start="266:19" pos:end="266:19">&amp;</operator><name pos:start="266:20" pos:end="266:33"><name pos:start="266:20" pos:end="266:20">s</name><operator pos:start="266:21" pos:end="266:22">-&gt;</operator><name pos:start="266:23" pos:end="266:30">coef_vlc</name><index pos:start="266:31" pos:end="266:33">[<expr pos:start="266:32" pos:end="266:32"><literal type="number" pos:start="266:32" pos:end="266:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="266:36" pos:end="266:51"><expr pos:start="266:36" pos:end="266:51"><operator pos:start="266:36" pos:end="266:36">&amp;</operator><name pos:start="266:37" pos:end="266:51"><name pos:start="266:37" pos:end="266:37">s</name><operator pos:start="266:38" pos:end="266:39">-&gt;</operator><name pos:start="266:40" pos:end="266:48">run_table</name><index pos:start="266:49" pos:end="266:51">[<expr pos:start="266:50" pos:end="266:50"><literal type="number" pos:start="266:50" pos:end="266:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="266:54" pos:end="266:71"><expr pos:start="266:54" pos:end="266:71"><operator pos:start="266:54" pos:end="266:54">&amp;</operator><name pos:start="266:55" pos:end="266:71"><name pos:start="266:55" pos:end="266:55">s</name><operator pos:start="266:56" pos:end="266:57">-&gt;</operator><name pos:start="266:58" pos:end="266:68">level_table</name><index pos:start="266:69" pos:end="266:71">[<expr pos:start="266:70" pos:end="266:70"><literal type="number" pos:start="266:70" pos:end="266:70">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="266:74" pos:end="266:89"><expr pos:start="266:74" pos:end="266:89"><operator pos:start="266:74" pos:end="266:74">&amp;</operator><name pos:start="266:75" pos:end="266:89"><name pos:start="266:75" pos:end="266:75">s</name><operator pos:start="266:76" pos:end="266:77">-&gt;</operator><name pos:start="266:78" pos:end="266:86">int_table</name><index pos:start="266:87" pos:end="266:89">[<expr pos:start="266:88" pos:end="266:88"><literal type="number" pos:start="266:88" pos:end="266:88">1</literal></expr>]</index></name></expr></argument>,
                  <argument pos:start="267:19" pos:end="267:33"><expr pos:start="267:19" pos:end="267:33"><name pos:start="267:19" pos:end="267:33"><name pos:start="267:19" pos:end="267:19">s</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:30">coef_vlcs</name><index pos:start="267:31" pos:end="267:33">[<expr pos:start="267:32" pos:end="267:32"><literal type="number" pos:start="267:32" pos:end="267:32">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="268:5" pos:end="268:13">return <expr pos:start="268:12" pos:end="268:12"><literal type="number" pos:start="268:12" pos:end="268:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
