<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7703.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:64">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:56"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:56">target_sigaction</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ka</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:63"><name pos:start="3:47" pos:end="3:58">CPUCRISState</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:9" pos:end="95:34">

	<decl_stmt pos:start="7:9" pos:end="7:42"><decl pos:start="7:9" pos:end="7:41"><type pos:start="7:9" pos:end="7:36"><name pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:34">target_signal_frame</name></name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:41">frame</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:29"><decl pos:start="9:9" pos:end="9:28"><type pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:17">abi_ulong</name></type> <name pos:start="9:19" pos:end="9:28">frame_addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:20"><decl pos:start="11:9" pos:end="11:19"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">err</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>



	<expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:18">frame_addr</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:53"><name pos:start="17:22" pos:end="17:33">get_sigframe</name><argument_list pos:start="17:34" pos:end="17:53">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">env</name></expr></argument>, <argument pos:start="17:40" pos:end="17:52"><expr pos:start="17:40" pos:end="17:52"><sizeof pos:start="17:40" pos:end="17:45">sizeof <name/></sizeof>*<name pos:start="17:48" pos:end="17:52">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="19:9" pos:end="21:30"><if pos:start="19:9" pos:end="21:30">if <condition pos:start="19:12" pos:end="19:66">(<expr pos:start="19:13" pos:end="19:65"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:65"><name pos:start="19:14" pos:end="19:29">lock_user_struct</name><argument_list pos:start="19:30" pos:end="19:65">(<argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:42">VERIFY_WRITE</name></expr></argument>, <argument pos:start="19:45" pos:end="19:49"><expr pos:start="19:45" pos:end="19:49"><name pos:start="19:45" pos:end="19:49">frame</name></expr></argument>, <argument pos:start="19:52" pos:end="19:61"><expr pos:start="19:52" pos:end="19:61"><name pos:start="19:52" pos:end="19:61">frame_addr</name></expr></argument>, <argument pos:start="19:64" pos:end="19:64"><expr pos:start="19:64" pos:end="19:64"><literal type="number" pos:start="19:64" pos:end="19:64">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:30"><block_content pos:start="21:17" pos:end="21:30">

		<goto pos:start="21:17" pos:end="21:30">goto <name pos:start="21:22" pos:end="21:29">badframe</name>;</goto></block_content></block></if></if_stmt>



	<comment type="block" pos:start="25:9" pos:end="37:11">/*

	 * The CRIS signal return trampoline. A real linux/CRIS kernel doesn't

	 * use this trampoline anymore but it sets it up for GDB.

	 * In QEMU, using the trampoline simplifies things a bit so we use it.

	 *

	 * This is movu.w __NR_sigreturn, r9; break 13;

	 */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><call pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:14">__put_user</name><argument_list pos:start="39:15" pos:end="39:40">(<argument pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:21"><literal type="number" pos:start="39:16" pos:end="39:21">0x9c5f</literal></expr></argument>, <argument pos:start="39:24" pos:end="39:39"><expr pos:start="39:24" pos:end="39:39"><name pos:start="39:24" pos:end="39:37"><name pos:start="39:24" pos:end="39:28">frame</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:37">retcode</name></name><operator pos:start="39:38" pos:end="39:38">+</operator><literal type="number" pos:start="39:39" pos:end="39:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:35"><expr pos:start="41:5" pos:end="43:34"><call pos:start="41:5" pos:end="43:34"><name pos:start="41:5" pos:end="41:14">__put_user</name><argument_list pos:start="41:15" pos:end="43:34">(<argument pos:start="41:16" pos:end="41:34"><expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">TARGET_NR_sigreturn</name></expr></argument>,

               <argument pos:start="43:16" pos:end="43:33"><expr pos:start="43:16" pos:end="43:33"><name pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:20">frame</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:29">retcode</name></name> <operator pos:start="43:31" pos:end="43:31">+</operator> <literal type="number" pos:start="43:33" pos:end="43:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><call pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:14">__put_user</name><argument_list pos:start="45:15" pos:end="45:42">(<argument pos:start="45:16" pos:end="45:21"><expr pos:start="45:16" pos:end="45:21"><literal type="number" pos:start="45:16" pos:end="45:21">0xe93d</literal></expr></argument>, <argument pos:start="45:24" pos:end="45:41"><expr pos:start="45:24" pos:end="45:41"><name pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:28">frame</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:37">retcode</name></name> <operator pos:start="45:39" pos:end="45:39">+</operator> <literal type="number" pos:start="45:41" pos:end="45:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="49:9" pos:end="49:29">/* Save the mask.  */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:48"><expr pos:start="51:5" pos:end="51:47"><call pos:start="51:5" pos:end="51:47"><name pos:start="51:5" pos:end="51:14">__put_user</name><argument_list pos:start="51:15" pos:end="51:47">(<argument pos:start="51:16" pos:end="51:26"><expr pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:18">set</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">sig</name><index pos:start="51:24" pos:end="51:26">[<expr pos:start="51:25" pos:end="51:25"><literal type="number" pos:start="51:25" pos:end="51:25">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:29" pos:end="51:46"><expr pos:start="51:29" pos:end="51:46"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:46"><name pos:start="51:30" pos:end="51:34">frame</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:38">sc</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:46">oldmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="53:9" pos:end="55:30"><if pos:start="53:9" pos:end="55:30">if <condition pos:start="53:12" pos:end="53:16">(<expr pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">err</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:30"><block_content pos:start="55:17" pos:end="55:30">

		<goto pos:start="55:17" pos:end="55:30">goto <name pos:start="55:22" pos:end="55:29">badframe</name>;</goto></block_content></block></if></if_stmt>



	<for pos:start="59:9" pos:end="65:9">for<control pos:start="59:12" pos:end="59:46">(<init pos:start="59:13" pos:end="59:18"><expr pos:start="59:13" pos:end="59:17"><name pos:start="59:13" pos:end="59:13">i</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</init> <condition pos:start="59:20" pos:end="59:41"><expr pos:start="59:20" pos:end="59:40"><name pos:start="59:20" pos:end="59:20">i</name> <operator pos:start="59:22" pos:end="59:22">&lt;</operator> <name pos:start="59:24" pos:end="59:40">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="59:43" pos:end="59:45"><expr pos:start="59:43" pos:end="59:45"><name pos:start="59:43" pos:end="59:43">i</name><operator pos:start="59:44" pos:end="59:45">++</operator></expr></incr>)</control> <block pos:start="59:48" pos:end="65:9">{<block_content pos:start="61:17" pos:end="63:38">

		<if_stmt pos:start="61:17" pos:end="63:38"><if pos:start="61:17" pos:end="63:38">if <condition pos:start="61:20" pos:end="61:70">(<expr pos:start="61:21" pos:end="61:69"><call pos:start="61:21" pos:end="61:69"><name pos:start="61:21" pos:end="61:30">__put_user</name><argument_list pos:start="61:31" pos:end="61:69">(<argument pos:start="61:32" pos:end="61:42"><expr pos:start="61:32" pos:end="61:42"><name pos:start="61:32" pos:end="61:42"><name pos:start="61:32" pos:end="61:34">set</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:39">sig</name><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="61:45" pos:end="61:68"><expr pos:start="61:45" pos:end="61:68"><operator pos:start="61:45" pos:end="61:45">&amp;</operator><name pos:start="61:46" pos:end="61:68"><name pos:start="61:46" pos:end="61:50">frame</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:61">extramask</name><index pos:start="61:62" pos:end="61:68">[<expr pos:start="61:63" pos:end="61:67"><name pos:start="61:63" pos:end="61:63">i</name> <operator pos:start="61:65" pos:end="61:65">-</operator> <literal type="number" pos:start="61:67" pos:end="61:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:25" pos:end="63:38"><block_content pos:start="63:25" pos:end="63:38">

			<goto pos:start="63:25" pos:end="63:38">goto <name pos:start="63:30" pos:end="63:37">badframe</name>;</goto></block_content></block></if></if_stmt>

	</block_content>}</block></for>



	<expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><call pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:24">setup_sigcontext</name><argument_list pos:start="69:25" pos:end="69:41">(<argument pos:start="69:26" pos:end="69:35"><expr pos:start="69:26" pos:end="69:35"><operator pos:start="69:26" pos:end="69:26">&amp;</operator><name pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:31">frame</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:35">sc</name></name></expr></argument>, <argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="73:9" pos:end="73:70">/* Move the stack and setup the arguments for the handler.  */</comment>

	<expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:11">env</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:17">regs</name><index pos:start="75:18" pos:end="75:23">[<expr pos:start="75:19" pos:end="75:22"><name pos:start="75:19" pos:end="75:22">R_SP</name></expr>]</index></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:36">frame_addr</name></expr>;</expr_stmt>

	<expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:17">regs</name><index pos:start="77:18" pos:end="77:21">[<expr pos:start="77:19" pos:end="77:20"><literal type="number" pos:start="77:19" pos:end="77:20">10</literal></expr>]</index></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:27">sig</name></expr>;</expr_stmt>

	<expr_stmt pos:start="79:9" pos:end="79:50"><expr pos:start="79:9" pos:end="79:49"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:11">env</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:15">pc</name></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <operator pos:start="79:19" pos:end="79:19">(</operator><name pos:start="79:20" pos:end="79:27">unsigned</name> <name pos:start="79:29" pos:end="79:32">long</name><operator pos:start="79:33" pos:end="79:33">)</operator> <name pos:start="79:35" pos:end="79:49"><name pos:start="79:35" pos:end="79:36">ka</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:49">_sa_handler</name></name></expr>;</expr_stmt>

	<comment type="block" pos:start="81:9" pos:end="81:68">/* Link SRP so the guest returns through the trampoline.  */</comment>

	<expr_stmt pos:start="83:9" pos:end="83:76"><expr pos:start="83:9" pos:end="83:75"><name pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:11">env</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:18">pregs</name><index pos:start="83:19" pos:end="83:26">[<expr pos:start="83:20" pos:end="83:25"><name pos:start="83:20" pos:end="83:25">PR_SRP</name></expr>]</index></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <name pos:start="83:30" pos:end="83:39">frame_addr</name> <operator pos:start="83:41" pos:end="83:41">+</operator> <call pos:start="83:43" pos:end="83:75"><name pos:start="83:43" pos:end="83:50">offsetof</name><argument_list pos:start="83:51" pos:end="83:75">(<argument pos:start="83:52" pos:end="83:65"><expr pos:start="83:52" pos:end="83:65"><call pos:start="83:52" pos:end="83:65"><name pos:start="83:52" pos:end="83:57">typeof</name><argument_list pos:start="83:58" pos:end="83:65">(<argument pos:start="83:59" pos:end="83:64"><expr pos:start="83:59" pos:end="83:64"><operator pos:start="83:59" pos:end="83:59">*</operator><name pos:start="83:60" pos:end="83:64">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:68" pos:end="83:74"><expr pos:start="83:68" pos:end="83:74"><name pos:start="83:68" pos:end="83:74">retcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:48"><call pos:start="87:9" pos:end="87:48"><name pos:start="87:9" pos:end="87:26">unlock_user_struct</name><argument_list pos:start="87:27" pos:end="87:48">(<argument pos:start="87:28" pos:end="87:32"><expr pos:start="87:28" pos:end="87:32"><name pos:start="87:28" pos:end="87:32">frame</name></expr></argument>, <argument pos:start="87:35" pos:end="87:44"><expr pos:start="87:35" pos:end="87:44"><name pos:start="87:35" pos:end="87:44">frame_addr</name></expr></argument>, <argument pos:start="87:47" pos:end="87:47"><expr pos:start="87:47" pos:end="87:47"><literal type="number" pos:start="87:47" pos:end="87:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="89:9" pos:end="89:15">return;</return>

  <label pos:start="91:3" pos:end="91:11"><name pos:start="91:3" pos:end="91:10">badframe</name>:</label>

	<expr_stmt pos:start="93:9" pos:end="93:49"><expr pos:start="93:9" pos:end="93:48"><call pos:start="93:9" pos:end="93:48"><name pos:start="93:9" pos:end="93:26">unlock_user_struct</name><argument_list pos:start="93:27" pos:end="93:48">(<argument pos:start="93:28" pos:end="93:32"><expr pos:start="93:28" pos:end="93:32"><name pos:start="93:28" pos:end="93:32">frame</name></expr></argument>, <argument pos:start="93:35" pos:end="93:44"><expr pos:start="93:35" pos:end="93:44"><name pos:start="93:35" pos:end="93:44">frame_addr</name></expr></argument>, <argument pos:start="93:47" pos:end="93:47"><expr pos:start="93:47" pos:end="93:47"><literal type="number" pos:start="93:47" pos:end="93:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><call pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:17">force_sig</name><argument_list pos:start="95:18" pos:end="95:33">(<argument pos:start="95:19" pos:end="95:32"><expr pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:32">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
